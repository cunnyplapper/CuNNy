// CuNNy 1x16 RCAS
// Copyright (c) 2024 cunnyplapper

// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public
// License along with this program.  If not, see <https://www.gnu.org/licenses/>.
/* ------------------------------------------------------------------- */

// FSR mpv | modified
// Copyright (c) 2021 Advanced Micro Devices, Inc. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// FidelityFX FSR v1.0.2 by AMD
// ported to mpv by agyild

//!DESC CuNNy-EASU
//!HOOK LUMA
//!BIND LUMA
//!SAVE easu
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
//!COMPONENTS 1

float APrxLoRcpF1(float a) {
	return uintBitsToFloat(uint(0x7ef07ebb) - floatBitsToUint(a));
}

float APrxLoRsqF1(float a) {
	return uintBitsToFloat(uint(0x5f347d74) - (floatBitsToUint(a) >> uint(1)));
}

float AMin3F1(float x, float y, float z) {
	return min(x, min(y, z));
}

float AMax3F1(float x, float y, float z) {
	return max(x, max(y, z));
}

void tap(inout float aC, inout float aW, vec2 off, vec2 dir, vec2 len,
         float lob, float clp, float c){
	vec2 v;
	v.x = (off.x * ( dir.x)) + (off.y * dir.y);
	v.y = (off.x * (-dir.y)) + (off.y * dir.x);
	v *= len;
	float d2 = v.x * v.x + v.y * v.y;
	d2 = min(d2, clp);
	float wB = float(2.0 / 5.0) * d2 + -1.0;
	float wA = lob * d2 + -1.0;
	wB *= wB;
	wA *= wA;
	wB = float(25.0 / 16.0) * wB + float(-(25.0 / 16.0 - 1.0));
	float w = wB * wA;
	aC += c * w;
	aW += w;
}

void set(inout vec2 dir, inout float len, vec2 pp, bool biS, bool biT,
         bool biU, bool biV, float lA, float lB, float lC, float lD, float lE){
	float w = 0.0;
	if (biS)
		w = (1.0 - pp.x) * (1.0 - pp.y);
	if (biT)
		w =        pp.x  * (1.0 - pp.y);
	if (biU)
		w = (1.0 - pp.x) *        pp.y;
	if (biV)
		w =        pp.x  *        pp.y;
	float dc = lD - lC;
	float cb = lC - lB;
	float lenX = max(abs(dc), abs(cb));
	lenX = APrxLoRcpF1(lenX);
	float dirX = lD - lB;
	lenX = clamp(abs(dirX) * lenX, 0.0, 1.0);
	lenX *= lenX;
	float ec = lE - lC;
	float ca = lC - lA;
	float lenY = max(abs(ec), abs(ca));
	lenY = APrxLoRcpF1(lenY);
	float dirY = lE - lA;
	lenY = clamp(abs(dirY) * lenY, 0.0, 1.0);
	lenY *= lenY;
	dir += vec2(dirX, dirY) * w;
	len += dot(vec2(w), vec2(lenX, lenY));
}

vec4 hook() {
	vec4 pix = vec4(0.0, 0.0, 0.0, 1.0);
	vec2 pp = LUMA_pos * LUMA_size - vec2(0.5);
	vec2 fp = floor(pp);
	pp -= fp;
#if (defined(LUMA_gather) && (__VERSION__ >= 400 || (GL_ES && __VERSION__ >= 310)))
	vec4 bczzL = LUMA_gather(vec2((fp + vec2(1.0, -1.0)) * LUMA_pt), 0);
	vec4 ijfeL = LUMA_gather(vec2((fp + vec2(0.0,  1.0)) * LUMA_pt), 0);
	vec4 klhgL = LUMA_gather(vec2((fp + vec2(2.0,  1.0)) * LUMA_pt), 0);
	vec4 zzonL = LUMA_gather(vec2((fp + vec2(1.0,  3.0)) * LUMA_pt), 0);
#else
	float b = LUMA_tex(vec2((fp + vec2(0.5, -0.5)) * LUMA_pt)).r;
	float c = LUMA_tex(vec2((fp + vec2(1.5, -0.5)) * LUMA_pt)).r;
	float e = LUMA_tex(vec2((fp + vec2(-0.5, 0.5)) * LUMA_pt)).r;
	float f = LUMA_tex(vec2((fp + vec2( 0.5, 0.5)) * LUMA_pt)).r;
	float g = LUMA_tex(vec2((fp + vec2( 1.5, 0.5)) * LUMA_pt)).r;
	float h = LUMA_tex(vec2((fp + vec2( 2.5, 0.5)) * LUMA_pt)).r;
	float i = LUMA_tex(vec2((fp + vec2(-0.5, 1.5)) * LUMA_pt)).r;
	float j = LUMA_tex(vec2((fp + vec2( 0.5, 1.5)) * LUMA_pt)).r;
	float k = LUMA_tex(vec2((fp + vec2( 1.5, 1.5)) * LUMA_pt)).r;
	float l = LUMA_tex(vec2((fp + vec2( 2.5, 1.5)) * LUMA_pt)).r;
	float n = LUMA_tex(vec2((fp + vec2(0.5, 2.5) ) * LUMA_pt)).r;
	float o = LUMA_tex(vec2((fp + vec2(1.5, 2.5) ) * LUMA_pt)).r;
	vec4 bczzL = vec4(b, c, 0.0, 0.0);
	vec4 ijfeL = vec4(i, j, f, e);
	vec4 klhgL = vec4(k, l, h, g);
	vec4 zzonL = vec4(0.0, 0.0, o, n);
#endif
	float bL = bczzL.x;
	float cL = bczzL.y;
	float iL = ijfeL.x;
	float jL = ijfeL.y;
	float fL = ijfeL.z;
	float eL = ijfeL.w;
	float kL = klhgL.x;
	float lL = klhgL.y;
	float hL = klhgL.z;
	float gL = klhgL.w;
	float oL = zzonL.z;
	float nL = zzonL.w;
	vec2 dir = vec2(0.0);
	float len = 0.0;
	set(dir, len, pp, true, false, false, false, bL, eL, fL, gL, jL);
	set(dir, len, pp, false, true, false, false, cL, fL, gL, hL, kL);
	set(dir, len, pp, false, false, true, false, fL, iL, jL, kL, nL);
	set(dir, len, pp, false, false, false, true, gL, jL, kL, lL, oL);
	vec2 dir2 = dir * dir;
	float dirR = dir2.x + dir2.y;
	bool zro = dirR < float(1.0 / 32768.0);
	dirR = APrxLoRsqF1(dirR);
	dirR = zro ? 1.0 : dirR;
	dir.x = zro ? 1.0 : dir.x;
	dir *= vec2(dirR);
	len = len * 0.5;
	len *= len;
	float stretch = (dir.x * dir.x + dir.y * dir.y) * APrxLoRcpF1(max(abs(dir.x), abs(dir.y)));
	vec2 len2 = vec2(1.0 + (stretch - 1.0) * len, 1.0 + -0.5 * len);
	float lob = 0.5 + float((1.0 / 4.0 - 0.04) - 0.5) * len;
	float clp = APrxLoRcpF1(lob);
	float aC = 0.0;
	float aW = 0.0;
	tap(aC, aW, vec2( 0.0,-1.0) - pp, dir, len2, lob, clp, bL);
	tap(aC, aW, vec2( 1.0,-1.0) - pp, dir, len2, lob, clp, cL);
	tap(aC, aW, vec2(-1.0, 1.0) - pp, dir, len2, lob, clp, iL);
	tap(aC, aW, vec2( 0.0, 1.0) - pp, dir, len2, lob, clp, jL);
	tap(aC, aW, vec2( 0.0, 0.0) - pp, dir, len2, lob, clp, fL);
	tap(aC, aW, vec2(-1.0, 0.0) - pp, dir, len2, lob, clp, eL);
	tap(aC, aW, vec2( 1.0, 1.0) - pp, dir, len2, lob, clp, kL);
	tap(aC, aW, vec2( 2.0, 1.0) - pp, dir, len2, lob, clp, lL);
	tap(aC, aW, vec2( 2.0, 0.0) - pp, dir, len2, lob, clp, hL);
	tap(aC, aW, vec2( 1.0, 0.0) - pp, dir, len2, lob, clp, gL);
	tap(aC, aW, vec2( 1.0, 2.0) - pp, dir, len2, lob, clp, oL);
	tap(aC, aW, vec2( 0.0, 2.0) - pp, dir, len2, lob, clp, nL);
	pix.r = aC / aW;
	float min1 = min(AMin3F1(fL, gL, jL), kL);
	float max1 = max(AMax3F1(fL, gL, jL), kL);
	pix.r = clamp(pix.r, min1, max1);
	pix.r = clamp(pix.r, 0.0, 1.0);
	return pix;
}

//!DESC CuNNy-RCAS
//!HOOK LUMA
//!BIND easu
//!SAVE rcas
//!WIDTH easu.w
//!HEIGHT easu.h
//!COMPONENTS 1

// CuNNy: do not change unless changed during training as well
#define SHARPNESS 2.0
#define FSR_RCAS_LIMIT (0.25 - (1.0 / 16.0))

float APrxMedRcpF1(float a) {
	float b = uintBitsToFloat(uint(0x7ef19fff) - floatBitsToUint(a));
	return b * (-b * a + 2.0);
}

float AMax3F1(float x, float y, float z) {
	return max(x, max(y, z)); 
}


float AMin3F1(float x, float y, float z) {
	return min(x, min(y, z));
}

vec4 hook() {
#if (defined(easu_gather) && (__VERSION__ >= 400 || (GL_ES && __VERSION__ >= 310)))
	vec3 bde = easu_gather(easu_pos + easu_pt * vec2(-0.5), 0).xyz;
	float b = bde.z;
	float d = bde.x;
	float e = bde.y;
	vec2 fh = easu_gather(easu_pos + easu_pt * vec2(0.5), 0).zx;
	float f = fh.x;
	float h = fh.y;
#else
	float b = easu_texOff(vec2( 0.0, -1.0)).r;
	float d = easu_texOff(vec2(-1.0,  0.0)).r;
	float e = easu_tex(easu_pos).r;
	float f = easu_texOff(vec2(1.0, 0.0)).r;
	float h = easu_texOff(vec2(0.0, 1.0)).r;
#endif
	float mn1L = min(AMin3F1(b, d, f), h);
	float mx1L = max(AMax3F1(b, d, f), h);
	vec2 peakC = vec2(1.0, -1.0 * 4.0);
	float hitMinL = min(mn1L, e) / (4.0 * mx1L);
	float hitMaxL = (peakC.x - max(mx1L, e)) / (4.0 * mn1L + peakC.y);
	float lobeL = max(-hitMinL, hitMaxL);
	float lobe = max(float(-FSR_RCAS_LIMIT), min(lobeL, 0.0)) * exp2(-clamp(float(SHARPNESS), 0.0, 2.0));
	float nz = 0.25 * b + 0.25 * d + 0.25 * f + 0.25 * h - e;
	nz = clamp(abs(nz) * APrxMedRcpF1(AMax3F1(AMax3F1(b, d, e), f, h) - AMin3F1(AMin3F1(b, d, e), f, h)), 0.0, 1.0);
	nz = -0.5 * nz + 1.0;
	lobe *= nz;
	float rcpL = APrxMedRcpF1(4.0 * lobe + 1.0);
	vec4 pix = vec4(0.0, 0.0, 0.0, 1.0);
	pix.r = float((lobe * b + lobe * d + lobe * h + lobe * f + e) * rcpL);
	return pix;
}

//!DESC CuNNy-1x16-up:0
//!HOOK LUMA
//!BIND LUMA
//!SAVE up_0
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define l0(x, y) LUMA_texOff(vec2(x, y)).r
vec4 hook() {
	vec4 r = vec4(0.0);
	r += vec4(-0.06213361397385597, -0.012694502249360085, 0.03247145935893059, 0.2953594923019409) * l0(-1.0, -1.0);
	r += vec4(0.1662512570619583, 0.017661260440945625, 0.22412268817424774, 0.08081017434597015) * l0(0.0, -1.0);
	r += vec4(-0.0768953263759613, -0.010534427128732204, 0.04654167965054512, -0.07408007979393005) * l0(1.0, -1.0);
	r += vec4(-0.19580088555812836, 0.017014456912875175, 0.04931347072124481, 0.016678698360919952) * l0(-1.0, 0.0);
	r += vec4(0.3884081244468689, -0.4111328125, -0.569516658782959, -0.1370103508234024) * l0(0.0, 0.0);
	r += vec4(-0.20556646585464478, 0.41540300846099854, 0.0739452987909317, 0.04573561251163483) * l0(1.0, 0.0);
	r += vec4(-0.014734961092472076, 0.00654640095308423, 0.024001460522413254, -0.2928014397621155) * l0(-1.0, 1.0);
	r += vec4(-0.04022397845983505, -0.035255953669548035, 0.0733516663312912, 0.020616989582777023) * l0(0.0, 1.0);
	r += vec4(0.0378265343606472, 0.016984807327389717, 0.02723289467394352, 0.047915711998939514) * l0(1.0, 1.0);
	r += vec4(-0.014378292486071587, 0.001562220510095358, -0.007965527474880219, -0.0025828182697296143);
	return max(r, 0.0);
}

//!DESC CuNNy-1x16-up:1
//!HOOK LUMA
//!BIND LUMA
//!SAVE up_1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define l0(x, y) LUMA_texOff(vec2(x, y)).r
vec4 hook() {
	vec4 r = vec4(0.0);
	r += vec4(-0.23890577256679535, -0.02137802168726921, 0.11426064372062683, -0.056748297065496445) * l0(-1.0, -1.0);
	r += vec4(0.031372133642435074, 0.03916091099381447, 0.3780064582824707, -0.06625057011842728) * l0(0.0, -1.0);
	r += vec4(0.04110461473464966, 0.0011528261238709092, -0.02928866446018219, 0.1203613206744194) * l0(1.0, -1.0);
	r += vec4(0.3954695761203766, 0.06769774854183197, -0.15791207551956177, -0.2646483778953552) * l0(-1.0, 0.0);
	r += vec4(0.05323813110589981, -0.43735170364379883, -0.3060232996940613, 9.017439879244193e-05) * l0(0.0, 0.0);
	r += vec4(-0.08043666929006577, 0.07589367032051086, 0.004943813197314739, 0.2837787866592407) * l0(1.0, 0.0);
	r += vec4(-0.1887722909450531, 0.2720106542110443, -0.002109578810632229, 0.1640128195285797) * l0(-1.0, 1.0);
	r += vec4(-0.059978969395160675, -0.0028707031160593033, 0.006976310629397631, -0.03060833550989628) * l0(0.0, 1.0);
	r += vec4(0.03551777824759483, -0.01646684668958187, -0.0026395688764750957, -0.14445745944976807) * l0(1.0, 1.0);
	r += vec4(0.006261308677494526, -0.02032480388879776, 0.0008180693257600069, -0.0027430804912000895);
	return max(r, 0.0);
}

//!DESC CuNNy-1x16-up:2
//!HOOK LUMA
//!BIND LUMA
//!SAVE up_2
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define l0(x, y) LUMA_texOff(vec2(x, y)).r
vec4 hook() {
	vec4 r = vec4(0.0);
	r += vec4(0.007282450329512358, 0.011749940924346447, -0.12460320442914963, -0.1902974545955658) * l0(-1.0, -1.0);
	r += vec4(0.09057815372943878, -0.038881704211235046, 0.01831100508570671, -0.1479492038488388) * l0(0.0, -1.0);
	r += vec4(0.05750952661037445, 0.014568221755325794, 0.11498870700597763, 0.06761343032121658) * l0(1.0, -1.0);
	r += vec4(0.0979229137301445, -0.0463368184864521, 0.2732994556427002, -0.015425393357872963) * l0(-1.0, 0.0);
	r += vec4(-0.8913711905479431, 0.44433972239494324, -0.07836921513080597, -0.11010898649692535) * l0(0.0, 0.0);
	r += vec4(0.05007017403841019, -0.03991694375872612, -0.20330923795700073, 0.05701953545212746) * l0(1.0, 0.0);
	r += vec4(0.016402387991547585, 0.018371455371379852, 0.17919911444187164, 0.2131073921918869) * l0(-1.0, 1.0);
	r += vec4(0.09007126092910767, -0.046882856637239456, -0.06573224812746048, 0.26630866527557373) * l0(0.0, 1.0);
	r += vec4(0.026183398440480232, 0.015219107270240784, -0.10960397124290466, -0.13647691905498505) * l0(1.0, 1.0);
	r += vec4(0.008206131868064404, -0.32883405685424805, -0.0025105520617216825, -0.0031626697164028883);
	return max(r, 0.0);
}

//!DESC CuNNy-1x16-up:3
//!HOOK LUMA
//!BIND LUMA
//!SAVE up_3
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define l0(x, y) LUMA_texOff(vec2(x, y)).r
vec4 hook() {
	vec4 r = vec4(0.0);
	r += vec4(0.09731130301952362, -0.015169062651693821, 0.004617777187377214, -0.005163214635103941) * l0(-1.0, -1.0);
	r += vec4(-0.1254887729883194, 0.0178527794778347, -0.015493876300752163, 0.2937586307525635) * l0(0.0, -1.0);
	r += vec4(0.03189065679907799, -0.0028546166140586138, 0.005700296256691217, 0.002039861399680376) * l0(1.0, -1.0);
	r += vec4(0.11596661806106567, 0.3935546576976776, -0.0054424782283604145, 0.04673505201935768) * l0(-1.0, 0.0);
	r += vec4(-0.494933545589447, -0.3888835608959198, -0.3659137487411499, -0.4527266323566437) * l0(0.0, 0.0);
	r += vec4(0.13424038887023926, -0.005282382480800152, 0.003369464771822095, 0.09887758642435074) * l0(1.0, 0.0);
	r += vec4(0.009693266823887825, 0.00813022069633007, 0.001445959904231131, 0.0091257244348526) * l0(-1.0, 1.0);
	r += vec4(0.18656150996685028, -0.014063303358852863, 0.3818359076976776, 0.005901113618165255) * l0(0.0, 1.0);
	r += vec4(0.03325178474187851, 0.009250479750335217, -0.010025832802057266, -0.02146800234913826) * l0(1.0, 1.0);
	r += vec4(0.02093505859375, 0.00012100582534912974, -0.0009917065035551786, 0.03876589983701706);
	return max(r, 0.0);
}

//!DESC CuNNy-1x16-conv1:0
//!HOOK LUMA
//!BIND up_0
//!BIND up_1
//!BIND up_2
//!BIND up_3
//!SAVE conv1_0
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define l0(x, y) up_0_texOff(vec2(x, y))
#define l1(x, y) up_1_texOff(vec2(x, y))
#define l2(x, y) up_2_texOff(vec2(x, y))
#define l3(x, y) up_3_texOff(vec2(x, y))
vec4 hook() {
	vec4 r = vec4(0.0);
	r += mat4(-0.09955192357301712, 0.13808056712150574, -0.014725646004080772, -0.06098613142967224, -0.08043640106916428, 0.039575643837451935, -0.03806363418698311, -0.07287771254777908, 0.1568317860364914, 0.10400839895009995, -0.0271359421312809, -0.2744126319885254, 0.06059706583619118, -0.03852434828877449, -0.009474191814661026, -0.19482429325580597) * l0(-1.0, -1.0);
	r += mat4(-0.13778485357761383, 0.01676660031080246, 0.14012989401817322, 0.08375199884176254, 0.3554495573043823, -0.052238304167985916, 0.01937473565340042, 0.3480595648288727, -0.3463113307952881, -1.5155586004257202, 0.06598490476608276, -0.12204237282276154, 0.11999990046024323, -0.010533604770898819, 0.004222489427775145, -0.20062454044818878) * l0(0.0, -1.0);
	r += mat4(-0.011405314318835735, 0.11308325082063675, 0.11162526905536652, 0.0347687304019928, -0.08281257003545761, -0.038365788757801056, 0.09426355361938477, -0.02980455756187439, 0.3696690797805786, 0.25743532180786133, -0.11278823018074036, -0.10382886230945587, 0.2673046588897705, 0.3537273705005646, -0.015699276700615883, -0.0048931860364973545) * l0(1.0, -1.0);
	r += mat4(-0.012794447131454945, 0.29199063777923584, 0.006574743427336216, -0.19443045556545258, -0.43012624979019165, -0.23443947732448578, 0.012260344810783863, 0.12010407447814941, -0.22014552354812622, -0.16214634478092194, -0.09334135055541992, -0.10616269707679749, -0.13430017232894897, 0.278020441532135, -0.01504207868129015, -0.06167563050985336) * l0(-1.0, 0.0);
	r += mat4(0.029127076268196106, 0.41693028807640076, -0.17235811054706573, -0.08667203783988953, 0.37746381759643555, -0.021422384306788445, 0.5794190764427185, 0.6855469942092896, -0.6187344193458557, -0.7011718153953552, -0.12426654249429703, -0.2721605896949768, 0.05169905349612236, 0.146592378616333, -0.07836940139532089, -0.03079124167561531) * l0(0.0, 0.0);
	r += mat4(-0.11370153725147247, 0.037619441747665405, -0.30333980917930603, -0.20459522306919098, -0.2411116659641266, 0.03957780823111534, -0.6579619646072388, 0.005341864190995693, 0.23390068113803864, -0.20482668280601501, -0.45142030715942383, -0.1680324673652649, 0.07719554752111435, -0.18267099559307098, -0.025994913652539253, -0.4719080924987793) * l0(1.0, 0.0);
	r += mat4(0.10238345712423325, -0.3119974136352539, 0.011569678783416748, 0.23023264110088348, 0.17829148471355438, 0.08824920654296875, 0.018996048718690872, -0.017448578029870987, -0.13017529249191284, 0.003520891536027193, -0.007962442934513092, 0.34429314732551575, -0.09608521312475204, -0.10193575918674469, 0.007182506378740072, -0.04420419782400131) * l0(-1.0, 1.0);
	r += mat4(0.18856005370616913, -0.5062620639801025, 0.11792027205228806, 0.04972924292087555, -0.036915186792612076, 0.14591261744499207, -0.21438226103782654, -0.0020325714722275734, -0.09461478888988495, 0.05774369835853577, 0.11294909566640854, 0.15914560854434967, 0.19134171307086945, -0.14891047775745392, 0.02490183338522911, -0.15881967544555664) * l0(0.0, 1.0);
	r += mat4(-0.04510243237018585, -0.11115269362926483, 0.05822189524769783, 0.2737007141113281, -0.05672893300652504, -0.06619290262460709, -0.2605861723423004, 0.02857348695397377, 0.28695350885391235, 0.10128080099821091, -0.03821710869669914, 0.022660644724965096, 0.164499893784523, -0.06287163496017456, -0.0673203319311142, -0.03282814100384712) * l0(1.0, 1.0);
	r += mat4(-0.02792475000023842, -0.06753700971603394, -0.021140489727258682, -0.13538719713687897, 0.024584056809544563, -0.06099747493863106, -0.02156616933643818, 0.08040773123502731, -0.11667494475841522, -0.28027215600013733, 0.03870994970202446, 0.25679144263267517, 0.21983756124973297, 0.04952031373977661, 0.007210758980363607, -0.008645543828606606) * l1(-1.0, -1.0);
	r += mat4(0.12163659930229187, -0.034038860350847244, 0.04059882089495659, -0.11436966061592102, 0.07280176132917404, 0.054754626005887985, -0.012346484698355198, -0.16822607815265656, 0.08255551755428314, -0.5832842588424683, -0.03184700757265091, -0.009551823139190674, 0.009578683413565159, 0.252930223941803, 0.006232577376067638, -0.10246224701404572) * l1(0.0, -1.0);
	r += mat4(0.5180976986885071, 0.2323952466249466, 0.0943332090973854, 0.41402649879455566, 0.010268240235745907, 0.08346322178840637, 0.24813184142112732, 0.0687074139714241, -0.22807428240776062, -0.3309870958328247, 0.08872353285551071, 0.14436745643615723, -0.026636142283678055, 0.13893544673919678, -0.10644899308681488, 0.059449706226587296) * l1(1.0, -1.0);
	r += mat4(-0.1012246236205101, -0.019594095647335052, -0.01765751838684082, -0.11648929119110107, -0.37022343277931213, 0.02821461670100689, -0.004358137026429176, 0.35781949758529663, 0.01716785505414009, 0.023502308875322342, 0.0567391961812973, 0.373571515083313, -0.05564258620142937, -0.0881054624915123, -0.011167380027472973, -0.13201996684074402) * l1(-1.0, 0.0);
	r += mat4(-0.3669147193431854, -0.2707858681678772, -0.13900399208068848, 0.08323030918836594, 0.23387666046619415, 0.021353639662265778, -0.0033794003538787365, -0.3623076379299164, -0.08061807602643967, 0.4348689317703247, 0.09400879591703415, 0.06866277009248734, -0.0677075907588005, -0.28803712129592896, -0.08181628584861755, -0.38156431913375854) * l1(0.0, 0.0);
	r += mat4(0.2900383174419403, -0.03226948156952858, 0.2402907907962799, 0.25557225942611694, -0.11894787847995758, 0.06734789162874222, 0.014620876871049404, 0.10447462648153305, -0.15417441725730896, 0.07064175605773926, 0.22169190645217896, 0.08507975935935974, -0.12910832464694977, -0.06312447041273117, 0.24597500264644623, -0.07056061178445816) * l1(1.0, 0.0);
	r += mat4(0.02021181769669056, 0.14599540829658508, 0.009959293529391289, 0.05603544041514397, -0.014098539017140865, -0.05546637997031212, 0.027461329475045204, -0.11823661625385284, 0.22120186686515808, 0.12408285588026047, 0.024107661098241806, -0.0327853187918663, -0.13720683753490448, -0.13523736596107483, -0.005209198221564293, -0.018738839775323868) * l1(-1.0, 1.0);
	r += mat4(-0.24391880631446838, 0.24078603088855743, 0.003965914249420166, 0.20318645238876343, -0.0915859118103981, -0.2350073605775833, -0.037474535405635834, -0.078468456864357, -0.590829074382782, -0.16880163550376892, 0.015484129078686237, -0.1356014907360077, 0.004844993352890015, -0.0366961732506752, -0.010398649610579014, -0.34901466965675354) * l1(0.0, 1.0);
	r += mat4(-0.030978715047240257, 0.0713115930557251, -0.039682526141405106, -0.04157796874642372, -0.2169700711965561, 0.04142065346240997, 0.07444043457508087, -0.05634693056344986, -0.1521628499031067, 0.4165472686290741, 0.2601974308490753, -0.20802997052669525, -0.09624142944812775, -0.08079110831022263, -0.11159741878509521, 0.03971649333834648) * l1(1.0, 1.0);
	r += mat4(0.1403648555278778, 0.18271179497241974, 0.002653906587511301, -0.06804731488227844, 0.8353375792503357, -0.11749551445245743, -0.08376529812812805, -0.02062365598976612, 0.03799283504486084, 0.009623930789530277, -0.007991144433617592, 0.2475561648607254, -0.02620694786310196, 0.06259457021951675, 0.048424553126096725, 0.1389976292848587) * l2(-1.0, -1.0);
	r += mat4(-0.14664757251739502, -0.48211386799812317, 0.1196017786860466, -0.09034412354230881, 0.5270030498504639, 1.1895215511322021, -0.48528486490249634, 0.1816621869802475, -0.25046494603157043, -0.42076343297958374, 0.004961226135492325, 0.033304810523986816, -0.21694432199001312, -0.04144361987709999, -0.13720621168613434, -0.06935010850429535) * l2(0.0, -1.0);
	r += mat4(-0.13297809660434723, -0.02134435810148716, 0.003965970128774643, -0.0016940839122980833, 0.16792529821395874, 0.4725014567375183, 0.7225691676139832, 0.37930285930633545, -0.029722480103373528, -0.15481999516487122, -0.04969093203544617, 0.010066214017570019, -0.19582462310791016, -0.14931020140647888, 0.0019074776209890842, -0.1985965371131897) * l2(1.0, -1.0);
	r += mat4(-0.08017334342002869, -0.14607472717761993, 0.05572344735264778, -0.7851492166519165, -4.172725200653076, 0.01361547876149416, -0.09677807241678238, 0.9037464261054993, -0.1920766979455948, -0.11694297194480896, 0.018981587141752243, 0.11292652785778046, -0.00901755876839161, -0.3033462464809418, -0.0040388996712863445, 0.1788841336965561) * l2(-1.0, 0.0);
	r += mat4(-0.46588754653930664, -0.572238028049469, -0.1535828709602356, -0.7753672003746033, -8.232672691345215, -9.629410743713379, -0.14036861062049866, -5.06184720993042, -0.15271000564098358, -0.49087807536125183, 0.06638120859861374, -0.1481526643037796, -0.6449583172798157, -0.5173822045326233, 0.08191923052072525, -0.22709408402442932) * l2(0.0, 0.0);
	r += mat4(-0.29027724266052246, 0.10688167810440063, -0.5886951088905334, 0.016490576788783073, 0.7069712281227112, 0.10433701425790787, 1.5067716836929321, -4.007122993469238, 0.19843043386936188, 0.02659762278199196, 0.008786593563854694, -0.06538887321949005, -0.19976256787776947, -0.16838189959526062, -0.16162139177322388, -0.15969324111938477) * l2(1.0, 0.0);
	r += mat4(-0.11116426438093185, 0.027116457000374794, 0.0195086020976305, 0.12978918850421906, 0.21946129202842712, 0.23810724914073944, -0.045515820384025574, 0.09948340058326721, 0.0422726571559906, 0.011753699742257595, -0.016789941117167473, -0.05312372371554375, -0.29833701252937317, 0.11142099648714066, 0.013312219642102718, 0.24256184697151184) * l2(-1.0, 1.0);
	r += mat4(0.18840987980365753, 0.058158449828624725, 0.01355517003685236, 0.06622413545846939, 0.463081032037735, -2.071385383605957, 0.19508467614650726, 0.208232119679451, 0.11684180796146393, 0.17295467853546143, 0.019038917496800423, -0.020424989983439445, -0.3739769160747528, 0.19676899909973145, -0.014012635685503483, 0.09390491247177124) * l2(0.0, 1.0);
	r += mat4(0.2539669871330261, 0.006859293673187494, 0.14947037398815155, 0.0070687090046703815, -2.699343204498291, 0.5446028709411621, 1.1399173736572266, 0.2806142568588257, 0.11838361620903015, 0.054509736597537994, -0.04400027170777321, 0.03848813846707344, 0.13933518528938293, 0.06591938436031342, 0.07661282271146774, -0.13519695401191711) * l2(1.0, 1.0);
	r += mat4(0.15488436818122864, 0.06088893488049507, -0.00019159405201207846, 0.0751890167593956, -0.1528339982032776, -0.2724612057209015, 0.015379760414361954, -0.603987455368042, 0.2607317268848419, 0.30796828866004944, 0.07694131880998611, -0.24561716616153717, -0.18643921613693237, 0.2752948999404907, -0.037592798471450806, 0.17615680396556854) * l3(-1.0, -1.0);
	r += mat4(0.10026444494724274, -0.05253055319190025, -0.0760718360543251, -0.08641159534454346, 0.17074239253997803, -0.2647545039653778, 0.011590699665248394, 0.1650136560201645, 0.4892638027667999, 0.6074280142784119, 0.24202461540699005, 0.26468825340270996, -0.007041840348392725, -0.10287226736545563, 0.0030186858493834734, -0.12434088438749313) * l3(0.0, -1.0);
	r += mat4(0.29430848360061646, -0.17825479805469513, -0.13814672827720642, 0.18116509914398193, -0.2475566267967224, -0.008392557501792908, 0.2310229390859604, -0.1500072032213211, -0.2803797125816345, 0.10954277962446213, 0.28683021664619446, 0.022868968546390533, 0.024157216772437096, 0.06572754681110382, -0.027646271511912346, -0.04445908963680267) * l3(1.0, -1.0);
	r += mat4(0.007569747976958752, -0.30356329679489136, 0.05101398006081581, -0.6561564207077026, 0.3151260018348694, 0.12143750488758087, -0.009594306349754333, -0.9902055263519287, 0.5012476444244385, 0.057278238236904144, 0.017580952495336533, -0.28697842359542847, 0.14174878597259521, -0.04634823277592659, 0.12063915282487869, 0.1612953543663025) * l3(-1.0, 0.0);
	r += mat4(-0.10836967825889587, -0.18219052255153656, -0.16403591632843018, -0.5300112366676331, 0.11015979200601578, 0.6233185529708862, 0.2208065390586853, 0.7884072065353394, 0.939582109451294, 0.6541337370872498, 0.07735216617584229, 0.512421727180481, -0.30821502208709717, -0.1323532909154892, 0.020308690145611763, -0.31649455428123474) * l3(0.0, 0.0);
	r += mat4(0.04066619277000427, -0.08348863571882248, -0.2840552031993866, 0.014300558716058731, 0.04699975997209549, 0.2278718501329422, 0.2821054756641388, -0.08877391368150711, -0.4384777247905731, -0.026670988649129868, -0.4832347333431244, 0.2529292404651642, 0.009886141866445541, 0.20352447032928467, -0.07231958955526352, 0.1819242238998413) * l3(1.0, 0.0);
	r += mat4(-0.030573084950447083, 0.14029046893119812, -0.00916685163974762, -0.0932672992348671, 0.2797098755836487, 0.15476256608963013, -0.01375771127641201, -0.29583343863487244, 0.5161945819854736, -0.15458476543426514, -0.02868429571390152, -0.19987362623214722, -0.06092687323689461, 0.016521722078323364, -0.04429171234369278, 0.1893087476491928) * l3(-1.0, 1.0);
	r += mat4(0.24471446871757507, 0.254453182220459, 0.07670306414365768, -0.12859602272510529, -0.27417659759521484, 0.369058221578598, -0.1535194367170334, 0.20338432490825653, -0.023270221427083015, -0.21712781488895416, -0.0523936003446579, 0.11160335689783096, -0.10127793997526169, -0.05408391356468201, 0.09015093743801117, 0.030470924451947212) * l3(0.0, 1.0);
	r += mat4(0.024821830913424492, 0.2885516881942749, 0.10943435877561569, -0.031071119010448456, -0.15862472355365753, -0.16554924845695496, -0.30646252632141113, 0.10293542593717575, -0.27999648451805115, -0.26541516184806824, -0.09984307736158371, 0.06283050775527954, 0.05832450091838837, -0.29529479146003723, 0.4388609826564789, 0.17918336391448975) * l3(1.0, 1.0);
	r += vec4(-0.019593169912695885, -0.01776118576526642, -0.017003078013658524, -0.01947031170129776);
	return max(r, 0.0);
}

//!DESC CuNNy-1x16-conv1:1
//!HOOK LUMA
//!BIND up_0
//!BIND up_1
//!BIND up_2
//!BIND up_3
//!SAVE conv1_1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define l0(x, y) up_0_texOff(vec2(x, y))
#define l1(x, y) up_1_texOff(vec2(x, y))
#define l2(x, y) up_2_texOff(vec2(x, y))
#define l3(x, y) up_3_texOff(vec2(x, y))
vec4 hook() {
	vec4 r = vec4(0.0);
	r += mat4(-0.10179970413446426, -0.06939893215894699, 0.0952884703874588, 0.021895045414566994, -0.13710996508598328, 0.08648096024990082, -0.2476782351732254, 0.168039008975029, 0.04121638089418411, 0.06605350971221924, 0.06014520674943924, -0.03422108665108681, -0.1606568843126297, 0.0049898456782102585, 0.05039641633629799, 0.06518565118312836) * l0(-1.0, -1.0);
	r += mat4(0.08262863010168076, -0.006253919564187527, -0.2446289211511612, 0.12035133689641953, 0.18678151071071625, -0.3122572898864746, -0.4724263548851013, -0.06812091916799545, -0.15508043766021729, -0.01721734181046486, -0.19286946952342987, 0.11660092324018478, 0.11791963130235672, 0.011735435575246811, -0.04108412563800812, -0.08634373545646667) * l0(0.0, -1.0);
	r += mat4(-0.018273795023560524, 0.00982285663485527, 0.1734129637479782, -0.05341828241944313, -0.25089743733406067, 0.021506618708372116, -0.22510528564453125, -0.10738898068666458, -0.05532561242580414, -0.040696315467357635, -0.11019629240036011, -0.06668967008590698, 0.21356245875358582, 0.06078069657087326, 0.3472275733947754, 0.038630589842796326) * l0(1.0, -1.0);
	r += mat4(-0.06812596321105957, -0.02449382096529007, -0.0858822613954544, -0.016684168949723244, -0.06867579370737076, 0.020510900765657425, -0.1270790547132492, -0.42480841279029846, -0.10867902636528015, 0.04304645210504532, -0.13616780936717987, -0.0015533631667494774, -0.16747638583183289, 0.010277612134814262, 0.017859209328889847, 0.08977709710597992) * l0(-1.0, 0.0);
	r += mat4(0.280754029750824, -0.051050711423158646, 0.1194375529885292, -0.4365236461162567, 0.4468837082386017, 0.029348621144890785, 0.3699723780155182, 0.35627222061157227, -0.4443342387676239, 0.0673624649643898, -0.2115049511194229, -0.23487864434719086, 0.021509593352675438, 0.09176644682884216, -0.03778713569045067, 0.029983557760715485) * l0(0.0, 0.0);
	r += mat4(-0.09608274698257446, -0.03128470480442047, 0.1245911493897438, 0.15481190383434296, -0.7998479008674622, -0.011497238650918007, 0.0034386292099952698, -0.06570793688297272, -0.21179769933223724, 0.07772430032491684, -0.2662586271762848, 0.33931174874305725, -0.23724141716957092, -0.04358983784914017, 0.007047290913760662, -0.1800488978624344) * l0(1.0, 0.0);
	r += mat4(0.23924869298934937, -0.023095395416021347, -0.04300086200237274, -0.14783018827438354, 0.2743705213069916, -0.012913187965750694, -0.09291869401931763, -0.12731929123401642, 0.06535046547651291, 0.02680704928934574, -0.0690276026725769, -0.20425759255886078, -0.08032528311014175, -0.03020789846777916, -0.03293858841061592, 0.06494919955730438) * l0(-1.0, 1.0);
	r += mat4(-0.1254676878452301, 0.022546326741576195, -0.10329097509384155, 0.1542823612689972, 0.48761165142059326, -0.032613903284072876, -0.0074460916221141815, -0.04817553982138634, -0.22852842509746552, 0.03534172475337982, -0.27046850323677063, -0.06981673836708069, -0.20891262590885162, -0.033122312277555466, -0.1586914211511612, -0.11688849329948425) * l0(0.0, 1.0);
	r += mat4(0.14251048862934113, -0.04095565527677536, 0.18147516250610352, -0.1150035411119461, -0.23664382100105286, -0.003253679256886244, 0.03773745894432068, 0.04187396541237831, 0.29140955209732056, 0.04044867679476738, 0.13109655678272247, -0.12937620282173157, -0.22313742339611053, -0.025497205555438995, -0.09873000532388687, -0.150448739528656) * l0(1.0, 1.0);
	r += mat4(-0.014231553301215172, -0.02463001012802124, -0.09716707468032837, -0.026728946715593338, -0.07129557430744171, 0.051149915903806686, 0.015593018382787704, -0.002626650733873248, 0.1447007805109024, -0.146773099899292, -0.2461969256401062, -0.05040450394153595, 0.004043177701532841, -0.02014978416264057, 0.1259714812040329, -0.04113747924566269) * l1(-1.0, -1.0);
	r += mat4(0.0867716372013092, 0.006220581475645304, -0.0986594557762146, -0.06849894672632217, 0.10733383893966675, 0.09230364859104156, 0.1316758394241333, -0.08590854704380035, -0.16648703813552856, -0.2877216637134552, -0.3695314824581146, 0.09623757004737854, -0.06402143090963364, -0.005680033005774021, 0.12178658694028854, -0.01436405349522829) * l1(0.0, -1.0);
	r += mat4(0.2821698784828186, -0.03638920560479164, -0.1522120237350464, -0.028992893174290657, 0.18819499015808105, 0.16194723546504974, -0.23778526484966278, 0.2509942948818207, -0.018201136961579323, 0.01153930276632309, -0.4796833097934723, -0.02095082588493824, -0.04285852611064911, -0.002103526843711734, 0.31574466824531555, 0.060631003230810165) * l1(1.0, -1.0);
	r += mat4(-0.015747949481010437, 0.008215987123548985, -0.050729669630527496, 0.06645011156797409, -0.1830141842365265, 0.04522942751646042, -0.008089565671980381, -0.04865649342536926, 0.20455361902713776, -0.05328524485230446, 0.0518844798207283, 0.04065292701125145, -0.20331616699695587, 0.05290761962532997, -0.0001778146979631856, 0.10959528386592865) * l1(-1.0, 0.0);
	r += mat4(-0.07249037176370621, 0.12814337015151978, -0.04699273034930229, -0.028211941942572594, -0.1881973296403885, -0.05276964604854584, 0.031879544258117676, 0.3412422239780426, 0.0595044270157814, -0.10256067663431168, 0.3768543601036072, 0.20029069483280182, -0.2616468369960785, 0.06529615074396133, -0.24457429349422455, 0.6231691837310791) * l1(0.0, 0.0);
	r += mat4(0.3562677800655365, -0.05100246146321297, 0.11579911410808563, -0.4673888683319092, -0.13916181027889252, 0.10275246202945709, 0.0542321540415287, -0.12406276911497116, 0.3624025285243988, -0.016717934980988503, -0.5646267533302307, -0.018007230013608932, 0.11540945619344711, 0.03629095479846001, 0.1361965835094452, 0.0390474796295166) * l1(1.0, 0.0);
	r += mat4(0.05968315899372101, -0.006050079595297575, 0.028351690620183945, -0.07735708355903625, -0.025613121688365936, -0.00498318811878562, -0.05323287844657898, 0.10429148375988007, 0.008753262460231781, -0.07801849395036697, 0.2745974063873291, -0.014346078038215637, -0.06148814409971237, -0.03868738189339638, -0.013785483315587044, 0.16750679910182953) * l1(-1.0, 1.0);
	r += mat4(-0.033588144928216934, -0.011046036146581173, 0.16537277400493622, 0.13916008174419403, 0.08683686703443527, 0.012273086234927177, 0.14808978140354156, -0.0738229900598526, -0.1008814200758934, -0.11119820177555084, 0.18319128453731537, -0.7296285629272461, -0.20249690115451813, -0.07998477667570114, -0.052551984786987305, -0.18017470836639404) * l1(0.0, 1.0);
	r += mat4(0.26464617252349854, -0.05442153289914131, 0.08158022165298462, 0.14208918809890747, 0.0608978271484375, 0.018109643831849098, -0.3316623270511627, -0.0134933115914464, -0.19510310888290405, -0.06089594587683678, 0.009374895133078098, -0.6420488953590393, 0.12132187932729721, -0.05779288336634636, -0.0231804009526968, -0.04544420540332794) * l1(1.0, 1.0);
	r += mat4(-0.0007602167897857726, 0.1569352000951767, -0.03882981836795807, -0.03419511765241623, 0.4511962831020355, -0.051244135946035385, 0.474673330783844, 0.2762799859046936, 0.05310312658548355, -0.009844413958489895, -0.022162288427352905, -0.03959685564041138, 0.06181613728404045, 0.026644131168723106, -0.022401636466383934, 0.028505263850092888) * l2(-1.0, -1.0);
	r += mat4(0.07722125202417374, -0.33108097314834595, 0.2085176706314087, 0.0658513680100441, 0.685672402381897, 0.10305115580558777, -0.5855317115783691, -0.13575126230716705, -0.2366340309381485, 0.04056181758642197, -0.0993545651435852, 0.2309887409210205, -0.2085713893175125, -0.1068926677107811, 0.07517311722040176, -0.03928076848387718) * l2(0.0, -1.0);
	r += mat4(-0.035683006048202515, -0.28362077474594116, 0.14794254302978516, 0.04060420021414757, -0.06271674484014511, -0.13453376293182373, 0.016106411814689636, 0.12203577905893326, -0.028057178482413292, -0.038060545921325684, -0.43693068623542786, 0.01013422105461359, -0.07839544862508774, 0.0876852497458458, -0.2253182977437973, 0.07983416318893433) * l2(1.0, -1.0);
	r += mat4(0.07937543839216232, 0.1227446049451828, 0.06659013777971268, -0.0052574025467038155, -4.266663074493408, 0.028188742697238922, -0.2197462022304535, -0.2598601281642914, 0.20146095752716064, -0.006346669048070908, -0.15477831661701202, -0.20761051774024963, 0.1704075187444687, 0.04003411531448364, -0.014649689197540283, -0.010513167828321457) * l2(-1.0, 0.0);
	r += mat4(-0.5770214200019836, 0.19407637417316437, -0.19989140331745148, 0.3719646632671356, -6.2334513664245605, 0.005603455938398838, -1.7906216382980347, -2.96744966506958, -0.16181893646717072, -0.006893177516758442, -0.34952929615974426, -0.2369745373725891, -0.111500084400177, -0.026494093239307404, -0.07838142663240433, 0.16592349112033844) * l2(0.0, 0.0);
	r += mat4(-0.5179266929626465, 0.14125600457191467, 0.09803006052970886, -0.036127202212810516, 1.00693941116333, -0.003919411916285753, -1.057511329650879, 0.26099199056625366, 0.031867705285549164, -0.024656595662236214, -0.3373715579509735, 0.033959269523620605, -0.2684776484966278, -0.030330387875437737, -0.4905422329902649, 0.095915786921978) * l2(1.0, 0.0);
	r += mat4(0.11619264632463455, 0.035807982087135315, 0.012535211630165577, 0.15870879590511322, 0.07637018710374832, 0.07534658163785934, -0.45495668053627014, -0.5605980157852173, -0.032374490052461624, -0.015310288406908512, -0.0022300109267234802, -0.056709568947553635, 0.14619703590869904, -0.030574237927794456, 0.012252436950802803, -0.0877123549580574) * l2(-1.0, 1.0);
	r += mat4(-0.07171672582626343, 0.13077299296855927, -0.2544073164463043, 0.19875095784664154, -0.6191181540489197, 0.01797458902001381, 0.18248479068279266, -0.6669087409973145, -0.2566891610622406, -0.02509160526096821, -0.029237346723675728, 0.056796085089445114, 0.1221015453338623, -0.013285054825246334, 0.052646711468696594, 0.16902057826519012) * l2(0.0, 1.0);
	r += mat4(-0.03894047439098358, 0.12389705330133438, -0.16967803239822388, 0.23754152655601501, 0.6449018716812134, 0.07435007393360138, -0.36670517921447754, -0.14643122255802155, -0.05678451061248779, -0.01115406583994627, 0.017663944512605667, 0.025518443435430527, -0.22032135725021362, 0.007267238572239876, -0.0722537711262703, 0.0384526327252388) * l2(1.0, 1.0);
	r += mat4(0.25200986862182617, -0.1450805366039276, 0.06347523629665375, -0.03751898929476738, 0.004369601607322693, 0.007983843795955181, -0.15337786078453064, -0.08090773969888687, -0.10853532701730728, -0.36170491576194763, -0.2306164801120758, -0.031367260962724686, -0.09566447883844376, -0.0047444929368793964, 0.31001222133636475, 0.11063623428344727) * l3(-1.0, -1.0);
	r += mat4(0.004760268609970808, -0.6416622400283813, 0.20710580050945282, -0.06003222241997719, 0.236347034573555, 0.20919547975063324, -0.2250971794128418, -0.009093099273741245, 0.06771080940961838, -0.46447211503982544, 0.5106832385063171, 0.29832231998443604, -0.04872405156493187, -0.3129342496395111, 0.5270570516586304, -0.24136269092559814) * l3(0.0, -1.0);
	r += mat4(0.1236555352807045, -0.02412995882332325, 0.021993763744831085, -0.008003282360732555, -0.10522692650556564, 0.016333648934960365, 0.26790720224380493, 0.09899633377790451, -0.16941843926906586, -0.2176218181848526, 0.34762269258499146, -0.22975723445415497, 0.19183960556983948, -0.16007071733474731, 0.5896823406219482, 0.03179566562175751) * l3(1.0, -1.0);
	r += mat4(0.31911659240722656, 0.05929740518331528, 0.039956703782081604, -0.02146971970796585, -0.08569157868623734, -0.09341688454151154, 0.10956086963415146, 0.16393043100833893, -0.06469254940748215, -0.07876455783843994, -0.044609930366277695, -0.11962831020355225, -0.04517228156328201, -0.12667077779769897, 0.09369006007909775, -0.14706538617610931) * l3(-1.0, 0.0);
	r += mat4(-0.6265335083007812, -0.03770161792635918, -0.20139142870903015, 0.25010305643081665, 0.5605790019035339, -0.19445659220218658, 0.48152121901512146, 0.5402780771255493, 0.38319677114486694, -0.09625238925218582, 0.1412862092256546, 0.293867290019989, -0.22660832107067108, 0.011096148751676083, -0.4794448912143707, 0.45156553387641907) * l3(0.0, 0.0);
	r += mat4(-0.040395546704530716, -0.0032563426066190004, -0.07007406651973724, -0.030575396493077278, 0.0012924027396366, -0.098061703145504, 0.6195041537284851, 0.0604839026927948, -0.024641145020723343, -0.12301772087812424, 0.34192079305648804, -0.03572818636894226, -0.10973111540079117, -0.07711762189865112, -0.4405083954334259, -0.21162737905979156) * l3(1.0, 0.0);
	r += mat4(-0.12717248499393463, 0.07561914622783661, 0.020627634599804878, -0.041141945868730545, -0.1249890923500061, -0.12776416540145874, 0.11694127321243286, 0.19235190749168396, -0.028401831164956093, -0.0076149748638272285, -0.012107176706194878, 0.047483380883932114, 0.16425547003746033, -0.09176025539636612, -0.017267050221562386, 0.047165341675281525) * l3(-1.0, 1.0);
	r += mat4(-0.29411447048187256, -0.0689002126455307, -0.47358688712120056, -0.04529710114002228, 0.3271242082118988, -0.12413423508405685, 0.2459273636341095, -0.13241039216518402, 0.18954774737358093, -0.028746511787176132, 0.29474323987960815, -0.09066066145896912, -0.009166376665234566, 0.0011523391585797071, 0.04010733962059021, -0.23485508561134338) * l3(0.0, 1.0);
	r += mat4(-0.5054065585136414, -0.005325338337570429, -0.5607926845550537, -0.020401863381266594, 0.09246525913476944, -0.12775853276252747, 0.62105393409729, -0.3207121193408966, 0.21809567511081696, 0.009603754617273808, 0.5214861631393433, 0.01956787332892418, 0.3502247929573059, -0.09049849212169647, -0.03358888998627663, 0.10519568622112274) * l3(1.0, 1.0);
	r += vec4(-0.012438619509339333, -0.103035569190979, -0.03137163072824478, 0.0004407457308843732);
	return max(r, 0.0);
}

//!DESC CuNNy-1x16-conv1:2
//!HOOK LUMA
//!BIND up_0
//!BIND up_1
//!BIND up_2
//!BIND up_3
//!SAVE conv1_2
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define l0(x, y) up_0_texOff(vec2(x, y))
#define l1(x, y) up_1_texOff(vec2(x, y))
#define l2(x, y) up_2_texOff(vec2(x, y))
#define l3(x, y) up_3_texOff(vec2(x, y))
vec4 hook() {
	vec4 r = vec4(0.0);
	r += mat4(0.06944723427295685, -0.047691136598587036, 0.08292069286108017, 0.14489507675170898, 0.16455072164535522, 0.18793441355228424, 0.09618639200925827, -0.32317134737968445, -0.1151958778500557, -0.10558602213859558, 0.28198111057281494, -0.12568990886211395, 0.019055260345339775, -0.03486298397183418, -0.032759346067905426, 0.05188649520277977) * l0(-1.0, -1.0);
	r += mat4(-0.1386772096157074, -0.12186020612716675, 0.1706235408782959, 0.09391564875841141, 0.04042363911867142, 0.44625431299209595, -0.15012353658676147, -0.22581583261489868, -0.5879732966423035, 0.20069614052772522, 0.7457987070083618, 0.08407118171453476, 0.059317104518413544, 0.0018325579585507512, -0.06921334564685822, 0.1013089045882225) * l0(0.0, -1.0);
	r += mat4(0.12071723490953445, 0.04245883598923683, -0.018539343029260635, 0.04153395816683769, -0.06477269530296326, 0.05376508831977844, -0.041803114116191864, 0.0991034060716629, 0.12558063864707947, -0.06756266951560974, 0.08405230939388275, -0.034779712557792664, -0.044266894459724426, 0.15894511342048645, 0.27160146832466125, -0.07981564104557037) * l0(1.0, -1.0);
	r += mat4(-0.2764151692390442, 0.10907848179340363, -0.18180078268051147, -0.30958110094070435, 0.055249787867069244, 0.3014591336250305, 0.10156363993883133, -0.24124152958393097, 0.08505003154277802, -0.11276623606681824, 0.03276027739048004, -0.15555155277252197, 0.11595632135868073, -0.14172348380088806, -0.11910378187894821, 0.028469344601035118) * l0(-1.0, 0.0);
	r += mat4(-0.2582879960536957, 0.3318248391151428, -0.1735754758119583, 0.0852050855755806, 0.5340421795845032, 0.19004380702972412, 0.015446104109287262, 0.517618715763092, -0.206708163022995, -0.18685534596443176, -0.6244570016860962, -0.08836131542921066, -0.28699442744255066, -0.36233872175216675, -0.13524764776229858, 0.05735526233911514) * l0(0.0, 0.0);
	r += mat4(-0.13126488029956818, 0.13329359889030457, 0.35240060091018677, -0.3025241494178772, 0.026824792847037315, -0.03540530055761337, -0.25503668189048767, 0.0007087987614795566, 0.2487270087003708, 0.0009590481640771031, -0.002583766123279929, -0.2880859375, -0.2831857204437256, -0.4912757873535156, -0.18326380848884583, 0.06567247956991196) * l0(1.0, 0.0);
	r += mat4(0.25368809700012207, 0.1072840616106987, 0.06498357653617859, 0.07931780070066452, -0.11664649099111557, -0.20643839240074158, 0.022707292810082436, 0.40202128887176514, -0.09012819081544876, -0.03583437576889992, 0.10132644325494766, 0.16363874077796936, -0.17678217589855194, -0.01934938319027424, -0.08178936690092087, -0.06249656155705452) * l0(-1.0, 1.0);
	r += mat4(0.1675482541322708, -0.22957636415958405, -0.01861582323908806, -0.3248285949230194, -0.13929131627082825, -0.0913219153881073, 0.023624146357178688, -0.027536194771528244, 0.3719550669193268, -0.002104496583342552, -0.03912774845957756, 0.23462751507759094, 0.008265862241387367, -0.18469800055027008, -0.04717177525162697, 0.06812185794115067) * l0(0.0, 1.0);
	r += mat4(-0.05149805545806885, 0.10520568490028381, -0.008385498076677322, 0.06513117998838425, 0.011836432851850986, 0.10392601042985916, 0.11977525055408478, -0.051076821982860565, 0.09401847422122955, -0.10145629942417145, 0.09432949125766754, -0.0319732204079628, 0.011985636316239834, -0.06527873128652573, -0.5444252490997314, 0.11245813965797424) * l0(1.0, 1.0);
	r += mat4(0.10709894448518753, 0.06668854504823685, 0.07307478040456772, -0.016036473214626312, 0.23938530683517456, -0.047020696103572845, -0.025046629831194878, 0.053045809268951416, 0.05647416412830353, -0.02065979316830635, -0.12333834916353226, -0.01966405287384987, 0.17921921610832214, 0.06925058364868164, 0.04480794817209244, 0.14796052873134613) * l1(-1.0, -1.0);
	r += mat4(0.2900010049343109, 0.120749831199646, -0.04875539615750313, 0.15848767757415771, 0.4837578237056732, -0.212321937084198, -0.04791119694709778, -0.26721829175949097, 0.026402480900287628, 0.11488569527864456, -0.45019662380218506, -0.11925765126943588, 0.08614836633205414, -0.1380751132965088, 0.0727328509092331, 0.14018921554088593) * l1(0.0, -1.0);
	r += mat4(-0.14544427394866943, 0.3272467255592346, 0.08971725404262543, 0.0426313616335392, -0.09990210831165314, -0.09078864753246307, 0.3359363079071045, 0.12659792602062225, -0.0058981627225875854, 0.074933260679245, -0.4658171534538269, 0.048215288668870926, 0.0893443375825882, 0.061474889516830444, 0.10278106480836868, -0.10723835974931717) * l1(1.0, -1.0);
	r += mat4(0.060326915234327316, -0.04263285547494888, 0.010854878462851048, -0.1596689522266388, -0.12876571714878082, -0.09789087623357773, 0.09321659803390503, 0.31153884530067444, 0.035580627620220184, 0.23568394780158997, 0.19101516902446747, 0.0067630852572619915, -0.28541865944862366, -0.21826553344726562, -0.1018073707818985, 0.026661725714802742) * l1(-1.0, 0.0);
	r += mat4(-0.7636718153953552, 0.010925320908427238, -0.21046006679534912, -0.05940770357847214, -0.6282362937927246, -0.4310547113418579, -0.2044333517551422, -0.24795538187026978, 0.302530974149704, 0.2548920810222626, 0.08523846417665482, 0.12308233976364136, -0.2745077610015869, -0.4769638478755951, -0.3221616744995117, -0.5996115803718567) * l1(0.0, 0.0);
	r += mat4(-0.21057505905628204, -0.1680508852005005, 0.054450273513793945, 0.10054563730955124, -0.09178049117326736, 0.26855361461639404, -0.09984749555587769, 0.5590187907218933, 0.07447304576635361, -0.07398445904254913, 0.20714305341243744, 0.004097606521099806, -0.09494078159332275, -0.03977786377072334, 0.3536530137062073, -0.030115850269794464) * l1(1.0, 0.0);
	r += mat4(0.24454522132873535, 0.009079481475055218, 0.07240568846464157, 0.03748743608593941, -0.11610665917396545, -0.09041113406419754, 0.12477421015501022, -0.08024226874113083, -0.5793165564537048, 0.2509833872318268, 0.2316843569278717, 0.013121562078595161, -0.09874115139245987, -0.18793374300003052, -0.11538402736186981, -0.006678435951471329) * l1(-1.0, 1.0);
	r += mat4(-0.11247482895851135, 0.04885517433285713, 0.15502314269542694, -0.0021091520320624113, -0.31535211205482483, -0.023115096613764763, -0.1801769882440567, -0.017867567017674446, 0.22780874371528625, 0.22005537152290344, 0.053447041660547256, -0.16015224158763885, -0.25684359669685364, -0.3799912929534912, -0.3575514256954193, 0.26264217495918274) * l1(0.0, 1.0);
	r += mat4(0.015161219984292984, 0.1005711629986763, 0.16550444066524506, -0.19491763412952423, -0.005529453977942467, -0.10519547760486603, -0.15338465571403503, 0.0716267004609108, -0.20074744522571564, -0.07308982312679291, -0.14993683993816376, 0.4007219970226288, -0.10633746534585953, -0.04808226227760315, 0.07491548359394073, -0.028902530670166016) * l1(1.0, 1.0);
	r += mat4(-0.026782434433698654, 0.10789071023464203, 0.04375213757157326, 0.11894868314266205, -0.9644256234169006, -0.3858186900615692, 0.042987775057554245, -0.6159176230430603, -0.12503141164779663, 0.007794810459017754, -0.2605977952480316, 0.0488680861890316, -0.0914933830499649, -0.028085308149456978, -0.0011116639943793416, -0.05610891431570053) * l2(-1.0, -1.0);
	r += mat4(-0.04827357828617096, -0.25574642419815063, 0.13864153623580933, 0.08142750710248947, -1.9457803964614868, 0.16383355855941772, 1.457848072052002, 0.07125302404165268, -0.3876952528953552, -0.19093403220176697, 0.023981167003512383, -0.4404357969760895, -0.026640554890036583, -0.132903590798378, -0.13338258862495422, -0.03626387566328049) * l2(0.0, -1.0);
	r += mat4(-0.029672374948859215, -0.001538958866149187, 0.005214081145823002, 0.028150033205747604, 0.7800067663192749, 0.4093438386917114, -0.10388065129518509, -0.5558227896690369, -0.05348004400730133, -0.1469709426164627, -0.11901482939720154, 0.10233034193515778, 0.021125970408320427, -0.20560365915298462, 0.00817167479544878, -0.009741305373609066) * l2(1.0, -1.0);
	r += mat4(-0.28594154119491577, 0.24875199794769287, -0.1409052312374115, -0.0749991163611412, -3.290600538253784, -1.6320818662643433, 0.8458117246627808, -0.7064542174339294, -0.49767011404037476, 0.13719382882118225, -0.03329275920987129, 0.129439577460289, -0.10668180882930756, 0.07673506438732147, -0.06102379038929939, -0.09058058261871338) * l2(-1.0, 0.0);
	r += mat4(-0.6603518724441528, -0.5356053709983826, -0.1671167016029358, 0.14730435609817505, -1.746148943901062, -0.9877098798751831, -6.471737384796143, -3.722363233566284, -0.1701827198266983, 0.013103152625262737, -0.4498591423034668, 0.8531533479690552, -0.07569989562034607, 0.045177657157182693, 0.020541496574878693, -0.5956875085830688) * l2(0.0, 0.0);
	r += mat4(0.016316290944814682, -0.3063180446624756, -0.12547597289085388, -0.01387311052531004, 0.719743013381958, 0.0021286667324602604, 0.31436654925346375, -0.6555781960487366, 0.08791982382535934, -0.09673559665679932, -0.2529284358024597, 0.08544425666332245, -0.13920406997203827, -0.06022172421216965, -0.06994978338479996, -0.23553790152072906) * l2(1.0, 0.0);
	r += mat4(0.24682073295116425, 0.10106095671653748, -0.00992959551513195, 0.008764958940446377, 1.2474186420440674, -0.9225626587867737, 0.6513650417327881, -0.20748980343341827, 0.30332961678504944, 0.11548470705747604, 0.04425269365310669, -0.01906813122332096, 0.019041292369365692, 0.14593040943145752, 0.08624374121427536, 0.08471722900867462) * l2(-1.0, 1.0);
	r += mat4(-0.3399021029472351, 0.314646452665329, -0.3481985628604889, 0.059524644166231155, 0.07177219539880753, -1.2187864780426025, -3.3068249225616455, -1.302574634552002, 0.20556820929050446, 0.03950846567749977, -0.07545837759971619, -0.12687283754348755, 0.153717502951622, 0.19097577035427094, 0.3616122007369995, -0.08423759043216705) * l2(0.0, 1.0);
	r += mat4(-0.002960379933938384, 0.03533633425831795, -0.08640331029891968, -0.06296908855438232, -0.4131056070327759, -1.1193970441818237, -0.3733031749725342, 0.2204638123512268, 0.05240696296095848, -0.0006319506792351604, -0.11705030500888824, -0.014646812342107296, 0.12480830401182175, -0.0061662886291742325, 7.614742685291276e-07, -0.004415379371494055) * l2(1.0, 1.0);
	r += mat4(-0.0946882888674736, 0.061167340725660324, -0.12498635053634644, -0.08961211889982224, -0.1419718712568283, 0.006386091001331806, 0.11689384281635284, -0.005348451901227236, 0.5245717763900757, -0.00019749862258322537, 0.0364924818277359, 0.03872106224298477, -0.02793624810874462, 0.079275943338871, 0.12589524686336517, 0.04090689495205879) * l3(-1.0, -1.0);
	r += mat4(-0.03130674734711647, -0.05063265934586525, -0.2646482288837433, -0.3129565715789795, 0.23685649037361145, 0.3077562749385834, -0.25557953119277954, -0.1814815104007721, -0.033595629036426544, 0.7232384085655212, -0.23666664958000183, 0.34668269753456116, 0.44527140259742737, -0.49860331416130066, -0.05922459438443184, 0.08384685963392258) * l3(0.0, -1.0);
	r += mat4(-0.05906076356768608, 0.02587197907269001, -0.2903777062892914, -0.02808205597102642, 0.2632993757724762, 0.13643252849578857, -0.21733826398849487, -0.2663477957248688, 0.08150541037321091, 0.31189119815826416, 0.05537189170718193, 0.0035421617794781923, 0.11492763459682465, 0.06887253373861313, 0.250988245010376, -0.03108283318579197) * l3(1.0, -1.0);
	r += mat4(0.10209957510232925, 0.04101714491844177, -0.13529419898986816, 0.006127317436039448, 0.39131540060043335, -0.1346779614686966, 0.3271523714065552, -0.034551311284303665, 0.3161996603012085, -0.17714853584766388, -0.1350955367088318, 0.22800998389720917, -0.15395650267601013, 0.1371617317199707, 0.047803279012441635, 0.0907546654343605) * l3(-1.0, 0.0);
	r += mat4(-0.15174518525600433, -0.8098788261413574, 0.06071711331605911, -0.040384549647569656, 0.004439467564225197, 0.14596931636333466, 0.5000458359718323, 0.5494877696037292, 0.25488606095314026, 0.021106338128447533, 0.09496135264635086, -0.35644468665122986, -0.2540070414543152, -0.15852892398834229, 0.34447038173675537, 0.12130363285541534) * l3(0.0, 0.0);
	r += mat4(-0.030087821185588837, -0.14323441684246063, -0.3044544756412506, 0.06629372388124466, -0.005465902388095856, 0.42109131813049316, 0.5238991379737854, -0.48347654938697815, 0.13342687487602234, 0.2490776926279068, 0.3026764690876007, 0.009488060139119625, -0.257815420627594, 0.06558297574520111, -0.1013236939907074, 0.14002500474452972) * l3(1.0, 0.0);
	r += mat4(0.10410302877426147, 0.36370527744293213, -0.25278210639953613, 0.02716037631034851, -0.06162801384925842, -0.2990448772907257, -0.12328386306762695, -0.2405281662940979, -0.6883253455162048, -0.4195878207683563, -0.11313686519861221, -0.0650162547826767, 0.16167689859867096, 0.05130255967378616, -0.09105002135038376, -0.08719741553068161) * l3(-1.0, 1.0);
	r += mat4(0.1548229306936264, 0.3381603956222534, -0.37924328446388245, -0.06546992808580399, 0.24608121812343597, -0.14255696535110474, 0.561816930770874, -0.18996746838092804, -1.1055008172988892, -0.2568367123603821, 0.12551432847976685, 0.09304463118314743, -0.35432732105255127, 0.4306638538837433, -0.192922905087471, 0.2027159333229065) * l3(0.0, 1.0);
	r += mat4(0.18370787799358368, -0.04946208372712135, -0.17972038686275482, 0.04318287968635559, -0.15229471027851105, 0.1066901758313179, 0.4212215542793274, 0.3777163028717041, -0.3193622827529907, 0.059687983244657516, 0.27636706829071045, -0.04984648898243904, -0.0172541756182909, 0.26626113057136536, 0.15345267951488495, -0.12757261097431183) * l3(1.0, 1.0);
	r += vec4(-0.014068514108657837, -0.03118831291794777, -0.014363517053425312, -0.011322090402245522);
	return max(r, 0.0);
}

//!DESC CuNNy-1x16-conv1:3
//!HOOK LUMA
//!BIND up_0
//!BIND up_1
//!BIND up_2
//!BIND up_3
//!SAVE conv1_3
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define l0(x, y) up_0_texOff(vec2(x, y))
#define l1(x, y) up_1_texOff(vec2(x, y))
#define l2(x, y) up_2_texOff(vec2(x, y))
#define l3(x, y) up_3_texOff(vec2(x, y))
vec4 hook() {
	vec4 r = vec4(0.0);
	r += mat4(-0.13577666878700256, 0.1792401373386383, -0.022325435653328896, -0.043210871517658234, 0.2515407204627991, 0.2023909091949463, -0.03919798880815506, -0.3505859673023224, -0.2167280912399292, -0.056438054889440536, -0.04620375484228134, -0.08427488058805466, -0.0046231490559875965, -0.014547470957040787, -0.011119633913040161, -0.026967288926243782) * l0(-1.0, -1.0);
	r += mat4(-0.2532476484775543, 0.28612056374549866, 0.07517452538013458, -0.06508172303438187, 0.43679219484329224, 0.4931780695915222, 0.14306430518627167, -0.08088601380586624, -0.20832596719264984, -0.053118012845516205, 0.12632830440998077, 0.05311877280473709, 0.10892868787050247, -0.3197462856769562, 0.034875091165304184, 0.041089288890361786) * l0(0.0, -1.0);
	r += mat4(-0.18862862884998322, -0.11859110742807388, 0.053320880979299545, -0.01538498792797327, -0.16044162213802338, -0.05787218362092972, -0.04818044975399971, 0.07894337177276611, 0.08760674297809601, -0.0739155039191246, 0.16692395508289337, 0.013723424635827541, 0.23973891139030457, 0.06272313743829727, 0.13091786205768585, 0.07983564585447311) * l0(1.0, -1.0);
	r += mat4(0.2959080934524536, 0.3658193349838257, -0.001649149227887392, 0.0021022753790020943, -0.20560945570468903, -0.16898129880428314, 0.10888268798589706, 0.49384406208992004, -0.14279675483703613, 0.24023614823818207, 0.0321551077067852, -0.20937564969062805, -0.02276807278394699, 0.2763662040233612, -0.03415881097316742, 0.007323383819311857) * l0(-1.0, 0.0);
	r += mat4(0.4646056294441223, -0.4616337716579437, -0.02131316065788269, 0.2401052862405777, 0.04945734888315201, 0.2414253205060959, 0.3154299557209015, -0.05373983457684517, -0.7383608818054199, -0.24541044235229492, -0.5229571461677551, -0.8215816020965576, 0.18698595464229584, -0.1875181943178177, -0.2937510311603546, 0.07322577387094498) * l0(0.0, 0.0);
	r += mat4(-0.9184662103652954, 0.16391311585903168, 0.20086468756198883, 0.05234067514538765, -0.2523704171180725, -0.1022309735417366, -0.05731937661767006, -0.06178273633122444, -0.11373730003833771, -0.1360989809036255, -0.018701832741498947, -0.2201022207736969, 0.0027344035916030407, 0.2589225172996521, -0.32879745960235596, 0.24073857069015503) * l0(1.0, 0.0);
	r += mat4(-0.07882506400346756, -0.393456369638443, 0.04697367921471596, 0.04079056158661842, 0.08366037905216217, 0.002147761406376958, 0.20947273075580597, 0.15687799453735352, -0.19799350202083588, 0.0031487250234931707, -0.006409874185919762, -0.006161671131849289, -0.012121463194489479, 0.08318676799535751, -0.012472927570343018, -0.008932189084589481) * l0(-1.0, 1.0);
	r += mat4(-0.09626061469316483, 0.08907319605350494, 0.009858604520559311, -0.17827388644218445, 0.5569436550140381, 0.01134935487061739, -0.11240003257989883, 0.1837862879037857, -0.32773274183273315, -0.04401683434844017, 0.42061862349510193, 0.06466488540172577, 0.030664779245853424, -0.3408021032810211, -0.08700519800186157, -0.051368553191423416) * l0(0.0, 1.0);
	r += mat4(-0.7480632662773132, 0.3055025339126587, -0.1670418232679367, 0.05780044198036194, -0.26982685923576355, 0.07777097076177597, 0.13623017072677612, -0.04511897638440132, -0.03102458454668522, -0.07918007671833038, -0.13826927542686462, -0.012414606288075447, 0.056188683956861496, -0.07776802778244019, -0.2744171619415283, 0.041997428983449936) * l0(1.0, 1.0);
	r += mat4(-0.023363884538412094, -0.16943684220314026, 0.07798557728528976, -0.03233325853943825, -0.09875662624835968, -0.02752126380801201, -0.06884177774190903, 0.012648009695112705, -0.006250492762774229, 0.1813497692346573, 0.054867297410964966, 0.04303112253546715, -0.06084973365068436, -0.06456265598535538, 0.055046167224645615, -0.006658792961388826) * l1(-1.0, -1.0);
	r += mat4(0.26069262623786926, -0.06490318477153778, 0.15639850497245789, 0.04549712687730789, 0.028539467602968216, -0.09977241605520248, -0.21974849700927734, -0.12638770043849945, 0.00977714266628027, -0.08467363566160202, -0.06592117249965668, -0.13191090524196625, -0.08064750581979752, -0.18582084774971008, -0.020230449736118317, 0.16562744975090027) * l1(0.0, -1.0);
	r += mat4(0.26642948389053345, 0.10623534023761749, 0.08091122657060623, -0.08054296672344208, -0.193109393119812, 0.40974336862564087, 0.33109673857688904, 0.12178260087966919, -0.057058945298194885, 0.10039158165454865, -0.06834475696086884, 6.548615783685818e-05, -0.08382192999124527, 0.019522512331604958, 0.060941942036151886, -0.005330259446054697) * l1(1.0, -1.0);
	r += mat4(0.13243067264556885, -0.11113007366657257, -0.06000383198261261, -0.03894384950399399, -0.2567833960056305, 0.20973941683769226, -0.05558488890528679, 0.02901904098689556, -0.06989152729511261, -0.031683750450611115, 0.10325916856527328, -0.058541152626276016, 0.01023667212575674, -0.18310382962226868, -0.25636643171310425, 0.013673211447894573) * l1(-1.0, 0.0);
	r += mat4(-0.12835530936717987, -0.13132378458976746, -0.22211743891239166, -0.0812847912311554, 0.018097277730703354, 0.24891826510429382, -0.0791550725698471, 0.25356364250183105, 0.3185397684574127, -0.29357314109802246, 0.06453592330217361, -0.6526389122009277, -0.18892517685890198, -0.2820607125759125, -0.4736277759075165, -0.24969762563705444) * l1(0.0, 0.0);
	r += mat4(0.01704094000160694, -0.5175740122795105, -0.5104765295982361, -0.2618049383163452, -0.37463417649269104, -0.33598870038986206, -0.03429851308465004, 0.25249674916267395, -0.04019580036401749, -0.016648314893245697, 0.24853523075580597, -0.29255062341690063, 0.08467418700456619, 0.149332657456398, 0.1352241188287735, 0.029463890939950943) * l1(1.0, 0.0);
	r += mat4(-0.08312822133302689, -0.02745199203491211, 0.07727544009685516, 0.031127871945500374, 0.15282152593135834, -0.009070165455341339, 0.1270427107810974, -0.023615647107362747, -0.004694091621786356, 0.1118372455239296, 0.06124426797032356, 0.05744054540991783, -0.03706390783190727, -0.14602155983448029, -0.14501312375068665, -0.028644582256674767) * l1(-1.0, 1.0);
	r += mat4(-0.16198909282684326, 0.12513770163059235, -0.026652511209249496, 0.04446805268526077, 0.05212938040494919, 0.08110693097114563, 0.20058608055114746, -0.16896164417266846, -0.2546139359474182, -0.052929580211639404, 0.10188145935535431, 0.41888877749443054, -0.13946525752544403, -0.19637465476989746, -0.2152891308069229, 0.05628384277224541) * l1(0.0, 1.0);
	r += mat4(0.024040725082159042, 0.09420987963676453, 0.25999441742897034, -0.051996860653162, -0.06771238893270493, 0.052713241428136826, 0.30122318863868713, 0.06518419086933136, -0.1876150667667389, -0.22163593769073486, -0.2727348506450653, 0.03719554468989372, -0.02685636095702648, 0.01658104546368122, -0.11756870895624161, 0.060098130255937576) * l1(1.0, 1.0);
	r += mat4(0.11997507512569427, 0.0755186602473259, 0.01414328534156084, -0.03261278197169304, -0.18981170654296875, -0.12353744357824326, 0.5763465166091919, 0.1373227834701538, -0.0034789727069437504, 0.2881011962890625, -0.22390852868556976, 0.0032566410955041647, 0.031622570008039474, 0.026720236986875534, -0.03510008752346039, 0.07394378632307053) * l2(-1.0, -1.0);
	r += mat4(0.16812242567539215, -0.15286527574062347, 0.17516113817691803, 0.022189661860466003, -0.025387927889823914, -1.0098538398742676, -0.4990617632865906, 0.45998120307922363, -0.2706556022167206, 0.02851863019168377, -0.11057189851999283, -0.27048707008361816, -0.14390318095684052, 0.12476596981287003, -0.2519359886646271, -0.004361776169389486) * l2(0.0, -1.0);
	r += mat4(-0.08202031254768372, -0.19461022317409515, -0.08406971395015717, 0.01818465255200863, 0.911734402179718, 0.6760680675506592, 0.09266909956932068, 0.014292357489466667, -0.07589714229106903, -0.03811488300561905, -0.08422444760799408, -0.023516325280070305, -0.18717576563358307, -0.07904624938964844, 0.08070944249629974, -0.04285834729671478) * l2(1.0, -1.0);
	r += mat4(-0.16692495346069336, -0.03820478543639183, 0.008064120076596737, 0.032099030911922455, 0.0017787441611289978, 2.286123037338257, 0.6425938010215759, 0.11678420007228851, -0.27825963497161865, -0.0700426772236824, 0.14210796356201172, 0.1186472624540329, 0.0009136744774878025, -0.23294050991535187, -0.05093718320131302, -0.023098193109035492) * l2(-1.0, 0.0);
	r += mat4(-0.16411088407039642, 0.019187549129128456, -0.1636933982372284, -0.46598127484321594, -1.1548576354980469, -8.575209617614746, -1.7557265758514404, 1.2514172792434692, -0.30776646733283997, 0.15050366520881653, -0.18718035519123077, 0.2318638563156128, -0.26140066981315613, 0.39351895451545715, 0.3834337592124939, -0.11216102540493011) * l2(0.0, 0.0);
	r += mat4(0.22879981994628906, -2.545280933380127, -0.0919046401977539, -0.08026262372732162, -5.200680732727051, -0.023783333599567413, -0.013017240911722183, 0.27733415365219116, 0.1340959668159485, -0.258455365896225, -0.05156620591878891, -0.0313606858253479, -0.09919276833534241, -0.33489447832107544, 0.18879714608192444, -0.08784497529268265) * l2(1.0, 0.0);
	r += mat4(-0.17877233028411865, -0.07661899924278259, 0.04686303809285164, 0.10502605885267258, -0.5587525367736816, -1.1663963794708252, -0.11360063403844833, 0.023080015555024147, -0.09868233650922775, -0.03779902681708336, 0.00974071305245161, -0.022586477920413017, -0.10391981899738312, 0.07876670360565186, 0.11835354566574097, 0.05904849246144295) * l2(-1.0, 1.0);
	r += mat4(0.011023773811757565, 0.02852967381477356, -0.1409400999546051, -0.040277332067489624, -0.8626541495323181, -1.3721063137054443, 1.134658694267273, 0.09481385350227356, -0.12500765919685364, -0.1545395851135254, 0.04045466333627701, 0.057063594460487366, -0.13413842022418976, 0.30371153354644775, 0.1110491007566452, 0.011248009279370308) * l2(0.0, 1.0);
	r += mat4(0.034289680421352386, -0.14024698734283447, 0.07598500698804855, 0.06898314505815506, 0.41161680221557617, 0.9162495136260986, 0.34280166029930115, 0.01617608219385147, 0.037965502589941025, -0.14861442148685455, -0.018046490848064423, 0.0009069539955817163, -0.07299961149692535, -0.08263980597257614, 0.057742368429899216, -0.00575803080573678) * l2(1.0, 1.0);
	r += mat4(0.13743752241134644, -0.07336773723363876, -0.04709920287132263, 0.047259990125894547, 0.004448365420103073, -0.22121551632881165, 0.19181574881076813, 0.05938274413347244, 0.14500223100185394, -0.1578323096036911, 0.30022695660591125, -0.012458325363695621, -2.9818406801496167e-06, 0.04700113832950592, 0.010292154736816883, -0.061683304607868195) * l3(-1.0, -1.0);
	r += mat4(0.2178076207637787, -0.05998382344841957, -0.39278388023376465, 0.20319539308547974, 0.09249060600996017, -0.10812519490718842, 0.5477668642997742, -0.07255201786756516, 0.21136115491390228, 0.2671082615852356, 0.15502946078777313, 0.30728480219841003, -0.1671844869852066, 0.06954428553581238, -0.1927521824836731, 0.17722325026988983) * l3(0.0, -1.0);
	r += mat4(0.32860615849494934, 0.07334137707948685, -0.35248222947120667, 0.02496858686208725, -0.42259496450424194, -0.15978410840034485, 0.03483211621642113, -0.2446289360523224, -0.23473595082759857, 0.10373609513044357, 0.011177140288054943, 0.2165755331516266, 0.17031437158584595, -0.0998915433883667, -0.10184931010007858, -0.0027006282471120358) * l3(1.0, -1.0);
	r += mat4(-0.08733294904232025, -0.05658021569252014, -0.23163095116615295, 0.1537371724843979, 0.14208181202411652, -0.2655879557132721, 0.13733895123004913, -0.10717853903770447, 0.7097006440162659, -0.472699910402298, 0.04070225730538368, -0.0834849402308464, -0.26115092635154724, 0.23870915174484253, -0.1985388845205307, -0.009204435162246227) * l3(-1.0, 0.0);
	r += mat4(-0.3149638772010803, -0.1521686166524887, -0.5689594745635986, 0.0011648263316601515, 0.317304402589798, -0.1078941747546196, 0.40664300322532654, -0.30068331956863403, 0.6777637004852295, 0.023423096165060997, 0.0025355115067213774, 0.3095323145389557, -0.38350754976272583, 0.3422323763370514, 0.6614421010017395, 0.04192638397216797) * l3(0.0, 0.0);
	r += mat4(0.5645571351051331, -0.10323566198348999, 0.01770232990384102, 0.01628287509083748, 0.31441599130630493, -1.0964640378952026, 0.1159668043255806, 0.6745586395263672, -0.4428510069847107, 0.41282689571380615, 0.10824946314096451, -0.02045605517923832, 0.12267520278692245, -0.13722163438796997, 0.06832235306501389, 0.04775363951921463) * l3(1.0, 0.0);
	r += mat4(-0.2606077492237091, 0.08453449606895447, 0.027180926874279976, -0.03123520500957966, 0.3575499951839447, 0.14707806706428528, -0.12928441166877747, -0.049187008291482925, 0.31254637241363525, -0.1829192191362381, -0.3472144901752472, 0.022204594686627388, 0.05035550147294998, -0.08347669243812561, -0.011932263150811195, -0.2063060849905014) * l3(-1.0, 1.0);
	r += mat4(-0.1571274995803833, -0.21728992462158203, 0.2562630772590637, 0.008880219422280788, 0.2188257873058319, 0.21826037764549255, -0.462805837392807, 0.09778394550085068, 0.1391647309064865, -0.09890622645616531, -0.6214380264282227, -0.017704784870147705, 0.2966488301753998, 0.03310638293623924, -0.35049039125442505, 0.018753623589873314) * l3(0.0, 1.0);
	r += mat4(0.3992530405521393, -0.13915403187274933, -0.07639235258102417, 0.04031703993678093, 0.0614904910326004, 0.4229161739349365, -0.1940985769033432, 0.12540383636951447, -0.23282961547374725, 0.1621914952993393, 0.0425029918551445, 0.0032392332796007395, 0.3634803593158722, 0.26667627692222595, 0.23338565230369568, -0.05507772043347359) * l3(1.0, 1.0);
	r += vec4(-0.044797420501708984, -0.018127184361219406, -0.010431085713207722, -0.011697961948812008);
	return max(r, 0.0);
}

//!DESC CuNNy-1x16-down
//!HOOK LUMA
//!BIND conv1_0
//!BIND conv1_1
//!BIND conv1_2
//!BIND conv1_3
//!SAVE down
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define l0(x, y) conv1_0_texOff(vec2(x, y))
#define l1(x, y) conv1_1_texOff(vec2(x, y))
#define l2(x, y) conv1_2_texOff(vec2(x, y))
#define l3(x, y) conv1_3_texOff(vec2(x, y))
vec4 hook() {
	vec4 r = vec4(0.0);
	r += mat4(-0.060654353350400925, -0.008474585600197315, -0.020217537879943848, 0.06240930035710335, 0.06822475790977478, -0.05030291527509689, -0.00024910614592954516, -0.025817329064011574, 0.06487738341093063, 0.03550252318382263, 0.029144806787371635, 0.01590362749993801, -0.10183067619800568, 0.04884122312068939, 0.02124215103685856, 0.020505238324403763) * l0(-1.0, -1.0);
	r += mat4(0.18212950229644775, 0.05433059111237526, -0.013820147141814232, -0.18275785446166992, -0.267230361700058, 0.04964406043291092, 0.11910246312618256, 0.0536750890314579, 0.04794854670763016, 0.017548250034451485, 0.04601992294192314, 0.030090544372797012, 0.14894486963748932, -0.199149489402771, -0.01542107854038477, 0.06366796046495438) * l0(0.0, -1.0);
	r += mat4(0.28679242730140686, -0.4221544861793518, 0.12841621041297913, -0.009176209568977356, -0.00015305326087400317, -0.24574297666549683, 0.061961978673934937, 0.11034321039915085, 0.00672650383785367, 0.007546509616076946, -0.013577581383287907, -0.0065411776304244995, -0.03401385247707367, 0.04528932273387909, 0.032730646431446075, 0.041515253484249115) * l0(1.0, -1.0);
	r += mat4(0.22707144916057587, -0.11841338127851486, 0.027331655845046043, -0.09359408169984818, 0.0916893258690834, 0.11126850545406342, -0.18994203209877014, 0.014315449632704258, 0.36863160133361816, 0.11872778832912445, 0.3885507881641388, 0.15057137608528137, -0.20466656982898712, 0.22957953810691833, -0.24462942779064178, 0.1606464385986328) * l0(-1.0, 0.0);
	r += mat4(-0.7393448948860168, 0.5023950338363647, -0.2672630250453949, 0.6387130618095398, 1.0471729040145874, 0.4863258898258209, -0.646521806716919, -0.6058875322341919, -0.0715399980545044, 0.1752929836511612, -0.03232523426413536, 0.1803520917892456, 0.8974282741546631, -0.8270629048347473, 0.6197136640548706, -0.7918171882629395) * l0(0.0, 0.0);
	r += mat4(0.1578523814678192, 0.10087919235229492, 0.3818572461605072, -0.4503993093967438, -0.10324487090110779, 0.4089125096797943, -0.015722425654530525, -0.2685796916484833, 0.02924300916492939, -0.01985163427889347, 0.01832779496908188, -0.02863018400967121, -0.1028217300772667, 0.24976998567581177, -0.10231975466012955, 0.1304509937763214) * l0(1.0, 0.0);
	r += mat4(0.023954058066010475, -0.09102050960063934, 0.23873667418956757, -0.09158410131931305, -0.03502138704061508, -0.029314938932657242, 0.054316211491823196, -0.038970328867435455, -0.009168051183223724, 0.014768456108868122, 0.042847901582717896, 0.02925901859998703, -0.05105024203658104, 0.028964823111891747, -0.11800362914800644, 0.14979355037212372) * l0(-1.0, 1.0);
	r += mat4(0.1772114634513855, -0.040977250784635544, -0.25293272733688354, 0.060569439083337784, -0.25330203771591187, -0.18583287298679352, 0.22998030483722687, 0.2960541248321533, 0.02089199796319008, -0.010896558873355389, -0.016186285763978958, -0.03734997659921646, 0.1479252129793167, -0.17043283581733704, 0.5816006660461426, -0.4162972569465637) * l0(0.0, 1.0);
	r += mat4(-0.18009810149669647, 0.022609306499361992, -0.13530638813972473, 0.3173845410346985, 0.056778114289045334, -0.037607256323099136, -0.009689250029623508, 0.029431438073515892, -0.011020555160939693, 0.011992506682872772, 0.004785976372659206, 0.021150503307580948, -0.06575130671262741, 0.030767351388931274, -0.11002013087272644, 0.1835724264383316) * l0(1.0, 1.0);
	r += mat4(0.1659865826368332, -0.12875691056251526, -0.0012830325867980719, -0.035100020468235016, -0.03448440879583359, -0.03535556420683861, -0.0351276770234108, -0.03566068038344383, 0.2628672420978546, -0.003410502802580595, -0.19007083773612976, -0.0590096153318882, 0.022040385752916336, -0.007397232577204704, -0.005729047115892172, -0.0014340204652398825) * l1(-1.0, -1.0);
	r += mat4(-0.6851617693901062, 0.5878961682319641, -0.14957554638385773, 0.26518943905830383, -0.036593206226825714, -0.0234796442091465, -0.03946331515908241, -0.03670978173613548, 0.12833409011363983, 0.2724623680114746, -0.11120966076850891, -0.2630579471588135, -0.01623215712606907, -0.02679508551955223, 0.005378828849643469, -0.02134510688483715) * l1(0.0, -1.0);
	r += mat4(0.04848475009202957, -0.07438381016254425, 0.027373110875487328, -0.012895775027573109, -0.03745749965310097, -0.021341625601053238, -0.031782958656549454, -0.031057698652148247, 0.016080781817436218, -0.050216495990753174, 0.03054601140320301, -0.024591192603111267, 0.0030738874338567257, -0.00447360472753644, 5.8203084336128086e-05, -0.013468933291733265) * l1(1.0, -1.0);
	r += mat4(0.16064482927322388, -0.12324337661266327, 0.26662418246269226, -0.16825546324253082, -0.03117317706346512, -0.0380755253136158, -0.034155458211898804, -0.040812790393829346, -0.47987261414527893, -0.19285185635089874, 0.4991387128829956, -0.052897464483976364, 0.002328640315681696, 0.014286053366959095, 0.0012321568792685866, -0.001379840075969696) * l1(-1.0, 0.0);
	r += mat4(-0.5086758732795715, 0.5566625595092773, -0.9708451628684998, 0.7324400544166565, -0.009622222743928432, -0.019380979239940643, -0.024989739060401917, -0.021639136597514153, -0.3203924894332886, -0.7958327531814575, 0.13627393543720245, 0.6683416962623596, -0.2548835277557373, -0.22274988889694214, -0.32721570134162903, -0.2408265918493271) * l1(0.0, 0.0);
	r += mat4(0.1446457803249359, -0.1799985021352768, 0.12944719195365906, -0.1578921675682068, -0.05045865476131439, -0.021882925182580948, -0.03235943987965584, -0.027492918074131012, 0.0005114914383739233, 0.01350907888263464, 0.00541780237108469, -0.06616168469190598, 0.052135076373815536, -0.010622714646160603, 0.02105790562927723, -0.08311395347118378) * l1(1.0, 0.0);
	r += mat4(0.008251466788351536, 0.04430786892771721, 0.012360512278974056, -0.02554943412542343, -0.03783798962831497, -0.0214109867811203, -0.02606561966240406, -0.026217645034193993, 0.27210888266563416, 0.07000108808279037, -0.27856287360191345, -0.11987994611263275, -0.0014696222497150302, -0.010998950339853764, 0.000906162487808615, -0.002750638872385025) * l1(-1.0, 1.0);
	r += mat4(-0.08948071300983429, 0.06371892243623734, -0.12154566496610641, 0.23290948569774628, 0.076825812458992, 0.0012126234360039234, 0.0837678387761116, 0.01304591540247202, 0.042908601462841034, 0.20799238979816437, -0.06446628272533417, -0.21436840295791626, 0.019956355914473534, 0.02839132957160473, 0.0063263969495892525, -0.0012942822650074959) * l1(0.0, 1.0);
	r += mat4(0.020594405010342598, -0.029249481856822968, 0.06644847989082336, -0.11401738226413727, -0.04753763973712921, 0.005749939009547234, -0.06969176977872849, 0.014840865507721901, -0.01848846673965454, -0.03234086558222771, 0.020923934876918793, 0.02750905603170395, -0.00818115659058094, -0.012140308506786823, 0.0014465594431385398, 0.00870248582214117) * l1(1.0, 1.0);
	r += mat4(-0.00885376613587141, -0.011170439422130585, -0.0042539783753454685, 0.0018999505555257201, -0.04406103119254112, -0.010968600399792194, 0.023447569459676743, -0.02770337089896202, -0.3486376404762268, 0.13746756315231323, 0.10466314852237701, 0.11175591498613358, -0.04149610176682472, 0.024793893098831177, -0.0036078630946576595, 0.013183435425162315) * l2(-1.0, -1.0);
	r += mat4(0.14796489477157593, 0.048814404755830765, -0.05940236523747444, -0.02183857560157776, -0.16957560181617737, -0.07923942804336548, 0.04599003121256828, 0.07982581108808517, 0.22901570796966553, -0.6262716054916382, 0.25097841024398804, 0.2026069462299347, -0.031179340556263924, -0.04588398337364197, 0.017267879098653793, 0.040352728217840195) * l2(0.0, -1.0);
	r += mat4(0.16985395550727844, 0.1903921514749527, -0.09775829315185547, -0.17661798000335693, 0.0008107040775939822, -0.021818598732352257, -0.03753072768449783, 0.01741272769868374, -0.006982017308473587, 0.2744125425815582, -0.12839500606060028, -0.08708392083644867, 0.011764522641897202, 0.004928899928927422, 0.032713569700717926, 0.028308050706982613) * l2(1.0, -1.0);
	r += mat4(0.000467931036837399, -0.07326565682888031, 0.11936327069997787, -0.04042169079184532, 0.024120621383190155, -0.06909797340631485, -0.1291525512933731, -0.07467900216579437, 0.3121393024921417, -0.11743225902318954, -0.0853733941912651, 0.0035211830399930477, -0.05748989060521126, 0.02049003168940544, -0.03048117831349373, 0.06813796609640121) * l2(-1.0, 0.0);
	r += mat4(-0.6331775784492493, -0.11528058350086212, 0.6226822733879089, 0.38040924072265625, -0.052033476531505585, 0.4044783413410187, -0.47954797744750977, -0.12229625135660172, 0.3781161904335022, 0.9178931713104248, -0.6461080312728882, -0.7403003573417664, -0.31152814626693726, -0.3868870139122009, -0.29003942012786865, -0.38580769300460815) * l2(0.0, 0.0);
	r += mat4(-0.19840572774410248, -0.7095925211906433, 0.16768953204154968, 0.6152439713478088, 0.04451883211731911, -0.045017801225185394, 0.012803906574845314, -0.1941426545381546, 0.029167143628001213, 0.006067182868719101, 0.02945590205490589, -0.16037461161613464, 0.0024195907171815634, 0.008504616096615791, 0.027163270860910416, 0.04531247913837433) * l2(1.0, 0.0);
	r += mat4(0.08269977569580078, 0.02791271172463894, -0.05325326696038246, -0.006180874537676573, 0.00662623206153512, 0.05114893242716789, 0.014961189590394497, 0.003908454906195402, -0.030030012130737305, 0.06670074909925461, 0.02683134190738201, -0.005367342382669449, -0.00036698702024295926, -0.0006251271697692573, -0.012830115854740143, -0.01162970531731844) * l2(-1.0, 1.0);
	r += mat4(0.22406086325645447, 0.21529221534729004, -0.21259529888629913, -0.16748204827308655, -0.11502385884523392, -0.0803217887878418, -0.020479632541537285, 0.1633225679397583, -0.24246294796466827, -0.1889622062444687, 0.20559102296829224, 0.14871948957443237, -0.005294817965477705, -0.005552563350647688, -0.01724543608725071, -0.017514584586024284) * l2(0.0, 1.0);
	r += mat4(-0.00759683595970273, 0.06549583375453949, 0.03592091053724289, -0.1003228947520256, 0.00902783777564764, -0.016783392056822777, 0.02439589612185955, -0.01889442279934883, -0.05140230432152748, -0.0984812006354332, -0.0125171709805727, 0.11733786761760712, 0.006750559899955988, -0.012301119044423103, -0.013171075843274593, -0.018240468576550484) * l2(1.0, 1.0);
	r += mat4(-0.17084535956382751, 0.16943928599357605, -0.008786998689174652, 0.03944583982229233, -0.11952415853738785, 0.07805535942316055, -0.027137354016304016, 0.01958712562918663, 0.03478875383734703, 0.05040154233574867, -0.02960379794239998, -0.011615116149187088, -0.054321132600307465, -1.330146460531978e-05, -0.02321527898311615, 0.016618791967630386) * l3(-1.0, -1.0);
	r += mat4(0.553529679775238, -0.6897773146629333, 0.15376576781272888, -0.10368601232767105, 0.06152462959289551, -0.06643680483102798, 0.026318002492189407, 0.148528054356575, 0.20546278357505798, 0.18725594878196716, -0.1645156890153885, -0.1254868060350418, 0.02511933073401451, 0.029178576543927193, -0.03844589740037918, -0.028849510475993156) * l3(0.0, -1.0);
	r += mat4(-0.39710915088653564, 0.3506268560886383, -0.13378451764583588, 0.1042444109916687, -0.029562219977378845, -0.02985626645386219, 0.023274829611182213, 0.018272031098604202, 0.016401516273617744, 0.032028067857027054, 0.04098904877901077, -0.0513886883854866, -0.005736842285841703, -0.022572124376893044, 0.006591937970370054, 0.011046048253774643) * l3(1.0, -1.0);
	r += mat4(-0.31857553124427795, 0.19312338531017303, -0.3564489185810089, 0.35577839612960815, 0.18021424114704132, -0.07172799110412598, 0.034408487379550934, 0.01670333556830883, -0.19220782816410065, -0.010988977737724781, 0.005307984538376331, 0.09019316732883453, 0.02131681703031063, -3.3785687264753506e-05, 0.009316137060523033, -0.052736807614564896) * l3(-1.0, 0.0);
	r += mat4(0.3184150755405426, -0.34862732887268066, 0.9087169170379639, -0.7743055820465088, 0.2763710916042328, -0.4461595416069031, 0.495854914188385, -0.4677806496620178, -0.5748310685157776, -0.65654456615448, 0.8920945525169373, 0.2533165216445923, 0.25045549869537354, 0.3125164210796356, 0.3475878834724426, 0.39574190974235535) * l3(0.0, 0.0);
	r += mat4(-0.17064525187015533, 0.09938362240791321, -0.38229450583457947, 0.45235174894332886, -0.127506285905838, 0.10626556724309921, -0.09105776250362396, 0.11959041655063629, -0.11716550588607788, -0.1421608179807663, -0.0172443687915802, 0.4013679623603821, 0.0025379888247698545, 0.009349370375275612, -0.022397205233573914, 0.023137865588068962) * l3(1.0, 0.0);
	r += mat4(-0.0003172605065628886, -0.06388784945011139, -0.04947720095515251, -0.024732159450650215, 0.032450925558805466, -0.09984996914863586, 0.12377933412790298, -0.1684570014476776, -0.09982456266880035, -0.04365987703204155, 0.061172351241111755, 0.03330450505018234, 0.004929632879793644, -0.0005124222952872515, -0.0025856057181954384, 0.024104831740260124) * l3(-1.0, 1.0);
	r += mat4(-0.13745827972888947, 0.015120656229555607, -0.08514097332954407, 0.010413301177322865, 0.07282880693674088, 0.057121217250823975, 0.0008042657864280045, -0.08786213397979736, 0.16025656461715698, 0.03575971722602844, -0.2104543298482895, 0.02122258022427559, 0.0031819643918424845, -0.01798766851425171, -0.017589040100574493, -0.017262957990169525) * l3(0.0, 1.0);
	r += mat4(0.05744938552379608, -0.04920307174324989, 0.0241040401160717, -0.0793425440788269, 0.004203482996672392, 0.013505593873560429, -0.03995698317885399, 0.03332739695906639, -0.0009167451644316316, 0.05840643122792244, 0.024108508601784706, -0.12892982363700867, -0.014154061675071716, 0.016493337228894234, 0.011878515593707561, 0.00162754044868052) * l3(1.0, 1.0);
	r += vec4(-2.7865388219083798e-08, 2.9065856388399425e-09, -3.015741611989142e-08, 3.170154139198189e-09);
	return tanh(r);
}

//!DESC CuNNy-1x16-shuffle
//!HOOK LUMA
//!BIND down
//!BIND rcas
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 1
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
vec4 hook() {
	vec4 r = vec4(0.0);
	vec2 f = fract(down_pos * down_size);
	ivec2 i = ivec2(f * vec2(2.0));
	r.r = down_tex((vec2(0.5) - f) * down_pt + down_pos)[2*i.y + i.x];
	r.r += rcas_tex(rcas_pos).r;
	r.a = 1.0;
	return clamp(r, 0.0, 1.0);
}
