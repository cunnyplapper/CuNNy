// CuNNy 4x32 BILINEAR TEST
// Copyright (c) 2024 cunnyplapper

// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program.  If not, see <https://www.gnu.org/licenses/>.
/* ------------------------------------------------------------------- */


//!DESC CuNNy-4x32-BILINEAR-TEST-in
//!HOOK LUMA
//!COMPUTE 32 16 8 8
//!BIND LUMA
//!SAVE in
//!WIDTH LUMA.w 4 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif
#define l0(x, y) F(LUMA_tex((vec2(clamp(pos + ivec2(x, y), ivec2(0), sz) * ivec2(1, 1) + ivec2(0, 0)) + vec2(0.5)) * LUMA_pt).r)
shared F g[1][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(4, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	#pragma optionNV(unroll all)
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		#pragma optionNV(unroll all)
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			g[0][ay][ax] = l0(x - 1, y - 1);
		}
	}
	barrier();
	F s[3][3][1];
	V4 r0 = V4(0.0);
	V4 r1 = V4(0.0);
	V4 r2 = V4(0.0);
	V4 r3 = V4(0.0);
	V4 r4 = V4(0.0);
	V4 r5 = V4(0.0);
	V4 r6 = V4(0.0);
	V4 r7 = V4(0.0);
	s[0][0][0] = g[0][xy.y+0][xy.x+0];
	s[0][1][0] = g[0][xy.y+0][xy.x+1];
	s[0][2][0] = g[0][xy.y+0][xy.x+2];
	s[1][0][0] = g[0][xy.y+1][xy.x+0];
	s[1][1][0] = g[0][xy.y+1][xy.x+1];
	s[1][2][0] = g[0][xy.y+1][xy.x+2];
	s[2][0][0] = g[0][xy.y+2][xy.x+0];
	s[2][1][0] = g[0][xy.y+2][xy.x+1];
	s[2][2][0] = g[0][xy.y+2][xy.x+2];
	r0 += V4(-7.738e-02, 6.958e-02, -3.795e-02, 2.250e-02) * s[0][0][0];
	r1 += V4(-1.302e-01, -7.400e-03, 2.172e-02, 8.027e-02) * s[0][0][0];
	r2 += V4(1.939e-02, -2.368e-01, 9.594e-02, 1.029e-02) * s[0][0][0];
	r3 += V4(-5.486e-02, -6.401e-03, 5.749e-02, 4.219e-03) * s[0][0][0];
	r4 += V4(1.286e-02, 7.942e-02, 1.877e-02, 2.669e-02) * s[0][0][0];
	r5 += V4(-2.701e-04, -4.802e-02, 1.948e-01, 9.040e-02) * s[0][0][0];
	r6 += V4(-2.378e-01, 1.958e-02, 1.285e-01, -9.249e-03) * s[0][0][0];
	r7 += V4(1.107e-02, -9.394e-03, 1.709e-01, 1.333e-01) * s[0][0][0];
	r0 += V4(-4.536e-02, -9.258e-02, 8.485e-02, 3.507e-02) * s[0][1][0];
	r1 += V4(-4.550e-03, 1.391e-01, -4.244e-05, 1.997e-01) * s[0][1][0];
	r2 += V4(-5.226e-02, 2.383e-01, 3.506e-01, -1.488e-01) * s[0][1][0];
	r3 += V4(-1.057e-01, 1.234e-02, -1.988e-01, -1.551e-01) * s[0][1][0];
	r4 += V4(-3.137e-02, -2.435e-02, -2.971e-02, -6.189e-02) * s[0][1][0];
	r5 += V4(3.022e-02, 4.361e-02, -2.258e-01, -9.492e-01) * s[0][1][0];
	r6 += V4(1.620e-04, -2.301e-02, -1.618e-01, -2.014e-01) * s[0][1][0];
	r7 += V4(-9.937e-02, 3.008e-02, -1.057e-01, -1.475e-01) * s[0][1][0];
	r0 += V4(9.497e-02, 2.046e-02, -4.015e-02, 6.949e-02) * s[0][2][0];
	r1 += V4(2.136e-02, 2.072e-02, 1.231e-02, 5.483e-02) * s[0][2][0];
	r2 += V4(-8.706e-03, 3.905e-03, 4.464e-04, 1.548e-01) * s[0][2][0];
	r3 += V4(-3.282e-02, 1.467e-02, 9.168e-02, -2.376e-02) * s[0][2][0];
	r4 += V4(4.681e-02, 1.824e-01, 1.170e-02, -1.597e-01) * s[0][2][0];
	r5 += V4(-2.850e-02, -4.260e-04, 5.038e-02, -4.271e-01) * s[0][2][0];
	r6 += V4(-1.104e-02, 9.662e-04, -2.594e-02, 2.082e-01) * s[0][2][0];
	r7 += V4(-2.290e-01, -4.700e-02, 3.798e-02, 4.529e-02) * s[0][2][0];
	r0 += V4(-5.801e-03, 1.192e-02, -9.644e-02, 1.282e-01) * s[1][0][0];
	r1 += V4(-7.690e-02, -4.879e-02, -1.823e-02, -8.945e-02) * s[1][0][0];
	r2 += V4(-2.403e-02, 2.486e-01, -1.357e-01, 5.782e-02) * s[1][0][0];
	r3 += V4(2.403e-01, 1.870e-01, -1.092e-01, -1.352e-01) * s[1][0][0];
	r4 += V4(4.523e-02, -8.250e-02, 3.370e-01, -6.883e-03) * s[1][0][0];
	r5 += V4(-5.322e-02, 9.222e-02, 7.587e-02, 6.922e-02) * s[1][0][0];
	r6 += V4(-5.747e-02, -1.782e-01, 7.750e-02, 8.445e-03) * s[1][0][0];
	r7 += V4(4.141e-02, 2.414e-01, -7.937e-01, -1.580e-01) * s[1][0][0];
	r0 += V4(1.999e-01, -2.864e-01, -1.958e-01, -1.127e-01) * s[1][1][0];
	r1 += V4(2.874e-01, 1.332e-01, 1.587e-01, -1.805e-02) * s[1][1][0];
	r2 += V4(1.791e-02, -9.728e-02, -2.839e-01, 3.794e-02) * s[1][1][0];
	r3 += V4(-2.331e-02, 2.969e-03, -9.285e-02, 2.803e-01) * s[1][1][0];
	r4 += V4(9.644e-02, -2.454e-01, -3.043e-01, 3.048e-01) * s[1][1][0];
	r5 += V4(1.619e-02, -5.941e-02, -4.199e-02, -2.923e-01) * s[1][1][0];
	r6 += V4(-1.862e-02, -1.438e-01, 1.157e-02, -3.057e-01) * s[1][1][0];
	r7 += V4(2.497e-01, 7.476e-02, -2.407e+00, 5.630e-02) * s[1][1][0];
	r0 += V4(-9.790e-02, -5.095e-02, -1.469e-01, 6.168e-02) * s[1][2][0];
	r1 += V4(-2.961e-02, 1.630e-01, -1.551e-02, -6.047e-02) * s[1][2][0];
	r2 += V4(-2.220e-02, -1.365e-01, -2.179e-02, -1.228e-01) * s[1][2][0];
	r3 += V4(-1.471e-02, -2.035e-01, 2.378e-01, -1.017e-01) * s[1][2][0];
	r4 += V4(-9.323e-02, -8.862e-02, -4.507e-02, -2.201e-02) * s[1][2][0];
	r5 += V4(2.685e-01, -2.885e-02, -4.376e-02, -1.050e+00) * s[1][2][0];
	r6 += V4(7.274e-03, 7.876e-02, -5.358e-03, 2.909e-01) * s[1][2][0];
	r7 += V4(2.348e-02, -1.250e-01, -7.425e-02, 7.739e-02) * s[1][2][0];
	r0 += V4(5.691e-02, 6.111e-02, 1.191e-01, -2.887e-02) * s[2][0][0];
	r1 += V4(-4.929e-01, 7.090e-02, 1.280e-01, -1.420e-02) * s[2][0][0];
	r2 += V4(2.947e-03, -1.072e-02, 1.338e-02, 3.201e-03) * s[2][0][0];
	r3 += V4(-5.212e-02, -5.216e-02, 3.232e-02, 7.091e-03) * s[2][0][0];
	r4 += V4(-2.391e-01, 1.283e-01, 9.448e-02, 4.680e-02) * s[2][0][0];
	r5 += V4(-2.161e-01, 2.483e-01, 1.062e-02, 4.524e-02) * s[2][0][0];
	r6 += V4(2.939e-01, -4.745e-02, -2.203e-01, -5.115e-03) * s[2][0][0];
	r7 += V4(-4.434e-02, 1.584e-02, -1.051e-01, 2.521e-02) * s[2][0][0];
	r0 += V4(-9.799e-02, 2.589e-01, 1.172e-01, -2.354e-02) * s[2][1][0];
	r1 += V4(-9.203e-02, -3.057e-01, -5.762e-01, -1.501e-01) * s[2][1][0];
	r2 += V4(-1.146e-02, -9.300e-02, -1.279e-02, 5.484e-02) * s[2][1][0];
	r3 += V4(1.966e-02, -1.968e-01, -4.483e-02, -6.894e-03) * s[2][1][0];
	r4 += V4(1.248e-01, -1.295e-01, -9.968e-02, -1.580e-01) * s[2][1][0];
	r5 += V4(-7.938e-02, 1.342e-02, -5.196e-02, 5.633e-02) * s[2][1][0];
	r6 += V4(2.191e-02, -8.333e-03, 1.514e-01, 2.985e-02) * s[2][1][0];
	r7 += V4(5.985e-02, -7.397e-02, 2.841e-02, 9.155e-02) * s[2][1][0];
	r0 += V4(7.487e-04, 8.993e-03, 1.997e-01, 1.343e-01) * s[2][2][0];
	r1 += V4(4.837e-02, -1.606e-01, 1.814e-01, -7.177e-03) * s[2][2][0];
	r2 += V4(2.150e-01, 8.179e-02, -2.474e-03, -3.027e-02) * s[2][2][0];
	r3 += V4(2.518e-02, 2.438e-01, 2.343e-02, 2.465e-02) * s[2][2][0];
	r4 += V4(5.266e-02, 1.875e-01, 1.869e-02, -7.886e-02) * s[2][2][0];
	r5 += V4(6.325e-02, 1.797e-02, 3.624e-02, -1.506e-02) * s[2][2][0];
	r6 += V4(8.524e-04, 3.003e-01, 3.677e-02, -1.593e-02) * s[2][2][0];
	r7 += V4(-1.036e-02, -1.005e-01, 3.577e-02, -1.007e-01) * s[2][2][0];
	r0 += V4(1.285e-02, 6.139e-03, -3.204e-03, -4.347e-02);
	r0 = max(r0, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 0), vec4(r0));
	r1 += V4(1.369e-02, -1.649e-02, -2.586e-04, 2.608e-02);
	r1 = max(r1, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(r1));
	r2 += V4(-9.399e-02, -1.419e-03, -4.954e-04, 5.115e-03);
	r2 = max(r2, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(r2));
	r3 += V4(1.504e-02, -4.720e-03, 2.750e-02, 5.066e-02);
	r3 = max(r3, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(r3));
	r4 += V4(3.188e-03, -9.342e-03, -5.298e-03, 5.791e-04);
	r4 = max(r4, V4(0.0));
	imageStore(out_image, opos + ivec2(2, 0), vec4(r4));
	r5 += V4(-2.281e-03, -2.652e-01, 1.598e-02, 5.944e-02);
	r5 = max(r5, V4(0.0));
	imageStore(out_image, opos + ivec2(3, 0), vec4(r5));
	r6 += V4(-6.085e-04, 5.486e-03, -7.582e-04, -1.585e-03);
	r6 = max(r6, V4(0.0));
	imageStore(out_image, opos + ivec2(2, 1), vec4(r6));
	r7 += V4(-7.096e-03, 7.339e-03, 6.180e-02, 1.517e-03);
	r7 = max(r7, V4(0.0));
	imageStore(out_image, opos + ivec2(3, 1), vec4(r7));
}

//!DESC CuNNy-4x32-BILINEAR-TEST-conv1
//!HOOK LUMA
//!COMPUTE 32 16 8 8
//!BIND in
//!BIND LUMA
//!SAVE conv1
//!WIDTH LUMA.w 4 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_spirv_intrinsics : require
#extension GL_EXT_control_flow_attributes : require
spirv_instruction (extensions = ["SPV_KHR_integer_dot_product"], capabilities = [6019, 6018], id = 4450)
int dp4(int a, int b, spirv_literal int fmt);
#define D(r, s, a, b, c, d) ivec4(r.x + dp4(s, a, 0), r.y + dp4(s, b, 0), r.z + dp4(s, c, 0), r.w + dp4(s, d, 0))
shared int G[8][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(4, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	[[unroll]] for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		[[unroll]] for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			vec4 r, g, b, a;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(4, 2) + ivec2(1, 1)) * in_pt;
			r = in_gather(p, 0);
			g = in_gather(p, 1);
			b = in_gather(p, 2);
			a = in_gather(p, 3);
			vec4 v0 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v1 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v2 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v3 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(4, 2) + ivec2(3, 1)) * in_pt;
			r = in_gather(p, 0);
			g = in_gather(p, 1);
			b = in_gather(p, 2);
			a = in_gather(p, 3);
			vec4 v4 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v5 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v6 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v7 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			G[0][ay][ax] = int(packSnorm4x8(v0));
			G[1][ay][ax] = int(packSnorm4x8(v1));
			G[2][ay][ax] = int(packSnorm4x8(v2));
			G[3][ay][ax] = int(packSnorm4x8(v3));
			G[4][ay][ax] = int(packSnorm4x8(v4));
			G[5][ay][ax] = int(packSnorm4x8(v5));
			G[6][ay][ax] = int(packSnorm4x8(v6));
			G[7][ay][ax] = int(packSnorm4x8(v7));
		}
	}
	barrier();
	int s[2][3][3];
	ivec4 r0 = ivec4(0);
	ivec4 r1 = ivec4(0);
	ivec4 r2 = ivec4(0);
	ivec4 r3 = ivec4(0);
	ivec4 r4 = ivec4(0);
	ivec4 r5 = ivec4(0);
	ivec4 r6 = ivec4(0);
	ivec4 r7 = ivec4(0);
	s[0][0][0] = G[0][xy.y+0][xy.x+0]; s[0][0][1] = G[0][xy.y+0][xy.x+1];
	s[0][0][2] = G[0][xy.y+0][xy.x+2]; s[0][1][0] = G[0][xy.y+1][xy.x+0];
	s[0][1][1] = G[0][xy.y+1][xy.x+1]; s[0][1][2] = G[0][xy.y+1][xy.x+2];
	s[0][2][0] = G[0][xy.y+2][xy.x+0]; s[0][2][1] = G[0][xy.y+2][xy.x+1];
	s[0][2][2] = G[0][xy.y+2][xy.x+2]; s[1][0][0] = G[1][xy.y+0][xy.x+0];
	s[1][0][1] = G[1][xy.y+0][xy.x+1]; s[1][0][2] = G[1][xy.y+0][xy.x+2];
	s[1][1][0] = G[1][xy.y+1][xy.x+0]; s[1][1][1] = G[1][xy.y+1][xy.x+1];
	s[1][1][2] = G[1][xy.y+1][xy.x+2]; s[1][2][0] = G[1][xy.y+2][xy.x+0];
	s[1][2][1] = G[1][xy.y+2][xy.x+1]; s[1][2][2] = G[1][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xFA0E01E3, 0x11F70AF0, 0xF2FBFC04, 0xFAED2807);
	r1 = D(r1, s[0][0][0], 0x0AF80E26, 0x0E1E08E0, 0x100EFFFB, 0x00EBFEE8);
	r2 = D(r2, s[0][0][0], 0xEBC8F6D1, 0xF7F207ED, 0xF30AE0FE, 0xFA1F0608);
	r3 = D(r3, s[0][0][0], 0x08FF20F8, 0x07E6191A, 0xF3E6F3F5, 0xF2C1C1F8);
	r4 = D(r4, s[0][0][0], 0xFD1601F3, 0x060C0302, 0x07F306F7, 0xDCCB00FA);
	r5 = D(r5, s[0][0][0], 0x051605E4, 0x09071101, 0x03EE1108, 0x02FE10F8);
	r6 = D(r6, s[0][0][0], 0x0A05F50F, 0xFDAA100C, 0xFE080203, 0xFB01190E);
	r7 = D(r7, s[0][0][0], 0xFA020F11, 0x08080400, 0x0517F003, 0xFAE9FD1B);
	r0 = D(r0, s[0][0][1], 0xF3F0F40D, 0x0917FB13, 0xFF2002F9, 0x04E91307);
	r1 = D(r1, s[0][0][1], 0xFAE2CA06, 0xEF03F603, 0x07E6F50B, 0x15F81BF2);
	r2 = D(r2, s[0][0][1], 0x08F3E607, 0x01080108, 0xFFDFEBED, 0x020234EF);
	r3 = D(r3, s[0][0][1], 0xFBFB01EE, 0xF7F503F4, 0x0601E407, 0xF9F3E409);
	r4 = D(r4, s[0][0][1], 0x07180F04, 0x042118E4, 0xF8D52202, 0xD202DE01);
	r5 = D(r5, s[0][0][1], 0xFC050EE5, 0x0DF6FBF1, 0xF2000001, 0x08FEFEE0);
	r6 = D(r6, s[0][0][1], 0x1DFD0C04, 0x00CFCEF5, 0xFE03F1FD, 0xF3EE07EE);
	r7 = D(r7, s[0][0][1], 0x0AEDFA20, 0x13050801, 0xF6F11E0F, 0x07EE0507);
	r0 = D(r0, s[0][0][2], 0x0E08FF11, 0x05F320ED, 0x13F300F9, 0xEB130106);
	r1 = D(r1, s[0][0][2], 0xE8C3EE02, 0x0F09ED06, 0xF800FCE7, 0x00050211);
	r2 = D(r2, s[0][0][2], 0xF80106EA, 0x03130AFE, 0xE60307F3, 0xF4E7EDFA);
	r3 = D(r3, s[0][0][2], 0x01F9CB0C, 0xFA0D23E8, 0xFEF21E02, 0xFD0408FF);
	r4 = D(r4, s[0][0][2], 0xED04090D, 0xF2090E09, 0xF600ED0B, 0xE8F6DFF6);
	r5 = D(r5, s[0][0][2], 0x01F8F617, 0x18F802F5, 0x10170C11, 0xEEF6FDFD);
	r6 = D(r6, s[0][0][2], 0x0801FDFB, 0xFFDCDA01, 0x10F1FAFA, 0x02100FFE);
	r7 = D(r7, s[0][0][2], 0xF709FDF0, 0x04000B03, 0x02120BE1, 0xFC10E005);
	r0 = D(r0, s[0][1][0], 0x010A060F, 0x00FFED13, 0xF9E6EB12, 0x01F10017);
	r1 = D(r1, s[0][1][0], 0xF5BB1705, 0x05060315, 0x00C3F30A, 0x0C17F709);
	r2 = D(r2, s[0][1][0], 0xE8EB01D7, 0xF8080A0B, 0xF2000909, 0x083AE4F5);
	r3 = D(r3, s[0][1][0], 0x04FD0407, 0xFCE8FC04, 0xEFDDFB0E, 0xFA10F9F8);
	r4 = D(r4, s[0][1][0], 0x0304FA02, 0x020BFADA, 0xF4FA1BF9, 0xD00D01EC);
	r5 = D(r5, s[0][1][0], 0xF4FC05EE, 0x0EFA18FA, 0x09C0F6F9, 0x1703FFFD);
	r6 = D(r6, s[0][1][0], 0x1506EEFB, 0x0502100A, 0x0208E9FB, 0x1D04E5EC);
	r7 = D(r7, s[0][1][0], 0x02FE0A1B, 0x180E0DF1, 0xF2EEFC13, 0x04020D0A);
	r0 = D(r0, s[0][1][1], 0x17FCF8F4, 0x000412E9, 0x10FFF80E, 0x0A100B05);
	r1 = D(r1, s[0][1][1], 0x0BE1F30B, 0xF81B0D07, 0x03D08311, 0xEEF9FB00);
	r2 = D(r2, s[0][1][1], 0xF301EFFD, 0xFBFF1AF2, 0xEC1E1DFD, 0x0C22051F);
	r3 = D(r3, s[0][1][1], 0x0A031A08, 0xFBF10B01, 0x06FE2BF5, 0x13F604FA);
	r4 = D(r4, s[0][1][1], 0xFC05EE08, 0x01001316, 0x131EF811, 0xC9041CE2);
	r5 = D(r5, s[0][1][1], 0xF6DFF327, 0x0706021F, 0xF2F61C0E, 0x000C1B18);
	r6 = D(r6, s[0][1][1], 0x02F7091E, 0xF60FF10D, 0xF81D27FF, 0xEAFEF306);
	r7 = D(r7, s[0][1][1], 0x13F712E2, 0x08FBF003, 0x00D70DC4, 0xFFF90511);
	r0 = D(r0, s[0][1][2], 0xF6F916DF, 0xF5F8020F, 0xFF02F904, 0x01130DFC);
	r1 = D(r1, s[0][1][2], 0x01F1EDE7, 0xFFFCE3FE, 0xFFF4C8F3, 0x03E70BF8);
	r2 = D(r2, s[0][1][2], 0xE820051C, 0xFCFC1104, 0x0EF31906, 0xF5E9E7DF);
	r3 = D(r3, s[0][1][2], 0xE315E410, 0xF60EFC00, 0x09F913F2, 0x031B1906);
	r4 = D(r4, s[0][1][2], 0x0EF41800, 0x0905F403, 0xFDFFE7FE, 0xDA10F6F7);
	r5 = D(r5, s[0][1][2], 0x0E00F909, 0xFCFFFE00, 0x071C2305, 0x001AECF5);
	r6 = D(r6, s[0][1][2], 0xF2FB03F3, 0x0A2C15EF, 0x01FFFEF6, 0x0CF60207);
	r7 = D(r7, s[0][1][2], 0x03FD0A10, 0x060803F9, 0xFF0417FF, 0x030712EC);
	r0 = D(r0, s[0][2][0], 0xECFEF40A, 0xEE02F0EE, 0xFF0F03FE, 0xFC1FF2F8);
	r1 = D(r1, s[0][2][0], 0x1E0FF4F8, 0xF9F80EEE, 0x00020207, 0xFFE4FD0A);
	r2 = D(r2, s[0][2][0], 0xF004F2F4, 0x0BED1304, 0xF4FDF0EC, 0xFA1FFD1D);
	r3 = D(r3, s[0][2][0], 0x07F9F2F1, 0x0EFBF1FD, 0x0604E906, 0x03130507);
	r4 = D(r4, s[0][2][0], 0xFFFFF20C, 0xFC07FB05, 0x041AFCFA, 0xEBFFF9FA);
	r5 = D(r5, s[0][2][0], 0x02FAFE0C, 0x0AFB0901, 0x0704E807, 0x070FF614);
	r6 = D(r6, s[0][2][0], 0x14F00407, 0xF90111E0, 0xFEFC0104, 0x0C17F602);
	r7 = D(r7, s[0][2][0], 0xFBF9F012, 0x020CF2FD, 0x07FC02F7, 0x07FA02FF);
	r0 = D(r0, s[0][2][1], 0x06F5EAEA, 0x05F5FD13, 0xFC1FE3EE, 0x0217ECF2);
	r1 = D(r1, s[0][2][1], 0xFA05FF04, 0xFFDA081B, 0xFF11E6EC, 0xF4FD1B14);
	r2 = D(r2, s[0][2][1], 0xFEFFF80C, 0xFDED1306, 0xF607130C, 0x0A06CCD9);
	r3 = D(r3, s[0][2][1], 0x06F00EFD, 0x0DF304EB, 0x0CFCFB03, 0x0603F9F6);
	r4 = D(r4, s[0][2][1], 0x150DEEF4, 0x0FF904DB, 0xFBF504F7, 0xDB161312);
	r5 = D(r5, s[0][2][1], 0xFE1315F3, 0xFD04FC04, 0x031407D6, 0x011501F5);
	r6 = D(r6, s[0][2][1], 0x14FC14F9, 0x051611FE, 0x05F0080E, 0xF5EFF7FD);
	r7 = D(r7, s[0][2][1], 0x01F403F2, 0xFCFAE907, 0x0007F315, 0x05F0FEF3);
	r0 = D(r0, s[0][2][2], 0xFA110410, 0xFF09EBF8, 0xF3050BF9, 0x01F3F7F6);
	r1 = D(r1, s[0][2][2], 0x071014E2, 0x03F024EA, 0xFCFFF80F, 0xF8FE1703);
	r2 = D(r2, s[0][2][2], 0xEFFC03FE, 0x00F809FB, 0xFBF20502, 0xEF1BD6E3);
	r3 = D(r3, s[0][2][2], 0x04020206, 0x09040A18, 0x00091608, 0x060AF405);
	r4 = D(r4, s[0][2][2], 0xF6E8FDF2, 0xF4FDF60A, 0xF307F5FD, 0xF703F601);
	r5 = D(r5, s[0][2][2], 0xFAF603F6, 0x0604EAF7, 0xF2ED1104, 0x010ED806);
	r6 = D(r6, s[0][2][2], 0x13F608F8, 0xFE0B050D, 0xF1FFEF15, 0x04060702);
	r7 = D(r7, s[0][2][2], 0xF6F1FEE5, 0x05FA01FB, 0x06F90905, 0xF30F06F6);
	r0 = D(r0, s[1][0][0], 0xF60203FB, 0xF2E0DDE5, 0x0506C809, 0x11F82804);
	r1 = D(r1, s[1][0][0], 0xEBEC02FB, 0xFCFE06F7, 0xF21201F4, 0x01F30109);
	r2 = D(r2, s[1][0][0], 0xDCE8FFEC, 0xFEFD07FB, 0x01E0F00C, 0xFF120A17);
	r3 = D(r3, s[1][0][0], 0xF50D1102, 0x03F307FC, 0xF506E504, 0xF611BB05);
	r4 = D(r4, s[1][0][0], 0xFCFC1CE7, 0x070FF7FA, 0xE2DD46F4, 0x001106EC);
	r5 = D(r5, s[1][0][0], 0xEC021AF5, 0x050DF1FE, 0x11212811, 0xEFD5320A);
	r6 = D(r6, s[1][0][0], 0xFAED0611, 0x01D90E02, 0x10130A06, 0x0D110506);
	r7 = D(r7, s[1][0][0], 0xFFFFE5FD, 0xFBFF0012, 0x050F000D, 0x06010C05);
	r0 = D(r0, s[1][0][1], 0xFC1D1B1F, 0x20FC04F7, 0x051806F2, 0xFB163B29);
	r1 = D(r1, s[1][0][1], 0x1B1EDC0C, 0x1C011313, 0x11FAD31B, 0xF3F6EBF1);
	r2 = D(r2, s[1][0][1], 0x090E0C2E, 0xED050CFE, 0x0F2601EE, 0xE881FDFB);
	r3 = D(r3, s[1][0][1], 0x013623F1, 0x030106F5, 0xFEE3DE17, 0x0118002B);
	r4 = D(r4, s[1][0][1], 0xF9C7FFEA, 0xE60619FF, 0x080BD8FA, 0x0E3F1519);
	r5 = D(r5, s[1][0][1], 0xD9EA28CF, 0x0D1DF719, 0xFF81021A, 0xFFE3FB1A);
	r6 = D(r6, s[1][0][1], 0xFC240200, 0x01170417, 0xFB05E0F7, 0x001901EA);
	r7 = D(r7, s[1][0][1], 0x2A10F715, 0x02D8F702, 0x05E1EBFB, 0xEF1EFFF6);
	r0 = D(r0, s[1][0][2], 0xFC1A011C, 0xFEF9FB0E, 0xFA0510EE, 0x032D1EDF);
	r1 = D(r1, s[1][0][2], 0xE9170407, 0x18F3C806, 0xF90519F3, 0xF2F10814);
	r2 = D(r2, s[1][0][2], 0xD71306F1, 0xF6F3F7F8, 0x01180028, 0x12F3E130);
	r3 = D(r3, s[1][0][2], 0xEF0A2112, 0x0EEF05E5, 0xDE09FCBC, 0xFFF527E6);
	r4 = D(r4, s[1][0][2], 0xF41907E7, 0x06060507, 0x0AF8F5BF, 0x0B0EFC4B);
	r5 = D(r5, s[1][0][2], 0xF4EF00DE, 0xF71505EC, 0xEEF60C81, 0x09E0FC08);
	r6 = D(r6, s[1][0][2], 0xF3F4096B, 0x05E209E4, 0x0C03081B, 0xFFF212F3);
	r7 = D(r7, s[1][0][2], 0xFB2FF405, 0x0CF3F583, 0xF1FEF620, 0x091403E1);
	r0 = D(r0, s[1][1][0], 0xFF1AEDFD, 0x08EDE01C, 0x0BF3D80E, 0xF0D833FB);
	r1 = D(r1, s[1][1][0], 0xF8E40BE9, 0xE202170A, 0xFC02E609, 0x0B07F4F2);
	r2 = D(r2, s[1][1][0], 0xCB0BFB23, 0x020C180E, 0x11EEF400, 0xFD0202E4);
	r3 = D(r3, s[1][1][0], 0x10FBFEF8, 0x00062FFF, 0xE8101101, 0x100DED1B);
	r4 = D(r4, s[1][1][0], 0xFDEAF10B, 0xFF040006, 0xF906130C, 0xFFDE1BE1);
	r5 = D(r5, s[1][1][0], 0xCA0E2206, 0xF8F90EF4, 0x04DE1FF8, 0x06FEF0EA);
	r6 = D(r6, s[1][1][0], 0x0A00F711, 0xFBF5F726, 0xF115F4FB, 0xF40402FA);
	r7 = D(r7, s[1][1][0], 0x060F0207, 0x0601F30E, 0xF9FEEA03, 0x13F61303);
	r0 = D(r0, s[1][1][1], 0x03FD04FA, 0x0AE9FDF3, 0x1507CCFB, 0xD724CF3D);
	r1 = D(r1, s[1][1][1], 0x01001B15, 0x06FDE7DC, 0x2309B510, 0x11EC0D0E);
	r2 = D(r2, s[1][1][1], 0x06ECE7DC, 0xF9FAEEF9, 0x08E7041D, 0x14FC190A);
	r3 = D(r3, s[1][1][1], 0x01FB0D0D, 0x03F7FF15, 0xF90A140F, 0xFE0E0340);
	r4 = D(r4, s[1][1][1], 0xFE0F0E14, 0xE1F1050D, 0x120FDF2D, 0x000703AA);
	r5 = D(r5, s[1][1][1], 0xD8FB0922, 0x08F4F907, 0xED11FB2A, 0xEB0FEA04);
	r6 = D(r6, s[1][1][1], 0xF202F824, 0xFCF80239, 0xFAF20A04, 0x0AF21403);
	r7 = D(r7, s[1][1][1], 0xE7FEFBDC, 0x0F16F601, 0x131C15ED, 0x16F71400);
	r0 = D(r0, s[1][1][2], 0x0E06FFF3, 0xFCFD1ADD, 0x00E90DF0, 0x0EF31DF9);
	r1 = D(r1, s[1][1][2], 0xFA15F80D, 0x1510F6FC, 0x0BFE19F1, 0xF6F9FD09);
	r2 = D(r2, s[1][1][2], 0x0DEEE711, 0xF6FAF312, 0x03E4EE0E, 0x00150042);
	r3 = D(r3, s[1][1][2], 0x04060A06, 0xEC0BFFD2, 0xF412EF0D, 0xFD0404FA);
	r4 = D(r4, s[1][1][2], 0xF7FFFE20, 0x07FA04E6, 0x0102FEED, 0xF917081E);
	r5 = D(r5, s[1][1][2], 0xE6FAFC23, 0xF8F203F8, 0xF40EF9A7, 0x0D050119);
	r6 = D(r6, s[1][1][2], 0x060B110D, 0x12EC07ED, 0xF6F80AFB, 0x03F20E08);
	r7 = D(r7, s[1][1][2], 0x03FFEEE3, 0xF907111B, 0xF1F0F806, 0x0909F0FE);
	r0 = D(r0, s[1][2][0], 0xFF0BF402, 0x0923EA02, 0x18F2F2FC, 0xF3E504F2);
	r1 = D(r1, s[1][2][0], 0x00190F03, 0xE5FC24FD, 0xFE0C0412, 0xFF0D0405);
	r2 = D(r2, s[1][2][0], 0xEFF4E9E9, 0xF7041508, 0xEDD4FB08, 0x1FEFEBE7);
	r3 = D(r3, s[1][2][0], 0xED060203, 0x070EFB09, 0x160B01F7, 0x07F6FD02);
	r4 = D(r4, s[1][2][0], 0x0907E804, 0x000DED00, 0x02ED09EE, 0xE20BF0F7);
	r5 = D(r5, s[1][2][0], 0x1302EA17, 0xFAFB0908, 0x0D06F502, 0x0F0DEA0B);
	r6 = D(r6, s[1][2][0], 0xF3FE03F3, 0x0D03D82E, 0xF7FC03F5, 0x09FAFE01);
	r7 = D(r7, s[1][2][0], 0xFC10F9F2, 0xFCFE06EF, 0x00FEFF0D, 0x09150A00);
	r0 = D(r0, s[1][2][1], 0xF3100AF0, 0xF71CE5F6, 0x12FDFC08, 0xE8E71000);
	r1 = D(r1, s[1][2][1], 0x0BF20302, 0xE7FCF702, 0x22FEE7E2, 0xF1090906);
	r2 = D(r2, s[1][2][1], 0x061DF40F, 0xFC09FAEB, 0x01F6E10F, 0xF0F8162A);
	r3 = D(r3, s[1][2][1], 0x08020912, 0x0AF60AF8, 0xF8040203, 0x05FC030C);
	r4 = D(r4, s[1][2][1], 0xF1FE0B06, 0xF5031210, 0x03E404FF, 0xE50CEDFE);
	r5 = D(r5, s[1][2][1], 0x1E06D702, 0x09F8F904, 0x02071204, 0x06FFFD09);
	r6 = D(r6, s[1][2][1], 0xFA01011E, 0x150BE7E5, 0xECF81900, 0xF2FC13F8);
	r7 = D(r7, s[1][2][1], 0xF51410EE, 0xFEF215FA, 0xEF02FDFE, 0x020EFDF7);
	r0 = D(r0, s[1][2][2], 0x0101FF09, 0xE7191211, 0xF8FE0FFB, 0xF8F6150C);
	r1 = D(r1, s[1][2][2], 0x1808FE09, 0xE80EFF10, 0x1F0C0AFF, 0xFFF0F4FB);
	r2 = D(r2, s[1][2][2], 0xFF1BEC06, 0x06F80815, 0xD7E41413, 0x00E004F1);
	r3 = D(r3, s[1][2][2], 0x090304FB, 0x080DFCE2, 0x1E05F0EF, 0x00F50D0E);
	r4 = D(r4, s[1][2][2], 0x0B08FFEF, 0xFD030009, 0x000703E3, 0xE21C0206);
	r5 = D(r5, s[1][2][2], 0x1C02FF14, 0x05F70215, 0xEF0EFED9, 0xFC0C10F0);
	r6 = D(r6, s[1][2][2], 0x18FD0AF4, 0x110214F5, 0xF0F3050C, 0x0C00FDF8);
	r7 = D(r7, s[1][2][2], 0xE11A0BF9, 0xF50B03BD, 0x02FEFB07, 0x0F0AECFC);
	s[0][0][0] = G[2][xy.y+0][xy.x+0]; s[0][0][1] = G[2][xy.y+0][xy.x+1];
	s[0][0][2] = G[2][xy.y+0][xy.x+2]; s[0][1][0] = G[2][xy.y+1][xy.x+0];
	s[0][1][1] = G[2][xy.y+1][xy.x+1]; s[0][1][2] = G[2][xy.y+1][xy.x+2];
	s[0][2][0] = G[2][xy.y+2][xy.x+0]; s[0][2][1] = G[2][xy.y+2][xy.x+1];
	s[0][2][2] = G[2][xy.y+2][xy.x+2]; s[1][0][0] = G[3][xy.y+0][xy.x+0];
	s[1][0][1] = G[3][xy.y+0][xy.x+1]; s[1][0][2] = G[3][xy.y+0][xy.x+2];
	s[1][1][0] = G[3][xy.y+1][xy.x+0]; s[1][1][1] = G[3][xy.y+1][xy.x+1];
	s[1][1][2] = G[3][xy.y+1][xy.x+2]; s[1][2][0] = G[3][xy.y+2][xy.x+0];
	s[1][2][1] = G[3][xy.y+2][xy.x+1]; s[1][2][2] = G[3][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xF0101118, 0xE7110DE9, 0xF1FE011E, 0x1BF1F61C);
	r1 = D(r1, s[0][0][0], 0xE51B08FF, 0x01FDFAEC, 0x0002000C, 0xFD1501F8);
	r2 = D(r2, s[0][0][0], 0xECE34981, 0xF205FAF9, 0x1407F750, 0x08E408E7);
	r3 = D(r3, s[0][0][0], 0xF40C1219, 0x01F9F600, 0x00FC0E08, 0x0EC6FE0E);
	r4 = D(r4, s[0][0][0], 0xF70F250E, 0x01030508, 0xF91E17F3, 0xF3EF1AB9);
	r5 = D(r5, s[0][0][0], 0xFA1A1E03, 0x130B0404, 0xFEEFFE0C, 0xFA01050A);
	r6 = D(r6, s[0][0][0], 0xFA000B0B, 0x0A1C14FC, 0x02FB1CF5, 0x09EEFC11);
	r7 = D(r7, s[0][0][0], 0x01FDE604, 0x01F4FBFF, 0x0EF3CB08, 0x0003F2F4);
	r0 = D(r0, s[0][0][1], 0x040425F6, 0xF3F50E22, 0x0704F0FE, 0xFDE8F614);
	r1 = D(r1, s[0][0][1], 0x1502F910, 0xE90D0006, 0x05111003, 0xEA080105);
	r2 = D(r2, s[0][0][1], 0x0C111C1C, 0xEA21FE04, 0x09FC15E4, 0x0115E0FA);
	r3 = D(r3, s[0][0][1], 0xF80CFFFA, 0xED06FB18, 0x00F8153F, 0x03C8F507);
	r4 = D(r4, s[0][0][1], 0x171726E1, 0x11FCFF0B, 0x06140FF7, 0x000003F6);
	r5 = D(r5, s[0][0][1], 0xED2D3E04, 0xF6FF08EE, 0x05F50CF4, 0xFDEEF702);
	r6 = D(r6, s[0][0][1], 0xFA05E4FD, 0x080E2C1D, 0x05FE1208, 0xEC0BFCFF);
	r7 = D(r7, s[0][0][1], 0x0FE9DF17, 0x19F30305, 0xE805F019, 0xE900F50C);
	r0 = D(r0, s[0][0][2], 0x0E1315F5, 0x131919FC, 0xFAEEFCFB, 0x02FF0DF1);
	r1 = D(r1, s[0][0][2], 0x180CE6E8, 0xEEEBFB12, 0x1AF7EEF0, 0xE70C0206);
	r2 = D(r2, s[0][0][2], 0x0DF10DF8, 0x040A0004, 0xE4F112FD, 0xE2FF0811);
	r3 = D(r3, s[0][0][2], 0x13051DFB, 0x0FF6E4FD, 0xF70210F9, 0x03E1020B);
	r4 = D(r4, s[0][0][2], 0x0810FD14, 0x0502EF0A, 0x02EB0017, 0x15EC10FC);
	r5 = D(r5, s[0][0][2], 0xFF151DF4, 0xF7F41003, 0x0DFF02FB, 0xF2F0F805);
	r6 = D(r6, s[0][0][2], 0x0201E915, 0x0A161D04, 0x01F9FBF4, 0x09010B07);
	r7 = D(r7, s[0][0][2], 0xF8FEE2F1, 0xF8E1FEFB, 0x060AE6F7, 0xDBF5F2FF);
	r0 = D(r0, s[0][1][0], 0x1707250A, 0x1AD4FC0F, 0x0A0E05F3, 0xF2F2FCFF);
	r1 = D(r1, s[0][1][0], 0xF10BC9ED, 0x09F4F60C, 0x00FD02FD, 0x0BF50E02);
	r2 = D(r2, s[0][1][0], 0x020511E5, 0xFFFCF911, 0x070803DD, 0xBA0720F4);
	r3 = D(r3, s[0][1][0], 0x061210F3, 0xFEFC0D0F, 0x00F508EE, 0xEC14F80A);
	r4 = D(r4, s[0][1][0], 0xF01819F2, 0xF9160EF1, 0xF9FF1CF0, 0x0F120DEB);
	r5 = D(r5, s[0][1][0], 0xFE1000E8, 0x03F706FA, 0xF2F4F212, 0xF010F3FB);
	r6 = D(r6, s[0][1][0], 0xF006FBF8, 0x05171BE6, 0xFA0219F1, 0xF0032223);
	r7 = D(r7, s[0][1][0], 0x031B200B, 0xFEFE120F, 0x01EFD512, 0x10FBEE15);
	r0 = D(r0, s[0][1][1], 0xF7FF0412, 0xD606F7DB, 0x130617FF, 0xF0B7D1EE);
	r1 = D(r1, s[0][1][1], 0x0A1EE4F6, 0x101304F4, 0xEF17F10D, 0x03370FE5);
	r2 = D(r2, s[0][1][1], 0x113E4F0C, 0x140F3213, 0x01FE28FB, 0x07F71302);
	r3 = D(r3, s[0][1][1], 0xF4BCC4FB, 0x06D6EC08, 0x0C4E300F, 0xED182900);
	r4 = D(r4, s[0][1][1], 0xFE122C03, 0x0C0908E6, 0x18DDFAF9, 0x1B1007E4);
	r5 = D(r5, s[0][1][1], 0x0FF4170D, 0x0A061104, 0x0BFFDE09, 0x08EDF9F8);
	r6 = D(r6, s[0][1][1], 0xFAEE0A02, 0x00F3E111, 0xE5230F05, 0xF2F0F0FE);
	r7 = D(r7, s[0][1][1], 0xF90515D8, 0xFF0A1B0E, 0x065029EE, 0x260BF908);
	r0 = D(r0, s[0][1][2], 0x16FC02F9, 0x05E400FF, 0xE8E6E7FC, 0xF185C301);
	r1 = D(r1, s[0][1][2], 0xEDE4EE0E, 0x0B3200FD, 0x02F6EAF3, 0x101C1DFF);
	r2 = D(r2, s[0][1][2], 0x05121612, 0x01051CF1, 0x1F080DE1, 0xF311F7F5);
	r3 = D(r3, s[0][1][2], 0x0EE7E002, 0x0ADF0509, 0xEC2B1AF5, 0x1205FC0F);
	r4 = D(r4, s[0][1][2], 0x00FD1A00, 0xFEF7FF07, 0xFFFE0B11, 0x10161213);
	r5 = D(r5, s[0][1][2], 0x080709FB, 0x0B0515FD, 0x08D4130C, 0x1B1608FB);
	r6 = D(r6, s[0][1][2], 0x171206F0, 0xEC03C9F5, 0xFF0EE4F5, 0xFDE9EF0A);
	r7 = D(r7, s[0][1][2], 0xEAD91605, 0xF41004EC, 0xF53224F2, 0xF82EF7FE);
	r0 = D(r0, s[0][2][0], 0xFF131B04, 0x09F8D9E3, 0x0A190B14, 0x0F01FE05);
	r1 = D(r1, s[0][2][0], 0xF8F2FBF7, 0x0400E7FD, 0x07ECFCF7, 0xFAEAF409);
	r2 = D(r2, s[0][2][0], 0xD81E16D4, 0xF4F3F4F6, 0xEFF806FA, 0x1EF81EFF);
	r3 = D(r3, s[0][2][0], 0xF709FC05, 0x00FC0AF0, 0x1BEF02ED, 0x031E11F4);
	r4 = D(r4, s[0][2][0], 0x02071106, 0xFB2A14FF, 0xEF10FF04, 0xDA101808);
	r5 = D(r5, s[0][2][0], 0x11111504, 0xFBFBFB00, 0xF316EDED, 0x1E07E713);
	r6 = D(r6, s[0][2][0], 0xF814F2F8, 0xF0050C0B, 0x110BFCF3, 0x0EF508FA);
	r7 = D(r7, s[0][2][0], 0x09141FFF, 0xFAFAF904, 0x261707F4, 0x09F6F003);
	r0 = D(r0, s[0][2][1], 0x06FCE5FE, 0x0706140A, 0xF63DE709, 0x01D3FD09);
	r1 = D(r1, s[0][2][1], 0xFE0B080E, 0x05C2E803, 0xF70EF5FE, 0x051304F7);
	r2 = D(r2, s[0][2][1], 0xE5EA2609, 0x05FA1D09, 0x0DB5FF05, 0xEAF406EF);
	r3 = D(r3, s[0][2][1], 0xFF0AFA01, 0xEDF6FCEB, 0x000CF0F8, 0xF50E2404);
	r4 = D(r4, s[0][2][1], 0xFCF001EE, 0xFC150004, 0xFFFD18FF, 0xF8C30C0F);
	r5 = D(r5, s[0][2][1], 0xE80405FB, 0x01FA2602, 0x0AFDF9F6, 0x07EDEAED);
	r6 = D(r6, s[0][2][1], 0xF91210FA, 0xF69AF512, 0x2011EB09, 0xFCFB16FB);
	r7 = D(r7, s[0][2][1], 0x18051B08, 0xFD0A01FF, 0x0A340607, 0xF1F0FDF4);
	r0 = D(r0, s[0][2][2], 0xFB10F9FE, 0x12122E01, 0x031CF5FE, 0x07F2EF04);
	r1 = D(r1, s[0][2][2], 0xDC05FCEF, 0x151EFB0A, 0xDCFB0615, 0x0A100007);
	r2 = D(r2, s[0][2][2], 0x010A04D8, 0x0505FCF6, 0xFF0223E3, 0x0100F20E);
	r3 = D(r3, s[0][2][2], 0xF71D09FF, 0xFCF5F504, 0xFA0E0510, 0x16EBFAEC);
	r4 = D(r4, s[0][2][2], 0x03F80908, 0x0426F6FB, 0xF4F3F50D, 0x012E1017);
	r5 = D(r5, s[0][2][2], 0xF610DD0A, 0x0CF1F3FD, 0x0DD3F604, 0x0D001307);
	r6 = D(r6, s[0][2][2], 0x07F3F001, 0x05C2EEFC, 0xED0FEDFC, 0x0EF5EBF3);
	r7 = D(r7, s[0][2][2], 0xF4071600, 0xFBFB0900, 0xE10D1205, 0xF2F60A05);
	r0 = D(r0, s[1][0][0], 0xFFE51A00, 0x0EF00011, 0x02070C01, 0xFCFBF304);
	r1 = D(r1, s[1][0][0], 0x03FF07FB, 0xF30E0710, 0x09FEEC0C, 0x04161BFC);
	r2 = D(r2, s[1][0][0], 0xD9E2DDD1, 0xFC0907E8, 0x0A0B1404, 0x02120322);
	r3 = D(r3, s[1][0][0], 0x0501F100, 0x03FAE705, 0xEF0A29F7, 0x0A060D0D);
	r4 = D(r4, s[1][0][0], 0x08FE170F, 0x01F2E3EF, 0xEE08E7FE, 0x12D3F7EC);
	r5 = D(r5, s[1][0][0], 0xFAF21103, 0x0D0C11F4, 0x0A05FEEC, 0x11F8DB17);
	r6 = D(r6, s[1][0][0], 0xF9080003, 0xFBF02504, 0xFC0901FA, 0x07EBF501);
	r7 = D(r7, s[1][0][0], 0xFCDEF80B, 0xFBF4010A, 0xFF07EE01, 0xF606FDF8);
	r0 = D(r0, s[1][0][1], 0x02F30C10, 0x11FF39E6, 0x040BE90C, 0xFAFDEB0D);
	r1 = D(r1, s[1][0][1], 0xEC14D2E6, 0x141D26F0, 0xF60606FF, 0xF30308E7);
	r2 = D(r2, s[1][0][1], 0x02E8F3DA, 0xF80D2906, 0x0C070F07, 0xEEF3FE0E);
	r3 = D(r3, s[1][0][1], 0x0B1735FA, 0xFD02F507, 0xDEF22A10, 0x0FF6DFFE);
	r4 = D(r4, s[1][0][1], 0xED000A0D, 0xEDFBEF07, 0xEE031AE5, 0x12FDFBEF);
	r5 = D(r5, s[1][0][1], 0x0F1E24F5, 0x1801FD07, 0x07E9C802, 0x0B041B1A);
	r6 = D(r6, s[1][0][1], 0xE9010601, 0x13FE0A0E, 0xF2FA12F5, 0xF7F1090F);
	r7 = D(r7, s[1][0][1], 0xF612DEF7, 0xF60BFE1D, 0xFE09EAFE, 0xEC0C0AEE);
	r0 = D(r0, s[1][0][2], 0x0AF9FEEB, 0x170EE60A, 0x0AFC1705, 0xFF09F414);
	r1 = D(r1, s[1][0][2], 0xDDCB0ADF, 0x0511F8DE, 0x03FEF70C, 0xFCF20EFE);
	r2 = D(r2, s[1][0][2], 0xECF8FAF9, 0x06FB0CF9, 0xE7021E07, 0x010403F5);
	r3 = D(r3, s[1][0][2], 0x0807E8EC, 0x0EF500E8, 0x02060617, 0x06EB0EF8);
	r4 = D(r4, s[1][0][2], 0xFBF124EF, 0x10110707, 0x05F91BE1, 0xEAE6FC1D);
	r5 = D(r5, s[1][0][2], 0xF4101BE2, 0x02120AF4, 0xF3F5DDF8, 0x07F722FF);
	r6 = D(r6, s[1][0][2], 0x080616F4, 0xF4FEF0F9, 0xFAF40002, 0x0801F8E7);
	r7 = D(r7, s[1][0][2], 0x11160B12, 0x09F6FBF7, 0xFFFAFF13, 0xF2EEFAFF);
	r0 = D(r0, s[1][1][0], 0xF402090D, 0xF5031DF2, 0x18CEF4FE, 0x09031608);
	r1 = D(r1, s[1][1][0], 0x2710DA0B, 0x16F60706, 0xFD0EE4FC, 0xE91BFB13);
	r2 = D(r2, s[1][1][0], 0x0C13EAFA, 0xFD02160A, 0x1BE30CFF, 0x050916FB);
	r3 = D(r3, s[1][1][0], 0x1E130402, 0x0809DBF3, 0xF80C040A, 0xF7061500);
	r4 = D(r4, s[1][1][0], 0xFA1C00E6, 0x08F0F80E, 0x21050115, 0x17C334FD);
	r5 = D(r5, s[1][1][0], 0xFB06E111, 0x1AF50EFC, 0xF814B6EF, 0xFD1DEF01);
	r6 = D(r6, s[1][1][0], 0xE9FFECF2, 0x0401F3FB, 0xF80B00E5, 0xF82F0C17);
	r7 = D(r7, s[1][1][0], 0xF6041A03, 0xEEFC02FD, 0xDBDA08E9, 0x01FDE304);
	r0 = D(r0, s[1][1][1], 0xDFEE02F5, 0xF9EBF8FB, 0xF201FC05, 0x32040808);
	r1 = D(r1, s[1][1][1], 0xF8191413, 0xF1DCFCEA, 0x1B02DD06, 0x060F21EA);
	r2 = D(r2, s[1][1][1], 0xE8FEFDE7, 0xF30AF614, 0xA6FB1AFA, 0x20FB5713);
	r3 = D(r3, s[1][1][1], 0xEF1AF6FE, 0x0509DE1A, 0x2D1B0112, 0xEF14140B);
	r4 = D(r4, s[1][1][1], 0x1008F8EC, 0x19FCE7FA, 0x01E9F20B, 0x1C0B1017);
	r5 = D(r5, s[1][1][1], 0x18FA3601, 0x150306FB, 0x09EF0CF0, 0x04E327F4);
	r6 = D(r6, s[1][1][1], 0xFEFC10FB, 0x0D14CA0B, 0x02FAF00A, 0x090C15F0);
	r7 = D(r7, s[1][1][1], 0x021C03F9, 0x2B1711E8, 0x06FCCEFB, 0x11F8FCF3);
	r0 = D(r0, s[1][1][2], 0xE4FBE2EE, 0xF7210301, 0x02020A03, 0xDCF7E909);
	r1 = D(r1, s[1][1][2], 0x28FE1003, 0xEAF4FBEB, 0x03F60DE8, 0x0EFB07FA);
	r2 = D(r2, s[1][1][2], 0x0F1E0DDB, 0x00E506EF, 0xF81418DF, 0xE3FD22EB);
	r3 = D(r3, s[1][1][2], 0x190701F3, 0xFCF402FB, 0xF50D04E4, 0x10FE0608);
	r4 = D(r4, s[1][1][2], 0x06D80C2A, 0x0119051A, 0xE5F21015, 0x100BF5CD);
	r5 = D(r5, s[1][1][2], 0xEFF3000A, 0x16111A12, 0x0BF5F212, 0x1302FFF9);
	r6 = D(r6, s[1][1][2], 0xFBF5F30F, 0xE906EF0E, 0xDF00F411, 0xEBFF0514);
	r7 = D(r7, s[1][1][2], 0x06FDFE00, 0x070A0703, 0xF115ECF2, 0x10FB1109);
	r0 = D(r0, s[1][2][0], 0x2F0C0204, 0xDFDCFFF3, 0xFFE50B05, 0xEF0E1CEA);
	r1 = D(r1, s[1][2][0], 0xE6F917E0, 0x0AF5E618, 0xFF020005, 0xF503E4EF);
	r2 = D(r2, s[1][2][0], 0xF9E2F7F1, 0xE6FDF7F7, 0xEBF5FBF9, 0x0EFAF216);
	r3 = D(r3, s[1][2][0], 0x0DF60001, 0x0BFAEEFC, 0x141EE908, 0x1A07FEFE);
	r4 = D(r4, s[1][2][0], 0x090D05F6, 0x02E9FEFD, 0xF7E40EF3, 0xF4D117FD);
	r5 = D(r5, s[1][2][0], 0xEF0019DA, 0x28EBFF0B, 0x0914DA18, 0x06FBF8F0);
	r6 = D(r6, s[1][2][0], 0xEFFD05F9, 0x10F901F8, 0xF1FF0201, 0xF31B0604);
	r7 = D(r7, s[1][2][0], 0x14E71E07, 0xF1021405, 0x06F40607, 0xF8F7FDFE);
	r0 = D(r0, s[1][2][1], 0xFFFEF5FE, 0x06EDFD02, 0xEB0B1CFE, 0xF60E15F7);
	r1 = D(r1, s[1][2][1], 0x0B0BF129, 0x090AF20D, 0xE614F8EC, 0x07FCED06);
	r2 = D(r2, s[1][2][1], 0x27F214F2, 0x10090E12, 0x0400FF0A, 0xFE0DF5E3);
	r3 = D(r3, s[1][2][1], 0x0C110106, 0xE9FCFB08, 0xECDEEBED, 0x0AF5FF05);
	r4 = D(r4, s[1][2][1], 0x0505FBFD, 0x0FF4FAF0, 0xDFFE1506, 0x09051202);
	r5 = D(r5, s[1][2][1], 0xD108FA0D, 0x0DF20B06, 0xD9E20C0E, 0x10E90EF8);
	r6 = D(r6, s[1][2][1], 0xDFF902FC, 0xFAFEFDFA, 0x06062012, 0x19E5FBFE);
	r7 = D(r7, s[1][2][1], 0x1301F307, 0xE5062004, 0x06F3F909, 0x1100F40A);
	r0 = D(r0, s[1][2][2], 0xF71FF303, 0x0504FC06, 0xFBFB10E8, 0xEEFD2912);
	r1 = D(r1, s[1][2][2], 0x1DE6FF05, 0x01F1FF0A, 0x120300E0, 0x08EA01F4);
	r2 = D(r2, s[1][2][2], 0xF7F411FA, 0xFCE20A09, 0x0CF3F5E7, 0xE2F41202);
	r3 = D(r3, s[1][2][2], 0xE3F6FC0E, 0xEC190FFE, 0x28EEFDEC, 0xE9EC1AEB);
	r4 = D(r4, s[1][2][2], 0x0E0A0AFB, 0x120D08F7, 0xFE0D2600, 0xECE31B01);
	r5 = D(r5, s[1][2][2], 0xF00809F7, 0x3001FDFA, 0x1DDBF41A, 0x0ADCFCDE);
	r6 = D(r6, s[1][2][2], 0xD1FDFFFC, 0x0C0D0DEF, 0xE7FB1A16, 0x05000008);
	r7 = D(r7, s[1][2][2], 0x01FCEFFC, 0xEAF41105, 0x0912F015, 0x2207FD00);
	s[0][0][0] = G[4][xy.y+0][xy.x+0]; s[0][0][1] = G[4][xy.y+0][xy.x+1];
	s[0][0][2] = G[4][xy.y+0][xy.x+2]; s[0][1][0] = G[4][xy.y+1][xy.x+0];
	s[0][1][1] = G[4][xy.y+1][xy.x+1]; s[0][1][2] = G[4][xy.y+1][xy.x+2];
	s[0][2][0] = G[4][xy.y+2][xy.x+0]; s[0][2][1] = G[4][xy.y+2][xy.x+1];
	s[0][2][2] = G[4][xy.y+2][xy.x+2]; s[1][0][0] = G[5][xy.y+0][xy.x+0];
	s[1][0][1] = G[5][xy.y+0][xy.x+1]; s[1][0][2] = G[5][xy.y+0][xy.x+2];
	s[1][1][0] = G[5][xy.y+1][xy.x+0]; s[1][1][1] = G[5][xy.y+1][xy.x+1];
	s[1][1][2] = G[5][xy.y+1][xy.x+2]; s[1][2][0] = G[5][xy.y+2][xy.x+0];
	s[1][2][1] = G[5][xy.y+2][xy.x+1]; s[1][2][2] = G[5][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xE2E5FFF2, 0x29FAEFED, 0x0EF61500, 0x0AFDF818);
	r1 = D(r1, s[0][0][0], 0x1818F8FD, 0x27F9E704, 0xF9FEFBFE, 0xFF09EBFB);
	r2 = D(r2, s[0][0][0], 0x2D2619E8, 0x06EEF7EE, 0xF90DF901, 0xE8FA2B0F);
	r3 = D(r3, s[0][0][0], 0x0B02F2E3, 0xF503F1F9, 0x19F222E9, 0x0381F203);
	r4 = D(r4, s[0][0][0], 0xFC0DF804, 0xF502F205, 0x1F25EC0E, 0x1200240D);
	r5 = D(r5, s[0][0][0], 0x14F0F702, 0x010EFF03, 0x1D00FCED, 0x01050FF8);
	r6 = D(r6, s[0][0][0], 0x18F607FF, 0x0803D9FB, 0xF91B0203, 0xEFF9F7FB);
	r7 = D(r7, s[0][0][0], 0xF9FF0B07, 0xDAF10A05, 0x1CFFE4F2, 0x0507F8F0);
	r0 = D(r0, s[0][0][1], 0x26F5FF03, 0x32FD1113, 0x07EB06FC, 0x05E9F9D8);
	r1 = D(r1, s[0][0][1], 0xE61909F7, 0x0D02FEEC, 0x120E0614, 0x0C16F706);
	r2 = D(r2, s[0][0][1], 0x10C6F801, 0x0BF7F1F5, 0x180CFBE2, 0xF3D2EC0E);
	r3 = D(r3, s[0][0][1], 0x06E60609, 0x0113111B, 0x12E61919, 0xF98172E9);
	r4 = D(r4, s[0][0][1], 0xFD0FEF11, 0x022A0A06, 0xFFF0F2DF, 0x0610100A);
	r5 = D(r5, s[0][0][1], 0x1116EBFE, 0xF108FDFA, 0xF1060EFA, 0xF4E115FE);
	r6 = D(r6, s[0][0][1], 0xFC0F0E11, 0x0AFE09ED, 0xDBFBF215, 0x02FD040F);
	r7 = D(r7, s[0][0][1], 0x26F4FCFD, 0xF9100406, 0xF9F40D0C, 0x0D08FDE8);
	r0 = D(r0, s[0][0][2], 0xEEF4F307, 0xEF03F213, 0xFC01F8E7, 0x080D1404);
	r1 = D(r1, s[0][0][2], 0xF6DA1FF3, 0x060A03FE, 0x0A0505F0, 0xFBFAFC0E);
	r2 = D(r2, s[0][0][2], 0xC8050FFC, 0xF4F007F6, 0x16E11CF2, 0xEEEB1DF0);
	r3 = D(r3, s[0][0][2], 0x0317F007, 0x010BF202, 0xE9F805E9, 0xF10507F5);
	r4 = D(r4, s[0][0][2], 0x07120EE9, 0xF1ECFEEA, 0x0409000F, 0x10F10AFA);
	r5 = D(r5, s[0][0][2], 0xFE12F700, 0x011BF304, 0xF317F701, 0xF70B20F2);
	r6 = D(r6, s[0][0][2], 0x020404EB, 0xF1D1CAFF, 0x000B13FE, 0xFDF3EDE3);
	r7 = D(r7, s[0][0][2], 0x0FEF1812, 0x11121400, 0xEF10141F, 0x0E2E0AFA);
	r0 = D(r0, s[0][1][0], 0xFB0102E9, 0xEBE827FF, 0xF6EE2700, 0x401222FD);
	r1 = D(r1, s[0][1][0], 0xF50B0F0A, 0x05FA1606, 0x0A05DDF9, 0x081804EB);
	r2 = D(r2, s[0][1][0], 0x0A1DD4F2, 0xF9FCF50C, 0x32FF040D, 0xFDFC0BD5);
	r3 = D(r3, s[0][1][0], 0x07F7F1FA, 0xEF0AF30A, 0xD6F70806, 0xE2D61714);
	r4 = D(r4, s[0][1][0], 0x0413F0E4, 0xE4EB11FE, 0xF41E0B10, 0xEE010723);
	r5 = D(r5, s[0][1][0], 0xFDF90105, 0xFE0100FA, 0x1B1D14F3, 0xF1101FF8);
	r6 = D(r6, s[0][1][0], 0x0211FDFE, 0x20FEF7F5, 0x09F607FA, 0xEF21F8EF);
	r7 = D(r7, s[0][1][0], 0xF8F80806, 0x060AFF01, 0x05FD0CF1, 0x110DF2FC);
	r0 = D(r0, s[0][1][1], 0xFEF60A20, 0xF529E5EE, 0x16110F04, 0xD7F604FD);
	r1 = D(r1, s[0][1][1], 0x06CF4905, 0xDA09EBFB, 0x0EF0FF07, 0x244BF8FB);
	r2 = D(r2, s[0][1][1], 0x12FD01FB, 0x0208F0F2, 0xFCFD0A09, 0x31FD1818);
	r3 = D(r3, s[0][1][1], 0xE3F615FC, 0x101CE8ED, 0x0B04DFFE, 0x0BE6FFF1);
	r4 = D(r4, s[0][1][1], 0x15F8DEFE, 0x0CF1EA0D, 0xF5F80AF5, 0x820E0C14);
	r5 = D(r5, s[0][1][1], 0x07DD2C04, 0x0FF70EFF, 0xF6C6FF0B, 0xE8E91801);
	r6 = D(r6, s[0][1][1], 0x09ED451B, 0x0AC11B1C, 0x05F305FC, 0x1C282804);
	r7 = D(r7, s[0][1][1], 0xE20CF704, 0x2DDDE9F1, 0xF503F11A, 0xF60D08FA);
	r0 = D(r0, s[0][1][2], 0xFEE1FD08, 0xFF0F09ED, 0xFD0BFE05, 0x1BFF24FA);
	r1 = D(r1, s[0][1][2], 0xF9CBEEF9, 0x211BF103, 0xEE01F606, 0x0621EC18);
	r2 = D(r2, s[0][1][2], 0x21F30B00, 0x02F80D02, 0x2ED91815, 0xF3F3E205);
	r3 = D(r3, s[0][1][2], 0x11F0F201, 0xEC11CDE5, 0xFC0B2A1A, 0xE708ECF7);
	r4 = D(r4, s[0][1][2], 0xF725F506, 0x130008F7, 0xF3D8EEF5, 0xFEE7FAF6);
	r5 = D(r5, s[0][1][2], 0xF0001607, 0x0311FEF6, 0xDE1AF8DC, 0xFF0CFF17);
	r6 = D(r6, s[0][1][2], 0x120002F9, 0xEE8103FC, 0x110125F8, 0xF70D02F8);
	r7 = D(r7, s[0][1][2], 0x03FD1C0E, 0xEE0F2807, 0x1204071B, 0xEF1D0718);
	r0 = D(r0, s[0][2][0], 0x0318FBF9, 0xF1FD0503, 0x1A09FE08, 0xF2141610);
	r1 = D(r1, s[0][2][0], 0x2118010C, 0xF2F0140D, 0x06FCFE05, 0x070D01FD);
	r2 = D(r2, s[0][2][0], 0x0C031AF4, 0xE0FB0513, 0x3D050214, 0x08F01627);
	r3 = D(r3, s[0][2][0], 0x0A0FFDFB, 0xFD04F2F6, 0x15F20C04, 0xD1120112);
	r4 = D(r4, s[0][2][0], 0x1AFF0B04, 0xFE0A1110, 0x0F060B0E, 0x1704FCEA);
	r5 = D(r5, s[0][2][0], 0x08FA0103, 0xF306FE07, 0x1B00160F, 0x1EECECFC);
	r6 = D(r6, s[0][2][0], 0xFB14F404, 0xF40DCF0C, 0x0DF9FE10, 0x000901FB);
	r7 = D(r7, s[0][2][0], 0x0AEC02F0, 0xEE1419FB, 0xF1E210FB, 0xDEF90608);
	r0 = D(r0, s[0][2][1], 0xF4FD07F7, 0xE30D2100, 0xE10EF00E, 0x0621E410);
	r1 = D(r1, s[0][2][1], 0xFF29DD0E, 0x04E80A06, 0xC50B09DC, 0xFE12F3F5);
	r2 = D(r2, s[0][2][1], 0x37031900, 0x0B110C09, 0x2602F4F8, 0x0B14D9E9);
	r3 = D(r3, s[0][2][1], 0xFBEFF00E, 0xE9FF0CF5, 0x0FDD0FF6, 0x0B09FD12);
	r4 = D(r4, s[0][2][1], 0x0D0200FE, 0x050B16FD, 0xE8070AFC, 0x16F8F6F9);
	r5 = D(r5, s[0][2][1], 0x1203F0E5, 0x081AEFF7, 0xF6D808FF, 0xFF00FCF8);
	r6 = D(r6, s[0][2][1], 0x05010107, 0x07FAFBF9, 0xF700FFFB, 0x050211FF);
	r7 = D(r7, s[0][2][1], 0xDDF01203, 0x05F116FD, 0xF4F217F4, 0xFF0901EC);
	r0 = D(r0, s[0][2][2], 0xF5110407, 0x1EF8FA09, 0x0C03F903, 0x05FC04FA);
	r1 = D(r1, s[0][2][2], 0x0F02B703, 0xE4E9F5F4, 0x10F3F111, 0xF5FD0200);
	r2 = D(r2, s[0][2][2], 0x0FFF15FD, 0xF30B2700, 0xF7210501, 0xFCF7FCF8);
	r3 = D(r3, s[0][2][2], 0xFAFFF4FF, 0x0C0DE8FE, 0xFB0513FF, 0xEFFA0B0C);
	r4 = D(r4, s[0][2][2], 0xFEF40E08, 0xF6F801F5, 0x13F9040B, 0x05FBFF1F);
	r5 = D(r5, s[0][2][2], 0xFBF7030B, 0xF70607EE, 0xEE101F1C, 0x0234170B);
	r6 = D(r6, s[0][2][2], 0x0602FFF5, 0x1FD5E0FD, 0xF5FC12F9, 0xF301F909);
	r7 = D(r7, s[0][2][2], 0x1A041E00, 0x0106160C, 0x07F9F20A, 0xFE090B08);
	r0 = D(r0, s[1][0][0], 0x1120040B, 0xEA17A1F4, 0x20E93112, 0xFDF4F1E8);
	r1 = D(r1, s[1][0][0], 0xE1EF12F9, 0xFDE1CC1A, 0xFE084507, 0x24F5D8F2);
	r2 = D(r2, s[1][0][0], 0xF5FF28FF, 0xF9042506, 0xFDF1E5F8, 0xEE117300);
	r3 = D(r3, s[1][0][0], 0x050D2405, 0x0404E6FE, 0xEF05CBEA, 0x1109E2E1);
	r4 = D(r4, s[1][0][0], 0x160130F6, 0x0A04F10E, 0x00FBE5FF, 0xF905160C);
	r5 = D(r5, s[1][0][0], 0x3C06FBFA, 0xEAFB2702, 0x34FDEF0D, 0x0B0D3808);
	r6 = D(r6, s[1][0][0], 0x54040C03, 0xFDF228F5, 0xFB0CBEF1, 0x0EF93EF3);
	r7 = D(r7, s[1][0][0], 0x19FDEDF4, 0x2A000CFA, 0xE1F70318, 0xFBFF21FF);
	r0 = D(r0, s[1][0][1], 0x07F92A11, 0x12F2CA03, 0xF30A4BE8, 0xF8F401ED);
	r1 = D(r1, s[1][0][1], 0x160D0D0B, 0x0EF01131, 0x18F70A04, 0x04E1E5FF);
	r2 = D(r2, s[1][0][1], 0x1C048109, 0x04F7E8F6, 0x0D001EED, 0x3BF71C03);
	r3 = D(r3, s[1][0][1], 0x0B07DEE8, 0x28F6A10A, 0x34EEE1DE, 0xFB0124DD);
	r4 = D(r4, s[1][0][1], 0xFB0AF5F6, 0xF80303ED, 0x03FFCE15, 0xF80B6704);
	r5 = D(r5, s[1][0][1], 0xF406EEF6, 0x0DF63FEC, 0x19FB1AFC, 0x0402C5F6);
	r6 = D(r6, s[1][0][1], 0x0AF93A02, 0xF101D8E6, 0x03F8D8FA, 0x0AFE000D);
	r7 = D(r7, s[1][0][1], 0xFF07192F, 0xE90602FD, 0x14F12E16, 0x04DEB925);
	r0 = D(r0, s[1][0][2], 0xF601EBFC, 0x230517F7, 0xFCF60BF2, 0x1105E71C);
	r1 = D(r1, s[1][0][2], 0xB21F3C0E, 0xE3FC8121, 0x04014806, 0xE7031CF1);
	r2 = D(r2, s[1][0][2], 0x1F11A5EF, 0xFBFFF303, 0x08FF81EE, 0xE61D1712);
	r3 = D(r3, s[1][0][2], 0xE603BBF4, 0x11F8DBF0, 0xF40653F0, 0xF7FF40F6);
	r4 = D(r4, s[1][0][2], 0x1005F70A, 0x020DFEFD, 0xF51A8A05, 0xE9FDEE0E);
	r5 = D(r5, s[1][0][2], 0xF61560F1, 0xFBF254D4, 0xFCF954F9, 0x08026901);
	r6 = D(r6, s[1][0][2], 0x04FC40DC, 0xFE06C3F4, 0xEBF7CB03, 0xF9FF51F8);
	r7 = D(r7, s[1][0][2], 0x06FBEBF9, 0x0C0633E9, 0x04E50620, 0x11F9FB09);
	r0 = D(r0, s[1][1][0], 0x0B062CF8, 0xD8199919, 0xEC04D51D, 0x0D0B07FE);
	r1 = D(r1, s[1][1][0], 0x1AFC231E, 0xF304F715, 0x080FFB04, 0xE4F9E0F8);
	r2 = D(r2, s[1][1][0], 0x1DF52815, 0xCC0704FB, 0x180708C3, 0xE5E85B14);
	r3 = D(r3, s[1][1][0], 0x08001F03, 0xE519F8FB, 0xC2098F18, 0x3207F805);
	r4 = D(r4, s[1][1][0], 0xF7FCF406, 0x06FC0AFE, 0xC6F10DEE, 0x4306EE0E);
	r5 = D(r5, s[1][1][0], 0xE6F6DA02, 0xE5EB2519, 0xD4EEF70D, 0xE7011613);
	r6 = D(r6, s[1][1][0], 0x00FD1F08, 0x12050FCA, 0xFBEFE406, 0xE5EF4408);
	r7 = D(r7, s[1][1][0], 0xF4EBD502, 0x010B0A0A, 0x19FE0D11, 0xFC0A1C03);
	r0 = D(r0, s[1][1][1], 0xE0ED0910, 0xCDDA0218, 0x0F25F20D, 0xDFFF19E2);
	r1 = D(r1, s[1][1][1], 0xF60C13DD, 0xFF166606, 0xEC19B4FF, 0x1CE10109);
	r2 = D(r2, s[1][1][1], 0x00E49F1F, 0x23053E04, 0x1EFEEF03, 0x26F923CB);
	r3 = D(r3, s[1][1][1], 0x08EC0000, 0x09F5B3FF, 0xF31198DE, 0x13040FF4);
	r4 = D(r4, s[1][1][1], 0xDCF1E5FE, 0xE90FE7FA, 0xF4E5F31C, 0x0BFBF205);
	r5 = D(r5, s[1][1][1], 0x410C0CFC, 0xFEF635F9, 0xEEEDACF0, 0x1104D811);
	r6 = D(r6, s[1][1][1], 0xAB074009, 0x181BA4E5, 0xF2FEC103, 0xEBFD3D02);
	r7 = D(r7, s[1][1][1], 0xD6FC021D, 0xD2FD2802, 0x0EFCF418, 0xB70AEDF3);
	r0 = D(r0, s[1][1][2], 0x061954FF, 0x27014105, 0x0700B006, 0xF70EE5F6);
	r1 = D(r1, s[1][1][2], 0xD709E5D9, 0xF9EF361A, 0xFC0EE4FC, 0x08020C03);
	r2 = D(r2, s[1][1][2], 0x1E11571A, 0x0FEAE40A, 0x0AFCECFD, 0x031AACFE);
	r3 = D(r3, s[1][1][2], 0xF6E7CAFA, 0x03FCDCEE, 0x0E03EEF9, 0xE106FEFD);
	r4 = D(r4, s[1][1][2], 0xF7141300, 0x020FD206, 0xE3FDB2F0, 0xFDE281FF);
	r5 = D(r5, s[1][1][2], 0x19E02DFA, 0xFF0C211D, 0x3C113EFC, 0xF8DDC61A);
	r6 = D(r6, s[1][1][2], 0x10FF2EF6, 0x000CD603, 0xFBFFF808, 0x000355FE);
	r7 = D(r7, s[1][1][2], 0x0003F809, 0xF1EC59E4, 0x09FE2B00, 0xF8FFE3EF);
	r0 = D(r0, s[1][2][0], 0xFAFD1408, 0x0BE6FA04, 0x0A10EFFD, 0x2BF80403);
	r1 = D(r1, s[1][2][0], 0xD0EF2DEE, 0xFD0417F9, 0xFDF9090E, 0x21E9050C);
	r2 = D(r2, s[1][2][0], 0xFBFE2FFB, 0xEEFFEFFB, 0xF014F905, 0x3111FF13);
	r3 = D(r3, s[1][2][0], 0xF50D3107, 0xE505EBFF, 0x02DAFB04, 0xE9F4F3F4);
	r4 = D(r4, s[1][2][0], 0x01F40904, 0x0D0F30FB, 0x16EEF804, 0x10EF1D16);
	r5 = D(r5, s[1][2][0], 0x3A05F5F5, 0xD2F91DFE, 0x2B0DD9F4, 0x180AEB01);
	r6 = D(r6, s[1][2][0], 0x0C021000, 0x2B0229FA, 0x2BFF0601, 0x0D0700FE);
	r7 = D(r7, s[1][2][0], 0x31DAFC04, 0xE0F61704, 0x1122E00E, 0x01050403);
	r0 = D(r0, s[1][2][1], 0xFFE0CBFC, 0x0F1BBAF6, 0xEF15E8FF, 0x2A1A320B);
	r1 = D(r1, s[1][2][1], 0xE7101DFB, 0xFC25FDFA, 0x07050C14, 0x15F007F8);
	r2 = D(r2, s[1][2][1], 0x160424F5, 0xF5160BFC, 0x1A01D50B, 0xA9BD3B04);
	r3 = D(r3, s[1][2][1], 0xF90CF9FC, 0xF5EBD1F5, 0x2E0AE1F5, 0xEB0713FB);
	r4 = D(r4, s[1][2][1], 0x400216FF, 0x03F50606, 0x14FC3EFC, 0x2D051BFA);
	r5 = D(r5, s[1][2][1], 0xB9002A0E, 0x15EB3308, 0x0FEADB0A, 0xF809FCFD);
	r6 = D(r6, s[1][2][1], 0xBE000D0C, 0x13F4FB1B, 0xDA0FDD00, 0x0CF9FFFC);
	r7 = D(r7, s[1][2][1], 0xEF1B20EE, 0x76080807, 0x32F00E08, 0xF0FF0FFC);
	r0 = D(r0, s[1][2][2], 0xF2FA0608, 0x07141D06, 0x08F8F5FC, 0xFD031513);
	r1 = D(r1, s[1][2][2], 0xE0DCF4DD, 0x1B10F0FD, 0xEDEE9B01, 0x0FFAEDFF);
	r2 = D(r2, s[1][2][2], 0x0AF43CFC, 0xF5F704FE, 0x0AED1A07, 0x56C70A09);
	r3 = D(r3, s[1][2][2], 0xF0D207FB, 0x0B02DC06, 0x0AFC32FD, 0x2E030DFE);
	r4 = D(r4, s[1][2][2], 0xFA01D8F6, 0x01071003, 0xE819F10D, 0x04E2DCF7);
	r5 = D(r5, s[1][2][2], 0x07021903, 0x2624160C, 0x3221EEF3, 0x04F70CFF);
	r6 = D(r6, s[1][2][2], 0x090203F7, 0xFDF82004, 0xFBFCFDFB, 0x1AF20701);
	r7 = D(r7, s[1][2][2], 0xFFE4FBEB, 0x12021A03, 0x0B1F0CFE, 0x041809F6);
	s[0][0][0] = G[6][xy.y+0][xy.x+0]; s[0][0][1] = G[6][xy.y+0][xy.x+1];
	s[0][0][2] = G[6][xy.y+0][xy.x+2]; s[0][1][0] = G[6][xy.y+1][xy.x+0];
	s[0][1][1] = G[6][xy.y+1][xy.x+1]; s[0][1][2] = G[6][xy.y+1][xy.x+2];
	s[0][2][0] = G[6][xy.y+2][xy.x+0]; s[0][2][1] = G[6][xy.y+2][xy.x+1];
	s[0][2][2] = G[6][xy.y+2][xy.x+2]; s[1][0][0] = G[7][xy.y+0][xy.x+0];
	s[1][0][1] = G[7][xy.y+0][xy.x+1]; s[1][0][2] = G[7][xy.y+0][xy.x+2];
	s[1][1][0] = G[7][xy.y+1][xy.x+0]; s[1][1][1] = G[7][xy.y+1][xy.x+1];
	s[1][1][2] = G[7][xy.y+1][xy.x+2]; s[1][2][0] = G[7][xy.y+2][xy.x+0];
	s[1][2][1] = G[7][xy.y+2][xy.x+1]; s[1][2][2] = G[7][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x1AEDF107, 0x22E82D04, 0x0315D6FF, 0xF9FE0900);
	r1 = D(r1, s[0][0][0], 0xF9FFFCF4, 0xFC1ADF05, 0x01FEFE04, 0xF1E51800);
	r2 = D(r2, s[0][0][0], 0xD1322BD5, 0x0006F80C, 0x04F88CFD, 0xFD03F306);
	r3 = D(r3, s[0][0][0], 0x02FF060D, 0x051DFC08, 0xF5F90BF7, 0xA2FFCD24);
	r4 = D(r4, s[0][0][0], 0x0F0004FC, 0x11FEEA0C, 0x150FFF07, 0x0E0DFEFC);
	r5 = D(r5, s[0][0][0], 0xFBFA0A03, 0xFF09EDFC, 0xFA03EC04, 0x1DEFF7F7);
	r6 = D(r6, s[0][0][0], 0xF7FA0C00, 0x050DF40E, 0x00FD1101, 0x05091FFB);
	r7 = D(r7, s[0][0][0], 0x0800FCF9, 0x16FB00FF, 0x0409DDFA, 0xF704FD0E);
	r0 = D(r0, s[0][0][1], 0x0FF9E5F1, 0xE4EF100D, 0x0400E607, 0xDF01BFE4);
	r1 = D(r1, s[0][0][1], 0xDFEBFC1D, 0x06FFE200, 0xF811F3FF, 0xE9FD29E9);
	r2 = D(r2, s[0][0][1], 0x10FB030E, 0xFFF513FE, 0xFEEA12F8, 0x1205EDFA);
	r3 = D(r3, s[0][0][1], 0xE1DB16EB, 0x0808F818, 0x1004050D, 0x0509C6E2);
	r4 = D(r4, s[0][0][1], 0x14211AFA, 0x0902FF00, 0x161EEDFA, 0xEBF3D600);
	r5 = D(r5, s[0][0][1], 0xF8031B08, 0x1AFFFF0E, 0x070716F8, 0x22F9FCF5);
	r6 = D(r6, s[0][0][1], 0xFB0C01F8, 0x05F703E6, 0x0B0D07FF, 0xFE2000F9);
	r7 = D(r7, s[0][0][1], 0xF404F10F, 0x11021309, 0x1506F1F9, 0xDB141800);
	r0 = D(r0, s[0][0][2], 0x03F8FC05, 0x16FDF8FB, 0x04040806, 0x05FFDD03);
	r1 = D(r1, s[0][0][2], 0x0BD6F825, 0xFC1BF7E7, 0xFAF1FC0D, 0x02FF101D);
	r2 = D(r2, s[0][0][2], 0xFCF7F924, 0x080EF307, 0xEE0FF3BE, 0xE808F5FC);
	r3 = D(r3, s[0][0][2], 0xF3F21BE4, 0x1EE9FEE9, 0xF602012B, 0x1CFEF902);
	r4 = D(r4, s[0][0][2], 0x0D010F10, 0xF6F500FD, 0xFFEA01D1, 0x090AFEAB);
	r5 = D(r5, s[0][0][2], 0xE8E12604, 0xFCFC08FA, 0x0AE0FBE5, 0x04F60BF9);
	r6 = D(r6, s[0][0][2], 0xF6F30C03, 0x18FDF7B6, 0xFA09EF0F, 0x06FBF6EC);
	r7 = D(r7, s[0][0][2], 0xF1F70900, 0xF5FFFFF7, 0x091FE207, 0x07181410);
	r0 = D(r0, s[0][1][0], 0xFCE40AF3, 0xFCE3F0EB, 0x1101C704, 0xD6070504);
	r1 = D(r1, s[0][1][0], 0x0609F7F9, 0xDB12EFF4, 0x1B02E006, 0x2C021EFA);
	r2 = D(r2, s[0][1][0], 0xFF01F9F9, 0xEA0505FD, 0xFFFEFFF0, 0x0FFBFFFD);
	r3 = D(r3, s[0][1][0], 0x0C030703, 0x11F80611, 0xF6DDF9FF, 0x8E070309);
	r4 = D(r4, s[0][1][0], 0x16FFFDFD, 0x0BFC0102, 0xFD160D08, 0xE7F4F3F7);
	r5 = D(r5, s[0][1][0], 0x0FFAE900, 0x03FEE907, 0x09F3EE17, 0x0AFF0C0F);
	r6 = D(r6, s[0][1][0], 0x13000207, 0x9502E611, 0x101101F7, 0x0B011EFE);
	r7 = D(r7, s[0][1][0], 0xF0FB0F06, 0xF40D0800, 0xFD04F3FD, 0x1107060D);
	r0 = D(r0, s[0][1][1], 0xFC1EED09, 0x0306EFF3, 0x0D0417EB, 0x81E50CFA);
	r1 = D(r1, s[0][1][1], 0xF9F307E8, 0x14DDF6F5, 0x041AE30A, 0x260916F6);
	r2 = D(r2, s[0][1][1], 0x230AFAFC, 0xE4102512, 0x12180004, 0xFD19F6EA);
	r3 = D(r3, s[0][1][1], 0xF5F20C06, 0x0B0623FE, 0x16F925E6, 0x1407F681);
	r4 = D(r4, s[0][1][1], 0xF906001F, 0x15110006, 0x16F1EC1E, 0x172004FC);
	r5 = D(r5, s[0][1][1], 0xD8F80D0F, 0x00F7F4FD, 0xD5F2D0FE, 0xDEF701EE);
	r6 = D(r6, s[0][1][1], 0xDCFBF513, 0xEA20EC15, 0xF9020C13, 0xF4FC1E0A);
	r7 = D(r7, s[0][1][1], 0xED0711F2, 0x000D0104, 0x1603EEFE, 0x07EE1003);
	r0 = D(r0, s[0][1][2], 0xF6F70B0D, 0xED0C1606, 0x04000703, 0xDC1C1511);
	r1 = D(r1, s[0][1][2], 0xC9F206F0, 0xEF17F822, 0x0AEB08D3, 0x0D13141A);
	r2 = D(r2, s[0][1][2], 0x09091245, 0x09F6070F, 0x15F30502, 0x261203F9);
	r3 = D(r3, s[0][1][2], 0x030117E5, 0x23FBF0D8, 0xF1FA1A1B, 0x0C0101CD);
	r4 = D(r4, s[0][1][2], 0x09041D0E, 0xEDED0A0A, 0x11EFFDE5, 0x141E07E6);
	r5 = D(r5, s[0][1][2], 0x04E9E815, 0x0008E91C, 0x1E140DE8, 0x0AEF00FE);
	r6 = D(r6, s[0][1][2], 0x010F0007, 0x0AF807B4, 0xFB02FF0B, 0x0B0101F4);
	r7 = D(r7, s[0][1][2], 0xE8FF1B03, 0xEDF3FFFC, 0x06F9E612, 0x0B0D14E5);
	r0 = D(r0, s[0][2][0], 0xF4FA0AFD, 0xE6F3FCFB, 0x2200F10B, 0xEA0701FE);
	r1 = D(r1, s[0][2][0], 0x04FAFC02, 0x0703FA07, 0xF504070F, 0x1FF8FF02);
	r2 = D(r2, s[0][2][0], 0x1C11FC02, 0x0DFEFD06, 0xE2FBF509, 0xFCF3EEEE);
	r3 = D(r3, s[0][2][0], 0xFC09050F, 0x0C180EFF, 0xD8F3F5F7, 0xF5180316);
	r4 = D(r4, s[0][2][0], 0xFCF906FB, 0x10070000, 0x151B010C, 0x2209F30A);
	r5 = D(r5, s[0][2][0], 0x050E13F5, 0x09070B16, 0xF4FF0BFE, 0xF7FAFCFA);
	r6 = D(r6, s[0][2][0], 0x120103FD, 0xC0040CFF, 0x0704F303, 0x221404FF);
	r7 = D(r7, s[0][2][0], 0xF0F5FCEE, 0x0C080707, 0xF603F200, 0x03FE0505);
	r0 = D(r0, s[0][2][1], 0x0C07F30A, 0xF8FA0AF8, 0x0E0701F5, 0xE500100E);
	r1 = D(r1, s[0][2][1], 0x1AF0100B, 0x02FAF5E7, 0xFEE31308, 0x0A10F2F5);
	r2 = D(r2, s[0][2][1], 0x0817F309, 0xEC070300, 0xFF200B1E, 0xD7F30C08);
	r3 = D(r3, s[0][2][1], 0xF6F6FF0A, 0x0BF80C23, 0x03F6F7F8, 0xFD17FF0D);
	r4 = D(r4, s[0][2][1], 0xF7F9FC19, 0x1109F30E, 0x0C0F0007, 0x2C05FE06);
	r5 = D(r5, s[0][2][1], 0xE8FFF01C, 0x090216F9, 0x11D9F30A, 0x06F70DFF);
	r6 = D(r6, s[0][2][1], 0xE20E00FE, 0xF6FDF807, 0x0109FE0A, 0x0810F607);
	r7 = D(r7, s[0][2][1], 0x14F3EB0F, 0x06FA0BFA, 0x0A0BF2F7, 0xDFFF06FF);
	r0 = D(r0, s[0][2][2], 0xEF08FC08, 0xE406FB38, 0xF4EC1201, 0xED110600);
	r1 = D(r1, s[0][2][2], 0x2F0210D3, 0x0F260020, 0xFFD911D6, 0x0DFC0114);
	r2 = D(r2, s[0][2][2], 0xEF0A0316, 0x0BF6FD0A, 0xEF040CEA, 0x0AB8FD27);
	r3 = D(r3, s[0][2][2], 0xF1F21609, 0x1FF5F8D5, 0xF709F011, 0x16FE07F3);
	r4 = D(r4, s[0][2][2], 0xE510F80E, 0xE7170412, 0xFCFDF2EB, 0x18F3F6F6);
	r5 = D(r5, s[0][2][2], 0xFCE30506, 0x09FA02F2, 0x1AFEF6E4, 0xFF030402);
	r6 = D(r6, s[0][2][2], 0x030004DF, 0x11E006E5, 0xF5FF080F, 0x141AFCF8);
	r7 = D(r7, s[0][2][2], 0xCF02FAEA, 0x07FCEEEC, 0xFB04ED1C, 0xF5F7F5FC);
	r0 = D(r0, s[1][0][0], 0x0A0B12FD, 0x03360BF0, 0xFA17FFDB, 0xE3D800EF);
	r1 = D(r1, s[1][0][0], 0x0ADDCBF4, 0x04070102, 0x04F9F9F3, 0x05200210);
	r2 = D(r2, s[1][0][0], 0xDED606F7, 0xFD1B160C, 0xFC150015, 0xDE0A12F2);
	r3 = D(r3, s[1][0][0], 0x0B140BF7, 0xFB1702FA, 0xF20102EE, 0xF1C30DDA);
	r4 = D(r4, s[1][0][0], 0x011A02F2, 0xF20DF50D, 0x10270D0D, 0x25DFF703);
	r5 = D(r5, s[1][0][0], 0x02160403, 0x0B270905, 0xFEF3F605, 0xEF0EF7FD);
	r6 = D(r6, s[1][0][0], 0x08E0FAFD, 0x08E8FD15, 0x08F4F610, 0xF80BF107);
	r7 = D(r7, s[1][0][0], 0xEE030CFE, 0xFBE40303, 0xE3E7E30A, 0x17070B0D);
	r0 = D(r0, s[1][0][1], 0xFFFE2006, 0x12E20BD6, 0x11F91DF8, 0xFB0D0DFD);
	r1 = D(r1, s[1][0][1], 0x150F012B, 0x1101E2F9, 0xFB020FFE, 0xF31CE108);
	r2 = D(r2, s[1][0][1], 0x01F0F907, 0x0CF2EDFC, 0x181EECEB, 0x1225F913);
	r3 = D(r3, s[1][0][1], 0x0414F924, 0xF2FD00F2, 0xFD10EBF2, 0xECE6FE09);
	r4 = D(r4, s[1][0][1], 0x10FC09FC, 0x021A0A05, 0x020EFC2C, 0x0302FDE3);
	r5 = D(r5, s[1][0][1], 0x020AEAF3, 0xF8BAFE07, 0x121A0309, 0xFF16FCF5);
	r6 = D(r6, s[1][0][1], 0x0716000E, 0xF9061505, 0xFEEDFF0E, 0x0816FB0D);
	r7 = D(r7, s[1][0][1], 0x000814F8, 0x0124F5FD, 0x1A0BF3FB, 0xFC38080B);
	r0 = D(r0, s[1][0][2], 0x0D060416, 0xFCFEEC1D, 0x0DE50CFC, 0xF8120AFB);
	r1 = D(r1, s[1][0][2], 0xF22AF102, 0x0311FF11, 0xF3F60FF9, 0xFCD9F2FB);
	r2 = D(r2, s[1][0][2], 0xDCF5190A, 0x11EA01FA, 0x1808F8F8, 0x05F416FA);
	r3 = D(r3, s[1][0][2], 0xF8E5DB14, 0xF905F70C, 0x141615EC, 0x011B0C02);
	r4 = D(r4, s[1][0][2], 0xF92FF704, 0xF42605EC, 0x0E2A060C, 0x0811F1F5);
	r5 = D(r5, s[1][0][2], 0x0CD4E718, 0x03E3FE09, 0xF0C3F61D, 0xFDE5F2FE);
	r6 = D(r6, s[1][0][2], 0x031AFB02, 0xF0D9FC19, 0x030916FF, 0xFC000CFE);
	r7 = D(r7, s[1][0][2], 0xF203EFE5, 0x051B0608, 0xFF1DF6EE, 0x0D04FDDF);
	r0 = D(r0, s[1][1][0], 0x171D0329, 0x0E0705CB, 0xFEF51E10, 0x1305EAF6);
	r1 = D(r1, s[1][1][0], 0xFAA7F00C, 0xF9140C0E, 0x10110E0A, 0x0BF3F9ED);
	r2 = D(r2, s[1][1][0], 0x031C0F0A, 0xFD220C03, 0xF6ED000E, 0x121AF6F4);
	r3 = D(r3, s[1][1][0], 0x0423E611, 0x00F305F1, 0x0EE80FF5, 0x08D7FE81);
	r4 = D(r4, s[1][1][0], 0x06FF0516, 0xE219FFF6, 0xFC15F5F9, 0xFEF5FD08);
	r5 = D(r5, s[1][1][0], 0x1A0CFDFF, 0x0B120400, 0xF83A100B, 0x022108F9);
	r6 = D(r6, s[1][1][0], 0xFF49F905, 0xF7061919, 0xECE7FAF8, 0xF708FF00);
	r7 = D(r7, s[1][1][0], 0x0B11F407, 0x055FF00B, 0x0313FC04, 0xEF1DFB0E);
	r0 = D(r0, s[1][1][1], 0xE6D8140C, 0xF309021C, 0xF83626FB, 0x000802FA);
	r1 = D(r1, s[1][1][1], 0xF6EAFC23, 0x0121E9F9, 0xEF162523, 0x1304ECF1);
	r2 = D(r2, s[1][1][1], 0x033E0905, 0x00D0F60A, 0x034519C4, 0x39F3FE27);
	r3 = D(r3, s[1][1][1], 0x06D8FAF5, 0x12F9FE00, 0xEB54FC01, 0xFFEA07FE);
	r4 = D(r4, s[1][1][1], 0x191DFC03, 0x16E002F3, 0xF7FFF8FF, 0xF84CF5E1);
	r5 = D(r5, s[1][1][1], 0xE101F405, 0xF48108FD, 0xFA3011F6, 0x0EDC001D);
	r6 = D(r6, s[1][1][1], 0xFB271509, 0x001320DE, 0x00EAFB03, 0x16F1E9FA);
	r7 = D(r7, s[1][1][1], 0x06F60A03, 0x0426E813, 0x05F4ED1B, 0x0AF3F904);
	r0 = D(r0, s[1][1][2], 0xFF01F909, 0x1905F2F8, 0x00FB0702, 0xEFC50BD9);
	r1 = D(r1, s[1][1][2], 0xDAD81511, 0xEEFBCF21, 0xF90820F6, 0x02CDE60C);
	r2 = D(r2, s[1][1][2], 0x1C07DDEC, 0xEC130AF1, 0x073EE7F7, 0xEAC7E6F0);
	r3 = D(r3, s[1][1][2], 0x0225FA09, 0x07E00FFA, 0x030A12F2, 0x0CD60C14);
	r4 = D(r4, s[1][1][2], 0xF1EDEFF7, 0xF41810F2, 0x021407E5, 0xFF1AE90D);
	r5 = D(r5, s[1][1][2], 0xF7DB1409, 0xFBA116F8, 0x04811406, 0xFD090B13);
	r6 = D(r6, s[1][1][2], 0xF3E10D01, 0x08EB160F, 0x1B16F305, 0xF7040F00);
	r7 = D(r7, s[1][1][2], 0xEDF2FC0B, 0x11EEF702, 0xFD07ED17, 0xE10EE70F);
	r0 = D(r0, s[1][2][0], 0x070DF618, 0xF6100E07, 0xF0070CF5, 0x1207EB02);
	r1 = D(r1, s[1][2][0], 0x1AFFD9D3, 0xFDDA0FEF, 0x0CECF142, 0x09EAFC04);
	r2 = D(r2, s[1][2][0], 0xFFF6FAED, 0x0A0C00FB, 0xFBDB0BF2, 0xEAF20319);
	r3 = D(r3, s[1][2][0], 0x02ECF9E5, 0x07FDFED5, 0xFBD60216, 0x050CFDEB);
	r4 = D(r4, s[1][2][0], 0x03F9F7F7, 0x0C1502F5, 0xEDF4F60E, 0xFC04F811);
	r5 = D(r5, s[1][2][0], 0x10E0F5B2, 0x0C03F0C0, 0xF72FE8D8, 0xFCCF0008);
	r6 = D(r6, s[1][2][0], 0x0023FD10, 0xFAF4FFF5, 0xF007000B, 0x0200EDF7);
	r7 = D(r7, s[1][2][0], 0x0F0004E9, 0xF9420214, 0xF4FC0922, 0xF320F7ED);
	r0 = D(r0, s[1][2][1], 0xF231EEF5, 0xF208FC02, 0xF6F0FECF, 0x060300F0);
	r1 = D(r1, s[1][2][1], 0xE803F118, 0x140E2917, 0x041DEEC7, 0xFE05FF01);
	r2 = D(r2, s[1][2][1], 0x04FDDE0A, 0xF43B010B, 0xF9F6E40C, 0x240901F9);
	r3 = D(r3, s[1][2][1], 0xF315FC08, 0xF4FD05E6, 0xFEF1E8D8, 0x04FDFD09);
	r4 = D(r4, s[1][2][1], 0x001DFFEE, 0xFDF1FC1E, 0xEDFBF0F3, 0xF13BE709);
	r5 = D(r5, s[1][2][1], 0xF21D0DF8, 0xE0E10607, 0xEED31403, 0xFBEEF20C);
	r6 = D(r6, s[1][2][1], 0xFB19FF04, 0xEF0CFED1, 0xE1E7F92A, 0xF6EAF2FA);
	r7 = D(r7, s[1][2][1], 0x091709FE, 0xFE12F51D, 0xF00BFA10, 0x19E509E7);
	r0 = D(r0, s[1][2][2], 0x0D0B0CEA, 0xFBC5F5FF, 0x0004E918, 0x14080EFD);
	r1 = D(r1, s[1][2][2], 0x00150EC5, 0xD8E3F61F, 0x0D14E1F8, 0x01F0FE18);
	r2 = D(r2, s[1][2][2], 0xF2FDF208, 0x1518FB09, 0xF417EB10, 0xD51A0605);
	r3 = D(r3, s[1][2][2], 0xF9F8EF12, 0x0E300B09, 0x072502EF, 0x001310F8);
	r4 = D(r4, s[1][2][2], 0xE1FB0FED, 0x0B0BF509, 0x090B07F5, 0xF32401FF);
	r5 = D(r5, s[1][2][2], 0x051C0CFC, 0x01F1FCFA, 0x180F05FF, 0x0C02F201);
	r6 = D(r6, s[1][2][2], 0x1069F9FF, 0x1DFEF5F5, 0x0400FD0C, 0xFDF60BF0);
	r7 = D(r7, s[1][2][2], 0x03F4F600, 0xF6F20DEF, 0xFA36F520, 0xF5FF1305);
	vec4 f0 = vec4(r0) * 6.20001240e-05;
	f0 += vec4(2.179e-02, -1.298e-02, -6.503e-03, 2.603e-02);
	f0 = max(f0, vec4(0.0));
	imageStore(out_image, opos + ivec2(0, 0), f0);
	vec4 f1 = vec4(r1) * 6.20001240e-05;
	f1 += vec4(-1.563e-03, 9.741e-03, 6.859e-03, -5.974e-03);
	f1 = max(f1, vec4(0.0));
	imageStore(out_image, opos + ivec2(1, 0), f1);
	vec4 f2 = vec4(r2) * 6.20001240e-05;
	f2 += vec4(1.213e-02, 3.803e-02, 5.089e-02, -2.168e-02);
	f2 = max(f2, vec4(0.0));
	imageStore(out_image, opos + ivec2(0, 1), f2);
	vec4 f3 = vec4(r3) * 6.20001240e-05;
	f3 += vec4(1.629e-02, 3.692e-02, -4.555e-03, 1.863e-02);
	f3 = max(f3, vec4(0.0));
	imageStore(out_image, opos + ivec2(1, 1), f3);
	vec4 f4 = vec4(r4) * 6.20001240e-05;
	f4 += vec4(-1.004e-02, 1.492e-02, 4.070e-02, -3.640e-03);
	f4 = max(f4, vec4(0.0));
	imageStore(out_image, opos + ivec2(2, 0), f4);
	vec4 f5 = vec4(r5) * 6.20001240e-05;
	f5 += vec4(8.212e-03, -5.382e-02, 2.807e-03, 6.106e-03);
	f5 = max(f5, vec4(0.0));
	imageStore(out_image, opos + ivec2(3, 0), f5);
	vec4 f6 = vec4(r6) * 6.20001240e-05;
	f6 += vec4(-1.382e-01, 6.637e-03, 4.786e-02, -1.035e-02);
	f6 = max(f6, vec4(0.0));
	imageStore(out_image, opos + ivec2(2, 1), f6);
	vec4 f7 = vec4(r7) * 6.20001240e-05;
	f7 += vec4(2.654e-02, -9.023e-02, 1.334e-02, 6.329e-03);
	f7 = max(f7, vec4(0.0));
	imageStore(out_image, opos + ivec2(3, 1), f7);
}

//!DESC CuNNy-4x32-BILINEAR-TEST-conv2
//!HOOK LUMA
//!COMPUTE 32 16 8 8
//!BIND conv1
//!BIND LUMA
//!SAVE conv2
//!WIDTH LUMA.w 4 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_spirv_intrinsics : require
#extension GL_EXT_control_flow_attributes : require
spirv_instruction (extensions = ["SPV_KHR_integer_dot_product"], capabilities = [6019, 6018], id = 4450)
int dp4(int a, int b, spirv_literal int fmt);
#define D(r, s, a, b, c, d) ivec4(r.x + dp4(s, a, 0), r.y + dp4(s, b, 0), r.z + dp4(s, c, 0), r.w + dp4(s, d, 0))
shared int G[8][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(4, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	[[unroll]] for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		[[unroll]] for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			vec4 r, g, b, a;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(4, 2) + ivec2(1, 1)) * conv1_pt;
			r = conv1_gather(p, 0);
			g = conv1_gather(p, 1);
			b = conv1_gather(p, 2);
			a = conv1_gather(p, 3);
			vec4 v0 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v1 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v2 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v3 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(4, 2) + ivec2(3, 1)) * conv1_pt;
			r = conv1_gather(p, 0);
			g = conv1_gather(p, 1);
			b = conv1_gather(p, 2);
			a = conv1_gather(p, 3);
			vec4 v4 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v5 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v6 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v7 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			G[0][ay][ax] = int(packSnorm4x8(v0));
			G[1][ay][ax] = int(packSnorm4x8(v1));
			G[2][ay][ax] = int(packSnorm4x8(v2));
			G[3][ay][ax] = int(packSnorm4x8(v3));
			G[4][ay][ax] = int(packSnorm4x8(v4));
			G[5][ay][ax] = int(packSnorm4x8(v5));
			G[6][ay][ax] = int(packSnorm4x8(v6));
			G[7][ay][ax] = int(packSnorm4x8(v7));
		}
	}
	barrier();
	int s[2][3][3];
	ivec4 r0 = ivec4(0);
	ivec4 r1 = ivec4(0);
	ivec4 r2 = ivec4(0);
	ivec4 r3 = ivec4(0);
	ivec4 r4 = ivec4(0);
	ivec4 r5 = ivec4(0);
	ivec4 r6 = ivec4(0);
	ivec4 r7 = ivec4(0);
	s[0][0][0] = G[0][xy.y+0][xy.x+0]; s[0][0][1] = G[0][xy.y+0][xy.x+1];
	s[0][0][2] = G[0][xy.y+0][xy.x+2]; s[0][1][0] = G[0][xy.y+1][xy.x+0];
	s[0][1][1] = G[0][xy.y+1][xy.x+1]; s[0][1][2] = G[0][xy.y+1][xy.x+2];
	s[0][2][0] = G[0][xy.y+2][xy.x+0]; s[0][2][1] = G[0][xy.y+2][xy.x+1];
	s[0][2][2] = G[0][xy.y+2][xy.x+2]; s[1][0][0] = G[1][xy.y+0][xy.x+0];
	s[1][0][1] = G[1][xy.y+0][xy.x+1]; s[1][0][2] = G[1][xy.y+0][xy.x+2];
	s[1][1][0] = G[1][xy.y+1][xy.x+0]; s[1][1][1] = G[1][xy.y+1][xy.x+1];
	s[1][1][2] = G[1][xy.y+1][xy.x+2]; s[1][2][0] = G[1][xy.y+2][xy.x+0];
	s[1][2][1] = G[1][xy.y+2][xy.x+1]; s[1][2][2] = G[1][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x030E0003, 0x16F30707, 0xF8FF1A0E, 0xFA0A0DFC);
	r1 = D(r1, s[0][0][0], 0xE30403EC, 0x1AFFF4F2, 0x0DF3FE14, 0xFBFD0502);
	r2 = D(r2, s[0][0][0], 0xF2FEF800, 0xF7F504FB, 0x06F500DC, 0x130315FC);
	r3 = D(r3, s[0][0][0], 0x05050D01, 0xEDD5DDE0, 0xC805F5FC, 0xF5F20D0A);
	r4 = D(r4, s[0][0][0], 0xF2011A06, 0x0000180B, 0xF60D0EEF, 0xFE04F701);
	r5 = D(r5, s[0][0][0], 0xF418F8FA, 0xE9FE0310, 0xF5FBEEEF, 0x0AF5F2F2);
	r6 = D(r6, s[0][0][0], 0xDBF81517, 0xFC000DFC, 0xF2030104, 0xF6FF0F01);
	r7 = D(r7, s[0][0][0], 0xF60AF5F3, 0xF5000E12, 0xFF01F703, 0xEDF30B09);
	r0 = D(r0, s[0][0][1], 0x0A160FFB, 0xD9F126F4, 0x0104250E, 0x0110080F);
	r1 = D(r1, s[0][0][1], 0xEC0A03FE, 0x05FEFDEE, 0x00000D07, 0xFA0D1AFF);
	r2 = D(r2, s[0][0][1], 0x01210011, 0xE700050D, 0x1AD2E01F, 0xF0E2F3FE);
	r3 = D(r3, s[0][0][1], 0x1B0620FB, 0x07FC01CF, 0xC714F305, 0x01181814);
	r4 = D(r4, s[0][0][1], 0xE6080E1C, 0x030D07F0, 0x02401401, 0xFC0CDEFC);
	r5 = D(r5, s[0][0][1], 0xE7FDFCF5, 0x0009F4F6, 0xEA01E703, 0xFA06EF12);
	r6 = D(r6, s[0][0][1], 0xEAEFEF19, 0x0404081B, 0x06F1F304, 0x0209F819);
	r7 = D(r7, s[0][0][1], 0x06F304F5, 0x0E991109, 0x08FFF10A, 0x03F30806);
	r0 = D(r0, s[0][0][2], 0xEA14F208, 0x0ECE2E16, 0x06FA0E0A, 0x04F30B04);
	r1 = D(r1, s[0][0][2], 0x0D13F302, 0x01F60EFB, 0x05F7E810, 0x00F80308);
	r2 = D(r2, s[0][0][2], 0xFB070208, 0x08EE15F7, 0x08DEF3F0, 0x08EF0FEE);
	r3 = D(r3, s[0][0][2], 0x0D0B06FE, 0xECF61104, 0xE9F90700, 0x0808000C);
	r4 = D(r4, s[0][0][2], 0xF41210EE, 0x0AFD0606, 0xFC16170B, 0xFF0DE300);
	r5 = D(r5, s[0][0][2], 0xFF0CFA05, 0xED08F10A, 0xEEE9EE09, 0x00060DFE);
	r6 = D(r6, s[0][0][2], 0x03F01401, 0x01080609, 0xF4ECF909, 0x07CF24F9);
	r7 = D(r7, s[0][0][2], 0xE90015F6, 0xF6D915EB, 0x03F701F3, 0xFB090200);
	r0 = D(r0, s[0][1][0], 0x1800F30A, 0x11FCFE1D, 0xDD0921FD, 0xED011318);
	r1 = D(r1, s[0][1][0], 0xFEFF0109, 0xF2FA0307, 0x11070414, 0xF50208FE);
	r2 = D(r2, s[0][1][0], 0xFA07FC0B, 0xF5F2FD01, 0x15160B00, 0xCC0B0320);
	r3 = D(r3, s[0][1][0], 0xF9F9F7EA, 0xF4FBEAF7, 0xD9080B0F, 0xF700FF03);
	r4 = D(r4, s[0][1][0], 0xEB031112, 0x15090615, 0xF6062313, 0x1A05E8FA);
	r5 = D(r5, s[0][1][0], 0x10F514DF, 0x0FFDFAF3, 0x0C0FF405, 0xE1DED4F9);
	r6 = D(r6, s[0][1][0], 0xE6060CF6, 0xFBFF1EFC, 0xFF0FF4FB, 0xD91216FF);
	r7 = D(r7, s[0][1][0], 0x0F0BF117, 0x2BF9FBF1, 0x02FA01F9, 0xDC080202);
	r0 = D(r0, s[0][1][1], 0x180A051A, 0xC1F4F1DD, 0x04081404, 0x07F51CF0);
	r1 = D(r1, s[0][1][1], 0xF210F2FE, 0xEA0EFFF9, 0x150FF812, 0x000011FC);
	r2 = D(r2, s[0][1][1], 0xEF0DF411, 0xD8FA1710, 0x1ADA0E07, 0x06071211);
	r3 = D(r3, s[0][1][1], 0x0C0814FB, 0x0C2B1303, 0x09000721, 0x0912FA00);
	r4 = D(r4, s[0][1][1], 0xF2071002, 0xFC14340D, 0xFE35E71C, 0x0B0BE106);
	r5 = D(r5, s[0][1][1], 0x06100F04, 0xF3070501, 0xFB06FE09, 0x04D80206);
	r6 = D(r6, s[0][1][1], 0xEF090710, 0xEF011F00, 0xEDDBE7EF, 0xF5F01003);
	r7 = D(r7, s[0][1][1], 0x1527081A, 0x0DE8F706, 0xFC01FCFC, 0xE2F218F9);
	r0 = D(r0, s[0][1][2], 0x0004F705, 0x0DFE01E9, 0x020114EE, 0x0CEC0105);
	r1 = D(r1, s[0][1][2], 0x122AFF0D, 0x20170513, 0x18EFE7EF, 0x0DF918F7);
	r2 = D(r2, s[0][1][2], 0x000505FE, 0x05E6FADD, 0x0ABBF3EC, 0x0C071E07);
	r3 = D(r3, s[0][1][2], 0x03FD00F4, 0xF6FE1E06, 0xF40208F9, 0xFF0709FF);
	r4 = D(r4, s[0][1][2], 0xF3F1F4FB, 0xFECF02FD, 0xFB250FF3, 0x0208F9F6);
	r5 = D(r5, s[0][1][2], 0x05F803F0, 0xE0FEF711, 0xFA0BEA01, 0x0AE911F6);
	r6 = D(r6, s[0][1][2], 0x05191AF1, 0x01071A03, 0x14CEFFEB, 0xF3050400);
	r7 = D(r7, s[0][1][2], 0x030D0A0E, 0xFAEE16FF, 0x0FF808E8, 0x0309F7E4);
	r0 = D(r0, s[0][2][0], 0xFA02FBF7, 0xEE00FEEC, 0xFF0206F5, 0xF700121E);
	r1 = D(r1, s[0][2][0], 0xFDFCEA01, 0x1A00080D, 0x19FCFB08, 0x1002F8F9);
	r2 = D(r2, s[0][2][0], 0xFD04070D, 0x0100FD03, 0x2208FA15, 0x21F80320);
	r3 = D(r3, s[0][2][0], 0x020107F8, 0xE702F80A, 0x00FF000E, 0xF70420F5);
	r4 = D(r4, s[0][2][0], 0x040112F8, 0xFFFD2106, 0x05FF0DF7, 0x1504EE00);
	r5 = D(r5, s[0][2][0], 0x25F81306, 0xECFAFEEC, 0xF5FDFF0D, 0x100BFDE4);
	r6 = D(r6, s[0][2][0], 0x0300E9ED, 0x030808EC, 0xDC00E8F4, 0xF8FD1009);
	r7 = D(r7, s[0][2][0], 0x0B00F3E8, 0x1EFDFCFA, 0xF8060405, 0x0EFA2600);
	r0 = D(r0, s[0][2][1], 0x0A09FF0A, 0x19FA17FD, 0x020509F6, 0x0F010813);
	r1 = D(r1, s[0][2][1], 0xFF0205D8, 0x070DF7FD, 0x1EFB02F5, 0x07F70E10);
	r2 = D(r2, s[0][2][1], 0xF60DF6FA, 0x07FD06F7, 0xFEED0805, 0x0CF0F1F9);
	r3 = D(r3, s[0][2][1], 0xFD0D0706, 0x1B16F8FB, 0x07FCE8F2, 0x0DFD07FB);
	r4 = D(r4, s[0][2][1], 0xF8FE0505, 0xE1EF0BF1, 0xF0FE2003, 0x0E0EF00E);
	r5 = D(r5, s[0][2][1], 0xFC0A0DFF, 0xDF0613F5, 0x080811FD, 0xF8E60700);
	r6 = D(r6, s[0][2][1], 0xDFFB17E4, 0xF1012B02, 0x03FB0C10, 0x0BF30BF0);
	r7 = D(r7, s[0][2][1], 0x0C07F4E0, 0xF4F70F02, 0x01060102, 0xFAEBEC14);
	r0 = D(r0, s[0][2][2], 0xF408FBFE, 0xF7070D07, 0xFC0406FA, 0xF90103ED);
	r1 = D(r1, s[0][2][2], 0x0C15FAFC, 0xF70605FF, 0x09FFFBFC, 0x02FD160A);
	r2 = D(r2, s[0][2][2], 0x0C0502FB, 0xE6071107, 0x1CF3F503, 0xF9EE06ED);
	r3 = D(r3, s[0][2][2], 0xF80FF9FD, 0xF6071CF8, 0xFEF8F5F1, 0x070B08F6);
	r4 = D(r4, s[0][2][2], 0x100208EA, 0x53FE0492, 0x04F0E3EC, 0x030A090A);
	r5 = D(r5, s[0][2][2], 0x00011005, 0xED06080F, 0x070B01F4, 0x0AED0A0E);
	r6 = D(r6, s[0][2][2], 0x0BFB01F6, 0xFFF8120C, 0xF90900F8, 0xFFFD25FC);
	r7 = D(r7, s[0][2][2], 0xF6F1FAED, 0x0CF41010, 0x02FF03F2, 0x02FCEDF4);
	r0 = D(r0, s[1][0][0], 0x07F6FC12, 0x01EBF9E9, 0x10F70B19, 0xFD00FAFC);
	r1 = D(r1, s[1][0][0], 0xF30E0602, 0x00F7FAF6, 0x0215F8EB, 0x00F50009);
	r2 = D(r2, s[1][0][0], 0x11FBFC01, 0x0CF50104, 0xF91C08F1, 0xF1F80EFC);
	r3 = D(r3, s[1][0][0], 0x04F002FD, 0x0701DB13, 0x151BFD1F, 0xF8EF0106);
	r4 = D(r4, s[1][0][0], 0x0AFAFEEB, 0xFC01000A, 0x0CEB0612, 0x0F01E9F3);
	r5 = D(r5, s[1][0][0], 0xF1D900F3, 0x02FFFD20, 0xFD19F7FF, 0x1612FEFF);
	r6 = D(r6, s[1][0][0], 0x1BEA0EE8, 0xF5FDDFFC, 0xF0071BEC, 0x0AE80F3D);
	r7 = D(r7, s[1][0][0], 0x08F0020A, 0x14FE1201, 0xFAFCF9F9, 0xFEF6011E);
	r0 = D(r0, s[1][0][1], 0x080E1706, 0xFEE2FD24, 0x06101404, 0x0003FCFE);
	r1 = D(r1, s[1][0][1], 0xF5070DF6, 0xFD2DF8F2, 0x00D9EA05, 0xFDED090B);
	r2 = D(r2, s[1][0][1], 0x040D0AFF, 0xF403071D, 0xEE10EEF3, 0xE1FBF0FB);
	r3 = D(r3, s[1][0][1], 0xFDC1FB12, 0xF311F708, 0xEE241506, 0xFE0DFF07);
	r4 = D(r4, s[1][0][1], 0x03BD082D, 0x00110CEF, 0x08D3D4FD, 0x0B03EFF8);
	r5 = D(r5, s[1][0][1], 0x13F3EA24, 0xFF0A02EE, 0x1114FA13, 0xE9F70EF8);
	r6 = D(r6, s[1][0][1], 0x08F2E0B8, 0xFDF1D407, 0xF5020BFD, 0xFE1A05EB);
	r7 = D(r7, s[1][0][1], 0xF90306F1, 0x11B91810, 0xFBF5FDFD, 0x0F2322F7);
	r0 = D(r0, s[1][0][2], 0x010DFF01, 0xF31AF506, 0xFB000D07, 0xFC06F6F8);
	r1 = D(r1, s[1][0][2], 0xEFEDF8FA, 0xFEFBF307, 0x0CFDEEF1, 0xF5FCF803);
	r2 = D(r2, s[1][0][2], 0x0FFFFF03, 0xEF242A0B, 0x1504130D, 0xD9E51202);
	r3 = D(r3, s[1][0][2], 0xF9DB01FA, 0xFE0BF5FB, 0xE20B0B03, 0xF0FD0AF6);
	r4 = D(r4, s[1][0][2], 0xE6F2F702, 0x050014E2, 0x01F40609, 0xFF0404FF);
	r5 = D(r5, s[1][0][2], 0xF207FAEA, 0x0304E4FE, 0xF510F7FB, 0xFEEA1F05);
	r6 = D(r6, s[1][0][2], 0xF205F3F3, 0x200BD9F5, 0x06F10F13, 0xE6FC1CF2);
	r7 = D(r7, s[1][0][2], 0x07F0010F, 0x03040C02, 0x04FFF9FD, 0x04FC0B02);
	r0 = D(r0, s[1][1][0], 0x00F9FCFA, 0x03F503CB, 0x08FB1007, 0x07F1FDFA);
	r1 = D(r1, s[1][1][0], 0x1912F8EA, 0x040D1A0C, 0x0E12EFEF, 0x09FA07FC);
	r2 = D(r2, s[1][1][0], 0x09FB09EF, 0x0012F3FF, 0xF219200E, 0xF906FED3);
	r3 = D(r3, s[1][1][0], 0x140D0203, 0xE7EA053F, 0x010905F7, 0xFD05E206);
	r4 = D(r4, s[1][1][0], 0xF8FFF3DF, 0x02FA1202, 0x06F2FBE1, 0x02F8F7E5);
	r5 = D(r5, s[1][1][0], 0x0FDBEA2F, 0x03F50017, 0x091C0126, 0xE1FDFD0E);
	r6 = D(r6, s[1][1][0], 0xF60B09FB, 0xF40AB6EF, 0x07032114, 0x03F40DE2);
	r7 = D(r7, s[1][1][0], 0x07FAF006, 0x07F02A1B, 0x05FF05FB, 0xFBFAEC07);
	r0 = D(r0, s[1][1][1], 0x090706E6, 0x00E60EF5, 0x16FBFE06, 0x17F702E1);
	r1 = D(r1, s[1][1][1], 0xEA01F604, 0x1C1A00FE, 0x3DF4E5F2, 0x17F2F8DE);
	r2 = D(r2, s[1][1][1], 0x191707F4, 0xF7230506, 0xEB301D1F, 0xF50622F3);
	r3 = D(r3, s[1][1][1], 0x0CF81301, 0xF807FAF2, 0x0B1C0ADE, 0x010B040E);
	r4 = D(r4, s[1][1][1], 0xF2FC14F8, 0x48300EF3, 0xE5CFCDF1, 0x0919DD00);
	r5 = D(r5, s[1][1][1], 0x2305ED01, 0x01F60A26, 0x0A1119F9, 0xCD180A0F);
	r6 = D(r6, s[1][1][1], 0xFC0307DA, 0xEE09AD18, 0xD5FB0BE1, 0x07000F28);
	r7 = D(r7, s[1][1][1], 0x15020FE5, 0xD2FDFE07, 0x15060BFF, 0x19FD0B12);
	r0 = D(r0, s[1][1][2], 0x010C0109, 0xFB28DFFC, 0xDAF60604, 0xFC08011F);
	r1 = D(r1, s[1][1][2], 0xE7FDF8F6, 0x060D24F5, 0x1C03DF08, 0xF3F4FF03);
	r2 = D(r2, s[1][1][2], 0xFE090603, 0xF408030E, 0x091F0907, 0xF9FA1F0C);
	r3 = D(r3, s[1][1][2], 0x06F5FFFE, 0xF70308F6, 0x16FB0F06, 0xF3010D18);
	r4 = D(r4, s[1][1][2], 0x00FDF902, 0xDFDD060E, 0xECFEFD08, 0xF102F6F6);
	r5 = D(r5, s[1][1][2], 0xFAFEFC0C, 0xE30EE5F3, 0x17F504FF, 0x13141002);
	r6 = D(r6, s[1][1][2], 0xF11104E1, 0x1104CCF3, 0xF2EF0516, 0xD4F2EE18);
	r7 = D(r7, s[1][1][2], 0x01F30BF5, 0x070020EB, 0xECEA080D, 0x00ED1C02);
	r0 = D(r0, s[1][2][0], 0xFCFAEF15, 0xFCFBF5EE, 0x090119E0, 0x09F8FD05);
	r1 = D(r1, s[1][2][0], 0xF408FDE2, 0x0FF9FE10, 0xF801020B, 0xFF1512F3);
	r2 = D(r2, s[1][2][0], 0x0AEBFB06, 0x0102F5F3, 0xFD0A1DEA, 0x070C2711);
	r3 = D(r3, s[1][2][0], 0x04020BFA, 0x0CE6211E, 0x08EDE90C, 0x01000F1B);
	r4 = D(r4, s[1][2][0], 0x04EEF103, 0xF6FAF109, 0xF9FAEFC6, 0x080202FE);
	r5 = D(r5, s[1][2][0], 0x030401C6, 0xF7FFFDE3, 0x02F6F1EE, 0xF101F345);
	r6 = D(r6, s[1][2][0], 0xFAF614A1, 0x05E8BEEC, 0x030617D6, 0x0004FB03);
	r7 = D(r7, s[1][2][0], 0x0103F40B, 0x060B03E5, 0x0611FDFB, 0x08FEEC03);
	r0 = D(r0, s[1][2][1], 0xF80E01F0, 0xF806051C, 0x10010A05, 0x0F010B09);
	r1 = D(r1, s[1][2][1], 0xF6FF0EE4, 0x01EEFC0C, 0x10FFDB0A, 0xFE0310F4);
	r2 = D(r2, s[1][2][1], 0x04F90407, 0xFD210C04, 0x060CF6FF, 0x0205F734);
	r3 = D(r3, s[1][2][1], 0xF4FB06DF, 0xF71005DB, 0xF7F3F215, 0x0C040420);
	r4 = D(r4, s[1][2][1], 0xFCFCF50D, 0x0C120602, 0xF0D1CF25, 0x03040E10);
	r5 = D(r5, s[1][2][1], 0xF42A0A10, 0xF8FE0C13, 0xE7F4F6E6, 0xD6F9061C);
	r6 = D(r6, s[1][2][1], 0xF603EEE9, 0xFFECE5F8, 0x06FE14D9, 0xFFF6FD2F);
	r7 = D(r7, s[1][2][1], 0xF30E10F3, 0x12FE21F5, 0x00041A14, 0x14FFD50D);
	r0 = D(r0, s[1][2][2], 0x0801F9F4, 0x0901F501, 0x01040CF1, 0x0F07FDF7);
	r1 = D(r1, s[1][2][2], 0xEE02FE00, 0xF0050C09, 0x0AFCEBF8, 0xFFFD0DF1);
	r2 = D(r2, s[1][2][2], 0x01FF06F8, 0xFE040BE1, 0x2606030D, 0xF9FA0603);
	r3 = D(r3, s[1][2][2], 0x0F060107, 0xEBFBFF04, 0xFBE80508, 0xF4F70D00);
	r4 = D(r4, s[1][2][2], 0x08FCFD13, 0xD0D0D52C, 0xF813DD0E, 0xFB060F12);
	r5 = D(r5, s[1][2][2], 0xF90BF518, 0x050DEDFD, 0xF8E9F60D, 0x290B0BFE);
	r6 = D(r6, s[1][2][2], 0xF80308DE, 0xF5F2EDE9, 0x11FE00E8, 0xE4010318);
	r7 = D(r7, s[1][2][2], 0xF8050A0A, 0x2BF72910, 0x08040900, 0x10F2F4F0);
	s[0][0][0] = G[2][xy.y+0][xy.x+0]; s[0][0][1] = G[2][xy.y+0][xy.x+1];
	s[0][0][2] = G[2][xy.y+0][xy.x+2]; s[0][1][0] = G[2][xy.y+1][xy.x+0];
	s[0][1][1] = G[2][xy.y+1][xy.x+1]; s[0][1][2] = G[2][xy.y+1][xy.x+2];
	s[0][2][0] = G[2][xy.y+2][xy.x+0]; s[0][2][1] = G[2][xy.y+2][xy.x+1];
	s[0][2][2] = G[2][xy.y+2][xy.x+2]; s[1][0][0] = G[3][xy.y+0][xy.x+0];
	s[1][0][1] = G[3][xy.y+0][xy.x+1]; s[1][0][2] = G[3][xy.y+0][xy.x+2];
	s[1][1][0] = G[3][xy.y+1][xy.x+0]; s[1][1][1] = G[3][xy.y+1][xy.x+1];
	s[1][1][2] = G[3][xy.y+1][xy.x+2]; s[1][2][0] = G[3][xy.y+2][xy.x+0];
	s[1][2][1] = G[3][xy.y+2][xy.x+1]; s[1][2][2] = G[3][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xFCFAF3F9, 0x020E0BFA, 0x16FBFAF6, 0x240EF70F);
	r1 = D(r1, s[0][0][0], 0x020EF617, 0xFA0EF9EF, 0x150007F6, 0xF5F2F9F9);
	r2 = D(r2, s[0][0][0], 0xE6020013, 0x0AEF03EC, 0xD0EEF605, 0x2215DEFB);
	r3 = D(r3, s[0][0][0], 0x12040505, 0x31E4FBED, 0x06EA0204, 0x2EF3F91D);
	r4 = D(r4, s[0][0][0], 0x18F10400, 0xF8F30B26, 0xF4141206, 0xF6FC0DEF);
	r5 = D(r5, s[0][0][0], 0xEFF9F903, 0xD9E2F70D, 0x0FF6FDF3, 0xECE1040F);
	r6 = D(r6, s[0][0][0], 0x4800E3FC, 0xFA020411, 0x0B05F70D, 0x16FA00FC);
	r7 = D(r7, s[0][0][0], 0xEF0E060E, 0x20E60F0B, 0xEF040101, 0xF7150D10);
	r0 = D(r0, s[0][0][1], 0xFCFAFBEE, 0xF5F3FFF1, 0xE7F50406, 0x0EF2FC18);
	r1 = D(r1, s[0][0][1], 0x180E051A, 0xE406F800, 0xF0F1E80A, 0x0A0F010B);
	r2 = D(r2, s[0][0][1], 0xFDFCFA15, 0x1F15FCF5, 0xE3E7FD21, 0xFE20F019);
	r3 = D(r3, s[0][0][1], 0xFC0FFB29, 0xF40506E9, 0x20FDE3F3, 0x06E7F52A);
	r4 = D(r4, s[0][0][1], 0xFD1EE532, 0x07F6F8EE, 0xF21808F7, 0xE9EB0F26);
	r5 = D(r5, s[0][0][1], 0xECF80116, 0x1BFA09DE, 0x0504E7F0, 0x410909FC);
	r6 = D(r6, s[0][0][1], 0x450CF127, 0x12F3E0F4, 0xFEFEFA1A, 0x1C18FA06);
	r7 = D(r7, s[0][0][1], 0x02070FFE, 0xF7F50908, 0xFBFF130E, 0x03F2FA23);
	r0 = D(r0, s[0][0][2], 0xFBFCF51E, 0x19E4F20F, 0xF210F2FA, 0xFAF4FB03);
	r1 = D(r1, s[0][0][2], 0x1DF8F007, 0xFF0709DE, 0x1E0E0D1D, 0x0B00F70F);
	r2 = D(r2, s[0][0][2], 0x0DFFF3FC, 0x09E1F900, 0x1D0E14FC, 0x0912FE22);
	r3 = D(r3, s[0][0][2], 0xF217F61F, 0xF71D081D, 0x0801F9EB, 0x00F10803);
	r4 = D(r4, s[0][0][2], 0xF7F3F90D, 0x0FF9FB3E, 0xFCFCF71E, 0xFE0206DD);
	r5 = D(r5, s[0][0][2], 0xFCFD04E5, 0xE7EB1EF2, 0x010312E3, 0x15E505FD);
	r6 = D(r6, s[0][0][2], 0x3313DC3D, 0xFAFD160E, 0x0F0EF517, 0xFAE000C2);
	r7 = D(r7, s[0][0][2], 0xF805F914, 0x140D07FC, 0x02FA07FA, 0x09FA1412);
	r0 = D(r0, s[0][1][0], 0xF5F9EE13, 0x19F70505, 0x15EE081B, 0x4FE60C17);
	r1 = D(r1, s[0][1][0], 0xD90CFBFD, 0x0FF8FBFB, 0x0CFAFD01, 0xF10BF9FB);
	r2 = D(r2, s[0][1][0], 0x2CEC0114, 0x1F1C0905, 0x19FEF80E, 0xFFD8021B);
	r3 = D(r3, s[0][1][0], 0xF6FA24FF, 0x3FB8F6B3, 0xEDF0EC0A, 0x1014FD0D);
	r4 = D(r4, s[0][1][0], 0xF9FC0D10, 0x290CF70F, 0xFED9EC1C, 0xD909FEFE);
	r5 = D(r5, s[0][1][0], 0x4117080F, 0xE5FAF8E9, 0x1DF2EBFE, 0xA11AFFF8);
	r6 = D(r6, s[0][1][0], 0x3F210715, 0xF9F3F92D, 0x2307FC22, 0x16EDEC04);
	r7 = D(r7, s[0][1][0], 0x05000E0F, 0xDDEDFAFB, 0x16D0FD1B, 0xD9ED0B0A);
	r0 = D(r0, s[0][1][1], 0xFC010712, 0x1EEB070C, 0x0DE7F312, 0x1EDDFC37);
	r1 = D(r1, s[0][1][1], 0xF21B020D, 0x27F6FF0B, 0xDD0EFE3C, 0x04F10022);
	r2 = D(r2, s[0][1][1], 0xFB0E184A, 0xC9DFFE2F, 0x0FFFF022, 0x1FE60F07);
	r3 = D(r3, s[0][1][1], 0x0FE81402, 0x0BEA0EC2, 0xF1FCFE20, 0x17F1F7FE);
	r4 = D(r4, s[0][1][1], 0xE1E6F8E2, 0x08082D43, 0x14BFFB14, 0x13DE1717);
	r5 = D(r5, s[0][1][1], 0xEC0B0E24, 0x053105EB, 0xF209EF14, 0x100FF016);
	r6 = D(r6, s[0][1][1], 0x1F1C0010, 0x2FEDD8FB, 0x18EB08FD, 0x139B0F21);
	r7 = D(r7, s[0][1][1], 0x171111E3, 0x04D2F2D6, 0x1C02DD13, 0xF906FE0C);
	r0 = D(r0, s[0][1][2], 0xEF0F13F5, 0x0606FE0D, 0x08041028, 0xF2FF18EC);
	r1 = D(r1, s[0][1][2], 0xF1F906FE, 0xF9FF09F4, 0xF00914F0, 0x0401062B);
	r2 = D(r2, s[0][1][2], 0x15FCFBF2, 0x17E70825, 0xEDFDE30C, 0xE719100C);
	r3 = D(r3, s[0][1][2], 0x03011A17, 0x11F1E015, 0xF01100F2, 0x0AF8010F);
	r4 = D(r4, s[0][1][2], 0xFB1302E6, 0x2627E862, 0x10EA0D1A, 0x0606F412);
	r5 = D(r5, s[0][1][2], 0xF8F6F7F8, 0xF9FBE70F, 0xF9FC050E, 0x09F6FB7F);
	r6 = D(r6, s[0][1][2], 0x23FD08F6, 0x06070702, 0xFC0D0010, 0x0DF7ED5C);
	r7 = D(r7, s[0][1][2], 0x02FE0C30, 0x0F10F32A, 0x1AFFFF23, 0x060E0CF7);
	r0 = D(r0, s[0][2][0], 0xEC0611FC, 0x03FF09EC, 0x150506F6, 0x1BFCF201);
	r1 = D(r1, s[0][2][0], 0x0A1105FC, 0x12FEF7F9, 0x24F7F9F4, 0x0FEFED05);
	r2 = D(r2, s[0][2][0], 0x0100F60B, 0xFCFF08F7, 0x27ECFC18, 0xFCEFFF0A);
	r3 = D(r3, s[0][2][0], 0x0112F903, 0x19F814F0, 0xF50113FB, 0x0C00FF0C);
	r4 = D(r4, s[0][2][0], 0x0E160808, 0x11F01618, 0xF71905EC, 0xF8F3E80E);
	r5 = D(r5, s[0][2][0], 0x22E3F90F, 0xE7FFF9FF, 0xF7070C1A, 0xF710F6E0);
	r6 = D(r6, s[0][2][0], 0x21011627, 0x07072306, 0x11FFF8FC, 0x04F11212);
	r7 = D(r7, s[0][2][0], 0xE9FB00FE, 0x0BF115FF, 0xFAFA0F0C, 0xE3F5FBD5);
	r0 = D(r0, s[0][2][1], 0x01F7F006, 0xFB05EA19, 0xF001011F, 0x0EF4EA17);
	r1 = D(r1, s[0][2][1], 0x22020C1B, 0x0AEEF409, 0x1402FD33, 0x09010402);
	r2 = D(r2, s[0][2][1], 0xFF0815F3, 0xDF1AFF1A, 0x06E7F63A, 0xF4EA0FE0);
	r3 = D(r3, s[0][2][1], 0x1CEFF618, 0x02F60C12, 0xFC080DE9, 0x0AED051A);
	r4 = D(r4, s[0][2][1], 0xECFEF913, 0x13EC025D, 0x1309E9DE, 0xF5FC0902);
	r5 = D(r5, s[0][2][1], 0xE9FD1421, 0xF40809E3, 0x07061507, 0x0C1E0E0A);
	r6 = D(r6, s[0][2][1], 0xEC090300, 0x13020713, 0x0BF80009, 0x040B0814);
	r7 = D(r7, s[0][2][1], 0x0DED0DF5, 0x10FFFCDA, 0x02000C2E, 0xF3FBF3F7);
	r0 = D(r0, s[0][2][2], 0xFEF5FFFF, 0xFFFCFE34, 0x080503D2, 0x11FC0AE0);
	r1 = D(r1, s[0][2][2], 0x0AF91216, 0xF7040CD4, 0xFFF6FCFC, 0x100F082A);
	r2 = D(r2, s[0][2][2], 0x040206F6, 0xF0020DEE, 0x071C18E1, 0x10F70125);
	r3 = D(r3, s[0][2][2], 0x0507F91E, 0x0004FB2F, 0x05060B13, 0xF7F8F9E1);
	r4 = D(r4, s[0][2][2], 0xEA04FB26, 0x1CC9D73C, 0xDD17F506, 0xF00700FF);
	r5 = D(r5, s[0][2][2], 0xF70CFD0D, 0xED020D19, 0x0C0B0E33, 0x0AFC1410);
	r6 = D(r6, s[0][2][2], 0xFB00FD1C, 0x2112FEEB, 0x1716FA91, 0xF3E2FAF1);
	r7 = D(r7, s[0][2][2], 0xFD010A07, 0x12FFE00A, 0x0C09FE0B, 0x02FF0CFB);
	r0 = D(r0, s[1][0][0], 0x07F0FD07, 0x11E9F8F4, 0x0AF2F9F8, 0xFA0A0C0E);
	r1 = D(r1, s[1][0][0], 0x0518EE1B, 0xF8FD19FE, 0xFF0501F6, 0xFAF901E9);
	r2 = D(r2, s[1][0][0], 0x02EF0507, 0x03010EFA, 0xED08F90D, 0x0BE8CC14);
	r3 = D(r3, s[1][0][0], 0x08F7F613, 0x21DF2DF8, 0x0DECE7D9, 0xFCEF05F9);
	r4 = D(r4, s[1][0][0], 0x0C07FAEA, 0xFEED020D, 0x18F202F5, 0xFF05F804);
	r5 = D(r5, s[1][0][0], 0xED09F6F1, 0x03F400FD, 0x000703FB, 0x01F70609);
	r6 = D(r6, s[1][0][0], 0xF9EAE100, 0x0524FF16, 0xF907EC12, 0x03F6FC0D);
	r7 = D(r7, s[1][0][0], 0x05EFF601, 0x1AEB0CED, 0xFEF9FE0B, 0x02F7F2EE);
	r0 = D(r0, s[1][0][1], 0x1A1AF705, 0x222BE7ED, 0x09FB040F, 0xEC02FEFC);
	r1 = D(r1, s[1][0][1], 0xF807EE23, 0xF3EBF705, 0x000D0D13, 0x0201EF16);
	r2 = D(r2, s[1][0][1], 0xF602FF03, 0xE7101314, 0x010114FA, 0x21FFD609);
	r3 = D(r3, s[1][0][1], 0xF309F91E, 0x0EE90A1C, 0x2B2BF6EF, 0xFC18F313);
	r4 = D(r4, s[1][0][1], 0xFA07FB1E, 0x0ED1F5F6, 0xF70AF41D, 0xF4001522);
	r5 = D(r5, s[1][0][1], 0xFA0E0E03, 0xFC0701F1, 0x170007F7, 0x0012FEFC);
	r6 = D(r6, s[1][0][1], 0x17DEF3FA, 0xFDEF160A, 0xFFFF0A10, 0x1AFF14F2);
	r7 = D(r7, s[1][0][1], 0x15F808FF, 0x12130AEA, 0x02FF00FF, 0x06FC080F);
	r0 = D(r0, s[1][0][2], 0x052001F2, 0x08FF0DFB, 0x210A080B, 0xE30ADB09);
	r1 = D(r1, s[1][0][2], 0xD801F90F, 0xEFFC07F0, 0xF407F80A, 0xFB020805);
	r2 = D(r2, s[1][0][2], 0x0315FB00, 0xE81F0506, 0xF906FAF4, 0x0A0618FD);
	r3 = D(r3, s[1][0][2], 0xF9FFF60C, 0x0A09FA06, 0x2316FBF5, 0xFDEBEFFF);
	r4 = D(r4, s[1][0][2], 0x2400DF0B, 0x070E0609, 0xEB180AF3, 0xFF04FA08);
	r5 = D(r5, s[1][0][2], 0xF2FE081B, 0x04E2F803, 0x11E00D07, 0x013105F0);
	r6 = D(r6, s[1][0][2], 0xED130D09, 0x06E7F602, 0x08EF09F4, 0xFD16FDF5);
	r7 = D(r7, s[1][0][2], 0x110AF2F4, 0x2BF0EE05, 0x09FAFFF4, 0x100A02F2);
	r0 = D(r0, s[1][1][0], 0xFB1C1315, 0x151B10E6, 0x05F3F80B, 0x0AECF304);
	r1 = D(r1, s[1][1][0], 0xFEFFEFED, 0xFA0F0010, 0xFDFBF2FD, 0x07E314DD);
	r2 = D(r2, s[1][1][0], 0xFBF6ECEA, 0x05EFFEF9, 0xEBE0FF01, 0xFAFAF118);
	r3 = D(r3, s[1][1][0], 0xFCF2FEFE, 0x10F304F0, 0x01F0EE17, 0xF8F20E01);
	r4 = D(r4, s[1][1][0], 0x02080401, 0x0301F6DE, 0x0CD9F320, 0xE4FF1506);
	r5 = D(r5, s[1][1][0], 0x13F6F1C8, 0x070CFEFC, 0x0C0600D8, 0x0A11F906);
	r6 = D(r6, s[1][1][0], 0x08F9F80F, 0x0619FE1D, 0x02061F20, 0x060A0F0E);
	r7 = D(r7, s[1][1][0], 0x0B0206EE, 0x181709F5, 0xF4F3FD12, 0x08FAF3E7);
	r0 = D(r0, s[1][1][1], 0x082101FF, 0x05081116, 0x0EE111FF, 0xDF0C0901);
	r1 = D(r1, s[1][1][1], 0xC700FC05, 0xF9FB050D, 0xF8DF16F1, 0xFE1216FF);
	r2 = D(r2, s[1][1][1], 0x010CF9FD, 0xD3CCED16, 0xE404FDF9, 0xF415FA01);
	r3 = D(r3, s[1][1][1], 0xED060FF0, 0xF607F2FD, 0xF6D2EDF2, 0x090EF2FE);
	r4 = D(r4, s[1][1][1], 0x14FEF11A, 0xEE1DF726, 0x98FF15F5, 0xF8FF0006);
	r5 = D(r5, s[1][1][1], 0xEF1203F6, 0x040D17F8, 0x0306E5E8, 0x04050402);
	r6 = D(r6, s[1][1][1], 0x0CF5F506, 0x09F2FDF7, 0xEE190325, 0xF01B16F1);
	r7 = D(r7, s[1][1][1], 0x0808F4E9, 0xFEF41BCE, 0x0D0C02F8, 0x04F6F6EF);
	r0 = D(r0, s[1][1][2], 0x08EC0312, 0xD4E80325, 0x0BE70AFF, 0xFFFB15FF);
	r1 = D(r1, s[1][1][2], 0xD8F2FAF9, 0x121504F5, 0xEAD4E609, 0x06E508FD);
	r2 = D(r2, s[1][1][2], 0xF201010A, 0xF8270202, 0xFDF20D05, 0xEEEC290C);
	r3 = D(r3, s[1][1][2], 0xE811FD0A, 0x0DF4FF07, 0xF3000BED, 0x030AFDFB);
	r4 = D(r4, s[1][1][2], 0x1919F002, 0x08FAFAF8, 0xE7FBF504, 0x01001C10);
	r5 = D(r5, s[1][1][2], 0xBAF80B0B, 0x1201F003, 0x170AF108, 0xF112F30D);
	r6 = D(r6, s[1][1][2], 0xF9111008, 0x160DF7F3, 0x17DD00F8, 0x19080002);
	r7 = D(r7, s[1][1][2], 0x0626F9FF, 0x17E6FFE1, 0xFB0A06FC, 0x06F3FCFE);
	r0 = D(r0, s[1][2][0], 0xF4F9FAFF, 0xFF06050C, 0x08FBFB0E, 0xFBFEF002);
	r1 = D(r1, s[1][2][0], 0xF8021508, 0xFEF505FA, 0xF70713EB, 0x08FDFBEC);
	r2 = D(r2, s[1][2][0], 0x03FE1000, 0x10F20401, 0x0003EFFD, 0x0DFA0EE0);
	r3 = D(r3, s[1][2][0], 0xFEF2ED02, 0x2602DFF5, 0xE6150214, 0x0000E906);
	r4 = D(r4, s[1][2][0], 0x1A000206, 0x1AE314F1, 0xF5011217, 0x0BE5FE00);
	r5 = D(r5, s[1][2][0], 0x0AF10298, 0x040B0E09, 0xFB00F912, 0x10040118);
	r6 = D(r6, s[1][2][0], 0xF603DBF8, 0xFCFE1418, 0x13FCF904, 0x13010B08);
	r7 = D(r7, s[1][2][0], 0x10F30BF4, 0x060BF81D, 0xFD09E9FC, 0x180B16F5);
	r0 = D(r0, s[1][2][1], 0x0001FB08, 0x27EFE3FC, 0x19F8090E, 0x10F1ECFB);
	r1 = D(r1, s[1][2][1], 0xF0FFFAF0, 0xF0F608F6, 0x04F511EF, 0xFEF9F811);
	r2 = D(r2, s[1][2][1], 0x01F906F7, 0xDAF6FE14, 0xEFF0F7FB, 0x1E080D06);
	r3 = D(r3, s[1][2][1], 0x0208FBFB, 0xF5F3F000, 0xFEFE1405, 0x010CF7F5);
	r4 = D(r4, s[1][2][1], 0xF708FE08, 0xC713DC08, 0xCEE61413, 0x03FEFE0B);
	r5 = D(r5, s[1][2][1], 0xE8F6E8E7, 0x18F5FF0A, 0x02F1E8FE, 0x14FFFAFF);
	r6 = D(r6, s[1][2][1], 0xEEF4070F, 0x15101807, 0xF3F8EA02, 0x0BEFFCFB);
	r7 = D(r7, s[1][2][1], 0xFE05EEF9, 0x29171EF1, 0x0D0CEAE2, 0x03FC1E21);
	r0 = D(r0, s[1][2][2], 0x1B01F8EC, 0x0A0FF9F5, 0x0400FA0F, 0x1105F5F7);
	r1 = D(r1, s[1][2][2], 0xD40001EF, 0x120906E7, 0xF60104E8, 0x0B1300F9);
	r2 = D(r2, s[1][2][2], 0xF4F40609, 0xE204E109, 0x00FA1901, 0xF4F4F0FA);
	r3 = D(r3, s[1][2][2], 0x0EEEF5EC, 0x0EFAFC04, 0xF8F70608, 0x02FE0AFD);
	r4 = D(r4, s[1][2][2], 0x370FF508, 0x681CC58C, 0xF7FE0714, 0x0505F7F6);
	r5 = D(r5, s[1][2][2], 0xE2EF0510, 0x040905FD, 0x04FC00FE, 0x1612F903);
	r6 = D(r6, s[1][2][2], 0xF4F6F8F7, 0x28F9FC02, 0x14ECFFF2, 0xFE14F3F8);
	r7 = D(r7, s[1][2][2], 0x040F0806, 0x2E04FC02, 0xED0100F6, 0x0EF40F04);
	s[0][0][0] = G[4][xy.y+0][xy.x+0]; s[0][0][1] = G[4][xy.y+0][xy.x+1];
	s[0][0][2] = G[4][xy.y+0][xy.x+2]; s[0][1][0] = G[4][xy.y+1][xy.x+0];
	s[0][1][1] = G[4][xy.y+1][xy.x+1]; s[0][1][2] = G[4][xy.y+1][xy.x+2];
	s[0][2][0] = G[4][xy.y+2][xy.x+0]; s[0][2][1] = G[4][xy.y+2][xy.x+1];
	s[0][2][2] = G[4][xy.y+2][xy.x+2]; s[1][0][0] = G[5][xy.y+0][xy.x+0];
	s[1][0][1] = G[5][xy.y+0][xy.x+1]; s[1][0][2] = G[5][xy.y+0][xy.x+2];
	s[1][1][0] = G[5][xy.y+1][xy.x+0]; s[1][1][1] = G[5][xy.y+1][xy.x+1];
	s[1][1][2] = G[5][xy.y+1][xy.x+2]; s[1][2][0] = G[5][xy.y+2][xy.x+0];
	s[1][2][1] = G[5][xy.y+2][xy.x+1]; s[1][2][2] = G[5][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xF80E0508, 0x2BFF14FA, 0x150317FD, 0x0A120E05);
	r1 = D(r1, s[0][0][0], 0xF700F805, 0xEA0900F4, 0x020500F4, 0xFAFA02FD);
	r2 = D(r2, s[0][0][0], 0x00FF0FFF, 0x0AFAFDFE, 0x0705FBFB, 0xF50705E5);
	r3 = D(r3, s[0][0][0], 0x11FB09FD, 0x3E1AD5FE, 0xE20A0CE8, 0xECFFF608);
	r4 = D(r4, s[0][0][0], 0xF5081C11, 0x03FC05FE, 0x0BF7EA00, 0x06FFFB09);
	r5 = D(r5, s[0][0][0], 0xF508FE07, 0x0FFB11FC, 0x05160A0F, 0xF30806FF);
	r6 = D(r6, s[0][0][0], 0x26020217, 0x0A110519, 0x07FB050D, 0x0AF814F4);
	r7 = D(r7, s[0][0][0], 0x0704020B, 0xCD0B12FF, 0x040603F9, 0x03FF0C04);
	r0 = D(r0, s[0][0][1], 0xD6FC1D0E, 0xFE0C06E0, 0x150020E1, 0x02FC00FF);
	r1 = D(r1, s[0][0][1], 0x13080302, 0x0E24F2FB, 0x010E0708, 0x06FF0702);
	r2 = D(r2, s[0][0][1], 0xF607FF03, 0x120515FE, 0x2215F30F, 0x0A02EBEE);
	r3 = D(r3, s[0][0][1], 0x0E160EEA, 0xEEF30AF6, 0xF4DBF8FF, 0xF4EEF704);
	r4 = D(r4, s[0][0][1], 0x0FE5EE06, 0x1512FF07, 0x0CF2F3FB, 0x02FA0200);
	r5 = D(r5, s[0][0][1], 0x040A06F5, 0xFF0506EF, 0x040D09F2, 0x1504FE0D);
	r6 = D(r6, s[0][0][1], 0x54F3E5FC, 0x1AFDED02, 0xF609170A, 0xBBF6F7FA);
	r7 = D(r7, s[0][0][1], 0xFDF8FC0D, 0xF01D180A, 0xE6F8F7FB, 0xE2F6190C);
	r0 = D(r0, s[0][0][2], 0xFD030701, 0xEF060807, 0x0C070CF3, 0xFA1308F5);
	r1 = D(r1, s[0][0][2], 0xFAF5F50C, 0x17FFF6F3, 0xF0F90303, 0xFFFC0100);
	r2 = D(r2, s[0][0][2], 0x0205FF0B, 0xFE0308FD, 0xF7F8FC11, 0x030B03FE);
	r3 = D(r3, s[0][0][2], 0x010003F9, 0x121B0301, 0x0DFB10E9, 0xFCEBFEFB);
	r4 = D(r4, s[0][0][2], 0xF611F510, 0xFAEC1114, 0x0C16FFFA, 0xF3F5F317);
	r5 = D(r5, s[0][0][2], 0xFDF0EE0C, 0xF010F4F8, 0x04F70003, 0x0B080AFF);
	r6 = D(r6, s[0][0][2], 0x0F04F0FC, 0xF30BF702, 0xF8F1FD06, 0xF6EDF8FF);
	r7 = D(r7, s[0][0][2], 0x11030AFB, 0x10FEEA11, 0xFC000004, 0x0A00FEFE);
	r0 = D(r0, s[0][1][0], 0x200704F2, 0xEAF40101, 0x0407110B, 0x0B050801);
	r1 = D(r1, s[0][1][0], 0x001CEF03, 0x04F703F0, 0xFA100D0E, 0xF508F8FB);
	r2 = D(r2, s[0][1][0], 0xFEFEF500, 0x01F920F9, 0xF8050614, 0xE5090816);
	r3 = D(r3, s[0][1][0], 0xF1F41902, 0x2C09F6D3, 0x1B05ECE9, 0x81F1FE04);
	r4 = D(r4, s[0][1][0], 0xF00F0FFC, 0x11F7EAFA, 0x2803D6ED, 0x0E051CFD);
	r5 = D(r5, s[0][1][0], 0xEC010007, 0xC8FFFA00, 0xEC0411F8, 0xFFF6FFF9);
	r6 = D(r6, s[0][1][0], 0x35F32416, 0x0A0E06F1, 0x0A07F4F4, 0xF513F1F7);
	r7 = D(r7, s[0][1][0], 0xF0F4021C, 0x1D14F4EF, 0x05FFFBF9, 0xFE10F009);
	r0 = D(r0, s[0][1][1], 0xFC03EC17, 0x13031108, 0xE30FFE14, 0xCF01FA1D);
	r1 = D(r1, s[0][1][1], 0x1BE510FA, 0x04011D12, 0x0E0FFFFD, 0x0417E714);
	r2 = D(r2, s[0][1][1], 0x0206F0F5, 0x0316E8EB, 0x2D1AF3F4, 0x980AF316);
	r3 = D(r3, s[0][1][1], 0xECF70D15, 0xF4F312E2, 0x092BDC01, 0x9DEB0805);
	r4 = D(r4, s[0][1][1], 0x2609FAFD, 0x3316F504, 0xEAFF0418, 0x09F41315);
	r5 = D(r5, s[0][1][1], 0x150FF6DD, 0x24E70DFA, 0x0AEDF0FF, 0xF214F4ED);
	r6 = D(r6, s[0][1][1], 0x69E90803, 0xF7E8EBFB, 0xCAFDFB0A, 0xD4F2F90B);
	r7 = D(r7, s[0][1][1], 0x1EE9F8F8, 0xA5E21006, 0xF112F819, 0x1E02FBFC);
	r0 = D(r0, s[0][1][2], 0x23FB02F1, 0xCF19E902, 0x01F5F9FB, 0xE712F1EA);
	r1 = D(r1, s[0][1][2], 0xF9FAF710, 0xF8FB0107, 0xF809F5F8, 0x100EFDFC);
	r2 = D(r2, s[0][1][2], 0xE6030D15, 0xDEFFF014, 0xF902FDDD, 0x1705E40D);
	r3 = D(r3, s[0][1][2], 0xF911FAFE, 0x1E120B1D, 0x1F011510, 0x00FEF6FD);
	r4 = D(r4, s[0][1][2], 0xF2FB00F2, 0xFBE9F9F7, 0xD52713F4, 0xE3F50AF9);
	r5 = D(r5, s[0][1][2], 0xFCFBF301, 0x07F70FFC, 0x1DFBFD0D, 0x0011F024);
	r6 = D(r6, s[0][1][2], 0x1BEF0403, 0xFDFD0701, 0xEC04F5ED, 0x53F60410);
	r7 = D(r7, s[0][1][2], 0x0B18FBFD, 0xE2FB0B18, 0x1204F910, 0x00EF0210);
	r0 = D(r0, s[0][2][0], 0xFAFBFFFB, 0x09FA0007, 0x09050205, 0x020411F5);
	r1 = D(r1, s[0][2][0], 0xDF0004FB, 0x00FD0AFD, 0xFA010E0F, 0xFD100406);
	r2 = D(r2, s[0][2][0], 0x0F0A0511, 0x05FCFCF0, 0xFE100B1C, 0x100006D7);
	r3 = D(r3, s[0][2][0], 0xF2FF0408, 0x0709E3F5, 0x04E9F009, 0x08FE0502);
	r4 = D(r4, s[0][2][0], 0x0AF5F00D, 0x2BF20712, 0x07F8F90D, 0x02FE0FFD);
	r5 = D(r5, s[0][2][0], 0xF009080B, 0xF60DEE04, 0x0400F7FA, 0xF3F8E0E6);
	r6 = D(r6, s[0][2][0], 0x1AF91E01, 0xE60CF1FC, 0x1E0601FD, 0x13020601);
	r7 = D(r7, s[0][2][0], 0xD503F6F7, 0x0F020709, 0xFB0C0CFE, 0xF70B01F1);
	r0 = D(r0, s[0][2][1], 0x0FFDFA03, 0xF7060BFA, 0x14FEDCEE, 0x041401F4);
	r1 = D(r1, s[0][2][1], 0x17FFFE09, 0x0508FBFC, 0xFA0528E5, 0x06F00713);
	r2 = D(r2, s[0][2][1], 0x1A000A0E, 0x03FE11F1, 0x0A0E1AFC, 0x0603E9F1);
	r3 = D(r3, s[0][2][1], 0x0BFDFFFD, 0x22D51517, 0x03FC04FE, 0x11F00E04);
	r4 = D(r4, s[0][2][1], 0xF51BF205, 0x34220DF7, 0xD3010511, 0x1702E0F7);
	r5 = D(r5, s[0][2][1], 0x23F10CFF, 0x030BFE0F, 0x04190500, 0xDD1BE4D0);
	r6 = D(r6, s[0][2][1], 0x0FFE08FA, 0x0609FD04, 0x060DFFF0, 0xF60205EC);
	r7 = D(r7, s[0][2][1], 0xE708200B, 0xF701E9ED, 0x23F9E006, 0xCE12F7EC);
	r0 = D(r0, s[0][2][2], 0x06F9FFF5, 0x0600E318, 0x10E8EA14, 0xF6F70208);
	r1 = D(r1, s[0][2][2], 0x030C05EF, 0x020604FB, 0xFE03F8D7, 0x050C0510);
	r2 = D(r2, s[0][2][2], 0xF805F20B, 0xF4FCCF0D, 0xD6FB09E0, 0x01FB0B11);
	r3 = D(r3, s[0][2][2], 0xF2FEFA02, 0x0C08F31D, 0xF7F000FE, 0x00FAFC02);
	r4 = D(r4, s[0][2][2], 0xF106F010, 0x1C81E0B5, 0x1C25F0F9, 0x12ECF70C);
	r5 = D(r5, s[0][2][2], 0xE2EAF80C, 0x0CFBF915, 0xF206F8FE, 0xD70AE505);
	r6 = D(r6, s[0][2][2], 0xF808FEFB, 0x1A130D07, 0xEDEB0204, 0xF702F700);
	r7 = D(r7, s[0][2][2], 0xF702F4EE, 0xCFF909FD, 0x08050F08, 0xECF6FCEA);
	r0 = D(r0, s[1][0][0], 0xFEFA0000, 0xF4131406, 0xFA070107, 0x0E011405);
	r1 = D(r1, s[1][0][0], 0xFCF913F8, 0xF409F608, 0x160C120F, 0x021300EF);
	r2 = D(r2, s[1][0][0], 0xF8000BFF, 0xF60DF9F8, 0xFBFC0A08, 0xF60EF729);
	r3 = D(r3, s[1][0][0], 0xEAFD1B10, 0xFAFB0721, 0x220DFC11, 0x011AFAF8);
	r4 = D(r4, s[1][0][0], 0x1A06E4E9, 0x090BF80B, 0xC5E3E81D, 0x0900F9FF);
	r5 = D(r5, s[1][0][0], 0x060AFFFC, 0xFE03E5FD, 0x0CF80907, 0x00F3FCF2);
	r6 = D(r6, s[1][0][0], 0x00EEFD09, 0xE6EC0901, 0x0FF7F70A, 0x020EFD06);
	r7 = D(r7, s[1][0][0], 0xFD04EFFF, 0xEC191307, 0xF5FBFF09, 0x1B24EDF9);
	r0 = D(r0, s[1][0][1], 0xF10104F4, 0xE603DA19, 0x0E00F509, 0xF3FEE806);
	r1 = D(r1, s[1][0][1], 0x0BFF0CFF, 0x01040300, 0xFDFC0D0B, 0xE7040C01);
	r2 = D(r2, s[1][0][1], 0xFCF7FF13, 0x010AFDE7, 0x010101FB, 0xEF17011B);
	r3 = D(r3, s[1][0][1], 0x160BEFF8, 0x08FC18F0, 0xFA07EC45, 0x03FAFD00);
	r4 = D(r4, s[1][0][1], 0xE90509EE, 0x0209FC0A, 0x0BEEE2DB, 0xF9FF00F7);
	r5 = D(r5, s[1][0][1], 0x071B08EE, 0xF1F50316, 0xFF170411, 0xFF15F006);
	r6 = D(r6, s[1][0][1], 0xF903E725, 0xF9E8F905, 0xF81504F4, 0xEAFD01FE);
	r7 = D(r7, s[1][0][1], 0xFC0200F6, 0xF22904E5, 0x14F8F603, 0x060405F3);
	r0 = D(r0, s[1][0][2], 0xFA1DE8FF, 0x0DF20D09, 0x0201FF13, 0x12070803);
	r1 = D(r1, s[1][0][2], 0x0CF4FB03, 0xF3FCFE10, 0x1A14FCEF, 0x0606FEF4);
	r2 = D(r2, s[1][0][2], 0xF500FEF9, 0x09F90AFF, 0xEF0E0404, 0x01F00F10);
	r3 = D(r3, s[1][0][2], 0x12F60D05, 0x0210FD08, 0xFC0CF309, 0x08F710F5);
	r4 = D(r4, s[1][0][2], 0xE3E3FA08, 0x09EC02ED, 0x09EC1A00, 0xF7FFFBF1);
	r5 = D(r5, s[1][0][2], 0xFAFD0206, 0xEFFB0806, 0xFE0AFCED, 0x240B0205);
	r6 = D(r6, s[1][0][2], 0x0507E911, 0xF3EDFE00, 0xE60E1203, 0xECEE061C);
	r7 = D(r7, s[1][0][2], 0xF5E60D07, 0x010AFD04, 0x0FF5FAF5, 0x040AE606);
	r0 = D(r0, s[1][1][0], 0xF90BF008, 0x0CF2F61E, 0x010508F4, 0xF4080E10);
	r1 = D(r1, s[1][1][0], 0xFBE9F6F8, 0xEE10F50D, 0xF1191013, 0x02182313);
	r2 = D(r2, s[1][1][0], 0x020F0806, 0x05010DFE, 0x021E05F1, 0x110501FD);
	r3 = D(r3, s[1][1][0], 0xFFF50907, 0x0615DDEE, 0xF0331316, 0x00191811);
	r4 = D(r4, s[1][1][0], 0x121615F6, 0xFC28100B, 0xF501090C, 0x100F0C02);
	r5 = D(r5, s[1][1][0], 0xED081BEF, 0xECFBF00D, 0xEDF40515, 0x04E4F1EC);
	r6 = D(r6, s[1][1][0], 0xF009FDF4, 0xF8D2F80E, 0x0CD0EC14, 0x030D0A0D);
	r7 = D(r7, s[1][1][0], 0xFC0FF6DD, 0xFED3F60A, 0xFF05EFEE, 0x112214F4);
	r0 = D(r0, s[1][1][1], 0x04F50119, 0xF6F2111A, 0xFD0AFE16, 0x1BFE0223);
	r1 = D(r1, s[1][1][1], 0xF9EFF606, 0x0A2C0CF1, 0xFDFA00FC, 0xFCF404FD);
	r2 = D(r2, s[1][1][1], 0x0B15D7EC, 0xF7F4D7ED, 0xFC11F6E1, 0x00E6FCFC);
	r3 = D(r3, s[1][1][1], 0x02D3FDE3, 0xDEFA05E4, 0xF6DCFB11, 0x0B161C0D);
	r4 = D(r4, s[1][1][1], 0x18F60716, 0x07F3F8E2, 0x1DF2FDEB, 0xEE0AF6F9);
	r5 = D(r5, s[1][1][1], 0x1003EEDA, 0x0A1F1101, 0xFFF9EFF4, 0xFBEDFD06);
	r6 = D(r6, s[1][1][1], 0x0D33E715, 0xF2F2FF2F, 0xF7FA1401, 0x0903FAF5);
	r7 = D(r7, s[1][1][1], 0x12CDF21D, 0x0F0BFDDD, 0x120906FE, 0xE80A12E8);
	r0 = D(r0, s[1][1][2], 0xF61BFE14, 0x0218FEF9, 0xF403FD0E, 0x0C1AF8F7);
	r1 = D(r1, s[1][1][2], 0x14FB0B0C, 0x0BF3140B, 0x1E10EED7, 0x0CFDF9FC);
	r2 = D(r2, s[1][1][2], 0x0DF3FE04, 0x210EF5EA, 0x0F062405, 0xF906EF15);
	r3 = D(r3, s[1][1][2], 0xFA1109F5, 0xF3F5F708, 0xF8EBFE22, 0x0B01080A);
	r4 = D(r4, s[1][1][2], 0x0306EFF6, 0x2418F2F0, 0xFEF91409, 0x0ADF02FD);
	r5 = D(r5, s[1][1][2], 0xF9FB0C13, 0x0A19FF00, 0x07FC0203, 0x1AF3FFF0);
	r6 = D(r6, s[1][1][2], 0xFEFD060E, 0x16040909, 0x160402DD, 0x0CF01C25);
	r7 = D(r7, s[1][1][2], 0xFB18F915, 0x07F0070E, 0x15000204, 0x030406FB);
	r0 = D(r0, s[1][2][0], 0x0014FC0A, 0xE8F50417, 0xF6FAFD16, 0x020718FF);
	r1 = D(r1, s[1][2][0], 0xF6DDFDF9, 0xF70E0902, 0xF5FB0FF2, 0xEDF8FCF1);
	r2 = D(r2, s[1][2][0], 0xFE0B0B09, 0x201A0403, 0xF1200A00, 0x14BCF414);
	r3 = D(r3, s[1][2][0], 0xF40AF5FC, 0x160D060E, 0xFDF60E0E, 0xF0FD0114);
	r4 = D(r4, s[1][2][0], 0xFB1109FF, 0x03F8E81A, 0x0DD0292B, 0x0913FDE8);
	r5 = D(r5, s[1][2][0], 0x22251003, 0xFDEEFF01, 0xF40F0DFA, 0x10F8FBFC);
	r6 = D(r6, s[1][2][0], 0x04230626, 0xEEF8FAF6, 0x03FF0016, 0x070C1007);
	r7 = D(r7, s[1][2][0], 0x01DEF7ED, 0xEEEF06EA, 0x10030E06, 0xFFF303E6);
	r0 = D(r0, s[1][2][1], 0x0D05FC0D, 0x180BE9F2, 0xFDEFFA09, 0xEEF4ECEA);
	r1 = D(r1, s[1][2][1], 0x1104FEFB, 0x05F10206, 0x06FDFED7, 0x02090305);
	r2 = D(r2, s[1][2][1], 0xF8020E1C, 0xFA28F9FC, 0xEFF3E90F, 0xF5F60E18);
	r3 = D(r3, s[1][2][1], 0xFFFF02FB, 0x1908F2E8, 0x00010913, 0x01EF17EE);
	r4 = D(r4, s[1][2][1], 0xF7FBFF08, 0x320911FC, 0x1CF61D28, 0xF618F702);
	r5 = D(r5, s[1][2][1], 0xE9FDE7F5, 0xFF050A0C, 0xF9F8FD0C, 0xF59D07EC);
	r6 = D(r6, s[1][2][1], 0xF91DF608, 0x05F508F3, 0x02FBE809, 0xF7F40A00);
	r7 = D(r7, s[1][2][1], 0x1E0CFD12, 0xE5FCE5C8, 0x020B071A, 0xF6EBFBF9);
	r0 = D(r0, s[1][2][2], 0x090CF7FB, 0x05FAFFF2, 0xF8FE06F5, 0x0BF1010F);
	r1 = D(r1, s[1][2][2], 0xF9EB0411, 0x0F0EF3FC, 0xFFFE02EA, 0x09FCFB0A);
	r2 = D(r2, s[1][2][2], 0xFF060AF4, 0x070EFDEB, 0xF10101F2, 0xFFFAFF17);
	r3 = D(r3, s[1][2][2], 0xF2FCFFEF, 0x12FFFDF4, 0x00FCF118, 0x0A0006FE);
	r4 = D(r4, s[1][2][2], 0xFC06FD0C, 0xA04C9415, 0xF911ECD8, 0xF20814ED);
	r5 = D(r5, s[1][2][2], 0xF902030C, 0x10F80210, 0x05F10E0D, 0x16FF09FA);
	r6 = D(r6, s[1][2][2], 0x0A06FC10, 0x15FE0E04, 0xE5FCFDE7, 0xEF00F804);
	r7 = D(r7, s[1][2][2], 0x08120312, 0x12F3F9F4, 0xFEFAFD0E, 0xFE01F8F4);
	s[0][0][0] = G[6][xy.y+0][xy.x+0]; s[0][0][1] = G[6][xy.y+0][xy.x+1];
	s[0][0][2] = G[6][xy.y+0][xy.x+2]; s[0][1][0] = G[6][xy.y+1][xy.x+0];
	s[0][1][1] = G[6][xy.y+1][xy.x+1]; s[0][1][2] = G[6][xy.y+1][xy.x+2];
	s[0][2][0] = G[6][xy.y+2][xy.x+0]; s[0][2][1] = G[6][xy.y+2][xy.x+1];
	s[0][2][2] = G[6][xy.y+2][xy.x+2]; s[1][0][0] = G[7][xy.y+0][xy.x+0];
	s[1][0][1] = G[7][xy.y+0][xy.x+1]; s[1][0][2] = G[7][xy.y+0][xy.x+2];
	s[1][1][0] = G[7][xy.y+1][xy.x+0]; s[1][1][1] = G[7][xy.y+1][xy.x+1];
	s[1][1][2] = G[7][xy.y+1][xy.x+2]; s[1][2][0] = G[7][xy.y+2][xy.x+0];
	s[1][2][1] = G[7][xy.y+2][xy.x+1]; s[1][2][2] = G[7][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xFA050A01, 0x13F0FE0F, 0xFC01EC06, 0x080C0211);
	r1 = D(r1, s[0][0][0], 0xF21108FA, 0x02F200FE, 0xF605EA05, 0x04FB08ED);
	r2 = D(r2, s[0][0][0], 0xF7FEFC0B, 0xF9E10EFF, 0xFB0EFC01, 0x1516F0F7);
	r3 = D(r3, s[0][0][0], 0xF80C0A12, 0xFCE028EF, 0xF5130E0F, 0x0AFA060E);
	r4 = D(r4, s[0][0][0], 0xED0100F7, 0xFFFC07FA, 0x0EEF12F6, 0xF10D02FF);
	r5 = D(r5, s[0][0][0], 0x021DF40E, 0x0215F013, 0x06F40A05, 0xEEFC0E02);
	r6 = D(r6, s[0][0][0], 0xFFB6DA0F, 0x0BFAFA05, 0xF304EA00, 0x0803F7F9);
	r7 = D(r7, s[0][0][0], 0xF207FF0A, 0xF5FDEFEC, 0x000CF9F5, 0xF801EAF2);
	r0 = D(r0, s[0][0][1], 0xFDF5FA02, 0xCD0125E7, 0x0E11DD13, 0x04FAFDFB);
	r1 = D(r1, s[0][0][1], 0xFD1BF406, 0x0A0E06FE, 0xF7E312F7, 0x041F01FA);
	r2 = D(r2, s[0][0][1], 0xEBF2FFFC, 0xFD0BF5F3, 0x0AEF0B10, 0xF006F4EB);
	r3 = D(r3, s[0][0][1], 0xED17E4FC, 0xE50907F0, 0xEB010302, 0x1801E713);
	r4 = D(r4, s[0][0][1], 0x1DEC0C03, 0xDC03F508, 0xEFF7F403, 0xEE0EF5F9);
	r5 = D(r5, s[0][0][1], 0x00141D0B, 0x0C03F90B, 0x00FFFF12, 0x08FF26FD);
	r6 = D(r6, s[0][0][1], 0xFCE0EB06, 0x02E6F705, 0x0305FE03, 0xE50BFC08);
	r7 = D(r7, s[0][0][1], 0xFEF40DEF, 0x0AFAEBFD, 0x0F0702F4, 0xF912DB1E);
	r0 = D(r0, s[0][0][2], 0xF9F50CF8, 0x20EFEE05, 0xF409E7F3, 0xF7040806);
	r1 = D(r1, s[0][0][2], 0x0EF2F7F6, 0x0E010A06, 0xF4EC0EFA, 0xEFF9F0F5);
	r2 = D(r2, s[0][0][2], 0x06F804FB, 0x1917E313, 0xFDFB0F0D, 0x2606E907);
	r3 = D(r3, s[0][0][2], 0x01FF0E01, 0xCD04FEF7, 0xEEF6E400, 0x12E7EF1E);
	r4 = D(r4, s[0][0][2], 0xFE1C05F1, 0x141E0A0B, 0x0FF7EDFD, 0x0DFB06FF);
	r5 = D(r5, s[0][0][2], 0xF9F40EF7, 0x0D0C19DE, 0xDC1106FB, 0x0D09F505);
	r6 = D(r6, s[0][0][2], 0xF6EEED18, 0xF4FA06F3, 0xE807F608, 0x2000D013);
	r7 = D(r7, s[0][0][2], 0xFB100A12, 0xF2F9EDF3, 0xF2FBF3F9, 0xE40AF606);
	r0 = D(r0, s[0][1][0], 0xF20BFBFE, 0xF7FE0DF6, 0xFCFCEA02, 0x0703FB04);
	r1 = D(r1, s[0][1][0], 0xFBFA08FC, 0x07F3EEFE, 0x0CF8E4F6, 0x020C0A11);
	r2 = D(r2, s[0][1][0], 0xEF05F3FC, 0x04010BFD, 0x04F8EB01, 0xF306DD0C);
	r3 = D(r3, s[0][1][0], 0x05FE0AFE, 0x0C0FF2FC, 0x00FA07F7, 0xFFE9E319);
	r4 = D(r4, s[0][1][0], 0x070C1F01, 0x04F9F705, 0xD5010A03, 0x0707F319);
	r5 = D(r5, s[0][1][0], 0x08F701FA, 0xE307F6FE, 0x0EEE07FD, 0x07031F0B);
	r6 = D(r6, s[0][1][0], 0x22DAFCDB, 0x070F0B07, 0xF7F4D6F6, 0xF5FE02F8);
	r7 = D(r7, s[0][1][0], 0x10060DF5, 0x15F404FE, 0x04FCF1FD, 0x13FB061C);
	r0 = D(r0, s[0][1][1], 0x0515FC0C, 0x0CF9FC22, 0x090FC6F4, 0x0BF1CEED);
	r1 = D(r1, s[0][1][1], 0xF90214FC, 0x1E0803FF, 0xFF03F203, 0xE7FDF3E7);
	r2 = D(r2, s[0][1][1], 0x0813F9FC, 0xED0CF803, 0x05070BF8, 0x0103FDEE);
	r3 = D(r3, s[0][1][1], 0x0206F803, 0xE704DE0A, 0xF5120BF1, 0x05EFF41D);
	r4 = D(r4, s[0][1][1], 0x13F90412, 0xCDEBC4E4, 0x12E3ECFD, 0xEBEA0203);
	r5 = D(r5, s[0][1][1], 0xE31201DF, 0x04FE0228, 0xE8051EFA, 0xF0E5FCFE);
	r6 = D(r6, s[0][1][1], 0xF9F20AED, 0x16FBF5F1, 0x0306DD07, 0x000AFF05);
	r7 = D(r7, s[0][1][1], 0x03F315EB, 0xFEFC0026, 0x1B05F006, 0xF20510FE);
	r0 = D(r0, s[0][1][2], 0xF20417F8, 0x0611EDFE, 0x05E8F3FF, 0xE9E6F8F9);
	r1 = D(r1, s[0][1][2], 0x0DF3FE0B, 0xFEF5FA07, 0x0AF3180B, 0x01DBF005);
	r2 = D(r2, s[0][1][2], 0x1F0905FE, 0x2725EC0C, 0xE30B010E, 0xD9FDFB06);
	r3 = D(r3, s[0][1][2], 0xF9FF0A06, 0xEC08EF0E, 0x0810FEFD, 0x14ECFD0D);
	r4 = D(r4, s[0][1][2], 0x03080DD6, 0xF9F1EEE1, 0x1B05C41D, 0x01FFF208);
	r5 = D(r5, s[0][1][2], 0x0FE71E0C, 0x13070C0A, 0xEF0A0904, 0x120F1D10);
	r6 = D(r6, s[0][1][2], 0x0EFAE7EF, 0xE4FBF809, 0xDDEFEA02, 0x1CF0E22B);
	r7 = D(r7, s[0][1][2], 0x03150813, 0xCDF1E114, 0x04FCEBFB, 0x0F12FC03);
	r0 = D(r0, s[0][2][0], 0x07020B05, 0xFE0A08FD, 0xFFFB01F8, 0x09FDFE05);
	r1 = D(r1, s[0][2][0], 0x030C0C0B, 0xF50503F6, 0x0600FE0C, 0xFB0AF1FE);
	r2 = D(r2, s[0][2][0], 0xFC05FAF4, 0xF20C0209, 0x0907DF03, 0xF702E206);
	r3 = D(r3, s[0][2][0], 0xF9FD0EF9, 0xFF03F1FA, 0xFAFF0304, 0x030B03F0);
	r4 = D(r4, s[0][2][0], 0xF500F6F5, 0x01060CFC, 0x1003F10C, 0xFC000800);
	r5 = D(r5, s[0][2][0], 0x1BFBF3FB, 0x030409F8, 0xF70D0D0C, 0x130B31F8);
	r6 = D(r6, s[0][2][0], 0x15E6E1F8, 0xF7FF0705, 0xFE050609, 0x0204E207);
	r7 = D(r7, s[0][2][0], 0xF30502FD, 0xFDF70500, 0x02ED0303, 0xFBF4FEF6);
	r0 = D(r0, s[0][2][1], 0x03180F0C, 0xFF0701F8, 0xFDF5F60E, 0x010CF708);
	r1 = D(r1, s[0][2][1], 0x11EC0A05, 0x13FE11FB, 0xFD181B0C, 0xFDF8FF1C);
	r2 = D(r2, s[0][2][1], 0xF5EC0606, 0xFEE20EF2, 0x11E11507, 0xF704D907);
	r3 = D(r3, s[0][2][1], 0x050909F6, 0x0BF10101, 0x00F60BF6, 0xF708FA19);
	r4 = D(r4, s[0][2][1], 0x020AEE16, 0x16E9F2EA, 0x0D01CFF3, 0xFBFCFE0C);
	r5 = D(r5, s[0][2][1], 0x0BF4100D, 0xFF110309, 0x1CF205ED, 0xF50823D9);
	r6 = D(r6, s[0][2][1], 0x01EFEA2E, 0xF108F305, 0x11FE0BF8, 0xF60704F4);
	r7 = D(r7, s[0][2][1], 0xFEE40404, 0xFEF7EAFB, 0x050D0EF2, 0xF8040307);
	r0 = D(r0, s[0][2][2], 0xF4F310F9, 0x0B0CFE04, 0xEA040810, 0x00FA10FC);
	r1 = D(r1, s[0][2][2], 0x1A05F209, 0x0D0105FB, 0xE9F00CF3, 0x01FEF2F9);
	r2 = D(r2, s[0][2][2], 0xFC0BFD05, 0x1D08FB13, 0xF4ECF1F6, 0xF3F9F4E9);
	r3 = D(r3, s[0][2][2], 0xF40D1402, 0x1AFFE903, 0x07F106FD, 0xEBF3FD0F);
	r4 = D(r4, s[0][2][2], 0xFFFE03F1, 0x0094CAA7, 0xF8FCFDEF, 0x090304FC);
	r5 = D(r5, s[0][2][2], 0x1A030209, 0xEF0803FC, 0x16EBF7F6, 0x02021208);
	r6 = D(r6, s[0][2][2], 0x0CF9D817, 0xFCF5FAFE, 0xE011FDF2, 0x150D07FE);
	r7 = D(r7, s[0][2][2], 0x06F20B0F, 0xFCE4ED1C, 0x18FE01FF, 0xF3F70008);
	r0 = D(r0, s[1][0][0], 0xF1FCFAF9, 0x0B0C03DA, 0x02EE0A0C, 0xF602FDFC);
	r1 = D(r1, s[1][0][0], 0x02F41304, 0x09040209, 0xED00FAFA, 0xEB0408EA);
	r2 = D(r2, s[1][0][0], 0x13FB03F4, 0xF30E11EE, 0xF30A030C, 0xF9160816);
	r3 = D(r3, s[1][0][0], 0x0C04F8F6, 0xFA2118D4, 0xE9EEFDFC, 0xFD010EED);
	r4 = D(r4, s[1][0][0], 0xFCE203FF, 0xF5FC17EF, 0x20FFFB08, 0x0000FFFB);
	r5 = D(r5, s[1][0][0], 0xF7FD040C, 0xF9E40113, 0xFE06EBEE, 0x0CFB1807);
	r6 = D(r6, s[1][0][0], 0xFFFEF4FE, 0x0CF5F800, 0xF30307FB, 0x02E9EB0B);
	r7 = D(r7, s[1][0][0], 0x080901FC, 0xFDE5FEE7, 0x090F0702, 0x03FDF909);
	r0 = D(r0, s[1][0][1], 0xFFF10905, 0xEE1AEAFB, 0xF1FAFAF3, 0xEEF303EF);
	r1 = D(r1, s[1][0][1], 0x0504FF02, 0x0B1B01FA, 0xF10DE7FA, 0x03F7F703);
	r2 = D(r2, s[1][0][1], 0xFCF8FE03, 0x0EF5F60C, 0x1408D302, 0x11091F10);
	r3 = D(r3, s[1][0][1], 0xF709F707, 0xE72205EE, 0x10DB0E0F, 0xF9130F06);
	r4 = D(r4, s[1][0][1], 0xF609120F, 0x04090D11, 0xF40A000C, 0xFB06FAEA);
	r5 = D(r5, s[1][0][1], 0xFDF6F806, 0xFE021103, 0xF30902EE, 0xFEF7FB05);
	r6 = D(r6, s[1][0][1], 0x1CF21C0D, 0xF52201E6, 0xF810FBF1, 0xF3E81707);
	r7 = D(r7, s[1][0][1], 0x02ED0304, 0xF4FFECD6, 0xFF0D05F9, 0xE7D6F7F8);
	r0 = D(r0, s[1][0][2], 0xEC140A09, 0xF6EAF102, 0xFDF1FD0B, 0x140603EE);
	r1 = D(r1, s[1][0][2], 0xF4FAF60C, 0x0407E4F9, 0x0A180EF1, 0x0F0306FA);
	r2 = D(r2, s[1][0][2], 0xF508FEFC, 0xEEE4040B, 0xF009ED01, 0x00ED2607);
	r3 = D(r3, s[1][0][2], 0x00030B1C, 0xF5060504, 0x06F3150C, 0x06F513FE);
	r4 = D(r4, s[1][0][2], 0x07F9FD19, 0xF1011F06, 0x07EA0300, 0x051009FA);
	r5 = D(r5, s[1][0][2], 0x0522F7FF, 0x09F51011, 0xF913F3D7, 0xF6E30002);
	r6 = D(r6, s[1][0][2], 0x10FBFCED, 0x021AF0E9, 0xF4090000, 0xFAF818FF);
	r7 = D(r7, s[1][0][2], 0x06EBF612, 0x06F30101, 0x0CFD0201, 0x0C05040B);
	r0 = D(r0, s[1][1][0], 0x14FD11F5, 0x140DFCF0, 0x0EFFF7FB, 0xE6F3EA09);
	r1 = D(r1, s[1][1][0], 0x07F0FDFD, 0xF5F207F9, 0xF8FEFC15, 0x02F0090E);
	r2 = D(r2, s[1][1][0], 0x1C030900, 0x0FF5FD0E, 0x1702F402, 0xEFDA0804);
	r3 = D(r3, s[1][1][0], 0xE1F90808, 0x05EEEF0A, 0xFFEA060A, 0x0B0D10DE);
	r4 = D(r4, s[1][1][0], 0x0DF113EE, 0x1B0016EB, 0xD4E9070B, 0x0501FE02);
	r5 = D(r5, s[1][1][0], 0x0DFD010B, 0x04F40F11, 0x17F2FCED, 0x2716E502);
	r6 = D(r6, s[1][1][0], 0x02DFC10F, 0xF9E305D7, 0x14140EF4, 0xED070013);
	r7 = D(r7, s[1][1][0], 0x0DEDFFE5, 0x0513F812, 0xFBF8F705, 0x04031E20);
	r0 = D(r0, s[1][1][1], 0x0712F60F, 0xEE041308, 0x02FC0F15, 0x13FDE6F1);
	r1 = D(r1, s[1][1][1], 0x0A060316, 0xECD3F128, 0xFAF9F607, 0x220EE8F6);
	r2 = D(r2, s[1][1][1], 0xFC09F8FF, 0xF9F20210, 0xF413F809, 0xEDDC0D01);
	r3 = D(r3, s[1][1][1], 0xF50C05F4, 0xFEF31016, 0x0C0A0D01, 0xEDFF0607);
	r4 = D(r4, s[1][1][1], 0xEB08F1F0, 0x0E01CC2F, 0x03F7FE02, 0xF92005F4);
	r5 = D(r5, s[1][1][1], 0xFE00FC10, 0xFF012917, 0xFCE0EE17, 0xF90AF6F0);
	r6 = D(r6, s[1][1][1], 0x0F00F90B, 0x05120110, 0xFB2F15F2, 0xFAFB1A11);
	r7 = D(r7, s[1][1][1], 0xF7F7161C, 0x0606F103, 0x17F501F8, 0x18E7FF07);
	r0 = D(r0, s[1][1][2], 0x0FFC060B, 0x0505FAED, 0xF9F80E0F, 0xE00EED12);
	r1 = D(r1, s[1][1][2], 0x190610E1, 0xE6DAFF03, 0x1B00EDF2, 0x1C160300);
	r2 = D(r2, s[1][1][2], 0x02FFF9F9, 0x06D4031A, 0xF9110500, 0x0D310DF9);
	r3 = D(r3, s[1][1][2], 0xF7F3F706, 0xF7F80D17, 0x1D0A0BFB, 0xEE0BE9F9);
	r4 = D(r4, s[1][1][2], 0xF50C0F11, 0x07C4271C, 0x05FB0DDE, 0x0EFFEDF7);
	r5 = D(r5, s[1][1][2], 0x0E02F7F8, 0xF7E30A0E, 0x04F91711, 0xF714EEF6);
	r6 = D(r6, s[1][1][2], 0x16FBF101, 0x08FFF900, 0xFB0C05E1, 0xF90B1908);
	r7 = D(r7, s[1][1][2], 0x080C0016, 0x03DAFCF5, 0xF7150805, 0xFAFB05F9);
	r0 = D(r0, s[1][2][0], 0x09FC0604, 0x18F91000, 0x01000B21, 0x0FEBFA0C);
	r1 = D(r1, s[1][2][0], 0xEC0EF8EA, 0xFBF50E0E, 0xFD090001, 0x020DFFFF);
	r2 = D(r2, s[1][2][0], 0xFBF407F6, 0x030EFAFF, 0x00F712EA, 0xF306EBF1);
	r3 = D(r3, s[1][2][0], 0x04FB0B03, 0x050605FA, 0xF609F5FF, 0x08EC0E07);
	r4 = D(r4, s[1][2][0], 0xFF000CEE, 0xDDFEFCFD, 0xCEFE042A, 0x09FEF7F5);
	r5 = D(r5, s[1][2][0], 0x0E11DF0B, 0x00EDF807, 0x04F7110E, 0x011B0404);
	r6 = D(r6, s[1][2][0], 0xFCF80B1E, 0xFA1302F9, 0x1AF4100B, 0x13FB010C);
	r7 = D(r7, s[1][2][0], 0xFF00E8FF, 0x0B08190A, 0x110CFE08, 0x111BFDEA);
	r0 = D(r0, s[1][2][1], 0x05F9F7EA, 0x1FEFED07, 0x0B0FEA02, 0x1EFB060F);
	r1 = D(r1, s[1][2][1], 0xFB1AFB03, 0x18FDEFF4, 0xF4E7F2F2, 0xFAE80C10);
	r2 = D(r2, s[1][2][1], 0xF6F9FEFF, 0x14E80C05, 0xF50DF4F2, 0x01200AF3);
	r3 = D(r3, s[1][2][1], 0xF1120BFA, 0x0B0B211B, 0x031202F5, 0xFFFF0310);
	r4 = D(r4, s[1][2][1], 0xFE0701FA, 0x0E052816, 0x001CFEFA, 0x09EA0EF3);
	r5 = D(r5, s[1][2][1], 0xE4FF05FF, 0xF5030304, 0xF909FE0C, 0xE6D510F9);
	r6 = D(r6, s[1][2][1], 0x02190B07, 0x12F7040E, 0x020E060A, 0xE707130E);
	r7 = D(r7, s[1][2][1], 0xFC0F07F8, 0xEB2CE20B, 0x06FB150E, 0xFC1AE3E0);
	r0 = D(r0, s[1][2][2], 0xF6F00207, 0xFC041418, 0xFE050311, 0xFCF90311);
	r1 = D(r1, s[1][2][2], 0xFE0908F7, 0x08FA0EF0, 0x02060CFE, 0x08020915);
	r2 = D(r2, s[1][2][2], 0xFA13FDF0, 0xED22E7F9, 0xE2FCFFF9, 0xF209020E);
	r3 = D(r3, s[1][2][2], 0x05F30300, 0xF8090108, 0x0804FC05, 0xFEF6160E);
	r4 = D(r4, s[1][2][2], 0x04F4FA17, 0xCBCC05CF, 0xF72006D7, 0xF40401FD);
	r5 = D(r5, s[1][2][2], 0x1408EFF7, 0xFD0211F3, 0x0E0B060F, 0xFCFC06EF);
	r6 = D(r6, s[1][2][2], 0xFB011200, 0xFBFE100E, 0xFF0E0311, 0x0EFFF316);
	r7 = D(r7, s[1][2][2], 0xF2F4F205, 0xFDFCE8F0, 0x0810FE07, 0x1C15E6F2);
	vec4 f0 = vec4(r0) * 6.20001240e-05;
	f0 += vec4(-4.673e-02, -1.383e-05, -5.017e-02, 3.141e-02);
	f0 = max(f0, vec4(0.0));
	imageStore(out_image, opos + ivec2(0, 0), f0);
	vec4 f1 = vec4(r1) * 6.20001240e-05;
	f1 += vec4(3.651e-02, -1.479e-02, 2.326e-03, 1.034e-02);
	f1 = max(f1, vec4(0.0));
	imageStore(out_image, opos + ivec2(1, 0), f1);
	vec4 f2 = vec4(r2) * 6.20001240e-05;
	f2 += vec4(3.373e-02, -5.463e-02, -4.522e-03, -1.168e-02);
	f2 = max(f2, vec4(0.0));
	imageStore(out_image, opos + ivec2(0, 1), f2);
	vec4 f3 = vec4(r3) * 6.20001240e-05;
	f3 += vec4(6.647e-03, -2.021e-03, -2.859e-03, -2.400e-01);
	f3 = max(f3, vec4(0.0));
	imageStore(out_image, opos + ivec2(1, 1), f3);
	vec4 f4 = vec4(r4) * 6.20001240e-05;
	f4 += vec4(1.777e-02, -6.053e-03, 1.751e-02, -2.960e-04);
	f4 = max(f4, vec4(0.0));
	imageStore(out_image, opos + ivec2(2, 0), f4);
	vec4 f5 = vec4(r5) * 6.20001240e-05;
	f5 += vec4(-2.164e-02, -5.316e-02, 3.089e-02, -2.839e-02);
	f5 = max(f5, vec4(0.0));
	imageStore(out_image, opos + ivec2(3, 0), f5);
	vec4 f6 = vec4(r6) * 6.20001240e-05;
	f6 += vec4(-5.577e-02, 3.381e-02, 4.212e-02, -1.810e-01);
	f6 = max(f6, vec4(0.0));
	imageStore(out_image, opos + ivec2(2, 1), f6);
	vec4 f7 = vec4(r7) * 6.20001240e-05;
	f7 += vec4(-7.207e-03, 3.605e-02, 3.307e-02, -9.743e-03);
	f7 = max(f7, vec4(0.0));
	imageStore(out_image, opos + ivec2(3, 1), f7);
}

//!DESC CuNNy-4x32-BILINEAR-TEST-conv3
//!HOOK LUMA
//!COMPUTE 32 16 8 8
//!BIND conv2
//!BIND LUMA
//!SAVE conv3
//!WIDTH LUMA.w 4 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_spirv_intrinsics : require
#extension GL_EXT_control_flow_attributes : require
spirv_instruction (extensions = ["SPV_KHR_integer_dot_product"], capabilities = [6019, 6018], id = 4450)
int dp4(int a, int b, spirv_literal int fmt);
#define D(r, s, a, b, c, d) ivec4(r.x + dp4(s, a, 0), r.y + dp4(s, b, 0), r.z + dp4(s, c, 0), r.w + dp4(s, d, 0))
shared int G[8][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(4, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	[[unroll]] for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		[[unroll]] for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			vec4 r, g, b, a;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(4, 2) + ivec2(1, 1)) * conv2_pt;
			r = conv2_gather(p, 0);
			g = conv2_gather(p, 1);
			b = conv2_gather(p, 2);
			a = conv2_gather(p, 3);
			vec4 v0 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v1 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v2 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v3 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(4, 2) + ivec2(3, 1)) * conv2_pt;
			r = conv2_gather(p, 0);
			g = conv2_gather(p, 1);
			b = conv2_gather(p, 2);
			a = conv2_gather(p, 3);
			vec4 v4 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v5 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v6 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v7 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			G[0][ay][ax] = int(packSnorm4x8(v0));
			G[1][ay][ax] = int(packSnorm4x8(v1));
			G[2][ay][ax] = int(packSnorm4x8(v2));
			G[3][ay][ax] = int(packSnorm4x8(v3));
			G[4][ay][ax] = int(packSnorm4x8(v4));
			G[5][ay][ax] = int(packSnorm4x8(v5));
			G[6][ay][ax] = int(packSnorm4x8(v6));
			G[7][ay][ax] = int(packSnorm4x8(v7));
		}
	}
	barrier();
	int s[2][3][3];
	ivec4 r0 = ivec4(0);
	ivec4 r1 = ivec4(0);
	ivec4 r2 = ivec4(0);
	ivec4 r3 = ivec4(0);
	ivec4 r4 = ivec4(0);
	ivec4 r5 = ivec4(0);
	ivec4 r6 = ivec4(0);
	ivec4 r7 = ivec4(0);
	s[0][0][0] = G[0][xy.y+0][xy.x+0]; s[0][0][1] = G[0][xy.y+0][xy.x+1];
	s[0][0][2] = G[0][xy.y+0][xy.x+2]; s[0][1][0] = G[0][xy.y+1][xy.x+0];
	s[0][1][1] = G[0][xy.y+1][xy.x+1]; s[0][1][2] = G[0][xy.y+1][xy.x+2];
	s[0][2][0] = G[0][xy.y+2][xy.x+0]; s[0][2][1] = G[0][xy.y+2][xy.x+1];
	s[0][2][2] = G[0][xy.y+2][xy.x+2]; s[1][0][0] = G[1][xy.y+0][xy.x+0];
	s[1][0][1] = G[1][xy.y+0][xy.x+1]; s[1][0][2] = G[1][xy.y+0][xy.x+2];
	s[1][1][0] = G[1][xy.y+1][xy.x+0]; s[1][1][1] = G[1][xy.y+1][xy.x+1];
	s[1][1][2] = G[1][xy.y+1][xy.x+2]; s[1][2][0] = G[1][xy.y+2][xy.x+0];
	s[1][2][1] = G[1][xy.y+2][xy.x+1]; s[1][2][2] = G[1][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x0D06110A, 0x00FE0D13, 0x06F601FB, 0xFBFC0501);
	r1 = D(r1, s[0][0][0], 0x0BF7FFF1, 0x01FAF2F3, 0xFBFE0201, 0xF30B0DEF);
	r2 = D(r2, s[0][0][0], 0xEF02F4F9, 0x01E4EBFE, 0xFEEA0208, 0x02F51A17);
	r3 = D(r3, s[0][0][0], 0x13F9FA03, 0x050EFD0C, 0x021DEF01, 0x00040102);
	r4 = D(r4, s[0][0][0], 0xFF06F910, 0xFB150000, 0x020EFE03, 0xEF0CF7FC);
	r5 = D(r5, s[0][0][0], 0x04020AF7, 0x0A1208F7, 0x0B120701, 0x03FFF8FC);
	r6 = D(r6, s[0][0][0], 0xFD082003, 0x0DED0403, 0x0F0C04FA, 0x000FFD08);
	r7 = D(r7, s[0][0][0], 0x02F8F9F6, 0x02F70306, 0xF5FD0502, 0x05050200);
	r0 = D(r0, s[0][0][1], 0x04F7060B, 0x0A0101EE, 0xFCF302F7, 0x07FE02F3);
	r1 = D(r1, s[0][0][1], 0xF409FC09, 0xF80DFBF4, 0xFD060503, 0xF6020EEC);
	r2 = D(r2, s[0][0][1], 0x0108F5FA, 0xFE04F305, 0x0EFD02F5, 0x01F702C8);
	r3 = D(r3, s[0][0][1], 0x09FBFB04, 0xFEDC020A, 0xE4F7FCFA, 0x0810FFFF);
	r4 = D(r4, s[0][0][1], 0x0FF9061C, 0xFCFD07F1, 0xFBFAFC06, 0x08DC01E0);
	r5 = D(r5, s[0][0][1], 0xFF0901FE, 0x05130C0E, 0x040C141C, 0xF80804FF);
	r6 = D(r6, s[0][0][1], 0xE70A0C05, 0x23FAF50F, 0x11051802, 0x00FEFB02);
	r7 = D(r7, s[0][0][1], 0x03FDFEF5, 0x150C0505, 0x180A0103, 0xFAF5FDF6);
	r0 = D(r0, s[0][0][2], 0xFE160602, 0xF9F80309, 0x01FC00FF, 0xFEF6FEFC);
	r1 = D(r1, s[0][0][2], 0xF2E8F7FE, 0xF7F80104, 0x0C090403, 0xFD0A1305);
	r2 = D(r2, s[0][0][2], 0x00FDF7FF, 0xF3FFED08, 0x040402F2, 0xEEEE1CE7);
	r3 = D(r3, s[0][0][2], 0x05DAFEED, 0xF80200DB, 0xFF120A12, 0x01080410);
	r4 = D(r4, s[0][0][2], 0x08060DFB, 0xFD0406F5, 0x010E0706, 0xFFFA12F4);
	r5 = D(r5, s[0][0][2], 0xFBF608F3, 0xF9180D15, 0xF21A01F7, 0x06F7010A);
	r6 = D(r6, s[0][0][2], 0xF2FD0218, 0x00EA0009, 0x01171600, 0xFBFAFE00);
	r7 = D(r7, s[0][0][2], 0xFEFA0106, 0xE30D010A, 0xFC020B02, 0xFAFE06ED);
	r0 = D(r0, s[0][1][0], 0x05FF0A07, 0x1AFA1BCF, 0x08140F0D, 0xFAF30203);
	r1 = D(r1, s[0][1][0], 0x1A051003, 0x0CFE1701, 0x0CFAFCFF, 0x050E0108);
	r2 = D(r2, s[0][1][0], 0xF7FBF200, 0xF303D218, 0x040CFB17, 0x13F40425);
	r3 = D(r3, s[0][1][0], 0x120C0108, 0x02FD06F9, 0xFE0719E4, 0x03FAF9E6);
	r4 = D(r4, s[0][1][0], 0x0608EA0C, 0xFAF9F9F7, 0x01F712FD, 0x2BF30D01);
	r5 = D(r5, s[0][1][0], 0x0A0214EF, 0xFD0809F2, 0xF60214FE, 0x04F501F5);
	r6 = D(r6, s[0][1][0], 0x04EA07FA, 0x0BF41D01, 0x21FE1012, 0x03020411);
	r7 = D(r7, s[0][1][0], 0xFE0A090F, 0x1A1C23CE, 0x1304FDF5, 0x1D070D14);
	r0 = D(r0, s[0][1][1], 0x07FD1106, 0x010DF40C, 0x0B0A0B0B, 0x09FFFA0E);
	r1 = D(r1, s[0][1][1], 0xF316EDFE, 0x09EC0506, 0x06EA1010, 0x0CEF0D02);
	r2 = D(r2, s[0][1][1], 0x04FC02F4, 0xFDF2D5EF, 0x051205EF, 0x05200B0A);
	r3 = D(r3, s[0][1][1], 0x0BFC000A, 0x28FF1F08, 0xF7CD1BF3, 0x0B0702E8);
	r4 = D(r4, s[0][1][1], 0x14E50ACC, 0x02F605EE, 0x0D090CF8, 0x18022523);
	r5 = D(r5, s[0][1][1], 0x04EB0A05, 0xF80B04FF, 0x17FD1814, 0x161100FC);
	r6 = D(r6, s[0][1][1], 0x30E401D7, 0x00072308, 0x02051CF3, 0xF1FCFB0B);
	r7 = D(r7, s[0][1][1], 0xE8F4F6FD, 0x00CC21F9, 0x08FC0A0E, 0x0DF90907);
	r0 = D(r0, s[0][1][2], 0xFE010A08, 0x0F01F119, 0x00FC0407, 0x06050AFC);
	r1 = D(r1, s[0][1][2], 0x1903F806, 0x14121405, 0xFC0000F4, 0x12FD060C);
	r2 = D(r2, s[0][1][2], 0x01F4F3F4, 0xFEF6E6F1, 0x060C01E2, 0x0FF21B1E);
	r3 = D(r3, s[0][1][2], 0x0F04F902, 0xF1FDF9F4, 0x0E0D2302, 0x02FC11F1);
	r4 = D(r4, s[0][1][2], 0xF6060610, 0xF8FBF6F9, 0x01F30108, 0xEA1E0CF4);
	r5 = D(r5, s[0][1][2], 0x020C07F7, 0xFFEA05F0, 0xEE11E1F2, 0xFD04F8FB);
	r6 = D(r6, s[0][1][2], 0x20EC0809, 0xE4EAF5F9, 0xF3FB0A04, 0x01F0FF02);
	r7 = D(r7, s[0][1][2], 0x07120617, 0xFEF215FC, 0x0C0E180B, 0xF0150406);
	r0 = D(r0, s[0][2][0], 0xFDFD07FF, 0x09050CEF, 0x02FB1102, 0x030B03FB);
	r1 = D(r1, s[0][2][0], 0x0B000BFA, 0x21FF12FC, 0xF2FCFFF6, 0xF711FAF6);
	r2 = D(r2, s[0][2][0], 0x01F6FC02, 0xF3FDEF10, 0xF8F4F805, 0xFD06FEE3);
	r3 = D(r3, s[0][2][0], 0x0D07F906, 0x090A04FA, 0x110701E3, 0x0FF4170E);
	r4 = D(r4, s[0][2][0], 0x03FFF205, 0x0704F9F7, 0x030B0F03, 0xFF09031C);
	r5 = D(r5, s[0][2][0], 0xFBFE14FD, 0x0BF806ED, 0x28F41BF1, 0x00040A0F);
	r6 = D(r6, s[0][2][0], 0x12EB11FC, 0x00DEFDFE, 0x09F70FF6, 0xFF0AFE08);
	r7 = D(r7, s[0][2][0], 0x00030BF5, 0x031F270E, 0xFAFFF8FC, 0x02EF0B14);
	r0 = D(r0, s[0][2][1], 0xE5F3050A, 0xF8FF02EE, 0x0507030C, 0x04070205);
	r1 = D(r1, s[0][2][1], 0xF601EBFF, 0x1D06FBED, 0xF40E0901, 0x010005F3);
	r2 = D(r2, s[0][2][1], 0xFBFA0E10, 0x0912ECFF, 0xFEEE050C, 0xE8E9160F);
	r3 = D(r3, s[0][2][1], 0x10EEF8FF, 0x07F90B13, 0xE5F103F7, 0x07F90702);
	r4 = D(r4, s[0][2][1], 0x1A0308EE, 0x09E614F2, 0x01010A10, 0x19F412FE);
	r5 = D(r5, s[0][2][1], 0xFE01F805, 0x08F702F6, 0xE0E80806, 0xF3FBF817);
	r6 = D(r6, s[0][2][1], 0xEA06FB15, 0x13EEDDFF, 0xEDE61EF3, 0xFF0AFE1B);
	r7 = D(r7, s[0][2][1], 0xF5FDF6F7, 0x011B280E, 0x12FBFFF6, 0xF6F3160B);
	r0 = D(r0, s[0][2][2], 0xFF020508, 0x03F1000B, 0xF50305FD, 0xF8F60203);
	r1 = D(r1, s[0][2][2], 0x06050503, 0xF90F1101, 0xF61110FA, 0x080002F2);
	r2 = D(r2, s[0][2][2], 0xFBFFFDFE, 0x0CEFF0F9, 0xECF5EFF5, 0xEC0407F2);
	r3 = D(r3, s[0][2][2], 0x04F5F6FE, 0xF20FFCFE, 0x04EEF5F7, 0xEB01EFFB);
	r4 = D(r4, s[0][2][2], 0x0DE8C807, 0xFE0009FC, 0xF9030906, 0xF3F408FE);
	r5 = D(r5, s[0][2][2], 0xF90108FD, 0x00F2F5FC, 0x0D020312, 0x000FFC01);
	r6 = D(r6, s[0][2][2], 0xF70C210C, 0xF8060AFC, 0x0B0010FC, 0x0208FC02);
	r7 = D(r7, s[0][2][2], 0x02010304, 0x04F30DFA, 0x09F4F904, 0xF4010106);
	r0 = D(r0, s[1][0][0], 0xF5F6050A, 0xFA01FED2, 0x08FC08FC, 0xFF00F402);
	r1 = D(r1, s[1][0][0], 0xF80313EB, 0xF5F71F01, 0x04F60502, 0xF700FD08);
	r2 = D(r2, s[1][0][0], 0x070BEB0B, 0x000C090C, 0x13FE01F7, 0x01F2FBFE);
	r3 = D(r3, s[1][0][0], 0x0EFFFDFA, 0xF1EAF702, 0x011DD30C, 0xFE01E6F9);
	r4 = D(r4, s[1][0][0], 0xF0F90C08, 0x05F2010D, 0xEF0EF807, 0xF7ED15FB);
	r5 = D(r5, s[1][0][0], 0x03F6F4FA, 0x01FCEFF8, 0xF113F0E8, 0xFDF209F8);
	r6 = D(r6, s[1][0][0], 0xF50CF5F6, 0x071D1CF4, 0xF009F412, 0xFFF4FC03);
	r7 = D(r7, s[1][0][0], 0xF90903FF, 0x09E9E2F9, 0xFF14FB02, 0xF7FF05F4);
	r0 = D(r0, s[1][0][1], 0x1106F40A, 0xF8BF14F6, 0x03030500, 0x03F70400);
	r1 = D(r1, s[1][0][1], 0x0DEF1A0C, 0xFD06171D, 0x0E0108F4, 0xFC130903);
	r2 = D(r2, s[1][0][1], 0x08F5F8FD, 0xFE12E50A, 0x100AEFF8, 0xFDEE19EE);
	r3 = D(r3, s[1][0][1], 0x0EF6FCF8, 0x05190107, 0xEFEBDD0D, 0xEA010206);
	r4 = D(r4, s[1][0][1], 0xF80CEC03, 0x040DFA02, 0xF708FA04, 0x1EF110FE);
	r5 = D(r5, s[1][0][1], 0xFC04FDFD, 0x0C0D0404, 0xE7EBDFFE, 0xF7FAF7FD);
	r6 = D(r6, s[1][0][1], 0x02F301FB, 0x0FDC19F3, 0x05F7E9FD, 0xF5050FFF);
	r7 = D(r7, s[1][0][1], 0x0306FCFC, 0xFDE2FD13, 0x02F00304, 0x13F9FD05);
	r0 = D(r0, s[1][0][2], 0xFA02F2F6, 0x0A12FA07, 0x060CFC03, 0x0A06FC03);
	r1 = D(r1, s[1][0][2], 0xFAFDF400, 0x040A0A04, 0xF5F6F606, 0xFC0602F9);
	r2 = D(r2, s[1][0][2], 0xFF03F902, 0xF307080E, 0x0C050606, 0xFDF5DFF6);
	r3 = D(r3, s[1][0][2], 0xF5F7F7FB, 0x16F50613, 0x020C02F6, 0xFDFF0703);
	r4 = D(r4, s[1][0][2], 0x1EFC0AF8, 0x010FF808, 0xFFFB00FC, 0x15EEFF12);
	r5 = D(r5, s[1][0][2], 0xFCF608FA, 0xEF05EDF1, 0x1D05030B, 0x02FB0804);
	r6 = D(r6, s[1][0][2], 0x03F30C00, 0x13F6CE07, 0x0609F6F6, 0xFAFAFAFA);
	r7 = D(r7, s[1][0][2], 0xF90F0208, 0x04F6F6E7, 0x050D0AFC, 0x020C0204);
	r0 = D(r0, s[1][1][0], 0x03010909, 0x09011200, 0x0FFCFC02, 0xF007FAF4);
	r1 = D(r1, s[1][1][0], 0x08FFEDF8, 0xF3FEDDF7, 0x0BFC0C00, 0xF817F208);
	r2 = D(r2, s[1][1][0], 0x09030003, 0xF41310FA, 0x0605100A, 0xE609040C);
	r3 = D(r3, s[1][1][0], 0x05D307F5, 0xFDFBFE07, 0x031F1208, 0x0BF20701);
	r4 = D(r4, s[1][1][0], 0x02010015, 0xE30E1207, 0xF0FA00F9, 0xEEDFE501);
	r5 = D(r5, s[1][1][0], 0xEFF607F9, 0x04F20F0C, 0x011613F5, 0xFAF2F6FD);
	r6 = D(r6, s[1][1][0], 0x05F106FC, 0x02F206FC, 0x0511FD12, 0xEB0100F9);
	r7 = D(r7, s[1][1][0], 0x1503FEFD, 0xFAF0F601, 0x1805FA14, 0x0EE50009);
	r0 = D(r0, s[1][1][1], 0xED070A0D, 0xFCEAF608, 0xFD110F03, 0x0FFDF505);
	r1 = D(r1, s[1][1][1], 0xEB1BFBF1, 0x080DF706, 0x1A08F9ED, 0xEE19FC03);
	r2 = D(r2, s[1][1][1], 0xFC050AEC, 0xF810F904, 0x23F100F1, 0x2CFE0101);
	r3 = D(r3, s[1][1][1], 0xFBE4E20F, 0x15F7E4E7, 0x060B0201, 0x12FB07F1);
	r4 = D(r4, s[1][1][1], 0x010B1410, 0x01F8F100, 0xFCF916FB, 0x06E1E4F2);
	r5 = D(r5, s[1][1][1], 0x07E00FFC, 0xEA183105, 0xEAF6F71E, 0xF5F0EAE3);
	r6 = D(r6, s[1][1][1], 0x0AD903FD, 0x1DDF1406, 0x0BFA1E28, 0x0AF30D03);
	r7 = D(r7, s[1][1][1], 0x09081B0D, 0xF7D30509, 0xEA0DFD1D, 0x18FDEB06);
	r0 = D(r0, s[1][1][2], 0x1A06F9F0, 0xFE08E8E8, 0x16FCFEFF, 0x10FFF803);
	r1 = D(r1, s[1][1][2], 0xE6EEF5F9, 0x04FF09FD, 0x020606F9, 0xF5F505FB);
	r2 = D(r2, s[1][1][2], 0x0EFEF7FF, 0x02F7FC08, 0xF80DF616, 0xE0E7F8EB);
	r3 = D(r3, s[1][1][2], 0xE9E5FA03, 0xF40EF420, 0xF3160CFB, 0xF814F203);
	r4 = D(r4, s[1][1][2], 0x1D09FAE7, 0x0CFA071A, 0xFE0B08EE, 0xE8FF1106);
	r5 = D(r5, s[1][1][2], 0x0002FDFA, 0x0FEA02F8, 0x110DFBFE, 0xF80B060F);
	r6 = D(r6, s[1][1][2], 0xE121FAD8, 0x161708DE, 0x19FF01F5, 0xF7F403FE);
	r7 = D(r7, s[1][1][2], 0xFE010601, 0xFAF50F04, 0xFC0CFC0F, 0xFA14F001);
	r0 = D(r0, s[1][2][0], 0xFF090007, 0xFB0A051C, 0x0E080708, 0xFB01F302);
	r1 = D(r1, s[1][2][0], 0x02FE0113, 0x09CDF805, 0x0700FD07, 0xFF13FEFE);
	r2 = D(r2, s[1][2][0], 0xFC01F7FA, 0x0404F905, 0xF7FAFCF9, 0x03FF0D04);
	r3 = D(r3, s[1][2][0], 0x12EE0707, 0x0904F712, 0xF403F304, 0x00E3F803);
	r4 = D(r4, s[1][2][0], 0x04EFE60C, 0xF4ED03FE, 0x0BF60307, 0x05E8EF01);
	r5 = D(r5, s[1][2][0], 0xFC030F08, 0xF60403F0, 0x06DE0305, 0xFCFDF810);
	r6 = D(r6, s[1][2][0], 0xF10221FB, 0xF2030A15, 0xF205F4ED, 0x0907F800);
	r7 = D(r7, s[1][2][0], 0xECFFFD10, 0x0B040012, 0xFA09F1F6, 0xFFF200FF);
	r0 = D(r0, s[1][2][1], 0xFA020206, 0xFCF6FA0E, 0x01FF060E, 0x03F1FEFB);
	r1 = D(r1, s[1][2][1], 0x06F40014, 0x0CC6F010, 0x07F7FF00, 0xF706FC0B);
	r2 = D(r2, s[1][2][1], 0xF8FB00FC, 0x0B0B0A0F, 0x08F210FD, 0x13190A01);
	r3 = D(r3, s[1][2][1], 0x080AF9E6, 0x00000FF3, 0xF2EAFC00, 0x0EF3F5F5);
	r4 = D(r4, s[1][2][1], 0xE1010009, 0x02F8F6F7, 0x14EEF8EB, 0x01F4F7F4);
	r5 = D(r5, s[1][2][1], 0x09FCFB06, 0x000CF9DB, 0x0C0E07F7, 0x03020004);
	r6 = D(r6, s[1][2][1], 0xFEEE1B03, 0x13F4F719, 0xFA02F80F, 0x13E5F3FB);
	r7 = D(r7, s[1][2][1], 0xEB07FD04, 0x19070713, 0xFD04E70A, 0xFCF5F300);
	r0 = D(r0, s[1][2][2], 0x09F60800, 0x0FFC0904, 0x03FFFBFF, 0x0704F3FE);
	r1 = D(r1, s[1][2][2], 0xF3020407, 0xF519FFF6, 0x09FEFEF6, 0xF6030314);
	r2 = D(r2, s[1][2][2], 0xFD03FF03, 0x08160608, 0x04FA0101, 0xF3FBFC02);
	r3 = D(r3, s[1][2][2], 0xEFF9F4F7, 0x0515F007, 0xF50E0E03, 0x040D0207);
	r4 = D(r4, s[1][2][2], 0x0D0206FF, 0x0CF4FA05, 0x08F50300, 0x0A01F0E9);
	r5 = D(r5, s[1][2][2], 0xF7FB0201, 0xFAF80FEC, 0x0DECF3FF, 0x07020203);
	r6 = D(r6, s[1][2][2], 0x01020B0B, 0xF3F91211, 0x08FA0EF2, 0xF10BF9FB);
	r7 = D(r7, s[1][2][2], 0xE8070306, 0x090B0F0B, 0x0AF20207, 0x0205F305);
	s[0][0][0] = G[2][xy.y+0][xy.x+0]; s[0][0][1] = G[2][xy.y+0][xy.x+1];
	s[0][0][2] = G[2][xy.y+0][xy.x+2]; s[0][1][0] = G[2][xy.y+1][xy.x+0];
	s[0][1][1] = G[2][xy.y+1][xy.x+1]; s[0][1][2] = G[2][xy.y+1][xy.x+2];
	s[0][2][0] = G[2][xy.y+2][xy.x+0]; s[0][2][1] = G[2][xy.y+2][xy.x+1];
	s[0][2][2] = G[2][xy.y+2][xy.x+2]; s[1][0][0] = G[3][xy.y+0][xy.x+0];
	s[1][0][1] = G[3][xy.y+0][xy.x+1]; s[1][0][2] = G[3][xy.y+0][xy.x+2];
	s[1][1][0] = G[3][xy.y+1][xy.x+0]; s[1][1][1] = G[3][xy.y+1][xy.x+1];
	s[1][1][2] = G[3][xy.y+1][xy.x+2]; s[1][2][0] = G[3][xy.y+2][xy.x+0];
	s[1][2][1] = G[3][xy.y+2][xy.x+1]; s[1][2][2] = G[3][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xEC02FDF6, 0x020A060D, 0xFDF7FCFB, 0x0C062404);
	r1 = D(r1, s[0][0][0], 0xF8FC02FE, 0x2008FBFA, 0x0E06FEF7, 0x0BF31802);
	r2 = D(r2, s[0][0][0], 0xF8010406, 0xE711F7F3, 0x050407F8, 0x020302FC);
	r3 = D(r3, s[0][0][0], 0x01FFEEFF, 0x0BC50002, 0x09F8C3F6, 0xEA1409FF);
	r4 = D(r4, s[0][0][0], 0x2C07FEEF, 0xF9FCFE14, 0x0402FD00, 0x0DA01207);
	r5 = D(r5, s[0][0][0], 0xFFFAFE07, 0xF20AFA06, 0xC2F9F308, 0x09030A0B);
	r6 = D(r6, s[0][0][0], 0xC60200FF, 0x1AE0FC06, 0x09EDDCFE, 0x06080A00);
	r7 = D(r7, s[0][0][0], 0xFEF80004, 0xFBF69900, 0x0BE100F8, 0xFED9F1FA);
	r0 = D(r0, s[0][0][1], 0xE80204FD, 0x0412F5F3, 0xF2F60AFC, 0x06EBFCFD);
	r1 = D(r1, s[0][0][1], 0x17EEF6F2, 0x0CED0CF2, 0x120105F9, 0x05EE1706);
	r2 = D(r2, s[0][0][1], 0x0A060808, 0xF41C1308, 0xEA192509, 0x0F00FE1B);
	r3 = D(r3, s[0][0][1], 0x26E3F707, 0x03DBF907, 0xB804BEF7, 0xF8FA070E);
	r4 = D(r4, s[0][0][1], 0xC6DF0404, 0xFB01FC01, 0xFB061305, 0xF8F807F8);
	r5 = D(r5, s[0][0][1], 0x01000013, 0xF7FFFC0C, 0x170BEF0B, 0xED0301FA);
	r6 = D(r6, s[0][0][1], 0xE51E0B06, 0x05FBCCE5, 0xF503F307, 0x0E0CFCF4);
	r7 = D(r7, s[0][0][1], 0xFEF4F906, 0xFEFBC6FC, 0x0EF4F302, 0xEFF7FD07);
	r0 = D(r0, s[0][0][2], 0xEB03070B, 0xF91D1EEE, 0xF5030100, 0x0307F004);
	r1 = D(r1, s[0][0][2], 0x05101AF9, 0xF31609F5, 0x0A0502F7, 0xE50D04FE);
	r2 = D(r2, s[0][0][2], 0xF3FC020B, 0xF102E9FE, 0xFE02FA03, 0x0DF6FBE6);
	r3 = D(r3, s[0][0][2], 0x06EFF7FF, 0xEEFBF9EB, 0x070D02F9, 0xF002FF01);
	r4 = D(r4, s[0][0][2], 0xDEF507FE, 0xF609FEF6, 0xF90E0407, 0xFE0C01E9);
	r5 = D(r5, s[0][0][2], 0xFA05E908, 0xF6FF17F6, 0x0D1AEE02, 0xFCFE0606);
	r6 = D(r6, s[0][0][2], 0xC20B1C03, 0x00F20A08, 0x0BEDEE06, 0x0DFB0102);
	r7 = D(r7, s[0][0][2], 0x0409FF00, 0xEFFAFC03, 0x02F2F804, 0x1110FCF6);
	r0 = D(r0, s[0][1][0], 0xF7F90F02, 0x11FC0516, 0x05020603, 0xFF0B27FB);
	r1 = D(r1, s[0][1][0], 0x00F4FA07, 0x0103FC0A, 0xFDFD18FB, 0xFA13ECEF);
	r2 = D(r2, s[0][1][0], 0xFDFAF1FB, 0xF809F9F9, 0xFE0B1FED, 0x070E0AF3);
	r3 = D(r3, s[0][1][0], 0x2408E4EE, 0xFEDE16F8, 0x0400D8F9, 0x10DAFD00);
	r4 = D(r4, s[0][1][0], 0x001603F5, 0x0EFF09E7, 0x0FF21E0B, 0xE70C40F5);
	r5 = D(r5, s[0][1][0], 0x06FFE70F, 0x09100106, 0xF6EDEB07, 0xF3FD0815);
	r6 = D(r6, s[0][1][0], 0xDBECE31D, 0xFB06F508, 0xF3FBCCE3, 0xFA16FDFC);
	r7 = D(r7, s[0][1][0], 0xF9F7030B, 0xE502A31C, 0xEA02BCF7, 0x0DDD1AFF);
	r0 = D(r0, s[0][1][1], 0xFAFAFFE5, 0xE6EDFA1B, 0x0901FBFD, 0xFD0306FF);
	r1 = D(r1, s[0][1][1], 0xE5FE030C, 0xF2D9F61C, 0xF4030F12, 0xEF151F0B);
	r2 = D(r2, s[0][1][1], 0x02F707DF, 0x2000060C, 0xFCE1FFEF, 0xEE05CD28);
	r3 = D(r3, s[0][1][1], 0x1403CEF5, 0x07DC19FF, 0x0C07DE13, 0x16F1E407);
	r4 = D(r4, s[0][1][1], 0x05F80B13, 0x060625CD, 0x05E6FADD, 0x05D808F9);
	r5 = D(r5, s[0][1][1], 0x22FC27F4, 0x0CF90AF6, 0x1CE3EB06, 0x00E3F009);
	r6 = D(r6, s[0][1][1], 0xF5FDF4EB, 0xEB0010EC, 0xFC0DE4EE, 0x0EFEFF0C);
	r7 = D(r7, s[0][1][1], 0xE7FE032A, 0x1611B4FE, 0x0A1EE8F2, 0x03DF0218);
	r0 = D(r0, s[0][1][2], 0xF6FF0DE4, 0x1208FFF4, 0xF3050607, 0xF9020413);
	r1 = D(r1, s[0][1][2], 0xF105F1F1, 0xE906FF15, 0x02FEFC0E, 0xE40D06F5);
	r2 = D(r2, s[0][1][2], 0x050404FF, 0xFA17060D, 0x0814FA0F, 0xE51EFDEE);
	r3 = D(r3, s[0][1][2], 0x0A1D0203, 0xEDF7F216, 0x01F3F206, 0xF70DF60D);
	r4 = D(r4, s[0][1][2], 0xF8EF02F7, 0x090201F9, 0xEAF509F8, 0xF0EEF314);
	r5 = D(r5, s[0][1][2], 0xF408ED17, 0x0AFF13D2, 0x03001709, 0x0613F7F5);
	r6 = D(r6, s[0][1][2], 0x29D80EF3, 0x1EDF0903, 0x1201FE0D, 0xF7FDF205);
	r7 = D(r7, s[0][1][2], 0xFB100908, 0xE5FE00F4, 0x220EEC00, 0x0110FE0D);
	r0 = D(r0, s[0][2][0], 0xEA03EC03, 0xEA1AEA06, 0x04FBF500, 0xFC04FA07);
	r1 = D(r1, s[0][2][0], 0xF9F7F4FE, 0x021616FC, 0xFCF706EF, 0x06FE1200);
	r2 = D(r2, s[0][2][0], 0xF901FCFB, 0xF2120AF9, 0x14FC1CF0, 0x05081505);
	r3 = D(r3, s[0][2][0], 0x23050401, 0xFDFFF901, 0xEEF7E50A, 0xEE1706EF);
	r4 = D(r4, s[0][2][0], 0x150A0A01, 0x09F80FF5, 0x1801040C, 0x13F0F204);
	r5 = D(r5, s[0][2][0], 0x0EFCF905, 0x24FA050B, 0xEE16FFEA, 0xFD05E818);
	r6 = D(r6, s[0][2][0], 0x09E6E702, 0x040FEB0B, 0xE401E305, 0x0F11F5FD);
	r7 = D(r7, s[0][2][0], 0xF207FD11, 0xED15F405, 0xF9F5BC0F, 0x14050CF8);
	r0 = D(r0, s[0][2][1], 0x0F0EF913, 0x09F81C04, 0x0408FC0D, 0x0CFE0618);
	r1 = D(r1, s[0][2][1], 0x06F10204, 0xF8BADDE6, 0xFEFB050C, 0x00F0EB01);
	r2 = D(r2, s[0][2][1], 0xF304FAF4, 0xEB07F6FB, 0xF8F21C01, 0x19F7080C);
	r3 = D(r3, s[0][2][1], 0x1CFEEE00, 0x0BDD0604, 0x020D01E7, 0xE1D70AEF);
	r4 = D(r4, s[0][2][1], 0xE5E2FB04, 0x0F02FA01, 0x0DFAFDF6, 0x2701080A);
	r5 = D(r5, s[0][2][1], 0xF10100F4, 0xD4FFFBF6, 0x1502160A, 0x1DF912FF);
	r6 = D(r6, s[0][2][1], 0xEAFCE4F8, 0x3B0FED00, 0x011BE5FA, 0xFE11FF0D);
	r7 = D(r7, s[0][2][1], 0xE9060EFD, 0xFF0ECA04, 0xF2FAE2F3, 0x08050B13);
	r0 = D(r0, s[0][2][2], 0xF20F070A, 0x06FE1005, 0xF901FC0A, 0xFB02F601);
	r1 = D(r1, s[0][2][2], 0x0A11F40E, 0x08DA00EC, 0x0201F7F9, 0xF7EBFD01);
	r2 = D(r2, s[0][2][2], 0x0705020F, 0xF6FDFF02, 0x0802FC0B, 0x0EFBF506);
	r3 = D(r3, s[0][2][2], 0xFC06EAF5, 0x13031100, 0xEFF901F5, 0x01ED0500);
	r4 = D(r4, s[0][2][2], 0xF5B10EF5, 0x060001FE, 0x0EF00603, 0xFAFC03F7);
	r5 = D(r5, s[0][2][2], 0xEF08FE01, 0x1A2118ED, 0x121212E7, 0xFA02F915);
	r6 = D(r6, s[0][2][2], 0x09DE0203, 0x2FD4FFF8, 0xEDEFFD05, 0xFC09040C);
	r7 = D(r7, s[0][2][2], 0xEF06F0FE, 0xF5FAF604, 0x0DDDF9FF, 0x0B0705EF);
	r0 = D(r0, s[1][0][0], 0x0DFDFA00, 0xF2060303, 0x1509060A, 0x1101F502);
	r1 = D(r1, s[1][0][0], 0x0E1308F7, 0x100A010B, 0x0A040204, 0xFB160206);
	r2 = D(r2, s[1][0][0], 0xDDFDFEF8, 0x0C05E502, 0x080BE309, 0x02040E0F);
	r3 = D(r3, s[1][0][0], 0x2B150D07, 0xFFFDFA0B, 0xB4E002E7, 0x05F00EFE);
	r4 = D(r4, s[1][0][0], 0xFA03F9FD, 0x2BF90517, 0xE5FB00FF, 0xF317FAFF);
	r5 = D(r5, s[1][0][0], 0xF8F50F05, 0xFCF90DF9, 0x16E413FE, 0xFCFFF5FA);
	r6 = D(r6, s[1][0][0], 0x27F71AF0, 0x1104EA06, 0xF3FE04FE, 0xF1FD10FA);
	r7 = D(r7, s[1][0][0], 0x0B03FB05, 0xDBD5FEFB, 0x0501EE0E, 0x18051005);
	r0 = D(r0, s[1][0][1], 0x08060D11, 0x1F0A001A, 0x0FFD0509, 0x1401F503);
	r1 = D(r1, s[1][0][1], 0x1DF3EF1B, 0x170E120A, 0xF6F709FE, 0x2E080F07);
	r2 = D(r2, s[1][0][1], 0xEFFE01FA, 0x21F8FBFE, 0xF10D0409, 0x0EE008FD);
	r3 = D(r3, s[1][0][1], 0x3607010D, 0x2E041E00, 0xACF4C310, 0xE4F2FEFC);
	r4 = D(r4, s[1][0][1], 0x08EB23F8, 0x370C12EB, 0x0D0004FC, 0x22210A17);
	r5 = D(r5, s[1][0][1], 0x08050503, 0xECF502F4, 0x26FEF717, 0x09000304);
	r6 = D(r6, s[1][0][1], 0x02FA0904, 0x2E17031B, 0x1D030208, 0x01FB0AF9);
	r7 = D(r7, s[1][0][1], 0x11FA0104, 0xB7DFFAF2, 0x2701F302, 0x3309170C);
	r0 = D(r0, s[1][0][2], 0x100003FB, 0x19050007, 0xF308F903, 0x0209F204);
	r1 = D(r1, s[1][0][2], 0x3410FD03, 0x21060DF5, 0xEDF80CED, 0x15131400);
	r2 = D(r2, s[1][0][2], 0xEB01F7F6, 0xE0ECEE02, 0xF6FFE9ED, 0x23AF12F3);
	r3 = D(r3, s[1][0][2], 0x0403F7FD, 0x232201EF, 0x38F3F8F4, 0xECF90105);
	r4 = D(r4, s[1][0][2], 0x240CF701, 0x2910FF09, 0xFB080800, 0x0F1CF901);
	r5 = D(r5, s[1][0][2], 0x0AFF0604, 0xCEF114FF, 0x03FAD6F3, 0x02F7F8FC);
	r6 = D(r6, s[1][0][2], 0xD7012113, 0xFBFBF20E, 0x00F80905, 0x09FFFFFD);
	r7 = D(r7, s[1][0][2], 0x41F6F202, 0xEDE4F503, 0x36FF0D0B, 0x1A140AF6);
	r0 = D(r0, s[1][1][0], 0x02070F06, 0xFD0E20DD, 0x07E608FB, 0x0C0BFF05);
	r1 = D(r1, s[1][1][0], 0xFB0608F8, 0x08E809FD, 0xF6FC0103, 0xF9FF0A03);
	r2 = D(r2, s[1][1][0], 0xEB0F0405, 0x3C04F4FE, 0x0EF2EF07, 0x0FDF0808);
	r3 = D(r3, s[1][1][0], 0x2611F012, 0x31F7F604, 0xE9DB0BE9, 0x0B1CF20F);
	r4 = D(r4, s[1][1][0], 0x0EF3F1F8, 0x5722F214, 0x03130BFF, 0x08F50509);
	r5 = D(r5, s[1][1][0], 0x08F80E11, 0x0A0B17F5, 0x0301FF0C, 0x000903F2);
	r6 = D(r6, s[1][1][0], 0xF2F92116, 0x22FBFB06, 0x07F10FFC, 0x1BF019F0);
	r7 = D(r7, s[1][1][0], 0xF2F1FCFA, 0xFCC41DFA, 0xDFEA06FE, 0x21CF17F0);
	r0 = D(r0, s[1][1][1], 0x160008F2, 0xFEF4E609, 0x05F3ECFA, 0x2FF6F80F);
	r1 = D(r1, s[1][1][1], 0xD2E5E6F5, 0x07F9EE02, 0xD00F030C, 0x250FF90A);
	r2 = D(r2, s[1][1][1], 0x18032DFE, 0x1E110106, 0x032EF517, 0x13BA0CD5);
	r3 = D(r3, s[1][1][1], 0x0A1CDAFE, 0x27E0120F, 0xAD0EDAEB, 0xE32DF019);
	r4 = D(r4, s[1][1][1], 0x1C291510, 0x4904ED09, 0x19021904, 0x0EFFFA17);
	r5 = D(r5, s[1][1][1], 0xFF19F52B, 0x30021E01, 0xA60FF20C, 0x0B030819);
	r6 = D(r6, s[1][1][1], 0xC735E00F, 0x0509F00B, 0x14F0F4F6, 0x20DA1AED);
	r7 = D(r7, s[1][1][1], 0xD40FE502, 0xCEBEEBEE, 0xC810F0F8, 0x211AFE13);
	r0 = D(r0, s[1][1][2], 0x09FD11FC, 0x27F9E402, 0x150E0603, 0x0A0AF6F6);
	r1 = D(r1, s[1][1][2], 0x37030510, 0xDEF51306, 0xBF041202, 0xFA0B1807);
	r2 = D(r2, s[1][1][2], 0x090904FF, 0x2104010B, 0x0628EAFD, 0xD1C5E5F1);
	r3 = D(r3, s[1][1][2], 0xC7F1E601, 0xD2FEF3F0, 0x230818ED, 0x1111E8FE);
	r4 = D(r4, s[1][1][2], 0x21EDD3ED, 0x3E19F5EE, 0x30090F08, 0x1D0DF602);
	r5 = D(r5, s[1][1][2], 0x2BFF070D, 0x180B1F00, 0xF9E6FFE8, 0xFDFFF801);
	r6 = D(r6, s[1][1][2], 0xF625FC23, 0x8EECD902, 0x02F935FF, 0x1DFF1F01);
	r7 = D(r7, s[1][1][2], 0xF8F3EEF4, 0x1DC715FB, 0xF713FC00, 0xFEF3F8FC);
	r0 = D(r0, s[1][2][0], 0xFAFB04F5, 0xF4FE15F3, 0x211A0005, 0x06F30AFF);
	r1 = D(r1, s[1][2][0], 0x07000803, 0x09F00612, 0x010DF505, 0x1309FAFF);
	r2 = D(r2, s[1][2][0], 0xE602090A, 0x16FAEF0C, 0x140BFB01, 0xDED001ED);
	r3 = D(r3, s[1][2][0], 0x3714F9F3, 0xFEE6F508, 0x101B1C16, 0x0E13F40E);
	r4 = D(r4, s[1][2][0], 0xD7F6F6EF, 0x2B0DF9F9, 0xEBFD0AFD, 0xC104FFED);
	r5 = D(r5, s[1][2][0], 0x0DFC07FE, 0x0E0E11F7, 0x0C1AF0FC, 0xFFFD11F7);
	r6 = D(r6, s[1][2][0], 0x13E8E8FF, 0x270F16EE, 0xFCEC1202, 0xFAFC14FF);
	r7 = D(r7, s[1][2][0], 0x00FAFEF1, 0x20EF0D03, 0xD6FFF70B, 0xF60B0CE9);
	r0 = D(r0, s[1][2][1], 0xD7000408, 0x0CCFD7F4, 0x01040EF3, 0x310107F2);
	r1 = D(r1, s[1][2][1], 0xEC11E50E, 0x430BE31B, 0x0009120A, 0x3507FFFA);
	r2 = D(r2, s[1][2][1], 0x2F0B14FA, 0x20F6F10F, 0x2E11FA03, 0x133AFF18);
	r3 = D(r3, s[1][2][1], 0x1808EA0E, 0x08020CDB, 0x0E17FC10, 0x2C24EC09);
	r4 = D(r4, s[1][2][1], 0x2AE124FD, 0x2A09FFEE, 0xFE20FEFE, 0x0CFCF700);
	r5 = D(r5, s[1][2][1], 0x0429FAFF, 0x060211EC, 0x3A12DAF2, 0xFE06FCF8);
	r6 = D(r6, s[1][2][1], 0xF0EFFBE7, 0xED0AE605, 0x11B8FE0A, 0x251918FB);
	r7 = D(r7, s[1][2][1], 0x08DDF90F, 0x1AEE0FED, 0xF8EDEDF0, 0x410D07FB);
	r0 = D(r0, s[1][2][2], 0xE9F011FA, 0x0204D8E2, 0x03E6FEFB, 0x18EB020C);
	r1 = D(r1, s[1][2][2], 0x0E170CE9, 0xD717E5FD, 0xF3F80605, 0xEF0600F9);
	r2 = D(r2, s[1][2][2], 0x1C090AF0, 0x2F04F708, 0x2BF9E9F6, 0x05F6F9EA);
	r3 = D(r3, s[1][2][2], 0xF2F40109, 0xEFF9F405, 0x0C180701, 0x26F9F3F8);
	r4 = D(r4, s[1][2][2], 0x1D15A0F6, 0x2A07FEF9, 0x090BEAF7, 0x26F9DC15);
	r5 = D(r5, s[1][2][2], 0x0BF60409, 0x02F80CF9, 0x21FF0CF0, 0x080EF4F4);
	r6 = D(r6, s[1][2][2], 0xE30EF4EC, 0x02EB1703, 0xF4F20BFE, 0x24F31906);
	r7 = D(r7, s[1][2][2], 0x130CFFF9, 0x08E30710, 0x23150313, 0xECFAECFD);
	s[0][0][0] = G[4][xy.y+0][xy.x+0]; s[0][0][1] = G[4][xy.y+0][xy.x+1];
	s[0][0][2] = G[4][xy.y+0][xy.x+2]; s[0][1][0] = G[4][xy.y+1][xy.x+0];
	s[0][1][1] = G[4][xy.y+1][xy.x+1]; s[0][1][2] = G[4][xy.y+1][xy.x+2];
	s[0][2][0] = G[4][xy.y+2][xy.x+0]; s[0][2][1] = G[4][xy.y+2][xy.x+1];
	s[0][2][2] = G[4][xy.y+2][xy.x+2]; s[1][0][0] = G[5][xy.y+0][xy.x+0];
	s[1][0][1] = G[5][xy.y+0][xy.x+1]; s[1][0][2] = G[5][xy.y+0][xy.x+2];
	s[1][1][0] = G[5][xy.y+1][xy.x+0]; s[1][1][1] = G[5][xy.y+1][xy.x+1];
	s[1][1][2] = G[5][xy.y+1][xy.x+2]; s[1][2][0] = G[5][xy.y+2][xy.x+0];
	s[1][2][1] = G[5][xy.y+2][xy.x+1]; s[1][2][2] = G[5][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xF5FF63F5, 0xE4D86003, 0x0A080DFB, 0x07FBFFF9);
	r1 = D(r1, s[0][0][0], 0x0D037FFB, 0x0E076EF6, 0x04067FFF, 0x0605E1F8);
	r2 = D(r2, s[0][0][0], 0x08FAC401, 0x041712EE, 0xFE09F8EE, 0xF3F10FFD);
	r3 = D(r3, s[0][0][0], 0xECF7EBF2, 0xFDF2F0F8, 0xF9D31E15, 0xF8EE1B0E);
	r4 = D(r4, s[0][0][0], 0x02157FFE, 0xF5FB13F0, 0xFB006803, 0x01F47FFE);
	r5 = D(r5, s[0][0][0], 0xFEFEE906, 0xFE0C8102, 0xFAE65B0E, 0x08FF4DFC);
	r6 = D(r6, s[0][0][0], 0x0CEC7CFE, 0x05F72AF7, 0x07FEBA04, 0xF607D602);
	r7 = D(r7, s[0][0][0], 0x0F01E0FC, 0x0BFC6A01, 0x050A05FC, 0xFF0078EE);
	r0 = D(r0, s[0][0][1], 0xEFFA2C07, 0xF6EDEAF3, 0x00FF1AFC, 0xFC071603);
	r1 = D(r1, s[0][0][1], 0x050F99FD, 0xFE0DF3FB, 0xF901EE00, 0xF7FE0603);
	r2 = D(r2, s[0][0][1], 0x050FFD0D, 0xF9E4190E, 0xEFEB0D00, 0x11F6D7FC);
	r3 = D(r3, s[0][0][1], 0xF4FEE909, 0x061408F0, 0xF4E608E9, 0xFEE31C09);
	r4 = D(r4, s[0][0][1], 0xFF045AFB, 0x08FDFEF3, 0xF8030D01, 0x0D14DFFE);
	r5 = D(r5, s[0][0][1], 0xEEF732FA, 0x0AE90110, 0xDD15E202, 0xFB04F3F9);
	r6 = D(r6, s[0][0][1], 0xF7F93101, 0xE319F8EE, 0xF8F71B02, 0x0103D10F);
	r7 = D(r7, s[0][0][1], 0x050012F1, 0xFCC7CB17, 0xF801260E, 0x02070F05);
	r0 = D(r0, s[0][0][2], 0xFDFD02FD, 0x02D3FEFD, 0xF506FFFC, 0x06FB03FB);
	r1 = D(r1, s[0][0][2], 0x0123FD02, 0x08070307, 0x0A0A0AFD, 0xFEDF140B);
	r2 = D(r2, s[0][0][2], 0x0D0BFCF8, 0x0C0CF3F9, 0x06F104FB, 0xF2BBF118);
	r3 = D(r3, s[0][0][2], 0x12F9FFF7, 0xF8240CFB, 0xFE01F70A, 0xEE0CF00C);
	r4 = D(r4, s[0][0][2], 0xDF140AF6, 0x0200F6F7, 0xFB010008, 0x02F812FF);
	r5 = D(r5, s[0][0][2], 0x1007FBF4, 0xF5F9F40D, 0xF90B0EE8, 0x03041002);
	r6 = D(r6, s[0][0][2], 0xEAF91A04, 0xF9000FE3, 0x0CF412F8, 0x0302FB0B);
	r7 = D(r7, s[0][0][2], 0xF9FE09FF, 0x07E30004, 0xF8040BFD, 0xFB0BF9FF);
	r0 = D(r0, s[0][1][0], 0x0110A204, 0xF9DE1F1F, 0x05F827F9, 0x02FBF3FE);
	r1 = D(r1, s[0][1][0], 0xF6E738FF, 0xE4EB2707, 0x0B0518FA, 0xFE0DEDF9);
	r2 = D(r2, s[0][1][0], 0x1608FE0E, 0xFAF60DF8, 0x1100E7FE, 0xFE25D000);
	r3 = D(r3, s[0][1][0], 0x07093908, 0x001426EC, 0x15E61D27, 0xF5EC04FC);
	r4 = D(r4, s[0][1][0], 0xE730DBE6, 0xFA1CF5F1, 0x06031CFE, 0x1219E7EF);
	r5 = D(r5, s[0][1][0], 0x05F32506, 0xF8F60008, 0xF1E203F8, 0x03FB1709);
	r6 = D(r6, s[0][1][0], 0x00E8150D, 0x08E70CF9, 0xEBF0980A, 0x03F1D60C);
	r7 = D(r7, s[0][1][0], 0x03F7130F, 0xFFCB4B09, 0x1CF40807, 0x191CE8F6);
	r0 = D(r0, s[0][1][1], 0x091E9703, 0x1BF922FA, 0x060D0AFE, 0x081823F6);
	r1 = D(r1, s[0][1][1], 0xF103E1FB, 0xECD55707, 0xEFFA3710, 0xFEFB330E);
	r2 = D(r2, s[0][1][1], 0x0E1CD609, 0xDFFE020F, 0x06FD02FE, 0xF8090CDF);
	r3 = D(r3, s[0][1][1], 0xFDE60304, 0xFA1404EE, 0xF91016F7, 0xFD170CD4);
	r4 = D(r4, s[0][1][1], 0x120059F8, 0x09FB0FF8, 0x06180C00, 0xFDCE29F3);
	r5 = D(r5, s[0][1][1], 0xFAFA1200, 0xF31C9AF2, 0x0703E616, 0x0BFB1DF4);
	r6 = D(r6, s[0][1][1], 0xFB0C0EF2, 0xFB2A1AE1, 0xF79EE7F3, 0x061B2AFA);
	r7 = D(r7, s[0][1][1], 0xF8250808, 0xECCEFB05, 0xF1FEFBF2, 0x0D022BF4);
	r0 = D(r0, s[0][1][2], 0x0818FC0E, 0xEACEEE06, 0xF90C0700, 0xF90C1AF7);
	r1 = D(r1, s[0][1][2], 0x11EAFDF6, 0xF2030704, 0x12FB0CF9, 0x13DF04FE);
	r2 = D(r2, s[0][1][2], 0x19030A04, 0xFC3822E8, 0x0DFA0FFA, 0xF4E6EDFB);
	r3 = D(r3, s[0][1][2], 0x20CFE9F8, 0xFB270D02, 0xE8E7FAFC, 0x090C04F3);
	r4 = D(r4, s[0][1][2], 0xCEFBCFFA, 0x04190E04, 0xFE110C05, 0xE9F60A0A);
	r5 = D(r5, s[0][1][2], 0x0B1916F8, 0x0C06D90B, 0xF51A07F2, 0x00F5F7F7);
	r6 = D(r6, s[0][1][2], 0xFCEAF0F6, 0x06E217EB, 0xF8DBFFFD, 0xFA160001);
	r7 = D(r7, s[0][1][2], 0xE9F0F006, 0xF5212DFF, 0xF9E9FCF5, 0xF70B090C);
	r0 = D(r0, s[0][2][0], 0xF400FCFD, 0x10EDF40E, 0xFAF90705, 0x001107F3);
	r1 = D(r1, s[0][2][0], 0x0AF30910, 0xEF14E5FB, 0x0307FF06, 0x0CFE01F7);
	r2 = D(r2, s[0][2][0], 0x100C0207, 0x060704F2, 0x020C0001, 0xFE051FFD);
	r3 = D(r3, s[0][2][0], 0x04062F05, 0xF92011EA, 0x0DF1F40C, 0x120EEE0C);
	r4 = D(r4, s[0][2][0], 0x050607F8, 0x0B16F6F0, 0xF7FE0A01, 0xDD200312);
	r5 = D(r5, s[0][2][0], 0x00F3030A, 0xFA050C04, 0xFE15FB08, 0xECFD0F00);
	r6 = D(r6, s[0][2][0], 0x0CEF0103, 0x08FA111B, 0xF8E6F414, 0xF602F2FB);
	r7 = D(r7, s[0][2][0], 0x030002FF, 0x08D5FE06, 0x0DCE2209, 0xF00303FF);
	r0 = D(r0, s[0][2][1], 0xEC0D1209, 0x001314F0, 0x02EC1109, 0xFD0512EE);
	r1 = D(r1, s[0][2][1], 0xFC0F13E9, 0x26C605E2, 0x0D0505F8, 0x1100FFEF);
	r2 = D(r2, s[0][2][1], 0x0F0BFC08, 0x14F203F6, 0x03D60D06, 0xF7DC111D);
	r3 = D(r3, s[0][2][1], 0x03EBE3F9, 0xE80802EA, 0x02EB1315, 0x12C20C11);
	r4 = D(r4, s[0][2][1], 0x1506F5E5, 0x06240003, 0xF70C0FF8, 0xD9160EDB);
	r5 = D(r5, s[0][2][1], 0x020B0EF9, 0xF1F3F81E, 0xFFE21906, 0xF8121DFE);
	r6 = D(r6, s[0][2][1], 0xDFBD0DF5, 0xDF2EF614, 0xE7C3F418, 0x040826FB);
	r7 = D(r7, s[0][2][1], 0x021205FD, 0xF7D70E16, 0x031FF1F7, 0x070C0FFB);
	r0 = D(r0, s[0][2][2], 0xEDF80B02, 0xF7080614, 0xFE0203FA, 0x05FCFDFA);
	r1 = D(r1, s[0][2][2], 0x0F0BFAF9, 0x0EFA060C, 0x03F7FF02, 0x010FF3EB);
	r2 = D(r2, s[0][2][2], 0x0B1706FA, 0x03F7FEF9, 0x0DFA0608, 0x0B14120A);
	r3 = D(r3, s[0][2][2], 0x1BE4FC07, 0xFB09FD00, 0x07F7FF16, 0x1A090812);
	r4 = D(r4, s[0][2][2], 0xEE201025, 0x03FF090C, 0xFC0D11FB, 0x0BED05FC);
	r5 = D(r5, s[0][2][2], 0x04FBF808, 0xFCEEFC08, 0xF10A060A, 0xF3030108);
	r6 = D(r6, s[0][2][2], 0xE20A02F5, 0xE6FD04F3, 0xE9E60A08, 0x080907F4);
	r7 = D(r7, s[0][2][2], 0x05E1F30F, 0xF0F201FE, 0x13C60D0F, 0x04F2F400);
	r0 = D(r0, s[1][0][0], 0x0601FC04, 0xFDEEF6E6, 0x0503FBF6, 0xF8050803);
	r1 = D(r1, s[1][0][0], 0xEB06F305, 0xFC0CFD0A, 0xF60A0206, 0xFDFFF6F7);
	r2 = D(r2, s[1][0][0], 0x010002FA, 0x030506F6, 0xD6FA08F7, 0x0AF2FB09);
	r3 = D(r3, s[1][0][0], 0xE6F2FCEA, 0x13FCF312, 0x1E15F504, 0xE90FF401);
	r4 = D(r4, s[1][0][0], 0xF802F32A, 0xF1FC02F4, 0x0F00FE01, 0xD3F80A03);
	r5 = D(r5, s[1][0][0], 0x0B04FDF3, 0xF705FDF8, 0xFBFDDC02, 0xF8FA02F9);
	r6 = D(r6, s[1][0][0], 0x1BFFFEF0, 0x110007EF, 0x1FFE02EE, 0x040AFD0F);
	r7 = D(r7, s[1][0][0], 0x0604FDF2, 0x03210E15, 0x170202F5, 0xB5F907ED);
	r0 = D(r0, s[1][0][1], 0x01F6F804, 0xFFF11910, 0xFD05070B, 0xFD11FAF9);
	r1 = D(r1, s[1][0][1], 0x0A001837, 0xFEF1FF24, 0x010B0101, 0xE7F7F418);
	r2 = D(r2, s[1][0][1], 0x080702FB, 0x0104FF01, 0xD5EEF9F8, 0x1D040CFE);
	r3 = D(r3, s[1][0][1], 0xECE7FEEE, 0xDFF206E2, 0x400B14F2, 0xEF0D0401);
	r4 = D(r4, s[1][0][1], 0x03FCF8E5, 0xF2FA0202, 0xDDF3FD08, 0x050008D4);
	r5 = D(r5, s[1][0][1], 0xE70BFD05, 0xFD020413, 0xEAE606F7, 0xF306F611);
	r6 = D(r6, s[1][0][1], 0xE9FE0A1E, 0xE1F4F5E5, 0xFB0F00DA, 0x0A0808F9);
	r7 = D(r7, s[1][0][1], 0xFFFB0609, 0x322E040B, 0xF708F403, 0xF5FBFBFC);
	r0 = D(r0, s[1][0][2], 0x020206F9, 0xFE11EC21, 0x0500FCFF, 0x09FC09DF);
	r1 = D(r1, s[1][0][2], 0x0112FE22, 0xFC02F9E9, 0x0000F7E7, 0xF5FE0AFC);
	r2 = D(r2, s[1][0][2], 0xFB03FE01, 0x0EFA11DE, 0xF7FD0AF9, 0xFD13F31B);
	r3 = D(r3, s[1][0][2], 0x020E02C5, 0x04EAF20A, 0x02FF070C, 0xFA020CE3);
	r4 = D(r4, s[1][0][2], 0xE8CBF6C1, 0x08F40706, 0xF3F80010, 0xECF8F0E5);
	r5 = D(r5, s[1][0][2], 0x0D0207E1, 0x00FEFBE7, 0xF0F1FA10, 0xFA010114);
	r6 = D(r6, s[1][0][2], 0xE0E91EFE, 0xE5010006, 0x0C0403EC, 0x0903FB04);
	r7 = D(r7, s[1][0][2], 0x020701FE, 0x120605D3, 0xF70811D8, 0xF6FA07FF);
	r0 = D(r0, s[1][1][0], 0xFFF90706, 0x0DFBFFF9, 0x0D0DEEEF, 0xFAF607FC);
	r1 = D(r1, s[1][1][0], 0x01F3F8EA, 0xE10DEC02, 0xF1F201FD, 0x0B0B0012);
	r2 = D(r2, s[1][1][0], 0xEFF711FF, 0xFD0103FE, 0xEB04FD0C, 0xDB120112);
	r3 = D(r3, s[1][1][0], 0xF00D02FA, 0xE004150C, 0x20F1F803, 0xDCE702E6);
	r4 = D(r4, s[1][1][0], 0xF9E71005, 0xF6051716, 0xF5F9FA08, 0xE416ECFC);
	r5 = D(r5, s[1][1][0], 0x1B0BF9FC, 0xF8FC1200, 0x0209EF0E, 0x13FAF7F3);
	r6 = D(r6, s[1][1][0], 0x25F60E11, 0x1AF8F1FF, 0x06170720, 0x050A01FE);
	r7 = D(r7, s[1][1][0], 0x0E03F3F7, 0x17FB01FB, 0x010AF0EC, 0xE502E602);
	r0 = D(r0, s[1][1][1], 0x12031F13, 0xE101F715, 0xF3000515, 0xF70A04F3);
	r1 = D(r1, s[1][1][1], 0xED0BF501, 0xF915E706, 0xE1FF050A, 0x03E8051C);
	r2 = D(r2, s[1][1][1], 0x0CF817F1, 0x12F8FCFB, 0xD8F202F2, 0xF31300E1);
	r3 = D(r3, s[1][1][1], 0xF619FFC7, 0xE704E2FB, 0x13E81033, 0xE7EA03EA);
	r4 = D(r4, s[1][1][1], 0x120CDCF9, 0xF70DF9F1, 0xE5FCFDFD, 0xFF1BF113);
	r5 = D(r5, s[1][1][1], 0xF0FE03FF, 0xFDF9201E, 0xEAE0DC07, 0x02F4042A);
	r6 = D(r6, s[1][1][1], 0xF7F8F71B, 0xF60A06FC, 0x161305E7, 0xF707F7F2);
	r7 = D(r7, s[1][1][1], 0x0AFEF20D, 0x22C21611, 0xFE06F4E7, 0xF32BE50C);
	r0 = D(r0, s[1][1][2], 0x00040206, 0xEAFF21FA, 0x0107F8FA, 0x06010FE6);
	r1 = D(r1, s[1][1][2], 0xE8160B08, 0xFD1309E3, 0xEF0602FE, 0x0600F901);
	r2 = D(r2, s[1][1][2], 0xF5060309, 0x0BE9EDEA, 0xF0FAFDFF, 0x0FE31C25);
	r3 = D(r3, s[1][1][2], 0x0819FC97, 0xF905F904, 0x08E1F909, 0xECF4F1FF);
	r4 = D(r4, s[1][1][2], 0x0EECF9F8, 0xF501FD0D, 0xF8FDFF1B, 0x07FF02CA);
	r5 = D(r5, s[1][1][2], 0xF00E03F8, 0x10F4F60E, 0x0508F80F, 0xFB00FF0F);
	r6 = D(r6, s[1][1][2], 0xDADDF20C, 0xEC0BFEE9, 0x01F90AF8, 0x030E0EF5);
	r7 = D(r7, s[1][1][2], 0x0602FF0B, 0x0710F9E6, 0x150CFBAE, 0x06FC03FE);
	r0 = D(r0, s[1][2][0], 0xFAF9ED05, 0x0BEE13F2, 0x06F5FE09, 0x070A00FB);
	r1 = D(r1, s[1][2][0], 0xFB01F40A, 0xF3EF0902, 0x0300FA01, 0xE9EB09F6);
	r2 = D(r2, s[1][2][0], 0xEEFFEBFA, 0x0607F9F2, 0x09FE0103, 0x20FD11F9);
	r3 = D(r3, s[1][2][0], 0x0609170C, 0xFC011708, 0x0800F3FC, 0x03030D05);
	r4 = D(r4, s[1][2][0], 0x07051C0C, 0xF802120D, 0x0C070601, 0x090D1E0C);
	r5 = D(r5, s[1][2][0], 0x09EBFFFD, 0xF3F50605, 0xFA061110, 0x16FC0104);
	r6 = D(r6, s[1][2][0], 0x070DFE01, 0x16E81C04, 0x10F80309, 0x1203FDFA);
	r7 = D(r7, s[1][2][0], 0xFFFAF2FE, 0x0212F8FC, 0xF2E9EFF6, 0xFBFD080A);
	r0 = D(r0, s[1][2][1], 0x00FEFF03, 0x0807FB03, 0x0BFD0309, 0x0214030B);
	r1 = D(r1, s[1][2][1], 0xF2F70302, 0xC0EAF3DE, 0xFBF4FB01, 0xF7F7FCFB);
	r2 = D(r2, s[1][2][1], 0xF0F70300, 0x0007FEEB, 0xF4F6FBFD, 0xEBCAEFF8);
	r3 = D(r3, s[1][2][1], 0xFF1D0400, 0x02FEEF16, 0xFBFB0712, 0xFB060AEE);
	r4 = D(r4, s[1][2][1], 0x0D16DE14, 0x0C070A08, 0xFF08F219, 0xFCF7F908);
	r5 = D(r5, s[1][2][1], 0x02F7FFFE, 0x0DF30818, 0x0DFEDF12, 0x12010C0E);
	r6 = D(r6, s[1][2][1], 0x10F8EA17, 0xFD091B1B, 0xEFF105D4, 0xF9120407);
	r7 = D(r7, s[1][2][1], 0x0311FF00, 0x09FEFDFD, 0xF80FF70D, 0xF109EB0C);
	r0 = D(r0, s[1][2][2], 0x05FEF9F2, 0xFAFFE7FF, 0x0204F611, 0x03060004);
	r1 = D(r1, s[1][2][2], 0x05F605ED, 0xDBFFFBFD, 0xFA1700F8, 0xF6F50805);
	r2 = D(r2, s[1][2][2], 0xF8FF08F7, 0x0B060AF5, 0xFFFAFA00, 0x0C03FA0E);
	r3 = D(r3, s[1][2][2], 0xF8F41FF8, 0xF4F80006, 0x05F3FDFC, 0x07F9FAFC);
	r4 = D(r4, s[1][2][2], 0xF9FDF82B, 0xF609FB0F, 0xFF0DF413, 0x00200B01);
	r5 = D(r5, s[1][2][2], 0x070300F3, 0x01E5F516, 0xF4F80D18, 0x00FBF6F9);
	r6 = D(r6, s[1][2][2], 0xFA0607DC, 0x1E05D61E, 0x09F2F9FD, 0xFF0D06EE);
	r7 = D(r7, s[1][2][2], 0x00F407F1, 0x0F0805F4, 0xFFFB13FC, 0x0803FF06);
	s[0][0][0] = G[6][xy.y+0][xy.x+0]; s[0][0][1] = G[6][xy.y+0][xy.x+1];
	s[0][0][2] = G[6][xy.y+0][xy.x+2]; s[0][1][0] = G[6][xy.y+1][xy.x+0];
	s[0][1][1] = G[6][xy.y+1][xy.x+1]; s[0][1][2] = G[6][xy.y+1][xy.x+2];
	s[0][2][0] = G[6][xy.y+2][xy.x+0]; s[0][2][1] = G[6][xy.y+2][xy.x+1];
	s[0][2][2] = G[6][xy.y+2][xy.x+2]; s[1][0][0] = G[7][xy.y+0][xy.x+0];
	s[1][0][1] = G[7][xy.y+0][xy.x+1]; s[1][0][2] = G[7][xy.y+0][xy.x+2];
	s[1][1][0] = G[7][xy.y+1][xy.x+0]; s[1][1][1] = G[7][xy.y+1][xy.x+1];
	s[1][1][2] = G[7][xy.y+1][xy.x+2]; s[1][2][0] = G[7][xy.y+2][xy.x+0];
	s[1][2][1] = G[7][xy.y+2][xy.x+1]; s[1][2][2] = G[7][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xF70FFA08, 0x0903F90A, 0x0900F707, 0x10030408);
	r1 = D(r1, s[0][0][0], 0x0E09EF01, 0x110704FE, 0x0EFEF91A, 0x010F0900);
	r2 = D(r2, s[0][0][0], 0xF5070B0C, 0xE00712F1, 0xFC190306, 0x1B190308);
	r3 = D(r3, s[0][0][0], 0x040C040D, 0x0BEC0309, 0x7FFBF0F8, 0xE9FA0206);
	r4 = D(r4, s[0][0][0], 0xE107FBEC, 0x0CF8F606, 0xFFFDFC05, 0x02F2EE0E);
	r5 = D(r5, s[0][0][0], 0x12F205FF, 0xF2FB0005, 0xE1E912FA, 0xFC030400);
	r6 = D(r6, s[0][0][0], 0x31F71C0A, 0x040CFAF6, 0xFBFEFE01, 0xF703000C);
	r7 = D(r7, s[0][0][0], 0xEDF600FB, 0xD1FEFAFB, 0x0DF90804, 0xFCEE0014);
	r0 = D(r0, s[0][0][1], 0x0E01FAFD, 0x14040004, 0xEEFB0BFB, 0xFCF20702);
	r1 = D(r1, s[0][0][1], 0x0CFC10FD, 0x03FF1104, 0xFD0F0109, 0x0204F722);
	r2 = D(r2, s[0][0][1], 0xF7030808, 0xCC03F106, 0x0415D0FF, 0x16EF0307);
	r3 = D(r3, s[0][0][1], 0xF00CF812, 0xED09200E, 0xD60D0EEE, 0x1914F805);
	r4 = D(r4, s[0][0][1], 0x07F21400, 0x16F505F5, 0xFE0AFE02, 0x040D0E14);
	r5 = D(r5, s[0][0][1], 0x0606F60A, 0xE4010AFE, 0x08131B11, 0xFEFEF018);
	r6 = D(r6, s[0][0][1], 0xFB2309FB, 0xA51DEC08, 0xF80E07FE, 0xF5010501);
	r7 = D(r7, s[0][0][1], 0x0EFCF4F9, 0xF401F60D, 0xF6F2FA19, 0x0CEE15F7);
	r0 = D(r0, s[0][0][2], 0x0E01F800, 0xFB140F05, 0x0602FCF7, 0xFE07FFF3);
	r1 = D(r1, s[0][0][2], 0xEFF70DFD, 0xFD0102FC, 0xF1F6ED17, 0xED0FEC0E);
	r2 = D(r2, s[0][0][2], 0xFE02EFFE, 0x020CFD06, 0x03FDC506, 0xE3FC1CD7);
	r3 = D(r3, s[0][0][2], 0xDB03F904, 0xFEF103FD, 0xFCFE15E8, 0xF60CE107);
	r4 = D(r4, s[0][0][2], 0x150CE8EF, 0x12FEFA05, 0x04FEF8FD, 0xF4FC21E5);
	r5 = D(r5, s[0][0][2], 0xFE00F2FD, 0xF6100114, 0x14E8FE0F, 0x0604FC13);
	r6 = D(r6, s[0][0][2], 0xEEFBFE03, 0xEDFC8C00, 0x15F4FC19, 0xEE0307FC);
	r7 = D(r7, s[0][0][2], 0x06FC0BFA, 0x0DFF0204, 0x10FDFF0F, 0xEA0AFB06);
	r0 = D(r0, s[0][1][0], 0x19F703F6, 0xBDF7F60F, 0x07F6F403, 0x121A09F1);
	r1 = D(r1, s[0][1][0], 0x05F7F8F1, 0xC9FD0A03, 0x0A06F922, 0x0C0D0219);
	r2 = D(r2, s[0][1][0], 0x21020CFB, 0xEB0F01F8, 0xF5F7EDED, 0xDA0706ED);
	r3 = D(r3, s[0][1][0], 0x1725F814, 0xE70AF5FB, 0xCB13F128, 0xCE050304);
	r4 = D(r4, s[0][1][0], 0x81F5120A, 0x2F07000C, 0x04F50004, 0x9E030D03);
	r5 = D(r5, s[0][1][0], 0x05FEF80F, 0x1AF4F919, 0xC3F5F50F, 0xEE04F410);
	r6 = D(r6, s[0][1][0], 0xE9EFF40C, 0x0A04FDF9, 0x11FDDC1D, 0x0BF906F7);
	r7 = D(r7, s[0][1][0], 0xC7F505FD, 0xF4FFF3F6, 0x0801FCF5, 0xE7FEE212);
	r0 = D(r0, s[0][1][1], 0x15030A07, 0x04F9F9E6, 0xE802FCF8, 0x04F2FFFF);
	r1 = D(r1, s[0][1][1], 0x151002EF, 0x2A01CB0E, 0x07F4063E, 0xF5FC162D);
	r2 = D(r2, s[0][1][1], 0x07FA06F9, 0xDD040F22, 0x16F20A04, 0xFADCD316);
	r3 = D(r3, s[0][1][1], 0xB70DE808, 0xF7F5F800, 0x10FB0727, 0x17E504F9);
	r4 = D(r4, s[0][1][1], 0x01DDF30C, 0x05050A24, 0x12F7FB02, 0xDEE6ECBB);
	r5 = D(r5, s[0][1][1], 0xF612FFFA, 0x11060CF0, 0x0502F2ED, 0x0A020747);
	r6 = D(r6, s[0][1][1], 0x061F1D19, 0xB30C1F17, 0xDCFFF3FF, 0xF802FA11);
	r7 = D(r7, s[0][1][1], 0x04F4122D, 0x00080603, 0x130204FB, 0x1AF5FBF7);
	r0 = D(r0, s[0][1][2], 0xFB0BFFE9, 0x0901E20C, 0xFBFCFBE8, 0x01F6F0EE);
	r1 = D(r1, s[0][1][2], 0xF7FAFAFC, 0xF30FF60A, 0xF3F50412, 0xFE01FF27);
	r2 = D(r2, s[0][1][2], 0x03FA1208, 0x07F41F24, 0x0AF8F5F9, 0x0E1A0840);
	r3 = D(r3, s[0][1][2], 0xEDF00DF5, 0x14F5F9FC, 0x0E0D02FF, 0xFAFE050F);
	r4 = D(r4, s[0][1][2], 0x08F8FECE, 0x1BF3F701, 0x0509F917, 0xF5DBE619);
	r5 = D(r5, s[0][1][2], 0xF4F1EA13, 0xEA111DE4, 0x0D030322, 0xF7FB051B);
	r6 = D(r6, s[0][1][2], 0x1AE512FA, 0xFCF2F0B7, 0xE70511FA, 0x020300FB);
	r7 = D(r7, s[0][1][2], 0xF801FB0C, 0x11EA05D4, 0xF3E0F109, 0xFD00E915);
	r0 = D(r0, s[0][2][0], 0xF80904F6, 0xE20ACDFA, 0xFD04FE0E, 0x08F80902);
	r1 = D(r1, s[0][2][0], 0x0D07E1E4, 0x0AE7F4F4, 0x19050717, 0xEDEC0A00);
	r2 = D(r2, s[0][2][0], 0x16FB0608, 0x0CFB0EFA, 0x0EF10AF5, 0xEFF40716);
	r3 = D(r3, s[0][2][0], 0xEFE9DF17, 0xE8111DED, 0x2EF5DFFA, 0x1F02F9EC);
	r4 = D(r4, s[0][2][0], 0xF3F415E3, 0x02FC00F7, 0x0DFC0101, 0xE7BBE2FF);
	r5 = D(r5, s[0][2][0], 0xFCF9010A, 0xFCFF0014, 0x2EF90B08, 0x19FCF40B);
	r6 = D(r6, s[0][2][0], 0x0404F3F3, 0x2405E30A, 0xF5F614FD, 0x0E020A11);
	r7 = D(r7, s[0][2][0], 0x0500F802, 0x0FF8EF0A, 0x03E20704, 0x01EEF201);
	r0 = D(r0, s[0][2][1], 0xF9080CEE, 0xFAF2DD09, 0xF103F811, 0xFBEE02ED);
	r1 = D(r1, s[0][2][1], 0xF40C010A, 0x1008EEDC, 0x11020653, 0xFF03FB10);
	r2 = D(r2, s[0][2][1], 0xFF0D0008, 0x14FCED02, 0xFB00EFFE, 0x02081B0B);
	r3 = D(r3, s[0][2][1], 0xF1ECF9FD, 0xEEFDF8FC, 0xF0FE0806, 0xF313E3EA);
	r4 = D(r4, s[0][2][1], 0x0DF2C910, 0x080EE2D7, 0xFF00F0FE, 0x0AB02D0D);
	r5 = D(r5, s[0][2][1], 0xFA0E0722, 0xFE180F14, 0x07EDF804, 0xF902023E);
	r6 = D(r6, s[0][2][1], 0xEA14F018, 0xFB1E0D0B, 0xDBE10DDB, 0x0409F116);
	r7 = D(r7, s[0][2][1], 0xF8ECFC09, 0x1DEBF62E, 0x0DF51CE0, 0x00D9F9EF);
	r0 = D(r0, s[0][2][2], 0xFC02FDEE, 0x12FF00FE, 0xF7F106FD, 0xF4F2FFFA);
	r1 = D(r1, s[0][2][2], 0x10130702, 0xFEDDF6FF, 0xEF04FB25, 0x0CED0810);
	r2 = D(r2, s[0][2][2], 0xF4070904, 0x05EF09F4, 0xFE03F6FB, 0xEBFBF9D9);
	r3 = D(r3, s[0][2][2], 0xE91E0CE0, 0x05FC39FA, 0x0D1C0201, 0xFB03FC06);
	r4 = D(r4, s[0][2][2], 0x0512071D, 0x05FEF1E6, 0x07F8FC05, 0xFF0D0703);
	r5 = D(r5, s[0][2][2], 0xFBFDFF12, 0xF90A0704, 0xFBF00006, 0xFEFF022A);
	r6 = D(r6, s[0][2][2], 0x02F6042F, 0xF3CCE704, 0x0516FF0F, 0xEA01060B);
	r7 = D(r7, s[0][2][2], 0xFB24FB08, 0xFC05EFFC, 0x0A0FFF01, 0xFBF909FF);
	r0 = D(r0, s[1][0][0], 0x08FAFEFE, 0xFAE8FFFB, 0x040CFAF3, 0xF3080501);
	r1 = D(r1, s[1][0][0], 0xFAFDE3EE, 0xFEF10DFC, 0x0CFDFD07, 0xF6F7FC04);
	r2 = D(r2, s[1][0][0], 0xF71210FC, 0xFA10E805, 0xFFFEF70E, 0x0D03FFFD);
	r3 = D(r3, s[1][0][0], 0xEDF8F40F, 0x05FF0E0A, 0xEEDAFAF0, 0x0702E20A);
	r4 = D(r4, s[1][0][0], 0xF5F423FE, 0xFCF60BF5, 0xFDFE0BFD, 0xF40610F8);
	r5 = D(r5, s[1][0][0], 0x08FBFE07, 0x0CFFF004, 0x1EF4BAF6, 0xFBFBF1FC);
	r6 = D(r6, s[1][0][0], 0xEDFBB6F3, 0x05F2EAE5, 0xF5F81504, 0x0FFE0C09);
	r7 = D(r7, s[1][0][0], 0x0006EAFA, 0xF50DFDFB, 0xFAEF0DE9, 0x2104F7FA);
	r0 = D(r0, s[1][0][1], 0x080900FD, 0x10FFF807, 0xF9010000, 0x0F02FC0C);
	r1 = D(r1, s[1][0][1], 0xFD030708, 0xEF0001F6, 0xF9F5080A, 0x13E2FF0E);
	r2 = D(r2, s[1][0][1], 0xFE040504, 0x0108F6F6, 0x06E2F81B, 0x110C150A);
	r3 = D(r3, s[1][0][1], 0x1AFBF516, 0x1316ECF6, 0x01F605FD, 0x0EF507F8);
	r4 = D(r4, s[1][0][1], 0x0507D905, 0x06F803FB, 0x010E03FF, 0x110BE6EA);
	r5 = D(r5, s[1][0][1], 0xFFE80216, 0x01031100, 0x1111DD09, 0x040102F7);
	r6 = D(r6, s[1][0][1], 0x07E6D117, 0x14EEEA12, 0xE80BF301, 0x0B0EFFF6);
	r7 = D(r7, s[1][0][1], 0x07F9FA0B, 0xF7FB15EE, 0x0DF6FC0C, 0x0B050104);
	r0 = D(r0, s[1][0][2], 0xEA040B14, 0x0307010F, 0x01FD0308, 0x0BFA02F3);
	r1 = D(r1, s[1][0][2], 0xFBFD08FB, 0x0AFE020B, 0x06F90610, 0x03FBED13);
	r2 = D(r2, s[1][0][2], 0xFCF60CED, 0x04FEF7E7, 0x050B1107, 0x0600FBE9);
	r3 = D(r3, s[1][0][2], 0x03FD0FED, 0x06F9F317, 0x1000F5F5, 0x08F5F500);
	r4 = D(r4, s[1][0][2], 0x07FDE020, 0xF3EF060F, 0xFC040009, 0x17EEF317);
	r5 = D(r5, s[1][0][2], 0x090DFB05, 0xFF09FE0E, 0x00F2FB09, 0x0507FCFC);
	r6 = D(r6, s[1][0][2], 0x090AF507, 0x0004F0ED, 0x04FD111C, 0xFD06F7F8);
	r7 = D(r7, s[1][0][2], 0x0CFCF9FE, 0xFE00F2F1, 0x040214FD, 0x03F7FB01);
	r0 = D(r0, s[1][1][0], 0x07F712FE, 0xF5F0F40D, 0x02FAE709, 0xF8050DE6);
	r1 = D(r1, s[1][1][0], 0x13FBD3FF, 0x12FFC6E1, 0xFE0402FD, 0x02F7FFFB);
	r2 = D(r2, s[1][1][0], 0x000E1AFF, 0x14FAFF0B, 0xF9050AEA, 0x00F50014);
	r3 = D(r3, s[1][1][0], 0xF0FBFE04, 0x0311D7E2, 0x0C09EBEB, 0xF2FEE1FA);
	r4 = D(r4, s[1][1][0], 0xFBF600F9, 0xF90A0306, 0x02FCF4FA, 0xFF06F7EB);
	r5 = D(r5, s[1][1][0], 0x0804F106, 0xFC060914, 0xEDEAD8E9, 0xF3F9FFF6);
	r6 = D(r6, s[1][1][0], 0xE9F8D9F3, 0x09E9D6F0, 0x10FF0F0A, 0x08FD0D0B);
	r7 = D(r7, s[1][1][0], 0xF2FAF6F5, 0x01F602F7, 0x0C10F702, 0xF605E2FB);
	r0 = D(r0, s[1][1][1], 0x0F150EFB, 0x0F14F8E3, 0xFCF805F8, 0xED090D0C);
	r1 = D(r1, s[1][1][1], 0xFB16E614, 0x0701FA17, 0xF7F20709, 0xF903EDF9);
	r2 = D(r2, s[1][1][1], 0x0F230306, 0xF2ECFC1C, 0xE80B0805, 0x17DAB0F6);
	r3 = D(r3, s[1][1][1], 0xF6E4F2F2, 0x1B1BC411, 0xEB16D5D9, 0xE2F9E91E);
	r4 = D(r4, s[1][1][1], 0x08ECEA1A, 0x18F80202, 0xF213FA03, 0xF5F3CD0A);
	r5 = D(r5, s[1][1][1], 0xEC0803F9, 0xF5081202, 0x1D17FAF7, 0xF31B08EC);
	r6 = D(r6, s[1][1][1], 0x11E9CFF6, 0xDB15DDEF, 0x1AF60BEF, 0x08F20415);
	r7 = D(r7, s[1][1][1], 0x05F8EEEF, 0xE708FC00, 0xF2EF2508, 0xFFE4DF10);
	r0 = D(r0, s[1][1][2], 0x0DE1FF04, 0xFA15FDDF, 0xFCF7FEFA, 0x00E10A03);
	r1 = D(r1, s[1][1][2], 0x0DE8FAF2, 0xF507F510, 0xF905FD16, 0x0A20FAFF);
	r2 = D(r2, s[1][1][2], 0x17E9FFFD, 0x00FDFE0E, 0xEEFA0717, 0x16FC0CFA);
	r3 = D(r3, s[1][1][2], 0xF2F9FBF9, 0xF2E70708, 0x0B1D0404, 0xFC10051C);
	r4 = D(r4, s[1][1][2], 0xFB1AEFCE, 0xFCFC0D03, 0xFBF40514, 0xE1FAEC1B);
	r5 = D(r5, s[1][1][2], 0x0BF1FE0C, 0x0B02F706, 0x01F61E0B, 0x0612FB05);
	r6 = D(r6, s[1][1][2], 0x1012F70C, 0xEE2AF2FD, 0x10F8EEEE, 0x0FFEFDE8);
	r7 = D(r7, s[1][1][2], 0x0D1DF7FA, 0x20030AF4, 0xEB07F606, 0xFE04ED04);
	r0 = D(r0, s[1][2][0], 0x10F4FCF4, 0xF7012AFE, 0xF702F800, 0xFD030905);
	r1 = D(r1, s[1][2][0], 0x070A130A, 0x1003F8FA, 0x000D03EC, 0xFDFE0213);
	r2 = D(r2, s[1][2][0], 0xF5F70AFA, 0xFC08F30C, 0xF7140CF9, 0x0602EFF1);
	r3 = D(r3, s[1][2][0], 0xF2040A03, 0xFDFD01EE, 0x0F0516F9, 0x0511FDFB);
	r4 = D(r4, s[1][2][0], 0x00130D0E, 0xFD000910, 0x09F810F0, 0x0A090B01);
	r5 = D(r5, s[1][2][0], 0x0B05FD01, 0xFEEE18F9, 0xF00900E3, 0x0FF40200);
	r6 = D(r6, s[1][2][0], 0xF611EFEC, 0x19071C00, 0x1201DFF6, 0x0DF70D08);
	r7 = D(r7, s[1][2][0], 0x0AF70A02, 0xF6FAF8F0, 0xE70EDFF1, 0xF8FF19F2);
	r0 = D(r0, s[1][2][1], 0x21F0F5F0, 0x06FFFD02, 0xFFFCFD00, 0xFAEFF402);
	r1 = D(r1, s[1][2][1], 0xF301F6F1, 0xF901C4F3, 0x0BFB0405, 0xFEFAF10E);
	r2 = D(r2, s[1][2][1], 0xFD0819EB, 0xE902FC09, 0xDF072CE4, 0xA90C1AF0);
	r3 = D(r3, s[1][2][1], 0xFF121105, 0xF5E0D90F, 0x0A1A0DF4, 0xF10F04F7);
	r4 = D(r4, s[1][2][1], 0x0B10E90A, 0xF4050400, 0xF802F7ED, 0x0006ABFB);
	r5 = D(r5, s[1][2][1], 0x0A0AF600, 0xF70513F4, 0x10160A0C, 0xFD0400E6);
	r6 = D(r6, s[1][2][1], 0xE605D900, 0x09F3FCFE, 0x170503F0, 0x12F5050B);
	r7 = D(r7, s[1][2][1], 0x0F02FFFC, 0x1108F002, 0xF411F9F6, 0x010BFBFA);
	r0 = D(r0, s[1][2][2], 0x0BF80501, 0xDF0A0503, 0xFF030501, 0x0D0903FB);
	r1 = D(r1, s[1][2][2], 0xFB07FC06, 0x0401FF16, 0xEEFC0903, 0x0A070306);
	r2 = D(r2, s[1][2][2], 0x0AF1FFFA, 0x080EF2F3, 0xF7FF0DFF, 0x270E0812);
	r3 = D(r3, s[1][2][2], 0xFF01FCEB, 0x0F04E008, 0x040509F7, 0x02F816FF);
	r4 = D(r4, s[1][2][2], 0xED0CE9D2, 0xFC0B040B, 0xF90FFD08, 0x02FAAEF3);
	r5 = D(r5, s[1][2][2], 0xFEFAFE08, 0x09FA1204, 0xEC0EFDED, 0xF90706F0);
	r6 = D(r6, s[1][2][2], 0xE513C6F8, 0x0DE9A803, 0x1BE011F7, 0x0FF7ED04);
	r7 = D(r7, s[1][2][2], 0xFEF701E7, 0x1711F1FE, 0x0815F9F5, 0x0604F8FE);
	vec4 f0 = vec4(r0) * 6.20001240e-05;
	f0 += vec4(1.580e-02, -1.485e-02, -3.178e-03, 1.859e-02);
	f0 = max(f0, vec4(0.0));
	imageStore(out_image, opos + ivec2(0, 0), f0);
	vec4 f1 = vec4(r1) * 6.20001240e-05;
	f1 += vec4(-1.154e-02, -3.730e-02, 7.481e-03, -9.058e-03);
	f1 = max(f1, vec4(0.0));
	imageStore(out_image, opos + ivec2(1, 0), f1);
	vec4 f2 = vec4(r2) * 6.20001240e-05;
	f2 += vec4(-7.494e-03, -4.023e-03, -1.540e-03, -9.010e-03);
	f2 = max(f2, vec4(0.0));
	imageStore(out_image, opos + ivec2(0, 1), f2);
	vec4 f3 = vec4(r3) * 6.20001240e-05;
	f3 += vec4(-6.159e-03, -2.038e-03, 6.657e-03, -5.807e-03);
	f3 = max(f3, vec4(0.0));
	imageStore(out_image, opos + ivec2(1, 1), f3);
	vec4 f4 = vec4(r4) * 6.20001240e-05;
	f4 += vec4(-1.969e-02, -8.184e-02, -4.146e-03, -1.224e-02);
	f4 = max(f4, vec4(0.0));
	imageStore(out_image, opos + ivec2(2, 0), f4);
	vec4 f5 = vec4(r5) * 6.20001240e-05;
	f5 += vec4(7.215e-04, -1.503e-02, -1.653e-02, 9.828e-03);
	f5 = max(f5, vec4(0.0));
	imageStore(out_image, opos + ivec2(3, 0), f5);
	vec4 f6 = vec4(r6) * 6.20001240e-05;
	f6 += vec4(1.588e-03, -1.028e-02, 1.203e-02, -4.189e-02);
	f6 = max(f6, vec4(0.0));
	imageStore(out_image, opos + ivec2(2, 1), f6);
	vec4 f7 = vec4(r7) * 6.20001240e-05;
	f7 += vec4(-7.313e-03, 8.205e-03, 8.219e-03, -8.073e-03);
	f7 = max(f7, vec4(0.0));
	imageStore(out_image, opos + ivec2(3, 1), f7);
}

//!DESC CuNNy-4x32-BILINEAR-TEST-conv4
//!HOOK LUMA
//!COMPUTE 32 16 8 8
//!BIND conv3
//!BIND LUMA
//!SAVE conv4
//!WIDTH LUMA.w 4 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_spirv_intrinsics : require
#extension GL_EXT_control_flow_attributes : require
spirv_instruction (extensions = ["SPV_KHR_integer_dot_product"], capabilities = [6019, 6018], id = 4450)
int dp4(int a, int b, spirv_literal int fmt);
#define D(r, s, a, b, c, d) ivec4(r.x + dp4(s, a, 0), r.y + dp4(s, b, 0), r.z + dp4(s, c, 0), r.w + dp4(s, d, 0))
shared int G[8][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(4, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	[[unroll]] for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		[[unroll]] for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			vec4 r, g, b, a;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(4, 2) + ivec2(1, 1)) * conv3_pt;
			r = conv3_gather(p, 0);
			g = conv3_gather(p, 1);
			b = conv3_gather(p, 2);
			a = conv3_gather(p, 3);
			vec4 v0 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v1 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v2 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v3 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(4, 2) + ivec2(3, 1)) * conv3_pt;
			r = conv3_gather(p, 0);
			g = conv3_gather(p, 1);
			b = conv3_gather(p, 2);
			a = conv3_gather(p, 3);
			vec4 v4 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v5 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v6 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v7 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			G[0][ay][ax] = int(packSnorm4x8(v0));
			G[1][ay][ax] = int(packSnorm4x8(v1));
			G[2][ay][ax] = int(packSnorm4x8(v2));
			G[3][ay][ax] = int(packSnorm4x8(v3));
			G[4][ay][ax] = int(packSnorm4x8(v4));
			G[5][ay][ax] = int(packSnorm4x8(v5));
			G[6][ay][ax] = int(packSnorm4x8(v6));
			G[7][ay][ax] = int(packSnorm4x8(v7));
		}
	}
	barrier();
	int s[2][3][3];
	ivec4 r0 = ivec4(0);
	ivec4 r1 = ivec4(0);
	ivec4 r2 = ivec4(0);
	ivec4 r3 = ivec4(0);
	ivec4 r4 = ivec4(0);
	ivec4 r5 = ivec4(0);
	ivec4 r6 = ivec4(0);
	ivec4 r7 = ivec4(0);
	s[0][0][0] = G[0][xy.y+0][xy.x+0]; s[0][0][1] = G[0][xy.y+0][xy.x+1];
	s[0][0][2] = G[0][xy.y+0][xy.x+2]; s[0][1][0] = G[0][xy.y+1][xy.x+0];
	s[0][1][1] = G[0][xy.y+1][xy.x+1]; s[0][1][2] = G[0][xy.y+1][xy.x+2];
	s[0][2][0] = G[0][xy.y+2][xy.x+0]; s[0][2][1] = G[0][xy.y+2][xy.x+1];
	s[0][2][2] = G[0][xy.y+2][xy.x+2]; s[1][0][0] = G[1][xy.y+0][xy.x+0];
	s[1][0][1] = G[1][xy.y+0][xy.x+1]; s[1][0][2] = G[1][xy.y+0][xy.x+2];
	s[1][1][0] = G[1][xy.y+1][xy.x+0]; s[1][1][1] = G[1][xy.y+1][xy.x+1];
	s[1][1][2] = G[1][xy.y+1][xy.x+2]; s[1][2][0] = G[1][xy.y+2][xy.x+0];
	s[1][2][1] = G[1][xy.y+2][xy.x+1]; s[1][2][2] = G[1][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x080A0A0B, 0x16E60913, 0xF8F605FB, 0x080B0111);
	r1 = D(r1, s[0][0][0], 0xFBFB0002, 0xFF050709, 0x010507FF, 0xFEF8FCFF);
	r2 = D(r2, s[0][0][0], 0xEC050906, 0xF4EDF0F9, 0xF0EEFDFB, 0xF4EDF1FA);
	r3 = D(r3, s[0][0][0], 0x03F50DFD, 0xFAFDFDFC, 0x0FF41D01, 0x02EAD635);
	r4 = D(r4, s[0][0][0], 0x0006F115, 0xECDC071C, 0x02000105, 0x09101912);
	r5 = D(r5, s[0][0][0], 0xFA000409, 0x0802E7F8, 0xFAED09FB, 0x03FDFD09);
	r6 = D(r6, s[0][0][0], 0x08FE05F9, 0xF8FB11F9, 0xF1F800FB, 0x0CFCEC22);
	r7 = D(r7, s[0][0][0], 0x13080A0A, 0xFEF9F303, 0x04F6FCF7, 0x040D09F7);
	r0 = D(r0, s[0][0][1], 0xFF0BF40F, 0x02070D15, 0xFC02FCFB, 0x06F6F502);
	r1 = D(r1, s[0][0][1], 0x05FCFA09, 0xF2070300, 0xF7F51220, 0xFE0B0804);
	r2 = D(r2, s[0][0][1], 0xFD0609E6, 0x000109FD, 0x0FF30521, 0x20D10EE0);
	r3 = D(r3, s[0][0][1], 0x080CFE06, 0x06FA0207, 0x0AF8160A, 0xEA041805);
	r4 = D(r4, s[0][0][1], 0x0A02E711, 0x00F11309, 0xF8000108, 0x00030BFA);
	r5 = D(r5, s[0][0][1], 0x040107FB, 0x00F4F9FE, 0xF3F8080F, 0x03040303);
	r6 = D(r6, s[0][0][1], 0xFF01F8FC, 0x06FBDA0D, 0xFEF503EF, 0xFDEDF20E);
	r7 = D(r7, s[0][0][1], 0xF0D62200, 0xF9F2FB0A, 0xF906F5F0, 0xFAF0F411);
	r0 = D(r0, s[0][0][2], 0xF6FC0BFC, 0xFE042117, 0xFDFF02FF, 0xFA02E706);
	r1 = D(r1, s[0][0][2], 0xFEFA04FD, 0x04FB00FB, 0xFBFFFE04, 0x01FC0302);
	r2 = D(r2, s[0][0][2], 0xFFFEE103, 0x07F4F206, 0x0A04FEFE, 0xF01A0D03);
	r3 = D(r3, s[0][0][2], 0xF902FB03, 0x0102FAFF, 0x09F70FDF, 0x0B0CF81F);
	r4 = D(r4, s[0][0][2], 0xF4021A08, 0xE400FE05, 0xFEFD0304, 0xFBEF0D14);
	r5 = D(r5, s[0][0][2], 0xFF03FA04, 0xF307FFFE, 0x0209F900, 0x04F5F701);
	r6 = D(r6, s[0][0][2], 0xFE00EE02, 0xEC03FEF7, 0x00FDF9F9, 0xEDF9EC09);
	r7 = D(r7, s[0][0][2], 0x09F6FB12, 0xF4F5FFFB, 0x0603FA01, 0xF2F5F908);
	r0 = D(r0, s[0][1][0], 0xF6F9FD05, 0x0B09F7F5, 0x08070E10, 0x190AEFF8);
	r1 = D(r1, s[0][1][0], 0x070006F8, 0x11030400, 0x101711FA, 0x071112FC);
	r2 = D(r2, s[0][1][0], 0x19DFEC0E, 0xFDF2F309, 0x0FF8FCF2, 0x0CFA02F7);
	r3 = D(r3, s[0][1][0], 0xFEF40902, 0xF9F80504, 0xF90DA2C2, 0x1A0AEAEA);
	r4 = D(r4, s[0][1][0], 0x0FFE100E, 0xF5050D05, 0x02F4F90D, 0xF8F8F2FD);
	r5 = D(r5, s[0][1][0], 0x0908FC02, 0x04F1D8FF, 0x081716F8, 0x0004FD00);
	r6 = D(r6, s[0][1][0], 0xF7F604F5, 0xF2D31BE1, 0x1712090F, 0xFBF5DAFB);
	r7 = D(r7, s[0][1][0], 0x08E8F301, 0x0B0901F8, 0xEDEAF3F2, 0xFAF5F6E4);
	r0 = D(r0, s[0][1][1], 0x07F914FB, 0x001118F3, 0x08E807F6, 0xE4F606F2);
	r1 = D(r1, s[0][1][1], 0xE506FDF4, 0x0D0818FF, 0xF40309ED, 0x07F01E14);
	r2 = D(r2, s[0][1][1], 0x28DFFDF8, 0x0D1D10F9, 0xED0106ED, 0xEEFD1F0B);
	r3 = D(r3, s[0][1][1], 0x15ED0EF2, 0x0CEFEFF7, 0xFAD3BBA6, 0xFD07FBCF);
	r4 = D(r4, s[0][1][1], 0x0606FBFD, 0x02FAF7FF, 0x090C0114, 0x040D160F);
	r5 = D(r5, s[0][1][1], 0x0CEDF9EE, 0xF7FB0AE6, 0xE705230D, 0x09F9F4FF);
	r6 = D(r6, s[0][1][1], 0x0DF00517, 0x0BFADD0F, 0xFB07EF10, 0xF809F2EC);
	r7 = D(r7, s[0][1][1], 0x22142001, 0x0BFC0400, 0x03F4F3EF, 0x09F50300);
	r0 = D(r0, s[0][1][2], 0x060CEC08, 0x06FFF602, 0xF80FFDF6, 0x05F3E8FE);
	r1 = D(r1, s[0][1][2], 0xFC1106FF, 0x0A1409FD, 0xF5FBF611, 0x061615F2);
	r2 = D(r2, s[0][1][2], 0xFAEE0810, 0x17070004, 0xE710F9F7, 0xF6FDF9F8);
	r3 = D(r3, s[0][1][2], 0xF70804FF, 0xFB0BFE03, 0xFF09F104, 0xF70FDA09);
	r4 = D(r4, s[0][1][2], 0xF4FFD50D, 0xF801FF05, 0xF809F501, 0x0504FEF7);
	r5 = D(r5, s[0][1][2], 0xF3130CFF, 0xFF03EE03, 0x07FEE312, 0xFC170206);
	r6 = D(r6, s[0][1][2], 0x18EE04F8, 0xFB031608, 0xEE070F02, 0xF400FE0D);
	r7 = D(r7, s[0][1][2], 0xF5041CFE, 0x07070102, 0xFCFB0001, 0xF9102708);
	r0 = D(r0, s[0][2][0], 0x0B0710FF, 0x171026FF, 0x0400F608, 0x11FAD6F8);
	r1 = D(r1, s[0][2][0], 0x02FD0702, 0x0800FDFF, 0x030811FA, 0x00FBFCF5);
	r2 = D(r2, s[0][2][0], 0xEFFCF017, 0x0502FBFE, 0x04FF03FF, 0x0006F6F9);
	r3 = D(r3, s[0][2][0], 0xFB05FBF5, 0x10FE01FA, 0x0BEF1509, 0x2B25E6CF);
	r4 = D(r4, s[0][2][0], 0xEAFFD7F4, 0x0EFCF4EC, 0x0303F0FE, 0x060AF9F8);
	r5 = D(r5, s[0][2][0], 0xFD02FF06, 0x070EFAFE, 0x010311F7, 0x04080401);
	r6 = D(r6, s[0][2][0], 0x03FE0BF3, 0xE4F808F1, 0xEBEFE901, 0xF7061905);
	r7 = D(r7, s[0][2][0], 0x050AF6F1, 0x02FAFE09, 0xFAFDF404, 0xFD09F5EA);
	r0 = D(r0, s[0][2][1], 0x02FBDDE3, 0xFA0B0CEC, 0xFDFE0708, 0xF6F7F00F);
	r1 = D(r1, s[0][2][1], 0xF8FA070C, 0x0E080404, 0xF611EEFE, 0x19EEE6DE);
	r2 = D(r2, s[0][2][1], 0xDAF81018, 0x10FC01FA, 0x01F6050E, 0x1AFFF5F4);
	r3 = D(r3, s[0][2][1], 0x0B02FC05, 0xFAFF08FD, 0x050B38F4, 0xE8F3F7E0);
	r4 = D(r4, s[0][2][1], 0xF201F4FD, 0x1304030E, 0xFCF613FC, 0x00FE04FD);
	r5 = D(r5, s[0][2][1], 0x0902120C, 0x08F4FFFF, 0xEEF02609, 0x070AF9F5);
	r6 = D(r6, s[0][2][1], 0xF1FBFDFD, 0x1213DFF7, 0x0DFB1A07, 0xF1030C04);
	r7 = D(r7, s[0][2][1], 0x02EBF812, 0x06FAF0FA, 0x05FFF600, 0xFE0C04FB);
	r0 = D(r0, s[0][2][2], 0x01F60804, 0x041A0BEA, 0xF9FAF8FF, 0x0102FAFC);
	r1 = D(r1, s[0][2][2], 0xFEFCF7FF, 0xFC100EFC, 0xFA11130F, 0xEBFFE905);
	r2 = D(r2, s[0][2][2], 0xE20FEFFA, 0xFAFCF800, 0xFF0105FC, 0x01FF0B10);
	r3 = D(r3, s[0][2][2], 0x05FCF6F8, 0xFA0D01FE, 0xFB0AFCF2, 0x010CC2F0);
	r4 = D(r4, s[0][2][2], 0xE712ECFF, 0xFE0409FE, 0xFF03FDFC, 0xFE001301);
	r5 = D(r5, s[0][2][2], 0xFA04FEF8, 0x0B01F0F9, 0x0414FBFC, 0xFFF80901);
	r6 = D(r6, s[0][2][2], 0xF6FE04FD, 0xF80B020A, 0x0501F0FA, 0xF80CF9F9);
	r7 = D(r7, s[0][2][2], 0x10FC0D04, 0xFA080003, 0xF70DFCFF, 0xF405F208);
	r0 = D(r0, s[1][0][0], 0x02FCF8FE, 0x1108FDED, 0xF8FDF800, 0xFBF913F9);
	r1 = D(r1, s[1][0][0], 0x00FAFE00, 0x01FC07FF, 0x080C0FF7, 0xF80008FB);
	r2 = D(r2, s[1][0][0], 0x17FC2B11, 0xF8FEF90D, 0xFD060305, 0x04F50210);
	r3 = D(r3, s[1][0][0], 0xFE03FC00, 0xFCFAFFFE, 0x15EA43F0, 0x03100601);
	r4 = D(r4, s[1][0][0], 0xFA041AFE, 0xF8091806, 0x04F90507, 0xF3F70AFF);
	r5 = D(r5, s[1][0][0], 0x00000001, 0xF50DF1FC, 0x0A0E03FC, 0xFBF90207);
	r6 = D(r6, s[1][0][0], 0xF3FE05FE, 0x1600F3F8, 0x03FCFE01, 0x06F7FDEE);
	r7 = D(r7, s[1][0][0], 0xDA02F002, 0xFC08FC05, 0x0D090201, 0x11FDF8F9);
	r0 = D(r0, s[1][0][1], 0xF7FDF800, 0xF9EFFBF3, 0xFE0303FF, 0x100B10FB);
	r1 = D(r1, s[1][0][1], 0xFFFC05FC, 0x070907FF, 0x1E00DC03, 0x06060B00);
	r2 = D(r2, s[1][0][1], 0xFED5FFF7, 0x0DFD0AF5, 0x02162700, 0x0011FEFC);
	r3 = D(r3, s[1][0][1], 0x00F90604, 0x00FAE904, 0x13BDF8BA, 0x2AED0EE8);
	r4 = D(r4, s[1][0][1], 0x1D04EB10, 0xF1F817FF, 0xFFFB0803, 0x0516FEF8);
	r5 = D(r5, s[1][0][1], 0x0906FF03, 0x0A0A000A, 0x13F906FB, 0x05000100);
	r6 = D(r6, s[1][0][1], 0x1205EA0A, 0xF5FC0A0D, 0x03F6FC0E, 0xFDF325FD);
	r7 = D(r7, s[1][0][1], 0x041212FD, 0x0A041507, 0xFF04FD04, 0x14F20E09);
	r0 = D(r0, s[1][0][2], 0xFA020B08, 0x1404F803, 0xFEFFF7FC, 0xF6F40405);
	r1 = D(r1, s[1][0][2], 0xFFFDFBF5, 0x0801F702, 0x02FA16F9, 0xFE0BECF6);
	r2 = D(r2, s[1][0][2], 0x10E61EFD, 0x050C0BFC, 0xFD010903, 0xE90714F9);
	r3 = D(r3, s[1][0][2], 0x00F806FB, 0x01FBFEFF, 0x01EE0FD2, 0x07EF0712);
	r4 = D(r4, s[1][0][2], 0xFF0214F5, 0xF6090C02, 0x03FBFC0B, 0xFE090001);
	r5 = D(r5, s[1][0][2], 0xFBF90504, 0x04FEF80A, 0x08FB0605, 0x02F91004);
	r6 = D(r6, s[1][0][2], 0xFBFF0706, 0xFA0E05FC, 0x00FBFB06, 0xFCEF1FF3);
	r7 = D(r7, s[1][0][2], 0xEFF61101, 0x050102FD, 0x03F60509, 0xFA0B08FE);
	r0 = D(r0, s[1][1][0], 0xFA0B070A, 0x10F8FBE4, 0xFF04FFF4, 0xFB0CFF03);
	r1 = D(r1, s[1][1][0], 0x0309F708, 0xFDF90001, 0xEEFA00F6, 0xFD020603);
	r2 = D(r2, s[1][1][0], 0xEDF4010E, 0x05F80DFF, 0xFFF30506, 0x080003FD);
	r3 = D(r3, s[1][1][0], 0x0FFF0AF8, 0x05FCFD0A, 0xD8051C1D, 0x0505FCF6);
	r4 = D(r4, s[1][1][0], 0xF2FA1BEA, 0xF5FD3AF5, 0xFF050507, 0xFD020201);
	r5 = D(r5, s[1][1][0], 0xFB0207FF, 0x04090303, 0xF004EEF3, 0xFEFB0100);
	r6 = D(r6, s[1][1][0], 0xFE05020E, 0x16EB2504, 0xF5F20502, 0xF919FF05);
	r7 = D(r7, s[1][1][0], 0x06050C07, 0x01F008FE, 0x0DFA0CFE, 0x0FFD12F0);
	r0 = D(r0, s[1][1][1], 0xED0B1AF5, 0xFE1C02EA, 0xF70BF404, 0xFF0408F3);
	r1 = D(r1, s[1][1][1], 0x0AFBF208, 0x0018F700, 0x1E0FEF02, 0x0D1713F6);
	r2 = D(r2, s[1][1][1], 0xC40C170F, 0xFBFCF9EE, 0xFEF7F0FC, 0xEBF2270F);
	r3 = D(r3, s[1][1][1], 0xFBF3F31C, 0x06F0190D, 0xFE2BFE19, 0xF8FD0FF1);
	r4 = D(r4, s[1][1][1], 0xE81521F9, 0xF8EB1A12, 0xF6FA1D08, 0xF101FFF8);
	r5 = D(r5, s[1][1][1], 0x0511FD05, 0xF5EDF6EF, 0x0B130DD3, 0x01150B02);
	r6 = D(r6, s[1][1][1], 0x110C2207, 0xF9F7E009, 0xFA07FB13, 0xF816FA00);
	r7 = D(r7, s[1][1][1], 0xE01AFAEE, 0xEFF407E5, 0x04F5FB0B, 0xFFECE91A);
	r0 = D(r0, s[1][1][2], 0xF6EB1015, 0x1CF1ED08, 0xFDFFFA05, 0x01FCFE04);
	r1 = D(r1, s[1][1][2], 0x00FEFFFD, 0x04180E05, 0xFBFD1EF4, 0xF9080F05);
	r2 = D(r2, s[1][1][2], 0xE31D0E07, 0xF3130CF5, 0x08F4FD07, 0x0B010D04);
	r3 = D(r3, s[1][1][2], 0x1102F708, 0xFFFB0810, 0x1F140A17, 0x2BF7D4FB);
	r4 = D(r4, s[1][1][2], 0x01FD18FE, 0xF60023FC, 0x00EEFE08, 0xFE0A0002);
	r5 = D(r5, s[1][1][2], 0x0708010A, 0xFE020B10, 0x05F8FA0D, 0x01FC080C);
	r6 = D(r6, s[1][1][2], 0x14F7F800, 0xF61117F4, 0xFC081302, 0xFF0AE9FF);
	r7 = D(r7, s[1][1][2], 0x0515EAFD, 0xF3100DFB, 0x08F50105, 0xFE0F0FEC);
	r0 = D(r0, s[1][2][0], 0xF301FAFF, 0x09F601EF, 0xF5FE0203, 0xF107020E);
	r1 = D(r1, s[1][2][0], 0x03FA0001, 0x0201FF05, 0xF7FD03F7, 0xFCF41105);
	r2 = D(r2, s[1][2][0], 0x1D0BFAFC, 0x0106FF03, 0x07FEFC02, 0xF603FDFD);
	r3 = D(r3, s[1][2][0], 0xFFFBFEFA, 0xFDF4FF16, 0x110316D9, 0x17F806F4);
	r4 = D(r4, s[1][2][0], 0xFF070205, 0x0201F4FE, 0xF7050203, 0xF80201FB);
	r5 = D(r5, s[1][2][0], 0xF7000304, 0xF80104F8, 0xEE0805F9, 0xFB0401FE);
	r6 = D(r6, s[1][2][0], 0xFEF8FC05, 0x02070EE7, 0xEF110BF0, 0xFDFE03FD);
	r7 = D(r7, s[1][2][0], 0xF802FEFF, 0xFD09F904, 0x03010401, 0x03FFFCFE);
	r0 = D(r0, s[1][2][1], 0xF80AFF01, 0x0A07FBE0, 0x0101FD01, 0xF6F602FA);
	r1 = D(r1, s[1][2][1], 0x04FB0500, 0xFB040201, 0xFB00F70B, 0x06EF0000);
	r2 = D(r2, s[1][2][1], 0xEC150FF4, 0xF9F6FAFD, 0x01FAFA03, 0xFB07F50C);
	r3 = D(r3, s[1][2][1], 0x04F502FF, 0x06000419, 0xF3E91BF0, 0xDF0515F1);
	r4 = D(r4, s[1][2][1], 0xFB020604, 0xFE12FE10, 0xF70205F5, 0xF409FDFF);
	r5 = D(r5, s[1][2][1], 0x020502FE, 0xF8050C04, 0x0206F2F6, 0xFB07FA0A);
	r6 = D(r6, s[1][2][1], 0x1700FD0D, 0xFFE30011, 0xF2FA10F9, 0xFC0008F9);
	r7 = D(r7, s[1][2][1], 0xFEFC090A, 0xF9FFFC05, 0x02F91000, 0xF7F81301);
	r0 = D(r0, s[1][2][2], 0xFA01FEFC, 0x09F608EE, 0xFDF901FF, 0xFD04FF0B);
	r1 = D(r1, s[1][2][2], 0xFFFDFE00, 0xFF0BFF03, 0x000712F1, 0xFFEE0C00);
	r2 = D(r2, s[1][2][2], 0xF8F02EF3, 0xF909FD06, 0x03FA0309, 0xFD0CED06);
	r3 = D(r3, s[1][2][2], 0x01FB0610, 0x15FA0806, 0xF1031DF4, 0x09E8170B);
	r4 = D(r4, s[1][2][2], 0xF90500F5, 0xFD0DF303, 0xFA000602, 0xF60802FC);
	r5 = D(r5, s[1][2][2], 0x06F30504, 0xFFFB0606, 0x01FC10FB, 0x0001FD05);
	r6 = D(r6, s[1][2][2], 0x070102FE, 0xFC0303FD, 0xF7FC14FD, 0xFC05FFFE);
	r7 = D(r7, s[1][2][2], 0xF8FB0905, 0xFE02F7FC, 0x08F70AFE, 0x00FE05FD);
	s[0][0][0] = G[2][xy.y+0][xy.x+0]; s[0][0][1] = G[2][xy.y+0][xy.x+1];
	s[0][0][2] = G[2][xy.y+0][xy.x+2]; s[0][1][0] = G[2][xy.y+1][xy.x+0];
	s[0][1][1] = G[2][xy.y+1][xy.x+1]; s[0][1][2] = G[2][xy.y+1][xy.x+2];
	s[0][2][0] = G[2][xy.y+2][xy.x+0]; s[0][2][1] = G[2][xy.y+2][xy.x+1];
	s[0][2][2] = G[2][xy.y+2][xy.x+2]; s[1][0][0] = G[3][xy.y+0][xy.x+0];
	s[1][0][1] = G[3][xy.y+0][xy.x+1]; s[1][0][2] = G[3][xy.y+0][xy.x+2];
	s[1][1][0] = G[3][xy.y+1][xy.x+0]; s[1][1][1] = G[3][xy.y+1][xy.x+1];
	s[1][1][2] = G[3][xy.y+1][xy.x+2]; s[1][2][0] = G[3][xy.y+2][xy.x+0];
	s[1][2][1] = G[3][xy.y+2][xy.x+1]; s[1][2][2] = G[3][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xFCFB01FA, 0x2316F5E9, 0x17FB0304, 0xF2FFF8FB);
	r1 = D(r1, s[0][0][0], 0x10FCFB06, 0xF8FD0305, 0x00FCFC04, 0xF9FDFD00);
	r2 = D(r2, s[0][0][0], 0xF3FAF2F1, 0xFD0203FE, 0xF40505FC, 0xA102F701);
	r3 = D(r3, s[0][0][0], 0x04010404, 0x12FD04FC, 0x09C6E501, 0x17F700D6);
	r4 = D(r4, s[0][0][0], 0xD9EDE9F4, 0xC8F9FEF7, 0xF9030305, 0xFDF1E5F7);
	r5 = D(r5, s[0][0][0], 0xF4060004, 0xFE070CF7, 0x1607FBF9, 0xFA030105);
	r6 = D(r6, s[0][0][0], 0x1AFE09FE, 0x00FB0506, 0xFEFF0EFF, 0x03FFECDF);
	r7 = D(r7, s[0][0][0], 0xE103F700, 0xF60309F0, 0xFEFD0AF7, 0x0C0404ED);
	r0 = D(r0, s[0][0][1], 0x0302FC0C, 0x0901F1E9, 0x1FFBFEFA, 0x02EB0EF1);
	r1 = D(r1, s[0][0][1], 0x1B02FDFE, 0xF7020403, 0x1903FFF4, 0x0205F709);
	r2 = D(r2, s[0][0][1], 0x1D0B02C7, 0xF6FF05F9, 0xF6ED0AF7, 0xC9EBF1CC);
	r3 = D(r3, s[0][0][1], 0x0A05F3F4, 0x1107F2FC, 0x08E805E8, 0x0EF40A10);
	r4 = D(r4, s[0][0][1], 0xE4F8EBF5, 0x06E403F9, 0xF701FF0D, 0xF311EAFF);
	r5 = D(r5, s[0][0][1], 0x01040500, 0x02EE04F7, 0x07F804F6, 0xFB03FE09);
	r6 = D(r6, s[0][0][1], 0x1F09F800, 0xF8FDF8FC, 0x04000F00, 0x08FFF8EC);
	r7 = D(r7, s[0][0][1], 0xEEF906EF, 0xF2FAFEFA, 0xF7FD0600, 0x03FDEEF6);
	r0 = D(r0, s[0][0][2], 0xFEF00212, 0x04ED0DF5, 0x11FCFD02, 0xFAFEF307);
	r1 = D(r1, s[0][0][2], 0x19F7FEFE, 0x020103F7, 0x04FFFF03, 0x01FA01FE);
	r2 = D(r2, s[0][0][2], 0xED14EB02, 0x03FAFBFA, 0xF2F700FD, 0x0B0005EE);
	r3 = D(r3, s[0][0][2], 0xFF0100FC, 0x0FF7FE04, 0x04E3EADE, 0x22FFF5F8);
	r4 = D(r4, s[0][0][2], 0xE7F5F5FF, 0x00FDFBFC, 0xF2FB010A, 0x01FA08EE);
	r5 = D(r5, s[0][0][2], 0xFE0C00F4, 0xFAF9F50C, 0x0401FB03, 0xF800FC02);
	r6 = D(r6, s[0][0][2], 0x15FD0003, 0x01F6FEFB, 0x040CFDF8, 0xFC03F5F7);
	r7 = D(r7, s[0][0][2], 0x0226EEC5, 0x02F3F50A, 0xF7030405, 0x01F7FDF9);
	r0 = D(r0, s[0][1][0], 0xED09F4F8, 0x020FFCD1, 0x20F1FD1B, 0xF702F3F5);
	r1 = D(r1, s[0][1][0], 0x17F3FE08, 0xFCF8F5FE, 0xEFE1EA15, 0xFD110206);
	r2 = D(r2, s[0][1][0], 0xE4E9F3FD, 0xFD1C03F1, 0xFEFDFD08, 0xEBF1FB00);
	r3 = D(r3, s[0][1][0], 0x09FEF000, 0x1B06FF0B, 0xEADCFD00, 0xF1FAF1DF);
	r4 = D(r4, s[0][1][0], 0xE7FBEAD4, 0xE30BAF06, 0xF70DFDFC, 0x0807F5E8);
	r5 = D(r5, s[0][1][0], 0xFA03030D, 0xF10600ED, 0xECEBE4FC, 0xFB01FA04);
	r6 = D(r6, s[0][1][0], 0x33010104, 0x0FEDE7DE, 0x010DF506, 0xEFFEE4E4);
	r7 = D(r7, s[0][1][0], 0xF70303FB, 0xF1F6E606, 0xFDFAFBFB, 0x0605E6EB);
	r0 = D(r0, s[0][1][1], 0x00F50FE8, 0x24ECF0D2, 0x26F405FF, 0xF2D001F3);
	r1 = D(r1, s[0][1][1], 0x260F02FA, 0xF103F2FF, 0x1609F2D3, 0xF2EF14E3);
	r2 = D(r2, s[0][1][1], 0x23F1F2BC, 0x01DBE513, 0xFD21FC03, 0xE011FAFB);
	r3 = D(r3, s[0][1][1], 0x0C2205F2, 0x3A0807FE, 0xFD0EEDDC, 0xF905ADD6);
	r4 = D(r4, s[0][1][1], 0xFDE4EED0, 0x061ADEEC, 0x000601EA, 0x0A02F303);
	r5 = D(r5, s[0][1][1], 0xFB1400ED, 0xFDF6D8E7, 0x0EF30801, 0xF705F4ED);
	r6 = D(r6, s[0][1][1], 0x20F40B0D, 0x071603F6, 0x0A08F4FF, 0xF701F4C4);
	r7 = D(r7, s[0][1][1], 0xCB07DAFA, 0x11EED8F3, 0x00FAE914, 0x091EDCEE);
	r0 = D(r0, s[0][1][2], 0x0617FEEE, 0xFCF4F214, 0x14FFFC06, 0xFF14FA01);
	r1 = D(r1, s[0][1][2], 0x1E00FE0E, 0xFEF2FEEE, 0x01EC03F4, 0x00E701F2);
	r2 = D(r2, s[0][1][2], 0xF3041000, 0xFCEFFAEC, 0x00040106, 0xF9140802);
	r3 = D(r3, s[0][1][2], 0x0E0FFB05, 0x1513FA13, 0xF025EF02, 0xF80900F2);
	r4 = D(r4, s[0][1][2], 0x04EFFFF7, 0xFF03F500, 0xFA070006, 0xFFF70810);
	r5 = D(r5, s[0][1][2], 0xFCEA03F6, 0xF90DF20B, 0xF606FBF1, 0xFAFCFEF3);
	r6 = D(r6, s[0][1][2], 0x2003FAF9, 0xF9EC01EF, 0xFCF5FD0C, 0xF6FF09ED);
	r7 = D(r7, s[0][1][2], 0x01F902ED, 0xFEEFF7F8, 0xF603F90A, 0x03F0110A);
	r0 = D(r0, s[0][2][0], 0xF5F20903, 0x01F00515, 0x1900F8FC, 0xF60DEEF8);
	r1 = D(r1, s[0][2][0], 0x0FF8FD03, 0xFAF5FE0B, 0xFFE7E707, 0x0000F9FE);
	r2 = D(r2, s[0][2][0], 0x051207F3, 0x000CFEFD, 0xFAFDFD06, 0x030507FB);
	r3 = D(r3, s[0][2][0], 0x060E0DF9, 0x23F4FF03, 0xF1DCFF09, 0x100DE9EF);
	r4 = D(r4, s[0][2][0], 0xD4F0EA05, 0xDFFAFDF8, 0xFC03FFFD, 0x07FE0306);
	r5 = D(r5, s[0][2][0], 0xE9FB0304, 0xF903FAF9, 0xE4EEE811, 0xFDFCFE05);
	r6 = D(r6, s[0][2][0], 0x20FA0309, 0xFC01F4FA, 0xF024DCE3, 0x06F90A01);
	r7 = D(r7, s[0][2][0], 0xF806FDF8, 0xFFF9F401, 0xF202FC05, 0xFA04EC03);
	r0 = D(r0, s[0][2][1], 0xF01AEAF2, 0x0512EBD3, 0x1EEE0903, 0xFBEF0C0A);
	r1 = D(r1, s[0][2][1], 0x19F9FE0C, 0x0400E906, 0x1120DD0B, 0xFAF3E6FD);
	r2 = D(r2, s[0][2][1], 0xCBEDE40C, 0xEFEEF505, 0x04E905FF, 0xF9F704FA);
	r3 = D(r3, s[0][2][1], 0x0EFFFA02, 0x2BF60606, 0xE6D4F008, 0xEBE1CE0C);
	r4 = D(r4, s[0][2][1], 0xD1EF0B06, 0xF7F2FFFD, 0xFB16E2EF, 0xF507F4FD);
	r5 = D(r5, s[0][2][1], 0xEF0CF511, 0xF0F7F309, 0x1411F707, 0xFB11F700);
	r6 = D(r6, s[0][2][1], 0x190D03F3, 0x121EFC04, 0x06EBF1ED, 0xFFF71A08);
	r7 = D(r7, s[0][2][1], 0xEDFB09F6, 0xF1FFF4F7, 0xF1FEEE0A, 0x0508EA06);
	r0 = D(r0, s[0][2][2], 0xFE0EFBF6, 0x0B0CEF07, 0x11FCF900, 0xF607FFFD);
	r1 = D(r1, s[0][2][2], 0x1404FCFE, 0xFA040803, 0x00DF0007, 0x08F4FD0E);
	r2 = D(r2, s[0][2][2], 0x1204FAF6, 0xFBFC0302, 0xFDFBF601, 0xF9F9FBF7);
	r3 = D(r3, s[0][2][2], 0x0AFFFD0C, 0x1A0CF7FA, 0xE8D4F7FF, 0x1108FB13);
	r4 = D(r4, s[0][2][2], 0x03F901FE, 0x020505F9, 0x0003FC01, 0xF90AF2FD);
	r5 = D(r5, s[0][2][2], 0xF20F050C, 0xF601FC05, 0x0AF9FBFE, 0xF80EFDFA);
	r6 = D(r6, s[0][2][2], 0x160CFA00, 0xFFE90E06, 0xFEFC0705, 0x00FEF602);
	r7 = D(r7, s[0][2][2], 0xFF18F807, 0xFCFE0600, 0xF3FE0406, 0x02F90C01);
	r0 = D(r0, s[1][0][0], 0x05FD00FE, 0xEAF8050A, 0xF1F2FFFA, 0x0A05F304);
	r1 = D(r1, s[1][0][0], 0xFEF8FBFF, 0x0101FBFE, 0xF913DC11, 0x05FDFDFA);
	r2 = D(r2, s[1][0][0], 0xFF0C181E, 0xFA000AF9, 0xF80AFB06, 0x0AFFE112);
	r3 = D(r3, s[1][0][0], 0xF511F608, 0xF7FA03FD, 0xF80B9F18, 0x16040B15);
	r4 = D(r4, s[1][0][0], 0xFEF5E805, 0xF306D616, 0xFE0500FD, 0xFFFAE4ED);
	r5 = D(r5, s[1][0][0], 0x0702EFFF, 0xFC0AFE09, 0xF8F2F30C, 0x0403FA00);
	r6 = D(r6, s[1][0][0], 0xFCF7EEFB, 0xEBFF1107, 0xF6020401, 0x16D1DF08);
	r7 = D(r7, s[1][0][0], 0xF7F5DD12, 0xFA070AFD, 0xF60D0DFD, 0xEC011500);
	r0 = D(r0, s[1][0][1], 0x0D02E30E, 0xF717CE05, 0xF1F6F5FA, 0xF10A0FE9);
	r1 = D(r1, s[1][0][1], 0xFBF6FFFE, 0x07FA02FF, 0xF3EB0CFA, 0x0CFEF50C);
	r2 = D(r2, s[1][0][1], 0xEC2510D4, 0x02FEE9FD, 0xFE06F9FC, 0x26FACD00);
	r3 = D(r3, s[1][0][1], 0xFE0104FB, 0xFCEFFCFF, 0x2C37FE08, 0xED01C411);
	r4 = D(r4, s[1][0][1], 0x35FB0304, 0xEDFBA9F1, 0x0BFBEE03, 0x07E8EAEA);
	r5 = D(r5, s[1][0][1], 0xF70702FA, 0xE80104FA, 0xECF7E9F0, 0x0A07FE00);
	r6 = D(r6, s[1][0][1], 0x000502FE, 0x0AEC0F04, 0xEA0709FB, 0x0AFDFA00);
	r7 = D(r7, s[1][0][1], 0xFFFF0715, 0xFEFEE8ED, 0xEB0908FE, 0x01EC07F8);
	r0 = D(r0, s[1][0][2], 0x14F70F10, 0x1DE2F4E6, 0xF7F80308, 0x0203140D);
	r1 = D(r1, s[1][0][2], 0xF5F60407, 0xF7FE0507, 0x0604E003, 0x10020F06);
	r2 = D(r2, s[1][0][2], 0xF9FC02ED, 0x07F314FF, 0xFF05F008, 0x1211D700);
	r3 = D(r3, s[1][0][2], 0x07F90302, 0x03FDFA03, 0xE601EDEE, 0x0E2408EA);
	r4 = D(r4, s[1][0][2], 0x1E0708E7, 0xFEF2F401, 0x05FAFF02, 0x050BF0EB);
	r5 = D(r5, s[1][0][2], 0xF906FEFA, 0x12F910E8, 0x0E0C130E, 0xFF03FAF6);
	r6 = D(r6, s[1][0][2], 0x09FF03F9, 0xF8FDED04, 0xEB040010, 0x07ED03ED);
	r7 = D(r7, s[1][0][2], 0xD60BD2C9, 0x1EF508E6, 0xFF0605F7, 0x04F9ED0E);
	r0 = D(r0, s[1][1][0], 0x0014FC18, 0xDF121621, 0xEFEAF702, 0xF4F70EF7);
	r1 = D(r1, s[1][1][0], 0xF8F2F8FF, 0x0402F6FF, 0x0301D2F6, 0xF300FAF9);
	r2 = D(r2, s[1][1][0], 0x0212BB17, 0x04000801, 0xF500F303, 0xE5170F0D);
	r3 = D(r3, s[1][1][0], 0x0212FE01, 0x05E6FFFA, 0x0824F107, 0xFE1302F5);
	r4 = D(r4, s[1][1][0], 0xFED70320, 0xEF3FFE17, 0x020DF007, 0x0E110906);
	r5 = D(r5, s[1][1][0], 0x040DF807, 0x02190900, 0xF5F9E1E7, 0x0307ED0B);
	r6 = D(r6, s[1][1][0], 0x02FB07FA, 0xE60CE7FB, 0x00FBBF07, 0xFFFC0308);
	r7 = D(r7, s[1][1][0], 0x011118FA, 0x0609F30A, 0x02100BFB, 0x0316FDFC);
	r0 = D(r0, s[1][1][1], 0x0715F2EC, 0x0110C489, 0xECF0FD0C, 0x000604F8);
	r1 = D(r1, s[1][1][1], 0xECF20900, 0x06F112FA, 0xFCEE03DD, 0xD8040C06);
	r2 = D(r2, s[1][1][1], 0x0021A412, 0xF8F70409, 0x02F7FF04, 0xFB441EF6);
	r3 = D(r3, s[1][1][1], 0xFF070400, 0x16F70504, 0x010BC4F1, 0xF725EBD4);
	r4 = D(r4, s[1][1][1], 0x0721C6FE, 0x071DFBEC, 0x02FF00FC, 0xF818F5FC);
	r5 = D(r5, s[1][1][1], 0x0E0BF2F1, 0x0E0012E7, 0x0F17E9D0, 0x0D0C1104);
	r6 = D(r6, s[1][1][1], 0x0F05FA0D, 0x0CFC09E4, 0x11DE0406, 0x2843E3F5);
	r7 = D(r7, s[1][1][1], 0xEBF900E0, 0x1603FB06, 0x0EFB0507, 0xF5FE00BA);
	r0 = D(r0, s[1][1][2], 0xF906FEDB, 0x0BDA0AB5, 0xF5F1000D, 0xF2FFFAE9);
	r1 = D(r1, s[1][1][2], 0xEBF10509, 0x0CE8F7E7, 0xFB05E9D2, 0xF0F9FEF1);
	r2 = D(r2, s[1][1][2], 0xFD0AA30A, 0x11F6FCF3, 0xFB030A03, 0xDFF40BE8);
	r3 = D(r3, s[1][1][2], 0xF101FCF7, 0x05F504F4, 0x120C0F00, 0xEBD3FDAC);
	r4 = D(r4, s[1][1][2], 0xF50D01EE, 0xFC24FCEB, 0x0805FEF6, 0x0015E7E0);
	r5 = D(r5, s[1][1][2], 0x0B0AF3E6, 0xED0AF7C8, 0xF7FD0EED, 0x0401F0FD);
	r6 = D(r6, s[1][1][2], 0x06ED0AF9, 0xFBFCFA0B, 0xFB00FF01, 0x03FB190D);
	r7 = D(r7, s[1][1][2], 0xFE0DD0FB, 0x07FDEFE6, 0x0903FEEC, 0x08FCFFF8);
	r0 = D(r0, s[1][2][0], 0xFB00F8F9, 0xFADFD305, 0xFAE7FF01, 0xFCF91202);
	r1 = D(r1, s[1][2][0], 0xF9F2FD00, 0x0502FC00, 0x0322DAFF, 0x0602FA0B);
	r2 = D(r2, s[1][2][0], 0xEF2A1F0F, 0x08F70400, 0xF2E80C02, 0xFCECEFF0);
	r3 = D(r3, s[1][2][0], 0xFE0FF8FA, 0x04EDFDFA, 0xEA1B0417, 0x0C03F810);
	r4 = D(r4, s[1][2][0], 0x062BEAF9, 0xFEF8ECFD, 0x0612F907, 0x0409FAF7);
	r5 = D(r5, s[1][2][0], 0xFF0EFC02, 0x05120209, 0xFAFDFB04, 0x010700FD);
	r6 = D(r6, s[1][2][0], 0x01FFFC02, 0x09EAF1FC, 0x1217E90F, 0xF403FCF4);
	r7 = D(r7, s[1][2][0], 0xFB010200, 0x01010CFD, 0x03000400, 0x0405F905);
	r0 = D(r0, s[1][2][1], 0xFB0FF302, 0x08F595FB, 0xFBEDFC0A, 0xF50C13FE);
	r1 = D(r1, s[1][2][1], 0xF0EE00FD, 0xF40307FE, 0xDCFAF9FF, 0x1CFBF602);
	r2 = D(r2, s[1][2][1], 0x0AE71901, 0x050C0602, 0xF8FA0101, 0x02F4F109);
	r3 = D(r3, s[1][2][1], 0xFE0800FC, 0x06FDFAFB, 0xE103F505, 0x1948F0C3);
	r4 = D(r4, s[1][2][1], 0xFE2E0BFC, 0x1C13F801, 0x08F5F4FA, 0x04FC0700);
	r5 = D(r5, s[1][2][1], 0xE9120305, 0xFEFB03F5, 0xF221F3F5, 0x05000205);
	r6 = D(r6, s[1][2][1], 0xFEFAFCFA, 0xDD1903E8, 0x0B17E1DC, 0xEAEC0A07);
	r7 = D(r7, s[1][2][1], 0x12040414, 0x1314FBF7, 0xEB11FEF3, 0xF61A05E7);
	r0 = D(r0, s[1][2][2], 0x120FF0FD, 0xD9DFD9A5, 0xF7F0FF06, 0xF708FCFE);
	r1 = D(r1, s[1][2][2], 0xF6EDFD0A, 0x0A08F8FC, 0x150CF3F5, 0x03FD04CB);
	r2 = D(r2, s[1][2][2], 0xD34919D4, 0x050704F3, 0xFEFEFF01, 0x06FC021C);
	r3 = D(r3, s[1][2][2], 0xFB0AFEF7, 0x1107FEF1, 0xF804F1F3, 0xDF49FDF3);
	r4 = D(r4, s[1][2][2], 0xF120FFF0, 0xFB1901FF, 0x0FFDFFF1, 0x061EF9F8);
	r5 = D(r5, s[1][2][2], 0xFA15FDFF, 0xFB260302, 0x02F9F5FD, 0x080900F4);
	r6 = D(r6, s[1][2][2], 0xFBFB02FA, 0x10FE0311, 0x01EDF6EA, 0xF207F604);
	r7 = D(r7, s[1][2][2], 0xE60807F9, 0x0715FF0E, 0xFD0BFC03, 0x041C000B);
	s[0][0][0] = G[4][xy.y+0][xy.x+0]; s[0][0][1] = G[4][xy.y+0][xy.x+1];
	s[0][0][2] = G[4][xy.y+0][xy.x+2]; s[0][1][0] = G[4][xy.y+1][xy.x+0];
	s[0][1][1] = G[4][xy.y+1][xy.x+1]; s[0][1][2] = G[4][xy.y+1][xy.x+2];
	s[0][2][0] = G[4][xy.y+2][xy.x+0]; s[0][2][1] = G[4][xy.y+2][xy.x+1];
	s[0][2][2] = G[4][xy.y+2][xy.x+2]; s[1][0][0] = G[5][xy.y+0][xy.x+0];
	s[1][0][1] = G[5][xy.y+0][xy.x+1]; s[1][0][2] = G[5][xy.y+0][xy.x+2];
	s[1][1][0] = G[5][xy.y+1][xy.x+0]; s[1][1][1] = G[5][xy.y+1][xy.x+1];
	s[1][1][2] = G[5][xy.y+1][xy.x+2]; s[1][2][0] = G[5][xy.y+2][xy.x+0];
	s[1][2][1] = G[5][xy.y+2][xy.x+1]; s[1][2][2] = G[5][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xFD090108, 0x23070D09, 0x05EB1802, 0xE1040000);
	r1 = D(r1, s[0][0][0], 0x06F4FE0D, 0xFDF40003, 0x0805F8FD, 0x01010114);
	r2 = D(r2, s[0][0][0], 0xF7E805FE, 0xFC0400F9, 0x070100E6, 0x02FA02C4);
	r3 = D(r3, s[0][0][0], 0x06FF0E05, 0xF9FF1108, 0x0206FD0D, 0xE10AEB2B);
	r4 = D(r4, s[0][0][0], 0x1B070802, 0xFE0808F7, 0x02F90302, 0xFFFF0BF9);
	r5 = D(r5, s[0][0][0], 0xFA0B0700, 0xFC110201, 0xFE170B10, 0x00FB13FF);
	r6 = D(r6, s[0][0][0], 0xFE06F311, 0x0416F716, 0xEDF91108, 0xFC1712E8);
	r7 = D(r7, s[0][0][0], 0xDCFCF9F9, 0x0DFCFFF9, 0xFC09E2FE, 0x0105F115);
	r0 = D(r0, s[0][0][1], 0xD50C0509, 0xE50FE705, 0xFAF70405, 0x0206FB0C);
	r1 = D(r1, s[0][0][1], 0x03F300FB, 0x00FE0DFE, 0x0405FE0C, 0xF507FD0D);
	r2 = D(r2, s[0][0][1], 0x14F9BFE8, 0x09FFFB1D, 0x08EAEAFF, 0xDC00001B);
	r3 = D(r3, s[0][0][1], 0xF6041EFE, 0x21070C04, 0xDE05F2EE, 0xF5EF25F7);
	r4 = D(r4, s[0][0][1], 0xEB0A0E0A, 0x01F80510, 0x03F00B00, 0xEEF40E12);
	r5 = D(r5, s[0][0][1], 0xF4FAFFF9, 0x0E090003, 0xFBF502FF, 0xF602F901);
	r6 = D(r6, s[0][0][1], 0x1501E8FD, 0xF2FBE801, 0x15F70E04, 0xF4122100);
	r7 = D(r7, s[0][0][1], 0x13E611F0, 0x230E160D, 0x00050AFB, 0xDFFEF800);
	r0 = D(r0, s[0][0][2], 0xEBF51401, 0xF51310E6, 0xF8FEEC05, 0xF3EF0A04);
	r1 = D(r1, s[0][0][2], 0xFAFF0501, 0xFC0406FF, 0x04FF12F6, 0xFCF80A0E);
	r2 = D(r2, s[0][0][2], 0xE400F21A, 0xF50C0C0A, 0xF401EB03, 0x05FC0002);
	r3 = D(r3, s[0][0][2], 0x080426F9, 0xFB0111FE, 0x031BEB03, 0xF0EF09F6);
	r4 = D(r4, s[0][0][2], 0x170329FF, 0x02FCFE0E, 0x06F411FB, 0xFAFCD606);
	r5 = D(r5, s[0][0][2], 0x06001501, 0x00F70804, 0xFEF715FB, 0xF50305F6);
	r6 = D(r6, s[0][0][2], 0xF603CBF7, 0x0F0A1400, 0x1401EC08, 0x0F0908F4);
	r7 = D(r7, s[0][0][2], 0x0016F509, 0x0D0116FC, 0x02F50CF9, 0x17040B01);
	r0 = D(r0, s[0][1][0], 0x00030AE1, 0x301304FC, 0x0AE913E7, 0xF30E1702);
	r1 = D(r1, s[0][1][0], 0xFDFE010E, 0x05FB0701, 0xF80A1209, 0xF9FA0702);
	r2 = D(r2, s[0][1][0], 0xC22408C0, 0xFCF8FCFE, 0xFEF50A11, 0x06000DF3);
	r3 = D(r3, s[0][1][0], 0x03030DFF, 0x01F3080D, 0x3408F2F9, 0x15151FDB);
	r4 = D(r4, s[0][1][0], 0x10FA2AFA, 0x11EE1DBA, 0xFD0F03F7, 0x060203FE);
	r5 = D(r5, s[0][1][0], 0x08FF0CF7, 0x1B03E804, 0xEF212614, 0xF8FD0601);
	r6 = D(r6, s[0][1][0], 0xFEFEF600, 0xF510B40A, 0xD9190204, 0x15F30906);
	r7 = D(r7, s[0][1][0], 0xFFFB06F4, 0x1705FD01, 0x00E903FB, 0x08EB1512);
	r0 = D(r0, s[0][1][1], 0xF6E3E9ED, 0xC1F4B0ED, 0xFDFF13F7, 0xE010C3F9);
	r1 = D(r1, s[0][1][1], 0x07FF15F0, 0xF5040FFE, 0xFC181211, 0x1BEAFC09);
	r2 = D(r2, s[0][1][1], 0xCC0FDBEB, 0x040B21EE, 0x0A0116EB, 0x15FA17D9);
	r3 = D(r3, s[0][1][1], 0xFA0DF6E6, 0xFC221905, 0xF10DA712, 0xABF89CF6);
	r4 = D(r4, s[0][1][1], 0x15F9ADF7, 0x02FA0DF7, 0xF70110FC, 0x00FA17FD);
	r5 = D(r5, s[0][1][1], 0xF0ECFB10, 0x061009E3, 0xD6D6C4ED, 0xF8EAF514);
	r6 = D(r6, s[0][1][1], 0xF7FC1011, 0x0AF5FC15, 0xE9192401, 0x0E139FE2);
	r7 = D(r7, s[0][1][1], 0x0D18301C, 0x2FEE14DD, 0xF5080BF0, 0x0DFFE337);
	r0 = D(r0, s[0][1][2], 0xE90AE903, 0x2FEDEC1D, 0xFFFD1100, 0x11F80D1D);
	r1 = D(r1, s[0][1][2], 0x06FD1E02, 0x05FA0A02, 0xEAF381F7, 0x0A0821F2);
	r2 = D(r2, s[0][1][2], 0xC800D31B, 0x06EAFE08, 0x05F92105, 0xF4FA1C0F);
	r3 = D(r3, s[0][1][2], 0x05F2EA0A, 0x02F406FF, 0x36FCB111, 0x03030C19);
	r4 = D(r4, s[0][1][2], 0x1109F7F6, 0xF30028FB, 0x060806FE, 0xFCF223F0);
	r5 = D(r5, s[0][1][2], 0xFDFAE7FB, 0x0AF5220B, 0x09031404, 0x13FBF5FD);
	r6 = D(r6, s[0][1][2], 0x0706D200, 0x010C1DEF, 0xF70504F7, 0x0A0AFC06);
	r7 = D(r7, s[0][1][2], 0xCCEEF707, 0xFFF32204, 0x09F70FFF, 0x05F734F3);
	r0 = D(r0, s[0][2][0], 0xEBFF1102, 0x1DDDFBEC, 0xFDFB07F3, 0x0105011A);
	r1 = D(r1, s[0][2][0], 0x04F7FDFA, 0xF9FC0012, 0xF1FB0218, 0x1107E8DF);
	r2 = D(r2, s[0][2][0], 0xE012F80C, 0x06FDFB03, 0x07FEFF0E, 0xF107EE18);
	r3 = D(r3, s[0][2][0], 0xF7FFEF02, 0xF103141B, 0x1D053EE5, 0x0116E525);
	r4 = D(r4, s[0][2][0], 0xFA13F6F3, 0xDA0B070F, 0x04F90CFA, 0x04FC0409);
	r5 = D(r5, s[0][2][0], 0xFCFF1501, 0x00FEF813, 0x0D0A1234, 0xF9010BF7);
	r6 = D(r6, s[0][2][0], 0xFE07E408, 0xE10AEDF0, 0xDFEF16FD, 0x07082002);
	r7 = D(r7, s[0][2][0], 0xFE04150C, 0x120905FD, 0x07FE0DFE, 0xEEFFFD15);
	r0 = D(r0, s[0][2][1], 0xF6162202, 0xF007080F, 0x01FD14FD, 0x0AFB09F6);
	r1 = D(r1, s[0][2][1], 0x14F61109, 0x02FE0706, 0x16140418, 0x0E1E0EE3);
	r2 = D(r2, s[0][2][1], 0x0CEA10F8, 0x0404FF17, 0x07F6FEF4, 0xE70EFF16);
	r3 = D(r3, s[0][2][1], 0xFCFF1101, 0xF50C0014, 0x180808FC, 0xA8072F1C);
	r4 = D(r4, s[0][2][1], 0x320003DE, 0xEF070104, 0x12F6F8F4, 0xFD04020B);
	r5 = D(r5, s[0][2][1], 0x09090A03, 0x02F71200, 0xE705F4F2, 0x07FEFB1B);
	r6 = D(r6, s[0][2][1], 0x0407D80C, 0x10050809, 0xD4E6D4FD, 0x36FF21FC);
	r7 = D(r7, s[0][2][1], 0xE6F6F3F0, 0xF00B0210, 0x03FC1B06, 0x0101001A);
	r0 = D(r0, s[0][2][2], 0xD0FA1107, 0x28053806, 0x02FD0901, 0xF1040DFA);
	r1 = D(r1, s[0][2][2], 0xF6FC20FF, 0xEE03F8F3, 0xD5021EEC, 0x2BFE2406);
	r2 = D(r2, s[0][2][2], 0xF7F74509, 0xE80EF7F4, 0xFB030C03, 0xF008EA01);
	r3 = D(r3, s[0][2][2], 0xFAFC2AFF, 0x06040FF9, 0x00FC0601, 0x14F7EDF1);
	r4 = D(r4, s[0][2][2], 0x0FFC230A, 0xEE06F90D, 0xFCFBFC05, 0xFF010DF9);
	r5 = D(r5, s[0][2][2], 0x09F917F6, 0xF5FF0EFF, 0xFFFC09FB, 0xE703F0F8);
	r6 = D(r6, s[0][2][2], 0xFDFED1FA, 0xFDFF0AFE, 0xFB000D04, 0xF5FF2108);
	r7 = D(r7, s[0][2][2], 0x0AFA0302, 0x0205EF00, 0xFEF703F8, 0x01F6F8F2);
	r0 = D(r0, s[1][0][0], 0x00FAF8FB, 0xED0DF8FD, 0x04F9030B, 0xF0FDDB0C);
	r1 = D(r1, s[1][0][0], 0x0400FC06, 0xFA05FF00, 0xEA10F207, 0x0503FEFD);
	r2 = D(r2, s[1][0][0], 0xFA13F01C, 0x07FC09FC, 0xFEFD0003, 0xFF08030D);
	r3 = D(r3, s[1][0][0], 0xFA040807, 0x02FAFD00, 0x1E060610, 0xFEFEF209);
	r4 = D(r4, s[1][0][0], 0x01030FEF, 0xE6FBF715, 0x0105FCFC, 0xF8F8FA0C);
	r5 = D(r5, s[1][0][0], 0xFCFAEF04, 0x01FF0CF8, 0xF4FCD90F, 0x0304F701);
	r6 = D(r6, s[1][0][0], 0xFE030A0B, 0xFC0A0005, 0xFFFF0A04, 0x120CD801);
	r7 = D(r7, s[1][0][0], 0x0100F114, 0xFD070BF9, 0xF4080203, 0xFD0BFD04);
	r0 = D(r0, s[1][0][1], 0x0D030201, 0xF71DFE14, 0xF8FAF807, 0xF70DFBF9);
	r1 = D(r1, s[1][0][1], 0x0803FC05, 0xF8FDFAF8, 0xF10EF400, 0xFDFAF5F9);
	r2 = D(r2, s[1][0][1], 0x0006AB15, 0xF8F80303, 0x12FDF410, 0x0D00DE13);
	r3 = D(r3, s[1][0][1], 0x0BF003FF, 0xFF02FD09, 0x110FC9F8, 0xE2200707);
	r4 = D(r4, s[1][0][1], 0x1505EDF2, 0x08EFFE10, 0x05FDFDFD, 0x1601CF18);
	r5 = D(r5, s[1][0][1], 0xFF0AEBFB, 0xF3F1FC1E, 0xF12305F9, 0x0900EFFA);
	r6 = D(r6, s[1][0][1], 0x12100103, 0x010702FE, 0x02040E04, 0x0E0BC0FB);
	r7 = D(r7, s[1][0][1], 0xF2FBD812, 0x01E7E90E, 0x06080507, 0x090DFF05);
	r0 = D(r0, s[1][0][2], 0x00FB0CFF, 0xEB1DECE7, 0xFDF7FB06, 0x0E210602);
	r1 = D(r1, s[1][0][2], 0xFDF8FE09, 0xFC02FEFC, 0xFD0305FA, 0xF709FDF1);
	r2 = D(r2, s[1][0][2], 0x100E0EEE, 0xFB03EF04, 0xFE05FE05, 0x0BFD00F2);
	r3 = D(r3, s[1][0][2], 0xFBFD0402, 0x0400FC03, 0xE7F79903, 0xF21EF800);
	r4 = D(r4, s[1][0][2], 0xF004FAF2, 0x04FFFEFD, 0x010909FD, 0xF314F9F2);
	r5 = D(r5, s[1][0][2], 0x0301FCFC, 0x02010A01, 0x030601FB, 0xFF060200);
	r6 = D(r6, s[1][0][2], 0x0309F9FC, 0xF7FC0504, 0xFC040506, 0x051300F3);
	r7 = D(r7, s[1][0][2], 0x0E09E0F6, 0xF310FC03, 0x08060903, 0xE70103FD);
	r0 = D(r0, s[1][1][0], 0xF80BF3FF, 0xE7370806, 0x11FE012F, 0x0417FEF6);
	r1 = D(r1, s[1][1][0], 0xF9FFFE0D, 0xFCFDFAFD, 0xF003F214, 0xF40310F6);
	r2 = D(r2, s[1][1][0], 0x0BFBF20C, 0x07FD02F7, 0xFFFDFB18, 0x0C021309);
	r3 = D(r3, s[1][1][0], 0x0003F609, 0x0409FE12, 0xD3FBAFF3, 0x051FF4EA);
	r4 = D(r4, s[1][1][0], 0x060AA704, 0x180C101F, 0x0606F9FF, 0xFD09F9F6);
	r5 = D(r5, s[1][1][0], 0xF402F205, 0xF40806FE, 0xF802D510, 0x0305F7F9);
	r6 = D(r6, s[1][1][0], 0x00020408, 0x1512E41B, 0x0E09D817, 0xF00EEEE6);
	r7 = D(r7, s[1][1][0], 0xFF0A0606, 0x01FEF009, 0x00FEFB11, 0x0201EF09);
	r0 = D(r0, s[1][1][1], 0x1F01DB09, 0x0E1FDEF2, 0xFFEBFE01, 0x1505FCFF);
	r1 = D(r1, s[1][1][1], 0xF5F8FFFF, 0x0A0CF40C, 0x0C24D713, 0xFC0103F5);
	r2 = D(r2, s[1][1][1], 0x0710BEFA, 0xFCF1ED04, 0x03F9080B, 0xFF110A0A);
	r3 = D(r3, s[1][1][1], 0x16080BE9, 0xE5090203, 0x0806DEFA, 0xF709F6F1);
	r4 = D(r4, s[1][1][1], 0xFC06E405, 0x250F0008, 0x2CFBE5FD, 0xFB0506FF);
	r5 = D(r5, s[1][1][1], 0x0704F116, 0x0801FC18, 0xF614F2F3, 0x0402FAFB);
	r6 = D(r6, s[1][1][1], 0x0FF6FC16, 0xEB291007, 0xFD06FA16, 0xE71908F1);
	r7 = D(r7, s[1][1][1], 0x0915EC13, 0x1F161505, 0x1DF60A13, 0x1A1F1709);
	r0 = D(r0, s[1][1][2], 0x1CF8FC08, 0x07FF1F1C, 0x00F9FA08, 0xFB120A09);
	r1 = D(r1, s[1][1][2], 0x03F7FB15, 0xF7FE01F7, 0xFE0DF1F2, 0xF1FF000D);
	r2 = D(r2, s[1][1][2], 0xF8FF05FD, 0x14FCF2F3, 0x09FD0710, 0x12F20101);
	r3 = D(r3, s[1][1][2], 0xFCF90405, 0x03090109, 0x040C0606, 0xFA03102B);
	r4 = D(r4, s[1][1][2], 0xF61F1E09, 0x11FFFEF3, 0x05020709, 0x090DFE08);
	r5 = D(r5, s[1][1][2], 0xF404FB0C, 0xF9120F08, 0xFB040606, 0x1109F6F8);
	r6 = D(r6, s[1][1][2], 0x0301FB02, 0xF9F1F5F7, 0xF10FFD03, 0xE8FC1704);
	r7 = D(r7, s[1][1][2], 0xFA08F80A, 0x020402F4, 0xF3FF05FE, 0xECFAF8FA);
	r0 = D(r0, s[1][2][0], 0x00FDF90C, 0xF90E1014, 0xFEF8F403, 0xFE1BEFF7);
	r1 = D(r1, s[1][2][0], 0x00FFFD0D, 0x04FB0001, 0xF7F2F90F, 0xFE00EEFF);
	r2 = D(r2, s[1][2][0], 0x040B11EE, 0x070202F5, 0xFE070107, 0xFB05FAFE);
	r3 = D(r3, s[1][2][0], 0x0701F9FF, 0xFEFDF80D, 0x151C2B0F, 0xFB2002DF);
	r4 = D(r4, s[1][2][0], 0xF82110FA, 0x000700F2, 0xFFFCF8FD, 0x0209FAFD);
	r5 = D(r5, s[1][2][0], 0x02060405, 0x00FE0002, 0xFFFBF503, 0x01FFFDFC);
	r6 = D(r6, s[1][2][0], 0xFA01F40A, 0x0DFEFBFE, 0x0F03E5EE, 0xFA0C1012);
	r7 = D(r7, s[1][2][0], 0x040AFCFA, 0xFD06FF02, 0x05060908, 0x02FE00F8);
	r0 = D(r0, s[1][2][1], 0x0108EE01, 0xFA0FE4D5, 0xFFF7F50F, 0xFF270C16);
	r1 = D(r1, s[1][2][1], 0x05F9F51C, 0xF503FEFC, 0xF524F9F6, 0x0611F01F);
	r2 = D(r2, s[1][2][1], 0xFB080613, 0xF702F607, 0xFCFD0211, 0xF601F8FA);
	r3 = D(r3, s[1][2][1], 0xFFFE020E, 0xF30FFF03, 0x090AFB0C, 0x1DF10AEC);
	r4 = D(r4, s[1][2][1], 0x061F1705, 0xE90302F3, 0xFE03F5EC, 0x0801F5F6);
	r5 = D(r5, s[1][2][1], 0x00070507, 0x0C050EF9, 0xF4080E05, 0xF404F9F7);
	r6 = D(r6, s[1][2][1], 0x0306F1FF, 0xF7040C02, 0x1A0CFAED, 0x0000070E);
	r7 = D(r7, s[1][2][1], 0x010503F9, 0xF401F1FD, 0x06061207, 0x05120DFC);
	r0 = D(r0, s[1][2][2], 0x0409F9FA, 0x0D271517, 0x01F9F807, 0xF9FAF304);
	r1 = D(r1, s[1][2][2], 0x00FFF80B, 0xF407FCF7, 0xFC1C04F9, 0x01160E09);
	r2 = D(r2, s[1][2][2], 0x060B13FF, 0xF50EFFFE, 0xFEEFFC04, 0xF012FEF7);
	r3 = D(r3, s[1][2][2], 0xFC06FBFC, 0xFEFE0006, 0x00E8F5F8, 0x030AFF01);
	r4 = D(r4, s[1][2][2], 0xFFF20E05, 0xFB0107FD, 0x0FFB03FE, 0xFE060BF7);
	r5 = D(r5, s[1][2][2], 0xFA090A0A, 0xFD1004FD, 0xFF17FDFC, 0xFD0A0801);
	r6 = D(r6, s[1][2][2], 0x040501FF, 0x0404F9F8, 0x0DF204F4, 0xFFFCFF05);
	r7 = D(r7, s[1][2][2], 0x000E05FD, 0xF60BFBFF, 0xFE00FF03, 0xFD05FFFF);
	s[0][0][0] = G[6][xy.y+0][xy.x+0]; s[0][0][1] = G[6][xy.y+0][xy.x+1];
	s[0][0][2] = G[6][xy.y+0][xy.x+2]; s[0][1][0] = G[6][xy.y+1][xy.x+0];
	s[0][1][1] = G[6][xy.y+1][xy.x+1]; s[0][1][2] = G[6][xy.y+1][xy.x+2];
	s[0][2][0] = G[6][xy.y+2][xy.x+0]; s[0][2][1] = G[6][xy.y+2][xy.x+1];
	s[0][2][2] = G[6][xy.y+2][xy.x+2]; s[1][0][0] = G[7][xy.y+0][xy.x+0];
	s[1][0][1] = G[7][xy.y+0][xy.x+1]; s[1][0][2] = G[7][xy.y+0][xy.x+2];
	s[1][1][0] = G[7][xy.y+1][xy.x+0]; s[1][1][1] = G[7][xy.y+1][xy.x+1];
	s[1][1][2] = G[7][xy.y+1][xy.x+2]; s[1][2][0] = G[7][xy.y+2][xy.x+0];
	s[1][2][1] = G[7][xy.y+2][xy.x+1]; s[1][2][2] = G[7][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x0100E900, 0x0EE8DABF, 0xF008FBFB, 0x11EC031B);
	r1 = D(r1, s[0][0][0], 0xFF05F0FA, 0xFD01FCFC, 0xF2070922, 0x0F09E4F7);
	r2 = D(r2, s[0][0][0], 0x07B00409, 0x01F6F2F5, 0xF6FAFB10, 0xED090C09);
	r3 = D(r3, s[0][0][0], 0xF801F0F1, 0xF90001FF, 0xF0EA080E, 0xF8080909);
	r4 = D(r4, s[0][0][0], 0x15EBCCF6, 0x10C4FB1E, 0x07F3FA02, 0x0005FC12);
	r5 = D(r5, s[0][0][0], 0x0402FE10, 0xFFFBF4FE, 0x05F4090A, 0x03FEFE06);
	r6 = D(r6, s[0][0][0], 0xF004080D, 0xF9EB02FC, 0x06F0FFF4, 0x13DDEF16);
	r7 = D(r7, s[0][0][0], 0xF50BF5D9, 0xF405F500, 0x05FA0309, 0x01070CF9);
	r0 = D(r0, s[0][0][1], 0x14F1E80C, 0x0FC4FB09, 0xFA02F8F4, 0xF5F404ED);
	r1 = D(r1, s[0][0][1], 0xFEFEF903, 0x0700FEF9, 0x0AE8FCEB, 0x06FAE912);
	r2 = D(r2, s[0][0][1], 0x04E1F7EE, 0xF9030704, 0xFFFD0301, 0xD0EB0C03);
	r3 = D(r3, s[0][0][1], 0x07E9FE07, 0xF1FD0604, 0x06D71522, 0x03D2142B);
	r4 = D(r4, s[0][0][1], 0x03D1E420, 0xF9EF070F, 0x03F9FB03, 0xFFDC0708);
	r5 = D(r5, s[0][0][1], 0xFF020503, 0xF20302F2, 0x09E21914, 0x12F70604);
	r6 = D(r6, s[0][0][1], 0xF7FCFC0B, 0xEAFEE9FA, 0xF2FB08EA, 0x01F9F81D);
	r7 = D(r7, s[0][0][1], 0x1CEA0DE9, 0x08EFFC06, 0xEBFC02FC, 0x09D6EFF6);
	r0 = D(r0, s[0][0][2], 0xF000FFF9, 0xF8F0E71D, 0xFE05FAF4, 0xFB01F305);
	r1 = D(r1, s[0][0][2], 0xFB02FBF1, 0xFF09FC05, 0x0AE70012, 0xFBFBF507);
	r2 = D(r2, s[0][0][2], 0x06D100E2, 0x03F700FE, 0x00F90201, 0xF0F316F5);
	r3 = D(r3, s[0][0][2], 0x06F6FDFE, 0xFCFD00F8, 0xFB081ED0, 0x00C4E704);
	r4 = D(r4, s[0][0][2], 0xEEE7EC1F, 0x03E60504, 0xFBF80102, 0xFCDD0805);
	r5 = D(r5, s[0][0][2], 0x01F7FE03, 0xF9EC0000, 0x0CF800FB, 0x06FD04FE);
	r6 = D(r6, s[0][0][2], 0x03FBFB07, 0x00F90DF9, 0x080106EF, 0xFDECFE1D);
	r7 = D(r7, s[0][0][2], 0xF6FA0BFC, 0xFCF1F714, 0xFEFC0507, 0xFAF6FE08);
	r0 = D(r0, s[0][1][0], 0xF60313FF, 0xF7F70DC7, 0xE5FDE4F5, 0x05F8FBF7);
	r1 = D(r1, s[0][1][0], 0xF606E0DA, 0xF404020F, 0xEA06FD2C, 0xFDFE010D);
	r2 = D(r2, s[0][1][0], 0x0C14F91F, 0x0405EDF1, 0xF8080902, 0x1A01FAF2);
	r3 = D(r3, s[0][1][0], 0xF0F714FD, 0xF9091F0E, 0x0BEEBE30, 0x03EDEF01);
	r4 = D(r4, s[0][1][0], 0x01C93119, 0xF80129E1, 0x06F3FD15, 0x0CE3010B);
	r5 = D(r5, s[0][1][0], 0xF703F80F, 0x04000402, 0xFA0A0908, 0xFDFAFC06);
	r6 = D(r6, s[0][1][0], 0xF5FD0FFA, 0xFFFE0114, 0x1301EC1E, 0x02EE112F);
	r7 = D(r7, s[0][1][0], 0x0CE513F6, 0x03051318, 0x00ECF111, 0x01FE1906);
	r0 = D(r0, s[0][1][1], 0x03E21100, 0xEFD9281F, 0xFB09F6F1, 0xE8EE0D0A);
	r1 = D(r1, s[0][1][1], 0x0004FBF2, 0x09080906, 0x26FD06CD, 0xF6E9EFF1);
	r2 = D(r2, s[0][1][1], 0xE2EB022B, 0x01061A0D, 0xFE040B0C, 0x060015DF);
	r3 = D(r3, s[0][1][1], 0x07EF0A04, 0x0D0600FB, 0x0401EA01, 0xEAD82E0C);
	r4 = D(r4, s[0][1][1], 0x05E4151A, 0xD9D812D0, 0x1EE70E06, 0xF7060E08);
	r5 = D(r5, s[0][1][1], 0xF5F90600, 0x00ED1811, 0x08DA2A15, 0x11F90808);
	r6 = D(r6, s[0][1][1], 0xEF03EBFA, 0xFCC8E7FA, 0x00C9E910, 0xF1DB0D1C);
	r7 = D(r7, s[0][1][1], 0xDFFF0BFC, 0x06EB1C0A, 0xDB02FF13, 0x04FEE8F3);
	r0 = D(r0, s[0][1][2], 0xFCDB07F7, 0xFD08D1DC, 0xFA05F3F8, 0x0AF3F6F0);
	r1 = D(r1, s[0][1][2], 0xF206FAF7, 0xFC030A01, 0xEFD81502, 0xF3E5FB15);
	r2 = D(r2, s[0][1][2], 0xF9FB0638, 0xF9E30B08, 0xF7F900F1, 0xFE160DC9);
	r3 = D(r3, s[0][1][2], 0x03FF02EE, 0xFBF2F920, 0xDEFCF3F0, 0x130BEADD);
	r4 = D(r4, s[0][1][2], 0xEADA0E1B, 0xFCFF14D8, 0x03ED0305, 0xFDEC0AFE);
	r5 = D(r5, s[0][1][2], 0xFD0005F7, 0xF8DF01F4, 0x07EFFCF9, 0x0DF70516);
	r6 = D(r6, s[0][1][2], 0x02050904, 0x060A0FFB, 0x02F7F51B, 0xF7ED0614);
	r7 = D(r7, s[0][1][2], 0x08F1060A, 0xFFD90803, 0x04EBFE0B, 0x01F9F609);
	r0 = D(r0, s[0][2][0], 0x010B06FE, 0x09141D06, 0xFD0EECFA, 0x0EFC0700);
	r1 = D(r1, s[0][2][0], 0xFE06F4F7, 0xFD05FB0E, 0xFC0D0032, 0x0CF0F315);
	r2 = D(r2, s[0][2][0], 0x0BF1F7D8, 0xFF01ECFC, 0xFC01EDFB, 0x0710EFF5);
	r3 = D(r3, s[0][2][0], 0xFE0CFA04, 0xF9FFF502, 0xE60411F9, 0x0F260907);
	r4 = D(r4, s[0][2][0], 0xFD04FE12, 0x1307EBF9, 0xFE000612, 0x0901060B);
	r5 = D(r5, s[0][2][0], 0xF9FDF200, 0x0104EE08, 0xFBF90516, 0x01FF0009);
	r6 = D(r6, s[0][2][0], 0x060D0A12, 0xF9F603FF, 0xFECF14F6, 0xF90AF0FD);
	r7 = D(r7, s[0][2][0], 0x0406F1EB, 0x0502E101, 0xF7FA0203, 0x09031F0B);
	r0 = D(r0, s[0][2][1], 0x030310F1, 0x0DEE0A18, 0xF80EEF01, 0xFA0C01F2);
	r1 = D(r1, s[0][2][1], 0xF50EF9FD, 0x03EF11FC, 0x04E704CF, 0xF9E8171E);
	r2 = D(r2, s[0][2][1], 0x16F304DA, 0x0EFE0512, 0x0602FAF1, 0x00FCDC14);
	r3 = D(r3, s[0][2][1], 0x0106F700, 0x0904F40C, 0x0DF718FC, 0x190C2C0E);
	r4 = D(r4, s[0][2][1], 0xFDF111DA, 0x0EF8FC0D, 0x0BED0F0C, 0xF5FDFF06);
	r5 = D(r5, s[0][2][1], 0xF50D07F7, 0x05FF0AFE, 0x07EC2C0B, 0x03F8040A);
	r6 = D(r6, s[0][2][1], 0x0406EE09, 0xFD03D8F9, 0xF9BF17E7, 0x0A0FFCEE);
	r7 = D(r7, s[0][2][1], 0x13F8010B, 0x0301E70D, 0xFBF504FC, 0xFEF7E6DF);
	r0 = D(r0, s[0][2][2], 0x02F306F9, 0xE0B9ECE2, 0xFB07F102, 0x0502FE06);
	r1 = D(r1, s[0][2][2], 0xFB0AF903, 0xFCF90500, 0xFADBFC05, 0xF5C508F3);
	r2 = D(r2, s[0][2][2], 0xF2F926ED, 0xFBFB0006, 0xFD08FC03, 0xFFFFF006);
	r3 = D(r3, s[0][2][2], 0xFE02FBFC, 0xFC01F603, 0x00F714EF, 0xFB03E70A);
	r4 = D(r4, s[0][2][2], 0x08FA0CF7, 0xFC100AF2, 0xFFEE0105, 0x03090107);
	r5 = D(r5, s[0][2][2], 0xFE010AF8, 0x07F8FC00, 0xFAF3FCFE, 0x04F40406);
	r6 = D(r6, s[0][2][2], 0x030C03FB, 0x0202FCFA, 0xFBDC0EF6, 0x070DF802);
	r7 = D(r7, s[0][2][2], 0xF80709EE, 0x060DF802, 0x08F90501, 0x0402000E);
	r0 = D(r0, s[1][0][0], 0xFFFEFE01, 0xFAC8E80C, 0x02FC1901, 0xFFE9E505);
	r1 = D(r1, s[1][0][0], 0x00FD0D04, 0x01FCFA02, 0x06EFF2FE, 0x01060004);
	r2 = D(r2, s[1][0][0], 0x04FCC6F5, 0x050D07FF, 0x04FB09F8, 0x0CEBFCFE);
	r3 = D(r3, s[1][0][0], 0x00F70009, 0x04FC0403, 0x18F9E7ED, 0x06BFB6FD);
	r4 = D(r4, s[1][0][0], 0xEF120508, 0x0FF6F9FE, 0xFF06F703, 0xF9F3E90B);
	r5 = D(r5, s[1][0][0], 0x02FBF106, 0xFAFBFF01, 0x09E6F5FF, 0x0101F407);
	r6 = D(r6, s[1][0][0], 0x05FE0DFF, 0x0FEAF601, 0x060E04EF, 0x0002DF04);
	r7 = D(r7, s[1][0][0], 0x06DFE909, 0xFF000700, 0x0502F8FF, 0xFFEAEB00);
	r0 = D(r0, s[1][0][1], 0xF3090103, 0xF7F3EAF1, 0x0D010C08, 0x0600FEFB);
	r1 = D(r1, s[1][0][1], 0x04FC0B0B, 0x00FDFAFD, 0x10F5F6F5, 0xF304FFFD);
	r2 = D(r2, s[1][0][1], 0x1514EDEF, 0x03F4F9FE, 0x15F608FC, 0x29EFE5F3);
	r3 = D(r3, s[1][0][1], 0xFBFEF408, 0x0D040E02, 0x0E34CC09, 0x20F3F108);
	r4 = D(r4, s[1][0][1], 0xD8FFF4EF, 0x1017F9F2, 0xFF07FFFE, 0x18F8DFE2);
	r5 = D(r5, s[1][0][1], 0x0700FAFC, 0x0BF0FB0F, 0x13EFEE02, 0xFA05F603);
	r6 = D(r6, s[1][0][1], 0x10FE00FF, 0xFCF70CFD, 0x08030606, 0x0AFAE3E1);
	r7 = D(r7, s[1][0][1], 0x0CE4F5FC, 0x09FFFB08, 0x0005F704, 0x0DF0F0F8);
	r0 = D(r0, s[1][0][2], 0xFC080AFD, 0xF9000303, 0x07FD0802, 0xFC0002F3);
	r1 = D(r1, s[1][0][2], 0x03FD0800, 0x06EFF90A, 0x0708FD03, 0xF6F20704);
	r2 = D(r2, s[1][0][2], 0xF70CEEE6, 0x04F5FAFE, 0x0003FFFE, 0xFB1BE6FE);
	r3 = D(r3, s[1][0][2], 0xFDF8FB00, 0x08FD0304, 0x1D12CCDE, 0x13DBD7E1);
	r4 = D(r4, s[1][0][2], 0xE9010D05, 0xF912F804, 0x0304FC00, 0x01F8D60F);
	r5 = D(r5, s[1][0][2], 0xFFFA01FA, 0x01F9F4FC, 0xF70703FF, 0xFF00F702);
	r6 = D(r6, s[1][0][2], 0x0BFA09FF, 0x0407F808, 0x05FB0007, 0xFB1608FD);
	r7 = D(r7, s[1][0][2], 0xF9F4F000, 0xF3FDFC01, 0x0301FAF7, 0x05020506);
	r0 = D(r0, s[1][1][0], 0x03E2F6FB, 0xF186E605, 0x09F90701, 0xF4F0F304);
	r1 = D(r1, s[1][1][0], 0x05FEFF06, 0xFFF4F802, 0x08D6F111, 0xFC0206FF);
	r2 = D(r2, s[1][1][0], 0x0CFCE400, 0xFF09FF03, 0x09FF0309, 0x0517EB03);
	r3 = D(r3, s[1][1][0], 0x0AF5000E, 0x14FC0900, 0x06EFC905, 0xF4AEE005);
	r4 = D(r4, s[1][1][0], 0x08F7EAFD, 0x0109BBED, 0xFFF5F503, 0x02FFEF08);
	r5 = D(r5, s[1][1][0], 0xFCECEE03, 0xFD02F806, 0xF4CDCFFF, 0x02F5F704);
	r6 = D(r6, s[1][1][0], 0x11FD0C03, 0x22E1F50D, 0x03ECE8FB, 0xF6F7FC19);
	r7 = D(r7, s[1][1][0], 0x0210F002, 0x09F2E009, 0x0CF7F217, 0x04E7E810);
	r0 = D(r0, s[1][1][1], 0x15EBF1E2, 0x0FE8F0C7, 0x00FE0216, 0x15FEDA0E);
	r1 = D(r1, s[1][1][1], 0x03F9FF05, 0xF9F3F1F7, 0x13C1D3D7, 0xFDFE1108);
	r2 = D(r2, s[1][1][1], 0x24F6F5EC, 0xFEF6EA08, 0x070AEDEF, 0xF50FE2D8);
	r3 = D(r3, s[1][1][1], 0x0FF6000D, 0xF0F2F408, 0x04EB090A, 0x13E9060A);
	r4 = D(r4, s[1][1][1], 0x2105EA00, 0x1009E4BD, 0x0405FCEF, 0xFD03FA02);
	r5 = D(r5, s[1][1][1], 0x1EF6EAFF, 0xFBE7FB21, 0x1F00EA07, 0x06F9F10B);
	r6 = D(r6, s[1][1][1], 0x17FBF802, 0x14D6F1E9, 0xFC0CFBF0, 0x160DCE23);
	r7 = D(r7, s[1][1][1], 0xE308E1F0, 0x0C03E6E3, 0x24FC04EA, 0x17D0D8D9);
	r0 = D(r0, s[1][1][2], 0x0FFDF5EE, 0x09F0F0EC, 0x0FFC07FE, 0x060400FC);
	r1 = D(r1, s[1][1][2], 0x0FFF0805, 0x0BF5F804, 0xF8FFEE0A, 0xF507FC11);
	r2 = D(r2, s[1][1][2], 0x2F36C5E2, 0x1400EB09, 0x0BF7FAF1, 0x0906E9F7);
	r3 = D(r3, s[1][1][2], 0x0E010BEE, 0x1A080007, 0x040BF1EB, 0x12EFD4DE);
	r4 = D(r4, s[1][1][2], 0x0C24EAF2, 0x100F00FD, 0x02FE03F4, 0x0F00EEEF);
	r5 = D(r5, s[1][1][2], 0xFC06F3FC, 0x16FDF4F9, 0xF701F2FB, 0x1A03F60A);
	r6 = D(r6, s[1][1][2], 0x02FBF310, 0xFA080713, 0xFA0E00FE, 0xF00AE3FE);
	r7 = D(r7, s[1][1][2], 0x15FCDFE9, 0x1712DF08, 0x000EF7FA, 0x01020019);
	r0 = D(r0, s[1][2][0], 0x07FCF502, 0xFCE7FFFD, 0x04FB0F04, 0xF903D503);
	r1 = D(r1, s[1][2][0], 0x02FF09F8, 0x04FAEE04, 0x06F1F801, 0x05FFF900);
	r2 = D(r2, s[1][2][0], 0x0D01DEF5, 0xFBFDF600, 0x0604F7FC, 0xFE05FF03);
	r3 = D(r3, s[1][2][0], 0x05F803FE, 0x11FA07FF, 0xFC0FE6F4, 0xF104B0E7);
	r4 = D(r4, s[1][2][0], 0xFAF2D803, 0x0600E802, 0x00F3F809, 0xFD00EFFF);
	r5 = D(r5, s[1][2][0], 0x0200E706, 0xF9FBF703, 0xF9FDF2FA, 0xFFFEF905);
	r6 = D(r6, s[1][2][0], 0x06FA0B04, 0x1902080D, 0x08EDF1F7, 0x0003F6F6);
	r7 = D(r7, s[1][2][0], 0xFBFFF705, 0x0203F9FE, 0xFDFEF504, 0x04F4EC02);
	r0 = D(r0, s[1][2][1], 0xFDFEF801, 0x0BE0F7EE, 0x06FF0901, 0xF8EDF4FE);
	r1 = D(r1, s[1][2][1], 0x0DF809FA, 0x02FBF4FF, 0x01F604E0, 0x0DFBF2E7);
	r2 = D(r2, s[1][2][1], 0xFB02E2E0, 0x03FEF705, 0xFC0101F6, 0x0AF80113);
	r3 = D(r3, s[1][2][1], 0x0401EA06, 0x08FFF9FD, 0x0129E9E6, 0x11E4EFFF);
	r4 = D(r4, s[1][2][1], 0x040BE2F5, 0xFDFFED12, 0x0401FD06, 0xFF01F600);
	r5 = D(r5, s[1][2][1], 0xFEFDF3F0, 0x04FEF201, 0x0D00EFF9, 0x0001ED04);
	r6 = D(r6, s[1][2][1], 0x0702FB08, 0x09F3EAFD, 0x1205FDE7, 0x050EF3F8);
	r7 = D(r7, s[1][2][1], 0x0504F70B, 0x0105FD10, 0x0606F8F2, 0xFD04EEF4);
	r0 = D(r0, s[1][2][2], 0xF5FFEDFF, 0x1100F2DE, 0x0C000800, 0x01070B01);
	r1 = D(r1, s[1][2][2], 0x090109FC, 0x0B02ED09, 0xFDFEDB0C, 0x130FF3E7);
	r2 = D(r2, s[1][2][2], 0x19FCBFEA, 0x04FFEF09, 0x0BFF0901, 0xF8FB0409);
	r3 = D(r3, s[1][2][2], 0x09FDFF02, 0x1300FF01, 0x0701ED00, 0x0BFBCEFF);
	r4 = D(r4, s[1][2][2], 0xFC0EEA03, 0xF207ECFD, 0xFC0AF709, 0x00FDEB06);
	r5 = D(r5, s[1][2][2], 0x0601F203, 0x0604F904, 0xEDFBF307, 0xFDFEF60A);
	r6 = D(r6, s[1][2][2], 0x07FC06F6, 0xF609080A, 0x020EF30B, 0xFDEFFF08);
	r7 = D(r7, s[1][2][2], 0xFBFCEBFC, 0xFEFDEF07, 0x0101FB0A, 0x000EF206);
	vec4 f0 = vec4(r0) * 6.20001240e-05;
	f0 += vec4(-1.875e-02, -1.635e-02, -3.528e-02, -1.484e-02);
	f0 = max(f0, vec4(0.0));
	imageStore(out_image, opos + ivec2(0, 0), f0);
	vec4 f1 = vec4(r1) * 6.20001240e-05;
	f1 += vec4(-2.008e-02, -1.874e-02, 1.737e-03, -1.605e-02);
	f1 = max(f1, vec4(0.0));
	imageStore(out_image, opos + ivec2(1, 0), f1);
	vec4 f2 = vec4(r2) * 6.20001240e-05;
	f2 += vec4(-5.869e-03, -8.746e-03, -1.888e-02, -3.160e-02);
	f2 = max(f2, vec4(0.0));
	imageStore(out_image, opos + ivec2(0, 1), f2);
	vec4 f3 = vec4(r3) * 6.20001240e-05;
	f3 += vec4(-3.616e-03, -1.679e-02, -4.103e-02, 2.099e-03);
	f3 = max(f3, vec4(0.0));
	imageStore(out_image, opos + ivec2(1, 1), f3);
	vec4 f4 = vec4(r4) * 6.20001240e-05;
	f4 += vec4(-2.367e-02, -2.814e-02, 3.107e-04, 1.369e-02);
	f4 = max(f4, vec4(0.0));
	imageStore(out_image, opos + ivec2(2, 0), f4);
	vec4 f5 = vec4(r5) * 6.20001240e-05;
	f5 += vec4(-1.336e-02, -4.107e-03, -1.203e-03, 2.582e-03);
	f5 = max(f5, vec4(0.0));
	imageStore(out_image, opos + ivec2(3, 0), f5);
	vec4 f6 = vec4(r6) * 6.20001240e-05;
	f6 += vec4(-2.513e-02, -1.769e-03, -1.205e-02, -8.155e-03);
	f6 = max(f6, vec4(0.0));
	imageStore(out_image, opos + ivec2(2, 1), f6);
	vec4 f7 = vec4(r7) * 6.20001240e-05;
	f7 += vec4(-2.370e-02, -5.137e-03, -5.075e-03, 9.955e-05);
	f7 = max(f7, vec4(0.0));
	imageStore(out_image, opos + ivec2(3, 1), f7);
}

//!DESC CuNNy-4x32-BILINEAR-TEST-out-shuffle
//!HOOK LUMA
//!COMPUTE 16 16 8 8
//!BIND conv4
//!BIND LUMA
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 1
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_spirv_intrinsics : require
#extension GL_EXT_control_flow_attributes : require
spirv_instruction (extensions = ["SPV_KHR_integer_dot_product"], capabilities = [6019, 6018], id = 4450)
int dp4(int a, int b, spirv_literal int fmt);
#define D(r, s, a, b, c, d) ivec4(r.x + dp4(s, a, 0), r.y + dp4(s, b, 0), r.z + dp4(s, c, 0), r.w + dp4(s, d, 0))
shared int G[8][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(2, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	[[unroll]] for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		[[unroll]] for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			vec4 r, g, b, a;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(4, 2) + ivec2(1, 1)) * conv4_pt;
			r = conv4_gather(p, 0);
			g = conv4_gather(p, 1);
			b = conv4_gather(p, 2);
			a = conv4_gather(p, 3);
			vec4 v0 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v1 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v2 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v3 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(4, 2) + ivec2(3, 1)) * conv4_pt;
			r = conv4_gather(p, 0);
			g = conv4_gather(p, 1);
			b = conv4_gather(p, 2);
			a = conv4_gather(p, 3);
			vec4 v4 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v5 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v6 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v7 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			G[0][ay][ax] = int(packSnorm4x8(v0));
			G[1][ay][ax] = int(packSnorm4x8(v1));
			G[2][ay][ax] = int(packSnorm4x8(v2));
			G[3][ay][ax] = int(packSnorm4x8(v3));
			G[4][ay][ax] = int(packSnorm4x8(v4));
			G[5][ay][ax] = int(packSnorm4x8(v5));
			G[6][ay][ax] = int(packSnorm4x8(v6));
			G[7][ay][ax] = int(packSnorm4x8(v7));
		}
	}
	barrier();
	int s[2][3][3];
	ivec4 r0 = ivec4(0);
	s[0][0][0] = G[0][xy.y+0][xy.x+0]; s[0][0][1] = G[0][xy.y+0][xy.x+1];
	s[0][0][2] = G[0][xy.y+0][xy.x+2]; s[0][1][0] = G[0][xy.y+1][xy.x+0];
	s[0][1][1] = G[0][xy.y+1][xy.x+1]; s[0][1][2] = G[0][xy.y+1][xy.x+2];
	s[0][2][0] = G[0][xy.y+2][xy.x+0]; s[0][2][1] = G[0][xy.y+2][xy.x+1];
	s[0][2][2] = G[0][xy.y+2][xy.x+2]; s[1][0][0] = G[1][xy.y+0][xy.x+0];
	s[1][0][1] = G[1][xy.y+0][xy.x+1]; s[1][0][2] = G[1][xy.y+0][xy.x+2];
	s[1][1][0] = G[1][xy.y+1][xy.x+0]; s[1][1][1] = G[1][xy.y+1][xy.x+1];
	s[1][1][2] = G[1][xy.y+1][xy.x+2]; s[1][2][0] = G[1][xy.y+2][xy.x+0];
	s[1][2][1] = G[1][xy.y+2][xy.x+1]; s[1][2][2] = G[1][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xFD000CF7, 0x0000FBFF, 0x00000303, 0x01000002);
	r0 = D(r0, s[0][0][1], 0x0700F601, 0x0401FEF4, 0x0401020A, 0xFF00FA08);
	r0 = D(r0, s[0][0][2], 0x03FEFF00, 0xF6FE0A05, 0x0103FEFF, 0xFF030302);
	r0 = D(r0, s[0][1][0], 0x0603FB0E, 0xFC01FA00, 0xFD020903, 0xFD00F702);
	r0 = D(r0, s[0][1][1], 0xE702F101, 0x0E061814, 0xF800E7ED, 0x110512F0);
	r0 = D(r0, s[0][1][2], 0x0CF60A02, 0xFDF6F3FE, 0x0CF40601, 0xEEF403FD);
	r0 = D(r0, s[0][2][0], 0x0100FDFE, 0x010002FF, 0x0801F9FF, 0xFF0001FD);
	r0 = D(r0, s[0][2][1], 0x010206FF, 0xFC01FFFD, 0xF2030404, 0xFF030906);
	r0 = D(r0, s[0][2][2], 0xFE030100, 0x0504FB00, 0x02000500, 0x0A00F2FF);
	r0 = D(r0, s[1][0][0], 0x02FDF8FE, 0xFF05FCFF, 0x03FFFF00, 0xFF020001);
	r0 = D(r0, s[1][0][1], 0xF10F0800, 0xF9F302FE, 0x080500FB, 0x0CFDFFFD);
	r0 = D(r0, s[1][0][2], 0x00FD0002, 0xFA010201, 0x01FF0000, 0x01FFFFFD);
	r0 = D(r0, s[1][1][0], 0xFE03F7FC, 0x0004FBFB, 0xF9FFF4FC, 0x0106F8FB);
	r0 = D(r0, s[1][1][1], 0x0809090B, 0x03F10406, 0xFE120F0C, 0xF0E90706);
	r0 = D(r0, s[1][1][2], 0xFFFD0004, 0x02040109, 0x01FB0005, 0x0604030A);
	r0 = D(r0, s[1][2][0], 0x01010000, 0x00000101, 0x0002FDFF, 0x000100FF);
	r0 = D(r0, s[1][2][1], 0x0000FFFD, 0x00FFFFFD, 0x00020101, 0x01FCFEFF);
	r0 = D(r0, s[1][2][2], 0x000000FF, 0x00FF00FE, 0xFFFF0000, 0x00010001);
	s[0][0][0] = G[2][xy.y+0][xy.x+0]; s[0][0][1] = G[2][xy.y+0][xy.x+1];
	s[0][0][2] = G[2][xy.y+0][xy.x+2]; s[0][1][0] = G[2][xy.y+1][xy.x+0];
	s[0][1][1] = G[2][xy.y+1][xy.x+1]; s[0][1][2] = G[2][xy.y+1][xy.x+2];
	s[0][2][0] = G[2][xy.y+2][xy.x+0]; s[0][2][1] = G[2][xy.y+2][xy.x+1];
	s[0][2][2] = G[2][xy.y+2][xy.x+2]; s[1][0][0] = G[3][xy.y+0][xy.x+0];
	s[1][0][1] = G[3][xy.y+0][xy.x+1]; s[1][0][2] = G[3][xy.y+0][xy.x+2];
	s[1][1][0] = G[3][xy.y+1][xy.x+0]; s[1][1][1] = G[3][xy.y+1][xy.x+1];
	s[1][1][2] = G[3][xy.y+1][xy.x+2]; s[1][2][0] = G[3][xy.y+2][xy.x+0];
	s[1][2][1] = G[3][xy.y+2][xy.x+1]; s[1][2][2] = G[3][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xFF01F809, 0x0000FD07, 0x0000FFF7, 0x0000FFF9);
	r0 = D(r0, s[0][0][1], 0x000200FF, 0xFF03FF03, 0x01FFFEFE, 0x01FFFEFB);
	r0 = D(r0, s[0][0][2], 0x0000FFFF, 0x0000FFFE, 0x000000FE, 0x000000FE);
	r0 = D(r0, s[0][1][0], 0x03030FEB, 0xFF01F4F5, 0xFF03FC12, 0x0000F605);
	r0 = D(r0, s[0][1][1], 0x0309FBEC, 0x080813E7, 0xF90BFE16, 0xFA0B0B1A);
	r0 = D(r0, s[0][1][2], 0xFF0100FB, 0xFE04FFF4, 0x0001000A, 0xFD04FD10);
	r0 = D(r0, s[0][2][0], 0xFBFE0202, 0x010000FF, 0x01FD0F03, 0x01FFFD05);
	r0 = D(r0, s[0][2][1], 0xF2FAFE0C, 0xF1F9FF09, 0x12F7FCF8, 0x0BF908FD);
	r0 = D(r0, s[0][2][2], 0xFE000007, 0xFBFFFF0C, 0x02FFFFFA, 0x0AFBFFF6);
	r0 = D(r0, s[1][0][0], 0x00FD0302, 0xFBFC01FF, 0x01FD0100, 0xFD000000);
	r0 = D(r0, s[1][0][1], 0xEC0507FE, 0x16010703, 0xF4FC0300, 0x0FFC0301);
	r0 = D(r0, s[1][0][2], 0x0D030001, 0xF70702FE, 0x09FE0001, 0xFBFC0100);
	r0 = D(r0, s[1][1][0], 0xFFF50105, 0xFDFEFF00, 0xFE100304, 0xFC090000);
	r0 = D(r0, s[1][1][1], 0xEFEC0308, 0x16EB050E, 0xEC0D0702, 0x16130709);
	r0 = D(r0, s[1][1][2], 0x0CFF00FD, 0xFAF700FC, 0x0B0000FF, 0xF80301FC);
	r0 = D(r0, s[1][2][0], 0x00130001, 0xFB0F0000, 0x00EF0004, 0xFBEF0000);
	r0 = D(r0, s[1][2][1], 0xF2040002, 0x0F0B0003, 0xEE030106, 0x16FB010A);
	r0 = D(r0, s[1][2][2], 0x080000FF, 0xFD000000, 0x0C0201FE, 0xFB0500FE);
	s[0][0][0] = G[4][xy.y+0][xy.x+0]; s[0][0][1] = G[4][xy.y+0][xy.x+1];
	s[0][0][2] = G[4][xy.y+0][xy.x+2]; s[0][1][0] = G[4][xy.y+1][xy.x+0];
	s[0][1][1] = G[4][xy.y+1][xy.x+1]; s[0][1][2] = G[4][xy.y+1][xy.x+2];
	s[0][2][0] = G[4][xy.y+2][xy.x+0]; s[0][2][1] = G[4][xy.y+2][xy.x+1];
	s[0][2][2] = G[4][xy.y+2][xy.x+2]; s[1][0][0] = G[5][xy.y+0][xy.x+0];
	s[1][0][1] = G[5][xy.y+0][xy.x+1]; s[1][0][2] = G[5][xy.y+0][xy.x+2];
	s[1][1][0] = G[5][xy.y+1][xy.x+0]; s[1][1][1] = G[5][xy.y+1][xy.x+1];
	s[1][1][2] = G[5][xy.y+1][xy.x+2]; s[1][2][0] = G[5][xy.y+2][xy.x+0];
	s[1][2][1] = G[5][xy.y+2][xy.x+1]; s[1][2][2] = G[5][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x00040001, 0x0100FF00, 0xFF0201FF, 0x00010000);
	r0 = D(r0, s[0][0][1], 0x00EFFC07, 0x00F9FE08, 0x00F10201, 0x00F601FD);
	r0 = D(r0, s[0][0][2], 0x000101FE, 0x00FBFEFE, 0x00000103, 0x00FC0305);
	r0 = D(r0, s[0][1][0], 0x02050201, 0xFE000302, 0x0308FE01, 0x01FFFFFE);
	r0 = D(r0, s[0][1][1], 0xFF090E06, 0x070C02FD, 0xFE02FBEC, 0x010F00FE);
	r0 = D(r0, s[0][1][2], 0xFCFF0708, 0xFA011310, 0xFF04F8FD, 0xFD01F4EE);
	r0 = D(r0, s[0][2][0], 0xFA00FFFE, 0x0000FFFF, 0xFA0001FF, 0xFD000001);
	r0 = D(r0, s[0][2][1], 0x090003FB, 0xFA0003FD, 0x0A01F608, 0x0200FA02);
	r0 = D(r0, s[0][2][2], 0xFE00FEFF, 0x0400FFFC, 0xFBFFFFFC, 0xFFFFFA00);
	r0 = D(r0, s[1][0][0], 0xF900FE04, 0x0100FF00, 0x01FFFF01, 0x01000000);
	r0 = D(r0, s[1][0][1], 0xFD000409, 0xF3FE0209, 0x02020001, 0x0000FE02);
	r0 = D(r0, s[1][0][2], 0x00FC0101, 0x02080004, 0x00FD0100, 0x01000101);
	r0 = D(r0, s[1][1][0], 0x000408F8, 0x04FEFF00, 0xF20402FE, 0x0100FE00);
	r0 = D(r0, s[1][1][1], 0x06EBF0F8, 0xFD090AEE, 0xFFF20005, 0xEC010CFF);
	r0 = D(r0, s[1][1][2], 0x01000301, 0x0607F603, 0x00FE0102, 0x040FF906);
	r0 = D(r0, s[1][2][0], 0x00000001, 0x01FF0000, 0x060105FE, 0x04FE0000);
	r0 = D(r0, s[1][2][1], 0x0100FE01, 0x0002FD02, 0x05F8F2FB, 0x0507FFF8);
	r0 = D(r0, s[1][2][2], 0x00FF0200, 0x01020100, 0x00FF0401, 0x0300FD01);
	s[0][0][0] = G[6][xy.y+0][xy.x+0]; s[0][0][1] = G[6][xy.y+0][xy.x+1];
	s[0][0][2] = G[6][xy.y+0][xy.x+2]; s[0][1][0] = G[6][xy.y+1][xy.x+0];
	s[0][1][1] = G[6][xy.y+1][xy.x+1]; s[0][1][2] = G[6][xy.y+1][xy.x+2];
	s[0][2][0] = G[6][xy.y+2][xy.x+0]; s[0][2][1] = G[6][xy.y+2][xy.x+1];
	s[0][2][2] = G[6][xy.y+2][xy.x+2]; s[1][0][0] = G[7][xy.y+0][xy.x+0];
	s[1][0][1] = G[7][xy.y+0][xy.x+1]; s[1][0][2] = G[7][xy.y+0][xy.x+2];
	s[1][1][0] = G[7][xy.y+1][xy.x+0]; s[1][1][1] = G[7][xy.y+1][xy.x+1];
	s[1][1][2] = G[7][xy.y+1][xy.x+2]; s[1][2][0] = G[7][xy.y+2][xy.x+0];
	s[1][2][1] = G[7][xy.y+2][xy.x+1]; s[1][2][2] = G[7][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xFF00FEFF, 0x00010000, 0x0100FF00, 0x00FF0000);
	r0 = D(r0, s[0][0][1], 0x030A02FD, 0xFE07FDFD, 0xFEF200FF, 0xFFFCFFFF);
	r0 = D(r0, s[0][0][2], 0x01F9F3FF, 0x05FC09FE, 0x0002FE00, 0xFFF80200);
	r0 = D(r0, s[0][1][0], 0x00FEFFFE, 0xFE000000, 0x02FEFFFD, 0xFF02FF00);
	r0 = D(r0, s[0][1][1], 0xECF600F6, 0xFBF7FCF8, 0x0E1203F9, 0x0D00FCF9);
	r0 = D(r0, s[0][1][2], 0x0000F9FF, 0xF3FD0DFA, 0xFF04EFFF, 0x041211FB);
	r0 = D(r0, s[0][2][0], 0x00000000, 0xFF000000, 0x0200FFFF, 0x02000000);
	r0 = D(r0, s[0][2][1], 0x050000FE, 0x040000FE, 0x02FEFEFA, 0x00FFFFFC);
	r0 = D(r0, s[0][2][2], 0xFD000000, 0xFF00FF00, 0x05FF0000, 0x08FF03FD);
	r0 = D(r0, s[1][0][0], 0x01FF0003, 0x01000101, 0x010001FF, 0x000000FF);
	r0 = D(r0, s[1][0][1], 0x0208F8FC, 0xFE01F9FE, 0x000001FF, 0xFFFF03FE);
	r0 = D(r0, s[1][0][2], 0x04000100, 0xFB06FFFF, 0x02FF0000, 0x0001FF00);
	r0 = D(r0, s[1][1][0], 0xFC01FEF5, 0x020000FB, 0xFE00F608, 0x02000100);
	r0 = D(r0, s[1][1][1], 0x1404130C, 0xF6080E06, 0x0D1103FC, 0xFA08F00A);
	r0 = D(r0, s[1][1][2], 0xFEF6FFFE, 0xF5F30300, 0x02FAFF00, 0xF30205FC);
	r0 = D(r0, s[1][2][0], 0x0000FF06, 0x00000003, 0xFD0007F7, 0x01FF0005);
	r0 = D(r0, s[1][2][1], 0x03FDFAFB, 0xFF00FBFC, 0x0CF9FD06, 0xFA020BF3);
	r0 = D(r0, s[1][2][2], 0x030001FF, 0xFFFEFFFF, 0x01FC0001, 0xFCF5FB05);
	vec4 f0 = vec4(r0) * 6.20001240e-05;
	f0 += vec4(-2.574e-09, -8.553e-09, -6.448e-09, -8.108e-09);
	f0 = tanh(f0);
	vec2 opt = 0.5 * LUMA_pt;
	vec2 fpos = (vec2(opos) + vec2(0.5)) * opt;
	imageStore(out_image, opos + ivec2(0, 0), vec4(f0.x + LUMA_tex(fpos + vec2(0.0, 0.0) * opt).r, 0.0, 0.0, 1.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(f0.y + LUMA_tex(fpos + vec2(1.0, 0.0) * opt).r, 0.0, 0.0, 1.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(f0.z + LUMA_tex(fpos + vec2(0.0, 1.0) * opt).r, 0.0, 0.0, 1.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(f0.w + LUMA_tex(fpos + vec2(1.0, 1.0) * opt).r, 0.0, 0.0, 1.0));
}
