// CuNNy 4x64 BILINEAR TEST
// Copyright (c) 2024 cunnyplapper

// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program.  If not, see <https://www.gnu.org/licenses/>.
/* ------------------------------------------------------------------- */


//!DESC CuNNy-4x64-BILINEAR-TEST-in
//!HOOK LUMA
//!COMPUTE 64 16 8 8
//!BIND LUMA
//!SAVE in
//!WIDTH LUMA.w 8 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif
#define l0(x, y) F(LUMA_tex((vec2(clamp(pos + ivec2(x, y), ivec2(0), sz) * ivec2(1, 1) + ivec2(0, 0)) + vec2(0.5)) * LUMA_pt).r)
shared F g[1][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(8, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	#pragma optionNV(unroll all)
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		#pragma optionNV(unroll all)
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			g[0][ay][ax] = l0(x - 1, y - 1);
		}
	}
	barrier();
	F s[3][3][1];
	V4 r0;
	V4 r1;
	V4 r2;
	V4 r3;
	V4 r4;
	V4 r5;
	V4 r6;
	V4 r7;
	r0 = V4(0.0);
	r1 = V4(0.0);
	r2 = V4(0.0);
	r3 = V4(0.0);
	r4 = V4(0.0);
	r5 = V4(0.0);
	r6 = V4(0.0);
	r7 = V4(0.0);
	s[0][0][0] = g[0][xy.y+0][xy.x+0];
	s[0][1][0] = g[0][xy.y+0][xy.x+1];
	s[0][2][0] = g[0][xy.y+0][xy.x+2];
	s[1][0][0] = g[0][xy.y+1][xy.x+0];
	s[1][1][0] = g[0][xy.y+1][xy.x+1];
	s[1][2][0] = g[0][xy.y+1][xy.x+2];
	s[2][0][0] = g[0][xy.y+2][xy.x+0];
	s[2][1][0] = g[0][xy.y+2][xy.x+1];
	s[2][2][0] = g[0][xy.y+2][xy.x+2];
	r0 += V4(-5.896e-02, -1.704e-02, 8.472e-02, 7.287e-03) * s[0][0][0];
	r1 += V4(-2.582e-02, -1.323e-01, 9.547e-03, -2.503e-02) * s[0][0][0];
	r2 += V4(2.666e-01, -8.324e-02, 1.255e-01, 8.992e-02) * s[0][0][0];
	r3 += V4(-9.936e-02, -2.740e-02, 9.359e-02, -1.792e-01) * s[0][0][0];
	r4 += V4(-1.421e-01, -2.044e-02, 1.587e-01, -1.594e-02) * s[0][0][0];
	r5 += V4(1.091e-01, 6.691e-02, -3.162e-02, 7.774e-02) * s[0][0][0];
	r6 += V4(1.274e-01, -1.493e-04, 1.629e-02, -1.175e-01) * s[0][0][0];
	r7 += V4(-6.632e-03, 1.165e-01, -2.244e-01, 2.487e-02) * s[0][0][0];
	r0 += V4(5.163e-02, 2.541e-02, -1.131e-01, -8.698e-02) * s[0][1][0];
	r1 += V4(2.287e-02, 1.860e-02, -7.397e-02, -3.332e-02) * s[0][1][0];
	r2 += V4(-3.447e-01, 3.164e-01, 2.206e-01, -1.019e-01) * s[0][1][0];
	r3 += V4(4.254e-02, 5.976e-02, -7.207e-01, -2.170e-01) * s[0][1][0];
	r4 += V4(-4.337e-02, 3.105e-02, -7.495e-02, 1.460e-01) * s[0][1][0];
	r5 += V4(-7.366e-02, 1.733e-01, 9.058e-02, 4.236e-02) * s[0][1][0];
	r6 += V4(-9.937e-02, 1.692e-02, -6.325e-03, 2.046e-01) * s[0][1][0];
	r7 += V4(8.838e-02, 1.451e-01, -5.090e-02, 4.798e-02) * s[0][1][0];
	r0 += V4(1.691e-02, 4.623e-02, -2.924e-02, 3.822e-02) * s[0][2][0];
	r1 += V4(4.346e-03, -3.308e-02, -9.028e-02, 1.714e-01) * s[0][2][0];
	r2 += V4(3.128e-02, -1.821e-01, -1.124e-03, -8.414e-03) * s[0][2][0];
	r3 += V4(-1.886e-02, -4.041e-02, 6.189e-02, -2.787e-02) * s[0][2][0];
	r4 += V4(1.866e-01, -9.386e-03, -1.792e-01, 2.809e-02) * s[0][2][0];
	r5 += V4(-2.026e-01, -3.712e-02, -1.880e-01, -3.981e-02) * s[0][2][0];
	r6 += V4(5.506e-02, -7.903e-02, -1.103e-02, -1.382e-01) * s[0][2][0];
	r7 += V4(2.020e-03, 7.480e-03, 6.097e-03, 3.552e-02) * s[0][2][0];
	r0 += V4(-9.839e-02, -1.098e-01, -5.369e-03, 2.692e-02) * s[1][0][0];
	r1 += V4(2.739e-02, 1.265e-01, -8.485e-03, 2.023e-02) * s[1][0][0];
	r2 += V4(4.871e-02, -1.082e-01, -8.754e-02, 1.203e-01) * s[1][0][0];
	r3 += V4(1.986e-01, -2.124e-01, 2.805e-02, 1.665e-01) * s[1][0][0];
	r4 += V4(1.684e-01, 1.070e-02, -3.458e-03, -2.777e-02) * s[1][0][0];
	r5 += V4(5.180e-02, -2.972e-02, -1.827e-02, -6.251e-03) * s[1][0][0];
	r6 += V4(-2.102e+00, 1.114e-01, -1.852e-02, -5.655e-02) * s[1][0][0];
	r7 += V4(1.047e-01, 1.044e-01, 1.751e-02, 5.938e-02) * s[1][0][0];
	r0 += V4(-1.666e-01, 1.096e-02, 1.388e-01, 1.155e-01) * s[1][1][0];
	r1 += V4(-2.428e-01, 1.067e-02, -8.651e-02, -2.998e-01) * s[1][1][0];
	r2 += V4(7.862e-03, 2.375e-02, -5.627e-02, -1.582e-02) * s[1][1][0];
	r3 += V4(-7.006e-02, -1.792e-01, 3.904e-04, 2.075e-01) * s[1][1][0];
	r4 += V4(3.657e-02, -2.202e-01, 1.341e-02, -1.701e-01) * s[1][1][0];
	r5 += V4(-1.252e-01, -2.466e-02, -4.895e-02, -1.104e-01) * s[1][1][0];
	r6 += V4(-7.168e-01, 2.027e-01, 8.341e-03, -4.114e-02) * s[1][1][0];
	r7 += V4(-2.331e-03, -5.164e-02, 6.236e-02, -4.969e-02) * s[1][1][0];
	r0 += V4(3.559e-02, 1.219e-01, 2.370e-02, -5.066e-02) * s[1][2][0];
	r1 += V4(3.258e-02, -7.757e-03, -1.033e-01, 1.743e-01) * s[1][2][0];
	r2 += V4(-1.703e-02, 6.043e-02, -1.843e-01, -1.382e-01) * s[1][2][0];
	r3 += V4(-1.594e-02, 1.207e-01, 6.952e-02, 5.603e-02) * s[1][2][0];
	r4 += V4(-2.329e-01, 3.045e-02, 1.810e-01, 9.546e-02) * s[1][2][0];
	r5 += V4(5.507e-02, 1.333e-01, 2.181e-01, 5.602e-02) * s[1][2][0];
	r6 += V4(1.803e-02, -6.476e-02, 2.184e-01, -1.013e-01) * s[1][2][0];
	r7 += V4(-1.156e-02, -8.820e-03, -1.255e-03, 1.952e-02) * s[1][2][0];
	r0 += V4(-5.093e-02, -6.568e-02, -8.081e-02, 1.153e-01) * s[2][0][0];
	r1 += V4(-1.133e-02, -4.071e-02, 1.005e-03, -1.972e-03) * s[2][0][0];
	r2 += V4(4.689e-03, 3.190e-02, -1.363e-02, 1.225e-01) * s[2][0][0];
	r3 += V4(-8.574e-02, 8.328e-02, 1.708e-02, 2.581e-02) * s[2][0][0];
	r4 += V4(-9.058e-02, 3.024e-01, -9.570e-02, 4.910e-02) * s[2][0][0];
	r5 += V4(1.789e-02, -5.711e-02, 4.968e-02, -5.629e-03) * s[2][0][0];
	r6 += V4(3.308e-02, -1.195e-01, -1.810e-01, 2.517e-01) * s[2][0][0];
	r7 += V4(-1.160e-01, -8.276e-02, 1.392e-01, 7.105e-02) * s[2][0][0];
	r0 += V4(-4.652e-02, 3.808e-03, 8.618e-02, -1.980e-01) * s[2][1][0];
	r1 += V4(5.996e-02, -9.095e-02, 2.745e-01, -8.056e-02) * s[2][1][0];
	r2 += V4(2.581e-03, -1.247e-01, 3.943e-02, -2.743e-02) * s[2][1][0];
	r3 += V4(1.114e-01, 9.101e-02, 3.749e-02, -1.924e-02) * s[2][1][0];
	r4 += V4(-1.718e-02, -1.023e-01, -1.284e-01, -8.650e-02) * s[2][1][0];
	r5 += V4(7.372e-02, -1.105e-01, -6.714e-02, -1.369e-01) * s[2][1][0];
	r6 += V4(1.785e-01, -1.362e-01, -3.720e-02, -2.900e-01) * s[2][1][0];
	r7 += V4(-7.007e-02, -2.339e-01, 5.994e-02, -4.111e-02) * s[2][1][0];
	r0 += V4(3.650e-02, -1.616e-02, 6.568e-02, 3.626e-02) * s[2][2][0];
	r1 += V4(5.775e-02, 1.135e-01, 7.237e-02, 8.325e-02) * s[2][2][0];
	r2 += V4(-3.521e-03, 7.396e-02, -4.375e-02, -4.658e-02) * s[2][2][0];
	r3 += V4(-7.782e-02, 1.451e-02, 2.133e-02, -1.290e-02) * s[2][2][0];
	r4 += V4(1.449e-01, -2.244e-02, 1.172e-01, -1.380e-02) * s[2][2][0];
	r5 += V4(8.911e-02, -1.143e-01, 3.524e-03, 1.293e-01) * s[2][2][0];
	r6 += V4(3.356e-02, 8.179e-02, 1.318e-02, 9.141e-02) * s[2][2][0];
	r7 += V4(1.856e-02, 3.583e-03, -4.894e-03, 1.155e-01) * s[2][2][0];
	r0 += V4(8.374e-02, 8.944e-03, -1.206e-01, 7.403e-03);
	r0 = max(r0, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 0), vec4(r0));
	r1 += V4(5.434e-02, 9.133e-03, 1.071e-02, -6.013e-03);
	r1 = max(r1, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(r1));
	r2 += V4(7.304e-04, -2.655e-02, -5.993e-03, 1.593e-02);
	r2 = max(r2, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(r2));
	r3 += V4(-2.183e-03, 3.259e-02, 1.923e-02, -1.128e-02);
	r3 = max(r3, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(r3));
	r4 += V4(-1.837e-02, -4.101e-03, -7.502e-03, 8.988e-03);
	r4 = max(r4, V4(0.0));
	imageStore(out_image, opos + ivec2(2, 0), vec4(r4));
	r5 += V4(-1.265e-02, 1.144e-02, 2.110e-03, 3.525e-03);
	r5 = max(r5, V4(0.0));
	imageStore(out_image, opos + ivec2(3, 0), vec4(r5));
	r6 += V4(4.595e-02, 4.539e-03, -3.039e-03, 8.045e-03);
	r6 = max(r6, V4(0.0));
	imageStore(out_image, opos + ivec2(2, 1), vec4(r6));
	r7 += V4(8.148e-03, -3.290e-03, 1.168e-02, -1.647e-01);
	r7 = max(r7, V4(0.0));
	imageStore(out_image, opos + ivec2(3, 1), vec4(r7));
	r0 = V4(0.0);
	r1 = V4(0.0);
	r2 = V4(0.0);
	r3 = V4(0.0);
	r4 = V4(0.0);
	r5 = V4(0.0);
	r6 = V4(0.0);
	r7 = V4(0.0);
	s[0][0][0] = g[0][xy.y+0][xy.x+0];
	s[0][1][0] = g[0][xy.y+0][xy.x+1];
	s[0][2][0] = g[0][xy.y+0][xy.x+2];
	s[1][0][0] = g[0][xy.y+1][xy.x+0];
	s[1][1][0] = g[0][xy.y+1][xy.x+1];
	s[1][2][0] = g[0][xy.y+1][xy.x+2];
	s[2][0][0] = g[0][xy.y+2][xy.x+0];
	s[2][1][0] = g[0][xy.y+2][xy.x+1];
	s[2][2][0] = g[0][xy.y+2][xy.x+2];
	r0 += V4(4.383e-02, -3.893e-02, -3.730e-03, -6.637e-02) * s[0][0][0];
	r1 += V4(-2.029e-01, 7.641e-02, 1.304e-01, 8.521e-02) * s[0][0][0];
	r2 += V4(2.370e-02, 1.013e-01, -2.654e-02, -3.091e-02) * s[0][0][0];
	r3 += V4(-2.160e-01, -8.457e-03, -2.358e-01, 5.218e-02) * s[0][0][0];
	r4 += V4(-4.118e-02, -7.807e-02, 1.685e-01, -6.037e-04) * s[0][0][0];
	r5 += V4(8.217e-03, -6.323e-02, -7.726e-02, 4.278e-02) * s[0][0][0];
	r6 += V4(-1.900e-03, 9.985e-02, 9.936e-02, 2.104e-01) * s[0][0][0];
	r7 += V4(5.094e-02, -1.632e-02, 7.653e-03, -2.290e-01) * s[0][0][0];
	r0 += V4(-2.783e-01, -8.765e-02, 1.807e-01, -2.301e-02) * s[0][1][0];
	r1 += V4(2.407e-01, -1.763e-01, 7.940e-02, -1.148e-01) * s[0][1][0];
	r2 += V4(-5.042e-02, -1.938e-01, 1.616e-01, -4.584e-03) * s[0][1][0];
	r3 += V4(1.194e-02, -3.841e-02, 3.598e-02, -2.212e-01) * s[0][1][0];
	r4 += V4(-5.346e-02, 1.228e-03, -1.446e-01, 1.213e-01) * s[0][1][0];
	r5 += V4(-4.318e-02, -1.403e-01, 5.622e-02, -1.414e-01) * s[0][1][0];
	r6 += V4(9.924e-03, 1.097e-01, -5.137e-01, -6.064e-02) * s[0][1][0];
	r7 += V4(-1.340e-02, 5.269e-02, -8.420e-02, 2.568e-01) * s[0][1][0];
	r0 += V4(-5.258e-02, 4.838e-02, -1.665e-01, -7.448e-02) * s[0][2][0];
	r1 += V4(-9.521e-02, 8.545e-02, -4.797e-02, 1.529e-01) * s[0][2][0];
	r2 += V4(3.651e-03, 8.667e-02, 1.274e-01, 3.578e-02) * s[0][2][0];
	r3 += V4(1.173e-01, 1.173e-02, 3.748e-02, -4.099e-03) * s[0][2][0];
	r4 += V4(9.281e-03, 5.019e-02, -4.984e-02, 2.041e-01) * s[0][2][0];
	r5 += V4(3.661e-02, 4.675e-02, 1.992e-02, 1.265e-01) * s[0][2][0];
	r6 += V4(-8.277e-02, -3.869e-02, -2.195e+00, -2.588e-03) * s[0][2][0];
	r7 += V4(-5.452e-02, -5.091e-02, 5.331e-02, -3.027e-02) * s[0][2][0];
	r0 += V4(1.870e-01, -1.208e-01, -1.038e-01, 2.738e-01) * s[1][0][0];
	r1 += V4(-8.763e-01, -1.374e-01, -3.935e-01, -1.682e-04) * s[1][0][0];
	r2 += V4(-1.056e-01, -2.188e-01, -1.808e-02, 3.015e-02) * s[1][0][0];
	r3 += V4(-7.364e-02, 1.208e-01, 3.252e-01, -5.240e-02) * s[1][0][0];
	r4 += V4(-1.377e-02, 1.101e-01, -2.948e-02, -3.824e-02) * s[1][0][0];
	r5 += V4(8.667e-02, 2.074e-01, -6.018e-02, 1.067e-01) * s[1][0][0];
	r6 += V4(6.417e-02, -1.409e-01, 5.031e-03, -3.125e-01) * s[1][0][0];
	r7 += V4(-5.173e-03, 5.383e-02, 1.414e-03, -2.094e-02) * s[1][0][0];
	r0 += V4(1.112e-01, 1.904e-01, 1.172e-01, -1.131e-01) * s[1][1][0];
	r1 += V4(2.554e-01, -3.791e-02, -5.168e-02, 6.372e-02) * s[1][1][0];
	r2 += V4(-2.096e-01, 9.790e-02, -4.471e-02, 1.008e-01) * s[1][1][0];
	r3 += V4(1.343e-01, -2.477e-02, 3.423e-02, 1.509e-01) * s[1][1][0];
	r4 += V4(1.841e-01, -2.026e-01, -1.228e-01, -1.529e-01) * s[1][1][0];
	r5 += V4(1.346e-01, -1.051e-01, -1.215e-01, -1.258e-01) * s[1][1][0];
	r6 += V4(1.184e-01, -5.775e-02, 2.222e-01, 3.166e-02) * s[1][1][0];
	r7 += V4(-9.155e-02, -5.286e-02, 2.920e-01, 4.456e-02) * s[1][1][0];
	r0 += V4(1.135e-01, -2.959e-01, -1.874e-02, 8.716e-02) * s[1][2][0];
	r1 += V4(-2.862e-02, 1.909e-01, 3.382e-02, -1.038e-01) * s[1][2][0];
	r2 += V4(1.930e-02, 1.213e-01, -2.044e-01, -9.106e-02) * s[1][2][0];
	r3 += V4(5.019e-02, 1.852e-02, 6.372e-02, 3.009e-01) * s[1][2][0];
	r4 += V4(3.064e-02, 1.612e-02, 1.781e-01, 2.805e-02) * s[1][2][0];
	r5 += V4(-4.215e-02, 1.772e-01, 1.968e-01, 4.807e-03) * s[1][2][0];
	r6 += V4(-9.204e-02, -8.184e-02, -4.346e-01, -3.503e-02) * s[1][2][0];
	r7 += V4(1.316e-01, 6.446e-02, -3.918e-02, -1.711e-02) * s[1][2][0];
	r0 += V4(-5.742e-03, 5.639e-02, 8.130e-02, 5.457e-02) * s[2][0][0];
	r1 += V4(1.352e-01, 6.066e-02, 2.114e-01, 2.214e-02) * s[2][0][0];
	r2 += V4(-1.198e-02, 1.160e-01, 1.174e-02, 1.452e-01) * s[2][0][0];
	r3 += V4(6.691e-03, 1.820e-01, -1.832e-01, -8.080e-02) * s[2][0][0];
	r4 += V4(4.783e-02, -3.990e-02, -1.438e-01, 3.210e-02) * s[2][0][0];
	r5 += V4(5.842e-02, -1.059e-01, 9.851e-02, -1.519e-01) * s[2][0][0];
	r6 += V4(-1.975e-01, 1.489e-01, 3.348e-02, 1.023e-01) * s[2][0][0];
	r7 += V4(-1.170e-01, 2.612e-02, -5.847e-02, -6.789e-03) * s[2][0][0];
	r0 += V4(-1.890e-01, 2.293e-02, -9.100e-02, -1.124e-01) * s[2][1][0];
	r1 += V4(-1.831e-01, -5.046e-02, 1.636e-02, -5.956e-02) * s[2][1][0];
	r2 += V4(6.710e-02, 1.038e-01, 7.839e-02, -1.580e-02) * s[2][1][0];
	r3 += V4(-3.162e-02, 6.650e-02, -2.163e-01, -4.494e-02) * s[2][1][0];
	r4 += V4(-1.160e-01, 2.227e-01, 2.627e-01, -5.586e-02) * s[2][1][0];
	r5 += V4(2.003e-02, 7.338e-02, 4.730e-02, 2.900e-01) * s[2][1][0];
	r6 += V4(1.917e-01, 1.399e-02, 2.544e-02, 3.163e-02) * s[2][1][0];
	r7 += V4(1.024e-02, -1.294e-01, -1.476e-02, 2.797e-03) * s[2][1][0];
	r0 += V4(-4.852e-03, 1.233e-01, 1.673e-02, -2.363e-02) * s[2][2][0];
	r1 += V4(4.650e-02, -7.793e-03, 9.486e-04, -4.807e-02) * s[2][2][0];
	r2 += V4(2.646e-01, -2.161e-01, 5.257e-02, -1.646e-01) * s[2][2][0];
	r3 += V4(2.481e-03, -4.626e-02, -4.773e-02, -1.318e-02) * s[2][2][0];
	r4 += V4(-4.529e-02, -8.130e-02, -1.169e-01, -1.316e-01) * s[2][2][0];
	r5 += V4(7.050e-03, -8.182e-02, -1.606e-01, -1.522e-01) * s[2][2][0];
	r6 += V4(-3.501e-03, -1.538e-01, 8.765e-02, 4.368e-02) * s[2][2][0];
	r7 += V4(8.325e-02, -2.325e-02, -1.411e-01, 7.149e-03) * s[2][2][0];
	r0 += V4(-1.751e-02, -3.262e-04, -9.448e-04, 4.610e-03);
	r0 = max(r0, V4(0.0));
	imageStore(out_image, opos + ivec2(4, 0), vec4(r0));
	r1 += V4(7.083e-03, 1.579e-03, -3.918e-02, 5.543e-03);
	r1 = max(r1, V4(0.0));
	imageStore(out_image, opos + ivec2(5, 0), vec4(r1));
	r2 += V4(-9.491e-03, -4.194e-03, -1.112e-01, 7.795e-03);
	r2 = max(r2, V4(0.0));
	imageStore(out_image, opos + ivec2(4, 1), vec4(r2));
	r3 += V4(8.202e-03, -2.676e-01, -2.072e-03, -1.559e-01);
	r3 = max(r3, V4(0.0));
	imageStore(out_image, opos + ivec2(5, 1), vec4(r3));
	r4 += V4(7.065e-03, 4.589e-03, -6.899e-03, -1.090e-02);
	r4 = max(r4, V4(0.0));
	imageStore(out_image, opos + ivec2(6, 0), vec4(r4));
	r5 += V4(-9.351e-02, -6.222e-04, 3.070e-03, -1.144e-02);
	r5 = max(r5, V4(0.0));
	imageStore(out_image, opos + ivec2(7, 0), vec4(r5));
	r6 += V4(-8.699e-03, -2.374e-02, 2.960e-02, -7.545e-03);
	r6 = max(r6, V4(0.0));
	imageStore(out_image, opos + ivec2(6, 1), vec4(r6));
	r7 += V4(1.028e-02, 5.284e-02, 4.198e-03, 1.176e-02);
	r7 = max(r7, V4(0.0));
	imageStore(out_image, opos + ivec2(7, 1), vec4(r7));
}

//!DESC CuNNy-4x64-BILINEAR-TEST-conv1
//!HOOK LUMA
//!COMPUTE 64 16 8 8
//!BIND in
//!BIND LUMA
//!SAVE conv1
//!WIDTH LUMA.w 8 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_spirv_intrinsics : require
#extension GL_EXT_control_flow_attributes : require
spirv_instruction (extensions = ["SPV_KHR_integer_dot_product"], capabilities = [6019, 6018], id = 4450)
int dp4(int a, int b, spirv_literal int fmt);
#define D(r, s, a, b, c, d) ivec4(r.x + dp4(s, a, 0), r.y + dp4(s, b, 0), r.z + dp4(s, c, 0), r.w + dp4(s, d, 0))
shared int G[16][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(8, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			vec4 r, g, b, a;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(8, 2) + ivec2(1, 1)) * in_pt;
			r = in_gather(p, 0);
			g = in_gather(p, 1);
			b = in_gather(p, 2);
			a = in_gather(p, 3);
			vec4 v0 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v1 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v2 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v3 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(8, 2) + ivec2(3, 1)) * in_pt;
			r = in_gather(p, 0);
			g = in_gather(p, 1);
			b = in_gather(p, 2);
			a = in_gather(p, 3);
			vec4 v4 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v5 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v6 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v7 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(8, 2) + ivec2(5, 1)) * in_pt;
			r = in_gather(p, 0);
			g = in_gather(p, 1);
			b = in_gather(p, 2);
			a = in_gather(p, 3);
			vec4 v8 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v9 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v10 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v11 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(8, 2) + ivec2(7, 1)) * in_pt;
			r = in_gather(p, 0);
			g = in_gather(p, 1);
			b = in_gather(p, 2);
			a = in_gather(p, 3);
			vec4 v12 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v13 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v14 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v15 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			G[0][ay][ax] = int(packSnorm4x8(v0));
			G[1][ay][ax] = int(packSnorm4x8(v1));
			G[2][ay][ax] = int(packSnorm4x8(v2));
			G[3][ay][ax] = int(packSnorm4x8(v3));
			G[4][ay][ax] = int(packSnorm4x8(v4));
			G[5][ay][ax] = int(packSnorm4x8(v5));
			G[6][ay][ax] = int(packSnorm4x8(v6));
			G[7][ay][ax] = int(packSnorm4x8(v7));
			G[8][ay][ax] = int(packSnorm4x8(v8));
			G[9][ay][ax] = int(packSnorm4x8(v9));
			G[10][ay][ax] = int(packSnorm4x8(v10));
			G[11][ay][ax] = int(packSnorm4x8(v11));
			G[12][ay][ax] = int(packSnorm4x8(v12));
			G[13][ay][ax] = int(packSnorm4x8(v13));
			G[14][ay][ax] = int(packSnorm4x8(v14));
			G[15][ay][ax] = int(packSnorm4x8(v15));
		}
	}
	barrier();
	int s[2][3][3];
	ivec4 r0;
	ivec4 r1;
	ivec4 r2;
	ivec4 r3;
	ivec4 r4;
	ivec4 r5;
	ivec4 r6;
	ivec4 r7;
	vec4 f0;
	vec4 f1;
	vec4 f2;
	vec4 f3;
	vec4 f4;
	vec4 f5;
	vec4 f6;
	vec4 f7;
	r0 = ivec4(0);
	r1 = ivec4(0);
	r2 = ivec4(0);
	r3 = ivec4(0);
	r4 = ivec4(0);
	r5 = ivec4(0);
	r6 = ivec4(0);
	r7 = ivec4(0);
	s[0][0][0] = G[0][xy.y+0][xy.x+0]; s[0][0][1] = G[0][xy.y+0][xy.x+1];
	s[0][0][2] = G[0][xy.y+0][xy.x+2]; s[0][1][0] = G[0][xy.y+1][xy.x+0];
	s[0][1][1] = G[0][xy.y+1][xy.x+1]; s[0][1][2] = G[0][xy.y+1][xy.x+2];
	s[0][2][0] = G[0][xy.y+2][xy.x+0]; s[0][2][1] = G[0][xy.y+2][xy.x+1];
	s[0][2][2] = G[0][xy.y+2][xy.x+2]; s[1][0][0] = G[1][xy.y+0][xy.x+0];
	s[1][0][1] = G[1][xy.y+0][xy.x+1]; s[1][0][2] = G[1][xy.y+0][xy.x+2];
	s[1][1][0] = G[1][xy.y+1][xy.x+0]; s[1][1][1] = G[1][xy.y+1][xy.x+1];
	s[1][1][2] = G[1][xy.y+1][xy.x+2]; s[1][2][0] = G[1][xy.y+2][xy.x+0];
	s[1][2][1] = G[1][xy.y+2][xy.x+1]; s[1][2][2] = G[1][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xF8F508FF, 0x12020918, 0x1EED0318, 0x12F50CF2);
	r1 = D(r1, s[0][0][0], 0xE9EA0014, 0x0800F8F9, 0xFBBF04F1, 0x0601E903);
	r2 = D(r2, s[0][0][0], 0x16EFDEF6, 0xFAE4F813, 0xF62411FD, 0xFA04F306);
	r3 = D(r3, s[0][0][0], 0xFF85FD0C, 0x0013FA04, 0x08F8030B, 0x00F80E09);
	r4 = D(r4, s[0][0][0], 0x0508EF0B, 0xED020AF6, 0xE15F1D0B, 0xF0E71313);
	r5 = D(r5, s[0][0][0], 0xEF15F005, 0x09FFFE15, 0xF308F320, 0xEA040A1B);
	r6 = D(r6, s[0][0][0], 0x09E9FF03, 0xF61102E3, 0xECF1F8FA, 0xF8F4F1F0);
	r7 = D(r7, s[0][0][0], 0xFF13F7E5, 0x05061DFA, 0x0F04080A, 0x0BF606F8);
	r0 = D(r0, s[0][0][1], 0xF6FBFF11, 0x06FBF7F9, 0xE0FF00F6, 0xEE150904);
	r1 = D(r1, s[0][0][1], 0x0DF9FE02, 0x0B910521, 0xEC4ABC04, 0xDFFB0AFE);
	r2 = D(r2, s[0][0][1], 0xEB07FCEF, 0x042E05F2, 0xF8CEDF03, 0x1400F7FE);
	r3 = D(r3, s[0][0][1], 0x107F0203, 0x082204FF, 0xF8EDF603, 0x0804DA10);
	r4 = D(r4, s[0][0][1], 0x090D05F9, 0x091000EA, 0xAC2C181E, 0xFAF70A03);
	r5 = D(r5, s[0][0][1], 0x020000E6, 0x0418FAFE, 0xF90DFC0A, 0x0600E81F);
	r6 = D(r6, s[0][0][1], 0xEEE80405, 0x040413EC, 0x19F4E9EB, 0xFA020106);
	r7 = D(r7, s[0][0][1], 0x050901F9, 0x090E12DB, 0xFA0F05EB, 0xFF0DFB02);
	r0 = D(r0, s[0][0][2], 0xFC060506, 0xF6F81E07, 0xFC13161F, 0x0DFD1008);
	r1 = D(r1, s[0][0][2], 0xF6ECEA17, 0xF6CCF401, 0x0A08040F, 0x0712F006);
	r2 = D(r2, s[0][0][2], 0x24FE0A19, 0x0D0B0207, 0x0D0002F5, 0x08FF0304);
	r3 = D(r3, s[0][0][2], 0x07F40B03, 0x061C0C0F, 0xE7DCE90D, 0xF8F6FFF9);
	r4 = D(r4, s[0][0][2], 0xD80306E8, 0xF7ECFBF7, 0x03090DF8, 0xFC0511F8);
	r5 = D(r5, s[0][0][2], 0x04F7FB16, 0xF3FCFB10, 0xF7F6FA03, 0xF8FCF9FE);
	r6 = D(r6, s[0][0][2], 0x000409EC, 0x01F2F1F2, 0x00D913E6, 0x00F515F5);
	r7 = D(r7, s[0][0][2], 0xF6F40A1B, 0x06F0030A, 0x010F0A09, 0xFAE5F516);
	r0 = D(r0, s[0][1][0], 0xFD04FFFF, 0xFD09F7FB, 0x01FA07E9, 0xE7060CFF);
	r1 = D(r1, s[0][1][0], 0x1204FE04, 0xFE05EF04, 0x082AF604, 0x14F61103);
	r2 = D(r2, s[0][1][0], 0x000DD7E2, 0xFB0609E6, 0x02EF0501, 0x020BE3FF);
	r3 = D(r3, s[0][1][0], 0x0C81D514, 0xFDEF050B, 0x1DF5F82A, 0xF8CCFDE0);
	r4 = D(r4, s[0][1][0], 0x08F7F00D, 0x0FF7FEE3, 0xFD0EFF11, 0x0810E1FA);
	r5 = D(r5, s[0][1][0], 0x13F5F021, 0xF20AFD10, 0xF8021012, 0x0B0CE8EA);
	r6 = D(r6, s[0][1][0], 0xF8F501F7, 0x131711F5, 0x1AABDFF6, 0x10EDEC0F);
	r7 = D(r7, s[0][1][0], 0xD2FC0007, 0x01EBF8FC, 0x00EE0E05, 0x0A11DB00);
	r0 = D(r0, s[0][1][1], 0x060CEC12, 0xFEECFFE4, 0x0D1AE4F1, 0x0BF3F6FA);
	r1 = D(r1, s[0][1][1], 0xFEFFFDEE, 0x01EFD529, 0x1711F1FA, 0xD70403FC);
	r2 = D(r2, s[0][1][1], 0xF303FE0C, 0xFA13EAF7, 0xF402E317, 0x02F9EA07);
	r3 = D(r3, s[0][1][1], 0x1130F917, 0x13E403F0, 0xFA0C03F4, 0x0503F8E7);
	r4 = D(r4, s[0][1][1], 0xFEF60807, 0xF8EA1627, 0xF130FF11, 0xFFFD08FE);
	r5 = D(r5, s[0][1][1], 0xF6020BFD, 0xF4FC13DA, 0xFE021002, 0xFC04E2FA);
	r6 = D(r6, s[0][1][1], 0x04EAF10B, 0x0015000D, 0x1181F10B, 0xF013F1DD);
	r7 = D(r7, s[0][1][1], 0x0BE6F600, 0x03F902F6, 0x01100305, 0x040AE0C3);
	r0 = D(r0, s[0][1][2], 0x04F4ED1F, 0xF604FE1F, 0x02F806F4, 0xF7FFF112);
	r1 = D(r1, s[0][1][2], 0xEBFFFE36, 0xD5860823, 0xECCAC8F9, 0x12FD03E2);
	r2 = D(r2, s[0][1][2], 0xF8DB08F1, 0xFAF4F513, 0x0A0622F2, 0xFDFFFA0C);
	r3 = D(r3, s[0][1][2], 0xACF8FB14, 0xFAEF11F4, 0xF628F9F4, 0xFA0C01F0);
	r4 = D(r4, s[0][1][2], 0x240E0400, 0x0816FF0B, 0xFB00F8FD, 0x0504F603);
	r5 = D(r5, s[0][1][2], 0x080804F5, 0x0CFE05FC, 0x0FFFF5E9, 0xF3FCEFF4);
	r6 = D(r6, s[0][1][2], 0xF9FDF425, 0x09EFCD0A, 0x1FF1FA05, 0xFE0520FF);
	r7 = D(r7, s[0][1][2], 0x0710FEEA, 0x0B0BF803, 0x0200F9FD, 0x0E15FA0A);
	r0 = D(r0, s[0][2][0], 0x00F4F7F3, 0xF70D10FB, 0x00FB1F06, 0xF8EE0A02);
	r1 = D(r1, s[0][2][0], 0x1EF9F5EE, 0x09F00204, 0xEBFC11FF, 0x100109F7);
	r2 = D(r2, s[0][2][0], 0xFE040DF3, 0x0305FE07, 0x09F800E9, 0xF1FA07F1);
	r3 = D(r3, s[0][2][0], 0xFA39EBFC, 0xEAFF02F7, 0x0F08FA05, 0xFB032317);
	r4 = D(r4, s[0][2][0], 0x0AFFEAFB, 0xF609FA17, 0x0308FC1A, 0xEA08F703);
	r5 = D(r5, s[0][2][0], 0x18E3F307, 0x06FC07F1, 0x01F206F1, 0x00E815EE);
	r6 = D(r6, s[0][2][0], 0x0A10FCE2, 0xF6F702FA, 0xEB04BDF3, 0x04120B08);
	r7 = D(r7, s[0][2][0], 0x2A0601FD, 0xFD05FCF7, 0x0A0002FF, 0xF108EF13);
	r0 = D(r0, s[0][2][1], 0x1409FED0, 0x0511F809, 0xFADCF6F2, 0xEB0C1100);
	r1 = D(r1, s[0][2][1], 0xF9F506D6, 0xF9F50D04, 0xEE521203, 0x0608010D);
	r2 = D(r2, s[0][2][1], 0x110FE514, 0x00FAEC05, 0xF315FE09, 0x010AF902);
	r3 = D(r3, s[0][2][1], 0x0C09F301, 0x01F1041F, 0xEEDFF4FB, 0x0AFD17FB);
	r4 = D(r4, s[0][2][1], 0xF312F911, 0x07FFEFF7, 0x152B050E, 0x1500EFF3);
	r5 = D(r5, s[0][2][1], 0xF63219FE, 0xFCECFE17, 0x0AFE093A, 0x0AF506EB);
	r6 = D(r6, s[0][2][1], 0xEFFFF7FB, 0xFAFEF4EA, 0x05F00915, 0xF1E90608);
	r7 = D(r7, s[0][2][1], 0x14F5E813, 0xF3EDF71E, 0xE908FD10, 0xF700FDFC);
	r0 = D(r0, s[0][2][2], 0x0408F8DD, 0xFD14FC03, 0xF9FA0708, 0x21F8F8EA);
	r1 = D(r1, s[0][2][2], 0x000BEC26, 0xF704FEFF, 0x29CF0501, 0xF4FCFA00);
	r2 = D(r2, s[0][2][2], 0xFFFF0DF8, 0x10FAF50A, 0xFE0609FA, 0xFEF8F7FC);
	r3 = D(r3, s[0][2][2], 0xFCE5EA06, 0xFAEBFC02, 0x192707E6, 0x0A1C06FA);
	r4 = D(r4, s[0][2][2], 0xF8060CFE, 0x01F707FD, 0x1818E70D, 0x02100908);
	r5 = D(r5, s[0][2][2], 0x01FAF805, 0x0AFAF5F1, 0xF7FEFD18, 0x110614FE);
	r6 = D(r6, s[0][2][2], 0x1401EE05, 0xFFF8EF20, 0xF607FDF9, 0x09F0FD1B);
	r7 = D(r7, s[0][2][2], 0xDF00F30A, 0x0000002F, 0xF702EAF4, 0x1917030D);
	r0 = D(r0, s[1][0][0], 0x0810F907, 0x0AF4F4F7, 0xED1AF5F3, 0x0216FD10);
	r1 = D(r1, s[1][0][0], 0x11F1FBF8, 0xE8FBD8F7, 0xE20B20FC, 0xF5FD1713);
	r2 = D(r2, s[1][0][0], 0x2C0D04FA, 0xF8FFF2F4, 0xD90002FF, 0xF1FBF5E7);
	r3 = D(r3, s[1][0][0], 0xFEE6FAF2, 0xEDEEFDF0, 0x14E4160A, 0xF1041A14);
	r4 = D(r4, s[1][0][0], 0x02DE01F7, 0xE6F9F8F9, 0x14FFEDEF, 0xF0FA06F4);
	r5 = D(r5, s[1][0][0], 0x05E4FBFD, 0x090807ED, 0x0C060E01, 0x340A110D);
	r6 = D(r6, s[1][0][0], 0x0819E9FB, 0xFE00F6EE, 0xF5EDDB10, 0x11EAF6FF);
	r7 = D(r7, s[1][0][0], 0xE4FC00F5, 0xD6E10FFD, 0x0DFF07F1, 0xE5050AEA);
	r0 = D(r0, s[1][0][1], 0x060900FE, 0xE1DE0115, 0xF91F03F9, 0xF818EC0A);
	r1 = D(r1, s[1][0][1], 0x00F60803, 0xECE809FF, 0x18071803, 0xED0D0B06);
	r2 = D(r2, s[1][0][1], 0x240E0413, 0xECE409E6, 0x2D0E0608, 0x03000603);
	r3 = D(r3, s[1][0][1], 0x078DF80A, 0x04D00D24, 0xFCE9F90C, 0x04F703F0);
	r4 = D(r4, s[1][0][1], 0x01EA00D9, 0xFEE6ED10, 0x0420180A, 0xF403EEF8);
	r5 = D(r5, s[1][0][1], 0x19D5F5DE, 0xFEFDF92C, 0x1512010D, 0x11F60006);
	r6 = D(r6, s[1][0][1], 0x0F14FFF7, 0xCA0FF9F1, 0x0381DF11, 0xD2D0F10D);
	r7 = D(r7, s[1][0][1], 0x03F509F7, 0xE1E80800, 0x0AFAEFFE, 0xEE061A06);
	r0 = D(r0, s[1][0][2], 0xFAFDFEFC, 0x04EBEBFE, 0xF202F7F3, 0x07F104EB);
	r1 = D(r1, s[1][0][2], 0xF3021314, 0x04AFE9E4, 0xFD01EC16, 0xECED06E7);
	r2 = D(r2, s[1][0][2], 0xDAEB03FD, 0xFFEE14EE, 0x0307F508, 0xF8F901FB);
	r3 = D(r3, s[1][0][2], 0x05C103FE, 0x040600F3, 0x1BFF0815, 0xF6140CED);
	r4 = D(r4, s[1][0][2], 0x20EF02E2, 0x021515F8, 0x00EFEC0F, 0xFFEEECFC);
	r5 = D(r5, s[1][0][2], 0x20FBF0F6, 0x03100807, 0x0A050003, 0xFAFE0BF7);
	r6 = D(r6, s[1][0][2], 0x0505F60D, 0xE4F61216, 0x06F70609, 0x0307080C);
	r7 = D(r7, s[1][0][2], 0x11EE0709, 0xF8FC02FD, 0x02FD0AF4, 0x0CFEFAFB);
	r0 = D(r0, s[1][1][0], 0xF21C0609, 0xFFE708EF, 0x1601F7F9, 0xE112030D);
	r1 = D(r1, s[1][1][0], 0x1B210101, 0x1B0A050E, 0x2201F1E2, 0xFAD6F61A);
	r2 = D(r2, s[1][1][0], 0xFC07F41A, 0xF1FC0BFA, 0xD5ECF7ED, 0xA91101F7);
	r3 = D(r3, s[1][1][0], 0xAE06F90E, 0xF8EAFD04, 0x0704EEE0, 0x0C0DF008);
	r4 = D(r4, s[1][1][0], 0x18E60E17, 0x0F080F19, 0xE7E3F1E7, 0xF226FA04);
	r5 = D(r5, s[1][1][0], 0xEEFBFAFC, 0xF8E80B05, 0x0CF507E9, 0x1F02EA04);
	r6 = D(r6, s[1][1][0], 0x0F0DFF0D, 0x0CF40CF7, 0xEBF905F0, 0xFCD5E0E7);
	r7 = D(r7, s[1][1][0], 0x09FD0D0D, 0x06B3F4F8, 0x00F8FA13, 0x000319F8);
	r0 = D(r0, s[1][1][1], 0xFF250118, 0xFDDFFDF4, 0x0D09F217, 0x0F110C01);
	r1 = D(r1, s[1][1][1], 0x1605FEF8, 0xF50EC407, 0x21ED00D5, 0xF73800E5);
	r2 = D(r2, s[1][1][1], 0x0FFD04FC, 0xF4FE0416, 0xFF0AFAE3, 0x0CF81010);
	r3 = D(r3, s[1][1][1], 0xFCE6FD10, 0x0399F328, 0xF8FE0DF2, 0xF2EE0314);
	r4 = D(r4, s[1][1][1], 0x09FEF006, 0xFDF4FCF2, 0xDCF2100D, 0x121DF60C);
	r5 = D(r5, s[1][1][1], 0xFCFF0304, 0xF9F6F7FA, 0xF0EE0626, 0x05FB05FF);
	r6 = D(r6, s[1][1][1], 0x110AF4ED, 0x81E5F731, 0xFCED2224, 0xC400F60D);
	r7 = D(r7, s[1][1][1], 0x1F0504E8, 0xF7F603E4, 0xF1EBECF6, 0xF7D1150E);
	r0 = D(r0, s[1][1][2], 0xFFFFF700, 0xF804FCF9, 0x0C0A0503, 0xF8040306);
	r1 = D(r1, s[1][1][2], 0xF10AFEF6, 0x18DE2B0D, 0xF02D0BFD, 0x0EEBFFF1);
	r2 = D(r2, s[1][1][2], 0xFEF90002, 0x09F70323, 0xF4FE0E00, 0xF8F7EEF4);
	r3 = D(r3, s[1][1][2], 0xF2150BFE, 0x0EE50DFE, 0xFA0BF420, 0xF20602FD);
	r4 = D(r4, s[1][1][2], 0xF5F719FC, 0xE701FC12, 0x08FB0CFA, 0x09010A01);
	r5 = D(r5, s[1][1][2], 0x0A02FDFF, 0xF50AF3DE, 0x04F9FDF3, 0xF311F6F3);
	r6 = D(r6, s[1][1][2], 0xFC120807, 0x06F5090A, 0xF819FDF3, 0xE6FC13E6);
	r7 = D(r7, s[1][1][2], 0x011AED11, 0xFDF1FE0C, 0x0BF90102, 0x0E07EA04);
	r0 = D(r0, s[1][2][0], 0xF01C02F2, 0xFEF2EF0F, 0x020500F9, 0xD30614F5);
	r1 = D(r1, s[1][2][0], 0x2AF8EB07, 0x0BFA18EF, 0xF411E4F7, 0x04F9060F);
	r2 = D(r2, s[1][2][0], 0xE316F406, 0xCFF800F9, 0x22F1FB16, 0xFC10F5FA);
	r3 = D(r3, s[1][2][0], 0xACF8F3F2, 0x110F0A01, 0xF80B08E9, 0x07FBFFDD);
	r4 = D(r4, s[1][2][0], 0xF50105FA, 0x03020BF7, 0xEEE9F405, 0x81250412);
	r5 = D(r5, s[1][2][0], 0xF5FB0E11, 0x1205EBF3, 0x1208FFFF, 0xDED9FB05);
	r6 = D(r6, s[1][2][0], 0x04150B02, 0x01FA0C04, 0x1AFD01FE, 0xC623010B);
	r7 = D(r7, s[1][2][0], 0x0EF4160B, 0x0BF504F8, 0x04FB0104, 0xDA0101F5);
	r0 = D(r0, s[1][2][1], 0xEA1A05EB, 0x0E1A11F9, 0x04151A03, 0xFA0DFD13);
	r1 = D(r1, s[1][2][1], 0x18F8FBED, 0xF1050EE8, 0x05FCEF1B, 0x09060205);
	r2 = D(r2, s[1][2][1], 0xFA15F5F7, 0x0D0A07F6, 0x120817EA, 0x04FEFB05);
	r3 = D(r3, s[1][2][1], 0xFBF21109, 0xF3EA05F9, 0x080B06FC, 0xFE000609);
	r4 = D(r4, s[1][2][1], 0x0DF30614, 0xEDFDFAEE, 0xFEF9FB1B, 0xFDF509F2);
	r5 = D(r5, s[1][2][1], 0xDE0AEFEA, 0x10E9091D, 0x07050312, 0xF80BF403);
	r6 = D(r6, s[1][2][1], 0x16090A09, 0xCE0A2004, 0x0004FDFF, 0xDDFD16EA);
	r7 = D(r7, s[1][2][1], 0x08F60904, 0x1708E61C, 0xFE09F60E, 0xEB02E7FA);
	r0 = D(r0, s[1][2][2], 0x06081003, 0x210AF60E, 0x06FD0508, 0xF7FAF3EA);
	r1 = D(r1, s[1][2][2], 0xFCE50C04, 0x02EDEBD8, 0xFD0020FD, 0x14DEF000);
	r2 = D(r2, s[1][2][2], 0xFBE6FFF4, 0x080DFBED, 0xE6F9F00C, 0xFE0A0C09);
	r3 = D(r3, s[1][2][2], 0x00F8F7FF, 0xFFF706F7, 0xFAFFE8FA, 0x00E60C33);
	r4 = D(r4, s[1][2][2], 0xD6FFF7F4, 0xFEFD0304, 0x08F1FCEE, 0x01F800FF);
	r5 = D(r5, s[1][2][2], 0x080D080F, 0x0B02FBF7, 0x05FDDAF4, 0x1001F20C);
	r6 = D(r6, s[1][2][2], 0x0710001A, 0xEBFBF813, 0xFF02FEEE, 0x00FCF20C);
	r7 = D(r7, s[1][2][2], 0x020701EC, 0x25FEF500, 0x0D04F2F4, 0x0504FB09);
	s[0][0][0] = G[2][xy.y+0][xy.x+0]; s[0][0][1] = G[2][xy.y+0][xy.x+1];
	s[0][0][2] = G[2][xy.y+0][xy.x+2]; s[0][1][0] = G[2][xy.y+1][xy.x+0];
	s[0][1][1] = G[2][xy.y+1][xy.x+1]; s[0][1][2] = G[2][xy.y+1][xy.x+2];
	s[0][2][0] = G[2][xy.y+2][xy.x+0]; s[0][2][1] = G[2][xy.y+2][xy.x+1];
	s[0][2][2] = G[2][xy.y+2][xy.x+2]; s[1][0][0] = G[3][xy.y+0][xy.x+0];
	s[1][0][1] = G[3][xy.y+0][xy.x+1]; s[1][0][2] = G[3][xy.y+0][xy.x+2];
	s[1][1][0] = G[3][xy.y+1][xy.x+0]; s[1][1][1] = G[3][xy.y+1][xy.x+1];
	s[1][1][2] = G[3][xy.y+1][xy.x+2]; s[1][2][0] = G[3][xy.y+2][xy.x+0];
	s[1][2][1] = G[3][xy.y+2][xy.x+1]; s[1][2][2] = G[3][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x05F3F103, 0xFF14F204, 0x0DF3E7F8, 0x04EDF702);
	r1 = D(r1, s[0][0][0], 0x000C07F3, 0x00E520F0, 0xFC0A0303, 0x03F61B09);
	r2 = D(r2, s[0][0][0], 0x0D0DFB0A, 0x0F010A11, 0xFE14F809, 0x0F0AE1F6);
	r3 = D(r3, s[0][0][0], 0xF60BDC0E, 0xFFF60F02, 0xF8F02B07, 0x0516E0FF);
	r4 = D(r4, s[0][0][0], 0xF6F0F0F5, 0xFFEAFDE5, 0xE605D40C, 0x02F903F5);
	r5 = D(r5, s[0][0][0], 0x050801F3, 0xFD181200, 0xFC04F004, 0xFA13E5F4);
	r6 = D(r6, s[0][0][0], 0xF621F1FD, 0xEB0FFD02, 0xFBF7EA0B, 0xFAF01A19);
	r7 = D(r7, s[0][0][0], 0x010CE807, 0xEEF1F705, 0x0814FDF7, 0xF7030BED);
	r0 = D(r0, s[0][0][1], 0xFDF00DFF, 0xFCE50000, 0xFA040209, 0x020324ED);
	r1 = D(r1, s[0][0][1], 0x0801F4FC, 0x12FE15FF, 0x0A0A27FC, 0xF5011705);
	r2 = D(r2, s[0][0][1], 0xF6070F0F, 0x04FE1112, 0xFDF6E1F0, 0x1FF0FB0E);
	r3 = D(r3, s[0][0][1], 0xFEFADA00, 0xFDF3F1FD, 0xF219130B, 0xE9F512F4);
	r4 = D(r4, s[0][0][1], 0xCED8F7C5, 0x0AEBF6F5, 0xF717030A, 0xFC0309FE);
	r5 = D(r5, s[0][0][1], 0x22E5DB0D, 0x0F0CEB02, 0x0811FB18, 0xF6F9F326);
	r6 = D(r6, s[0][0][1], 0xEF1027FE, 0x0FF2ECF1, 0xFEF1F009, 0x24030DE4);
	r7 = D(r7, s[0][0][1], 0x040FFFEE, 0x0FFDFB03, 0x08100D0F, 0x09F21507);
	r0 = D(r0, s[0][0][2], 0x06F7FDF8, 0xF8E505F9, 0x060DFE09, 0x140CFCFF);
	r1 = D(r1, s[0][0][2], 0xF6EB0516, 0xF5F808FA, 0x1200F40B, 0x100B0E02);
	r2 = D(r2, s[0][0][2], 0xE904F103, 0xFDEF0BF0, 0xF8C815F6, 0xFD0DF600);
	r3 = D(r3, s[0][0][2], 0x0C060401, 0xF30B0D23, 0x0B162A01, 0x0A10F818);
	r4 = D(r4, s[0][0][2], 0x0B08FAF6, 0x0A021FE3, 0x0717FA0D, 0x04030714);
	r5 = D(r5, s[0][0][2], 0xFCFADEF9, 0xE30EEAFB, 0x1202EEF2, 0x0D01F304);
	r6 = D(r6, s[0][0][2], 0xF906EC01, 0x21FD28FA, 0xF4F50501, 0x00041AF1);
	r7 = D(r7, s[0][0][2], 0x06FE2BEF, 0xF507FD00, 0x0F140506, 0x28003104);
	r0 = D(r0, s[0][1][0], 0xFD22FA09, 0x12FE0217, 0xE3F3FDF6, 0xF719ECF2);
	r1 = D(r1, s[0][1][0], 0xF4230309, 0xFD0B1D11, 0x03F5FCFC, 0x080FE904);
	r2 = D(r2, s[0][1][0], 0xF8E6FCFB, 0x090EE506, 0xFAD6E701, 0x190203F9);
	r3 = D(r3, s[0][1][0], 0x09FFF407, 0xFEED0800, 0xCA08F01B, 0xFB11CB00);
	r4 = D(r4, s[0][1][0], 0xF306D0FA, 0x11FEFE0C, 0x100A1206, 0x0BF816E9);
	r5 = D(r5, s[0][1][0], 0xEAF8E615, 0x081B0A10, 0xF9EF1613, 0x1507FC18);
	r6 = D(r6, s[0][1][0], 0xFC0110FC, 0xE2060E18, 0x0C04E5F5, 0xFBFE24F1);
	r7 = D(r7, s[0][1][0], 0x010AE1E3, 0xF4F40AF0, 0x0BF7D9F8, 0x07122119);
	r0 = D(r0, s[0][1][1], 0x0024F0F9, 0xFCE818F3, 0x04E9ED13, 0x11E81E01);
	r1 = D(r1, s[0][1][1], 0x0305F206, 0x08052B0D, 0x0916FC04, 0xECF9E002);
	r2 = D(r2, s[0][1][1], 0x0DED0A2C, 0x180BF207, 0xFCE7FABB, 0x21F6FB06);
	r3 = D(r3, s[0][1][1], 0x03EC2AFB, 0x080CFC11, 0xE909FC0F, 0xFAFDF80B);
	r4 = D(r4, s[0][1][1], 0xF8DE0BBA, 0xF31709DA, 0xDEFAECD0, 0x1607FA03);
	r5 = D(r5, s[0][1][1], 0xF00315F9, 0xF0040803, 0xF708E611, 0x0615D115);
	r6 = D(r6, s[0][1][1], 0xF3FF17FE, 0x10DB07FB, 0xEE06FAFB, 0x05FFDFD0);
	r7 = D(r7, s[0][1][1], 0x09FD06E1, 0x100818EA, 0x08F50A08, 0xF9FBDE03);
	r0 = D(r0, s[0][1][2], 0x0F020003, 0x14EC01D3, 0xFDF60FFB, 0xEEF2F9E0);
	r1 = D(r1, s[0][1][2], 0xF30EED0D, 0xF8F60CE1, 0xECE34BD9, 0x0FF80300);
	r2 = D(r2, s[0][1][2], 0x07F7122B, 0x12070FEE, 0xF8032EEB, 0x0C141209);
	r3 = D(r3, s[0][1][2], 0xD4F2F50B, 0xFEFAED2B, 0x0DEDE2EC, 0xFEFB0F1A);
	r4 = D(r4, s[0][1][2], 0xF60BF89D, 0xFDFDE019, 0xE8EB41FC, 0x03F6E818);
	r5 = D(r5, s[0][1][2], 0xFFE70511, 0xEB051C2A, 0xFD0C14FE, 0xF0EDF210);
	r6 = D(r6, s[0][1][2], 0xFF070E00, 0x17ECE8F2, 0xE30A1806, 0x020A0AF1);
	r7 = D(r7, s[0][1][2], 0xFCFBE902, 0x14FD03FA, 0x0904FB09, 0x19F00AD3);
	r0 = D(r0, s[0][2][0], 0xFB200DFE, 0x0113000A, 0x09F618F6, 0x02101DF0);
	r1 = D(r1, s[0][2][0], 0xF7EAEF07, 0xF5061B0E, 0xFF1F0A12, 0x0307BB06);
	r2 = D(r2, s[0][2][0], 0xF8F70BE2, 0x10EA11FB, 0xFCEAD414, 0x03022AF8);
	r3 = D(r3, s[0][2][0], 0xFAF6F5F8, 0x03DF0BFA, 0x04F200F3, 0x1608FDF6);
	r4 = D(r4, s[0][2][0], 0x04350006, 0x0DF522E9, 0x0BF1FD07, 0x14E802DE);
	r5 = D(r5, s[0][2][0], 0xF011F518, 0x08F0EE14, 0x05FAF800, 0x14FFE312);
	r6 = D(r6, s[0][2][0], 0x121AF3F6, 0xF5F80004, 0x070908ED, 0xFBF51017);
	r7 = D(r7, s[0][2][0], 0x112325FD, 0x01FEF5E1, 0x0A0E1B02, 0x090F1011);
	r0 = D(r0, s[0][2][1], 0x08E00EFB, 0x10ECFF15, 0xF6FEF21A, 0xF203E1DD);
	r1 = D(r1, s[0][2][1], 0x002814F0, 0x02FED6F5, 0x0A12FE05, 0xEADFCAF8);
	r2 = D(r2, s[0][2][1], 0x0AF4130D, 0x07D9EA0E, 0xFDE6111A, 0x15EAEB0E);
	r3 = D(r3, s[0][2][1], 0xFBFEBAEB, 0x15F00DEF, 0xFA120719, 0xF8FB1D16);
	r4 = D(r4, s[0][2][1], 0xE3DE0B2C, 0x01FF0608, 0xC5320BEB, 0x1510E7E8);
	r5 = D(r5, s[0][2][1], 0x02090FE3, 0x050CF708, 0xF400062E, 0x180211F0);
	r6 = D(r6, s[0][2][1], 0xF612E11A, 0x06EB0319, 0x02CDC809, 0x1110DBAC);
	r7 = D(r7, s[0][2][1], 0x0F0A12FA, 0xEBE8E400, 0xFE07F8F4, 0x16F8E111);
	r0 = D(r0, s[0][2][2], 0xF7040C0A, 0x05080CF8, 0xF4E9F109, 0x010FF9D9);
	r1 = D(r1, s[0][2][2], 0xF9F8F722, 0xED92C6E9, 0x17FA13FB, 0x0017D9F8);
	r2 = D(r2, s[0][2][2], 0x05EE0B0E, 0xF8DD4425, 0x0CE20F0A, 0x0A030905);
	r3 = D(r3, s[0][2][2], 0xF1CDECDF, 0xF6FDE9F4, 0x25EFFAF1, 0xF203DE06);
	r4 = D(r4, s[0][2][2], 0x010105FB, 0xFFEDFE1A, 0xF52107E5, 0xF80808EE);
	r5 = D(r5, s[0][2][2], 0xEB190FFB, 0x0BFE01FF, 0xFEFB10FA, 0x0FEBFFF7);
	r6 = D(r6, s[0][2][2], 0x0400080D, 0x1CFBDDDE, 0xEFF8060A, 0xFEF9C7DE);
	r7 = D(r7, s[0][2][2], 0xF9F10907, 0x0AEC0410, 0x0A200DF4, 0x1DFBF7BF);
	r0 = D(r0, s[1][0][0], 0x1210FB02, 0xE5F3ED0D, 0x0914F2E5, 0x18000502);
	r1 = D(r1, s[1][0][0], 0xEB110C0B, 0xF4F30404, 0xE3F21C09, 0x020AFDF4);
	r2 = D(r2, s[1][0][0], 0xEF10FFFC, 0x0CF0E7FC, 0xB4DA03F7, 0xF408EDFF);
	r3 = D(r3, s[1][0][0], 0xF9E5030C, 0xE910F810, 0xF300E710, 0x09DD130A);
	r4 = D(r4, s[1][0][0], 0xEE02F1EC, 0x01FC1205, 0x11160808, 0x180904F1);
	r5 = D(r5, s[1][0][0], 0xE8F81010, 0xEEF809FF, 0x090A070C, 0x0CEE16FB);
	r6 = D(r6, s[1][0][0], 0x16F4E6FB, 0xFF050B0E, 0xF605EF07, 0x00070519);
	r7 = D(r7, s[1][0][0], 0xFEFAEF19, 0xD513FEFD, 0xE60EF7FE, 0x02E920FD);
	r0 = D(r0, s[1][0][1], 0x0FFA0CF8, 0xEA0701F3, 0xFF00F60A, 0x00DDFFF9);
	r1 = D(r1, s[1][0][1], 0xFEF8EEE6, 0x06FDEC05, 0xF7F60907, 0xF221FA00);
	r2 = D(r2, s[1][0][1], 0xFAF9FEE5, 0x0DF7DFFB, 0x06071A09, 0x050704FD);
	r3 = D(r3, s[1][0][1], 0x0105FDE8, 0xFEE6FDE6, 0x21F90709, 0x11EB0305);
	r4 = D(r4, s[1][0][1], 0x1509EAF5, 0xEF26F8F7, 0x08DE35FD, 0x00F60113);
	r5 = D(r5, s[1][0][1], 0x0C00F800, 0xFAF412F1, 0xFE030DFC, 0xF1120AFF);
	r6 = D(r6, s[1][0][1], 0xE9121604, 0xFDFF1DEF, 0xF707D40A, 0x02161715);
	r7 = D(r7, s[1][0][1], 0x20F9F2F0, 0xE6FD0514, 0xF20B0119, 0xEF0D0AFA);
	r0 = D(r0, s[1][0][2], 0x0AFD0B01, 0x0B26E218, 0xF300F5F8, 0x0EE51B1B);
	r1 = D(r1, s[1][0][2], 0x170DF90E, 0xE9F002FA, 0xCFFA18EA, 0x08E50A0D);
	r2 = D(r2, s[1][0][2], 0xF9EDFE1E, 0xF414D6FF, 0xD3F108FA, 0xF7FC0DFD);
	r3 = D(r3, s[1][0][2], 0x1EEFFB1F, 0xFEEBEB0C, 0x10F4F605, 0xE7FB0DFB);
	r4 = D(r4, s[1][0][2], 0x1E0B0316, 0xFBF8F50A, 0xF32504FB, 0x230109FF);
	r5 = D(r5, s[1][0][2], 0x1119DAEB, 0xEDDE0713, 0xF60600FD, 0xE7FF09FF);
	r6 = D(r6, s[1][0][2], 0xF0180002, 0x01031C0D, 0xF116D80B, 0x010B0915);
	r7 = D(r7, s[1][0][2], 0x07F4EB04, 0xE908E50F, 0xF00104F5, 0xFA08EF1E);
	r0 = D(r0, s[1][1][0], 0xF30DFCFF, 0x07FF07E1, 0xF6F505E0, 0xEDFE1001);
	r1 = D(r1, s[1][1][0], 0x03FE07DB, 0x07F116FF, 0x020F381E, 0xFEEF150A);
	r2 = D(r2, s[1][1][0], 0xF4ED02E5, 0x10CBE804, 0xFA0C0A04, 0x1AF0EFF4);
	r3 = D(r3, s[1][1][0], 0xE8F30A00, 0x01FF00E6, 0xFDEB0C04, 0x1EF8F90D);
	r4 = D(r4, s[1][1][0], 0xECE71609, 0x011A07F9, 0xFF1506F9, 0x08F5F6F5);
	r5 = D(r5, s[1][1][0], 0x0D260908, 0xED010A03, 0xFE25D9F8, 0x18130300);
	r6 = D(r6, s[1][1][0], 0x07FBF4FE, 0x06F203F4, 0x14C5FB00, 0x0E080A06);
	r7 = D(r7, s[1][1][0], 0x0CEFFE13, 0x27110BFC, 0x14040504, 0xF60803FE);
	r0 = D(r0, s[1][1][1], 0xDFFF19FD, 0x0DD41603, 0xEDF812F3, 0x06FCECFE);
	r1 = D(r1, s[1][1][1], 0x0308FCEC, 0xF4E5090C, 0xFE1B0705, 0x0529FC01);
	r2 = D(r2, s[1][1][1], 0x0CF7280F, 0xF118FD0B, 0xF911F50D, 0xFA070C17);
	r3 = D(r3, s[1][1][1], 0xF11F203F, 0x1700FDFE, 0x0D0C09FF, 0xFA0C0405);
	r4 = D(r4, s[1][1][1], 0x0BD414EF, 0x44D90E04, 0x0510F40B, 0x02F2F9FF);
	r5 = D(r5, s[1][1][1], 0x1A16F8FD, 0x0EFDF0FE, 0x0000EC04, 0xFCFB1902);
	r6 = D(r6, s[1][1][1], 0x10F7F809, 0x1323F200, 0xFFFE0004, 0x0E34F5F3);
	r7 = D(r7, s[1][1][1], 0x02E206EB, 0x40FBDC06, 0x160800FF, 0xDCE607F7);
	r0 = D(r0, s[1][1][2], 0xF10D03F8, 0x38E9F20B, 0x0D02EC0B, 0x071CFA01);
	r1 = D(r1, s[1][1][2], 0x0604EAF3, 0x28021C30, 0xF01018ED, 0xFE1309FD);
	r2 = D(r2, s[1][1][2], 0x0D010408, 0xE8071820, 0x030AD0E3, 0xE3FE0105);
	r3 = D(r3, s[1][1][2], 0xDD1A0DE4, 0xF51613FD, 0xFA2DF404, 0xDAFC26F3);
	r4 = D(r4, s[1][1][2], 0x2BDC0001, 0x0F13F900, 0xECF20C0D, 0x03FEFD08);
	r5 = D(r5, s[1][1][2], 0xF9000BE9, 0xFE24D8F1, 0xEEF0E6FC, 0xDF0303EC);
	r6 = D(r6, s[1][1][2], 0xFC16FA03, 0x021E0FF8, 0x2613F7DD, 0xE5FCF01A);
	r7 = D(r7, s[1][1][2], 0x00FF0401, 0x3613E0FA, 0x10F6FBE2, 0xF2E30708);
	r0 = D(r0, s[1][2][0], 0x08080607, 0xEDED10FA, 0xFF050102, 0xF8130106);
	r1 = D(r1, s[1][2][0], 0x091921F9, 0x06010101, 0xEEF0F9EF, 0xFC1313FB);
	r2 = D(r2, s[1][2][0], 0xED1D2308, 0xF8CC0BF4, 0x040912EC, 0xEDF7E6FA);
	r3 = D(r3, s[1][2][0], 0xFEF6F0F0, 0xF71BEA0E, 0x000DEC04, 0x00F90D18);
	r4 = D(r4, s[1][2][0], 0x0404F9F9, 0xDF220419, 0xF10A2310, 0xDA1AF4F4);
	r5 = D(r5, s[1][2][0], 0xF31612FE, 0xF0F805EF, 0x240EFBFB, 0xFD06EF19);
	r6 = D(r6, s[1][2][0], 0x04ED05FD, 0x0AE0131A, 0xFF0E0000, 0x0BFE0802);
	r7 = D(r7, s[1][2][0], 0xF557F607, 0x1C061FEE, 0xEDFCFDFD, 0x0519F10E);
	r0 = D(r0, s[1][2][1], 0xFF030301, 0xE3EBF407, 0x0409080B, 0x0ECA0719);
	r1 = D(r1, s[1][2][1], 0x02E1FE0C, 0x0509DE0C, 0xB11516FD, 0x09FE11E0);
	r2 = D(r2, s[1][2][1], 0xF0E800F4, 0x0A351504, 0xF228FAFA, 0xF305EAF2);
	r3 = D(r3, s[1][2][1], 0x0D43F621, 0x091FEB11, 0x11E3FFFA, 0x00FDECFC);
	r4 = D(r4, s[1][2][1], 0x1207FBFD, 0xFF10ECF7, 0xF0E110E1, 0xEEFFFA05);
	r5 = D(r5, s[1][2][1], 0xFCFDFB05, 0xD9DBE6FF, 0x09F40607, 0xDBBEF8FF);
	r6 = D(r6, s[1][2][1], 0xFBF8E802, 0xEADA0106, 0x0150FC09, 0x2CECFE02);
	r7 = D(r7, s[1][2][1], 0xF0E5EDFA, 0xF3810304, 0x1AF80507, 0x0504F8FE);
	r0 = D(r0, s[1][2][2], 0xF9000307, 0x28F7F8FD, 0xE40AEF04, 0x09EC0FF7);
	r1 = D(r1, s[1][2][2], 0x04F2E5F0, 0x001FDAE9, 0x1723F8C6, 0xE4191919);
	r2 = D(r2, s[1][2][2], 0x1123EDFC, 0x181FF301, 0x2028EF09, 0x130A0F0B);
	r3 = D(r3, s[1][2][2], 0xDACDFCF3, 0x05172303, 0xDC04EBE5, 0xFE1108F7);
	r4 = D(r4, s[1][2][2], 0xFA08FA0F, 0x0EFFFBEB, 0xE821EF13, 0xF00311F7);
	r5 = D(r5, s[1][2][2], 0xFDE7EE05, 0xFAFFF504, 0x07E0F4F4, 0xFD1DF6E4);
	r6 = D(r6, s[1][2][2], 0x0910DEF3, 0xF7F5F2FA, 0x0518EA18, 0x1309FD06);
	r7 = D(r7, s[1][2][2], 0xFA11FC06, 0x6DCBF70F, 0xF11101F9, 0xE8F9EFF5);
	s[0][0][0] = G[4][xy.y+0][xy.x+0]; s[0][0][1] = G[4][xy.y+0][xy.x+1];
	s[0][0][2] = G[4][xy.y+0][xy.x+2]; s[0][1][0] = G[4][xy.y+1][xy.x+0];
	s[0][1][1] = G[4][xy.y+1][xy.x+1]; s[0][1][2] = G[4][xy.y+1][xy.x+2];
	s[0][2][0] = G[4][xy.y+2][xy.x+0]; s[0][2][1] = G[4][xy.y+2][xy.x+1];
	s[0][2][2] = G[4][xy.y+2][xy.x+2]; s[1][0][0] = G[5][xy.y+0][xy.x+0];
	s[1][0][1] = G[5][xy.y+0][xy.x+1]; s[1][0][2] = G[5][xy.y+0][xy.x+2];
	s[1][1][0] = G[5][xy.y+1][xy.x+0]; s[1][1][1] = G[5][xy.y+1][xy.x+1];
	s[1][1][2] = G[5][xy.y+1][xy.x+2]; s[1][2][0] = G[5][xy.y+2][xy.x+0];
	s[1][2][1] = G[5][xy.y+2][xy.x+1]; s[1][2][2] = G[5][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xFDF40FFB, 0xED00F7EC, 0xFE00F803, 0x010BF9FF);
	r1 = D(r1, s[0][0][0], 0x04F816FA, 0xF21300FA, 0xFE2810F7, 0x0101FFEA);
	r2 = D(r2, s[0][0][0], 0x0BEAE809, 0xFB0EF600, 0xF2BC13F4, 0x05FFEAFF);
	r3 = D(r3, s[0][0][0], 0xF416F6E4, 0x1208FEF3, 0x07D2F70A, 0x0819191E);
	r4 = D(r4, s[0][0][0], 0xFEFD1004, 0x1AF907EF, 0x10061800, 0xF323DCF1);
	r5 = D(r5, s[0][0][0], 0x01FDFCF8, 0x0804EA0E, 0xFF0BF708, 0xFFFA1216);
	r6 = D(r6, s[0][0][0], 0x0205FE07, 0xF60F1900, 0x09FFDFFE, 0xDFD8B706);
	r7 = D(r7, s[0][0][0], 0x1E0FFBDE, 0x0400110F, 0xFD1603F8, 0xEAF02D14);
	r0 = D(r0, s[0][0][1], 0x110CFC06, 0x06F9EFF6, 0xFA1A0EEC, 0xFE16EB01);
	r1 = D(r1, s[0][0][1], 0x0FED260D, 0x0B0B1426, 0xF10D1306, 0xEFF219E0);
	r2 = D(r2, s[0][0][1], 0x00091C10, 0x06F309DC, 0x08F0D3D7, 0x0B011507);
	r3 = D(r3, s[0][0][1], 0x0C16F511, 0x0DE0F806, 0xFAE0121A, 0xFEFE0D0C);
	r4 = D(r4, s[0][0][1], 0xF9182FE5, 0xE6F6FAFE, 0xF70D0309, 0xF408E70B);
	r5 = D(r5, s[0][0][1], 0x14F6F902, 0xEDFE0C0B, 0xFDFFFEF9, 0xFBF3FEF8);
	r6 = D(r6, s[0][0][1], 0xEFF80A17, 0xFFF30915, 0x0012020E, 0x012290EC);
	r7 = D(r7, s[0][0][1], 0xE310F4F4, 0xFB00F70C, 0xF9FBFBF9, 0x03160B05);
	r0 = D(r0, s[0][0][2], 0x18F9C902, 0x0B15E705, 0x07FC0BF4, 0xF704EB1F);
	r1 = D(r1, s[0][0][2], 0xFA0603F2, 0x0502E310, 0xF41609DE, 0x10FD0508);
	r2 = D(r2, s[0][0][2], 0x17E61601, 0x0F01DD0A, 0x12D604EC, 0x0BFDD7FE);
	r3 = D(r3, s[0][0][2], 0xFCFDE72A, 0xD809120B, 0x0E160019, 0xE6F317F3);
	r4 = D(r4, s[0][0][2], 0xFB10EE05, 0xFDE9F71B, 0xFEDB2501, 0xFEFD0203);
	r5 = D(r5, s[0][0][2], 0xE40F13D9, 0xEF0F000F, 0xFE0A04E5, 0x0405FE13);
	r6 = D(r6, s[0][0][2], 0x09E8FDF7, 0x0F04DE03, 0x03F9EF04, 0x15F2E811);
	r7 = D(r7, s[0][0][2], 0xFDFC0CF8, 0xE8F3EAF8, 0x08020604, 0xFE27B3F8);
	r0 = D(r0, s[0][1][0], 0xFDEFFB23, 0x07FAFEE8, 0x0A070003, 0xF30DF401);
	r1 = D(r1, s[0][1][0], 0xFF060EF8, 0xEBF411F4, 0x0EF50528, 0x00E4FAFB);
	r2 = D(r2, s[0][1][0], 0xC606D3F0, 0xF607FAFA, 0xDA112707, 0xF200E7FC);
	r3 = D(r3, s[0][1][0], 0xF7E8ED15, 0xF1000A02, 0xF40AEAD1, 0x13FBDF0E);
	r4 = D(r4, s[0][1][0], 0x10090F14, 0xF211E8FA, 0xC8FD09D9, 0xF810FBE3);
	r5 = D(r5, s[0][1][0], 0xFFF81D19, 0xF20BE2FB, 0x04EFFD04, 0xE801ECF9);
	r6 = D(r6, s[0][1][0], 0x07FCECFB, 0x05FC15F9, 0xF4F5E520, 0x0B201009);
	r7 = D(r7, s[0][1][0], 0x1620EE1B, 0x02F620EE, 0x1A03E5E1, 0xF6F31408);
	r0 = D(r0, s[0][1][1], 0xE5000DF1, 0x180410F3, 0xF8F415F0, 0x1014EF01);
	r1 = D(r1, s[0][1][1], 0xF1F1F50D, 0x09DC070C, 0x02010D20, 0xFE092104);
	r2 = D(r2, s[0][1][1], 0xF909FA03, 0xEFF2EC02, 0xAFF73207, 0xF9FC0D00);
	r3 = D(r3, s[0][1][1], 0x113105F1, 0x0C24F4ED, 0x081105E4, 0x01F0060E);
	r4 = D(r4, s[0][1][1], 0x120515FA, 0x1E17F805, 0xFC1006F9, 0x10E204F8);
	r5 = D(r5, s[0][1][1], 0xFDF204E5, 0xF4E107FC, 0x0AF70509, 0xEC10C610);
	r6 = D(r6, s[0][1][1], 0xEBF50519, 0xF8E9CFFC, 0x18E90B13, 0x0BF90607);
	r7 = D(r7, s[0][1][1], 0x18E203F6, 0x0A04320C, 0xFCF3F2FD, 0x0218F2D1);
	r0 = D(r0, s[0][1][2], 0x030F0BF9, 0x10F717FA, 0xFB0A1215, 0xF1ECEDF0);
	r1 = D(r1, s[0][1][2], 0xF5050F01, 0xF602FB2E, 0xF0F6B504, 0x0DF8F818);
	r2 = D(r2, s[0][1][2], 0x10FB1BF2, 0x0FF91830, 0x14ED0FF0, 0x0308FCFC);
	r3 = D(r3, s[0][1][2], 0x0B0F2811, 0x0014DDE7, 0x04E1FDF0, 0x0710F602);
	r4 = D(r4, s[0][1][2], 0x000EEAD6, 0xE8F3F611, 0x2411190D, 0x12F8EC15);
	r5 = D(r5, s[0][1][2], 0x1B04F61F, 0xFEF4051B, 0xFB0CFF1B, 0x06F9EF0F);
	r6 = D(r6, s[0][1][2], 0x0CF0060A, 0xFEFBE611, 0x09FC0BF3, 0x0CEFEDF0);
	r7 = D(r7, s[0][1][2], 0xF6F11401, 0x05F30914, 0xF5EC15F1, 0x0BF0B7F1);
	r0 = D(r0, s[0][2][0], 0xE407FEEE, 0xF8E80310, 0xFF00EAFE, 0x01DFE50F);
	r1 = D(r1, s[0][2][0], 0x0DF2F003, 0xFCF608FC, 0x0501E8FE, 0x1D12F60A);
	r2 = D(r2, s[0][2][0], 0xEB08ED1A, 0x07EA060F, 0xF2F80E24, 0xF6F7FA04);
	r3 = D(r3, s[0][2][0], 0xF7FDF4C2, 0x17FD0714, 0xF10FFB06, 0x1FF8000A);
	r4 = D(r4, s[0][2][0], 0x0718E60D, 0xF00E0BF9, 0x12EB0709, 0xE720EE0E);
	r5 = D(r5, s[0][2][0], 0xEFECF813, 0xF604F9F9, 0x02FD0105, 0x1AF8F502);
	r6 = D(r6, s[0][2][0], 0xF1EFF3DC, 0x060718FA, 0xF40BEBE6, 0xF5E1E8F1);
	r7 = D(r7, s[0][2][0], 0xC8F4D3FE, 0xF417FBFC, 0xF500F90E, 0x0108071A);
	r0 = D(r0, s[0][2][1], 0x0402DB0B, 0xFD030A10, 0x0AFC12FA, 0xF7F516E7);
	r1 = D(r1, s[0][2][1], 0x0C09F104, 0x1F0CF30F, 0x0BDD0D50, 0xF72F08FE);
	r2 = D(r2, s[0][2][1], 0xF910DAFC, 0xF614FB10, 0x2AE932FC, 0x0213FAF7);
	r3 = D(r3, s[0][2][1], 0xEDF108F4, 0x0208E7F8, 0x00E4FCEA, 0xF60AFB03);
	r4 = D(r4, s[0][2][1], 0xF8EEFF08, 0xF9FFF5E9, 0x0AE418E0, 0xF309D6F2);
	r5 = D(r5, s[0][2][1], 0xE1FDFC0A, 0x0D22F705, 0x020324F8, 0xF703D3EF);
	r6 = D(r6, s[0][2][1], 0x1AF2EE14, 0x070400FF, 0xFF15F707, 0xF0169A19);
	r7 = D(r7, s[0][2][1], 0x0BF809E7, 0x13041B0E, 0x050408F7, 0xF6F102E0);
	r0 = D(r0, s[0][2][2], 0xF0FBEE09, 0x01E4FB10, 0x07020E00, 0x01E3FA11);
	r1 = D(r1, s[0][2][2], 0x0102FD18, 0xE9EB0022, 0x05DDE7EF, 0x0301E70D);
	r2 = D(r2, s[0][2][2], 0x08F6F401, 0x01F4F508, 0x1D0F1914, 0xF6ED0900);
	r3 = D(r3, s[0][2][2], 0xF6160CEC, 0xFFF300F4, 0x0ADEE8F1, 0x0908F11B);
	r4 = D(r4, s[0][2][2], 0xECFC1000, 0x0E03FAFE, 0xF1090305, 0xFD02EFF9);
	r5 = D(r5, s[0][2][2], 0x03DC1220, 0x131FF7FA, 0xF9F4F9F7, 0xFCF9F1F9);
	r6 = D(r6, s[0][2][2], 0x24012712, 0x0301EFF9, 0xE8FC1B26, 0xFF0CCD10);
	r7 = D(r7, s[0][2][2], 0xEAF9010E, 0x01000E06, 0xFF0C0CFF, 0x0AFCCCEF);
	r0 = D(r0, s[1][0][0], 0x03E402F2, 0xFD1B09F3, 0x03FBFBFD, 0xFCFFF6F9);
	r1 = D(r1, s[1][0][0], 0x0214E306, 0xF712141D, 0xE8E7E4FF, 0x0FF4FDFF);
	r2 = D(r2, s[1][0][0], 0x0C0CE50D, 0x09F703ED, 0xD5F5E10E, 0xF6F81201);
	r3 = D(r3, s[1][0][0], 0xF5410C04, 0xF6FF0EF6, 0x10EDF6F3, 0xE31208EA);
	r4 = D(r4, s[1][0][0], 0x0B0011E6, 0xFC09170C, 0xFCC4F7FD, 0x1AF40CFC);
	r5 = D(r5, s[1][0][0], 0xF2E10002, 0xEBFBEBFE, 0xFCF501FD, 0x0300F803);
	r6 = D(r6, s[1][0][0], 0x0CEEF3EC, 0xF2FDF502, 0x06D710E1, 0xDB070E18);
	r7 = D(r7, s[1][0][0], 0xEAE1F8FF, 0x040A0B1B, 0x08F0FF04, 0xC608FDFC);
	r0 = D(r0, s[1][0][1], 0x0600F301, 0xF0FF19FD, 0xF7F3F9FB, 0x01FC0508);
	r1 = D(r1, s[1][0][1], 0xFFF5F3FE, 0x08FC09ED, 0xF2FFFEFF, 0xEC05F102);
	r2 = D(r2, s[1][0][1], 0xE409ED02, 0xEE0D0BF4, 0x25DDDD09, 0xFC0B03FE);
	r3 = D(r3, s[1][0][1], 0x09F5FFF0, 0x021C1E0C, 0x090D020C, 0x1700F30E);
	r4 = D(r4, s[1][0][1], 0xF305000A, 0x0A12081C, 0xEC0C030E, 0x11FA1609);
	r5 = D(r5, s[1][0][1], 0x0BF70209, 0xEF16F607, 0x1103EF04, 0xFBFEE4FB);
	r6 = D(r6, s[1][0][1], 0x0C02F903, 0xFD00F30C, 0x09F7FDFC, 0xFEEB0BEF);
	r7 = D(r7, s[1][0][1], 0xE500EDFA, 0xFC2302FF, 0xF1191513, 0x0EFFEDEE);
	r0 = D(r0, s[1][0][2], 0x0AF8FC0C, 0x05FF1A00, 0xFAF4F501, 0xFB0A0101);
	r1 = D(r1, s[1][0][2], 0x04E6EE07, 0xFA0401D9, 0xF9ECF31F, 0xF1090B14);
	r2 = D(r2, s[1][0][2], 0x11050E11, 0xF5190907, 0xF0F5050A, 0x08FB0408);
	r3 = D(r3, s[1][0][2], 0x0B1AF30B, 0x1C13FBED, 0xED02F8FC, 0xF12B0509);
	r4 = D(r4, s[1][0][2], 0xFF0D061D, 0xF8EEE506, 0xF613FA12, 0xE0F617FF);
	r5 = D(r5, s[1][0][2], 0xF9F317FF, 0x1AFEECFF, 0xFFF8EF0E, 0xF80CEC11);
	r6 = D(r6, s[1][0][2], 0xFF12010A, 0xFB0C0405, 0x0604FFE1, 0x0DFA0111);
	r7 = D(r7, s[1][0][2], 0xF7030403, 0xF309F7F9, 0xEFF90DF9, 0x0CEA0FFD);
	r0 = D(r0, s[1][1][0], 0x0703F407, 0x190306EA, 0x1923F8FF, 0xFB0B0F0E);
	r1 = D(r1, s[1][1][0], 0x1814EB04, 0x04ECE51A, 0xF6F619F7, 0x0F0F15FA);
	r2 = D(r2, s[1][1][0], 0x0F0CEF10, 0x08F0FA00, 0x1B09F007, 0xE6FDF2F4);
	r3 = D(r3, s[1][1][0], 0xFDEDEF05, 0x06E00416, 0x0E04FB15, 0x08E71407);
	r4 = D(r4, s[1][1][0], 0x0A08FEF2, 0xE6DAEB08, 0xF7F3C405, 0xF8F0FBFF);
	r5 = D(r5, s[1][1][0], 0x070C0DE1, 0x0EFDEE0B, 0xF1140A0F, 0x0B08F9E6);
	r6 = D(r6, s[1][1][0], 0x0C0704F2, 0xF705052E, 0x03C3F208, 0x1F120FD5);
	r7 = D(r7, s[1][1][0], 0x0CFF0518, 0x10E70810, 0xFAFE0004, 0x080AF6D1);
	r0 = D(r0, s[1][1][1], 0xF703DD13, 0x05EA1FEF, 0xF309DA02, 0xF8F8FC00);
	r1 = D(r1, s[1][1][1], 0x14FDFEF1, 0xF8090F15, 0xF4FC10F2, 0xE3FAF802);
	r2 = D(r2, s[1][1][1], 0x0B06DAF9, 0xFCF3EC03, 0xEB0AC5E5, 0x0B0DFE09);
	r3 = D(r3, s[1][1][1], 0x0E1BF818, 0xEF0119D4, 0xFD090D02, 0x050A0B06);
	r4 = D(r4, s[1][1][1], 0x08FA09E1, 0x061325FA, 0x06F8EBF5, 0x0905FDFB);
	r5 = D(r5, s[1][1][1], 0xEFFDF7B3, 0xE8010700, 0x0AF10201, 0xF0FAD3F8);
	r6 = D(r6, s[1][1][1], 0xFA01FAF9, 0xEFEE120B, 0x0F1B0BF7, 0x052115EA);
	r7 = D(r7, s[1][1][1], 0x2F2405FD, 0x0EFB15EC, 0x0BF609FA, 0x1101E5DE);
	r0 = D(r0, s[1][1][2], 0x03FCD8FB, 0xF4FF11FC, 0xEE0202FC, 0x09EC03FE);
	r1 = D(r1, s[1][1][2], 0xEEF100FE, 0x1911F511, 0xFAEE01EF, 0xEF040A0F);
	r2 = D(r2, s[1][1][2], 0x1C13040A, 0x0A24170D, 0xF3FFED13, 0x0309FEFA);
	r3 = D(r3, s[1][1][2], 0x04FFFD02, 0x06F40D26, 0xFFF31FFE, 0x0201FBF2);
	r4 = D(r4, s[1][1][2], 0x01E51902, 0xFDFC10FA, 0xF2FAF907, 0xF708F302);
	r5 = D(r5, s[1][1][2], 0x001208EC, 0x1413F101, 0xFEF50A04, 0xF2131AF7);
	r6 = D(r6, s[1][1][2], 0xF504FB00, 0x1CF5FF07, 0xFBF30AF9, 0xF8FF0921);
	r7 = D(r7, s[1][1][2], 0xFB0911FF, 0xECF10C18, 0x05FC1405, 0x02EA13FB);
	r0 = D(r0, s[1][2][0], 0xFF19F100, 0xFFFAFC02, 0x03FF0D15, 0xE9EBFD21);
	r1 = D(r1, s[1][2][0], 0x080CF411, 0x1917EA09, 0xF6250907, 0x100EEF1A);
	r2 = D(r2, s[1][2][0], 0xF6EFF714, 0xF0F2FC08, 0x111103DA, 0x02FA14F3);
	r3 = D(r3, s[1][2][0], 0xF1EAEEF6, 0xFBF4FF14, 0xFCEDFC11, 0x0AEDDF03);
	r4 = D(r4, s[1][2][0], 0xF800E4F9, 0x1C00F607, 0x1AEA080A, 0x0219DFFC);
	r5 = D(r5, s[1][2][0], 0xEFFBF6F5, 0xFEF1FE06, 0x04FBFF25, 0x15D50900);
	r6 = D(r6, s[1][2][0], 0x07F3F003, 0x02F30F1B, 0xF60B070B, 0xFC000F0C);
	r7 = D(r7, s[1][2][0], 0xDEED112A, 0xF8EAF0F6, 0x01FDFEF0, 0xFAF40C09);
	r0 = D(r0, s[1][2][1], 0xF401D6EA, 0xF812FBFD, 0x02FB1AF0, 0x0D15F916);
	r1 = D(r1, s[1][2][1], 0x100405D0, 0xCDEED50A, 0xF6FF2FE7, 0xEDF2F5EF);
	r2 = D(r2, s[1][2][1], 0xEBF3FFF8, 0x05060C19, 0xF71CF4EB, 0x0203F504);
	r3 = D(r3, s[1][2][1], 0xF8EA08F5, 0x090B0B23, 0xFD03FD18, 0xF20607F8);
	r4 = D(r4, s[1][2][1], 0x12F407FC, 0xFCF4EBF1, 0xEBFC06D8, 0x0CFCE0F8);
	r5 = D(r5, s[1][2][1], 0xED0D09FA, 0xF9E90C0F, 0x0F04FF10, 0x0B03EB08);
	r6 = D(r6, s[1][2][1], 0xFE0607FC, 0x02FC170F, 0xFA1611FD, 0xEEF6F2F7);
	r7 = D(r7, s[1][2][1], 0x080F06F5, 0x0E030304, 0xF9EE1205, 0xFCF4F812);
	r0 = D(r0, s[1][2][2], 0xEFFFF5FD, 0x140B19EE, 0x0EF71010, 0x1212ECE3);
	r1 = D(r1, s[1][2][2], 0xF8FAFDFD, 0xFFCE12FD, 0xF3FEFEEC, 0x20110EEF);
	r2 = D(r2, s[1][2][2], 0xFEF801F6, 0x14F60500, 0x07EE00F6, 0x0A0410FD);
	r3 = D(r3, s[1][2][2], 0x1AF1EACE, 0x02FD132F, 0x1CF7EDF4, 0xF904EC09);
	r4 = D(r4, s[1][2][2], 0xF7F7FC10, 0xFD1101F3, 0x10E1EA09, 0xEB08F708);
	r5 = D(r5, s[1][2][2], 0x140FFE00, 0x09F30CF6, 0xEB070E02, 0x02040B07);
	r6 = D(r6, s[1][2][2], 0xFB06FA13, 0x050306F4, 0x0A11FFF0, 0x00E30001);
	r7 = D(r7, s[1][2][2], 0xF2EDFD00, 0xF9090407, 0x0306EC05, 0xFF11130C);
	s[0][0][0] = G[6][xy.y+0][xy.x+0]; s[0][0][1] = G[6][xy.y+0][xy.x+1];
	s[0][0][2] = G[6][xy.y+0][xy.x+2]; s[0][1][0] = G[6][xy.y+1][xy.x+0];
	s[0][1][1] = G[6][xy.y+1][xy.x+1]; s[0][1][2] = G[6][xy.y+1][xy.x+2];
	s[0][2][0] = G[6][xy.y+2][xy.x+0]; s[0][2][1] = G[6][xy.y+2][xy.x+1];
	s[0][2][2] = G[6][xy.y+2][xy.x+2]; s[1][0][0] = G[7][xy.y+0][xy.x+0];
	s[1][0][1] = G[7][xy.y+0][xy.x+1]; s[1][0][2] = G[7][xy.y+0][xy.x+2];
	s[1][1][0] = G[7][xy.y+1][xy.x+0]; s[1][1][1] = G[7][xy.y+1][xy.x+1];
	s[1][1][2] = G[7][xy.y+1][xy.x+2]; s[1][2][0] = G[7][xy.y+2][xy.x+0];
	s[1][2][1] = G[7][xy.y+2][xy.x+1]; s[1][2][2] = G[7][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x0BF407F2, 0x0902EDEE, 0x1501FFDE, 0x01020807);
	r1 = D(r1, s[0][0][0], 0xEE0F0BF4, 0x0B05E60A, 0x1CF9F40E, 0xEB060C09);
	r2 = D(r2, s[0][0][0], 0xF1E214E7, 0x0701F400, 0xF9C6ECF4, 0xF206E5F3);
	r3 = D(r3, s[0][0][0], 0x0AFE1208, 0x2DF4E4E5, 0x340C0B0B, 0x09F62F19);
	r4 = D(r4, s[0][0][0], 0x10F6000C, 0xFE09EA00, 0xD7FC0BF0, 0x30FC0BF3);
	r5 = D(r5, s[0][0][0], 0xECF90D2D, 0xF8E8FF2B, 0x04F9F7F3, 0x0B02140E);
	r6 = D(r6, s[0][0][0], 0x0EF21F0A, 0x0902FF0E, 0x22EAF212, 0xE205FC10);
	r7 = D(r7, s[0][0][0], 0xF1FD0EC1, 0x0005F4FB, 0xEFF2FD04, 0xDB1D0222);
	r0 = D(r0, s[0][0][1], 0x0105FBF6, 0xECEB00E8, 0x06EFEE2C, 0xF616ECFC);
	r1 = D(r1, s[0][0][1], 0x1900FD1A, 0xE4190913, 0x050F1045, 0xEFFEFF0A);
	r2 = D(r2, s[0][0][1], 0xF90FD512, 0xF91802FF, 0x091B0DFF, 0xFD1405ED);
	r3 = D(r3, s[0][0][1], 0x23FD1410, 0xECFC1907, 0x1DFB05F0, 0x0213E444);
	r4 = D(r4, s[0][0][1], 0x1A04000A, 0xEB0D23E9, 0xFB11EE14, 0xF1FCF001);
	r5 = D(r5, s[0][0][1], 0x2904030A, 0xF906EC2C, 0xFEF5EFE6, 0x220AE018);
	r6 = D(r6, s[0][0][1], 0x26F80BFB, 0xF80C0625, 0x1EF50DF7, 0xCEEAFA23);
	r7 = D(r7, s[0][0][1], 0xE9090F11, 0x15FF04F7, 0xFFF9F606, 0xF5200C8F);
	r0 = D(r0, s[0][0][2], 0xF301010A, 0xF9F811E3, 0x1A06020F, 0xF0F6000A);
	r1 = D(r1, s[0][0][2], 0xE409F11F, 0xEEF1EBF6, 0xFBFBD900, 0x0F0F0D12);
	r2 = D(r2, s[0][0][2], 0xF6F2FB11, 0xE50101F5, 0x121AEA04, 0x060EF70B);
	r3 = D(r3, s[0][0][2], 0x0EFFD50A, 0x06FE0FC1, 0x1502E30D, 0xDC0AE411);
	r4 = D(r4, s[0][0][2], 0x1F05079C, 0xE80FFD0B, 0xF8F7D706, 0x0B000B0D);
	r5 = D(r5, s[0][0][2], 0x151201F4, 0xFA09FA2B, 0xE0ECF101, 0x0F0F03F9);
	r6 = D(r6, s[0][0][2], 0x04E8FEDF, 0xEB06ED26, 0x160DFF16, 0x0716FB08);
	r7 = D(r7, s[0][0][2], 0xF90A0ED3, 0x05EF08EB, 0x15F80511, 0x08E4EF08);
	r0 = D(r0, s[0][1][0], 0x0B04042B, 0x0109EEDF, 0xF913022D, 0x0AD0F60B);
	r1 = D(r1, s[0][1][0], 0x1A0A17E3, 0xEFF814F6, 0xFF1705FD, 0x10130508);
	r2 = D(r2, s[0][1][0], 0x01F2FDB6, 0x240B0CF3, 0xD40600FA, 0x070E12D8);
	r3 = D(r3, s[0][1][0], 0x1081080B, 0xDCF7F4EC, 0xB1DEE5F1, 0xF9E9FDF7);
	r4 = D(r4, s[0][1][0], 0xD8F0FF2F, 0xF601FDDF, 0x0AF7F015, 0xDD10D70A);
	r5 = D(r5, s[0][1][0], 0xF9F41304, 0x37030111, 0xE1F7FC03, 0xF8F60E3F);
	r6 = D(r6, s[0][1][0], 0xF6F600FC, 0x16ED0912, 0x15CA1303, 0x1BFDFB13);
	r7 = D(r7, s[0][1][0], 0xD10DD811, 0x08FE0D02, 0xFE05F103, 0x1107070D);
	r0 = D(r0, s[0][1][1], 0xEDFEF113, 0x180D12CC, 0xF9FE0EFB, 0x09F80AE1);
	r1 = D(r1, s[0][1][1], 0xDB00F600, 0xFBB9E727, 0xF7FD2606, 0xDB060A01);
	r2 = D(r2, s[0][1][1], 0xF8071DC8, 0x1BE1142E, 0x0809FFF0, 0x0603030A);
	r3 = D(r3, s[0][1][1], 0xFDFCE022, 0xFC01EA35, 0x08E2F530, 0xF7FE09FE);
	r4 = D(r4, s[0][1][1], 0x1603E200, 0xF5F7EA18, 0x02F70216, 0xF702ED13);
	r5 = D(r5, s[0][1][1], 0xEA0BF9DB, 0x011200E7, 0x130EFFCA, 0x10EFE8CB);
	r6 = D(r6, s[0][1][1], 0xE408EEE8, 0x16031311, 0x18F40310, 0xEDF52337);
	r7 = D(r7, s[0][1][1], 0xE5F8FDDF, 0xF80910F6, 0x0CE9011D, 0xF42A01D0);
	r0 = D(r0, s[0][1][2], 0x0103E70D, 0x1C0EFAFF, 0x06FBF22C, 0xFB12F80C);
	r1 = D(r1, s[0][1][2], 0x1BFB0802, 0xE5F0B044, 0xF4F3F181, 0x1902FAC4);
	r2 = D(r2, s[0][1][2], 0xF6F0DBC2, 0x0F1BF9ED, 0xEF0D04EF, 0xF806EFF9);
	r3 = D(r3, s[0][1][2], 0x07F6FE2F, 0x050B0724, 0xD2F00BEE, 0xF3F7FE07);
	r4 = D(r4, s[0][1][2], 0x1A0A14FF, 0x0FF602F0, 0xB40CF923, 0xFDF906B3);
	r5 = D(r5, s[0][1][2], 0x0107FE04, 0x2C020A04, 0x1A0BFFE0, 0x01000A04);
	r6 = D(r6, s[0][1][2], 0xEB14FDF0, 0x07D8062A, 0x16F90853, 0xF6F5F9C9);
	r7 = D(r7, s[0][1][2], 0x25E8FCE2, 0x15060D38, 0xF1020907, 0x0BEDFDFF);
	r0 = D(r0, s[0][2][0], 0xF1120F05, 0xF5FC0FF1, 0xFE0BF90E, 0x27F20303);
	r1 = D(r1, s[0][2][0], 0x04F5F604, 0xFF21F601, 0x2BD7F8F4, 0x04FC05EB);
	r2 = D(r2, s[0][2][0], 0xF8050281, 0x0205FBF1, 0x0B0721FD, 0x0EEE0F07);
	r3 = D(r3, s[0][2][0], 0x021B03FF, 0x0E07FAF1, 0x1D0C1434, 0x09E30124);
	r4 = D(r4, s[0][2][0], 0x0F0BE404, 0x0CE61EFC, 0x0E05D9DF, 0x20002BF2);
	r5 = D(r5, s[0][2][0], 0x0305061D, 0xF307FFAC, 0x200FFDFA, 0xE2EAFDC0);
	r6 = D(r6, s[0][2][0], 0xD7F6F1E7, 0xFEEEFE15, 0xFC0CF506, 0x2415F8E0);
	r7 = D(r7, s[0][2][0], 0x950BFF81, 0x00EDE914, 0xFB040A1B, 0xF3E8052D);
	r0 = D(r0, s[0][2][1], 0xEEFE06F6, 0xED0E050A, 0x0CF50017, 0x2C00FA10);
	r1 = D(r1, s[0][2][1], 0xE405FCF6, 0x23CFF20B, 0x1EFE0A09, 0x10E6E5D2);
	r2 = D(r2, s[0][2][1], 0x01FA06ED, 0xE10902FC, 0x26F007E0, 0x0CF402FF);
	r3 = D(r3, s[0][2][1], 0xF8F2D02A, 0xF3FD0BFC, 0xF80C112C, 0xF8F4FBED);
	r4 = D(r4, s[0][2][1], 0x2902F818, 0xFDFA0026, 0xEEE90EE6, 0xEB00021E);
	r5 = D(r5, s[0][2][1], 0x0C0BFFEA, 0x19F700DE, 0x06FC091D, 0x1EE1F8E7);
	r6 = D(r6, s[0][2][1], 0x0A28D709, 0xFD00F4FB, 0xCD15F21A, 0x310FFCF7);
	r7 = D(r7, s[0][2][1], 0xE50EFD2B, 0x17F6E81E, 0x0D17F206, 0xE4160700);
	r0 = D(r0, s[0][2][2], 0x000A04EE, 0xFA07F90D, 0xF10F01EF, 0xFEF90010);
	r1 = D(r1, s[0][2][2], 0xFD0205A1, 0xE907DD18, 0xFEF6F303, 0x1602EF00);
	r2 = D(r2, s[0][2][2], 0xF91CF581, 0x04FF160B, 0x04FBF3C9, 0xF5FF09F0);
	r3 = D(r3, s[0][2][2], 0xFC04023A, 0xF903FBE2, 0x0B01EEE1, 0x0AFB011D);
	r4 = D(r4, s[0][2][2], 0x200106F3, 0x1706F0F4, 0xE415EA09, 0x1BF30D03);
	r5 = D(r5, s[0][2][2], 0x020EE6D2, 0xF9F101D8, 0x10FDFD25, 0xFEF5FBF8);
	r6 = D(r6, s[0][2][2], 0x130FACF8, 0x11FF01FB, 0xEB060E03, 0x37F0FE0C);
	r7 = D(r7, s[0][2][2], 0xE401F40F, 0xE7F70528, 0x0100FD0C, 0xE1FD09ED);
	r0 = D(r0, s[1][0][0], 0x03F8000A, 0xFB1EF000, 0x01060810, 0x01F70908);
	r1 = D(r1, s[1][0][0], 0xF80803F5, 0xFE0503F3, 0x0C08FD04, 0xFEEFFCF5);
	r2 = D(r2, s[1][0][0], 0xE7FED805, 0xF7F2FA01, 0x0BF6F8FF, 0x030DEAF6);
	r3 = D(r3, s[1][0][0], 0xEB030D11, 0x00010708, 0xFFFB1308, 0xE8F4F4EC);
	r4 = D(r4, s[1][0][0], 0xFA001409, 0xF5FFFDF7, 0xEECE0EFA, 0xF4FBF310);
	r5 = D(r5, s[1][0][0], 0xF002F6F9, 0x04100612, 0x04091205, 0x07030918);
	r6 = D(r6, s[1][0][0], 0xE7FBFE15, 0x10FE0C02, 0xAFFDFFF6, 0xFE030107);
	r7 = D(r7, s[1][0][0], 0x0E0A0AFD, 0xEA090AF8, 0x03FDEE0B, 0x06FCF2E9);
	r0 = D(r0, s[1][0][1], 0xFFEB0002, 0xF217060B, 0x0B040E15, 0xEDF5000F);
	r1 = D(r1, s[1][0][1], 0x1F04FAF0, 0xF5FC140E, 0xD6F01212, 0xFD100BF8);
	r2 = D(r2, s[1][0][1], 0x03070B07, 0xDDFF01FB, 0xDF1A41F6, 0x03F0FC04);
	r3 = D(r3, s[1][0][1], 0x0DDD0008, 0xFD0AF80B, 0x16F6F203, 0x06F705F7);
	r4 = D(r4, s[1][0][1], 0x09EF1610, 0xFCF601FC, 0xF5010404, 0x03070115);
	r5 = D(r5, s[1][0][1], 0xFE04FC07, 0x151EFEED, 0x080E0BF6, 0x08FE04F4);
	r6 = D(r6, s[1][0][1], 0xED08EF02, 0xF209FDF8, 0xD4F40514, 0xF1160516);
	r7 = D(r7, s[1][0][1], 0xF70B0CF9, 0x1B0CF105, 0xFC20CA03, 0x09F50807);
	r0 = D(r0, s[1][0][2], 0xFC01FF0D, 0x04F8F900, 0x10F8EAE3, 0xFBFB01FF);
	r1 = D(r1, s[1][0][2], 0xF6002301, 0xFDF40BFC, 0x4F1FF7F5, 0x07F4F801);
	r2 = D(r2, s[1][0][2], 0x1501DF14, 0x2B030610, 0x0606CAD4, 0xFE070603);
	r3 = D(r3, s[1][0][2], 0xC2CD08FA, 0x18FC11F2, 0x11080FFB, 0x05180BED);
	r4 = D(r4, s[1][0][2], 0xFFEEEE0F, 0x09EFF711, 0x15F1ECF5, 0x0100F712);
	r5 = D(r5, s[1][0][2], 0xFC0CFEFA, 0x0EF92AEC, 0x120C0BEE, 0x0D0D27FC);
	r6 = D(r6, s[1][0][2], 0xF818F603, 0x0403FFFA, 0xDB0B0500, 0x07F50A07);
	r7 = D(r7, s[1][0][2], 0xF7EEFCF7, 0xF91207ED, 0xFF07F9F4, 0xFC060211);
	r0 = D(r0, s[1][1][0], 0x0F0B0500, 0xF710E1FB, 0x030102FA, 0x09F803EF);
	r1 = D(r1, s[1][1][0], 0x0FF10A0F, 0xEFF9FE0F, 0x0515E3F4, 0x00F2F6FA);
	r2 = D(r2, s[1][1][0], 0x0AF802E5, 0xE40D000E, 0x13F7EE03, 0xF80AFD09);
	r3 = D(r3, s[1][1][0], 0xF8F91BF6, 0x06FD1411, 0xDB0C0906, 0x07FAFEF3);
	r4 = D(r4, s[1][1][0], 0xFEF7FFF3, 0x060401F3, 0xA9F70C09, 0x040E00FF);
	r5 = D(r5, s[1][1][0], 0xF5FC0206, 0xED0400E2, 0x0900FEFE, 0x0100E71C);
	r6 = D(r6, s[1][1][0], 0xF90D1410, 0xFAF70A0B, 0xE2FF0403, 0x0405FCF7);
	r7 = D(r7, s[1][1][0], 0xF216E203, 0xF8E2FF0A, 0x020909FE, 0x07090D0D);
	r0 = D(r0, s[1][1][1], 0xFB1603DE, 0xFCF501FF, 0xF201F8ED, 0x03FA1DFD);
	r1 = D(r1, s[1][1][1], 0x220CFF09, 0x81110403, 0xC2D60115, 0xFA07F90B);
	r2 = D(r2, s[1][1][1], 0xFE070401, 0xFC060B0C, 0xDA0A2DF8, 0x08F40C01);
	r3 = D(r3, s[1][1][1], 0x10F115F1, 0x0F10E503, 0x1AFCF8FC, 0x13EAE7E1);
	r4 = D(r4, s[1][1][1], 0x08D909FE, 0xFEFD0817, 0xD315F5E4, 0x0E0D0DE2);
	r5 = D(r5, s[1][1][1], 0xFFF106FA, 0x1317FCF9, 0x010AF5FF, 0xF509CDB8);
	r6 = D(r6, s[1][1][1], 0x12FF0202, 0x03FCEC06, 0x17F30F0C, 0x0FE5EA09);
	r7 = D(r7, s[1][1][1], 0xF4ED0202, 0x0DE1F514, 0xFCF0F808, 0x0505FCF4);
	r0 = D(r0, s[1][1][2], 0x0521FAEA, 0xEE81DF13, 0x0AF80DFA, 0x17F4FE0E);
	r1 = D(r1, s[1][1][2], 0xFBF40C02, 0x19D104F5, 0x83F8E1ED, 0xFC1BE414);
	r2 = D(r2, s[1][1][2], 0xFC0405F0, 0xEEF704E5, 0x24FCC5FF, 0x000AFC0A);
	r3 = D(r3, s[1][1][2], 0x81F524F5, 0xF4A4D803, 0x0BFD2509, 0x0D0822EA);
	r4 = D(r4, s[1][1][2], 0x00CFE40A, 0xF2DD08F2, 0x0C21F8F4, 0x020617F2);
	r5 = D(r5, s[1][1][2], 0x0600030A, 0x05FE0D16, 0x16050706, 0xFDFF0CF9);
	r6 = D(r6, s[1][1][2], 0x22E9070E, 0x09F4ED08, 0xF7E8F2F4, 0x0BF30304);
	r7 = D(r7, s[1][1][2], 0xF5D5EB05, 0xFEBCF60D, 0x05FC02FF, 0xFEF3D203);
	r0 = D(r0, s[1][2][0], 0xF806F5F5, 0xFB00F70D, 0xF901F3F6, 0xEFFC040A);
	r1 = D(r1, s[1][2][0], 0xF4FEF306, 0x1BECFCF2, 0x0308FB01, 0x06DBF706);
	r2 = D(r2, s[1][2][0], 0xFE00E616, 0xF410F700, 0x05E9DA01, 0x01000002);
	r3 = D(r3, s[1][2][0], 0x7DFDF9F8, 0xF90604F6, 0xE2FF0202, 0xF2F6EE13);
	r4 = D(r4, s[1][2][0], 0x0D042BEE, 0xF912F215, 0xBDF30FF7, 0xFAFBFA07);
	r5 = D(r5, s[1][2][0], 0x04FB03F3, 0xED13F101, 0xFBFAFD0F, 0xFD06C11D);
	r6 = D(r6, s[1][2][0], 0xF90D1AE7, 0xF7EE0102, 0xE8FEF6F6, 0x07E718F4);
	r7 = D(r7, s[1][2][0], 0x1612F3F0, 0xF5F417FC, 0xFC0E0A01, 0x06FB0D03);
	r0 = D(r0, s[1][2][1], 0x010EF6F8, 0x011BFBFF, 0x0208EC04, 0xFAFB03FA);
	r1 = D(r1, s[1][2][1], 0x0111FC11, 0xB1FA28BB, 0x09BA10FB, 0xF50329F0);
	r2 = D(r2, s[1][2][1], 0xF6020A09, 0x120D0413, 0x1AFB1FFE, 0xFDF01205);
	r3 = D(r3, s[1][2][1], 0x0AF10ED2, 0x0615E1FC, 0xFB09F600, 0x0107F317);
	r4 = D(r4, s[1][2][1], 0xFA170FEC, 0x01070C03, 0xE6020D01, 0x050A05F2);
	r5 = D(r5, s[1][2][1], 0x26F811F9, 0xEFDEF206, 0x0B030309, 0xF016DFF0);
	r6 = D(r6, s[1][2][1], 0x09090DD4, 0xFBF003FF, 0x02F5080D, 0xF6FC00F1);
	r7 = D(r7, s[1][2][1], 0x000D030A, 0x1BEC1A05, 0xF6F5F40E, 0xF7EDFEEF);
	r0 = D(r0, s[1][2][2], 0x081125EE, 0x0A03EBFC, 0x05FBF20A, 0xF6F602FB);
	r1 = D(r1, s[1][2][2], 0xFAF8FCFD, 0xD8E0DBDC, 0x00DCE005, 0x0109E603);
	r2 = D(r2, s[1][2][2], 0x0019FEE8, 0xF703F3CE, 0xF5FEFF06, 0x03FAF2FF);
	r3 = D(r3, s[1][2][2], 0x99E6F9FA, 0xF2E7F208, 0xF4F9ED10, 0x0710FF05);
	r4 = D(r4, s[1][2][2], 0x14EFF0F3, 0x0B1602F1, 0xF108FEF9, 0xF411F30A);
	r5 = D(r5, s[1][2][2], 0xFCF10E06, 0xF2EAE4FC, 0x1006F316, 0xFD0E150D);
	r6 = D(r6, s[1][2][2], 0x18FB02CA, 0xF4F6FC07, 0xF6F1EAF4, 0x0117FDFF);
	r7 = D(r7, s[1][2][2], 0x00DF0308, 0xF2F109FC, 0xF3FA04F5, 0xED0CC812);
	s[0][0][0] = G[8][xy.y+0][xy.x+0]; s[0][0][1] = G[8][xy.y+0][xy.x+1];
	s[0][0][2] = G[8][xy.y+0][xy.x+2]; s[0][1][0] = G[8][xy.y+1][xy.x+0];
	s[0][1][1] = G[8][xy.y+1][xy.x+1]; s[0][1][2] = G[8][xy.y+1][xy.x+2];
	s[0][2][0] = G[8][xy.y+2][xy.x+0]; s[0][2][1] = G[8][xy.y+2][xy.x+1];
	s[0][2][2] = G[8][xy.y+2][xy.x+2]; s[1][0][0] = G[9][xy.y+0][xy.x+0];
	s[1][0][1] = G[9][xy.y+0][xy.x+1]; s[1][0][2] = G[9][xy.y+0][xy.x+2];
	s[1][1][0] = G[9][xy.y+1][xy.x+0]; s[1][1][1] = G[9][xy.y+1][xy.x+1];
	s[1][1][2] = G[9][xy.y+1][xy.x+2]; s[1][2][0] = G[9][xy.y+2][xy.x+0];
	s[1][2][1] = G[9][xy.y+2][xy.x+1]; s[1][2][2] = G[9][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x0405F6EE, 0x12EA1405, 0xFB0FF50E, 0x1A1B07F1);
	r1 = D(r1, s[0][0][0], 0x0AEF08FF, 0xF9FBEDED, 0x18ED0BF1, 0x0A1617F2);
	r2 = D(r2, s[0][0][0], 0xF7F21408, 0x06FB31F8, 0x11110224, 0x00F7050C);
	r3 = D(r3, s[0][0][0], 0x0EEB171A, 0x00EAE9F5, 0x16F320DC, 0xF60600EE);
	r4 = D(r4, s[0][0][0], 0x0E0AF715, 0xF10B2EFC, 0x02020812, 0xF4F80AF3);
	r5 = D(r5, s[0][0][0], 0x01070205, 0xFDEE12FF, 0xEEF910DE, 0xF82915DF);
	r6 = D(r6, s[0][0][0], 0xF7F9C504, 0xEF04FFF6, 0x0B01EBE9, 0xFEF80018);
	r7 = D(r7, s[0][0][0], 0x0BF606F2, 0x02FFFF05, 0x0AF21104, 0x1710F1FF);
	r0 = D(r0, s[0][0][1], 0x00F4140A, 0xED11E31B, 0xEFF30CF4, 0x04F8F322);
	r1 = D(r1, s[0][0][1], 0xF3140804, 0x020CF719, 0xEC130709, 0xD207F302);
	r2 = D(r2, s[0][0][1], 0xF6FD0004, 0x0114F0F8, 0xE2F8F444, 0x17FDF3FB);
	r3 = D(r3, s[0][0][1], 0xFDF4F106, 0x1A2707E0, 0xF50D0AF4, 0x0CE6250E);
	r4 = D(r4, s[0][0][1], 0x05F5FA0C, 0xE51EFB15, 0xECE3FCEF, 0xFBF008FE);
	r5 = D(r5, s[0][0][1], 0x14FCCAF6, 0x05FFF50A, 0xF6FF04E8, 0xFFFCFF09);
	r6 = D(r6, s[0][0][1], 0xEAF9FD13, 0x040FFBE6, 0xF70B1511, 0xFC06F716);
	r7 = D(r7, s[0][0][1], 0xF8EDEFE4, 0x1203F8EC, 0x03F5F60A, 0x08ED0BFF);
	r0 = D(r0, s[0][0][2], 0x05FCFA00, 0x0201F0FA, 0xF2F1F90B, 0xF10701E4);
	r1 = D(r1, s[0][0][2], 0x06F901EB, 0xE4F4F912, 0xCFFDFC0E, 0x040711F1);
	r2 = D(r2, s[0][0][2], 0xF81505F3, 0x0612F8ED, 0x04EDD800, 0x05FF04FD);
	r3 = D(r3, s[0][0][2], 0x15FDF506, 0x0BFB130E, 0x03E70F17, 0x072002F9);
	r4 = D(r4, s[0][0][2], 0xEBF301E6, 0x26E8F703, 0x0E151CF9, 0xEF0A04EE);
	r5 = D(r5, s[0][0][2], 0xFB0D0304, 0x150EF5FA, 0x05060AEC, 0x01090701);
	r6 = D(r6, s[0][0][2], 0xEE041613, 0x1AFE1700, 0x03E0CE18, 0xF60C0A00);
	r7 = D(r7, s[0][0][2], 0xFE00F9EA, 0x24040FF4, 0xF40F0E12, 0x07DFEFEF);
	r0 = D(r0, s[0][1][0], 0xF909FE03, 0xE5F71C07, 0x11E7E6FB, 0x1BEF0B00);
	r1 = D(r1, s[0][1][0], 0x0913FCF1, 0x070809F5, 0xF7042903, 0x1AFB15F9);
	r2 = D(r2, s[0][1][0], 0xF41A10FA, 0x09FFF9FC, 0xF9FA0BF1, 0xFA180409);
	r3 = D(r3, s[0][1][0], 0x00FD3608, 0xF4022BEE, 0xCE37F9F7, 0xF00E0723);
	r4 = D(r4, s[0][1][0], 0x0C0CF0EC, 0xE3CDF2F9, 0xEAEAE30B, 0xFBF4EF11);
	r5 = D(r5, s[0][1][0], 0xF8231809, 0xE513EEED, 0xEFF4250D, 0x07FE0BEA);
	r6 = D(r6, s[0][1][0], 0xF30BF7D9, 0xF900C0FE, 0xE406FAFB, 0x2CFBE811);
	r7 = D(r7, s[0][1][0], 0xF2F4F121, 0x01FB0FFD, 0x11FB03FD, 0x051307F2);
	r0 = D(r0, s[0][1][1], 0xF8E7FBF6, 0x0EEA1EF9, 0xDC07FFFD, 0xFB0CDF02);
	r1 = D(r1, s[0][1][1], 0xF1E60305, 0x130101DF, 0x080B1C10, 0xA102F702);
	r2 = D(r2, s[0][1][1], 0x0709EE04, 0x0AE4F60B, 0x07EF0B1C, 0x1AF9F209);
	r3 = D(r3, s[0][1][1], 0xE8FD0C0F, 0xF2F6F2A6, 0x081514FB, 0xF915DBEB);
	r4 = D(r4, s[0][1][1], 0x07F4FEE4, 0x0B0CFF0D, 0xFAD10B2A, 0xF307F6E1);
	r5 = D(r5, s[0][1][1], 0xFF0000F4, 0x14FF0BF2, 0xEE0F09FD, 0x0C01E50C);
	r6 = D(r6, s[0][1][1], 0x05ED0001, 0x00F30BF9, 0x06E5F402, 0x0C0002F7);
	r7 = D(r7, s[0][1][1], 0x020F0B10, 0xECF80033, 0xE515FBE1, 0x0804F7ED);
	r0 = D(r0, s[0][1][2], 0xED18090A, 0x070911F7, 0x0F0AEC0B, 0x02E71FFA);
	r1 = D(r1, s[0][1][2], 0xEF0D0FE3, 0xCBEFECDC, 0x06F3D6E9, 0x1001EDFD);
	r2 = D(r2, s[0][1][2], 0x12FD0813, 0x12FCF3DF, 0x11010509, 0x02EB09F6);
	r3 = D(r3, s[0][1][2], 0xD41418ED, 0xF91BEBCC, 0xF3EEEDF6, 0xE6FB0BFC);
	r4 = D(r4, s[0][1][2], 0xE1F8F613, 0xDC160BFF, 0x2CF2FF1C, 0xF409FD0C);
	r5 = D(r5, s[0][1][2], 0xF426E0EA, 0x0E0E12E7, 0x090A0107, 0x000C0FEC);
	r6 = D(r6, s[0][1][2], 0xF1F905D4, 0x21E4CCF1, 0x1E131DF0, 0x0B02F708);
	r7 = D(r7, s[0][1][2], 0x1709FF05, 0xE8F0E2EF, 0x08F8FF0E, 0x1DE10A0A);
	r0 = D(r0, s[0][2][0], 0x0E0CFD00, 0x0A190316, 0x08E7E70C, 0xDDF21415);
	r1 = D(r1, s[0][2][0], 0x09051BF4, 0x0502F107, 0xFCF60EE6, 0x12C20A09);
	r2 = D(r2, s[0][2][0], 0x1707DA3C, 0x00F105FC, 0x0C020DEA, 0xFB12FEF8);
	r3 = D(r3, s[0][2][0], 0x04F5F80A, 0x01F4050E, 0x11EB0DE2, 0xF8FF0716);
	r4 = D(r4, s[0][2][0], 0xFA100206, 0x15F7E506, 0x0726FDF9, 0x1D10F5EC);
	r5 = D(r5, s[0][2][0], 0x06F40F12, 0xF3F7D21D, 0x04ED0AE6, 0xF4EBF116);
	r6 = D(r6, s[0][2][0], 0xFB06F8E4, 0xF4F400F0, 0x16060E0B, 0x09E1F00E);
	r7 = D(r7, s[0][2][0], 0xE1F3081D, 0x011C091F, 0xED1DFC15, 0x050C1FDB);
	r0 = D(r0, s[0][2][1], 0x05F5F90B, 0x0713F3FB, 0xF71109F3, 0xF317F42A);
	r1 = D(r1, s[0][2][1], 0x17F0EAD9, 0xF3F419EE, 0xF900E5EF, 0xD21703F5);
	r2 = D(r2, s[0][2][1], 0xEFF11B23, 0xF409F30B, 0xF307F4FD, 0x010405E4);
	r3 = D(r3, s[0][2][1], 0xE205E011, 0xF9F60CFB, 0xF4F837D7, 0xF308F51D);
	r4 = D(r4, s[0][2][1], 0x08FA07F0, 0xFFFA0A2A, 0xFF070C24, 0x2AF613F7);
	r5 = D(r5, s[0][2][1], 0xF1E801FD, 0xE5F6120E, 0x06FEF200, 0x02E70CF3);
	r6 = D(r6, s[0][2][1], 0xF30604CD, 0xE200F815, 0x04E9F9F9, 0xDCFEF024);
	r7 = D(r7, s[0][2][1], 0x0CED0A12, 0xF40307E6, 0x03F3DBFF, 0xF609E9FF);
	r0 = D(r0, s[0][2][2], 0x0DFC02FF, 0x09F41705, 0xF61104F2, 0xF1FA06DC);
	r1 = D(r1, s[0][2][2], 0x1007FCEB, 0xEBB507F3, 0xF1F11F0F, 0x1EF9FAEC);
	r2 = D(r2, s[0][2][2], 0xFEE9F9F5, 0xF2191610, 0x1F0007E2, 0xFDF4FFFE);
	r3 = D(r3, s[0][2][2], 0xE4FD07A8, 0xFDF31402, 0xE5EBF323, 0x0BFF0716);
	r4 = D(r4, s[0][2][2], 0xE50A0A02, 0xFB0A0D05, 0xEEF91904, 0x05F80EF2);
	r5 = D(r5, s[0][2][2], 0x24E104F6, 0xFE09F5DE, 0xFFF12B05, 0xFF0BEA02);
	r6 = D(r6, s[0][2][2], 0xFFFEEFDE, 0x0612EFF1, 0xFB07EDF4, 0xF107121A);
	r7 = D(r7, s[0][2][2], 0x06030403, 0x0101F111, 0xF4EAFBFC, 0xFCF30B54);
	r0 = D(r0, s[1][0][0], 0x0005F904, 0xFA060FF6, 0xF616E921, 0xF9F8F6FA);
	r1 = D(r1, s[1][0][0], 0xFA060D01, 0xF10807F1, 0xF9CE0BF4, 0x071404E7);
	r2 = D(r2, s[1][0][0], 0x1813F3EE, 0xF2ECDAFC, 0xEEF9E615, 0xFD11E106);
	r3 = D(r3, s[1][0][0], 0xFEDCF50A, 0x1A0A0BF0, 0x12151309, 0xEB20011A);
	r4 = D(r4, s[1][0][0], 0xFEF9E620, 0xFBF30A01, 0xFF04C120, 0xEF00F002);
	r5 = D(r5, s[1][0][0], 0xEF0DF40C, 0xF2FC100B, 0xE6FAF8FE, 0xF0E82811);
	r6 = D(r6, s[1][0][0], 0x02081430, 0xF70D15F9, 0xFF14FC00, 0x04F50CEF);
	r7 = D(r7, s[1][0][0], 0x050BF9F3, 0x06DD0A0C, 0x070DF611, 0xFAF213EB);
	r0 = D(r0, s[1][0][1], 0x00F80B0F, 0xF8FB01E1, 0xED07F4F2, 0xF3E9F0FD);
	r1 = D(r1, s[1][0][1], 0xEDFB0502, 0x04F809E1, 0xF60BFC28, 0x0BFEF0F3);
	r2 = D(r2, s[1][0][1], 0x0C080DF4, 0x02FDE8E9, 0xDBF6F40C, 0x07F7FA14);
	r3 = D(r3, s[1][0][1], 0x07000735, 0x01E02E02, 0xF105FBF9, 0xFFDCFB0D);
	r4 = D(r4, s[1][0][1], 0x082ADF0B, 0x1AFEEE07, 0xDE1007FC, 0x0711FF31);
	r5 = D(r5, s[1][0][1], 0x10E1FA12, 0xF7F015FF, 0x0AF4FC0A, 0x0AED1DEB);
	r6 = D(r6, s[1][0][1], 0x00DD15EB, 0x0501EC0B, 0x0C0B0B2E, 0xFD240400);
	r7 = D(r7, s[1][0][1], 0xF114E1F9, 0x010FF306, 0xF1F8F0F3, 0xF2DC0CD6);
	r0 = D(r0, s[1][0][2], 0x0C07010C, 0xE8E1FAB0, 0xF000E31B, 0xF9FFF914);
	r1 = D(r1, s[1][0][2], 0x190AFF04, 0xF8CBDD0F, 0xFC23F930, 0x0FE60922);
	r2 = D(r2, s[1][0][2], 0xFA0105FE, 0x08E21007, 0x11FCE8FD, 0x03FD07FB);
	r3 = D(r3, s[1][0][2], 0xFAE10301, 0x00EF15EB, 0xFDFF1019, 0x00EBEF0C);
	r4 = D(r4, s[1][0][2], 0xF518E519, 0xF21AF607, 0x0A09EB1F, 0xFB10EE01);
	r5 = D(r5, s[1][0][2], 0x22D8F01F, 0xF3E10C03, 0x05F3FCF5, 0x06EAEAFD);
	r6 = D(r6, s[1][0][2], 0x06EEE9EA, 0x11042508, 0xFB26F404, 0x08EEFD17);
	r7 = D(r7, s[1][0][2], 0xFDF7EB0D, 0x08090CED, 0x1415F126, 0xFCCC01FD);
	r0 = D(r0, s[1][1][0], 0xF3F50BEB, 0xF80604FC, 0x0F0C0AF0, 0xF6F30C1B);
	r1 = D(r1, s[1][1][0], 0x021017F6, 0x120EFFED, 0x10CE3C03, 0xFF0019C3);
	r2 = D(r2, s[1][1][0], 0xFB481804, 0xFDEAA706, 0xEF0CFE0D, 0x14FEE50D);
	r3 = D(r3, s[1][1][0], 0xF8F681EB, 0xED01FF10, 0x02F20EEE, 0xFA081F1B);
	r4 = D(r4, s[1][1][0], 0xFDFE11FE, 0x150CF7FE, 0x0C0AF3F4, 0xFBFBE003);
	r5 = D(r5, s[1][1][0], 0xF31E0705, 0xF107E9FA, 0x03FD01F7, 0xDCFD0214);
	r6 = D(r6, s[1][1][0], 0xF800F0F4, 0xFA0007FD, 0x1512FE21, 0xF4F5E407);
	r7 = D(r7, s[1][1][0], 0xFDEF1214, 0xF408E2F7, 0xF2F00609, 0xF82261EA);
	r0 = D(r0, s[1][1][1], 0xEA02FACD, 0x0315BD13, 0x0218140A, 0x15FFFCE9);
	r1 = D(r1, s[1][1][1], 0xE50E13FD, 0xFAD4FEE5, 0x061AF236, 0x090FE606);
	r2 = D(r2, s[1][1][1], 0xF919F8FC, 0x07FE15DB, 0xFFFC0EDA, 0xFBF60519);
	r3 = D(r3, s[1][1][1], 0xFFFC0FF9, 0xF8D8F3F5, 0xF0F80CCE, 0xFBFE16D9);
	r4 = D(r4, s[1][1][1], 0x00F60506, 0xEFF0FBEB, 0xE719FD13, 0x0EEB0A1D);
	r5 = D(r5, s[1][1][1], 0x03FD12FB, 0x00290DFA, 0xFBE12224, 0x01FDFBE3);
	r6 = D(r6, s[1][1][1], 0x01FDFB03, 0xFCEBBB10, 0x1911151C, 0x18F8DB14);
	r7 = D(r7, s[1][1][1], 0x040FFFE4, 0x0B241BF2, 0xFC2315E9, 0x0FDB0781);
	r0 = D(r0, s[1][1][2], 0x08F710F6, 0x1CF2F3F3, 0xF10E0CE7, 0xFE01EF1F);
	r1 = D(r1, s[1][1][2], 0xF9EFE10C, 0xEEF5F23E, 0xF381FE46, 0x12F119FB);
	r2 = D(r2, s[1][1][2], 0x03EB070E, 0x09120B37, 0xF4FD07B1, 0xF70207ED);
	r3 = D(r3, s[1][1][2], 0x0ADC0A3D, 0x0CEFF102, 0x0405EC0C, 0x162D0402);
	r4 = D(r4, s[1][1][2], 0x00001CFC, 0xF6E91CE2, 0x1030DF0E, 0x03F504F8);
	r5 = D(r5, s[1][1][2], 0xFBE614E3, 0x05E120FF, 0xF1D8F7F0, 0xF525F6C7);
	r6 = D(r6, s[1][1][2], 0xFF1FE8E0, 0x0344CD9F, 0xF9061318, 0xFB0704B5);
	r7 = D(r7, s[1][1][2], 0x11E50A09, 0x0DF51228, 0xFFF60C2B, 0x110DF017);
	r0 = D(r0, s[1][2][0], 0xF410070D, 0xFF072708, 0x151600F7, 0x0FF51AFD);
	r1 = D(r1, s[1][2][0], 0x0BF90CF4, 0x1801F4E8, 0x082EE2F6, 0xF814FC1C);
	r2 = D(r2, s[1][2][0], 0xF91AF62B, 0xF5DFE618, 0x09E719D5, 0xFE10EA0B);
	r3 = D(r3, s[1][2][0], 0x070BEC38, 0xFC1500E8, 0xE4031301, 0x1D03ED11);
	r4 = D(r4, s[1][2][0], 0xFC1521F4, 0xECF9FC07, 0x05CFF702, 0xE6E8E2FE);
	r5 = D(r5, s[1][2][0], 0xFA080EFB, 0x0E02F720, 0x11F902F0, 0x04FADF0C);
	r6 = D(r6, s[1][2][0], 0x03F4F622, 0xF8F0FEFE, 0xEC1FFB1D, 0xFC1807F0);
	r7 = D(r7, s[1][2][0], 0xF403210D, 0x000909EA, 0x28F9F815, 0x050600DD);
	r0 = D(r0, s[1][2][1], 0xFEEF0CFF, 0x1101E023, 0x1007F809, 0xDAFA040F);
	r1 = D(r1, s[1][2][1], 0xF5031A21, 0x1604E4D0, 0x0F04101C, 0xE8E6EFEC);
	r2 = D(r2, s[1][2][1], 0x0D0203EB, 0xF9E8E6B5, 0x1500F812, 0x0B08F481);
	r3 = D(r3, s[1][2][1], 0xFCFF027F, 0xFB0FEEF3, 0x172103FB, 0x00DC0729);
	r4 = D(r4, s[1][2][1], 0xFBE80803, 0x1B0D03EF, 0xEBF7FFFC, 0x0EFD231E);
	r5 = D(r5, s[1][2][1], 0xFF07F8EB, 0xFA17DFF6, 0xF8F812F8, 0x19C50532);
	r6 = D(r6, s[1][2][1], 0xFAEC0CF3, 0xFF13BC14, 0xFAFB0722, 0x02E4132A);
	r7 = D(r7, s[1][2][1], 0x0F2BF801, 0x04F5F101, 0x071721D3, 0xF9FEFB7F);
	r0 = D(r0, s[1][2][2], 0x0103F005, 0x0406062C, 0x0CFEF7E3, 0x1AFE1A05);
	r1 = D(r1, s[1][2][2], 0xE6B510E3, 0xF018017A, 0x020DFE32, 0xEA0EF1FC);
	r2 = D(r2, s[1][2][2], 0x0F3EF530, 0x0E15F8EB, 0x06FE0CC9, 0xFAF70E09);
	r3 = D(r3, s[1][2][2], 0x19020446, 0x0FFAEFED, 0x0105FE0C, 0x02F50B12);
	r4 = D(r4, s[1][2][2], 0xFE021521, 0xEDF4EADC, 0x1B2EF3F3, 0x040FFD0D);
	r5 = D(r5, s[1][2][2], 0xF419FE1A, 0x15E4E4ED, 0xFCFFE8FE, 0x17181589);
	r6 = D(r6, s[1][2][2], 0x0002FF01, 0x0B1AFD4A, 0xEC190805, 0xF2F0DB92);
	r7 = D(r7, s[1][2][2], 0x0EF9F919, 0xFAF6E7F2, 0xF1F60704, 0x20F813EE);
	s[0][0][0] = G[10][xy.y+0][xy.x+0]; s[0][0][1] = G[10][xy.y+0][xy.x+1];
	s[0][0][2] = G[10][xy.y+0][xy.x+2]; s[0][1][0] = G[10][xy.y+1][xy.x+0];
	s[0][1][1] = G[10][xy.y+1][xy.x+1]; s[0][1][2] = G[10][xy.y+1][xy.x+2];
	s[0][2][0] = G[10][xy.y+2][xy.x+0]; s[0][2][1] = G[10][xy.y+2][xy.x+1];
	s[0][2][2] = G[10][xy.y+2][xy.x+2]; s[1][0][0] = G[11][xy.y+0][xy.x+0];
	s[1][0][1] = G[11][xy.y+0][xy.x+1]; s[1][0][2] = G[11][xy.y+0][xy.x+2];
	s[1][1][0] = G[11][xy.y+1][xy.x+0]; s[1][1][1] = G[11][xy.y+1][xy.x+1];
	s[1][1][2] = G[11][xy.y+1][xy.x+2]; s[1][2][0] = G[11][xy.y+2][xy.x+0];
	s[1][2][1] = G[11][xy.y+2][xy.x+1]; s[1][2][2] = G[11][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xF50812CD, 0x0A06F606, 0xEC0312ED, 0x00FB250E);
	r1 = D(r1, s[0][0][0], 0xF3E513F7, 0xFFF70FE8, 0x00F620DD, 0x0B151013);
	r2 = D(r2, s[0][0][0], 0x1BEF0AED, 0x02F1F8F9, 0xDFFA1708, 0x13FB211B);
	r3 = D(r3, s[0][0][0], 0x061722A5, 0xDF04EEFF, 0xDDFD59FD, 0x0704FE0C);
	r4 = D(r4, s[0][0][0], 0xFFF60DFA, 0xF800F3F0, 0xFE002803, 0xFDF5F812);
	r5 = D(r5, s[0][0][0], 0x0204F405, 0xECFCFDFC, 0xEF00F7F7, 0x010D1C0B);
	r6 = D(r6, s[0][0][0], 0x11FBF6F8, 0x0A0AE506, 0x07D21502, 0xF52FF813);
	r7 = D(r7, s[0][0][0], 0x14E5D828, 0x0109F427, 0x0610E807, 0x152733DA);
	r0 = D(r0, s[0][0][1], 0x06FC03FE, 0x0DFAEAE9, 0x00060103, 0x10000815);
	r1 = D(r1, s[0][0][1], 0x0D010BFE, 0x130A07ED, 0xF5FE06E1, 0xF3FD07E5);
	r2 = D(r2, s[0][0][1], 0xE9F70A16, 0x11EC010C, 0x0EE60ADF, 0x21FDFC03);
	r3 = D(r3, s[0][0][1], 0xF9EBE8D6, 0xE5F00C04, 0xEB0F0C10, 0xE40E02F8);
	r4 = D(r4, s[0][0][1], 0xC1FED1D0, 0x0C031CF7, 0xE4061A19, 0xFDF0E1F0);
	r5 = D(r5, s[0][0][1], 0x1CF91624, 0xF0183AFA, 0xFAFBFFEF, 0xFDFCFBF9);
	r6 = D(r6, s[0][0][1], 0x15ECF3F3, 0x100C0C12, 0xFA0D3AC8, 0xFF0F150A);
	r7 = D(r7, s[0][0][1], 0xFB061616, 0x11F70D20, 0x00FD0500, 0x0CF5FE27);
	r0 = D(r0, s[0][0][2], 0x060AF405, 0x18FFD9F2, 0xF117FE08, 0x0EF9E31D);
	r1 = D(r1, s[0][0][2], 0x0CFAFE05, 0xE0FE39E1, 0x02EF0FFE, 0x14E8ED1B);
	r2 = D(r2, s[0][0][2], 0xE3FA1CF2, 0x0C1DF20D, 0xFCFBF50D, 0x04FBF7F6);
	r3 = D(r3, s[0][0][2], 0xFB110A00, 0xF60124EE, 0x0C121D0D, 0xFDFC02F8);
	r4 = D(r4, s[0][0][2], 0xFDFE02ED, 0xF3FF0CF2, 0x3CF40502, 0xFE0AF60F);
	r5 = D(r5, s[0][0][2], 0xEFF406E8, 0x07FB0AFD, 0x00011C17, 0x040E1F04);
	r6 = D(r6, s[0][0][2], 0xFD12F8FE, 0x10FFEAF7, 0xF4E708FE, 0x06F5FAFD);
	r7 = D(r7, s[0][0][2], 0xFFF01521, 0xF5FA031C, 0x07001707, 0x0CEDF008);
	r0 = D(r0, s[0][1][0], 0xFE06C409, 0xF90C07F7, 0xE7D9ECF0, 0xF2F5DAFE);
	r1 = D(r1, s[0][1][0], 0xDAF21B09, 0x04ED3611, 0x0DEA2416, 0xE500F2E6);
	r2 = D(r2, s[0][1][0], 0x13F2EAE2, 0x040BE4F2, 0xDC1627FF, 0x1AF516FC);
	r3 = D(r3, s[0][1][0], 0x02EF06F7, 0x19F9E90E, 0xCE070CF7, 0xEEFC0AFA);
	r4 = D(r4, s[0][1][0], 0x0E00FC26, 0x12010BF0, 0xFA81CEF2, 0x0B1421F6);
	r5 = D(r5, s[0][1][0], 0xE4ECF7E4, 0xF4EBECE9, 0xEC00F404, 0x081AEBF4);
	r6 = D(r6, s[0][1][0], 0x02F319F8, 0xF6FA1307, 0x1D160601, 0x0A03131F);
	r7 = D(r7, s[0][1][0], 0xFFE9FB0A, 0xEC0B11E4, 0xE9F800F2, 0x080F07AD);
	r0 = D(r0, s[0][1][1], 0xEAFEF814, 0x0605C711, 0x0BF7ECDC, 0xDC07EE09);
	r1 = D(r1, s[0][1][1], 0xFB003525, 0x08FD1220, 0xF43712EC, 0x13F401FE);
	r2 = D(r2, s[0][1][1], 0x0F0CEEE0, 0x0804FA05, 0x102302DB, 0x0108032F);
	r3 = D(r3, s[0][1][1], 0x2081F9FE, 0x181EEDE6, 0x0E18E70F, 0xEFF0F106);
	r4 = D(r4, s[0][1][1], 0xF4F7FA03, 0xF1121405, 0xEEDB0AF8, 0xFDFC01E1);
	r5 = D(r5, s[0][1][1], 0xFBEFE3F4, 0x0425EA0A, 0x02FA0FD7, 0xF60F0FFE);
	r6 = D(r6, s[0][1][1], 0xFFE902F7, 0xFEF8FEEF, 0xFBFE1005, 0xE02016F1);
	r7 = D(r7, s[0][1][1], 0xFDF3FF0B, 0xF4F7FDFF, 0x0214EE10, 0x0EDED144);
	r0 = D(r0, s[0][1][2], 0xFC021308, 0xF5F6FBE8, 0x0AF906F6, 0xEE0DF9FD);
	r1 = D(r1, s[0][1][2], 0xF6080811, 0xE7CD1F1B, 0xD4810518, 0x08040A17);
	r2 = D(r2, s[0][1][2], 0xF519D7F6, 0xECFD0F14, 0x0BFDE50D, 0xFA07140C);
	r3 = D(r3, s[0][1][2], 0xF5091511, 0x1009E521, 0xF907D41A, 0x1D0E03F4);
	r4 = D(r4, s[0][1][2], 0x07EE1802, 0xF1FC090D, 0x091DFF08, 0x0A080805);
	r5 = D(r5, s[0][1][2], 0x0CF51810, 0x1323F019, 0x01FFFD15, 0x03E21F14);
	r6 = D(r6, s[0][1][2], 0x02FA0113, 0xFEFBDF02, 0xFE0F00F0, 0x1AECF311);
	r7 = D(r7, s[0][1][2], 0x1BFFF00D, 0x08FC0514, 0xFF05220C, 0xFCF5DEFF);
	r0 = D(r0, s[0][2][0], 0xF7EF0FED, 0xEFEFFC05, 0x00E905FF, 0x1210CFF6);
	r1 = D(r1, s[0][2][0], 0xFD11E7F8, 0xDD1529F6, 0x02E9D5F8, 0xF60108E3);
	r2 = D(r2, s[0][2][0], 0xF204FCF7, 0x0208E704, 0xD7342C04, 0xFD08F505);
	r3 = D(r3, s[0][2][0], 0x06600705, 0x02F3FAF3, 0x23ADEBE7, 0x14F0D5F2);
	r4 = D(r4, s[0][2][0], 0x100317FA, 0xF81303F3, 0x05E0FA01, 0x0BF320F7);
	r5 = D(r5, s[0][2][0], 0x08F702F4, 0xFDF7F2D9, 0x05FBEA08, 0x15DECC1C);
	r6 = D(r6, s[0][2][0], 0xF9F20C34, 0x04190910, 0x07210BF5, 0xF9EE07D0);
	r7 = D(r7, s[0][2][0], 0xE910F5EF, 0x0D02D70B, 0x0EECFE0F, 0xEF02D107);
	r0 = D(r0, s[0][2][1], 0x11F203E9, 0xF70509FE, 0xF703FFF1, 0xFDF8E7F8);
	r1 = D(r1, s[0][2][1], 0xFEF3F9EE, 0x11E93216, 0xF7D3E7F2, 0x12F3E90C);
	r2 = D(r2, s[0][2][1], 0xFB1820F8, 0x15BD12FC, 0xF80FF90D, 0xF4FA1C05);
	r3 = D(r3, s[0][2][1], 0xEAE90000, 0x1AFFEA01, 0x0C1BCAF0, 0xFFF8F818);
	r4 = D(r4, s[0][2][1], 0xF0031110, 0x14FAFFEF, 0xF6DC0DFC, 0x10FBEC05);
	r5 = D(r5, s[0][2][1], 0x0AEB180D, 0x060FE50A, 0x0BFEF213, 0x010F0DFB);
	r6 = D(r6, s[0][2][1], 0xF8FF1B07, 0x020DD8E2, 0xF12B2A02, 0x16E4160A);
	r7 = D(r7, s[0][2][1], 0xF520F2F3, 0x0FF4F9FF, 0xFCEC0B1E, 0x02C3DC1F);
	r0 = D(r0, s[0][2][2], 0x0401EDFD, 0xF4EAF2F1, 0x040EE8F7, 0x06EBE70B);
	r1 = D(r1, s[0][2][2], 0x130CBCE7, 0x05EC0A01, 0x18E1EC17, 0x0705F0FB);
	r2 = D(r2, s[0][2][2], 0x05F2D8F2, 0xFD34FDEA, 0x06E5CD14, 0xEE0C01F7);
	r3 = D(r3, s[0][2][2], 0x0B27FCFD, 0x150B14E6, 0x0600DA17, 0xF911F5F5);
	r4 = D(r4, s[0][2][2], 0xFBE80408, 0x1315F119, 0xFF062EFC, 0x0CFDFC08);
	r5 = D(r5, s[0][2][2], 0xFEF90110, 0x00F0230A, 0xF3FA0D0F, 0x03F612FD);
	r6 = D(r6, s[0][2][2], 0x01F311F9, 0x01E8F616, 0xEA1C00F9, 0xEC072904);
	r7 = D(r7, s[0][2][2], 0xF8061620, 0xFFFA0D07, 0x07F60D0C, 0x07ECF3F9);
	r0 = D(r0, s[1][0][0], 0xFC04FFFE, 0x0FDADDF6, 0xEC04C40A, 0xED0AD104);
	r1 = D(r1, s[1][0][0], 0x0208EDEE, 0x00FBA81C, 0xF7194DE9, 0x15387FFB);
	r2 = D(r2, s[1][0][0], 0x0A0DC713, 0xF607FBFD, 0x2A4BDB13, 0xF7062DF2);
	r3 = D(r3, s[1][0][0], 0xC1162E0B, 0xED10EB12, 0xF1FD270A, 0x1FDAED03);
	r4 = D(r4, s[1][0][0], 0x0B191A13, 0x18F3E708, 0x37417514, 0xF0ECEEFD);
	r5 = D(r5, s[1][0][0], 0x16045EF4, 0x06A1F50B, 0xEEC71FF3, 0xD0DE12F6);
	r6 = D(r6, s[1][0][0], 0xFCFB22EC, 0xFD183800, 0x450BB1FB, 0xC7DE54F0);
	r7 = D(r7, s[1][0][0], 0xD9E005FF, 0xFF120007, 0x062437F3, 0x01217F16);
	r0 = D(r0, s[1][0][1], 0xFA0ADE04, 0xF2FB0012, 0x00291F0C, 0xF8E9B702);
	r1 = D(r1, s[1][0][1], 0x05EA71F7, 0x1D0A24F0, 0x53337FEA, 0xF50B0102);
	r2 = D(r2, s[1][0][1], 0xF011DB01, 0xF8052507, 0x38819FE7, 0x07FC19F5);
	r3 = D(r3, s[1][0][1], 0x56112011, 0x02F7F6FF, 0x0D053101, 0xFA02C5E5);
	r4 = D(r4, s[1][0][1], 0xEAF8F80D, 0x05EF11FE, 0x0DB6FFEC, 0x01E1F7FE);
	r5 = D(r5, s[1][0][1], 0x23FF0E1B, 0xFE0D0E02, 0xEC073803, 0x0B1033EF);
	r6 = D(r6, s[1][0][1], 0x1FF1EBF5, 0x02152801, 0x111746F8, 0x09E31BFF);
	r7 = D(r7, s[1][0][1], 0x0F10C2F5, 0x10FF0BFC, 0x0EFAE2F0, 0x03F529F2);
	r0 = D(r0, s[1][0][2], 0xFB070003, 0x07E82BFC, 0x18157F0A, 0xE709BC09);
	r1 = D(r1, s[1][0][2], 0xEE000E02, 0x2125F815, 0xE80581DF, 0xB511E30E);
	r2 = D(r2, s[1][0][2], 0x17175014, 0xF523C105, 0xD95AEC05, 0xF705F307);
	r3 = D(r3, s[1][0][2], 0xF10BBE05, 0xE40063FE, 0x0E007FEF, 0x1121010C);
	r4 = D(r4, s[1][0][2], 0xDEF10B0C, 0xF2CFEDFA, 0xE3B27F10, 0x0B0D19FE);
	r5 = D(r5, s[1][0][2], 0xEE04A2FD, 0xF4EC4C01, 0x0E337F04, 0x12D927FB);
	r6 = D(r6, s[1][0][2], 0x01FEDE04, 0xE40835FC, 0xFB21ECF2, 0xFB0F16FA);
	r7 = D(r7, s[1][0][2], 0x0FF4F7F9, 0xD9F81DFA, 0xFAE10010, 0xD60FE902);
	r0 = D(r0, s[1][1][0], 0x13E00C07, 0x241C09FF, 0x1E040C01, 0x010210FD);
	r1 = D(r1, s[1][1][0], 0xF80CDF07, 0xF7E2FAED, 0xD3FFCFF7, 0xE0FD021F);
	r2 = D(r2, s[1][1][0], 0xF311D1E7, 0xAF12F90F, 0xF225F90F, 0x07FBF9FC);
	r3 = D(r3, s[1][1][0], 0xDA0B00EC, 0xE60AFF08, 0x12D7DAF3, 0x10F723EF);
	r4 = D(r4, s[1][1][0], 0x260C1FF9, 0xCAF6E3FD, 0xE1F860D8, 0xE62D27F3);
	r5 = D(r5, s[1][1][0], 0x1C0022EC, 0xE1F2FC0B, 0x18FCFA06, 0x3AD400F1);
	r6 = D(r6, s[1][1][0], 0x03E373E8, 0x09FC0A09, 0x81E1E303, 0xFD032620);
	r7 = D(r7, s[1][1][0], 0x040505E7, 0xD9EF05EE, 0x14FD061D, 0x230D1F06);
	r0 = D(r0, s[1][1][1], 0xE6012902, 0xFFFE2DD6, 0xF2192103, 0x1232BC05);
	r1 = D(r1, s[1][1][1], 0x01000009, 0xAD4952EE, 0xFC1011F2, 0xE8FBB308);
	r2 = D(r2, s[1][1][1], 0x13CAE1FE, 0x220BEDED, 0xE1261FF7, 0xF4132AD8);
	r3 = D(r3, s[1][1][1], 0x20298C05, 0xCB0EFF03, 0xF84399FE, 0x070127F3);
	r4 = D(r4, s[1][1][1], 0xFC0766F4, 0x3A020CFD, 0x232A5221, 0xEFE23316);
	r5 = D(r5, s[1][1][1], 0x11F3EFF4, 0x100201F5, 0x2AEE26EF, 0xFB1F0DFC);
	r6 = D(r6, s[1][1][1], 0x0DEE2DFF, 0xEE021104, 0xBA05110B, 0x19CE88F8);
	r7 = D(r7, s[1][1][1], 0x1A17400E, 0x15D802E8, 0xF50817F2, 0x2EF2E3E3);
	r0 = D(r0, s[1][1][2], 0x00FA1FF9, 0xE505D5C6, 0x13057108, 0xFFE1C9FD);
	r1 = D(r1, s[1][1][2], 0x081D2906, 0x9B2BD5E1, 0x000BF0D7, 0x0E1315EA);
	r2 = D(r2, s[1][1][2], 0xED0D0007, 0x13E8D3E6, 0xED1D2705, 0xF4EEFFF8);
	r3 = D(r3, s[1][1][2], 0x25523F01, 0x0D0CE104, 0xF5F5D305, 0xF6F5520F);
	r4 = D(r4, s[1][1][2], 0xEA1BB3FE, 0xFC0306FB, 0xDDFA70ED, 0x0E051407);
	r5 = D(r5, s[1][1][2], 0x0E0211F3, 0x12F9EF10, 0x16F75408, 0x0CA71608);
	r6 = D(r6, s[1][1][2], 0x3E328101, 0xEB0B37DC, 0xF4FE8311, 0xFBE01710);
	r7 = D(r7, s[1][1][2], 0xF70D15E4, 0xF4F5D114, 0x0D04CCFC, 0xF60DA901);
	r0 = D(r0, s[1][2][0], 0xFE00011B, 0x06FB10F5, 0xE4FF12FD, 0x08FBC108);
	r1 = D(r1, s[1][2][0], 0xFCF79305, 0x2013350D, 0xE500EAEC, 0x1B04F803);
	r2 = D(r2, s[1][2][0], 0xEDEAECF8, 0xFE08F6FE, 0xFC00080E, 0x1103F6DA);
	r3 = D(r3, s[1][2][0], 0x7F2F49DF, 0xF6160F00, 0xC7091C0E, 0x3EFBE403);
	r4 = D(r4, s[1][2][0], 0x1A090016, 0x04F1FA05, 0xD5F269E0, 0x11021C00);
	r5 = D(r5, s[1][2][0], 0xF605471B, 0xFEFBAEF0, 0x1AF7F90D, 0xF2141C02);
	r6 = D(r6, s[1][2][0], 0xC92221EE, 0x09120607, 0xCCE6FAF9, 0xF7E2E7FC);
	r7 = D(r7, s[1][2][0], 0x18E7C904, 0x1113E722, 0xEEE80215, 0xAE240A0A);
	r0 = D(r0, s[1][2][1], 0x05FD010A, 0xFAFF04E0, 0x031306F9, 0xED092A05);
	r1 = D(r1, s[1][2][1], 0x0FF1F4FE, 0xFC020EE2, 0xD92337EF, 0xE80112F8);
	r2 = D(r2, s[1][2][1], 0x07EBC3E4, 0x2AFDDADD, 0xD1D5C203, 0x050E1AD8);
	r3 = D(r3, s[1][2][1], 0x2CEAE300, 0xF21F0401, 0xF614BA01, 0x1F06FB08);
	r4 = D(r4, s[1][2][1], 0x0A06AC05, 0x14FB251F, 0xDE077F05, 0xFBFC2D04);
	r5 = D(r5, s[1][2][1], 0xE40ED815, 0xEF0AD3FA, 0x10FD0F08, 0xFB34F6FB);
	r6 = D(r6, s[1][2][1], 0xD1477FF2, 0xC406F0E3, 0x07F204F6, 0x18FCE206);
	r7 = D(r7, s[1][2][1], 0xEEF8E108, 0x09E804FB, 0xF41021FC, 0x2FFCEBE3);
	r0 = D(r0, s[1][2][2], 0xFCF70202, 0xF2FE15E7, 0x04F32D09, 0x010EEE04);
	r1 = D(r1, s[1][2][2], 0xEC115C19, 0xE3E626EB, 0xF97F81D4, 0x002F33E7);
	r2 = D(r2, s[1][2][2], 0xF224AB04, 0xFB0600E9, 0x3BFC4BE8, 0x00F8E2F3);
	r3 = D(r3, s[1][2][2], 0xE332EEE4, 0xF806D4DE, 0xE3EEDA0F, 0xE0FFFC08);
	r4 = D(r4, s[1][2][2], 0xFEE6D0FE, 0x07080E08, 0xED0B7FF9, 0xF8080102);
	r5 = D(r5, s[1][2][2], 0x15D62E04, 0xDF17000F, 0xD9070AFA, 0xEF2E1B1D);
	r6 = D(r6, s[1][2][2], 0x13FE72F7, 0x0D04D181, 0xE139E2E8, 0xDE09EA05);
	r7 = D(r7, s[1][2][2], 0xEAF5C706, 0x080B02DD, 0xFDF5221F, 0xF1DA07DE);
	s[0][0][0] = G[12][xy.y+0][xy.x+0]; s[0][0][1] = G[12][xy.y+0][xy.x+1];
	s[0][0][2] = G[12][xy.y+0][xy.x+2]; s[0][1][0] = G[12][xy.y+1][xy.x+0];
	s[0][1][1] = G[12][xy.y+1][xy.x+1]; s[0][1][2] = G[12][xy.y+1][xy.x+2];
	s[0][2][0] = G[12][xy.y+2][xy.x+0]; s[0][2][1] = G[12][xy.y+2][xy.x+1];
	s[0][2][2] = G[12][xy.y+2][xy.x+2]; s[1][0][0] = G[13][xy.y+0][xy.x+0];
	s[1][0][1] = G[13][xy.y+0][xy.x+1]; s[1][0][2] = G[13][xy.y+0][xy.x+2];
	s[1][1][0] = G[13][xy.y+1][xy.x+0]; s[1][1][1] = G[13][xy.y+1][xy.x+1];
	s[1][1][2] = G[13][xy.y+1][xy.x+2]; s[1][2][0] = G[13][xy.y+2][xy.x+0];
	s[1][2][1] = G[13][xy.y+2][xy.x+1]; s[1][2][2] = G[13][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x0CFCFDF2, 0xFC030502, 0xFF08E8EE, 0x1A140905);
	r1 = D(r1, s[0][0][0], 0x0FFE020E, 0x110FF807, 0xEAF20211, 0x0BE4F9F2);
	r2 = D(r2, s[0][0][0], 0x10E908EF, 0x1EE5F4F7, 0x5AE8EADB, 0x0610FBFC);
	r3 = D(r3, s[0][0][0], 0xFB2FFA0E, 0xE5071112, 0xF7140100, 0x11000FFD);
	r4 = D(r4, s[0][0][0], 0xFC090B01, 0xF70727EE, 0x04C4FB05, 0xFC0DF9F7);
	r5 = D(r5, s[0][0][0], 0x1A01FF0B, 0x22030EEB, 0xF2EB0BF4, 0xEF17F50B);
	r6 = D(r6, s[0][0][0], 0x05F1EE09, 0x08FAFB01, 0x01F00101, 0xF827F0F1);
	r7 = D(r7, s[0][0][0], 0xE7E70702, 0x0BEAFE07, 0x07EDF1F6, 0x125D0E22);
	r0 = D(r0, s[0][0][1], 0xFDFDEF01, 0x042FF01B, 0x0FD41AEA, 0xEBFFF8F8);
	r1 = D(r1, s[0][0][1], 0xFE04FA04, 0x03170B1B, 0x071C0E14, 0xFD0E1808);
	r2 = D(r2, s[0][0][1], 0x050D23FD, 0x0406080D, 0x17F213FC, 0x01040110);
	r3 = D(r3, s[0][0][1], 0xEFF90E15, 0xE912F817, 0xFC1104FA, 0x020DFAD9);
	r4 = D(r4, s[0][0][1], 0xEA112509, 0x0B17DA2B, 0x0E191A9B, 0xF7F1FEFE);
	r5 = D(r5, s[0][0][1], 0x09DA1407, 0x0700080A, 0x0AF20601, 0x030808FD);
	r6 = D(r6, s[0][0][1], 0x03DEF9F6, 0x080700EF, 0xF7C1E10E, 0x0604FD02);
	r7 = D(r7, s[0][0][1], 0x09D1EFFE, 0x0306EF15, 0x02FE1000, 0x00A6F505);
	r0 = D(r0, s[0][0][2], 0xEE0202FA, 0x10EAF8F8, 0x20001318, 0x18F3D716);
	r1 = D(r1, s[0][0][2], 0x0CF9FAF4, 0xFD0AEAF4, 0x21FEEBDF, 0x0CF6E6F3);
	r2 = D(r2, s[0][0][2], 0xEF300F1E, 0x01220308, 0xF7F30309, 0xF00EFF02);
	r3 = D(r3, s[0][0][2], 0xFCF3F50E, 0xFCD307E0, 0xFE02F1F3, 0x0203F800);
	r4 = D(r4, s[0][0][2], 0x0EDCE5FE, 0x140500FE, 0x06141213, 0x01F40303);
	r5 = D(r5, s[0][0][2], 0xD8FAE40C, 0x091AEBFF, 0x07FDFDEB, 0xFA0B070B);
	r6 = D(r6, s[0][0][2], 0x0810071A, 0x17F40101, 0xEF060000, 0xF3E713EA);
	r7 = D(r7, s[0][0][2], 0x0F1CFC07, 0x11ECFC13, 0xF3F108F3, 0x0CC007EB);
	r0 = D(r0, s[0][1][0], 0x0BF3FD0B, 0xF4FB0200, 0x1BD7F60E, 0xF4FB03F9);
	r1 = D(r1, s[0][1][0], 0x0200F405, 0x2523EC00, 0xF6161F06, 0xFBF6F6EE);
	r2 = D(r2, s[0][1][0], 0xDBD6E00C, 0xF4F307FB, 0xAD16F8F5, 0xE5F30903);
	r3 = D(r3, s[0][1][0], 0xDF0908F8, 0xF62111FA, 0xF9FAE9F6, 0x030AF502);
	r4 = D(r4, s[0][1][0], 0xFD200D01, 0x0B2609FC, 0xBBF6E7F9, 0xF5210AE3);
	r5 = D(r5, s[0][1][0], 0x01251EF5, 0xF7180FF9, 0x0406FC01, 0xF50AFEF3);
	r6 = D(r6, s[0][1][0], 0x0B11EFF5, 0x181CEFFF, 0x051508FD, 0xFDE9E711);
	r7 = D(r7, s[0][1][0], 0xDEF312F4, 0xEB0DEAF1, 0x0AE8FE00, 0xFC401B0C);
	r0 = D(r0, s[0][1][1], 0x23131CF5, 0xF0F908F8, 0x1DF3F903, 0x090DFD0F);
	r1 = D(r1, s[0][1][1], 0xE60C1202, 0x050A28DA, 0x10069A18, 0x11110503);
	r2 = D(r2, s[0][1][1], 0xFFFE05EC, 0x07F601F9, 0xD9EFFC04, 0x01060FF5);
	r3 = D(r3, s[0][1][1], 0xEF150C04, 0xE4E5F701, 0x07D60005, 0xE9F0E900);
	r4 = D(r4, s[0][1][1], 0x0310E90D, 0x031509D1, 0xEE19DE11, 0xFBFA0FF2);
	r5 = D(r5, s[0][1][1], 0xF2E5F0FA, 0x091CFD14, 0x02E1FB0A, 0xF7FBF8F9);
	r6 = D(r6, s[0][1][1], 0x05E709FB, 0xD1D6110A, 0x124AED04, 0x09F11903);
	r7 = D(r7, s[0][1][1], 0xFDFFDA09, 0xF5020310, 0x01E2F31B, 0xF2F0E406);
	r0 = D(r0, s[0][1][2], 0xFDF3F4F2, 0x0A000AEC, 0x120816F6, 0x00EC21F1);
	r1 = D(r1, s[0][1][2], 0xFFFD14FB, 0x0AE9F2D5, 0x19DD0AE0, 0xF1E5E617);
	r2 = D(r2, s[0][1][2], 0xF9190308, 0xF335FB10, 0x08290007, 0x0C16F108);
	r3 = D(r3, s[0][1][2], 0xEB0114E8, 0xF6EDDBEC, 0xF6120103, 0x0EEF0A19);
	r4 = D(r4, s[0][1][2], 0x02EC01EE, 0xE501E306, 0x04311BFE, 0xF4FAF603);
	r5 = D(r5, s[0][1][2], 0xFD1BEA03, 0x0835F704, 0x0BF1FFFC, 0xF70D0EEE);
	r6 = D(r6, s[0][1][2], 0x0B1D07EF, 0x1102EB08, 0xFC08F6FE, 0xF71DFA03);
	r7 = D(r7, s[0][1][2], 0x08ED09FA, 0xFCEF01FD, 0xFCE3FAF9, 0x05F1ECDA);
	r0 = D(r0, s[0][2][0], 0x28070102, 0x16F907FF, 0xFDEA09F8, 0xFEDB08F9);
	r1 = D(r1, s[0][2][0], 0x00EFEE11, 0x500208EB, 0x1DE815D7, 0xEC1A15FE);
	r2 = D(r2, s[0][2][0], 0x10E7DAF9, 0xEC0B0F04, 0xEAF8D406, 0xFAF608FE);
	r3 = D(r3, s[0][2][0], 0xB6F8F913, 0xFA0702FE, 0x1BF91416, 0xFE021702);
	r4 = D(r4, s[0][2][0], 0xFF0FFDF7, 0x091AED0D, 0xEBF8FDF3, 0xCDFD101B);
	r5 = D(r5, s[0][2][0], 0xFE2A0200, 0xFAF30D00, 0x000B08FA, 0xAB05FDEA);
	r6 = D(r6, s[0][2][0], 0x08F001DB, 0x0CF2F905, 0xB81808FD, 0x05101C0A);
	r7 = D(r7, s[0][2][0], 0x01F31016, 0xE7E007F2, 0x19EFFFFF, 0x011A0402);
	r0 = D(r0, s[0][2][1], 0xEBFAFE14, 0x0AFC03F3, 0x11EE1306, 0xFFFF09ED);
	r1 = D(r1, s[0][2][1], 0x080CFFF4, 0x81FA0337, 0xFF2ECCEA, 0x0B100E0F);
	r2 = D(r2, s[0][2][1], 0x03D1EBF7, 0x1B0A0FFB, 0xD5FD2704, 0xF50BF204);
	r3 = D(r3, s[0][2][1], 0xCE1D0104, 0xE9EAEC08, 0x09F900F1, 0xFC15F9FA);
	r4 = D(r4, s[0][2][1], 0x0723FA03, 0x090B0CFD, 0xF7E01003, 0x0317E715);
	r5 = D(r5, s[0][2][1], 0xF51710F7, 0xFB18F905, 0xF800FD13, 0x00DFEBF9);
	r6 = D(r6, s[0][2][1], 0x0FFCFAEA, 0x160518F8, 0x060404F6, 0xF10F0903);
	r7 = D(r7, s[0][2][1], 0xFA13F205, 0x091A1702, 0x08E6FFF5, 0x06F802F3);
	r0 = D(r0, s[0][2][2], 0x00FC0B0C, 0x01FE0EFC, 0xFF00E6EE, 0xFCCC1407);
	r1 = D(r1, s[0][2][2], 0xFC00050B, 0xF413E4E5, 0xF5EFFE0D, 0xEE05EE02);
	r2 = D(r2, s[0][2][2], 0xE9F704FE, 0xFC13E5F3, 0x05F80806, 0x08EB04FE);
	r3 = D(r3, s[0][2][2], 0xEC0BEAEE, 0xF3BDF5FE, 0x10C40207, 0x15F2F714);
	r4 = D(r4, s[0][2][2], 0x0EDA0C01, 0x061E0D08, 0xFA110701, 0xF6F70C0E);
	r5 = D(r5, s[0][2][2], 0xFC1B1903, 0xF4120100, 0x0F04FCF9, 0xE00CF222);
	r6 = D(r6, s[0][2][2], 0x0508FB19, 0x09ECFC00, 0x1603F8F6, 0x09FBD10C);
	r7 = D(r7, s[0][2][2], 0x0C101CE7, 0x0709FFE5, 0x1FF8F601, 0x11F4FB02);
	r0 = D(r0, s[1][0][0], 0x10F901FB, 0xFCF70108, 0xF0FDD2F1, 0xEEFFFA03);
	r1 = D(r1, s[1][0][0], 0x0E0AFB05, 0xF0110CF6, 0x0C203AFD, 0x190D2104);
	r2 = D(r2, s[1][0][0], 0x02100405, 0x03FBF7FF, 0x1EE0DDEE, 0x120E07FD);
	r3 = D(r3, s[1][0][0], 0x090619ED, 0x0A061B00, 0xEDDD1802, 0x110AE80F);
	r4 = D(r4, s[1][0][0], 0xF9F8F8FC, 0xF80E0902, 0x0D8138E0, 0xE3F1FB08);
	r5 = D(r5, s[1][0][0], 0x23020201, 0x03030506, 0xFCF0F7FB, 0x280F2DF7);
	r6 = D(r6, s[1][0][0], 0x0909E2F7, 0xEF021314, 0x050906ED, 0xE5090504);
	r7 = D(r7, s[1][0][0], 0xE1E105FA, 0xF0F91F0E, 0xFCFC050A, 0x06020BFE);
	r0 = D(r0, s[1][0][1], 0xF702FEF9, 0x090FFD0C, 0xF2FE0302, 0xCC0AF708);
	r1 = D(r1, s[1][0][1], 0xF7EA08F0, 0x05FBFCE0, 0xF5EA2CFA, 0x020519F5);
	r2 = D(r2, s[1][0][1], 0x14FB0DF9, 0xDA0F0AF3, 0xF521DCEB, 0xE705F704);
	r3 = D(r3, s[1][0][1], 0x9E21E3E4, 0x0C031318, 0x0CFA09FF, 0x02F600F2);
	r4 = D(r4, s[1][0][1], 0xEBF7FD08, 0x35FDFB0D, 0x131514A7, 0xF6F803F6);
	r5 = D(r5, s[1][0][1], 0xFE07FC04, 0x070D02FF, 0xFF10FA06, 0xFCEB1AFE);
	r6 = D(r6, s[1][0][1], 0xFAF5F710, 0x0713FC06, 0xDBF0FCE2, 0xF3F60211);
	r7 = D(r7, s[1][0][1], 0xEE010B0D, 0xEE1B1807, 0x0E0601F7, 0xDCF50505);
	r0 = D(r0, s[1][0][2], 0x09FD0100, 0xFE210104, 0x0AFD0405, 0xFFFBF1FF);
	r1 = D(r1, s[1][0][2], 0xEFF1FAF4, 0x0BD4E7BA, 0x280AF8B7, 0x04F906FA);
	r2 = D(r2, s[1][0][2], 0x0FF8EBFC, 0x082216FA, 0x1807ECF6, 0x1808FEFE);
	r3 = D(r3, s[1][0][2], 0x210BDCD7, 0xFC09171D, 0x0BF9FDF8, 0x09F0E3F6);
	r4 = D(r4, s[1][0][2], 0xFFFF07FE, 0xF7FA0303, 0xE80CE1F3, 0xF40502FE);
	r5 = D(r5, s[1][0][2], 0x04FBEE0A, 0x34E71714, 0x06FAF70A, 0x0814E7FA);
	r6 = D(r6, s[1][0][2], 0xF1F4FDFE, 0xF10CEC0A, 0xFC1FFDDC, 0xDA0D0D0E);
	r7 = D(r7, s[1][0][2], 0xF8EDFFFF, 0xE7FCF9FE, 0xFEFAF9F6, 0xCCF3ED02);
	r0 = D(r0, s[1][1][0], 0xE604E906, 0x1FE8FFFD, 0x1E17F3F6, 0xF9EBFCFE);
	r1 = D(r1, s[1][1][0], 0x20060204, 0x24E9F0EE, 0xF70902E7, 0x12F7020A);
	r2 = D(r2, s[1][1][0], 0xE2E4D9F3, 0xEA05C3F5, 0x1309FA00, 0xF4F6EC12);
	r3 = D(r3, s[1][1][0], 0x1005E8F2, 0x19F90E02, 0x07EB1DF6, 0x0D051106);
	r4 = D(r4, s[1][1][0], 0x230E00FB, 0xF7F00501, 0xE2F0E0D7, 0x1A18EBFB);
	r5 = D(r5, s[1][1][0], 0xEF121200, 0x0BF3FDFD, 0xEC000211, 0xE4EC08FD);
	r6 = D(r6, s[1][1][0], 0x09FDFEFB, 0x07FD0F04, 0xFB0AF2F3, 0x36EDE0FE);
	r7 = D(r7, s[1][1][0], 0xEE090F08, 0x1309020D, 0x070E0708, 0xE6EF2EFC);
	r0 = D(r0, s[1][1][1], 0x080C16F6, 0xE4F3FBFF, 0x0C06FE06, 0xEDEDFB00);
	r1 = D(r1, s[1][1][1], 0x10F80101, 0x2DF4E9F0, 0xE1F413E9, 0xE80806F8);
	r2 = D(r2, s[1][1][1], 0xED0BF90C, 0xFDD2E5F6, 0x1DF1E1FE, 0x0BF223F8);
	r3 = D(r3, s[1][1][1], 0xCD08F281, 0x0FEF09FF, 0x19F70C05, 0xFEFA0AE9);
	r4 = D(r4, s[1][1][1], 0x1F04D4ED, 0x000B12F8, 0xF50ECDF5, 0x0C01E0FC);
	r5 = D(r5, s[1][1][1], 0xF60303F6, 0xE4F10C15, 0xF1FBFA10, 0xEF08E607);
	r6 = D(r6, s[1][1][1], 0x02FEFB07, 0xF2ECE900, 0xF0EFF7F6, 0xED0E03F6);
	r7 = D(r7, s[1][1][1], 0xD2F5E70D, 0xDF07F1FC, 0x07F3FFFC, 0x0AD4FFFA);
	r0 = D(r0, s[1][1][2], 0xFCFEE9FA, 0x12E8FBF8, 0x120802FE, 0xDBE92C0D);
	r1 = D(r1, s[1][1][2], 0x16FBFCF8, 0x0B002681, 0x09EE00BA, 0xFAF7CCFE);
	r2 = D(r2, s[1][1][2], 0xFF132307, 0xE701070E, 0x0608030B, 0xF8F5FAFA);
	r3 = D(r3, s[1][1][2], 0x040AF712, 0x0304FBFE, 0x26FEFB08, 0x0BFF1D02);
	r4 = D(r4, s[1][1][2], 0xDFF9DEF8, 0x1BFDE80D, 0xF5D717E9, 0x09140AFA);
	r5 = D(r5, s[1][1][2], 0xDDE800EB, 0xDF12FC07, 0xE60DF9FA, 0x1B19FC07);
	r6 = D(r6, s[1][1][2], 0x05030A02, 0xF1E31CFE, 0xE502EAC5, 0x0CF1F3FF);
	r7 = D(r7, s[1][1][2], 0x0804F304, 0x1002E5F7, 0x040F04FF, 0x181BE00B);
	r0 = D(r0, s[1][2][0], 0xFAF105FB, 0x07111900, 0xF00A090A, 0xFA1800F8);
	r1 = D(r1, s[1][2][0], 0x1A0A0FFA, 0xF3FB0E0D, 0xEADAFCFD, 0x24F3F80F);
	r2 = D(r2, s[1][2][0], 0x05F0D4FB, 0xF915FDFA, 0x0EF12601, 0xF204FE01);
	r3 = D(r3, s[1][2][0], 0xFC2047FF, 0xE90CF9EE, 0xD4FB07F4, 0xF2FCF314);
	r4 = D(r4, s[1][2][0], 0xF7EA1F01, 0xFAF30100, 0x17DF05E8, 0x0CDA0017);
	r5 = D(r5, s[1][2][0], 0xFC0FFCF9, 0xEBF9FEFB, 0x03070204, 0xE302E800);
	r6 = D(r6, s[1][2][0], 0xFB07F407, 0x1304FA06, 0xE2140005, 0xF5121801);
	r7 = D(r7, s[1][2][0], 0xDB01FEF3, 0x08E202FB, 0x0009FE10, 0x0A01FDFC);
	r0 = D(r0, s[1][2][1], 0xFBF3FF0D, 0x0813F50B, 0xFDFE040E, 0x2A12EEFD);
	r1 = D(r1, s[1][2][1], 0xDA0117F7, 0x0809ECF7, 0xD2E80215, 0xFBF2FC05);
	r2 = D(r2, s[1][2][1], 0xFFF9EC00, 0xFAFCF6EE, 0x0FE4FA05, 0x0707FAF8);
	r3 = D(r3, s[1][2][1], 0x1C0800E1, 0x0006DAEE, 0xF5060303, 0xFBFC15F7);
	r4 = D(r4, s[1][2][1], 0x1308FBFD, 0x0300FF06, 0x430C0DEE, 0x00072008);
	r5 = D(r5, s[1][2][1], 0x06F9FE07, 0xE804E5FC, 0xF502FC0A, 0xF7FCF007);
	r6 = D(r6, s[1][2][1], 0xF7F61100, 0xF509D9FF, 0x08FF15F4, 0xF80AECF0);
	r7 = D(r7, s[1][2][1], 0x27011500, 0xF9F906FD, 0xD5FC09FF, 0xF302F601);
	r0 = D(r0, s[1][2][2], 0x0B040B09, 0x140F1700, 0x1315FE02, 0xEDFD00F5);
	r1 = D(r1, s[1][2][2], 0xF50BEC01, 0x0405CDC6, 0x0C062919, 0x0E0809FE);
	r2 = D(r2, s[1][2][2], 0xF80708FF, 0x01EAF7FD, 0xF5F81D01, 0x05FE0202);
	r3 = D(r3, s[1][2][2], 0xF909FDCC, 0xFFF6E6ED, 0x1203E6F2, 0x072AE409);
	r4 = D(r4, s[1][2][2], 0xEEFD09FB, 0x100BFAEC, 0xFAF404FE, 0x08FF0905);
	r5 = D(r5, s[1][2][2], 0x11FB1AF7, 0xF4FE05E9, 0xF004160B, 0x0CE6100B);
	r6 = D(r6, s[1][2][2], 0x0206F601, 0x100AF8FE, 0xFC01F7DE, 0x0EDAF2FB);
	r7 = D(r7, s[1][2][2], 0x0B0E03F9, 0x07F6FDF7, 0xF208FF02, 0xFD0BF6F5);
	s[0][0][0] = G[14][xy.y+0][xy.x+0]; s[0][0][1] = G[14][xy.y+0][xy.x+1];
	s[0][0][2] = G[14][xy.y+0][xy.x+2]; s[0][1][0] = G[14][xy.y+1][xy.x+0];
	s[0][1][1] = G[14][xy.y+1][xy.x+1]; s[0][1][2] = G[14][xy.y+1][xy.x+2];
	s[0][2][0] = G[14][xy.y+2][xy.x+0]; s[0][2][1] = G[14][xy.y+2][xy.x+1];
	s[0][2][2] = G[14][xy.y+2][xy.x+2]; s[1][0][0] = G[15][xy.y+0][xy.x+0];
	s[1][0][1] = G[15][xy.y+0][xy.x+1]; s[1][0][2] = G[15][xy.y+0][xy.x+2];
	s[1][1][0] = G[15][xy.y+1][xy.x+0]; s[1][1][1] = G[15][xy.y+1][xy.x+1];
	s[1][1][2] = G[15][xy.y+1][xy.x+2]; s[1][2][0] = G[15][xy.y+2][xy.x+0];
	s[1][2][1] = G[15][xy.y+2][xy.x+1]; s[1][2][2] = G[15][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x01F503F1, 0x1227E5FD, 0xEA240FF0, 0xFFEC14EB);
	r1 = D(r1, s[0][0][0], 0x0805F305, 0x2109F912, 0x1E0A0B11, 0x09D8E1EB);
	r2 = D(r2, s[0][0][0], 0xFB01030E, 0xEF070901, 0xF8F80B09, 0xF402030E);
	r3 = D(r3, s[0][0][0], 0xE00F03F0, 0xFCD9F8F2, 0x1009EE09, 0x041FF402);
	r4 = D(r4, s[0][0][0], 0x1592060D, 0xFDCF0411, 0xFB0615F7, 0xEFFEF9D3);
	r5 = D(r5, s[0][0][0], 0x0BC2EBFC, 0x0F03CF0C, 0xF5DB1A0C, 0x10110BFA);
	r6 = D(r6, s[0][0][0], 0x09F0F61C, 0x08F0F607, 0xE2200A10, 0xE7FEFED9);
	r7 = D(r7, s[0][0][0], 0x10DFF10F, 0x0CF7D700, 0xF4FE0F00, 0x1811FC13);
	r0 = D(r0, s[0][0][1], 0x07030CF4, 0xF3011B08, 0xFD0CE501, 0x1701130E);
	r1 = D(r1, s[0][0][1], 0x07000502, 0x1900FAED, 0x12FDDE15, 0x06F1F6EF);
	r2 = D(r2, s[0][0][1], 0xF1F70006, 0xE5170A03, 0xFED5F102, 0x00060EE6);
	r3 = D(r3, s[0][0][1], 0x2BE902D6, 0x0617E525, 0x033607F1, 0xEEE70FF5);
	r4 = D(r4, s[0][0][1], 0x03C0E501, 0x1807EAF7, 0x1C12FBF5, 0xF4F5FC14);
	r5 = D(r5, s[0][0][1], 0xEA0A04FF, 0x07051413, 0xEBFE0405, 0x25E80E10);
	r6 = D(r6, s[0][0][1], 0xFE28F6F4, 0xFBFDF506, 0xF4360A12, 0x02FAF1FC);
	r7 = D(r7, s[0][0][1], 0xF515FE00, 0x1519EB0F, 0x0C11FE10, 0x10D8150B);
	r0 = D(r0, s[0][0][2], 0x04FF0EFA, 0xD5020C0F, 0x09FE091A, 0x0B09030D);
	r1 = D(r1, s[0][0][2], 0x04F20EF2, 0x1CE71400, 0x05DAEBDC, 0xE6FB0CF9);
	r2 = D(r2, s[0][0][2], 0x1EF21015, 0xEC14081B, 0xE8E60750, 0x0703040D);
	r3 = D(r3, s[0][0][2], 0x0E0106FD, 0xF304FF11, 0x01E707FE, 0x0719E6E4);
	r4 = D(r4, s[0][0][2], 0xE60EEBFF, 0xF501FB0C, 0x0D06FFFA, 0x02FBFBFA);
	r5 = D(r5, s[0][0][2], 0xE71508F3, 0x0F00F510, 0x110B02F8, 0x11080E24);
	r6 = D(r6, s[0][0][2], 0x14F615ED, 0x17F00CFE, 0x02FEE123, 0xFE00F9ED);
	r7 = D(r7, s[0][0][2], 0xF5FBFFEB, 0xFCF600FA, 0x0606F7F8, 0x0A0E16E9);
	r0 = D(r0, s[0][1][0], 0x0110FEF9, 0x060F0C03, 0xEF16FD08, 0x02181BFE);
	r1 = D(r1, s[0][1][0], 0x1300C5FB, 0x1D08EF14, 0x09FEE301, 0xFCE31614);
	r2 = D(r2, s[0][1][0], 0xE94E1F04, 0x06111106, 0x09ED00F3, 0x1113FD17);
	r3 = D(r3, s[0][1][0], 0xED400BFA, 0x08DF03F0, 0x0C120112, 0x0D04FB05);
	r4 = D(r4, s[0][1][0], 0x1081F2F4, 0xFC02020A, 0x0F13F0E9, 0xFC0D121B);
	r5 = D(r5, s[0][1][0], 0x10B61EEA, 0xD94927ED, 0xF4FFF8FC, 0xFFFFDAF4);
	r6 = D(r6, s[0][1][0], 0xFD38FDFF, 0xFD07F1DA, 0xE31809F6, 0x0100F0F3);
	r7 = D(r7, s[0][1][0], 0x0BF811FC, 0xE0FA01DD, 0x06CA0DF4, 0x0AFFEA0B);
	r0 = D(r0, s[0][1][1], 0x16FE0114, 0xFDECF3E7, 0xF40B0804, 0xECF3FAF9);
	r1 = D(r1, s[0][1][1], 0x08FDF0F5, 0xEB110905, 0x30F607EF, 0x0920F2FD);
	r2 = D(r2, s[0][1][1], 0x00F4F0F3, 0xE7F4FCF5, 0xEF06F412, 0xF7000401);
	r3 = D(r3, s[0][1][1], 0xF62AEA12, 0xEE810EEC, 0x0A1BDBF7, 0x0DFE2716);
	r4 = D(r4, s[0][1][1], 0x149DDD05, 0xF60B0CE8, 0x36FF8111, 0x02ED08F6);
	r5 = D(r5, s[0][1][1], 0x23D7EB0B, 0xE92400EC, 0xF0F7FEFA, 0x110825FB);
	r6 = D(r6, s[0][1][1], 0xF80DF60B, 0xEED705F5, 0xECEFF0DF, 0x180719FC);
	r7 = D(r7, s[0][1][1], 0x0921F705, 0xFB02EB0E, 0x00FEFEF3, 0x03DBE5CA);
	r0 = D(r0, s[0][1][2], 0x0DF7FFE8, 0xF5D90314, 0x0507F213, 0xFFEED713);
	r1 = D(r1, s[0][1][2], 0xFC030403, 0xE3F4011C, 0xC5F80414, 0xFD03F0ED);
	r2 = D(r2, s[0][1][2], 0x36FC1216, 0x0909FAD3, 0xE510F4FF, 0x0F02FAF5);
	r3 = D(r3, s[0][1][2], 0xDA2DFD0D, 0x04FAF301, 0xFFE8FBFF, 0xFDE2110C);
	r4 = D(r4, s[0][1][2], 0x03FCFF06, 0xFDF818E5, 0xD5F2C102, 0x1504F301);
	r5 = D(r5, s[0][1][2], 0xFB0B0510, 0x0206E9E8, 0x1316FCF4, 0xF6FEF802);
	r6 = D(r6, s[0][1][2], 0xF0FC0306, 0xF212F3F1, 0x0CE010E6, 0xFEEB110C);
	r7 = D(r7, s[0][1][2], 0xFAF2ED0C, 0xF0E2EA04, 0xECFDEFDE, 0xFEB80DDE);
	r0 = D(r0, s[0][2][0], 0xF7FAF0FF, 0x082B0301, 0xF403F5F7, 0xF50904F3);
	r1 = D(r1, s[0][2][0], 0x1CD416F9, 0x0219E7F1, 0x0A001209, 0xE628E6EF);
	r2 = D(r2, s[0][2][0], 0xFA60F4F6, 0x05FEF0EC, 0x083ADAD5, 0xFC06FC09);
	r3 = D(r3, s[0][2][0], 0xF25DFDFD, 0xF0DE1DFD, 0x1081E70C, 0x15E82BF5);
	r4 = D(r4, s[0][2][0], 0x01EA04FB, 0xEFF30DFA, 0x0F1DFF22, 0x07E22804);
	r5 = D(r5, s[0][2][0], 0xF9DD16F5, 0x0C9EFF05, 0x000715FF, 0xCEC300EB);
	r6 = D(r6, s[0][2][0], 0xF3E6E80C, 0x02060AF8, 0x1834FD0E, 0xF2D83303);
	r7 = D(r7, s[0][2][0], 0x09A60114, 0x19F40604, 0x06FEFC0B, 0x341112F5);
	r0 = D(r0, s[0][2][1], 0xEE07F617, 0xF4E20818, 0xE80A1511, 0xF920E000);
	r1 = D(r1, s[0][2][1], 0xFEF5DBED, 0x042FF103, 0xF8FC15FB, 0x26F20DF9);
	r2 = D(r2, s[0][2][1], 0xE8140DEC, 0xF115EBF1, 0x1A18F20B, 0x010CFFF7);
	r3 = D(r3, s[0][2][1], 0x060A1321, 0xFEE71A03, 0xF002F301, 0x09DDDEF0);
	r4 = D(r4, s[0][2][1], 0x111BF6E8, 0x0AE3F602, 0x070A1010, 0xFE32DFF7);
	r5 = D(r5, s[0][2][1], 0x03FE060C, 0x03D3F7F3, 0xFF030303, 0xD4DCED09);
	r6 = D(r6, s[0][2][1], 0xE9F91D1F, 0x0D23FCFE, 0x0B17FB10, 0x1FEFE0F9);
	r7 = D(r7, s[0][2][1], 0xFCC01008, 0x0C0DFBFE, 0xF70E010E, 0xFCEB0DF4);
	r0 = D(r0, s[0][2][2], 0xEF08F001, 0x04EA0403, 0x0AEB04F9, 0xFFE10505);
	r1 = D(r1, s[0][2][2], 0xFAFFF111, 0xE3EAF31C, 0xF71F1014, 0x08E900FC);
	r2 = D(r2, s[0][2][2], 0xE9F3F71B, 0xFB24FFF3, 0x040FEE1D, 0xEDFB0FFD);
	r3 = D(r3, s[0][2][2], 0xEB0FD610, 0xF1FF01EE, 0xFCF80AF6, 0x2121FB02);
	r4 = D(r4, s[0][2][2], 0x04EB0FF6, 0x02F8080F, 0xFBF9D803, 0xFC040600);
	r5 = D(r5, s[0][2][2], 0xFEF5FB2C, 0x0F020104, 0x102818FA, 0xED03DFF9);
	r6 = D(r6, s[0][2][2], 0xF2110F13, 0x04F004FE, 0xD52C0A0C, 0x030E0FCA);
	r7 = D(r7, s[0][2][2], 0x13FFFA1D, 0x01F821F1, 0x06F80502, 0xD1FF13F3);
	r0 = D(r0, s[1][0][0], 0x06FC0E16, 0xFD01FDFB, 0xEAE3140A, 0xFD11F5EA);
	r1 = D(r1, s[1][0][0], 0x0615EDFF, 0xF31506E4, 0x0D0BFFED, 0x1DF20FFD);
	r2 = D(r2, s[1][0][0], 0x0E11121F, 0xF7F0F50A, 0x07C8F60D, 0x0917FDE9);
	r3 = D(r3, s[1][0][0], 0xFCFFFCED, 0x020CF807, 0x090D0EFB, 0xFEEBEFFD);
	r4 = D(r4, s[1][0][0], 0xFE01180A, 0x06ED0D06, 0x0B37FAE8, 0x08070919);
	r5 = D(r5, s[1][0][0], 0x17F6F40E, 0xF4D128FE, 0x08EC290D, 0x13FB08FF);
	r6 = D(r6, s[1][0][0], 0xFB0A04F1, 0x10060BF8, 0x10FBFE06, 0xFE0505F3);
	r7 = D(r7, s[1][0][0], 0xEEFA080F, 0xFBF9FCEF, 0xFD1EF7FB, 0xF318EAE1);
	r0 = D(r0, s[1][0][1], 0xFD0113F2, 0x0616FDFE, 0x09F43EF4, 0xFD0702FF);
	r1 = D(r1, s[1][0][1], 0x0016E707, 0xFD0DF6E6, 0x07EEF9DB, 0xFB03ED0E);
	r2 = D(r2, s[1][0][1], 0x171706DF, 0xEF001D04, 0x14DEF8FC, 0x00F20700);
	r3 = D(r3, s[1][0][1], 0xF5130C0F, 0x012606EF, 0xFE041805, 0x160B0FED);
	r4 = D(r4, s[1][0][1], 0xF5FCF709, 0x0827ECF8, 0x09FF0A13, 0x0B05F504);
	r5 = D(r5, s[1][0][1], 0xF909FA02, 0xFD0CFE07, 0xFEEE22F2, 0xFF08F201);
	r6 = D(r6, s[1][0][1], 0x000BDF10, 0xF9F739FB, 0xF8171400, 0x140602EE);
	r7 = D(r7, s[1][0][1], 0x0FEB0B26, 0x1210E411, 0x07F9080E, 0xFAF70FF2);
	r0 = D(r0, s[1][0][2], 0x040511F8, 0xF107FA07, 0x11150FFF, 0x0204EDE2);
	r1 = D(r1, s[1][0][2], 0xF4F702FC, 0xEEF4F5E6, 0x09E3F1F9, 0x00FCECEF);
	r2 = D(r2, s[1][0][2], 0x10FAECFF, 0x00040CE5, 0xFCEDF00C, 0x05090301);
	r3 = D(r3, s[1][0][2], 0xE711F513, 0xF80DEB00, 0x04F71AE8, 0xFB15F0EC);
	r4 = D(r4, s[1][0][2], 0x0000E60D, 0xF0FCFD05, 0xFD26F9F7, 0x0CFF01EB);
	r5 = D(r5, s[1][0][2], 0xEA0CFFFB, 0xF9F1EC08, 0xFFEF12FC, 0x0101FBF6);
	r6 = D(r6, s[1][0][2], 0xF314FEFA, 0xFCFBF5DB, 0x09FBF210, 0xFAF3110F);
	r7 = D(r7, s[1][0][2], 0xF4FB090A, 0x13FBF60A, 0xFDE6F204, 0x07E50A06);
	r0 = D(r0, s[1][1][0], 0x01EAF0FE, 0x1210F303, 0xFCEF021A, 0xFCFBF916);
	r1 = D(r1, s[1][1][0], 0x0914FFFA, 0x061609D8, 0x04090507, 0xDEE31906);
	r2 = D(r2, s[1][1][0], 0x05FB0FF9, 0xF1EEF80C, 0x0DE90103, 0x132DF4EC);
	r3 = D(r3, s[1][1][0], 0x062414EF, 0x040A0DEE, 0xDA14EA03, 0xF204E61F);
	r4 = D(r4, s[1][1][0], 0x0A0502FF, 0xEA1CFDF5, 0x14D0E6ED, 0x0BE014E7);
	r5 = D(r5, s[1][1][0], 0x19F617FC, 0xEB0B040D, 0x0B0401FD, 0x1AF711EF);
	r6 = D(r6, s[1][1][0], 0x14F41912, 0xFA020F09, 0x111A0B07, 0xFC1300F1);
	r7 = D(r7, s[1][1][0], 0xFD09FFFD, 0xF9FF010B, 0xEDE516FA, 0x1407FC09);
	r0 = D(r0, s[1][1][1], 0x11D8F3F5, 0x200101FC, 0x011D00F6, 0xE2EAFC02);
	r1 = D(r1, s[1][1][1], 0x08F7E905, 0x15D41109, 0x08FDFDF3, 0x0F20FF06);
	r2 = D(r2, s[1][1][1], 0x1A02F9FF, 0xF5F012F1, 0xF70DF510, 0xE2E712F6);
	r3 = D(r3, s[1][1][1], 0xE0CD0B00, 0x1E020109, 0xECF3E91E, 0xE70E0315);
	r4 = D(r4, s[1][1][1], 0xFEE803F1, 0x33D80C0E, 0x071524FD, 0xF5EAF613);
	r5 = D(r5, s[1][1][1], 0xE5F60219, 0x141BE50D, 0xFE111810, 0x050312F2);
	r6 = D(r6, s[1][1][1], 0xFF09E7F7, 0x001602FD, 0xF8CA1900, 0xFD05EB0C);
	r7 = D(r7, s[1][1][1], 0x05FC18DE, 0x050B08F3, 0x1015FEF7, 0xE30A02F9);
	r0 = D(r0, s[1][1][2], 0xFDE8FAFD, 0xCDEC0606, 0x0AFF0E06, 0x06F3FA14);
	r1 = D(r1, s[1][1][2], 0x09F61703, 0xE51AF70C, 0xF4E9EEFD, 0xF5E5F4FE);
	r2 = D(r2, s[1][1][2], 0x0711FF06, 0x1B201EFA, 0xE1010A02, 0xF7EBFB02);
	r3 = D(r3, s[1][1][2], 0xFB0012F5, 0x14ED08F8, 0xF7FF030E, 0x0703FB09);
	r4 = D(r4, s[1][1][2], 0xE9F7EF04, 0xE40E0D12, 0xF3EE111A, 0x08EC05FD);
	r5 = D(r5, s[1][1][2], 0xFDF4FB06, 0x0401EF08, 0xECFD0906, 0xEF020A06);
	r6 = D(r6, s[1][1][2], 0x13010EF9, 0xFEF8E9F4, 0xE61B0305, 0xCF001C09);
	r7 = D(r7, s[1][1][2], 0xFC02EBF7, 0x00FF01E8, 0x07F200EA, 0xEBFE050A);
	r0 = D(r0, s[1][2][0], 0xECF6FB01, 0xFDEE06FF, 0xF1E707F1, 0x020D0608);
	r1 = D(r1, s[1][2][0], 0xFB02FF0E, 0x0301FD0F, 0x0DEF032E, 0x97010002);
	r2 = D(r2, s[1][2][0], 0x0E03001E, 0xEC03FC12, 0x04170F04, 0x13F9FC02);
	r3 = D(r3, s[1][2][0], 0x0801F91E, 0xFB00F80D, 0xFE07F9F2, 0xECFF0FF1);
	r4 = D(r4, s[1][2][0], 0x092206DD, 0xF2000DFD, 0xF404FAE8, 0x18311A10);
	r5 = D(r5, s[1][2][0], 0xF9F9F5F5, 0xF2FE1209, 0x080406F9, 0xE901F513);
	r6 = D(r6, s[1][2][0], 0x02CC16FF, 0x06F2F00A, 0x1104FCE7, 0x10FAFD18);
	r7 = D(r7, s[1][2][0], 0xFA0DE9EA, 0x070008FD, 0xD50DEDFF, 0x0806F716);
	r0 = D(r0, s[1][2][1], 0xFF27E30D, 0x060814FE, 0x1C00F814, 0xFEF415FD);
	r1 = D(r1, s[1][2][1], 0x0CFA12F6, 0xE5360D27, 0xE8C70FF9, 0x061BEDDF);
	r2 = D(r2, s[1][2][1], 0xF9F0F4FA, 0xFD02020D, 0x191FFEE9, 0xCE070507);
	r3 = D(r3, s[1][2][1], 0x91D807F7, 0xEFFD08FA, 0x1D06F1ED, 0xF2020DF6);
	r4 = D(r4, s[1][2][1], 0x0E0203F8, 0xDB0BFC04, 0x11121C03, 0xB70D0004);
	r5 = D(r5, s[1][2][1], 0xF509F9DF, 0xF1FA0AF6, 0x12FEEFF3, 0xFBFFFB0B);
	r6 = D(r6, s[1][2][1], 0x1BBC0A01, 0x0701EF05, 0xCD0BFF08, 0xDF04F9F5);
	r7 = D(r7, s[1][2][1], 0x1B1304FF, 0xF6F5060B, 0x13DD0BFF, 0xCA01FAFF);
	r0 = D(r0, s[1][2][2], 0x0E16EE03, 0xF8FFFFFA, 0xF7F6F7F5, 0xEB1C0203);
	r1 = D(r1, s[1][2][2], 0x10100CEC, 0xDC03F0DB, 0xDEF8F002, 0xFCF3FAFE);
	r2 = D(r2, s[1][2][2], 0xFA0DF314, 0xD218F108, 0xEC190EF0, 0xE0FFFD0D);
	r3 = D(r3, s[1][2][2], 0xE4E3FD17, 0x0AE5FF1D, 0x23F910FB, 0x12E306FB);
	r4 = D(r4, s[1][2][2], 0xF7FEF906, 0x1BF7F4F1, 0xEDF8ED06, 0x13F6F808);
	r5 = D(r5, s[1][2][2], 0x0C000100, 0xFBFAFDE2, 0x04E5FAED, 0xF8020112);
	r6 = D(r6, s[1][2][2], 0x0CF2FB04, 0xBFF70018, 0x11ECF00A, 0x22F9FFEA);
	r7 = D(r7, s[1][2][2], 0x08030FF5, 0xE9F61303, 0xF104F11A, 0xFB040915);
	f0 = vec4(r0) * 6.20001240e-05;
	f0 += vec4(8.871e-03, 1.047e-02, -9.161e-03, 5.216e-02);
	f0 = max(f0, vec4(0.0));
	imageStore(out_image, opos + ivec2(0, 0), f0);
	f1 = vec4(r1) * 6.20001240e-05;
	f1 += vec4(-2.085e-02, -4.998e-04, 1.999e-03, 1.346e-02);
	f1 = max(f1, vec4(0.0));
	imageStore(out_image, opos + ivec2(1, 0), f1);
	f2 = vec4(r2) * 6.20001240e-05;
	f2 += vec4(-2.545e-02, 5.782e-03, 1.258e-02, -2.678e-03);
	f2 = max(f2, vec4(0.0));
	imageStore(out_image, opos + ivec2(0, 1), f2);
	f3 = vec4(r3) * 6.20001240e-05;
	f3 += vec4(-2.076e-02, 1.228e-02, 5.612e-03, 5.446e-03);
	f3 = max(f3, vec4(0.0));
	imageStore(out_image, opos + ivec2(1, 1), f3);
	f4 = vec4(r4) * 6.20001240e-05;
	f4 += vec4(3.293e-02, -5.252e-03, -7.568e-02, -1.549e-02);
	f4 = max(f4, vec4(0.0));
	imageStore(out_image, opos + ivec2(2, 0), f4);
	f5 = vec4(r5) * 6.20001240e-05;
	f5 += vec4(2.211e-02, 1.240e-02, -9.025e-02, 1.973e-03);
	f5 = max(f5, vec4(0.0));
	imageStore(out_image, opos + ivec2(3, 0), f5);
	f6 = vec4(r6) * 6.20001240e-05;
	f6 += vec4(-1.702e-02, 1.267e-02, -2.266e-02, 2.389e-02);
	f6 = max(f6, vec4(0.0));
	imageStore(out_image, opos + ivec2(2, 1), f6);
	f7 = vec4(r7) * 6.20001240e-05;
	f7 += vec4(1.254e-02, 1.374e-02, -2.449e-04, -1.305e-02);
	f7 = max(f7, vec4(0.0));
	imageStore(out_image, opos + ivec2(3, 1), f7);
	r0 = ivec4(0);
	r1 = ivec4(0);
	r2 = ivec4(0);
	r3 = ivec4(0);
	r4 = ivec4(0);
	r5 = ivec4(0);
	r6 = ivec4(0);
	r7 = ivec4(0);
	s[0][0][0] = G[0][xy.y+0][xy.x+0]; s[0][0][1] = G[0][xy.y+0][xy.x+1];
	s[0][0][2] = G[0][xy.y+0][xy.x+2]; s[0][1][0] = G[0][xy.y+1][xy.x+0];
	s[0][1][1] = G[0][xy.y+1][xy.x+1]; s[0][1][2] = G[0][xy.y+1][xy.x+2];
	s[0][2][0] = G[0][xy.y+2][xy.x+0]; s[0][2][1] = G[0][xy.y+2][xy.x+1];
	s[0][2][2] = G[0][xy.y+2][xy.x+2]; s[1][0][0] = G[1][xy.y+0][xy.x+0];
	s[1][0][1] = G[1][xy.y+0][xy.x+1]; s[1][0][2] = G[1][xy.y+0][xy.x+2];
	s[1][1][0] = G[1][xy.y+1][xy.x+0]; s[1][1][1] = G[1][xy.y+1][xy.x+1];
	s[1][1][2] = G[1][xy.y+1][xy.x+2]; s[1][2][0] = G[1][xy.y+2][xy.x+0];
	s[1][2][1] = G[1][xy.y+2][xy.x+1]; s[1][2][2] = G[1][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xE501FB07, 0xFCEC03F2, 0xFF98C4EB, 0x0A180D00);
	r1 = D(r1, s[0][0][0], 0x0111FD00, 0x1505000B, 0x2CE81200, 0x081D03F1);
	r2 = D(r2, s[0][0][0], 0x03031201, 0xFAE8F203, 0x1AF1F60D, 0xED0E00FF);
	r3 = D(r3, s[0][0][0], 0xFAFF0DEF, 0x07FEFFEF, 0xF012FA03, 0x0B030D07);
	r4 = D(r4, s[0][0][0], 0x02FDFAFB, 0xFAEB0003, 0x00F301DF, 0xF80A01EF);
	r5 = D(r5, s[0][0][0], 0x0D0407EF, 0x0FFE00FF, 0x0DF7FA0B, 0xF9FFFE0B);
	r6 = D(r6, s[0][0][0], 0xFB05E8E6, 0x08F80502, 0x160C1B06, 0xFA09EF09);
	r7 = D(r7, s[0][0][0], 0xEEE509EB, 0xFF0A0E81, 0xE903FC02, 0x0BEE12F8);
	r0 = D(r0, s[0][0][1], 0x0903FC14, 0xFA01FDFE, 0xE2D6EF0F, 0xF90DEFFC);
	r1 = D(r1, s[0][0][1], 0x08F0F6E3, 0xF6F0FFF8, 0x02FEDF1F, 0x050B112E);
	r2 = D(r2, s[0][0][1], 0xDD06FA14, 0x0405FE00, 0x07FCFD16, 0x0EF9F40D);
	r3 = D(r3, s[0][0][1], 0xF20906FE, 0x140202FD, 0x05EFEA0E, 0x06E5140F);
	r4 = D(r4, s[0][0][1], 0x111A09FF, 0xFFD70003, 0xFCEF16DE, 0x130FF3BF);
	r5 = D(r5, s[0][0][1], 0x0AFE04E5, 0x0A06FC07, 0x0DF2081B, 0x21020B16);
	r6 = D(r6, s[0][0][1], 0x0019030C, 0xE002F908, 0xF7FD0FE4, 0xE4EC050C);
	r7 = D(r7, s[0][0][1], 0xF2FCF4F8, 0xFD020281, 0xF00B0A08, 0x01FE01E9);
	r0 = D(r0, s[0][0][2], 0xF8031CEE, 0xDDEC0B16, 0xC79609F7, 0xFBEF0914);
	r1 = D(r1, s[0][0][2], 0xFCF5F6F7, 0xF7F816FE, 0xEBFCECF0, 0xF40A07F0);
	r2 = D(r2, s[0][0][2], 0xF6FBF905, 0xEFEDEE1A, 0x0FFBFFEE, 0xF0F4F4FB);
	r3 = D(r3, s[0][0][2], 0x01F8F0E0, 0xF5070728, 0x00ED2B33, 0xFD0214EB);
	r4 = D(r4, s[0][0][2], 0xFB0409ED, 0xE1110507, 0x06021805, 0xFD0F04EE);
	r5 = D(r5, s[0][0][2], 0x04F8F6FD, 0xF6E4F8CF, 0xFF10F7F1, 0x01F601F8);
	r6 = D(r6, s[0][0][2], 0x0F1FF215, 0x1E0DFDF1, 0x000F0BFF, 0x0100E1E1);
	r7 = D(r7, s[0][0][2], 0x03040801, 0x0B0307C1, 0xD3FB0BF2, 0xF6100FEA);
	r0 = D(r0, s[0][1][0], 0xED080800, 0xF901FC11, 0x1308E906, 0x09E8040A);
	r1 = D(r1, s[0][1][0], 0x0509E817, 0xFAFD0504, 0xF5FEF126, 0xF2EC06EA);
	r2 = D(r2, s[0][1][0], 0x09F40E00, 0xDB01F5FB, 0xFAF90DFD, 0xFB14030C);
	r3 = D(r3, s[0][1][0], 0x09051819, 0xF610090B, 0x0319F307, 0x0414F3FB);
	r4 = D(r4, s[0][1][0], 0xFBE9FE14, 0x0DE8CA19, 0xF6ED03E6, 0xF3F5FFF1);
	r5 = D(r5, s[0][1][0], 0x08FEF9F1, 0x02F5E4EE, 0xF5061BE5, 0xEA0EF0F1);
	r6 = D(r6, s[0][1][0], 0xFCF4FFF1, 0xFA0DFEF6, 0xF814F3FD, 0x02F21105);
	r7 = D(r7, s[0][1][0], 0x00FD0410, 0x0104FC01, 0x070D06FF, 0x081C0803);
	r0 = D(r0, s[0][1][1], 0x0609FCFC, 0x0A0AFD00, 0x0F20F90B, 0x040903FC);
	r1 = D(r1, s[0][1][1], 0x09EFF422, 0x070104FD, 0xFC0CFD07, 0xFCF6E7DB);
	r2 = D(r2, s[0][1][1], 0xEE0A140F, 0xFFEF10D9, 0x0CFD0502, 0x08E20810);
	r3 = D(r3, s[0][1][1], 0xEFF4090A, 0xDAFA02E0, 0x0FFAB8E1, 0xFBFCFFF0);
	r4 = D(r4, s[0][1][1], 0xEDFBFF1E, 0x140FFC08, 0xEA0CF7EB, 0xFFFE0617);
	r5 = D(r5, s[0][1][1], 0xF0FCFFEC, 0x041B080D, 0x19060D0B, 0xEB050407);
	r6 = D(r6, s[0][1][1], 0x0AFB11FF, 0x19FBFBF7, 0xEBF6F0F9, 0xEFF111FF);
	r7 = D(r7, s[0][1][1], 0xF60716F7, 0xFF09F8CE, 0xF4EE0B10, 0xF5FBF633);
	r0 = D(r0, s[0][1][2], 0xFE0801F2, 0xF119F73C, 0x0EE8050E, 0xEB240408);
	r1 = D(r1, s[0][1][2], 0x0AFE17F0, 0x00F4FE09, 0xFF0A1DE5, 0x10FBF301);
	r2 = D(r2, s[0][1][2], 0x050308F5, 0x0A0706EE, 0xF1FDFE0F, 0x0AF5100A);
	r3 = D(r3, s[0][1][2], 0x0A0E0708, 0x0AFFF1F8, 0xF6F80601, 0xF21E0AEC);
	r4 = D(r4, s[0][1][2], 0xF801FC1A, 0x16F4FC21, 0x1A05F0DA, 0xF208F811);
	r5 = D(r5, s[0][1][2], 0x03F7010F, 0xFA0A0E05, 0xFEFF0208, 0x17F6EEF6);
	r6 = D(r6, s[0][1][2], 0xF50B1410, 0xE9F40506, 0x0BF400FB, 0xF80A01D0);
	r7 = D(r7, s[0][1][2], 0xFB00E5F9, 0xF90018CF, 0x01F60FF2, 0xE6EFFA0E);
	r0 = D(r0, s[0][2][0], 0xF7FB08FE, 0x00FBF7F5, 0x03F10614, 0x05EC18E6);
	r1 = D(r1, s[0][2][0], 0xE0110A0F, 0x00FF1A0A, 0xF8FD1FFA, 0x00F80501);
	r2 = D(r2, s[0][2][0], 0x0B0F0105, 0x1C150804, 0xEE12FCD3, 0x0A1D06ED);
	r3 = D(r3, s[0][2][0], 0x17FB0804, 0x020402F9, 0xFB0405FA, 0xF9E0F907);
	r4 = D(r4, s[0][2][0], 0x030603F4, 0x0711FFE4, 0xE9FA0C16, 0x0CFC080E);
	r5 = D(r5, s[0][2][0], 0x01FC08F3, 0xF707FFEC, 0x03F305F7, 0xF6F90BF2);
	r6 = D(r6, s[0][2][0], 0xEEF21302, 0xEE070BFA, 0xE5F0FF11, 0x0FF1FEFF);
	r7 = D(r7, s[0][2][0], 0x01FAF8FC, 0x02F2FDE8, 0x020E0D0F, 0x150709FC);
	r0 = D(r0, s[0][2][1], 0x05EAFAF6, 0x030D0501, 0xF5E3F50B, 0x04F3F5F0);
	r1 = D(r1, s[0][2][1], 0x050DFEFE, 0x0003E5EF, 0x1010FD0F, 0x0908FA02);
	r2 = D(r2, s[0][2][1], 0xF9FF15FE, 0xF3F30720, 0x08F30B14, 0xF1F2FBE8);
	r3 = D(r3, s[0][2][1], 0x01FE0C06, 0x07EFF80E, 0x0B0EF9C9, 0x080C09FB);
	r4 = D(r4, s[0][2][1], 0x07FE02F9, 0xF9121DF1, 0x0FFB0A02, 0xFF05F9CE);
	r5 = D(r5, s[0][2][1], 0x00FD0023, 0xFC061527, 0xEA09F5F4, 0xFFFEEB16);
	r6 = D(r6, s[0][2][1], 0x21E4FD09, 0xEEFDFC0E, 0x13051917, 0xF9FC0330);
	r7 = D(r7, s[0][2][1], 0x0B110A20, 0x03F3F2FE, 0xF71404FD, 0xFC03011E);
	r0 = D(r0, s[0][2][2], 0x2603FC16, 0x140300CF, 0x12F8F3F3, 0x031FDAF1);
	r1 = D(r1, s[0][2][2], 0x0FF206F6, 0xDCF6F2F4, 0xFC1101FD, 0xFDF3F60F);
	r2 = D(r2, s[0][2][2], 0x040300DA, 0x0B020D0C, 0xE5F21805, 0xEDF8FFFF);
	r3 = D(r3, s[0][2][2], 0xEF030305, 0x00FC0AF9, 0xFDFF01F9, 0xEEFBF6F6);
	r4 = D(r4, s[0][2][2], 0xF50D02E0, 0x0800FEF4, 0xFDFEDACE, 0x01F704F3);
	r5 = D(r5, s[0][2][2], 0xFF07EE21, 0x06DC0831, 0xF605F40D, 0x0E120D00);
	r6 = D(r6, s[0][2][2], 0xF4D5F9CF, 0x1EF60008, 0x080DF0F6, 0x0FF6FDEB);
	r7 = D(r7, s[0][2][2], 0x1308F11C, 0xFF0404FD, 0xFBFEF803, 0x01F209EB);
	r0 = D(r0, s[1][0][0], 0x0BFEFCFF, 0x0302EC1F, 0xDBD704F6, 0x08FD0200);
	r1 = D(r1, s[1][0][0], 0xEFF50521, 0xFBE605F3, 0xF00CFCF8, 0x0F060412);
	r2 = D(r2, s[1][0][0], 0x0A0FFC0B, 0x16FBF8DC, 0x181003F1, 0xF70F00EE);
	r3 = D(r3, s[1][0][0], 0x18BB0E01, 0x08FE0B0D, 0x0C0CFDEF, 0xFFEDFC00);
	r4 = D(r4, s[1][0][0], 0xF5E3E9E9, 0xFE0AEAFB, 0x180300FB, 0xFFEB05FE);
	r5 = D(r5, s[1][0][0], 0x0112FC01, 0xF607F2EE, 0xF1E40E01, 0xFADC08F1);
	r6 = D(r6, s[1][0][0], 0xFF040F17, 0xFEFEEDF8, 0xFA0F0A04, 0x08FFF3E4);
	r7 = D(r7, s[1][0][0], 0xF31217F9, 0xEFFDE61E, 0xF814EA10, 0x0AE7F0FA);
	r0 = D(r0, s[1][0][1], 0xCBEEF8ED, 0xF906FEE1, 0x11F2E40B, 0xFA07F5FC);
	r1 = D(r1, s[1][0][1], 0xE50EFDF1, 0x010DFA04, 0x06F812F0, 0xF4E10EFF);
	r2 = D(r2, s[1][0][1], 0xF80BFBF9, 0x071509EF, 0xF804F4F5, 0x0906F9E8);
	r3 = D(r3, s[1][0][1], 0xEBD9F0FB, 0xD119E1FC, 0xDA0709F7, 0xE9FEFD0F);
	r4 = D(r4, s[1][0][1], 0x06BF12FB, 0x06DFFA12, 0x0E0804E8, 0x0600040E);
	r5 = D(r5, s[1][0][1], 0x0A0CFBFF, 0x1A27FEF6, 0xF9F30208, 0xF009F8F3);
	r6 = D(r6, s[1][0][1], 0x0AD9FB0C, 0xEDFC0800, 0x11F20001, 0x170C150C);
	r7 = D(r7, s[1][0][1], 0x01F5EEDA, 0x0501012C, 0xFF39F20F, 0x10E2FAF5);
	r0 = D(r0, s[1][0][2], 0xE5FB0BF4, 0xFC0BE4F6, 0x000002ED, 0x03DEFDF6);
	r1 = D(r1, s[1][0][2], 0xF4FEE8EC, 0x13FBFD15, 0xFCF60517, 0x0DEC04FA);
	r2 = D(r2, s[1][0][2], 0xFC08FE00, 0x0112FC03, 0x20F6FCFE, 0x0508F307);
	r3 = D(r3, s[1][0][2], 0x0A05F8F8, 0xF404050B, 0x16020013, 0x00F4FB02);
	r4 = D(r4, s[1][0][2], 0x030216F3, 0xF8F6E9F4, 0x090109F3, 0xE70EEFF1);
	r5 = D(r5, s[1][0][2], 0x03F309FF, 0xEA08FE0E, 0xE7EBFD02, 0xFD130705);
	r6 = D(r6, s[1][0][2], 0xF7050325, 0xFDEA060E, 0x06F40907, 0xFFE9F90B);
	r7 = D(r7, s[1][0][2], 0xFDE0FE02, 0x00F70F07, 0x0903FE00, 0xFEEAFE00);
	r0 = D(r0, s[1][1][0], 0x08FA0F14, 0xF406FDF8, 0xA506FD05, 0x04F205F4);
	r1 = D(r1, s[1][1][0], 0x0011F320, 0x12E2090E, 0xFC02FEF6, 0x10EC0203);
	r2 = D(r2, s[1][1][0], 0x1DFE030D, 0x080BFDF5, 0xFA09FC05, 0x091F05F4);
	r3 = D(r3, s[1][1][0], 0x07BAF806, 0x1BDA0AE9, 0xE8170117, 0x130DFF25);
	r4 = D(r4, s[1][1][0], 0xF2020F1B, 0xB5F312F7, 0x0D1EF7F0, 0x11F5FC03);
	r5 = D(r5, s[1][1][0], 0x00FBFF03, 0x18E5FC22, 0x060D0F00, 0x190CF1FC);
	r6 = D(r6, s[1][1][0], 0xFE13E9F7, 0xFB01FBF5, 0xF80405F3, 0x181B0EFF);
	r7 = D(r7, s[1][1][0], 0xFEFAF8EF, 0xFCF0E83A, 0x00E400FD, 0x03F7091B);
	r0 = D(r0, s[1][1][1], 0xD6DEFD11, 0x040E11FE, 0x0611FF12, 0x1B120907);
	r1 = D(r1, s[1][1][1], 0xFE05F4F4, 0x03FDE6FB, 0x190BF3FE, 0xFDE0E90B);
	r2 = D(r2, s[1][1][1], 0xEA04F401, 0xF70306D0, 0xF8F60821, 0xF8150CF3);
	r3 = D(r3, s[1][1][1], 0xF9F2050E, 0xD71706EE, 0xCAFF0901, 0xF105EFF7);
	r4 = D(r4, s[1][1][1], 0x0709E708, 0xFCFC090B, 0xFFE7031D, 0x1416FAF4);
	r5 = D(r5, s[1][1][1], 0x0708FE08, 0xF3F7EAF5, 0x120C090C, 0x00171310);
	r6 = D(r6, s[1][1][1], 0x08F206FE, 0x0AEE0810, 0x14070613, 0x04F605E6);
	r7 = D(r7, s[1][1][1], 0x04140400, 0xFAE90526, 0x0E060119, 0x0301DCF3);
	r0 = D(r0, s[1][1][2], 0xD1EE0B1E, 0xFC060B01, 0xFB010212, 0xFC14FF1F);
	r1 = D(r1, s[1][1][2], 0xEC0A12E2, 0xEFFDFDFD, 0x05F807F8, 0xFBF20DFA);
	r2 = D(r2, s[1][1][2], 0x0C0CFF0D, 0x09F00318, 0xE2F5FDFF, 0xF7EEFC01);
	r3 = D(r3, s[1][1][2], 0x00FFF3FA, 0xF1F708F7, 0x02FF0BFD, 0xFC011006);
	r4 = D(r4, s[1][1][2], 0xF803F507, 0x050B0412, 0x16FDE5F4, 0xE8F40EDD);
	r5 = D(r5, s[1][1][2], 0xF002EF0D, 0xFF10120B, 0x2C0708F9, 0x01FF06ED);
	r6 = D(r6, s[1][1][2], 0x1AF2FC1B, 0x0220140A, 0x0B09ED15, 0x0607F90F);
	r7 = D(r7, s[1][1][2], 0xE5FFED06, 0xF20209F1, 0xFFFD0F04, 0xFC03FF17);
	r0 = D(r0, s[1][2][0], 0x05FE0A0B, 0xFDF7FA06, 0xD7EB0EF0, 0x0CFA0BE7);
	r1 = D(r1, s[1][2][0], 0xE216000C, 0x0708F4F6, 0x0CF60001, 0xFCF911F2);
	r2 = D(r2, s[1][2][0], 0x110C0101, 0x0DFDEF10, 0x18F7FAEC, 0x0F190218);
	r3 = D(r3, s[1][2][0], 0x080409FC, 0x05F1F302, 0x1A13FF0C, 0xEC1C0E0E);
	r4 = D(r4, s[1][2][0], 0xE506E0F2, 0xBF0201F2, 0x07150CFE, 0x10F20AF2);
	r5 = D(r5, s[1][2][0], 0x14F6FE15, 0x13140405, 0x00F9F90E, 0x06F9FE01);
	r6 = D(r6, s[1][2][0], 0xF106D4ED, 0x0A0F04F7, 0x0E0AFCEB, 0x15FFFBF7);
	r7 = D(r7, s[1][2][0], 0xFD0DF3FF, 0x33FD010C, 0x10EB09F1, 0x05F8E3EF);
	r0 = D(r0, s[1][2][1], 0xF4E70205, 0xFEF60208, 0x0AF8FF09, 0x03FF01FE);
	r1 = D(r1, s[1][2][1], 0xCF06F703, 0x0301FBF9, 0x0DFF0BEC, 0x05EC01F3);
	r2 = D(r2, s[1][2][1], 0xED0711FE, 0x1818F40A, 0x22F3FA07, 0x0E010513);
	r3 = D(r3, s[1][2][1], 0x170CF604, 0xF40F07FF, 0xEF080C06, 0xE6F7FDDB);
	r4 = D(r4, s[1][2][1], 0x10020605, 0xF2080DEA, 0x09DAF802, 0x0D0CF6D4);
	r5 = D(r5, s[1][2][1], 0xFA05FF27, 0xF6F8FAFD, 0x1C02FA06, 0xF6FDFE1F);
	r6 = D(r6, s[1][2][1], 0xF7E9F5F0, 0x1E000516, 0xE505FCEB, 0xEEFBE9F6);
	r7 = D(r7, s[1][2][1], 0x2103FD11, 0x0814F809, 0xFE141101, 0x0D0AFFF7);
	r0 = D(r0, s[1][2][2], 0xF2FD0EF5, 0xEA00F2F8, 0x0102F9F6, 0x0BFD1201);
	r1 = D(r1, s[1][2][2], 0x000F070D, 0xF101F00E, 0x02F7E803, 0x140AE80A);
	r2 = D(r2, s[1][2][2], 0x090007F6, 0x01F7EF1B, 0x0CEB27F8, 0x0AFFEDFB);
	r3 = D(r3, s[1][2][2], 0x04F8FB00, 0x04F3FA0A, 0x0702EBEE, 0x1503E2F6);
	r4 = D(r4, s[1][2][2], 0xFA0A04FA, 0xFB0D0BFF, 0x01ECFEE0, 0x05FEFBE5);
	r5 = D(r5, s[1][2][2], 0x04030210, 0x01020303, 0x1903F6E6, 0x06FB0BF9);
	r6 = D(r6, s[1][2][2], 0x10FA1BFE, 0xEF04D0E6, 0x0B12FCF0, 0x18F000F9);
	r7 = D(r7, s[1][2][2], 0x090C1D05, 0x06F5FF00, 0xF700FEEE, 0xFAF9FCFE);
	s[0][0][0] = G[2][xy.y+0][xy.x+0]; s[0][0][1] = G[2][xy.y+0][xy.x+1];
	s[0][0][2] = G[2][xy.y+0][xy.x+2]; s[0][1][0] = G[2][xy.y+1][xy.x+0];
	s[0][1][1] = G[2][xy.y+1][xy.x+1]; s[0][1][2] = G[2][xy.y+1][xy.x+2];
	s[0][2][0] = G[2][xy.y+2][xy.x+0]; s[0][2][1] = G[2][xy.y+2][xy.x+1];
	s[0][2][2] = G[2][xy.y+2][xy.x+2]; s[1][0][0] = G[3][xy.y+0][xy.x+0];
	s[1][0][1] = G[3][xy.y+0][xy.x+1]; s[1][0][2] = G[3][xy.y+0][xy.x+2];
	s[1][1][0] = G[3][xy.y+1][xy.x+0]; s[1][1][1] = G[3][xy.y+1][xy.x+1];
	s[1][1][2] = G[3][xy.y+1][xy.x+2]; s[1][2][0] = G[3][xy.y+2][xy.x+0];
	s[1][2][1] = G[3][xy.y+2][xy.x+1]; s[1][2][2] = G[3][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xEB20EF0F, 0xED0700FB, 0x0006FA02, 0x03030AF4);
	r1 = D(r1, s[0][0][0], 0x0211EF04, 0xF5F7F601, 0xFBE9F6F4, 0xF7F2F201);
	r2 = D(r2, s[0][0][0], 0xF5F7080A, 0x03F806F1, 0x0A14261A, 0x06EFFFF7);
	r3 = D(r3, s[0][0][0], 0xF20405F7, 0x10FE05E6, 0x02FBF818, 0xF7C81914);
	r4 = D(r4, s[0][0][0], 0x06E008FE, 0x040210FE, 0xFE06F5FC, 0xF3F8F80B);
	r5 = D(r5, s[0][0][0], 0xFAFF02FD, 0x17FAF5F2, 0xFFFE0E19, 0xF100F110);
	r6 = D(r6, s[0][0][0], 0x02EE220E, 0xFC131809, 0x01FF1DFB, 0xF90DFA17);
	r7 = D(r7, s[0][0][0], 0x10070EFD, 0xFB04F5EC, 0xFAF9F904, 0xFF0E040A);
	r0 = D(r0, s[0][0][1], 0xBCC4F715, 0xF60FECF9, 0xF8013702, 0x0E0400F1);
	r1 = D(r1, s[0][0][1], 0x11FAF310, 0x08F00C07, 0x03FBDC04, 0x07F521FB);
	r2 = D(r2, s[0][0][1], 0xE611FD03, 0x0C0D14FE, 0x110A0801, 0x05ED05E1);
	r3 = D(r3, s[0][0][1], 0xE32B0314, 0x0BD816E4, 0x0C05E702, 0x03EB0BFA);
	r4 = D(r4, s[0][0][1], 0x07FFF10F, 0x040F030C, 0xF6FFF310, 0x000CFEFE);
	r5 = D(r5, s[0][0][1], 0xFFF60DFA, 0x16F913DB, 0xDFEBF4F7, 0xFFF7F500);
	r6 = D(r6, s[0][0][1], 0xDA0FFB19, 0xF10C1909, 0xFBFB070F, 0xFD13F406);
	r7 = D(r7, s[0][0][1], 0x07080FFA, 0x12020612, 0x0518FBF5, 0xEF211D1C);
	r0 = D(r0, s[0][0][2], 0x000CF8E4, 0xE5E9F00F, 0xBF11F6F1, 0xF9F5180E);
	r1 = D(r1, s[0][0][2], 0x03F1110E, 0x0DFDFBF3, 0xEDF90705, 0x11F50A09);
	r2 = D(r2, s[0][0][2], 0xEA19FD11, 0xFB2919F5, 0x060D0C18, 0xF8140A0B);
	r3 = D(r3, s[0][0][2], 0xF2FFF10F, 0x160101F1, 0x09FF1B07, 0x08DAEDEA);
	r4 = D(r4, s[0][0][2], 0xF00300FF, 0xCD1001EF, 0x02F9FB10, 0x030307F7);
	r5 = D(r5, s[0][0][2], 0x0405F805, 0xF2072810, 0xEBDDEC01, 0xF500F9E6);
	r6 = D(r6, s[0][0][2], 0xE219E5F0, 0x0AF4020F, 0x0616EB12, 0xFE011313);
	r7 = D(r7, s[0][0][2], 0xF802FDFC, 0xFDF5F5FE, 0xFC13F606, 0xF105F713);
	r0 = D(r0, s[0][1][0], 0xF1FBEB11, 0x030DF310, 0x16FC0E04, 0x060001FD);
	r1 = D(r1, s[0][1][0], 0x1F080912, 0xF0130E12, 0x0FEDF7FB, 0x0DF90BEB);
	r2 = D(r2, s[0][1][0], 0xE2160B00, 0xFE0CE4EA, 0x0608111E, 0xF6E6F1F9);
	r3 = D(r3, s[0][1][0], 0xE8E7F4F5, 0xFDFB05FC, 0x00FD1012, 0xEE131238);
	r4 = D(r4, s[0][1][0], 0xFFF3FEEB, 0x070ADC09, 0x07D81BF7, 0xFF100503);
	r5 = D(r5, s[0][1][0], 0xECF3F8FA, 0x1BFB0AF5, 0xE50CDC01, 0xEF04F8F1);
	r6 = D(r6, s[0][1][0], 0x17FC03DE, 0x06F206FB, 0x0D0D070E, 0xE8FCEEEB);
	r7 = D(r7, s[0][1][0], 0x05ECFCEF, 0xFB0A0E9F, 0x12140610, 0xF00900F7);
	r0 = D(r0, s[0][1][1], 0xCE81110E, 0x0518F6F3, 0x068C5B0D, 0x03FD05F4);
	r1 = D(r1, s[0][1][1], 0xF301F0F7, 0x0BF6FDFA, 0x080DF0FE, 0x17F41513);
	r2 = D(r2, s[0][1][1], 0xDB12F9E2, 0xFCE8FD06, 0x14F5FDFD, 0xFD1DFE01);
	r3 = D(r3, s[0][1][1], 0xFE030315, 0x0CE306E9, 0x11E8F9C9, 0xFA0FFB04);
	r4 = D(r4, s[0][1][1], 0x1601FCDD, 0x0410EC0D, 0xF7FDF822, 0xFC0E141D);
	r5 = D(r5, s[0][1][1], 0xF103E8F4, 0xF70501F1, 0xF00A05FB, 0xF70C15F3);
	r6 = D(r6, s[0][1][1], 0x0C20290E, 0x0A080EFA, 0x01FDEDF7, 0x07F10D11);
	r7 = D(r7, s[0][1][1], 0x0F0FFFE9, 0x0809010A, 0xFBFC0810, 0x0304FE12);
	r0 = D(r0, s[0][1][2], 0xEE0201CE, 0xF20AE9FB, 0x00E31C0F, 0x12144210);
	r1 = D(r1, s[0][1][2], 0xFC06EEF3, 0x14F41505, 0x0CF4050C, 0x12EF0F0C);
	r2 = D(r2, s[0][1][2], 0xF7FE0201, 0x075E03FA, 0xDD06D3F2, 0xEBE5E600);
	r3 = D(r3, s[0][1][2], 0xF7F1E911, 0xF304F3FF, 0xFD0ADFF3, 0x0AFDCD05);
	r4 = D(r4, s[0][1][2], 0xFAFB0011, 0xF307F7AA, 0xF1E8090A, 0xF70AF7FA);
	r5 = D(r5, s[0][1][2], 0x03EDDD12, 0xFDDBFEE7, 0x15FE0305, 0xF404051E);
	r6 = D(r6, s[0][1][2], 0x030B012A, 0xFB12210F, 0xF5F9F403, 0x18F3FEFF);
	r7 = D(r7, s[0][1][2], 0xFE0905DA, 0x03FA1405, 0x1301EEFB, 0x0A0002F0);
	r0 = D(r0, s[0][2][0], 0x04FAFF15, 0x010C10F4, 0xE9E8E0D7, 0x01FAD2FC);
	r1 = D(r1, s[0][2][0], 0x160DE205, 0x03E7EC1E, 0x1AF6FDF0, 0xF9F114F4);
	r2 = D(r2, s[0][2][0], 0xF208ECFA, 0x0F00E51A, 0xF90E10F8, 0xFDF316F9);
	r3 = D(r3, s[0][2][0], 0x08EF1D03, 0xF3F2CFFE, 0xF5221312, 0xF51307E3);
	r4 = D(r4, s[0][2][0], 0xFFDC0D09, 0x0206EAFE, 0x02E6D40E, 0x0A0DFFDB);
	r5 = D(r5, s[0][2][0], 0xFB000517, 0xF004EFDA, 0xFDE905FD, 0x0BF602ED);
	r6 = D(r6, s[0][2][0], 0x0000ED13, 0x0AE00D06, 0xFAF2EEFB, 0xFBF8040B);
	r7 = D(r7, s[0][2][0], 0x08100EF6, 0x0C03F3B4, 0xEBF907F2, 0x03050204);
	r0 = D(r0, s[0][2][1], 0x14F60BCF, 0x0C08F118, 0x06FAC619, 0x03D01622);
	r1 = D(r1, s[0][2][1], 0xFDF50AE9, 0x0DE61009, 0x0CE201F0, 0x08041308);
	r2 = D(r2, s[0][2][1], 0x0529F101, 0x02F9E405, 0xF7080111, 0x00DDFE10);
	r3 = D(r3, s[0][2][1], 0xFDE603E6, 0x17F7FE05, 0xF303E1E8, 0x0005F8F4);
	r4 = D(r4, s[0][2][1], 0x07F30A0F, 0x00E60DFF, 0x0308F500, 0xFE05FF1F);
	r5 = D(r5, s[0][2][1], 0x0B0C0511, 0xFFE2F8E3, 0x0DF90EEF, 0xFFE4E10B);
	r6 = D(r6, s[0][2][1], 0xEFFA050F, 0xFCECE904, 0xF712FC09, 0xED04EFF4);
	r7 = D(r7, s[0][2][1], 0xEFF6FAEC, 0xFBF5F8FC, 0x00F60300, 0x10050408);
	r0 = D(r0, s[0][2][2], 0x07F60E81, 0x0204070E, 0x0703C634, 0x0710D81B);
	r1 = D(r1, s[0][2][2], 0x0211EADE, 0x040BF307, 0xF8040107, 0x110BFBEE);
	r2 = D(r2, s[0][2][2], 0xFEECF4F4, 0x13EF0D0E, 0xFB15FF06, 0x04EBF80E);
	r3 = D(r3, s[0][2][2], 0xFA1A1AF6, 0xF40BDAEA, 0x06F6EDF7, 0xF8F6E6FB);
	r4 = D(r4, s[0][2][2], 0xF2080205, 0xEDF00981, 0x0314F5DB, 0xF3050905);
	r5 = D(r5, s[0][2][2], 0x06050C0D, 0x09FAE103, 0x0F01EFF2, 0x04FB080F);
	r6 = D(r6, s[0][2][2], 0x010D0244, 0xFEFE0613, 0x08F9F7FA, 0x0BFD0219);
	r7 = D(r7, s[0][2][2], 0xFA00FBF8, 0x070BF20F, 0xF9F9F425, 0x0EF5FDFF);
	r0 = D(r0, s[1][0][0], 0x11F005F2, 0x02FB0BF9, 0x182EFFDF, 0xF5020B0F);
	r1 = D(r1, s[1][0][0], 0x08030006, 0x01010A04, 0x0B0800FE, 0xF0FFFCDC);
	r2 = D(r2, s[1][0][0], 0x130101FA, 0x09030518, 0x02020CF3, 0x00FEF3FF);
	r3 = D(r3, s[1][0][0], 0x05F7FC0A, 0xFD0F050C, 0xFE00FA06, 0xF6E4FE01);
	r4 = D(r4, s[1][0][0], 0xFB0DD905, 0xF6F6F2F6, 0x0B1E1E0C, 0x0207F807);
	r5 = D(r5, s[1][0][0], 0xF4FCFFEB, 0xD001EDFC, 0x03E20702, 0xEF0AEEF7);
	r6 = D(r6, s[1][0][0], 0x0A070F1B, 0x01080103, 0x030AFEF5, 0x03FBF7F3);
	r7 = D(r7, s[1][0][0], 0x0AF3F608, 0xFFF9FE02, 0x0FFD0817, 0x2FF20910);
	r0 = D(r0, s[1][0][1], 0x130506EC, 0x0B0807F4, 0xAA1FF8F5, 0xEE05FAF8);
	r1 = D(r1, s[1][0][1], 0x05F80FFA, 0x0DF9F712, 0xEFFCFA00, 0x0BEDEEF8);
	r2 = D(r2, s[1][0][1], 0x03090603, 0xE916DE03, 0xDDF1E9F7, 0xF601F706);
	r3 = D(r3, s[1][0][1], 0x28EE0EFE, 0xFC03EB07, 0xE40B1300, 0x0615C8F0);
	r4 = D(r4, s[1][0][1], 0x17EEEE02, 0xF506FE1F, 0x02F5E81B, 0xECFEFE07);
	r5 = D(r5, s[1][0][1], 0xF7FBE7FF, 0xF7DF0C0A, 0xFAE5110D, 0xF212DB1B);
	r6 = D(r6, s[1][0][1], 0xF2EEFFFB, 0x14DAF6EC, 0xFF011308, 0xF9210404);
	r7 = D(r7, s[1][0][1], 0x16E8FD19, 0xF3E40F08, 0x06FDFBFA, 0x0AE61710);
	r0 = D(r0, s[1][0][2], 0x000A0A07, 0x1618FC05, 0x02FFF681, 0xF229EFF5);
	r1 = D(r1, s[1][0][2], 0xFB02F903, 0x0EF7F0F5, 0x0600EAF7, 0x020B1707);
	r2 = D(r2, s[1][0][2], 0x01030400, 0xF7E4F0FA, 0xFA010E0C, 0xDF1503F3);
	r3 = D(r3, s[1][0][2], 0x2C01F700, 0xDE0E0DFD, 0x0C101001, 0xEFEECF09);
	r4 = D(r4, s[1][0][2], 0xDA14F9F8, 0x03F8F010, 0xF9F0F405, 0xF6F40F01);
	r5 = D(r5, s[1][0][2], 0x011A070D, 0x07022EF3, 0xFDF6E501, 0x07EEFDFD);
	r6 = D(r6, s[1][0][2], 0x15DD2504, 0xF700F009, 0x11FB16F0, 0xD314F5FD);
	r7 = D(r7, s[1][0][2], 0x0CFD25E9, 0x00F6F7EE, 0xE7F5180D, 0x0CE9F6E4);
	r0 = D(r0, s[1][1][0], 0x0E0CFDF7, 0xFDEEFAFE, 0x0DFCF707, 0xFB0FF4FC);
	r1 = D(r1, s[1][1][0], 0x0FE60B02, 0xFFFE0C09, 0x0F21070A, 0x0C20FFFA);
	r2 = D(r2, s[1][1][0], 0xE2130617, 0x11011400, 0x0FED030A, 0xFFF50B09);
	r3 = D(r3, s[1][1][0], 0x1216F605, 0xE5BC28ED, 0x0316F702, 0x0C19EC03);
	r4 = D(r4, s[1][1][0], 0xFC050D07, 0x14F9EB12, 0x061114FA, 0x0CE2F004);
	r5 = D(r5, s[1][1][0], 0xFE0CF209, 0xF5F0DE05, 0x0D0BE915, 0x0DE9E6E9);
	r6 = D(r6, s[1][1][0], 0xF31CF90B, 0xFE0E1B08, 0xF7F6F500, 0x03080A07);
	r7 = D(r7, s[1][1][0], 0x010AE009, 0x11F0F7F4, 0x04FEE7F1, 0x40E6F806);
	r0 = D(r0, s[1][1][1], 0x0DE5EED6, 0xF9F51401, 0xF21AFF07, 0x03FC0804);
	r1 = D(r1, s[1][1][1], 0x0D00F7FD, 0x07E61000, 0xEAF0020A, 0x270E0104);
	r2 = D(r2, s[1][1][1], 0xEF0DFDED, 0xF7FBE1F1, 0xFEF807F5, 0xF2D5E9EE);
	r3 = D(r3, s[1][1][1], 0x39F6FEEF, 0xF0EEF614, 0xF1F525F4, 0xFFEFF91B);
	r4 = D(r4, s[1][1][1], 0x14FF0A15, 0x00F81213, 0x0215F607, 0x17F91B03);
	r5 = D(r5, s[1][1][1], 0x0C10F205, 0x1309F3F4, 0x06E40BF4, 0x1B01F8EA);
	r6 = D(r6, s[1][1][1], 0x02F8ECE7, 0xFCEFEA03, 0x01091714, 0xDF1AFCF4);
	r7 = D(r7, s[1][1][1], 0xF026E7FE, 0x010F3EFF, 0xF521FD01, 0xECF3EE12);
	r0 = D(r0, s[1][1][2], 0x01FEC50B, 0xFD13F4F7, 0x0AF715F2, 0xFB030706);
	r1 = D(r1, s[1][1][2], 0xFCF50EFD, 0x001FE803, 0x010100FD, 0x23FD17F8);
	r2 = D(r2, s[1][1][2], 0x0518210E, 0xF5F2CCF1, 0xE6E70905, 0x0B02080B);
	r3 = D(r3, s[1][1][2], 0x24050502, 0xF0EDF012, 0xD2FFF611, 0x01FA05D9);
	r4 = D(r4, s[1][1][2], 0xDE02F714, 0x04F51118, 0x16EC1F08, 0x21FEEAF7);
	r5 = D(r5, s[1][1][2], 0x0AFCEFFC, 0x0B32F6FD, 0xFC0407FD, 0xFC0B03F6);
	r6 = D(r6, s[1][1][2], 0x250A040A, 0xEF0B2002, 0xF5120203, 0x0303EDF7);
	r7 = D(r7, s[1][1][2], 0x1CF6E60D, 0x0BF700F9, 0xF80A10ED, 0x0F03F70A);
	r0 = D(r0, s[1][2][0], 0x0F171609, 0xF8C0090F, 0xF9E8EE12, 0xE6E3F5EF);
	r1 = D(r1, s[1][2][0], 0xEAD6EDFC, 0x020D0EF0, 0xFDEEFF07, 0xFA11EA08);
	r2 = D(r2, s[1][2][0], 0x1402F2FF, 0xF8EF0603, 0xF100FFF8, 0x10F906F3);
	r3 = D(r3, s[1][2][0], 0x100C040D, 0x030B0B21, 0xF812F311, 0x0EF81BE8);
	r4 = D(r4, s[1][2][0], 0x01E805FD, 0xFEDF0BF6, 0x0CD021F5, 0x0A46F6F8);
	r5 = D(r5, s[1][2][0], 0x081405F9, 0x04070B0D, 0xFFEFFE06, 0x0AE5FF07);
	r6 = D(r6, s[1][2][0], 0x0804FF0B, 0xEA0BFCF7, 0xFAF30309, 0x16ECFB0E);
	r7 = D(r7, s[1][2][0], 0x0DEF02FC, 0xFF40FF0C, 0x031AFEF8, 0x1A39E0F4);
	r0 = D(r0, s[1][2][1], 0xC9F5F705, 0xF2050214, 0xF113FC07, 0xFA0620FD);
	r1 = D(r1, s[1][2][1], 0xEDF2E6E8, 0x06F3FAF7, 0xF805FB02, 0x112810F9);
	r2 = D(r2, s[1][2][1], 0xDDEAF609, 0xEBDDF1F1, 0xE201F107, 0xF6E0070E);
	r3 = D(r3, s[1][2][1], 0x2519F8F8, 0x1FF107F7, 0xF2041200, 0x10142F00);
	r4 = D(r4, s[1][2][1], 0x0115EB06, 0x071AFE12, 0xFD331EE9, 0x0CDDE501);
	r5 = D(r5, s[1][2][1], 0x0EF00DFD, 0xF2BE0712, 0x0AEBEF06, 0x03060704);
	r6 = D(r6, s[1][2][1], 0x02251F02, 0xF1DDF308, 0xF5F007FB, 0x1DE1FC0E);
	r7 = D(r7, s[1][2][1], 0x0213E309, 0xE90E0FFC, 0x0B03FC04, 0x0C20F4F0);
	r0 = D(r0, s[1][2][2], 0x812012FD, 0x0FF5111E, 0xD90CF306, 0x10192106);
	r1 = D(r1, s[1][2][2], 0x04E006FC, 0x0C15FE0C, 0x020113F0, 0x2503F9FA);
	r2 = D(r2, s[1][2][2], 0xDFEF15E9, 0xB4F402E5, 0x0DF6FE0A, 0x13110508);
	r3 = D(r3, s[1][2][2], 0xF6FBFEFB, 0x2005BFF9, 0xF914EAF8, 0x0716FD14);
	r4 = D(r4, s[1][2][2], 0xEB1512F4, 0x0AF2F9FD, 0x232F05F4, 0x11EAFCFD);
	r5 = D(r5, s[1][2][2], 0x04F7FE05, 0x16F205EF, 0x090201FB, 0xFBEC190B);
	r6 = D(r6, s[1][2][2], 0xF6EFECFF, 0x0F1C021E, 0xF11AF705, 0xF71C06F8);
	r7 = D(r7, s[1][2][2], 0x12F401F2, 0xFC150006, 0x110D0118, 0x08D209E6);
	s[0][0][0] = G[4][xy.y+0][xy.x+0]; s[0][0][1] = G[4][xy.y+0][xy.x+1];
	s[0][0][2] = G[4][xy.y+0][xy.x+2]; s[0][1][0] = G[4][xy.y+1][xy.x+0];
	s[0][1][1] = G[4][xy.y+1][xy.x+1]; s[0][1][2] = G[4][xy.y+1][xy.x+2];
	s[0][2][0] = G[4][xy.y+2][xy.x+0]; s[0][2][1] = G[4][xy.y+2][xy.x+1];
	s[0][2][2] = G[4][xy.y+2][xy.x+2]; s[1][0][0] = G[5][xy.y+0][xy.x+0];
	s[1][0][1] = G[5][xy.y+0][xy.x+1]; s[1][0][2] = G[5][xy.y+0][xy.x+2];
	s[1][1][0] = G[5][xy.y+1][xy.x+0]; s[1][1][1] = G[5][xy.y+1][xy.x+1];
	s[1][1][2] = G[5][xy.y+1][xy.x+2]; s[1][2][0] = G[5][xy.y+2][xy.x+0];
	s[1][2][1] = G[5][xy.y+2][xy.x+1]; s[1][2][2] = G[5][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x0F0B1B09, 0x0B0614FD, 0xF604F4F7, 0x080313FD);
	r1 = D(r1, s[0][0][0], 0xEE07F911, 0xF8030F04, 0x00020108, 0x0BFA0BF4);
	r2 = D(r2, s[0][0][0], 0x07FA1911, 0xEFDB2102, 0x02E3F7FF, 0x000400FC);
	r3 = D(r3, s[0][0][0], 0x05060AEE, 0xF8171BF6, 0x09F3E10E, 0x12EEFAFB);
	r4 = D(r4, s[0][0][0], 0xFB0703F8, 0xE80DF407, 0xF30C04F7, 0x0302F8FD);
	r5 = D(r5, s[0][0][0], 0xEEF8FDFA, 0x2D12F2E4, 0x0BF4FD36, 0xFFF9020A);
	r6 = D(r6, s[0][0][0], 0x12F1EFDB, 0xFB060EF9, 0x0BEFFB01, 0xFC0410F7);
	r7 = D(r7, s[0][0][0], 0x03FFDFE6, 0x021A9202, 0x080411F7, 0xF1EFF4FD);
	r0 = D(r0, s[0][0][1], 0xE7F7F605, 0x0CF9111E, 0x19E4F92F, 0xFC0BFA13);
	r1 = D(r1, s[0][0][1], 0x00080623, 0xDF011700, 0x0D160EF4, 0x06E60B0C);
	r2 = D(r2, s[0][0][1], 0xF1F7FDF7, 0xE006F4F9, 0x2108F6EC, 0xFE02F5F1);
	r3 = D(r3, s[0][0][1], 0xFC00CBFE, 0x02DFF7F2, 0x13F7C80B, 0x050B1CEE);
	r4 = D(r4, s[0][0][1], 0x01060107, 0x0220FA14, 0x04EFFAF8, 0xFB0D1A07);
	r5 = D(r5, s[0][0][1], 0x030EF0FE, 0xEE021813, 0x060A230C, 0xE90A1A0C);
	r6 = D(r6, s[0][0][1], 0xFFEDF607, 0xFB150505, 0x000006E9, 0x080506F8);
	r7 = D(r7, s[0][0][1], 0x081ADB11, 0x08F4FAFE, 0x08F910F9, 0xFBF91A20);
	r0 = D(r0, s[0][0][2], 0x170E81FF, 0xF318E418, 0x0916DE19, 0x05F704F3);
	r1 = D(r1, s[0][0][2], 0xF7FDF213, 0xFE041608, 0x0605FBF6, 0x00F304EC);
	r2 = D(r2, s[0][0][2], 0xFE0806F4, 0xFD19EF11, 0xFEF209F0, 0xF6FAF7FC);
	r3 = D(r3, s[0][0][2], 0xE8F7F70F, 0x110C02F0, 0xF7110101, 0x0B03080E);
	r4 = D(r4, s[0][0][2], 0xF6F6F610, 0xF91B81F0, 0xFDFF01DB, 0xECFBF804);
	r5 = D(r5, s[0][0][2], 0x03ECFDF9, 0xFD1300F4, 0xF21C0209, 0xEDFE02FA);
	r6 = D(r6, s[0][0][2], 0xC8DFE211, 0x1010001F, 0x05F301FE, 0x02FF09F8);
	r7 = D(r7, s[0][0][2], 0xEE17DEF4, 0xFD120F10, 0xE81B0EFE, 0x010BFCF6);
	r0 = D(r0, s[0][1][0], 0x000605EC, 0xE1030AF8, 0xDFF20733, 0xF9FAF509);
	r1 = D(r1, s[0][1][0], 0xFA05B51D, 0x1701110A, 0x0AFAF004, 0x07190518);
	r2 = D(r2, s[0][1][0], 0x170E1E04, 0x09EFFA0E, 0xF0030AF5, 0x0317021B);
	r3 = D(r3, s[0][1][0], 0x18FD0D05, 0x15D4100D, 0xE1F3010B, 0x02DA1E0C);
	r4 = D(r4, s[0][1][0], 0x0DED0901, 0x07171608, 0xFCFF0922, 0xF2EFD505);
	r5 = D(r5, s[0][1][0], 0x0DF70C12, 0xFA1403F6, 0x10F513F9, 0x17EE01F3);
	r6 = D(r6, s[0][1][0], 0xF6D410F3, 0x0B14E5FA, 0xF8220CD5, 0xFAF61B16);
	r7 = D(r7, s[0][1][0], 0x1527DDF0, 0x12FE2CFA, 0x0F000902, 0x0E0FF7F6);
	r0 = D(r0, s[0][1][1], 0xF40DE8DB, 0x02F916FD, 0xE7EFFC10, 0xF404F5FE);
	r1 = D(r1, s[0][1][1], 0x0303E0FE, 0x0A0E28FB, 0x07E3E9FC, 0x15EAFF05);
	r2 = D(r2, s[0][1][1], 0xFDFEE1F3, 0xF0F30D1D, 0x01F5040A, 0x080E1504);
	r3 = D(r3, s[0][1][1], 0x00FC00F7, 0xF7F9F3F9, 0xEFF61603, 0x01EE1504);
	r4 = D(r4, s[0][1][1], 0x0C000C10, 0x06F7FEF2, 0x05F2FA06, 0x08FA14FA);
	r5 = D(r5, s[0][1][1], 0x01F71A08, 0x0AEC03FF, 0x2317FF04, 0x1B26100B);
	r6 = D(r6, s[0][1][1], 0x0CEBE707, 0xF7EDFCF9, 0x05E60917, 0xDCEBE5FB);
	r7 = D(r7, s[0][1][1], 0x0CF01300, 0xF60E070E, 0xF9111EFA, 0xF20D0A07);
	r0 = D(r0, s[0][1][2], 0xFFD8BDF6, 0xF40EE5F0, 0xE9FE26FA, 0xF9F1F6E0);
	r1 = D(r1, s[0][1][2], 0x0FFAF9F0, 0xE7190DF9, 0xE4FE0ADD, 0x04F7E3E2);
	r2 = D(r2, s[0][1][2], 0x07FE05FA, 0x0A000919, 0xE1130C00, 0x10060E05);
	r3 = D(r3, s[0][1][2], 0x08F40606, 0xFA15FD02, 0x12080EE6, 0xFE070EEA);
	r4 = D(r4, s[0][1][2], 0x050F13FD, 0x0912FA03, 0x1200F302, 0xFF06FF01);
	r5 = D(r5, s[0][1][2], 0x05FB09ED, 0xF9ECF1EF, 0xF8090BF8, 0x04FB1018);
	r6 = D(r6, s[0][1][2], 0x0B321509, 0xF909FFFD, 0xF7EC08FB, 0x0CE50208);
	r7 = D(r7, s[0][1][2], 0xE20CFE0C, 0x10030BFC, 0x040EFFEF, 0x090A2503);
	r0 = D(r0, s[0][2][0], 0x150714F6, 0x09FB1111, 0xF3EA04ED, 0xFDED090F);
	r1 = D(r1, s[0][2][0], 0xF4E3E2D3, 0xF7240500, 0xF9ECEB00, 0xEDF814FA);
	r2 = D(r2, s[0][2][0], 0xFC1008FC, 0x19FA0902, 0x09F6F30D, 0xF216EE03);
	r3 = D(r3, s[0][2][0], 0x020F02FB, 0x0411FF2B, 0x09EF180B, 0x03F8FAED);
	r4 = D(r4, s[0][2][0], 0xFEECF804, 0x0C0504E4, 0x0DE312E0, 0x01FB0BFA);
	r5 = D(r5, s[0][2][0], 0x08FF07FF, 0x03F1EF33, 0xEC01FEFE, 0x0E08F6EC);
	r6 = D(r6, s[0][2][0], 0xF7F5FCED, 0xE71BEDE9, 0xF10212F0, 0x05F00F0C);
	r7 = D(r7, s[0][2][0], 0x000409EA, 0x0508F7EB, 0x12091EF5, 0x0C0AEDE0);
	r0 = D(r0, s[0][2][1], 0x010210FF, 0x03E1F80B, 0xF00A01DA, 0x11F709E0);
	r1 = D(r1, s[0][2][1], 0xF5FAD810, 0x1006FAF9, 0x02F4E9F4, 0x01F7F9F6);
	r2 = D(r2, s[0][2][1], 0xF502F5F6, 0xFB3708EC, 0x18FC2A15, 0xFAE005FF);
	r3 = D(r3, s[0][2][1], 0x0AFBF306, 0xE7000AE2, 0xF8FC00FC, 0x0408E8FE);
	r4 = D(r4, s[0][2][1], 0xF3FE0301, 0xF220EEF9, 0xF1F3022E, 0x02040B07);
	r5 = D(r5, s[0][2][1], 0xEE0F0211, 0x0BE60E06, 0x050FE306, 0xF502F701);
	r6 = D(r6, s[0][2][1], 0x0DD0DAFC, 0x2D00061C, 0x0EEEFB17, 0xEDFD1000);
	r7 = D(r7, s[0][2][1], 0x01FF2A0C, 0xFB030005, 0xF5F90604, 0xF8F405F9);
	r0 = D(r0, s[0][2][2], 0xF3DDEEFC, 0xFB07E108, 0xE4FF140A, 0xDF17FA0A);
	r1 = D(r1, s[0][2][2], 0x0BFE05F0, 0xFEFFF801, 0x0900F1E2, 0xFAFA07F9);
	r2 = D(r2, s[0][2][2], 0x021CEAF9, 0x03FE230F, 0xEFFD10F3, 0x02FFFC03);
	r3 = D(r3, s[0][2][2], 0x02FA0FFA, 0xF71F0024, 0x0AEAFB0E, 0xF511FDEA);
	r4 = D(r4, s[0][2][2], 0xFCFCFFF2, 0xF411F2FB, 0xFEF6F603, 0x01021112);
	r5 = D(r5, s[0][2][2], 0x0CFA040B, 0xEBF80216, 0xF2F40525, 0xEC050503);
	r6 = D(r6, s[0][2][2], 0x00EBECDA, 0xEAE40310, 0xFBF2010F, 0xECF8FEF9);
	r7 = D(r7, s[0][2][2], 0xEBF61E27, 0x00F90FFD, 0x0DFAF5F2, 0xF526EAFD);
	r0 = D(r0, s[1][0][0], 0xFCEF071F, 0xFF11FCF8, 0xF63EF9EB, 0x1AFF08FC);
	r1 = D(r1, s[1][0][0], 0xE00902E6, 0x14061A11, 0x1AF70407, 0xFD031212);
	r2 = D(r2, s[1][0][0], 0x0702F2FB, 0xE1EDF2F3, 0x03FCEA01, 0x0105F4FC);
	r3 = D(r3, s[1][0][0], 0xFCFC0817, 0xEA0E2016, 0x03F1EDEE, 0x000E0F18);
	r4 = D(r4, s[1][0][0], 0xEBF90FFA, 0xE9040602, 0xF705E70B, 0xF70402FC);
	r5 = D(r5, s[1][0][0], 0x100BF4FC, 0x011124FE, 0x02030D12, 0xF20203EA);
	r6 = D(r6, s[1][0][0], 0x03F5F00D, 0xF400EF04, 0xFAE30019, 0x0303F2F1);
	r7 = D(r7, s[1][0][0], 0x0AE3FB19, 0xF20909FF, 0x030600F4, 0x0AE81516);
	r0 = D(r0, s[1][0][1], 0xF20EFE1C, 0xFD030408, 0x0A0702FF, 0xF2140CE8);
	r1 = D(r1, s[1][0][1], 0xE81003FA, 0xE90DEBF2, 0xE107F807, 0xF7FA1916);
	r2 = D(r2, s[1][0][1], 0x0201F80B, 0xF6DAE50E, 0x0008E6E0, 0x05080000);
	r3 = D(r3, s[1][0][1], 0x0F101CFC, 0x39F91905, 0x1A13EF03, 0xF7FE1310);
	r4 = D(r4, s[1][0][1], 0x0A02060E, 0x080507D9, 0x0E07F306, 0x04FB0002);
	r5 = D(r5, s[1][0][1], 0x01F8F904, 0xEEE70201, 0xFC04F015, 0xFBFC0102);
	r6 = D(r6, s[1][0][1], 0x010E0E0D, 0xE10F0108, 0x08F7F803, 0x1C12FA06);
	r7 = D(r7, s[1][0][1], 0xFB03ED15, 0xF3F3F6FA, 0x0DF7E70C, 0x04FC040E);
	r0 = D(r0, s[1][0][2], 0x1D050A0C, 0x2202F614, 0xF9F6FB08, 0xF10F0B1D);
	r1 = D(r1, s[1][0][2], 0x0704E00B, 0x07E1D4F6, 0xF7FA1606, 0xFEFF0AFA);
	r2 = D(r2, s[1][0][2], 0x01F9FEF9, 0x12F4E4F9, 0x140CF410, 0x0C030F04);
	r3 = D(r3, s[1][0][2], 0xFB030DEC, 0xE8F1DE0E, 0x03F9F404, 0x03F60A18);
	r4 = D(r4, s[1][0][2], 0x07F8FF0D, 0x0804FA02, 0xD8EF2AFB, 0xE5FBF1FA);
	r5 = D(r5, s[1][0][2], 0x0300F8FE, 0xF4FEFEDF, 0xEDF80400, 0xFDF9F605);
	r6 = D(r6, s[1][0][2], 0x0F15F4EC, 0x2901FFF2, 0xFC140111, 0x000405EF);
	r7 = D(r7, s[1][0][2], 0xF30EF505, 0x070CFA0D, 0xEDEC0102, 0x010E080C);
	r0 = D(r0, s[1][1][0], 0xF905FB13, 0xF4EC05FE, 0xFCE606E7, 0xE9F004E9);
	r1 = D(r1, s[1][1][0], 0x28F3F1F0, 0xFBE703EB, 0xFDFCF903, 0xFCF90FF1);
	r2 = D(r2, s[1][1][0], 0x040F00FE, 0x140A06FC, 0xF7FF060E, 0x0412F0F5);
	r3 = D(r3, s[1][1][0], 0x08F4141F, 0x0D0306FF, 0xE303CBFA, 0x0FE2FA06);
	r4 = D(r4, s[1][1][0], 0x14F100F8, 0xF6F608F5, 0xFEF80503, 0xFEFF00F4);
	r5 = D(r5, s[1][1][0], 0x0309F6F2, 0x06F305ED, 0x1203F9F4, 0xFAF402FB);
	r6 = D(r6, s[1][1][0], 0x07FB0AF3, 0xFF030C0C, 0xF7F6EF1A, 0x10060A07);
	r7 = D(r7, s[1][1][0], 0x2509EF15, 0x05FF09C6, 0x00021609, 0xEE1006F5);
	r0 = D(r0, s[1][1][1], 0x01F6F708, 0xF9F60206, 0x13DFD2F8, 0x08F2F709);
	r1 = D(r1, s[1][1][1], 0x03FDFB06, 0x0E290FE3, 0xF60A0005, 0xFAEE0D0C);
	r2 = D(r2, s[1][1][1], 0x0BF4EBF5, 0xD91D05FC, 0x09FBFC0E, 0xFE06FDFD);
	r3 = D(r3, s[1][1][1], 0xFEFA0FFE, 0x02E1F7E8, 0x09F7E6E8, 0x1301F9F5);
	r4 = D(r4, s[1][1][1], 0x1CF30306, 0x0AF3DB02, 0x02FF0403, 0x0D08100C);
	r5 = D(r5, s[1][1][1], 0xF5FC0509, 0x01080EFB, 0x0BE006F3, 0x0D0215E1);
	r6 = D(r6, s[1][1][1], 0xED020E1C, 0x010A0908, 0x0B02070A, 0xFAF600E9);
	r7 = D(r7, s[1][1][1], 0x04E70003, 0x02FD0E01, 0x02140102, 0xFCD7FFFE);
	r0 = D(r0, s[1][1][2], 0xF9F80725, 0xF0F70D07, 0xF60C1004, 0xF1E7D709);
	r1 = D(r1, s[1][1][2], 0xF000EC0D, 0x0401F10D, 0xFB050117, 0x02030EEE);
	r2 = D(r2, s[1][1][2], 0xFD09F1FC, 0x0512FDF2, 0xE5F1FB04, 0x04E60106);
	r3 = D(r3, s[1][1][2], 0x01FF0B14, 0x16F6FAEE, 0xE7FFFD19, 0xF7FEFAF6);
	r4 = D(r4, s[1][1][2], 0xF2FFF102, 0x0EF7F7E9, 0x1414EDFA, 0xFEFF0CFA);
	r5 = D(r5, s[1][1][2], 0xFEFDFB02, 0x1A0D07FE, 0xF7FA0722, 0xFC0B07F5);
	r6 = D(r6, s[1][1][2], 0x08070CE9, 0xFAF605FD, 0x04F414FD, 0x0D120100);
	r7 = D(r7, s[1][1][2], 0xE1EFF2F3, 0x08F30303, 0xD9FA0F03, 0x05110AFD);
	r0 = D(r0, s[1][2][0], 0xF800102D, 0x04120E05, 0xF5180AFF, 0x02071907);
	r1 = D(r1, s[1][2][0], 0x1C05EAF4, 0xF8F1EC10, 0x0D0DFCFC, 0xFCF905EB);
	r2 = D(r2, s[1][2][0], 0x01F707FA, 0xF31A0DE7, 0xFF1305EB, 0x03FFFEE3);
	r3 = D(r3, s[1][2][0], 0x08F51012, 0x0A1D0DEE, 0x0B1512F1, 0x010AFBEC);
	r4 = D(r4, s[1][2][0], 0x040F13FF, 0x0807F912, 0xFFEE13D8, 0x090C01E4);
	r5 = D(r5, s[1][2][0], 0xFC01FDEB, 0x0C1903FE, 0xFAFAEE09, 0x0F040A06);
	r6 = D(r6, s[1][2][0], 0x020DE904, 0xFDCEFD02, 0x0A07FCF6, 0xF70BFCF6);
	r7 = D(r7, s[1][2][0], 0x0F04F508, 0x06FCFB01, 0xFA040D0D, 0xF70EFFED);
	r0 = D(r0, s[1][2][1], 0xF60010CA, 0x0AEBEEF5, 0x0C0CE501, 0x1A0DFDF2);
	r1 = D(r1, s[1][2][1], 0xF6F8CB03, 0x0FF915E9, 0x02F7EE12, 0xF2070205);
	r2 = D(r2, s[1][2][1], 0xF5FFEEEB, 0x04E30FFC, 0x040D0ED0, 0xF2F4ED07);
	r3 = D(r3, s[1][2][1], 0xFFFE0A10, 0xEA04F804, 0xFC0B02F0, 0xFDE7E3FB);
	r4 = D(r4, s[1][2][1], 0xE70EF502, 0xFB0D1709, 0xE8F30111, 0xFBF6E9FA);
	r5 = D(r5, s[1][2][1], 0xFFFCFEFB, 0xE80407EE, 0x16FBF7F6, 0xF2FA09FD);
	r6 = D(r6, s[1][2][1], 0xF7CF0328, 0x162A1606, 0xE70805FB, 0xFDF8F307);
	r7 = D(r7, s[1][2][1], 0x010F04EE, 0x03F402FD, 0x04FB0303, 0x1409FE0D);
	r0 = D(r0, s[1][2][2], 0x0D07F841, 0xEAF6F609, 0xF2EBDFF5, 0xF108F2EC);
	r1 = D(r1, s[1][2][2], 0x0C05FDF4, 0xFA020600, 0x22F3EA18, 0x110400F1);
	r2 = D(r2, s[1][2][2], 0xE902F518, 0xFFE615F4, 0x0DF1F908, 0xFEF20216);
	r3 = D(r3, s[1][2][2], 0x05FDFC08, 0xEC00EC10, 0xFEF8080E, 0xF9F4DE05);
	r4 = D(r4, s[1][2][2], 0xEF03D901, 0xFF06FF02, 0x0906FC0F, 0x03060A0D);
	r5 = D(r5, s[1][2][2], 0x030003F9, 0x0A060AFD, 0xF4212311, 0x070AF8F7);
	r6 = D(r6, s[1][2][2], 0xFC19FF16, 0x03F4F4E7, 0x0909F4FF, 0xFCEC0305);
	r7 = D(r7, s[1][2][2], 0xEF20100D, 0x0F15FEE5, 0xFBF5080C, 0xFAF201ED);
	s[0][0][0] = G[6][xy.y+0][xy.x+0]; s[0][0][1] = G[6][xy.y+0][xy.x+1];
	s[0][0][2] = G[6][xy.y+0][xy.x+2]; s[0][1][0] = G[6][xy.y+1][xy.x+0];
	s[0][1][1] = G[6][xy.y+1][xy.x+1]; s[0][1][2] = G[6][xy.y+1][xy.x+2];
	s[0][2][0] = G[6][xy.y+2][xy.x+0]; s[0][2][1] = G[6][xy.y+2][xy.x+1];
	s[0][2][2] = G[6][xy.y+2][xy.x+2]; s[1][0][0] = G[7][xy.y+0][xy.x+0];
	s[1][0][1] = G[7][xy.y+0][xy.x+1]; s[1][0][2] = G[7][xy.y+0][xy.x+2];
	s[1][1][0] = G[7][xy.y+1][xy.x+0]; s[1][1][1] = G[7][xy.y+1][xy.x+1];
	s[1][1][2] = G[7][xy.y+1][xy.x+2]; s[1][2][0] = G[7][xy.y+2][xy.x+0];
	s[1][2][1] = G[7][xy.y+2][xy.x+1]; s[1][2][2] = G[7][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xF6FDF413, 0xFD16F61A, 0x0490FD25, 0x0AF4F021);
	r1 = D(r1, s[0][0][0], 0x0A170629, 0x00081527, 0xF0FBFA05, 0xD70CFB43);
	r2 = D(r2, s[0][0][0], 0x0E001A09, 0xF8111015, 0x0AFFF911, 0xDDEB03E9);
	r3 = D(r3, s[0][0][0], 0x060403DD, 0x170906EB, 0xFCFCF5F9, 0x01FFF107);
	r4 = D(r4, s[0][0][0], 0x08F107B5, 0xD7FA01DD, 0xEF140C18, 0xE508FF1C);
	r5 = D(r5, s[0][0][0], 0xFF0504E5, 0x052DFCFF, 0xFFF90DE6, 0xFB0003EE);
	r6 = D(r6, s[0][0][0], 0x04E803DD, 0x1EFD0D03, 0xD915DE10, 0xDB0310EE);
	r7 = D(r7, s[0][0][0], 0x37F3E8D8, 0x3DFA06EE, 0x0E02F1FD, 0xF211170A);
	r0 = D(r0, s[0][0][1], 0xC9EBFCF4, 0xE4F3F7FD, 0x0621D912, 0xFA12E7ED);
	r1 = D(r1, s[0][0][1], 0xF0160003, 0xE5F2FE0C, 0x26010BD6, 0x01000720);
	r2 = D(r2, s[0][0][1], 0xEEFB0BE9, 0xCA11ECFD, 0xFDECFC20, 0x130EFC06);
	r3 = D(r3, s[0][0][1], 0x21F820C3, 0x02F1FCDC, 0xFE81DCE6, 0x02EF110B);
	r4 = D(r4, s[0][0][1], 0xEDFD190A, 0x1104F900, 0x8101F9D8, 0x10070FDB);
	r5 = D(r5, s[0][0][1], 0xF0FDFE37, 0x1D0A0D16, 0xC0EF0812, 0x0A0711C5);
	r6 = D(r6, s[0][0][1], 0x25F9F2FE, 0x1111F20B, 0x14F50010, 0x14FCF0EE);
	r7 = D(r7, s[0][0][1], 0xFED5F724, 0xFDE90969, 0x0C0711F9, 0x08FFFCE7);
	r0 = D(r0, s[0][0][2], 0x9C810313, 0x0911F602, 0xEF01E23E, 0xEA12DFF5);
	r1 = D(r1, s[0][0][2], 0xF2E00BE5, 0xEC33C0F3, 0xF61FE7F4, 0xFF080416);
	r2 = D(r2, s[0][0][2], 0xF504F8FE, 0xF928CB26, 0x06F6F220, 0xFEF4FCCA);
	r3 = D(r3, s[0][0][2], 0x0DF71105, 0xEFFA0037, 0x00C1E9F3, 0xF9040FE3);
	r4 = D(r4, s[0][0][2], 0xF002EC03, 0x1DF3FB17, 0x02EC15EA, 0xD7030197);
	r5 = D(r5, s[0][0][2], 0x05FC00EB, 0xFE002405, 0xF41808B9, 0xF80102E3);
	r6 = D(r6, s[0][0][2], 0x1505271A, 0xF9050B09, 0x0FF41AEF, 0x2CF10924);
	r7 = D(r7, s[0][0][2], 0x0E1C0806, 0x01030ECB, 0xF814E91A, 0x2D06FB09);
	r0 = D(r0, s[0][1][0], 0xD900FE15, 0xFE18F50A, 0x134A050A, 0xEE2004E2);
	r1 = D(r1, s[0][1][0], 0x8108FF07, 0xEC0FEA27, 0xFEDFEFF7, 0xE208F91E);
	r2 = D(r2, s[0][1][0], 0xFB0CF818, 0xF7FD15F4, 0x1216EB17, 0xF615FBE3);
	r3 = D(r3, s[0][1][0], 0xECFEE30B, 0x2B05FC0E, 0xF6020EDE, 0x01FF0B04);
	r4 = D(r4, s[0][1][0], 0x16FD02F3, 0x00810004, 0x0503F308, 0x21080FEB);
	r5 = D(r5, s[0][1][0], 0x03FEFEEF, 0x02E807C6, 0x0CFEEDDB, 0x0603F510);
	r6 = D(r6, s[0][1][0], 0xEC08F511, 0xF907ED0F, 0x37EF23ED, 0xF904FF00);
	r7 = D(r7, s[0][1][0], 0x2D110218, 0xF3FE06E3, 0x1109F6F0, 0xF301F4FD);
	r0 = D(r0, s[0][1][1], 0xDA02ECFB, 0x11FAECC9, 0xE8E10B2D, 0x1932F5F7);
	r1 = D(r1, s[0][1][1], 0x2DEDEAF3, 0xED0F1F35, 0x23F7F8EF, 0xDCEB0016);
	r2 = D(r2, s[0][1][1], 0xEB0AF401, 0x1EEE1C2D, 0xEB141021, 0xFDFEDD27);
	r3 = D(r3, s[0][1][1], 0x13EBF509, 0xD6F8FBEB, 0xFDDB0F14, 0xFBE408E4);
	r4 = D(r4, s[0][1][1], 0x03FBEEE8, 0x00ED1D16, 0x08F11A12, 0x0109FE81);
	r5 = D(r5, s[0][1][1], 0xF60CF011, 0x1BF1FDA6, 0x0E06DBF4, 0xFD08FFF7);
	r6 = D(r6, s[0][1][1], 0x0004D2E7, 0xE9031514, 0xEAEBFD00, 0x21EF0E1F);
	r7 = D(r7, s[0][1][1], 0xE7F0F125, 0x08FD0C40, 0x280C1BED, 0xE2F1CB9F);
	r0 = D(r0, s[0][1][2], 0x1BF00C23, 0xF61B1208, 0xDA070E2E, 0xF10AF322);
	r1 = D(r1, s[0][1][2], 0xE1C7EDEA, 0x0910F7F1, 0x12E90DE9, 0xE2F70A0F);
	r2 = D(r2, s[0][1][2], 0x0CF006DE, 0x270608B6, 0x270404D8, 0xF40304BD);
	r3 = D(r3, s[0][1][2], 0x1709FEFC, 0x0018F218, 0x08F90BF3, 0x04ED011D);
	r4 = D(r4, s[0][1][2], 0xF504DC0D, 0x120EF001, 0x0106020E, 0xF6FAFCC6);
	r5 = D(r5, s[0][1][2], 0xEC07FEF9, 0x160F0712, 0x06E80B20, 0x01F9F3DD);
	r6 = D(r6, s[0][1][2], 0xFA040415, 0xFF10EBE8, 0x22D5F3D2, 0x0D02EDFA);
	r7 = D(r7, s[0][1][2], 0x1200EFC6, 0x010EF31D, 0x160D07F0, 0xFFE51C20);
	r0 = D(r0, s[0][2][0], 0x01000C0D, 0xFA0629E2, 0xFAF4DB05, 0x06FA00E8);
	r1 = D(r1, s[0][2][0], 0x46F6F281, 0x19F3DCFE, 0x03F805D0, 0x0F050704);
	r2 = D(r2, s[0][2][0], 0x06F8F616, 0xFBF8FE2F, 0x15F1F4F1, 0x0DFC1903);
	r3 = D(r3, s[0][2][0], 0xE704EFF4, 0x200A061B, 0xFF1105C4, 0xE709F0EF);
	r4 = D(r4, s[0][2][0], 0xF4080510, 0x07E401F1, 0x0B0A014E, 0x01FFF30C);
	r5 = D(r5, s[0][2][0], 0x1D0105FD, 0x22F2F3B5, 0x150A0DE7, 0x06F3041A);
	r6 = D(r6, s[0][2][0], 0xE6FD06EE, 0xF4F302F4, 0x0F110021, 0xF301ED06);
	r7 = D(r7, s[0][2][0], 0x0BF91EFC, 0x0E00FDF1, 0xEF0905F2, 0x17FF0703);
	r0 = D(r0, s[0][2][1], 0xFA11FE06, 0xE2FE10CB, 0xFB0DDFF9, 0x02FC2CE5);
	r1 = D(r1, s[0][2][1], 0x05FC13F0, 0xFCF4F7FE, 0xF4EF09A7, 0x0C0208CD);
	r2 = D(r2, s[0][2][1], 0xEEF9FAE6, 0x1802F0E8, 0x2905FA13, 0xF4EF0809);
	r3 = D(r3, s[0][2][1], 0xFBFD04FD, 0x16F91205, 0x090105DB, 0x0505EF25);
	r4 = D(r4, s[0][2][1], 0xE6050B0A, 0x380B06F0, 0x0A03FAD3, 0xF6FE071F);
	r5 = D(r5, s[0][2][1], 0xDAF7F62A, 0x3309EC0B, 0xE00E0300, 0x05FD131E);
	r6 = D(r6, s[0][2][1], 0xF3ECF717, 0x000CFCE3, 0x1907FF1C, 0x09F0FFF5);
	r7 = D(r7, s[0][2][1], 0x11F9F3EE, 0x23F4F0CB, 0xEA05FD1C, 0x3011F50A);
	r0 = D(r0, s[0][2][2], 0x0B0E14E0, 0x17F60210, 0x0DF52C1E, 0x01FE1FD6);
	r1 = D(r1, s[0][2][2], 0x1002F681, 0x10F80C13, 0x11000FCD, 0xDE070FD5);
	r2 = D(r2, s[0][2][2], 0xFDFE0ADB, 0xF10AD40D, 0x0FF0FBA5, 0xF2FF0BE3);
	r3 = D(r3, s[0][2][2], 0x0000F6FA, 0xEF22F023, 0xFEFEF9FA, 0x36F9EB06);
	r4 = D(r4, s[0][2][2], 0x0F070A03, 0xFF020302, 0x11F7E934, 0xF50201F4);
	r5 = D(r5, s[0][2][2], 0xFBFA0613, 0x36F605DB, 0xF0FC1CED, 0xF7FD0438);
	r6 = D(r6, s[0][2][2], 0xFE040829, 0xEBF1FA04, 0x0F08FBDA, 0x10FBEF03);
	r7 = D(r7, s[0][2][2], 0xFF1B0015, 0x0D08FC0A, 0xFC080704, 0xFEFBF912);
	r0 = D(r0, s[1][0][0], 0x08090EF5, 0xEA1208F7, 0xD7FE160B, 0x0B13F3FB);
	r1 = D(r1, s[1][0][0], 0x090901FD, 0x0401E4FF, 0xFCF40306, 0x0D0BF1F4);
	r2 = D(r2, s[1][0][0], 0x01FC10FF, 0x0E04F601, 0x1408D71E, 0x0503FEF9);
	r3 = D(r3, s[1][0][0], 0xFBFFFD04, 0x01070F0E, 0x040F1AF7, 0xF4EFEA0C);
	r4 = D(r4, s[1][0][0], 0xFCFFFF06, 0xEF1404FF, 0xF600EA13, 0x0905F803);
	r5 = D(r5, s[1][0][0], 0x04FEFBFB, 0xFD17D301, 0x05F20E0A, 0xFD0E17FE);
	r6 = D(r6, s[1][0][0], 0x06F8FE0F, 0x1700F90E, 0x0FF507FC, 0xF0FAF808);
	r7 = D(r7, s[1][0][0], 0xF714E906, 0xF706C003, 0x12FD0EFA, 0x27EA0608);
	r0 = D(r0, s[1][0][1], 0x0505CC02, 0xFFFB04FB, 0xAADC1611, 0x0E04FA05);
	r1 = D(r1, s[1][0][1], 0xFADA11F5, 0xF6FB27FE, 0xF20C10F0, 0x04FFFD0A);
	r2 = D(r2, s[1][0][1], 0x0300F706, 0xF20305FE, 0xF412E5FB, 0x06F80EF3);
	r3 = D(r3, s[1][0][1], 0xFFEB0915, 0xFE12E511, 0xFD1703E1, 0x07F4EC06);
	r4 = D(r4, s[1][0][1], 0xF3F0FA04, 0xF4010719, 0x03F8BDF3, 0x0EFE02F5);
	r5 = D(r5, s[1][0][1], 0xFF0409FA, 0xF802D80A, 0xFC03F6FD, 0xFE041908);
	r6 = D(r6, s[1][0][1], 0x1E10FFFD, 0xEE09FCFF, 0xF5FFFBF0, 0x01FCF7EC);
	r7 = D(r7, s[1][0][1], 0xF8F9F407, 0x100BED05, 0x0AF2FBEC, 0x09FA1A01);
	r0 = D(r0, s[1][0][2], 0xFCFC81FD, 0xF009FD0D, 0x08F4EFF5, 0xFDF802F2);
	r1 = D(r1, s[1][0][2], 0xF60709F3, 0xF51410F5, 0xF80908FC, 0x02FDFA05);
	r2 = D(r2, s[1][0][2], 0xFA04EE00, 0x0A13ED0E, 0xFC11F7EC, 0xFA1604D8);
	r3 = D(r3, s[1][0][2], 0x05DD12FA, 0x010CEBEE, 0xFAFFEEF7, 0xF3F00107);
	r4 = D(r4, s[1][0][2], 0x05080A00, 0x04080BFC, 0x0411EFF1, 0x0AFA0BF3);
	r5 = D(r5, s[1][0][2], 0xF9FEF202, 0xE30406EB, 0x011502F2, 0xF8071911);
	r6 = D(r6, s[1][0][2], 0xFC03FCEB, 0xFDF70F07, 0x0EF2E81A, 0xF81BEEFE);
	r7 = D(r7, s[1][0][2], 0x02F029E7, 0x100001FF, 0x18090BF0, 0x0C1013FC);
	r0 = D(r0, s[1][1][0], 0x070611E4, 0xFFFCFE00, 0xB516F508, 0x00150201);
	r1 = D(r1, s[1][1][0], 0x06FE00FD, 0x0AF803F4, 0x0DFF022F, 0xFCF9EB0D);
	r2 = D(r2, s[1][1][0], 0x05090D03, 0xF40309FC, 0x0203FF04, 0xFBFB1EFF);
	r3 = D(r3, s[1][1][0], 0x09FBFDF6, 0x070E030F, 0xFE0D09EA, 0xFFF806F1);
	r4 = D(r4, s[1][1][0], 0x10EC1B11, 0xD905FA07, 0x03FBF30F, 0x1004050C);
	r5 = D(r5, s[1][1][0], 0xFBF90CFF, 0xFF06ECF9, 0x0CF40D04, 0x0E0A0308);
	r6 = D(r6, s[1][1][0], 0xF902E70A, 0x02020EF7, 0x0305FA23, 0x140E0802);
	r7 = D(r7, s[1][1][0], 0xEF0C0802, 0x07F8EF02, 0xF30F0109, 0xF2E20708);
	r0 = D(r0, s[1][1][1], 0xF4FF0E05, 0x060713F5, 0x3CFA2903, 0xFBFCF4F6);
	r1 = D(r1, s[1][1][1], 0x05F91CF8, 0x11F4EB07, 0x061B0608, 0x09F8FE12);
	r2 = D(r2, s[1][1][1], 0xF00DF8F7, 0xF70B16F8, 0x05E9F3FD, 0xF400F6F5);
	r3 = D(r3, s[1][1][1], 0x00E3F516, 0x08EA20FB, 0xFB0930FC, 0xFF061406);
	r4 = D(r4, s[1][1][1], 0x02E70C00, 0xD904F20D, 0xF6FAE6F9, 0x10FA1C0B);
	r5 = D(r5, s[1][1][1], 0x00F806FB, 0x05E70209, 0x03050206, 0x02EE120C);
	r6 = D(r6, s[1][1][1], 0x1BEAF712, 0x0D08ED0D, 0x010F0B07, 0xFCE20301);
	r7 = D(r7, s[1][1][1], 0xF6E52DF6, 0x01DF04FD, 0x1103FEF5, 0xF1F704F2);
	r0 = D(r0, s[1][1][2], 0x06F1000B, 0xE9031112, 0x430708DD, 0xF8F50B01);
	r1 = D(r1, s[1][1][2], 0x070E1317, 0xEAEEFCD3, 0x0AFD10E8, 0x0AC8E8F8);
	r2 = D(r2, s[1][1][2], 0x06050FF7, 0xECF007EA, 0xFEEB130B, 0xFFFB0202);
	r3 = D(r3, s[1][1][2], 0xFBF4060E, 0x000D0BEF, 0xF901000A, 0xFB0C05FA);
	r4 = D(r4, s[1][1][2], 0x0AEF00ED, 0xAF0CD8F1, 0x02E72802, 0x0707F7FA);
	r5 = D(r5, s[1][1][2], 0x02FFFFF7, 0x05E6E20E, 0xFBFAF4F7, 0xF4020EE2);
	r6 = D(r6, s[1][1][2], 0x020C0006, 0xFFF9FDFD, 0xF10BF817, 0x151804F9);
	r7 = D(r7, s[1][1][2], 0x17F21AFE, 0x02ED0007, 0x0213FEF3, 0xE30202FA);
	r0 = D(r0, s[1][2][0], 0xF3FEF503, 0x07F301FF, 0x08EB0717, 0xFDF2E501);
	r1 = D(r1, s[1][2][0], 0xF80D090F, 0x0A04F50B, 0xFFF411EE, 0x060CFAFA);
	r2 = D(r2, s[1][2][0], 0xFA0104EF, 0xFE05F716, 0x0914EF02, 0x0DFB1DF6);
	r3 = D(r3, s[1][2][0], 0x0409EDFD, 0x08F81FE6, 0x0EE9FE0A, 0x0EFE09F4);
	r4 = D(r4, s[1][2][0], 0xF9F8F905, 0xE805FEEE, 0xFC010005, 0x13FF0407);
	r5 = D(r5, s[1][2][0], 0x080800F9, 0x09FFFB0C, 0xF80A13FE, 0xF707F4FA);
	r6 = D(r6, s[1][2][0], 0xF7090608, 0xF814F800, 0x06F80EF1, 0x04F3100D);
	r7 = D(r7, s[1][2][0], 0x07FC1C0E, 0xFD0A0A04, 0xF30AFD04, 0x1DF20A02);
	r0 = D(r0, s[1][2][1], 0x07EBFA10, 0x01F91CFC, 0xF4F634F0, 0xF800EF0F);
	r1 = D(r1, s[1][2][1], 0xF20624FC, 0xFDF3F411, 0x001CF50A, 0xF6FB0211);
	r2 = D(r2, s[1][2][1], 0xF41423EB, 0x0D0CFCEF, 0x130DFE05, 0xF6F106FF);
	r3 = D(r3, s[1][2][1], 0xEEE6FD03, 0xDAF91EFC, 0xFFF7E60D, 0xF80629E7);
	r4 = D(r4, s[1][2][1], 0xFA0CF5F3, 0xF814D005, 0xFDEEEFED, 0x15FD10F5);
	r5 = D(r5, s[1][2][1], 0x0BF911FF, 0x0CE80408, 0xF8EA16FF, 0xFEFD16F3);
	r6 = D(r6, s[1][2][1], 0x06000DFC, 0xFFF8FC05, 0xE90A05EF, 0xE90E1600);
	r7 = D(r7, s[1][2][1], 0x12071613, 0xFFEC0B08, 0xFB06F500, 0xFB030C0E);
	r0 = D(r0, s[1][2][2], 0x0BF8E101, 0x091608E9, 0xF9EC0BE6, 0x010EF7EF);
	r1 = D(r1, s[1][2][2], 0x14070507, 0xFB05E206, 0x02080813, 0xECF9FD03);
	r2 = D(r2, s[1][2][2], 0x071AFF08, 0x03DBF1FE, 0x0A061BF8, 0xFCF0FB15);
	r3 = D(r3, s[1][2][2], 0x03060303, 0xFEEDF7F0, 0xF7F7FD0E, 0xF20318FE);
	r4 = D(r4, s[1][2][2], 0xFD17F702, 0xE408C406, 0x0BF3EC16, 0x02FF0F02);
	r5 = D(r5, s[1][2][2], 0x0A0104FF, 0x02E404FB, 0xF5E50416, 0x12FB0CFD);
	r6 = D(r6, s[1][2][2], 0x00EAFDE8, 0xFBF802E5, 0xF404E7FF, 0x0301F60F);
	r7 = D(r7, s[1][2][2], 0xFBF200EE, 0xFD0216FD, 0xF802F905, 0xFBFD15F2);
	s[0][0][0] = G[8][xy.y+0][xy.x+0]; s[0][0][1] = G[8][xy.y+0][xy.x+1];
	s[0][0][2] = G[8][xy.y+0][xy.x+2]; s[0][1][0] = G[8][xy.y+1][xy.x+0];
	s[0][1][1] = G[8][xy.y+1][xy.x+1]; s[0][1][2] = G[8][xy.y+1][xy.x+2];
	s[0][2][0] = G[8][xy.y+2][xy.x+0]; s[0][2][1] = G[8][xy.y+2][xy.x+1];
	s[0][2][2] = G[8][xy.y+2][xy.x+2]; s[1][0][0] = G[9][xy.y+0][xy.x+0];
	s[1][0][1] = G[9][xy.y+0][xy.x+1]; s[1][0][2] = G[9][xy.y+0][xy.x+2];
	s[1][1][0] = G[9][xy.y+1][xy.x+0]; s[1][1][1] = G[9][xy.y+1][xy.x+1];
	s[1][1][2] = G[9][xy.y+1][xy.x+2]; s[1][2][0] = G[9][xy.y+2][xy.x+0];
	s[1][2][1] = G[9][xy.y+2][xy.x+1]; s[1][2][2] = G[9][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xFC1CF1E8, 0xFF02EFFE, 0xE5FEDD15, 0x21ECE01C);
	r1 = D(r1, s[0][0][0], 0xF632F9F9, 0xF50AF106, 0xFC173010, 0xEFF7EBFB);
	r2 = D(r2, s[0][0][0], 0x01FAE9EF, 0x11E1FD20, 0xF8FB1ADD, 0x11F7DE00);
	r3 = D(r3, s[0][0][0], 0xEFFCEDFC, 0x071126F2, 0xFCF7D6FE, 0xFAF80EE4);
	r4 = D(r4, s[0][0][0], 0x06EAED05, 0xF904F710, 0x090CF105, 0x00FDFB10);
	r5 = D(r5, s[0][0][0], 0x09FEFD08, 0x06E3E714, 0x0109CF0A, 0xFB030104);
	r6 = D(r6, s[0][0][0], 0xF5F904FC, 0x100DF706, 0xF0FAFDE3, 0xF402FE08);
	r7 = D(r7, s[0][0][0], 0xF5FE0AEB, 0x01000A09, 0xF2F50A1B, 0xFF0B0916);
	r0 = D(r0, s[0][0][1], 0xF7FD12E5, 0x090F15F6, 0xF7FFF2DD, 0xFD0A231B);
	r1 = D(r1, s[0][0][1], 0xFEFFF203, 0x0202FCD7, 0x0317F9FC, 0x08050206);
	r2 = D(r2, s[0][0][1], 0xE4FC0F13, 0xF1F8ED24, 0x06082501, 0xF8F7022D);
	r3 = D(r3, s[0][0][1], 0xF31E100C, 0x07FD1113, 0x140CFBF6, 0x2907E4F9);
	r4 = D(r4, s[0][0][1], 0x290D1AF8, 0xFB04F804, 0xFFFB05DE, 0x070E0402);
	r5 = D(r5, s[0][0][1], 0x06070105, 0x07011501, 0xFDF2192B, 0x05FF09EF);
	r6 = D(r6, s[0][0][1], 0x1F26FCF9, 0xE601EC0A, 0xF001091E, 0x22FDE9EC);
	r7 = D(r7, s[0][0][1], 0xE300DAFB, 0x03EC12FB, 0xFEFDE708, 0x0507F010);
	r0 = D(r0, s[0][0][2], 0xDF0401ED, 0xE1F0FFD7, 0xD9F603CD, 0x03FB0C03);
	r1 = D(r1, s[0][0][2], 0x0C0FF8FC, 0x0AEDE1F9, 0xFB01F3EF, 0x17E810F2);
	r2 = D(r2, s[0][0][2], 0xE61207F8, 0xF2F0FF14, 0xEE0302FB, 0xFA010100);
	r3 = D(r3, s[0][0][2], 0x0C0EDAE1, 0xEF0327D3, 0x0CEF06F3, 0xFFFEE611);
	r4 = D(r4, s[0][0][2], 0x17FCEEF0, 0x05FEFA24, 0xE911030E, 0xF9FAF0FD);
	r5 = D(r5, s[0][0][2], 0xFF0B0B08, 0x10090BEB, 0xFD1DCE08, 0x09FAF3F1);
	r6 = D(r6, s[0][0][2], 0xEB152113, 0x14FD0508, 0x070CFB17, 0x0E081005);
	r7 = D(r7, s[0][0][2], 0x000DFC12, 0x040A24F1, 0xE1FFFE1A, 0xF800F907);
	r0 = D(r0, s[0][1][0], 0x0A01D5F4, 0xF208FEF7, 0xFA201209, 0x070DFCED);
	r1 = D(r1, s[0][1][0], 0x01FF2321, 0xFBF02E0D, 0xFE0707D9, 0xFA10FA1D);
	r2 = D(r2, s[0][1][0], 0x02EAE5EF, 0xFF0E15F6, 0x010B07FE, 0xFE07EE27);
	r3 = D(r3, s[0][1][0], 0xEEE813FB, 0xEE081509, 0xFFF807FD, 0x121AEBFB);
	r4 = D(r4, s[0][1][0], 0xF302050F, 0x000411F4, 0xFDF403FA, 0xEEF3F508);
	r5 = D(r5, s[0][1][0], 0x0D0002FD, 0x0DFD1CF2, 0xEFDF1708, 0x14EBF1D7);
	r6 = D(r6, s[0][1][0], 0xEFC60004, 0xFAFA08E9, 0x13E7FEF5, 0x15FBFD04);
	r7 = D(r7, s[0][1][0], 0x13C5F6FB, 0x0C170920, 0x0AF80304, 0x17F90704);
	r0 = D(r0, s[0][1][1], 0x0FF21EFB, 0x04DDF212, 0x09CE1304, 0xF5E7F6F6);
	r1 = D(r1, s[0][1][1], 0x05ED10FC, 0xF70D0708, 0x0AFD0516, 0x1506F7D5);
	r2 = D(r2, s[0][1][1], 0xD9FF03FC, 0x070C10F4, 0xEB08F408, 0xE306EC03);
	r3 = D(r3, s[0][1][1], 0xCF05EEFE, 0xDCEFDD09, 0x0EF2FDFA, 0x140B0B28);
	r4 = D(r4, s[0][1][1], 0xE804F413, 0x092DF3EF, 0x06F00AD9, 0x0D00FF13);
	r5 = D(r5, s[0][1][1], 0xFCF60D0B, 0x15F32612, 0xF0F51F14, 0xF105F9D2);
	r6 = D(r6, s[0][1][1], 0x13CE16FA, 0xF00BFC0B, 0xEEEE0301, 0xF2FB16FE);
	r7 = D(r7, s[0][1][1], 0xEFF41209, 0x06151F0E, 0x02EEED06, 0xF700FFE9);
	r0 = D(r0, s[0][1][2], 0x0FF30BF5, 0xC1FD090E, 0x242A1821, 0xFEDFFCE5);
	r1 = D(r1, s[0][1][2], 0x0610E903, 0x030C0029, 0xFAFFF6CC, 0x15020513);
	r2 = D(r2, s[0][1][2], 0x000F0018, 0x0B023B0A, 0xFDE815FA, 0xDA0FF90A);
	r3 = D(r3, s[0][1][2], 0xEB00000E, 0xE7EA1A05, 0x1303F4F1, 0xE417001D);
	r4 = D(r4, s[0][1][2], 0xC8FFFD31, 0x0D0305F2, 0x07ED012C, 0x021002FE);
	r5 = D(r5, s[0][1][2], 0xF408EEF3, 0x0C17D4FA, 0xFD0C0DE9, 0x1412FF05);
	r6 = D(r6, s[0][1][2], 0xED0BEF01, 0x0DD81C07, 0x080500FB, 0xFE0C1FFE);
	r7 = D(r7, s[0][1][2], 0xF708102F, 0x03F4E110, 0xDA0EFAFD, 0xE01011FB);
	r0 = D(r0, s[0][2][0], 0xF909E9FB, 0x1002F3FA, 0xFA1A00FA, 0xFFFE06F0);
	r1 = D(r1, s[0][2][0], 0xFCE600ED, 0x0EFF0EF3, 0x00F2F6E1, 0xF402FE0B);
	r2 = D(r2, s[0][2][0], 0x01E8FE08, 0xE406F80C, 0x0B15F519, 0x100BEDBB);
	r3 = D(r3, s[0][2][0], 0x17E40E17, 0x06310CF4, 0x051BEBFE, 0xEFF4FEEB);
	r4 = D(r4, s[0][2][0], 0x160A0A0E, 0xFFFCF907, 0xF80DDE16, 0x0D03070A);
	r5 = D(r5, s[0][2][0], 0x02F3F7F9, 0xF208102A, 0xFCEA06DE, 0xFBFF0BF9);
	r6 = D(r6, s[0][2][0], 0xF709FA0B, 0xFFED1AE7, 0x09061A08, 0xFFF602F3);
	r7 = D(r7, s[0][2][0], 0xEEFAF907, 0xF9F5F5F0, 0x07FAED16, 0x05FAF20F);
	r0 = D(r0, s[0][2][1], 0xFFEDF8EA, 0x07E6F8F4, 0x00040DFF, 0x0317F0EF);
	r1 = D(r1, s[0][2][1], 0x09F8EF00, 0xF20A0E10, 0x0109FE09, 0x01090C09);
	r2 = D(r2, s[0][2][1], 0xF900F0F8, 0xD0FA1220, 0x19FF01FA, 0x18FA0ADB);
	r3 = D(r3, s[0][2][1], 0xF1F700EE, 0xF0FA0B14, 0x0E01FA09, 0xF4FCFAE5);
	r4 = D(r4, s[0][2][1], 0x03EB0605, 0xEFFE0917, 0x100B1C16, 0xF9011D12);
	r5 = D(r5, s[0][2][1], 0xFD010700, 0x0CED16F4, 0xEF10071F, 0x011EECFB);
	r6 = D(r6, s[0][2][1], 0xE2FDE713, 0x1D23F7F6, 0x0606FB1F, 0xED090323);
	r7 = D(r7, s[0][2][1], 0x040A00EB, 0x03FFDE17, 0x04E50613, 0xFBEEFDF6);
	r0 = D(r0, s[0][2][2], 0xE8F5FBDF, 0xF8F20A01, 0xF1400E16, 0x070C03F9);
	r1 = D(r1, s[0][2][2], 0x14F6F613, 0xFAF9FA24, 0x02FD01F7, 0xFCF000FF);
	r2 = D(r2, s[0][2][2], 0x09FF05F7, 0x0807E910, 0xF7F6F0FC, 0xEDFBF3F7);
	r3 = D(r3, s[0][2][2], 0x0205F6FA, 0x1AF5F7F2, 0xF60AEB04, 0x0018EB11);
	r4 = D(r4, s[0][2][2], 0xFD0B1AFB, 0x03F9FC08, 0x1100EDE6, 0xFFFF0D0E);
	r5 = D(r5, s[0][2][2], 0x04FA0903, 0xF915EB21, 0x2B13F006, 0x06F408F1);
	r6 = D(r6, s[0][2][2], 0x15F6E2FA, 0xE3FBFB02, 0x09FDF0FE, 0xF3F9F413);
	r7 = D(r7, s[0][2][2], 0x0B13052F, 0xF4F8C9F5, 0xF606FA00, 0xFF05030A);
	r0 = D(r0, s[1][0][0], 0xF11822F0, 0xEF0310FF, 0x15E6EE0E, 0x0DF1F6E8);
	r1 = D(r1, s[1][0][0], 0x1B09180A, 0x05E9FDFD, 0x03FAF8EE, 0xFC0204FB);
	r2 = D(r2, s[1][0][0], 0x00070614, 0xF106030A, 0x2DF212EA, 0xFA10FDF8);
	r3 = D(r3, s[1][0][0], 0x04091204, 0xFFF90BEA, 0x00E6F9EF, 0xFE3CFDD4);
	r4 = D(r4, s[1][0][0], 0x08FF0324, 0x11F2EE1F, 0xFF0206EF, 0xFCFD17FC);
	r5 = D(r5, s[1][0][0], 0x0605FE01, 0xFCE902EF, 0x20DEFF15, 0xF5FAF917);
	r6 = D(r6, s[1][0][0], 0xFA04FFDC, 0x061BFCFF, 0xFBFA04F7, 0x07FA0007);
	r7 = D(r7, s[1][0][0], 0x0808EBF6, 0xF32E0DED, 0xE5FCFDE2, 0xFEF80811);
	r0 = D(r0, s[1][0][1], 0x08F301ED, 0x07F4000B, 0xFCFF04F3, 0xF60211F7);
	r1 = D(r1, s[1][0][1], 0xF805FD16, 0xEF241F20, 0xFFF2F9F3, 0x05FF1211);
	r2 = D(r2, s[1][0][1], 0xF10D12F6, 0x00E5F0E6, 0x01C4000F, 0x00E7E71D);
	r3 = D(r3, s[1][0][1], 0x02F20702, 0xF5EE07FF, 0xFD0108E1, 0x03DCEC1D);
	r4 = D(r4, s[1][0][1], 0x0DF9F4FB, 0x07EB1B0A, 0x1FFB0102, 0x0BF90022);
	r5 = D(r5, s[1][0][1], 0x0F03F513, 0xFBF9F6FB, 0x01F80302, 0x030916F2);
	r6 = D(r6, s[1][0][1], 0x190400F0, 0xF41210DF, 0x040C0EEC, 0xEF12F5E7);
	r7 = D(r7, s[1][0][1], 0xE81105FB, 0x081DEE81, 0xF1010BF0, 0x020A0618);
	r0 = D(r0, s[1][0][2], 0x0137F2DE, 0x04F7F80E, 0xFDF0F731, 0x16F31FF3);
	r1 = D(r1, s[1][0][2], 0x030CFDE7, 0x0EF603F1, 0xF8E50DEF, 0x0017F51F);
	r2 = D(r2, s[1][0][2], 0x050301F6, 0x0700EA1A, 0xF0F016FB, 0x0CFF05FB);
	r3 = D(r3, s[1][0][2], 0xF7F8F307, 0x0BE113E4, 0xEDF6FCD5, 0xEE17F711);
	r4 = D(r4, s[1][0][2], 0xEDEBF8F3, 0xFD05EDE5, 0xFD0F02FC, 0x0506EFEB);
	r5 = D(r5, s[1][0][2], 0xF60A0D18, 0x051C01D6, 0xEA1B03FB, 0xFFFE0FDE);
	r6 = D(r6, s[1][0][2], 0x160BFE28, 0x101101FB, 0x0607F4ED, 0xFCCC0AE0);
	r7 = D(r7, s[1][0][2], 0x0EF6040D, 0xFFDB04D2, 0x00E1F729, 0xFAF90CCD);
	r0 = D(r0, s[1][1][0], 0xEB220500, 0x020B03E7, 0xFF13DC4F, 0xFA33F403);
	r1 = D(r1, s[1][1][0], 0x02161FFC, 0x101608E2, 0x0D04090E, 0xF8F312FC);
	r2 = D(r2, s[1][1][0], 0x04011BFE, 0xFBEE1516, 0x03060FF6, 0x03002024);
	r3 = D(r3, s[1][1][0], 0xFFE90003, 0x00080006, 0x07EEFCFB, 0x051C0C07);
	r4 = D(r4, s[1][1][0], 0x05F8C1F5, 0x0F099426, 0xF80BF300, 0xFE191608);
	r5 = D(r5, s[1][1][0], 0xF6F3FB0B, 0xF8F5E118, 0x04DE0203, 0x11070C01);
	r6 = D(r6, s[1][1][0], 0xF809170D, 0xFD311DF0, 0x07FBFDEA, 0x14F6FF0E);
	r7 = D(r7, s[1][1][0], 0xFFDACEF8, 0x0E02F0EC, 0xF8E6FCE0, 0x080806F9);
	r0 = D(r0, s[1][1][1], 0xFC08C906, 0x0BFB06F7, 0xF6FBD958, 0xE90FF5F1);
	r1 = D(r1, s[1][1][1], 0x14EA0EF7, 0x03EB1506, 0x1714F9FD, 0x1009EFF5);
	r2 = D(r2, s[1][1][1], 0xF4040FDC, 0x08EB2529, 0xFDFB100C, 0xDE042029);
	r3 = D(r3, s[1][1][1], 0x0C05F6FD, 0xF417F8EA, 0xFEEAB87F, 0x04081D3B);
	r4 = D(r4, s[1][1][1], 0x15F0120D, 0x16F4F808, 0xE7CC0FE8, 0x04040A12);
	r5 = D(r5, s[1][1][1], 0xEE080A12, 0x010414F9, 0xF3F302F0, 0xEB10F20E);
	r6 = D(r6, s[1][1][1], 0x16240EFC, 0x02E71518, 0xEC02FA0E, 0x050DEE21);
	r7 = D(r7, s[1][1][1], 0xFC25EC45, 0x06120648, 0x0601FB0E, 0x0EF8FC02);
	r0 = D(r0, s[1][1][2], 0x0C4AD785, 0xEAFD00F1, 0x07B81638, 0x16FDFFFA);
	r1 = D(r1, s[1][1][2], 0xE5F7D581, 0xF1010409, 0xFC0CFB30, 0x0519DD3C);
	r2 = D(r2, s[1][1][2], 0x050EFD18, 0xEF360A50, 0x21F8F8D2, 0xFF0808FC);
	r3 = D(r3, s[1][1][2], 0x01FAFD1D, 0x19E7F981, 0x070BDC1C, 0x0CDF081C);
	r4 = D(r4, s[1][1][2], 0x02EE0C17, 0xFB060E06, 0x02270D2E, 0x02F4FBA3);
	r5 = D(r5, s[1][1][2], 0xFDF013BD, 0xDEF7ECE3, 0xFC09F208, 0xFEFE11ED);
	r6 = D(r6, s[1][1][2], 0xFE01070F, 0xF611E831, 0x12FF07DF, 0xF512FFF5);
	r7 = D(r7, s[1][1][2], 0xFCDF109C, 0xF5E8FA0E, 0xF506F929, 0xF1F4EDF1);
	r0 = D(r0, s[1][2][0], 0xECFBFBF8, 0xF3E8E104, 0xD207F109, 0x2007F210);
	r1 = D(r1, s[1][2][0], 0x11FDF804, 0xFC1AF6F2, 0x0505F726, 0x11D103FA);
	r2 = D(r2, s[1][2][0], 0xE8131CFB, 0xFB04DA03, 0xF908DD02, 0x05E70601);
	r3 = D(r3, s[1][2][0], 0x08F808ED, 0xEAFC0908, 0x01E824DE, 0xFFF803E4);
	r4 = D(r4, s[1][2][0], 0xF1070F01, 0xC9F0ECFB, 0xFC09FEDE, 0xF90E04F9);
	r5 = D(r5, s[1][2][0], 0x01F5FC0B, 0x0DDE0A24, 0xF3F2FB0A, 0x041002F5);
	r6 = D(r6, s[1][2][0], 0xE3240A10, 0x1B0805FD, 0x0D11F102, 0xFFFC05E8);
	r7 = D(r7, s[1][2][0], 0x03FD0025, 0x0310F202, 0x0F1803F0, 0x0EF8F62D);
	r0 = D(r0, s[1][2][1], 0xFAF50A16, 0xF70BEA1E, 0x08FC2C70, 0xF2EFE824);
	r1 = D(r1, s[1][2][1], 0x07D9E22D, 0xFFE70201, 0x0FF3F6E4, 0xF200FA0A);
	r2 = D(r2, s[1][2][1], 0xF5FB01E1, 0x08FFDD13, 0xF929FBFE, 0x06ED13FB);
	r3 = D(r3, s[1][2][1], 0x03FD01E8, 0x06FCF106, 0xF102271B, 0x05F52019);
	r4 = D(r4, s[1][2][1], 0xFFDB1D12, 0x07F10AF4, 0xFD19FB00, 0x0209010A);
	r5 = D(r5, s[1][2][1], 0x0AF10C2A, 0x12E7040B, 0xF716F9EA, 0x1614F20D);
	r6 = D(r6, s[1][2][1], 0xF315FF11, 0xDBFBE7F7, 0xF80E0B02, 0x01011814);
	r7 = D(r7, s[1][2][1], 0xFCE00F1E, 0x02F9FB17, 0xFC03F0F8, 0xFA20EDFC);
	r0 = D(r0, s[1][2][2], 0x170F1C69, 0xF006F10B, 0xFD130634, 0xDD12E7F2);
	r1 = D(r1, s[1][2][2], 0xF51ED824, 0xFFFCF5F9, 0x050C1002, 0xF702FA0F);
	r2 = D(r2, s[1][2][2], 0xFB1AE714, 0x0C0C0900, 0x0019EEF5, 0x071807EF);
	r3 = D(r3, s[1][2][2], 0xFA10F309, 0xE71908BE, 0x0BF00281, 0xFFEC0A08);
	r4 = D(r4, s[1][2][2], 0xF418F7FB, 0xDBD801FB, 0x13C5F7E6, 0x0205F30C);
	r5 = D(r5, s[1][2][2], 0xFEE4FB9E, 0x10DFF617, 0x101CDCF4, 0xF1FBFF1C);
	r6 = D(r6, s[1][2][2], 0x0C090ED3, 0x0A1BFE24, 0x021B0DFD, 0x14FA0034);
	r7 = D(r7, s[1][2][2], 0x13E82EF1, 0xEFFE0EBC, 0x01F1FA21, 0xF000F9F3);
	s[0][0][0] = G[10][xy.y+0][xy.x+0]; s[0][0][1] = G[10][xy.y+0][xy.x+1];
	s[0][0][2] = G[10][xy.y+0][xy.x+2]; s[0][1][0] = G[10][xy.y+1][xy.x+0];
	s[0][1][1] = G[10][xy.y+1][xy.x+1]; s[0][1][2] = G[10][xy.y+1][xy.x+2];
	s[0][2][0] = G[10][xy.y+2][xy.x+0]; s[0][2][1] = G[10][xy.y+2][xy.x+1];
	s[0][2][2] = G[10][xy.y+2][xy.x+2]; s[1][0][0] = G[11][xy.y+0][xy.x+0];
	s[1][0][1] = G[11][xy.y+0][xy.x+1]; s[1][0][2] = G[11][xy.y+0][xy.x+2];
	s[1][1][0] = G[11][xy.y+1][xy.x+0]; s[1][1][1] = G[11][xy.y+1][xy.x+1];
	s[1][1][2] = G[11][xy.y+1][xy.x+2]; s[1][2][0] = G[11][xy.y+2][xy.x+0];
	s[1][2][1] = G[11][xy.y+2][xy.x+1]; s[1][2][2] = G[11][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xF5081B0F, 0x07220501, 0x02F01FB7, 0x0CEFFF01);
	r1 = D(r1, s[0][0][0], 0xF3132B0F, 0xFB011A01, 0x02211BEF, 0x1107FD07);
	r2 = D(r2, s[0][0][0], 0xD1F70EF1, 0xF3161BFD, 0x0008F9F9, 0x0A0C0BF4);
	r3 = D(r3, s[0][0][0], 0xF509FBF4, 0x0823270F, 0xE800F0FD, 0x0711031C);
	r4 = D(r4, s[0][0][0], 0x0CFC0A0A, 0x110D0BD9, 0x231CE0F2, 0xF9F6110E);
	r5 = D(r5, s[0][0][0], 0x04FD10FD, 0x06DEF3F2, 0xDECE0519, 0x09FE120A);
	r6 = D(r6, s[0][0][0], 0x0EEE000D, 0xF90609FB, 0x0A08ED01, 0x09101A00);
	r7 = D(r7, s[0][0][0], 0xFDEBE0F8, 0xF3FF04FE, 0xECF0FBD2, 0x0106F30C);
	r0 = D(r0, s[0][0][1], 0xB2F5F2E6, 0xE7F9F2FE, 0xDC2617C0, 0x1114231C);
	r1 = D(r1, s[0][0][1], 0xF30E2C15, 0x121F3609, 0x11D8FEFC, 0xFEFF09F9);
	r2 = D(r2, s[0][0][1], 0xE0FFFBF3, 0xE8021012, 0x0401BBF2, 0xFCF604ED);
	r3 = D(r3, s[0][0][1], 0xFF04E9F5, 0x10FEED07, 0x01EC0E0B, 0x12DAF911);
	r4 = D(r4, s[0][0][1], 0x1609FAFD, 0xFAE40300, 0x0503EEE7, 0x20F2120C);
	r5 = D(r5, s[0][0][1], 0x0A0EEEFA, 0xF904FAF0, 0xF810020D, 0xFBF9F7F6);
	r6 = D(r6, s[0][0][1], 0xF619EA0E, 0x09F901FA, 0x1C0AE7EF, 0x000BFDD6);
	r7 = D(r7, s[0][0][1], 0xFFF3081E, 0x0109EFED, 0xF719FCF7, 0xF202DE08);
	r0 = D(r0, s[0][0][2], 0xFDF9EE05, 0xE0FF08F9, 0xFC001503, 0x1602D516);
	r1 = D(r1, s[0][0][2], 0xF70CFCF9, 0x07E6FD1B, 0x0E0E15FF, 0x1005ED08);
	r2 = D(r2, s[0][0][2], 0xFE051001, 0xD71703EF, 0xFEF1F2EF, 0x06F6FEEA);
	r3 = D(r3, s[0][0][2], 0x0302FE16, 0x1AFAE11C, 0xFFEDE3E7, 0x10030400);
	r4 = D(r4, s[0][0][2], 0x02F207F0, 0xEBE1FDFC, 0xFF261710, 0xEF0812FB);
	r5 = D(r5, s[0][0][2], 0x0304FEFC, 0x0A0407DC, 0xFCF6CFEE, 0xE8F911EF);
	r6 = D(r6, s[0][0][2], 0xE408030A, 0x1D01F810, 0xFA051609, 0x0C181304);
	r7 = D(r7, s[0][0][2], 0x0DF80BFC, 0x06FBF707, 0xEEFDF8F6, 0xFE01040F);
	r0 = D(r0, s[0][1][0], 0x060419FD, 0xF50E17E8, 0x1DD228F3, 0xFE05E5FC);
	r1 = D(r1, s[0][1][0], 0x120BE312, 0xF8FE1EF9, 0xE60E28FE, 0x050B14F4);
	r2 = D(r2, s[0][1][0], 0xE606E50C, 0xFBE00814, 0xF4E4021A, 0xE10C2AF9);
	r3 = D(r3, s[0][1][0], 0x0609F202, 0xED035D03, 0x03061105, 0xF000F711);
	r4 = D(r4, s[0][1][0], 0xFC0305F4, 0xF2172214, 0xDCD3D8F0, 0xFA161201);
	r5 = D(r5, s[0][1][0], 0xF4F7071D, 0x1507EE22, 0x08F40501, 0x0B0E1E16);
	r6 = D(r6, s[0][1][0], 0x14FEFDF5, 0xFEF1ED04, 0xF304E6FF, 0xF5F2EFF5);
	r7 = D(r7, s[0][1][0], 0xF8FC00FE, 0x060A08EA, 0x000803F8, 0x0502090B);
	r0 = D(r0, s[0][1][1], 0xFDFD06CC, 0x0FFC03EE, 0xEAD7EC00, 0xF0E9AA0A);
	r1 = D(r1, s[0][1][1], 0xEE120407, 0xF41512ED, 0xE7F31100, 0xFA08F8F9);
	r2 = D(r2, s[0][1][1], 0xE6FF0FED, 0xF6EC030A, 0x07D40F0E, 0xFFEF32F1);
	r3 = D(r3, s[0][1][1], 0x0409F70A, 0xD618FA0E, 0x0400F9DE, 0xF902F40E);
	r4 = D(r4, s[0][1][1], 0xDD0C0DF6, 0x09EA10F7, 0xF1E1FAE1, 0xF1051101);
	r5 = D(r5, s[0][1][1], 0x0103F616, 0x16180B06, 0x170CED09, 0xF713FEF6);
	r6 = D(r6, s[0][1][1], 0xEC163FEE, 0x060813F5, 0x06F7E6FC, 0x05141914);
	r7 = D(r7, s[0][1][1], 0xF9EC1109, 0x0EF7F0C5, 0x0CF30304, 0x01FDEEF8);
	r0 = D(r0, s[0][1][2], 0x16ECE181, 0x0A0BF4FF, 0x08E3FD0A, 0xE6FE0E0B);
	r1 = D(r1, s[0][1][2], 0x08030E22, 0xF4FCEDFA, 0x0017250A, 0x06E2CF03);
	r2 = D(r2, s[0][1][2], 0x070EF5FC, 0xF3DEC5F6, 0x050DF40A, 0x1411FC0A);
	r3 = D(r3, s[0][1][2], 0xF609FF09, 0x01EEE1FD, 0x00FBF00D, 0xF9F40007);
	r4 = D(r4, s[0][1][2], 0x04060C0C, 0x0CFB11F5, 0xFB261A20, 0x030A00F5);
	r5 = D(r5, s[0][1][2], 0xFD11F901, 0xEC0627F6, 0xFD0902DE, 0xFBE9F80D);
	r6 = D(r6, s[0][1][2], 0xF912FBE9, 0xEBF2BA0A, 0x02DD08E8, 0x141DFD0E);
	r7 = D(r7, s[0][1][2], 0xF9051F13, 0x04FB140A, 0x1B0CF60C, 0x0AE9F204);
	r0 = D(r0, s[0][2][0], 0x01FF1502, 0xFA1314F1, 0x0C074410, 0xFAFFF20E);
	r1 = D(r1, s[0][2][0], 0xFBF6FC0C, 0xDF01DBFB, 0x08F3E408, 0x002BFBF3);
	r2 = D(r2, s[0][2][0], 0xEDFA0FF7, 0x0CFD0E08, 0xF6FCFB10, 0x041718DB);
	r3 = D(r3, s[0][2][0], 0x070702F6, 0xFDEA27FF, 0xEA1615F3, 0x04181FF9);
	r4 = D(r4, s[0][2][0], 0xEF02250C, 0xFAE6EF0D, 0x02EBFF03, 0xFE030205);
	r5 = D(r5, s[0][2][0], 0xF9FC0AF9, 0xEDF9FF18, 0x100A0CFB, 0x04F2F200);
	r6 = D(r6, s[0][2][0], 0xFBF5E420, 0x0C0B0EFE, 0xEE042108, 0xFA0BF405);
	r7 = D(r7, s[0][2][0], 0xF3002407, 0x0BF7FFF1, 0xF206F607, 0x0DFF0D13);
	r0 = D(r0, s[0][2][1], 0x040F06FE, 0xF50B0D01, 0xFBD01902, 0xEFDBEB0B);
	r1 = D(r1, s[0][2][1], 0x12F0F709, 0xFDEE0E03, 0x1401F009, 0xF40EFE0D);
	r2 = D(r2, s[0][2][1], 0x10F3EFE3, 0xF0ED0210, 0xFF0C06FE, 0x08EE1201);
	r3 = D(r3, s[0][2][1], 0xFBFE0AFB, 0x001A03FB, 0x15FB1412, 0xF9F8F308);
	r4 = D(r4, s[0][2][1], 0xF4D700EC, 0xF1971912, 0xEF0AE4C4, 0x0502F403);
	r5 = D(r5, s[0][2][1], 0x01F50FF3, 0x0E02221E, 0x15140CF0, 0x02060AEE);
	r6 = D(r6, s[0][2][1], 0x0C06E6EA, 0xF3FAE3F4, 0x06E3EAF4, 0xF0040400);
	r7 = D(r7, s[0][2][1], 0x14F400F1, 0xF9FE1A01, 0x180BFC0C, 0x0102F403);
	r0 = D(r0, s[0][2][2], 0x11151121, 0x040AF60F, 0xD4170806, 0xF71CD2E0);
	r1 = D(r1, s[0][2][2], 0x13EBFB1C, 0xF403C9DA, 0x2405240E, 0xEFE90A1B);
	r2 = D(r2, s[0][2][2], 0x26FF0214, 0xEE0FFA05, 0x05FFD404, 0x00FA020B);
	r3 = D(r3, s[0][2][2], 0x070E0504, 0x04F1FD11, 0xF5F30512, 0x0DDCFC0C);
	r4 = D(r4, s[0][2][2], 0x08F8EEFB, 0x02E30F02, 0x15EC1D28, 0x0010F20F);
	r5 = D(r5, s[0][2][2], 0xFCFB06F8, 0xFFFB03F8, 0xFD15F4F7, 0x09F4E9ED);
	r6 = D(r6, s[0][2][2], 0xE01B3003, 0xF612CDE7, 0xF404EBFD, 0xF5F90D16);
	r7 = D(r7, s[0][2][2], 0xF31C1005, 0xFA05FE0E, 0xF7ECF101, 0xFD240A05);
	r0 = D(r0, s[1][0][0], 0xE1141D03, 0x01F4B0F5, 0x074CE6C3, 0x37EF25E4);
	r1 = D(r1, s[1][0][0], 0xD6F80AF3, 0x08F430FF, 0x0CF0E1F8, 0xE703F103);
	r2 = D(r2, s[1][0][0], 0x0820EBF8, 0x17CE1300, 0xF01609FB, 0xECF73F0D);
	r3 = D(r3, s[1][0][0], 0x0106FB11, 0xD0D8F7F6, 0x1136FD0F, 0x31EA1F11);
	r4 = D(r4, s[1][0][0], 0xF8022909, 0x05FFCEFC, 0x22254EED, 0x0B022B09);
	r5 = D(r5, s[1][0][0], 0xF7DE2D03, 0xFBF3B1F1, 0xF6EF0BF1, 0xF4FCD215);
	r6 = D(r6, s[1][0][0], 0x02184616, 0xD9160B02, 0x00271116, 0xFA1F0505);
	r7 = D(r7, s[1][0][0], 0x3D0B81F8, 0x12CF26FB, 0x14102713, 0xF802550C);
	r0 = D(r0, s[1][0][1], 0x00350F00, 0xF106140D, 0x17F8D504, 0xF80430F7);
	r1 = D(r1, s[1][0][1], 0x1505280D, 0xE3F39FEF, 0x0CFDE011, 0xFCEC2AF6);
	r2 = D(r2, s[1][0][1], 0xFE08E515, 0x1ADA27EB, 0x391370FA, 0x0C11A60C);
	r3 = D(r3, s[1][0][1], 0x05FBD108, 0x4DC4B918, 0xECEF24E6, 0x22DD3C0D);
	r4 = D(r4, s[1][0][1], 0x0DF42EF9, 0xF905B3F2, 0xFAE3FD02, 0x07184308);
	r5 = D(r5, s[1][0][1], 0x00103205, 0x05FB10FC, 0xEDEFE1EC, 0x0E2DEF0C);
	r6 = D(r6, s[1][0][1], 0xFAF8DEF6, 0xCB00CDEF, 0x0A0EE613, 0xD4F6C900);
	r7 = D(r7, s[1][0][1], 0xCDE3900B, 0xF5026202, 0x00F90307, 0x0F208FE5);
	r0 = D(r0, s[1][0][2], 0x0E813FFC, 0xF739EDF8, 0xF0F80AF5, 0xFEDEE4EC);
	r1 = D(r1, s[1][0][2], 0xF318BE09, 0x180586FD, 0xF404BA08, 0xFDEE40ED);
	r2 = D(r2, s[1][0][2], 0xFBE91403, 0xFDBE47FD, 0xFAED7F18, 0xFEF3290D);
	r3 = D(r3, s[1][0][2], 0xFD0A0EF4, 0xE623F51A, 0xFFDC01F9, 0x0ED4D524);
	r4 = D(r4, s[1][0][2], 0xF3FFF903, 0xF10B820E, 0x0103D00A, 0xF6F44204);
	r5 = D(r5, s[1][0][2], 0xFF163A00, 0x1E0F0A18, 0xFBEBE4FD, 0x0D1E15ED);
	r6 = D(r6, s[1][0][2], 0xEB0212E7, 0x1D1B7503, 0xFFC00BFE, 0xFF0B5C0D);
	r7 = D(r7, s[1][0][2], 0x0F099108, 0x02146510, 0x18F30907, 0xF2F381FA);
	r0 = D(r0, s[1][1][0], 0xF2F10D01, 0xE3FFD608, 0x390DF9FA, 0x0E070E12);
	r1 = D(r1, s[1][1][0], 0xECD714F0, 0xE5EF2603, 0xE700BC02, 0x14040C0D);
	r2 = D(r2, s[1][1][0], 0x1703D50B, 0x220E1FF8, 0x19019CFA, 0xEC2C2C0B);
	r3 = D(r3, s[1][1][0], 0xD4F7E105, 0xF41030F3, 0x20EAEF04, 0xFBF215D9);
	r4 = D(r4, s[1][1][0], 0xBA161CEB, 0x6206A9EB, 0xE51D1A09, 0x00F206FC);
	r5 = D(r5, s[1][1][0], 0x0AFC16FF, 0x07F7D0EB, 0xDD070318, 0x030500EE);
	r6 = D(r6, s[1][1][0], 0xE6EA0C10, 0x0C21080C, 0xE007CEF4, 0x05F61B0F);
	r7 = D(r7, s[1][1][0], 0xF8FD0E06, 0x22F3280F, 0x1EE92005, 0x0BFFF5F6);
	r0 = D(r0, s[1][1][1], 0x14132D0C, 0x1D0AD516, 0x040EFAE6, 0x1E11C70F);
	r1 = D(r1, s[1][1][1], 0xD236ED12, 0xEAFFC611, 0x28EEA2F0, 0x02F5EDE4);
	r2 = D(r2, s[1][1][1], 0x0A1F250E, 0x01E90611, 0x01EDCC0C, 0xF5F53500);
	r3 = D(r3, s[1][1][1], 0x1DEBB50B, 0xFCF65BE2, 0xF83935CD, 0x0D0841DD);
	r4 = D(r4, s[1][1][1], 0x34360FF3, 0x03321507, 0x110B1B02, 0x10FA19FB);
	r5 = D(r5, s[1][1][1], 0x140B2708, 0xF40348FA, 0x20063CF6, 0xF7F2EEFE);
	r6 = D(r6, s[1][1][1], 0xF102F908, 0x1CE7DD02, 0xE0FB0E11, 0xF9DDD0FF);
	r7 = D(r7, s[1][1][1], 0x1CEAF700, 0x16213ECC, 0xFDF20D0E, 0x01CC9EFA);
	r0 = D(r0, s[1][1][2], 0xEC0E2DF5, 0x16038E05, 0xFCFC19EC, 0xE220FAE3);
	r1 = D(r1, s[1][1][2], 0xF81E2F11, 0x0BE389F5, 0xFF399202, 0x17EFDFED);
	r2 = D(r2, s[1][1][2], 0xF9230B00, 0x04F73BFE, 0xE70E2206, 0x0DF8D0FD);
	r3 = D(r3, s[1][1][2], 0xFD1BD910, 0xF5F1D0FD, 0xF30C0902, 0xC5EC2DFE);
	r4 = D(r4, s[1][1][2], 0x022E38FC, 0xF0250B03, 0x030ECA0D, 0xFF044005);
	r5 = D(r5, s[1][1][2], 0x08064207, 0xEA19021A, 0xF8291EE3, 0xF1EA5806);
	r6 = D(r6, s[1][1][2], 0xFC0EC80E, 0x131701F6, 0xF32CF215, 0x141EC303);
	r7 = D(r7, s[1][1][2], 0x00074ED4, 0xE8F8350E, 0x1418FC11, 0xE0F3FC09);
	r0 = D(r0, s[1][2][0], 0xF20617FC, 0x05F41D00, 0xE1091AEA, 0xF60A2AFB);
	r1 = D(r1, s[1][2][0], 0x2B05F2F0, 0xFA20DC07, 0x1513A70A, 0xD219E1FA);
	r2 = D(r2, s[1][2][0], 0x1EF40D19, 0x0BD828F0, 0x1BFBDC06, 0xE6141127);
	r3 = D(r3, s[1][2][0], 0x04143A06, 0x04F9F907, 0xD7F3070A, 0xEF05E614);
	r4 = D(r4, s[1][2][0], 0x06F10CF7, 0x1CF3C504, 0x14D93D09, 0xF9050004);
	r5 = D(r5, s[1][2][0], 0xE80B2A00, 0xD9F1DEE3, 0xE608F716, 0x17F42C07);
	r6 = D(r6, s[1][2][0], 0x1313D104, 0xEF0AEA0D, 0x09DFF9FE, 0xF9FB4F08);
	r7 = D(r7, s[1][2][0], 0xEEC4D4EB, 0x04F1F013, 0x09FCE300, 0x16042E02);
	r0 = D(r0, s[1][2][1], 0xEF00D202, 0x17000A0B, 0x1EF344D8, 0xF2ED06E9);
	r1 = D(r1, s[1][2][1], 0xE60EC3F5, 0x1318C903, 0x26FCD31E, 0x0FDB18F2);
	r2 = D(r2, s[1][2][1], 0xDF042611, 0x184CD705, 0x03F008F8, 0x1FF03BFA);
	r3 = D(r3, s[1][2][1], 0xFBE921F8, 0xE4DF0D00, 0x01FBFFF4, 0x1013C7F5);
	r4 = D(r4, s[1][2][1], 0xE81FF116, 0xFBFCC8FA, 0x0B093A00, 0xFCF20CFF);
	r5 = D(r5, s[1][2][1], 0x05F538F9, 0x20F30EE2, 0xE8D3C2F2, 0xF5071901);
	r6 = D(r6, s[1][2][1], 0xC118FF06, 0x071926DA, 0xEFFC2FFA, 0x05F40BF3);
	r7 = D(r7, s[1][2][1], 0xDBFCF9F1, 0x0DEB07E6, 0x0A0C1B00, 0xDF0B20F7);
	r0 = D(r0, s[1][2][2], 0x2101DB03, 0x11E9E6F7, 0xF91EAAFB, 0xE62D15E8);
	r1 = D(r1, s[1][2][2], 0xD20D11F9, 0xF2131AF9, 0xD909F202, 0xF209F5F4);
	r2 = D(r2, s[1][2][2], 0x0C0E100F, 0x140F2DE5, 0xE9FE211C, 0x0C051301);
	r3 = D(r3, s[1][2][2], 0xFC1315FB, 0xFFD4FDF1, 0x16FBEB01, 0xB91A13F8);
	r4 = D(r4, s[1][2][2], 0x0BE9451B, 0x111EE4FB, 0x1506E70A, 0x12013700);
	r5 = D(r5, s[1][2][2], 0xF5163E04, 0xFC031EF6, 0x06F014DB, 0x0505F703);
	r6 = D(r6, s[1][2][2], 0x1901B4F4, 0x01FBEB0E, 0xF1FE0D04, 0x09E604FB);
	r7 = D(r7, s[1][2][2], 0xFADF19CF, 0xF101F8FB, 0xE5ED26F9, 0xF30BE6F9);
	s[0][0][0] = G[12][xy.y+0][xy.x+0]; s[0][0][1] = G[12][xy.y+0][xy.x+1];
	s[0][0][2] = G[12][xy.y+0][xy.x+2]; s[0][1][0] = G[12][xy.y+1][xy.x+0];
	s[0][1][1] = G[12][xy.y+1][xy.x+1]; s[0][1][2] = G[12][xy.y+1][xy.x+2];
	s[0][2][0] = G[12][xy.y+2][xy.x+0]; s[0][2][1] = G[12][xy.y+2][xy.x+1];
	s[0][2][2] = G[12][xy.y+2][xy.x+2]; s[1][0][0] = G[13][xy.y+0][xy.x+0];
	s[1][0][1] = G[13][xy.y+0][xy.x+1]; s[1][0][2] = G[13][xy.y+0][xy.x+2];
	s[1][1][0] = G[13][xy.y+1][xy.x+0]; s[1][1][1] = G[13][xy.y+1][xy.x+1];
	s[1][1][2] = G[13][xy.y+1][xy.x+2]; s[1][2][0] = G[13][xy.y+2][xy.x+0];
	s[1][2][1] = G[13][xy.y+2][xy.x+1]; s[1][2][2] = G[13][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xF11D1E09, 0x0922F5FE, 0xFA1FE7F6, 0x08E80CFC);
	r1 = D(r1, s[0][0][0], 0x0C1B10FF, 0xD5F20E1A, 0x10E5EE03, 0xFDF30719);
	r2 = D(r2, s[0][0][0], 0xFDFF0FEE, 0x0907E404, 0x18F608F7, 0x0AF213F0);
	r3 = D(r3, s[0][0][0], 0x071CFC10, 0xD80D0C05, 0x2318E1EA, 0xFCE53003);
	r4 = D(r4, s[0][0][0], 0x0C0DEDFF, 0x070E0608, 0x170103E5, 0x07F50A07);
	r5 = D(r5, s[0][0][0], 0x10020000, 0xFC020706, 0x0DE2F0F8, 0xF306F510);
	r6 = D(r6, s[0][0][0], 0x08FA00F5, 0x050301F0, 0x0DF403FD, 0x01DFE009);
	r7 = D(r7, s[0][0][0], 0x00FFF0FC, 0xCA101101, 0x01F4EFF2, 0x0DD2F609);
	r0 = D(r0, s[0][0][1], 0x8112F202, 0xE81C08F9, 0x1073FCE1, 0x06E10403);
	r1 = D(r1, s[0][0][1], 0x03060C04, 0x1F06F1E4, 0xFDF91209, 0xF003FC00);
	r2 = D(r2, s[0][0][1], 0xFDF704F8, 0x1DFE06F7, 0xE2FDE709, 0x06220907);
	r3 = D(r3, s[0][0][1], 0x0103F5F6, 0xBC05FDF2, 0x09100EFF, 0xF4EBE70F);
	r4 = D(r4, s[0][0][1], 0x060201FE, 0x0AE2EEEF, 0xE2FB02F8, 0xE308F408);
	r5 = D(r5, s[0][0][1], 0xFCFF00F2, 0x2508FC06, 0x0AE80D0E, 0x0DFE0715);
	r6 = D(r6, s[0][0][1], 0xD0F60CEB, 0x07060BF6, 0xF4FA0301, 0x14020FEC);
	r7 = D(r7, s[0][0][1], 0x24E20702, 0xECD90305, 0xF4DF1AEA, 0x02FFF908);
	r0 = D(r0, s[0][0][2], 0xB4F4FEFD, 0x10F7F9F1, 0x11F313F3, 0xF9FBFE14);
	r1 = D(r1, s[0][0][2], 0x070508FE, 0x14FF1503, 0xF41B1DF7, 0x0EF6FAEF);
	r2 = D(r2, s[0][0][2], 0x02FB01F4, 0xFF0900F8, 0xF7F4FCEC, 0xF407F304);
	r3 = D(r3, s[0][0][2], 0x1106F602, 0xDBFEFA05, 0x0CF40F00, 0xE6EAFCF2);
	r4 = D(r4, s[0][0][2], 0x000FF0F9, 0x0D1703F9, 0xDA000D09, 0x10F1FF08);
	r5 = D(r5, s[0][0][2], 0xF50CF70B, 0x2DF5FDFB, 0x11000E0F, 0xFF0106FE);
	r6 = D(r6, s[0][0][2], 0xF21B0804, 0xEBEEF017, 0xF5F1FE0E, 0x080E0404);
	r7 = D(r7, s[0][0][2], 0xEAFE19F9, 0xFAEFFF08, 0x1604F707, 0xF60F01F4);
	r0 = D(r0, s[0][1][0], 0x130FF1FB, 0xF8060801, 0x99E3141E, 0xF610F20B);
	r1 = D(r1, s[0][1][0], 0xF82AEE0F, 0xF40EF8F7, 0xD606FAFD, 0x000F00FD);
	r2 = D(r2, s[0][1][0], 0xFBFC0B02, 0xE8120A01, 0xFFF508F8, 0x0F01F7E3);
	r3 = D(r3, s[0][1][0], 0x03F8F4F4, 0x060DEFEB, 0xF2060614, 0x1D0EF70E);
	r4 = D(r4, s[0][1][0], 0x09F5F5F0, 0x17ECF9EC, 0x230AFD02, 0x0DF8F9FB);
	r5 = D(r5, s[0][1][0], 0x06060607, 0xF50AFDF5, 0xF1F6FFEE, 0x0D0AF3EC);
	r6 = D(r6, s[0][1][0], 0x07D4FD08, 0xEFE908FE, 0x050B0305, 0x23F9FB05);
	r7 = D(r7, s[0][1][0], 0xFE1DF2F6, 0x0FF4FE03, 0x03EF02F2, 0xEBF9F6EE);
	r0 = D(r0, s[0][1][1], 0xE509FCFB, 0xFD31FDEF, 0xDAEC16FC, 0x2DF6FEDC);
	r1 = D(r1, s[0][1][1], 0xDEDA04F3, 0x0EF4E9EF, 0xFFECFEF8, 0x080FF2FE);
	r2 = D(r2, s[0][1][1], 0x0313FAF9, 0xD1DE060E, 0xDA44FA16, 0x1327EF19);
	r3 = D(r3, s[0][1][1], 0xE404F905, 0x1AD512EB, 0xF7EB04FC, 0x10F704F9);
	r4 = D(r4, s[0][1][1], 0xFF0518E7, 0x0A0906FA, 0xF31EFE01, 0x0A180EF7);
	r5 = D(r5, s[0][1][1], 0xFE13FDFB, 0xF2F6CC17, 0xE902F2FA, 0x06020302);
	r6 = D(r6, s[0][1][1], 0xF717040C, 0xF906E40C, 0xFAF70DF9, 0x01F80202);
	r7 = D(r7, s[0][1][1], 0x1F1DF0F8, 0xF00BEBF8, 0x060B0FFD, 0x0D1AFE17);
	r0 = D(r0, s[0][1][2], 0x0DCE03FD, 0xE802DA15, 0xF90112F4, 0xFE0208FA);
	r1 = D(r1, s[0][1][2], 0x02DBEB04, 0x13120E1B, 0xF4F70904, 0x0408F2F8);
	r2 = D(r2, s[0][1][2], 0x08FA0DFA, 0x0AF5FB0B, 0xEE08F8FB, 0xEB1F01F9);
	r3 = D(r3, s[0][1][2], 0x050F08F7, 0xFC12E61D, 0x16F31003, 0x0204F500);
	r4 = D(r4, s[0][1][2], 0xF80603FE, 0xFD0C060A, 0xEE08FC0C, 0x0806F9FE);
	r5 = D(r5, s[0][1][2], 0xF0FA0D01, 0xFB0EFAFB, 0x023CF108, 0x01010305);
	r6 = D(r6, s[0][1][2], 0xFA02E4FE, 0x05EC24E1, 0xFBF8F9F8, 0x05180E08);
	r7 = D(r7, s[0][1][2], 0xFA0CEC04, 0x040A08EE, 0x0DF9EBFA, 0xFBFF10EB);
	r0 = D(r0, s[0][2][0], 0x05101000, 0x111E1509, 0xF52BD90B, 0xF3F5F703);
	r1 = D(r1, s[0][2][0], 0xF40318FC, 0xFC0B0905, 0xFF0405FC, 0xEEF70208);
	r2 = D(r2, s[0][2][0], 0xEA13F6FE, 0x040C11E8, 0x02F5FA0E, 0x12F5F707);
	r3 = D(r3, s[0][2][0], 0xF8EE0C0B, 0xEA0FFEFD, 0x12EEEF06, 0x0412ED07);
	r4 = D(r4, s[0][2][0], 0xE2FD05FC, 0xC7FB1014, 0x16E5101D, 0xFA0DF8EE);
	r5 = D(r5, s[0][2][0], 0x0BF9F60D, 0x1005FFF4, 0xD6EE1A08, 0xFEFE03FC);
	r6 = D(r6, s[0][2][0], 0xFBF60B13, 0xEFF603FF, 0x1E09D8FC, 0x110E0609);
	r7 = D(r7, s[0][2][0], 0xF3F01DF6, 0x102F080C, 0xF2070C00, 0xBFFE08FB);
	r0 = D(r0, s[0][2][1], 0x17E0FDFB, 0x0CFDFF02, 0xF80D12FA, 0xFAF901FE);
	r1 = D(r1, s[0][2][1], 0xF310ED00, 0xF122F5F6, 0xF5FFF300, 0xF9E6F7F7);
	r2 = D(r2, s[0][2][1], 0xF7F3FA18, 0xEB3206FE, 0xFEF9F5F9, 0x0F141CF4);
	r3 = D(r3, s[0][2][1], 0x08F4F9F0, 0x191B05FF, 0xF2E40C06, 0x0B0905FF);
	r4 = D(r4, s[0][2][1], 0xE6F6F00F, 0xE00D0EFA, 0x06F508FF, 0xFD08F409);
	r5 = D(r5, s[0][2][1], 0xFEFA0F06, 0xFC0B0FF2, 0x061DF8F6, 0x000108F3);
	r6 = D(r6, s[0][2][1], 0x0CF5F1FA, 0x0F2007FC, 0x25F50A06, 0x181BFFEC);
	r7 = D(r7, s[0][2][1], 0x091B0423, 0x0E1F0A0A, 0x04ECFF06, 0xE117FBF0);
	r0 = D(r0, s[0][2][2], 0xF2EBFC0B, 0x12FA1507, 0xFE16F4FC, 0x0D0A0E15);
	r1 = D(r1, s[0][2][2], 0x0010F700, 0x11EAFBF4, 0xF60DF0FE, 0x0CF209FC);
	r2 = D(r2, s[0][2][2], 0xF104FA10, 0xFF1C0DDB, 0x0E14FF0D, 0xF80504FE);
	r3 = D(r3, s[0][2][2], 0xFD0100F8, 0x0A0D16FF, 0xFDF1F5F0, 0xFEEFF3F2);
	r4 = D(r4, s[0][2][2], 0x12F1FA0D, 0xF00702FE, 0x0218BCF5, 0xFC060603);
	r5 = D(r5, s[0][2][2], 0xFF1CFEF6, 0x08011806, 0x05FB11FB, 0x090B0B05);
	r6 = D(r6, s[0][2][2], 0xF3F9F403, 0xF6EDDC18, 0xF3EBF2EE, 0x021108ED);
	r7 = D(r7, s[0][2][2], 0xF80406F8, 0x02FA03F8, 0x06DA1005, 0x0307FC01);
	r0 = D(r0, s[1][0][0], 0xEBF91101, 0x05FC07F8, 0xF6F023BA, 0x02F6F405);
	r1 = D(r1, s[1][0][0], 0xF50502FD, 0x0503170A, 0x1BF5F2F8, 0xFC111008);
	r2 = D(r2, s[1][0][0], 0xDAFA00FF, 0x12EC0B0C, 0xF3101804, 0xFE0FF3F9);
	r3 = D(r3, s[1][0][0], 0xF8040700, 0xF401FFF6, 0x1216FDF8, 0xEC0D1A06);
	r4 = D(r4, s[1][0][0], 0x0C02FAFE, 0xFDEC16F6, 0x06F0F108, 0x00080F06);
	r5 = D(r5, s[1][0][0], 0x15FEF009, 0x141FFAFC, 0xFB0AFE0E, 0xFA08F4F0);
	r6 = D(r6, s[1][0][0], 0xD5060602, 0xFDE700FD, 0xE6FBFAF2, 0xF702F302);
	r7 = D(r7, s[1][0][0], 0xDCE2E6FB, 0xF7FB0411, 0x10F70D07, 0xF3E70008);
	r0 = D(r0, s[1][0][1], 0x0D01EB00, 0x00FDF9EF, 0xCD00FBF3, 0x0412DAF9);
	r1 = D(r1, s[1][0][1], 0xEC210302, 0x1BDE1511, 0x060402FB, 0x12F91011);
	r2 = D(r2, s[1][0][1], 0x0D07FF04, 0xF2DC0E00, 0x1200F102, 0xEE09FE00);
	r3 = D(r3, s[1][0][1], 0x020E1100, 0x12FD0A0B, 0x21FCF8F8, 0x12192011);
	r4 = D(r4, s[1][0][1], 0xEBF81AFD, 0xFF02F6FE, 0x07F903F5, 0x05E9FF0E);
	r5 = D(r5, s[1][0][1], 0x0CFCFA16, 0x0C11E704, 0x22FF07F9, 0x0EF91001);
	r6 = D(r6, s[1][0][1], 0x110E0102, 0xF40D07FF, 0xF114E3FA, 0x02021909);
	r7 = D(r7, s[1][0][1], 0xE7FEEA0C, 0xF103FD14, 0xEFF1F7FB, 0xF603F4EF);
	r0 = D(r0, s[1][0][2], 0xEFF40011, 0xF6FA0207, 0xE019EAF0, 0x09220DF8);
	r1 = D(r1, s[1][0][2], 0x160DF607, 0xEC03F4F1, 0xF4FFF9FB, 0xF50704F4);
	r2 = D(r2, s[1][0][2], 0xFFF4F0F5, 0xF4E90500, 0xF403EFFE, 0xFF08F401);
	r3 = D(r3, s[1][0][2], 0x09FF0901, 0x1BEFDC04, 0xEFF404FE, 0x1402FBF8);
	r4 = D(r4, s[1][0][2], 0x05030E0A, 0xF30E1414, 0x0E04EBFA, 0x0210030A);
	r5 = D(r5, s[1][0][2], 0xF0FF020A, 0xEA15F4FD, 0x0A0907F8, 0x0801FDFC);
	r6 = D(r6, s[1][0][2], 0x16130B0D, 0xE900F405, 0xF603F803, 0xEFF8E6F3);
	r7 = D(r7, s[1][0][2], 0x0A1125FF, 0xE1F70109, 0x08FF1B03, 0x13E5F3F6);
	r0 = D(r0, s[1][1][0], 0x10F607F5, 0xEC09FF04, 0x22EA03FB, 0xF3E01D0D);
	r1 = D(r1, s[1][1][0], 0xC2E10AFD, 0xF8FF0005, 0x0EF00205, 0xFBF60C0E);
	r2 = D(r2, s[1][1][0], 0xF90D04FA, 0x1DFFF6FB, 0x0DFD06FC, 0x071B22FD);
	r3 = D(r3, s[1][1][0], 0x07F90208, 0x30EA0F0E, 0xFE001010, 0x1513E107);
	r4 = D(r4, s[1][1][0], 0x050DC705, 0x00FE00E4, 0x1701FFFE, 0x1003F404);
	r5 = D(r5, s[1][1][0], 0x0B1B0C1B, 0x04FFFD06, 0xF00A11FB, 0x1D0C06FB);
	r6 = D(r6, s[1][1][0], 0xF3FB06F2, 0xFE140E05, 0x0A0901FF, 0xFC0BFAEE);
	r7 = D(r7, s[1][1][0], 0xEEFAF703, 0xEF110206, 0x1C1BECF5, 0x0CF61A01);
	r0 = D(r0, s[1][1][1], 0xCFFC0009, 0xFEF510F8, 0x0EE201EB, 0x060906F0);
	r1 = D(r1, s[1][1][1], 0xF3F2020F, 0xDF1A15F9, 0xE7130CFA, 0xECE9FE03);
	r2 = D(r2, s[1][1][1], 0x2003F501, 0x0B0BD5FE, 0xE1F40606, 0xDFF6F5FC);
	r3 = D(r3, s[1][1][1], 0xEDF2F0F7, 0xF60CDDF3, 0x0202180E, 0x0111F3FD);
	r4 = D(r4, s[1][1][1], 0x01F5FF00, 0xF3EAFFFE, 0x00ECFB0D, 0x07040B19);
	r5 = D(r5, s[1][1][1], 0x0004FA0E, 0xF7F0020A, 0xFE0B06FC, 0x1AF7F8F6);
	r6 = D(r6, s[1][1][1], 0x07F916F6, 0xFAF5C504, 0xE3F1F7FF, 0xFDE9F1F0);
	r7 = D(r7, s[1][1][1], 0x1610EE08, 0x02FBEB09, 0x0F1B07F7, 0x0D05F8FF);
	r0 = D(r0, s[1][1][2], 0x04111D0E, 0xFDF3E103, 0xF10B0B00, 0xD40DFB04);
	r1 = D(r1, s[1][1][2], 0x13F0FEFC, 0xF00BEEF6, 0xF1FB08F1, 0xF905F5F9);
	r2 = D(r2, s[1][1][2], 0xFBFE0208, 0x1E1720FB, 0xE903E809, 0x0405FC04);
	r3 = D(r3, s[1][1][2], 0x0309F9FE, 0x13FBFB0D, 0x0BE8FC0B, 0x1CF804F6);
	r4 = D(r4, s[1][1][2], 0xE0FAE7F1, 0x000A14FB, 0xF9EC0406, 0xFAFAEF01);
	r5 = D(r5, s[1][1][2], 0xF3FBFE0C, 0x15FC29FE, 0x2BF00AF3, 0xF4021A04);
	r6 = D(r6, s[1][1][2], 0xE7F10200, 0xE3142AFB, 0x02FCF401, 0x0E0410EF);
	r7 = D(r7, s[1][1][2], 0x12F801F0, 0x190F06FF, 0x030AD0F1, 0xFD0A11F9);
	r0 = D(r0, s[1][2][0], 0x1413F6F9, 0xFC10FC18, 0x17FBFDFC, 0x1801000A);
	r1 = D(r1, s[1][2][0], 0x08F304EB, 0x0FF8EF04, 0xD9041B0E, 0x0F0CEFFF);
	r2 = D(r2, s[1][2][0], 0x05FE0405, 0xF8FCF403, 0xF7E901EB, 0xFDF90B1D);
	r3 = D(r3, s[1][2][0], 0x0DF8FD06, 0xF3120A04, 0x09031204, 0x13FC0506);
	r4 = D(r4, s[1][2][0], 0x0F0010FF, 0x15F0F2EF, 0x1E120901, 0x0BF510F8);
	r5 = D(r5, s[1][2][0], 0xF0F90704, 0xF1F60C04, 0xFAEAF50C, 0xED11090B);
	r6 = D(r6, s[1][2][0], 0xF0FFE5F1, 0xFEE5E703, 0x12010F01, 0x040212FC);
	r7 = D(r7, s[1][2][0], 0xFD0E0802, 0xFCF604FC, 0x0D1003FD, 0x02FCFFFC);
	r0 = D(r0, s[1][2][1], 0x18F6F0F5, 0xF705050B, 0xE00804E5, 0x10F5F5FE);
	r1 = D(r1, s[1][2][1], 0x0606EE07, 0x0F02EE07, 0xF9EFFE0B, 0x24F5F6F2);
	r2 = D(r2, s[1][2][1], 0xD9FC0E01, 0x13FB0AFC, 0x2A0200FF, 0x120902F9);
	r3 = D(r3, s[1][2][1], 0xEC02F703, 0x1009F106, 0x0F0AEE04, 0xFEF6FB0A);
	r4 = D(r4, s[1][2][1], 0xF607FA06, 0x0E12FBFA, 0x0B02F3FC, 0x03F8120F);
	r5 = D(r5, s[1][2][1], 0x0FF3FD14, 0xFCE301FC, 0x03EBED0E, 0xFBEF0C04);
	r6 = D(r6, s[1][2][1], 0xF3FD0EFA, 0xF41808EC, 0x0AFC180D, 0x06F70DFF);
	r7 = D(r7, s[1][2][1], 0x150BE004, 0x07F90606, 0xF606E6FD, 0x0304EBFF);
	r0 = D(r0, s[1][2][2], 0xED07F7FD, 0xDC0EF009, 0x03FE0AEE, 0xFAF10C01);
	r1 = D(r1, s[1][2][2], 0x09D80FFE, 0x15FC0CFC, 0x0306ED00, 0x090A00F1);
	r2 = D(r2, s[1][2][2], 0x0C09010B, 0xF20AD100, 0xF203FCF8, 0xF604F7F9);
	r3 = D(r3, s[1][2][2], 0xEE0201F9, 0xFC02FCEE, 0x0A1002F3, 0x0FF3FBF5);
	r4 = D(r4, s[1][2][2], 0x08FA0901, 0xFAFA06ED, 0x2E1109F2, 0x0407F907);
	r5 = D(r5, s[1][2][2], 0x00080F0C, 0xD0F71F07, 0xEC02FB08, 0xF819F808);
	r6 = D(r6, s[1][2][2], 0x0EF10A01, 0xFDF3F70F, 0xFF020B0B, 0x0F061A07);
	r7 = D(r7, s[1][2][2], 0x0D110EF5, 0x070AF10D, 0xEC01FEFA, 0x050AE807);
	s[0][0][0] = G[14][xy.y+0][xy.x+0]; s[0][0][1] = G[14][xy.y+0][xy.x+1];
	s[0][0][2] = G[14][xy.y+0][xy.x+2]; s[0][1][0] = G[14][xy.y+1][xy.x+0];
	s[0][1][1] = G[14][xy.y+1][xy.x+1]; s[0][1][2] = G[14][xy.y+1][xy.x+2];
	s[0][2][0] = G[14][xy.y+2][xy.x+0]; s[0][2][1] = G[14][xy.y+2][xy.x+1];
	s[0][2][2] = G[14][xy.y+2][xy.x+2]; s[1][0][0] = G[15][xy.y+0][xy.x+0];
	s[1][0][1] = G[15][xy.y+0][xy.x+1]; s[1][0][2] = G[15][xy.y+0][xy.x+2];
	s[1][1][0] = G[15][xy.y+1][xy.x+0]; s[1][1][1] = G[15][xy.y+1][xy.x+1];
	s[1][1][2] = G[15][xy.y+1][xy.x+2]; s[1][2][0] = G[15][xy.y+2][xy.x+0];
	s[1][2][1] = G[15][xy.y+2][xy.x+1]; s[1][2][2] = G[15][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x0A0B1C06, 0xF3DDFEF1, 0x0A24FCDD, 0xFCEDFC1B);
	r1 = D(r1, s[0][0][0], 0x110B0824, 0x052213E8, 0xE9FCFAF3, 0x04FE1101);
	r2 = D(r2, s[0][0][0], 0x020610EC, 0x1313F8FB, 0x15FB12FE, 0xFD03FDF8);
	r3 = D(r3, s[0][0][0], 0xF5050AD8, 0xE8F00707, 0x00E20C11, 0xFCF1140A);
	r4 = D(r4, s[0][0][0], 0xFD0C0612, 0x09E9FAFD, 0x02E1D1DB, 0x04F40A0E);
	r5 = D(r5, s[0][0][0], 0x01F315F6, 0xDC062AF8, 0x2015FD02, 0xFF3314FF);
	r6 = D(r6, s[0][0][0], 0xF0FFE1ED, 0xEEEA06F3, 0xFD0C190A, 0x1BF2F0E8);
	r7 = D(r7, s[0][0][0], 0x0D1FD007, 0x070BDA03, 0x0601F60D, 0xDDFAE1E4);
	r0 = D(r0, s[0][0][1], 0x15D23809, 0xF6CCF0F5, 0xDB4D241A, 0x23E405E5);
	r1 = D(r1, s[0][0][1], 0xFDFF21F5, 0xF8EBF0F7, 0xFC0B08FD, 0xFCF3F003);
	r2 = D(r2, s[0][0][1], 0x0BFAED09, 0x1B0FDFEC, 0x16F5F8F4, 0x04FD0D11);
	r3 = D(r3, s[0][0][1], 0x013CF916, 0xD7C3F404, 0xF715FBE8, 0xEDE00CFE);
	r4 = D(r4, s[0][0][1], 0xEFEBFC11, 0x1B08FBEE, 0x01FCFB09, 0x07130EFE);
	r5 = D(r5, s[0][0][1], 0x040C00F5, 0xF51E0910, 0x02E00304, 0x17FAFB0C);
	r6 = D(r6, s[0][0][1], 0xD8363BEE, 0xFC00ECF5, 0x04EFF9EA, 0x06081018);
	r7 = D(r7, s[0][0][1], 0x020AFD09, 0xE9F60CFC, 0x1501F2EA, 0xF121EE00);
	r0 = D(r0, s[0][0][2], 0xF306FEFF, 0xEFEA0DF7, 0xFB140C81, 0xF9F1170B);
	r1 = D(r1, s[0][0][2], 0xEF0AF4ED, 0xEEEA0914, 0xF7070008, 0xFF030407);
	r2 = D(r2, s[0][0][2], 0x0304F5F1, 0x000DF010, 0x03E9F9FC, 0x13000BE2);
	r3 = D(r3, s[0][0][2], 0xFA08F606, 0xE9EB15EA, 0xFCFCF0ED, 0xFCEA201A);
	r4 = D(r4, s[0][0][2], 0xF10A0603, 0x000407F7, 0x1FF50F10, 0xF601F704);
	r5 = D(r5, s[0][0][2], 0xF3FEFA07, 0x0CF9F3F8, 0xE2FFE512, 0x08F8F009);
	r6 = D(r6, s[0][0][2], 0xFF0AE011, 0xEE0A0410, 0xF413000E, 0x1B07FE20);
	r7 = D(r7, s[0][0][2], 0x0902EDEB, 0xF5CC1313, 0x0803F208, 0xF3E914ED);
	r0 = D(r0, s[0][1][0], 0x0EF415FD, 0x063EF8FD, 0x183418FA, 0xF1EB1CF5);
	r1 = D(r1, s[0][1][0], 0xFAE6D4F7, 0x04000B12, 0x0C18130B, 0xFE11FFFB);
	r2 = D(r2, s[0][1][0], 0xF7FC0DF0, 0x17C4DDED, 0x08DF00F7, 0xEB06110E);
	r3 = D(r3, s[0][1][0], 0xF81610F0, 0xE312F5F9, 0x0D1B0CF4, 0x04F9F7FE);
	r4 = D(r4, s[0][1][0], 0x0110FCE5, 0xFF1E0217, 0x0719171D, 0x0125F103);
	r5 = D(r5, s[0][1][0], 0x00130E0C, 0xF20E1BEF, 0xED3400FB, 0xEA9DF402);
	r6 = D(r6, s[0][1][0], 0x0CD3FB04, 0xF80C0D07, 0x1DEFFDF8, 0xECFE0A04);
	r7 = D(r7, s[0][1][0], 0x09D538F2, 0x1AEDF30A, 0xEAF0FAFC, 0xE107F3F9);
	r0 = D(r0, s[0][1][1], 0x1DB27FFE, 0x00FAE205, 0x1E50ECE3, 0xD117150C);
	r1 = D(r1, s[0][1][1], 0x06D40E07, 0x0D19F9F0, 0xF81507FA, 0xFEC4F01B);
	r2 = D(r2, s[0][1][1], 0x0C0AEB02, 0xEB040501, 0xF80DFF0B, 0x1006F2FD);
	r3 = D(r3, s[0][1][1], 0xF5AD05F7, 0xF8F803FD, 0x01F1FF07, 0x0309FAF1);
	r4 = D(r4, s[0][1][1], 0x03F3F8F6, 0xF6FAF316, 0xF412FEF5, 0xFD2204FA);
	r5 = D(r5, s[0][1][1], 0x0BF70404, 0xFDED04F2, 0x09FD07FC, 0x07980CED);
	r6 = D(r6, s[0][1][1], 0x091E15FC, 0x0208F802, 0xFC01F7F6, 0x0E18FB02);
	r7 = D(r7, s[0][1][1], 0xFD07F6FD, 0xF619FEF8, 0xFC0712D8, 0x0EE80D0A);
	r0 = D(r0, s[0][1][2], 0x081B0501, 0x00F81916, 0xC9105510, 0x0C1FE9FE);
	r1 = D(r1, s[0][1][2], 0xF7FC05F6, 0xEC11FC03, 0x0900F312, 0x2105120A);
	r2 = D(r2, s[0][1][2], 0xFF0D01F4, 0xE720D11A, 0xF4131D02, 0xF200F818);
	r3 = D(r3, s[0][1][2], 0x03FDF9FE, 0xEB1D0512, 0x0F0B0102, 0xFF1001E0);
	r4 = D(r4, s[0][1][2], 0x13F10ED6, 0x0AEA0709, 0xF507F103, 0x1009FD0A);
	r5 = D(r5, s[0][1][2], 0x02F9FC05, 0x190FE117, 0x0717000C, 0x0113130F);
	r6 = D(r6, s[0][1][2], 0x03E6F911, 0xF8D3F5FD, 0xFC06F9E4, 0xDD03F8DF);
	r7 = D(r7, s[0][1][2], 0xF5F7F501, 0xFD15F8FB, 0x0301F102, 0xFE06F51A);
	r0 = D(r0, s[0][2][0], 0x021FF9F9, 0x07DA06FC, 0xFC20050B, 0xED04E50B);
	r1 = D(r1, s[0][2][0], 0x00D015C5, 0xFA020803, 0xF20B05F6, 0x08FE1111);
	r2 = D(r2, s[0][2][0], 0x0181F8F0, 0xE6E60709, 0x08F90213, 0x28F32515);
	r3 = D(r3, s[0][2][0], 0xFCD80F1A, 0x1148060C, 0x06F4FA05, 0xEC13FC1A);
	r4 = D(r4, s[0][2][0], 0x04E9F8F6, 0xF812F3FC, 0x0E3DE112, 0x0750FFFA);
	r5 = D(r5, s[0][2][0], 0xF73AE9EA, 0x0CDD0615, 0x0D0917F6, 0xF507EC15);
	r6 = D(r6, s[0][2][0], 0xF9D7FB03, 0xFEE71CFF, 0x0FFCDCFB, 0x0819EE04);
	r7 = D(r7, s[0][2][0], 0xEB2ECC25, 0x01D700FF, 0xE518E3FB, 0xE30328FB);
	r0 = D(r0, s[0][2][1], 0x060EDA18, 0x00010DE1, 0x1733F1EC, 0xFBCF1409);
	r1 = D(r1, s[0][2][1], 0x0AC51B0A, 0xFF12070E, 0xE40DF20C, 0x0017F7F8);
	r2 = D(r2, s[0][2][1], 0xF9041501, 0xF3FB0F0A, 0xF3D70200, 0xF81A0A00);
	r3 = D(r3, s[0][2][1], 0xEFEFF903, 0x13F114F8, 0x15F706FD, 0x0FE90104);
	r4 = D(r4, s[0][2][1], 0x03FC180C, 0xFF09DF09, 0xFC020715, 0xF7FCFA06);
	r5 = D(r5, s[0][2][1], 0x0CFDFC08, 0x0B0AF9FC, 0x111FF9FF, 0x170C07FA);
	r6 = D(r6, s[0][2][1], 0x17FCDB06, 0xF32E06F8, 0xEF21010A, 0xFE091CFA);
	r7 = D(r7, s[0][2][1], 0xD9C50EFA, 0x0D150108, 0x020107F9, 0xEC0FE1EF);
	r0 = D(r0, s[0][2][2], 0xE802F8FB, 0x121906F8, 0xE2140AF3, 0xDB1F02E0);
	r1 = D(r1, s[0][2][2], 0xE4F00201, 0x06FD06F5, 0x0310F7D7, 0xF214F7EB);
	r2 = D(r2, s[0][2][2], 0xE6FFF2FC, 0xFCF9F2FF, 0x18D1ED1F, 0xEFFCFE0A);
	r3 = D(r3, s[0][2][2], 0x02FB0604, 0xEA1EEAFB, 0xF70EFF08, 0x0F00DFE9);
	r4 = D(r4, s[0][2][2], 0xC5F81A02, 0xE0E80B0A, 0x092AF0F9, 0x001302FF);
	r5 = D(r5, s[0][2][2], 0x0CEDF20E, 0xFCC9F60F, 0x18EEE9EF, 0xF617FE0D);
	r6 = D(r6, s[0][2][2], 0x0D3301FD, 0x011018FE, 0xEEE9FD05, 0x0C06FB04);
	r7 = D(r7, s[0][2][2], 0xF8F9EE10, 0x15F10C0B, 0xF518F4FD, 0x070D11E8);
	r0 = D(r0, s[1][0][0], 0x090910F4, 0x09FFEC13, 0xF62110A9, 0x0CFCFBDC);
	r1 = D(r1, s[1][0][0], 0x1621EB09, 0xFF0A030A, 0xECF2FF0F, 0xF41D0AE7);
	r2 = D(r2, s[1][0][0], 0xF4E31808, 0x15FEEBF4, 0xFEFDF8F2, 0x06D503FB);
	r3 = D(r3, s[1][0][0], 0x010A050D, 0x0801E7E9, 0x05E81AEB, 0xECFB18FD);
	r4 = D(r4, s[1][0][0], 0x0D04F9EB, 0x11FCFAFC, 0x0BFC0C01, 0xFE07F501);
	r5 = D(r5, s[1][0][0], 0x0FF61C01, 0xE3050D0C, 0xEE0A14FB, 0xF50A0AF6);
	r6 = D(r6, s[1][0][0], 0xE80515F9, 0x03E2FFFD, 0xF0EFFE00, 0xFDFA0407);
	r7 = D(r7, s[1][0][0], 0x19EBFB0E, 0x1A145B05, 0x18DCE4FE, 0x0F0DF108);
	r0 = D(r0, s[1][0][1], 0xFDF41201, 0xFBF5E9FA, 0xF3A30BF9, 0xEFFFFFFA);
	r1 = D(r1, s[1][0][1], 0x1507EF08, 0xF5FEFAF6, 0xF313FAEE, 0x0B111DF1);
	r2 = D(r2, s[1][0][1], 0xF5020E04, 0xFAF0DAF4, 0x08EF0E07, 0xEBEBF70C);
	r3 = D(r3, s[1][0][1], 0x0609FB0A, 0x0A01FB06, 0xF8D003FB, 0xF70AF103);
	r4 = D(r4, s[1][0][1], 0x19FD05F0, 0x0CE510FF, 0xFF031E01, 0x030BF603);
	r5 = D(r5, s[1][0][1], 0x04ED1CFB, 0xF2FA07FB, 0xF2220914, 0x041902F8);
	r6 = D(r6, s[1][0][1], 0x130025F3, 0x081C14F0, 0x0603F6F1, 0xFAFD0BFF);
	r7 = D(r7, s[1][0][1], 0xF4E7F2F6, 0x080516F3, 0xFA0009F3, 0xF6EE0A10);
	r0 = D(r0, s[1][0][2], 0xF8F50119, 0xE8FC0007, 0xFA0FF40C, 0xF20D12EC);
	r1 = D(r1, s[1][0][2], 0x0605050E, 0x08E7EBF2, 0x020A0AF3, 0xFBFD0A0F);
	r2 = D(r2, s[1][0][2], 0xF4E5F203, 0x0BA908F8, 0xF0E41AF8, 0xFA040512);
	r3 = D(r3, s[1][0][2], 0xF70009FD, 0x13F4FC26, 0x060DF106, 0x07FDFEF2);
	r4 = D(r4, s[1][0][2], 0xF0F40204, 0xF5F90400, 0x010B0D04, 0xF809F6FE);
	r5 = D(r5, s[1][0][2], 0xFE05F7FF, 0xF408F8FB, 0x0412FD13, 0x23F6F303);
	r6 = D(r6, s[1][0][2], 0xFC18E3FB, 0x07E6F1FA, 0x1D0EFB00, 0x03F103EE);
	r7 = D(r7, s[1][0][2], 0x0807FA02, 0x07F3E412, 0xF3FEFC08, 0x07FEF5F4);
	r0 = D(r0, s[1][1][0], 0x05F5FDFC, 0xFC07FE0A, 0x0F2DF9FC, 0xF60601F9);
	r1 = D(r1, s[1][1][0], 0x15F2DAF4, 0x060BFEED, 0x0AECF6E8, 0x0007FD03);
	r2 = D(r2, s[1][1][0], 0xEFDE0B13, 0xFEF8FC0A, 0x0206EFFD, 0xDFE72006);
	r3 = D(r3, s[1][1][0], 0xEDFA000B, 0xE0001209, 0x0E1D00F3, 0x0D160FF0);
	r4 = D(r4, s[1][1][0], 0x20DA100B, 0x1CF1F7FE, 0xF3E7E2EE, 0xFF05ECFF);
	r5 = D(r5, s[1][1][0], 0xEF120FF3, 0x011111ED, 0xF7FE0316, 0x19F8FDF0);
	r6 = D(r6, s[1][1][0], 0xEFFED404, 0xF903F508, 0xF8F7FBFB, 0x0AEF1501);
	r7 = D(r7, s[1][1][0], 0xF80401EE, 0x0B0501FF, 0x0FE7FB01, 0xDEF60A02);
	r0 = D(r0, s[1][1][1], 0x0E0FF4FD, 0xFFDB0701, 0xECEE00C6, 0x0BF401F7);
	r1 = D(r1, s[1][1][1], 0xEA0BFAFA, 0x10DF0007, 0x01EEF0F9, 0x0F050C09);
	r2 = D(r2, s[1][1][1], 0x0B09F108, 0xE312F90D, 0x0706010A, 0x0DF80AFD);
	r3 = D(r3, s[1][1][1], 0x060CF608, 0xE1EE06FC, 0xF013F903, 0xFB08D105);
	r4 = D(r4, s[1][1][1], 0xEDDD0407, 0xE90A0801, 0x18FAE1FD, 0x05F608FB);
	r5 = D(r5, s[1][1][1], 0xF8F71502, 0x2911051F, 0x0BE920EF, 0x0BF62BF8);
	r6 = D(r6, s[1][1][1], 0x00F925FF, 0x1E0700F2, 0xE7FCF916, 0xF923F5FD);
	r7 = D(r7, s[1][1][1], 0x00F314F9, 0xF905FFFE, 0xEB0BFD08, 0xF90004FF);
	r0 = D(r0, s[1][1][2], 0xF3F9FD03, 0x1104F1F7, 0x0ABC0D08, 0xF4F603EA);
	r1 = D(r1, s[1][1][2], 0xF609F7F6, 0xE8100415, 0x0B1AEB0F, 0x030107F9);
	r2 = D(r2, s[1][1][2], 0x0D06F10C, 0xDD09170F, 0xF50BFF03, 0x1712EDED);
	r3 = D(r3, s[1][1][2], 0x1A090DF2, 0x04FCF0FC, 0x25FEFFF2, 0x0C041A0E);
	r4 = D(r4, s[1][1][2], 0xFF0007FB, 0x021D0506, 0x1207F7DF, 0xF30BFB01);
	r5 = D(r5, s[1][1][2], 0xFF00F907, 0x04FD070E, 0x06E4FAF8, 0xF3F7F508);
	r6 = D(r6, s[1][1][2], 0x1F0CE400, 0xFCDC0214, 0x0311F0E0, 0x0DE501FB);
	r7 = D(r7, s[1][1][2], 0x0DFCF1DF, 0xEDEEED13, 0x0CF20A0C, 0x0F05F7F8);
	r0 = D(r0, s[1][2][0], 0x06F0FF02, 0x00F60809, 0x02EEFF03, 0x0FF5E80F);
	r1 = D(r1, s[1][2][0], 0x0009F003, 0xFE22FEFE, 0x0008FA11, 0xF50BEFF2);
	r2 = D(r2, s[1][2][0], 0xFAFA0202, 0xFCE40705, 0xEF0B03FD, 0xC21BFB11);
	r3 = D(r3, s[1][2][0], 0xEDF307F4, 0xF8F10B0C, 0x1009030D, 0x15130207);
	r4 = D(r4, s[1][2][0], 0xF2F4F903, 0x0C02E4FB, 0x0C0FFCF7, 0x0506EE02);
	r5 = D(r5, s[1][2][0], 0x07FEF216, 0x1E0AE1ED, 0xF70B05F7, 0xEDFAF508);
	r6 = D(r6, s[1][2][0], 0x09F2DB21, 0xF916EFF8, 0x150C080F, 0xE6F7FB09);
	r7 = D(r7, s[1][2][0], 0x0108FA0F, 0xFDFB01FC, 0x0411FA08, 0xE3F0FCFD);
	r0 = D(r0, s[1][2][1], 0x040BFB0A, 0x060901FA, 0xE815F803, 0xD90B061A);
	r1 = D(r1, s[1][2][1], 0xE1FF2CF5, 0x11E00506, 0x1101070A, 0x17E8F80E);
	r2 = D(r2, s[1][2][1], 0x1B1EE606, 0x0A0510D9, 0xF2F00207, 0x06EE0DD6);
	r3 = D(r3, s[1][2][1], 0x03F601F9, 0xF61D1BF2, 0xBE03F1EB, 0xFF0205F6);
	r4 = D(r4, s[1][2][1], 0xE91E020B, 0xE31102F6, 0x01010326, 0x06140003);
	r5 = D(r5, s[1][2][1], 0x0B0411F3, 0xF7E3F4F5, 0x170CECF3, 0xF1FEF010);
	r6 = D(r6, s[1][2][1], 0xE8FAF7F9, 0x0EDD0723, 0xD60A0502, 0x0BFC04F5);
	r7 = D(r7, s[1][2][1], 0xE0FE091F, 0x02FB01FA, 0xEAEAF0F6, 0x16FB0800);
	r0 = D(r0, s[1][2][2], 0xE303F2E9, 0x0706F4FF, 0xCF0BEA09, 0xEA13EB1C);
	r1 = D(r1, s[1][2][2], 0xF3F31A0C, 0xF00D0120, 0xFC050AF8, 0xF2FA000A);
	r2 = D(r2, s[1][2][2], 0x0704FBDD, 0x14F50DFF, 0x0712E3F1, 0xFDE600F2);
	r3 = D(r3, s[1][2][2], 0x11FB0506, 0x0BF201F1, 0xF1FEF20E, 0x0008EA02);
	r4 = D(r4, s[1][2][2], 0x182A0203, 0xFD1003F7, 0x11040610, 0x06F0F404);
	r5 = D(r5, s[1][2][2], 0xEEF5FEFA, 0xFB04130A, 0x04EEF70B, 0x0100F1FB);
	r6 = D(r6, s[1][2][2], 0xF70EFA08, 0xD73105F8, 0x0CE4061C, 0xFEF90E02);
	r7 = D(r7, s[1][2][2], 0x02FC02F7, 0xFAF5FDF2, 0xFFFAEFF3, 0xF503F6FE);
	f0 = vec4(r0) * 6.20001240e-05;
	f0 += vec4(3.943e-02, 3.601e-02, -3.913e-02, 1.136e-02);
	f0 = max(f0, vec4(0.0));
	imageStore(out_image, opos + ivec2(4, 0), f0);
	f1 = vec4(r1) * 6.20001240e-05;
	f1 += vec4(1.159e-02, 1.133e-02, 8.736e-03, -2.020e-02);
	f1 = max(f1, vec4(0.0));
	imageStore(out_image, opos + ivec2(5, 0), f1);
	f2 = vec4(r2) * 6.20001240e-05;
	f2 += vec4(-1.708e-03, 3.619e-02, -1.361e-02, 1.223e-02);
	f2 = max(f2, vec4(0.0));
	imageStore(out_image, opos + ivec2(4, 1), f2);
	f3 = vec4(r3) * 6.20001240e-05;
	f3 += vec4(8.443e-03, 3.261e-02, 2.470e-02, -2.374e-02);
	f3 = max(f3, vec4(0.0));
	imageStore(out_image, opos + ivec2(5, 1), f3);
	f4 = vec4(r4) * 6.20001240e-05;
	f4 += vec4(1.472e-02, 1.610e-02, 1.327e-02, -2.409e-01);
	f4 = max(f4, vec4(0.0));
	imageStore(out_image, opos + ivec2(6, 0), f4);
	f5 = vec4(r5) * 6.20001240e-05;
	f5 += vec4(-8.325e-02, -2.374e-02, -4.310e-03, -1.236e-02);
	f5 = max(f5, vec4(0.0));
	imageStore(out_image, opos + ivec2(7, 0), f5);
	f6 = vec4(r6) * 6.20001240e-05;
	f6 += vec4(-3.912e-03, 6.749e-04, 5.769e-03, -3.393e-02);
	f6 = max(f6, vec4(0.0));
	imageStore(out_image, opos + ivec2(6, 1), f6);
	f7 = vec4(r7) * 6.20001240e-05;
	f7 += vec4(4.654e-02, -1.508e-01, 6.954e-03, 2.020e-02);
	f7 = max(f7, vec4(0.0));
	imageStore(out_image, opos + ivec2(7, 1), f7);
}

//!DESC CuNNy-4x64-BILINEAR-TEST-conv2
//!HOOK LUMA
//!COMPUTE 64 16 8 8
//!BIND conv1
//!BIND LUMA
//!SAVE conv2
//!WIDTH LUMA.w 8 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_spirv_intrinsics : require
#extension GL_EXT_control_flow_attributes : require
spirv_instruction (extensions = ["SPV_KHR_integer_dot_product"], capabilities = [6019, 6018], id = 4450)
int dp4(int a, int b, spirv_literal int fmt);
#define D(r, s, a, b, c, d) ivec4(r.x + dp4(s, a, 0), r.y + dp4(s, b, 0), r.z + dp4(s, c, 0), r.w + dp4(s, d, 0))
shared int G[16][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(8, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			vec4 r, g, b, a;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(8, 2) + ivec2(1, 1)) * conv1_pt;
			r = conv1_gather(p, 0);
			g = conv1_gather(p, 1);
			b = conv1_gather(p, 2);
			a = conv1_gather(p, 3);
			vec4 v0 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v1 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v2 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v3 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(8, 2) + ivec2(3, 1)) * conv1_pt;
			r = conv1_gather(p, 0);
			g = conv1_gather(p, 1);
			b = conv1_gather(p, 2);
			a = conv1_gather(p, 3);
			vec4 v4 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v5 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v6 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v7 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(8, 2) + ivec2(5, 1)) * conv1_pt;
			r = conv1_gather(p, 0);
			g = conv1_gather(p, 1);
			b = conv1_gather(p, 2);
			a = conv1_gather(p, 3);
			vec4 v8 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v9 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v10 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v11 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(8, 2) + ivec2(7, 1)) * conv1_pt;
			r = conv1_gather(p, 0);
			g = conv1_gather(p, 1);
			b = conv1_gather(p, 2);
			a = conv1_gather(p, 3);
			vec4 v12 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v13 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v14 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v15 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			G[0][ay][ax] = int(packSnorm4x8(v0));
			G[1][ay][ax] = int(packSnorm4x8(v1));
			G[2][ay][ax] = int(packSnorm4x8(v2));
			G[3][ay][ax] = int(packSnorm4x8(v3));
			G[4][ay][ax] = int(packSnorm4x8(v4));
			G[5][ay][ax] = int(packSnorm4x8(v5));
			G[6][ay][ax] = int(packSnorm4x8(v6));
			G[7][ay][ax] = int(packSnorm4x8(v7));
			G[8][ay][ax] = int(packSnorm4x8(v8));
			G[9][ay][ax] = int(packSnorm4x8(v9));
			G[10][ay][ax] = int(packSnorm4x8(v10));
			G[11][ay][ax] = int(packSnorm4x8(v11));
			G[12][ay][ax] = int(packSnorm4x8(v12));
			G[13][ay][ax] = int(packSnorm4x8(v13));
			G[14][ay][ax] = int(packSnorm4x8(v14));
			G[15][ay][ax] = int(packSnorm4x8(v15));
		}
	}
	barrier();
	int s[2][3][3];
	ivec4 r0;
	ivec4 r1;
	ivec4 r2;
	ivec4 r3;
	ivec4 r4;
	ivec4 r5;
	ivec4 r6;
	ivec4 r7;
	vec4 f0;
	vec4 f1;
	vec4 f2;
	vec4 f3;
	vec4 f4;
	vec4 f5;
	vec4 f6;
	vec4 f7;
	r0 = ivec4(0);
	r1 = ivec4(0);
	r2 = ivec4(0);
	r3 = ivec4(0);
	r4 = ivec4(0);
	r5 = ivec4(0);
	r6 = ivec4(0);
	r7 = ivec4(0);
	s[0][0][0] = G[0][xy.y+0][xy.x+0]; s[0][0][1] = G[0][xy.y+0][xy.x+1];
	s[0][0][2] = G[0][xy.y+0][xy.x+2]; s[0][1][0] = G[0][xy.y+1][xy.x+0];
	s[0][1][1] = G[0][xy.y+1][xy.x+1]; s[0][1][2] = G[0][xy.y+1][xy.x+2];
	s[0][2][0] = G[0][xy.y+2][xy.x+0]; s[0][2][1] = G[0][xy.y+2][xy.x+1];
	s[0][2][2] = G[0][xy.y+2][xy.x+2]; s[1][0][0] = G[1][xy.y+0][xy.x+0];
	s[1][0][1] = G[1][xy.y+0][xy.x+1]; s[1][0][2] = G[1][xy.y+0][xy.x+2];
	s[1][1][0] = G[1][xy.y+1][xy.x+0]; s[1][1][1] = G[1][xy.y+1][xy.x+1];
	s[1][1][2] = G[1][xy.y+1][xy.x+2]; s[1][2][0] = G[1][xy.y+2][xy.x+0];
	s[1][2][1] = G[1][xy.y+2][xy.x+1]; s[1][2][2] = G[1][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xF4F223FF, 0x01EBE6FB, 0xF6EA04FF, 0xF3DE15FF);
	r1 = D(r1, s[0][0][0], 0x02180CFE, 0x03ECF905, 0x0C0A13F0, 0xF60D01FB);
	r2 = D(r2, s[0][0][0], 0x0EF30701, 0xEF090112, 0x060B0008, 0xF102F50B);
	r3 = D(r3, s[0][0][0], 0x0D2D0910, 0x0AF4FD15, 0x1CF6FC06, 0xFCFE04FA);
	r4 = D(r4, s[0][0][0], 0xD9DCFE0D, 0xC7E3FDB8, 0xE402F102, 0xFDF605EC);
	r5 = D(r5, s[0][0][0], 0x1AFC0908, 0xF011FEFF, 0xE3060410, 0x07F622DF);
	r6 = D(r6, s[0][0][0], 0x0A01FEF9, 0x05FCF7EC, 0x0701030D, 0x0BE5F1F1);
	r7 = D(r7, s[0][0][0], 0x03F704D4, 0xF8F8F809, 0xF8032300, 0xDE03FD05);
	r0 = D(r0, s[0][0][1], 0xF3FA0F05, 0x1514F3BA, 0x051A010B, 0x0D00051F);
	r1 = D(r1, s[0][0][1], 0xEEF40204, 0x09FCF903, 0x09E70CEE, 0xFD0E1010);
	r2 = D(r2, s[0][0][1], 0xF6EF1A15, 0xEFFC140D, 0x10FD0F03, 0xE703FB09);
	r3 = D(r3, s[0][0][1], 0xF60E1339, 0xEFF415F8, 0xD3EEED00, 0x1812F9F4);
	r4 = D(r4, s[0][0][1], 0x270F07F7, 0xDFFC0038, 0xFE0F0A06, 0xF005FBF5);
	r5 = D(r5, s[0][0][1], 0x040AF901, 0x0CD503F6, 0x0C010503, 0x1210EB99);
	r6 = D(r6, s[0][0][1], 0x0AEC261D, 0x07030107, 0xF4EB0481, 0xDD16FAE6);
	r7 = D(r7, s[0][0][1], 0x00F3FDE1, 0x0B140308, 0xEFDF0907, 0x1D0EF9F5);
	r0 = D(r0, s[0][0][2], 0x27080610, 0xF30DF80B, 0xFD0C0211, 0x060AF807);
	r1 = D(r1, s[0][0][2], 0x0BF606F1, 0x0EF4ECF7, 0xF204FCF4, 0x09FAFB0A);
	r2 = D(r2, s[0][0][2], 0x12130A05, 0xFBF600E6, 0x0C05F4EC, 0xF7F7FF0B);
	r3 = D(r3, s[0][0][2], 0xF5E90CD1, 0xE707FE13, 0xF1DEFAF6, 0xE7EEF700);
	r4 = D(r4, s[0][0][2], 0x0EDD0FF4, 0xE90406ED, 0xF7090302, 0xFFFC07F1);
	r5 = D(r5, s[0][0][2], 0x00D6F113, 0x2205FBF1, 0x000503E7, 0x0407EFB8);
	r6 = D(r6, s[0][0][2], 0x0AF7ED21, 0xEE19FB0E, 0x03FBEE01, 0x0808FD08);
	r7 = D(r7, s[0][0][2], 0xF002F612, 0x0D0CFAFA, 0xEBF5F907, 0xF1F9F20F);
	r0 = D(r0, s[0][1][0], 0xF4110819, 0x0E11F4F8, 0xE40E0000, 0x02F10501);
	r1 = D(r1, s[0][1][0], 0x051415F3, 0x09F7EA0C, 0x00EBE5F4, 0x0610EC0A);
	r2 = D(r2, s[0][1][0], 0x0306E30E, 0x12F9E8F7, 0xF4F71807, 0x1117F1FA);
	r3 = D(r3, s[0][1][0], 0x03F40BEF, 0x2200E703, 0xF1FF040D, 0x14F3F7F3);
	r4 = D(r4, s[0][1][0], 0xF700FAFF, 0xE70A13FD, 0x01FCFA07, 0xE4F505FD);
	r5 = D(r5, s[0][1][0], 0xF2F914F3, 0x0D08170A, 0x0500F816, 0x05080BE5);
	r6 = D(r6, s[0][1][0], 0xFDFDE4F2, 0x0D0C1510, 0xFEF2FA0B, 0xF4F8E510);
	r7 = D(r7, s[0][1][0], 0xF10707F2, 0x15FFE8F0, 0xF8EA0B07, 0xDF0402ED);
	r0 = D(r0, s[0][1][1], 0x00EDF8FF, 0x0EF3F201, 0x01F6F909, 0xF71BF70C);
	r1 = D(r1, s[0][1][1], 0xFCDDFD09, 0x0001DBE8, 0xF30907B1, 0x04010315);
	r2 = D(r2, s[0][1][1], 0x0D01E00C, 0x03E60A13, 0x170C0EEA, 0xF9F81309);
	r3 = D(r3, s[0][1][1], 0x04C0FFFB, 0x0605F1F2, 0x00FAE902, 0xF8FD0EEE);
	r4 = D(r4, s[0][1][1], 0x0E1FFEF8, 0x1BDEDF1E, 0xF61A03FE, 0xEE08E4EF);
	r5 = D(r5, s[0][1][1], 0x03DC1004, 0x13100301, 0xFA39EDF7, 0x00FCFFD3);
	r6 = D(r6, s[0][1][1], 0x0203FF29, 0xEA13F4FB, 0x14050C1C, 0xE8F719E0);
	r7 = D(r7, s[0][1][1], 0xF2F0110E, 0xF10D06DB, 0x0FE1F908, 0x1AD3F611);
	r0 = D(r0, s[0][1][2], 0x1110F507, 0x020E0C06, 0x00F20705, 0xF2F9E6FF);
	r1 = D(r1, s[0][1][2], 0x13F203FB, 0x091E10F4, 0xFB03EDF2, 0x05130504);
	r2 = D(r2, s[0][1][2], 0xFF02F0F6, 0x0E0A0E04, 0xF50208F2, 0xFB0A040C);
	r3 = D(r3, s[0][1][2], 0x16F8EF04, 0xFC010404, 0xF5FAFB15, 0x08EC0EEE);
	r4 = D(r4, s[0][1][2], 0x0CFF04E3, 0xFE2CF4ED, 0xE31304FE, 0xFF12F401);
	r5 = D(r5, s[0][1][2], 0xE90B010A, 0x00F40FFC, 0x17FA0200, 0xF9060CDF);
	r6 = D(r6, s[0][1][2], 0xF119D701, 0x0DE5050C, 0xEEF307FA, 0x0700010F);
	r7 = D(r7, s[0][1][2], 0xFAFAF409, 0x08FE00F7, 0x0CFBF603, 0x12FF08E7);
	r0 = D(r0, s[0][2][0], 0x00FB0100, 0xFC14190E, 0x03F300F4, 0x1EEE0812);
	r1 = D(r1, s[0][2][0], 0x0D0FF6C5, 0xF10411FB, 0x140F00F6, 0x00DD02F8);
	r2 = D(r2, s[0][2][0], 0xEA01F0FF, 0xFE0DF409, 0x0FFAFB07, 0x06F4FB05);
	r3 = D(r3, s[0][2][0], 0xFD0005F6, 0xF80AF0FB, 0x1204F306, 0x2222090B);
	r4 = D(r4, s[0][2][0], 0xE50BF206, 0x18FF0D04, 0x0CF7F602, 0x09F4FB0F);
	r5 = D(r5, s[0][2][0], 0xF1E2021B, 0xEDFFF5FE, 0xEE09FF03, 0xEBFAEEFD);
	r6 = D(r6, s[0][2][0], 0x0D1116F0, 0x100A14FC, 0xF7FB0BFF, 0xFC08F106);
	r7 = D(r7, s[0][2][0], 0xED0C00FF, 0xFDF4FF03, 0xF1FA0BFC, 0xFB0A07FA);
	r0 = D(r0, s[0][2][1], 0xFF0100F5, 0x07FCE5FA, 0x0AFB191A, 0x090DE5FC);
	r1 = D(r1, s[0][2][1], 0x18F7F6F1, 0x08F7F5F5, 0xFB0EEAF2, 0x0004FDF8);
	r2 = D(r2, s[0][2][1], 0x051AFC09, 0x2116EA0B, 0xF1F3F407, 0x0CEBF40E);
	r3 = D(r3, s[0][2][1], 0x0BE9FE00, 0xFE06DFFC, 0xFE0D00ED, 0x05F8F707);
	r4 = D(r4, s[0][2][1], 0xF7FC13F1, 0x1B16E901, 0x0C0107FD, 0xF30907EF);
	r5 = D(r5, s[0][2][1], 0x0C02E003, 0x0613F903, 0x13F62005, 0x01F50CFD);
	r6 = D(r6, s[0][2][1], 0xEBF1F30D, 0xE9E6EB10, 0xF7E8FCFF, 0x0FFD0EF8);
	r7 = D(r7, s[0][2][1], 0x04F808F2, 0xFAF50605, 0x08F91CF9, 0x0B00FCF5);
	r0 = D(r0, s[0][2][2], 0xF300FC07, 0xEDFAF601, 0x04FA0101, 0xFD002103);
	r1 = D(r1, s[0][2][2], 0x1BFBFAF7, 0xFBF614F6, 0x01F7FD14, 0xFFF5FFE4);
	r2 = D(r2, s[0][2][2], 0x0AEC1602, 0xF0081A11, 0x0510FDFE, 0xFC02F4E5);
	r3 = D(r3, s[0][2][2], 0x08F90506, 0x001BEEF7, 0x0000E1EF, 0x03140A06);
	r4 = D(r4, s[0][2][2], 0xFCF10A00, 0x10F40CF8, 0xF5FDF3F7, 0x07FCFE15);
	r5 = D(r5, s[0][2][2], 0x1500E7F2, 0x03E90D07, 0x10F30E05, 0x07EDF8FC);
	r6 = D(r6, s[0][2][2], 0xEB0311FD, 0x0E0108F9, 0xFBF206FF, 0x0B06EEF6);
	r7 = D(r7, s[0][2][2], 0x0F08F6EE, 0x07FA17FD, 0xFC11E7F4, 0xD5FD06FF);
	r0 = D(r0, s[1][0][0], 0x0D04F001, 0xFE00F912, 0xFBFB81FA, 0x0D320305);
	r1 = D(r1, s[1][0][0], 0xF7481508, 0xFBFAEDFD, 0x1B10ED08, 0xE51F18F5);
	r2 = D(r2, s[1][0][0], 0xE3DD1812, 0x090A25D0, 0x17D6060A, 0x0DE627F8);
	r3 = D(r3, s[1][0][0], 0xC808380A, 0x04162101, 0x090A07FF, 0xF8FD2EF9);
	r4 = D(r4, s[1][0][0], 0xF8FAECE7, 0xE411F521, 0x112B81F1, 0xF6EB1BF8);
	r5 = D(r5, s[1][0][0], 0x05142809, 0x0BE80C04, 0xF706EB08, 0x120D0341);
	r6 = D(r6, s[1][0][0], 0xFD05DF02, 0xF610C612, 0xDE1E5A2F, 0x18EBBBEC);
	r7 = D(r7, s[1][0][0], 0x03F6ED04, 0xF30DCB0D, 0xFDF2ECDE, 0x0C99E8F3);
	r0 = D(r0, s[1][0][1], 0x01E70E03, 0xFE252AF1, 0xF20BEDF8, 0x0C1C1BF1);
	r1 = D(r1, s[1][0][1], 0x01FA0AE5, 0xE8FCF512, 0x0FEE010E, 0xE302940C);
	r2 = D(r2, s[1][0][1], 0x0BE3EF17, 0x07FBF1DD, 0xF01E23EB, 0x02102800);
	r3 = D(r3, s[1][0][1], 0xFA23E2DC, 0x17062B06, 0x061E09F1, 0xEFD09906);
	r4 = D(r4, s[1][0][1], 0xDDF4E809, 0x29FFF7FE, 0x03200AFE, 0xF9FD2613);
	r5 = D(r5, s[1][0][1], 0xE306E200, 0x08C4EFFC, 0xF1FEE900, 0x4AD0FAD8);
	r6 = D(r6, s[1][0][1], 0xF92CEEF4, 0x05C121FB, 0x02ECD505, 0xF1230EF3);
	r7 = D(r7, s[1][0][1], 0xEBDBF928, 0x12FA1EFD, 0x1B0EDEF7, 0xF5E40C07);
	r0 = D(r0, s[1][0][2], 0x061602F2, 0xEAF01B06, 0xF307DFED, 0x0EF0130A);
	r1 = D(r1, s[1][0][2], 0x0CFD140D, 0x03CF13F4, 0x0D1A14F6, 0xF208FD0D);
	r2 = D(r2, s[1][0][2], 0x1A13FBD4, 0xE9F4F607, 0x07EEFD03, 0xF90E0D16);
	r3 = D(r3, s[1][0][2], 0x0DFF07F1, 0x0B00FF05, 0x14110E07, 0xF92DF80A);
	r4 = D(r4, s[1][0][2], 0xFCFAF1EF, 0x0423ED09, 0x270FDD04, 0x04010E15);
	r5 = D(r5, s[1][0][2], 0x0F15001D, 0x0FEE1700, 0xD30003F6, 0x03251509);
	r6 = D(r6, s[1][0][2], 0x0AFBFCFF, 0x03FFDF16, 0xCC1209DD, 0xFBF4FF0F);
	r7 = D(r7, s[1][0][2], 0xE6FCF80E, 0x0DFF0107, 0xF3F700F4, 0xF20715F0);
	r0 = D(r0, s[1][1][0], 0xF50D1AE8, 0xFD20030C, 0x08020AFE, 0x120435F9);
	r1 = D(r1, s[1][1][0], 0x05CA3802, 0x0D19D408, 0x17E908EC, 0xFB14ABF8);
	r2 = D(r2, s[1][1][0], 0xF02240F0, 0x0623F610, 0xF43432F1, 0xEF11B5F5);
	r3 = D(r3, s[1][1][0], 0xE8FEC7F9, 0xF009D80C, 0x0519FB07, 0x0EE0D4E7);
	r4 = D(r4, s[1][1][0], 0x0613FAF8, 0x04262DF8, 0x091736EF, 0x1AF38104);
	r5 = D(r5, s[1][1][0], 0xF9E9E4FB, 0xED15D309, 0xFB1CFFFF, 0x0536110C);
	r6 = D(r6, s[1][1][0], 0x0CFBEF04, 0xFE1707FA, 0x09FE1812, 0xEF0CD517);
	r7 = D(r7, s[1][1][0], 0xFE0AE1EF, 0xF3D6BC06, 0xFF05F9E7, 0x001ECAF7);
	r0 = D(r0, s[1][1][1], 0xF0120BF0, 0x17EA26F4, 0xF2F6FB06, 0xEDED16E8);
	r1 = D(r1, s[1][1][1], 0xE4DD22FA, 0x041D1504, 0xF0290E04, 0x0625E206);
	r2 = D(r2, s[1][1][1], 0xFF00FBFA, 0xEBF0080A, 0x20E1DDF9, 0x1EFDF6EC);
	r3 = D(r3, s[1][1][1], 0x02F01703, 0x06CE30FC, 0x04001BE4, 0xE82B16EF);
	r4 = D(r4, s[1][1][1], 0xF1F80EED, 0x1311051B, 0x07E0FDF6, 0xEB0A2CFA);
	r5 = D(r5, s[1][1][1], 0xFC0523EB, 0x17D60F09, 0xE402DAEE, 0x1BD217B4);
	r6 = D(r6, s[1][1][1], 0x01F914F1, 0x212CC3E3, 0xDB25F2F4, 0x0CFE0EFD);
	r7 = D(r7, s[1][1][1], 0x08E8D40A, 0x00EEEDFC, 0x110C1907, 0x05FA1221);
	r0 = D(r0, s[1][1][2], 0x13F3E402, 0x0BF20402, 0xFFDB03F2, 0xF2000416);
	r1 = D(r1, s[1][1][2], 0x12FD001E, 0x0505F3DD, 0x00DE1AE5, 0xFD1EF7F0);
	r2 = D(r2, s[1][1][2], 0xF1EBFCE8, 0xE817FE10, 0xEC0A0AF6, 0xEBF7EDF3);
	r3 = D(r3, s[1][1][2], 0xEE0C1312, 0x1801F8FC, 0xF8EF1309, 0x0CFA0800);
	r4 = D(r4, s[1][1][2], 0x09ECF9F2, 0xF0FF1207, 0x17F8EBF9, 0xF90C080B);
	r5 = D(r5, s[1][1][2], 0x18FA05FE, 0xF6EAF4F2, 0xC9E5EE03, 0x18E7CB08);
	r6 = D(r6, s[1][1][2], 0xFFED04E8, 0x1EF2170E, 0xEEF9F7F9, 0xED1BF60B);
	r7 = D(r7, s[1][1][2], 0xFC06160C, 0x030BF4E4, 0x0802F1FF, 0xF30711F7);
	r0 = D(r0, s[1][2][0], 0x0C14F9FE, 0xE60ADC03, 0xEA042EEE, 0xD70C0100);
	r1 = D(r1, s[1][2][0], 0xFA022003, 0x02FA1DFF, 0xFC09D907, 0x17FED510);
	r2 = D(r2, s[1][2][0], 0x0CDFE6E2, 0x09F3FDFD, 0x12340C12, 0x0544B5FD);
	r3 = D(r3, s[1][2][0], 0xFCE5030A, 0xDE070909, 0x131703F5, 0x06D5E608);
	r4 = D(r4, s[1][2][0], 0x0EE5FF11, 0x1110F102, 0x16D2E602, 0xEA0FEBF6);
	r5 = D(r5, s[1][2][0], 0x15F81C09, 0x0A07CD0D, 0xF80BCFF9, 0xF9262B1A);
	r6 = D(r6, s[1][2][0], 0x00E90204, 0xF9EEF203, 0xE8ED0005, 0xF4F218FE);
	r7 = D(r7, s[1][2][0], 0x16113405, 0x11DA3917, 0x04FFFCFC, 0xF7F82CF3);
	r0 = D(r0, s[1][2][1], 0xEFFB1803, 0xFC371BF2, 0xEC04EA01, 0x0C031708);
	r1 = D(r1, s[1][2][1], 0xE708F611, 0x1D091714, 0x1804D1F7, 0x0408FCF8);
	r2 = D(r2, s[1][2][1], 0x0617FCE6, 0xF30DF4DB, 0xFC02FF03, 0xDB09E4ED);
	r3 = D(r3, s[1][2][1], 0x001E1B10, 0xF624E1F0, 0x181C04F1, 0x05110404);
	r4 = D(r4, s[1][2][1], 0xFB23D218, 0x0EF82801, 0xFB06FF04, 0xFEEB0AFC);
	r5 = D(r5, s[1][2][1], 0x0CEFFFF0, 0xFF001AFF, 0xE7FE09FE, 0x00F80716);
	r6 = D(r6, s[1][2][1], 0xE415F200, 0xF30E2705, 0x041D22FB, 0xEBE6F2F9);
	r7 = D(r7, s[1][2][1], 0xFBF7E9FD, 0x09FE0408, 0xFC0E00FB, 0xF7F409F5);
	r0 = D(r0, s[1][2][2], 0xFFFBFE05, 0x091AFB14, 0xEE0402FD, 0x3602F806);
	r1 = D(r1, s[1][2][2], 0x14F8FAFC, 0x1107090C, 0xEAFDF9FB, 0x10F5F4F2);
	r2 = D(r2, s[1][2][2], 0x1DFB0413, 0x10FDFAFA, 0xF6120EF8, 0xEC1700C4);
	r3 = D(r3, s[1][2][2], 0xFAE3F3EC, 0xDB05DCF7, 0x1625DBF2, 0xE7DEE604);
	r4 = D(r4, s[1][2][2], 0x10F51203, 0x1520060A, 0x0205FC03, 0x0DF9FBFB);
	r5 = D(r5, s[1][2][2], 0xE60C0AE9, 0xF7ED0802, 0xEF0B0402, 0x02061010);
	r6 = D(r6, s[1][2][2], 0xF71EFFF8, 0xF509F40D, 0x08FE12FF, 0x0EF2FF00);
	r7 = D(r7, s[1][2][2], 0xEEEFFC0C, 0x000DF501, 0x03F604FF, 0x0AF0FEF9);
	s[0][0][0] = G[2][xy.y+0][xy.x+0]; s[0][0][1] = G[2][xy.y+0][xy.x+1];
	s[0][0][2] = G[2][xy.y+0][xy.x+2]; s[0][1][0] = G[2][xy.y+1][xy.x+0];
	s[0][1][1] = G[2][xy.y+1][xy.x+1]; s[0][1][2] = G[2][xy.y+1][xy.x+2];
	s[0][2][0] = G[2][xy.y+2][xy.x+0]; s[0][2][1] = G[2][xy.y+2][xy.x+1];
	s[0][2][2] = G[2][xy.y+2][xy.x+2]; s[1][0][0] = G[3][xy.y+0][xy.x+0];
	s[1][0][1] = G[3][xy.y+0][xy.x+1]; s[1][0][2] = G[3][xy.y+0][xy.x+2];
	s[1][1][0] = G[3][xy.y+1][xy.x+0]; s[1][1][1] = G[3][xy.y+1][xy.x+1];
	s[1][1][2] = G[3][xy.y+1][xy.x+2]; s[1][2][0] = G[3][xy.y+2][xy.x+0];
	s[1][2][1] = G[3][xy.y+2][xy.x+1]; s[1][2][2] = G[3][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x111FFA07, 0xF819FAF4, 0xFF190DFB, 0x0117E108);
	r1 = D(r1, s[0][0][0], 0xF4F20912, 0x0B1204F3, 0x130F08F5, 0x080D0DF6);
	r2 = D(r2, s[0][0][0], 0xFCE50215, 0xFE02EC04, 0x0AF50901, 0x03F5F921);
	r3 = D(r3, s[0][0][0], 0xFC10E808, 0xF9FA1601, 0xFDEDF50C, 0xFEF8EC1C);
	r4 = D(r4, s[0][0][0], 0x0AFD1720, 0x81DE819D, 0xF3FFED03, 0x08FE1916);
	r5 = D(r5, s[0][0][0], 0xF7E0F311, 0x0903001F, 0x0802F70A, 0xE5F60BFD);
	r6 = D(r6, s[0][0][0], 0x00F71013, 0xFC15F4FA, 0xD9031BCA, 0xFF1DF9EE);
	r7 = D(r7, s[0][0][0], 0xEEDFFBFD, 0xFC03F505, 0x041A06F9, 0x0CF113FE);
	r0 = D(r0, s[0][0][1], 0xFCFDF604, 0x03E40815, 0x0CED090B, 0x0B090CF7);
	r1 = D(r1, s[0][0][1], 0x0804020E, 0xF7FAE9F7, 0x001DE4FA, 0xFEF212E0);
	r2 = D(r2, s[0][0][1], 0x10F2DFC2, 0xE2FEFC2A, 0x1213FFF1, 0x1F0C0107);
	r3 = D(r3, s[0][0][1], 0xE8FFF122, 0x050C0BFD, 0x0DFCFBE5, 0xE3060301);
	r4 = D(r4, s[0][0][1], 0x14090417, 0xF8EB04DB, 0x0804F3EB, 0xF4E40D04);
	r5 = D(r5, s[0][0][1], 0xF6FC0D05, 0xFB26FEFE, 0xF7F60AFF, 0xD7E7E4F7);
	r6 = D(r6, s[0][0][1], 0xE71CD9FF, 0xF1FE08F1, 0xBAF1FF22, 0xFFE6F802);
	r7 = D(r7, s[0][0][1], 0xDA090DF8, 0xF9F0FB00, 0x0C16FDFA, 0x00010214);
	r0 = D(r0, s[0][0][2], 0x11F9EB06, 0xE90FDDFF, 0x090FFCFB, 0xFA000CF9);
	r1 = D(r1, s[0][0][2], 0x0CF5FF04, 0xFBF7F3FE, 0xEEF1041A, 0x0115FDFF);
	r2 = D(r2, s[0][0][2], 0xEEF6F802, 0xF0FBFFFA, 0x03E209FE, 0x13F0F706);
	r3 = D(r3, s[0][0][2], 0xEE0EF714, 0x020F0A15, 0xFEFC0E07, 0xEB01FA00);
	r4 = D(r4, s[0][0][2], 0xFC00F213, 0xF300081A, 0xFD0900ED, 0xFEFEFF06);
	r5 = D(r5, s[0][0][2], 0xFF2E1E08, 0xE4EE1A13, 0x01010407, 0xE40A060F);
	r6 = D(r6, s[0][0][2], 0x0A0609F8, 0xFC05041B, 0x01E6FF28, 0x01F1F5F5);
	r7 = D(r7, s[0][0][2], 0xF1060100, 0xF2FA0C01, 0x04F9FD01, 0xEAF1150F);
	r0 = D(r0, s[0][1][0], 0x090AF31D, 0xF3FE1BF9, 0xFB071101, 0xF924FBF8);
	r1 = D(r1, s[0][1][0], 0xC5EB1D08, 0x08F6E8EF, 0xFB11F904, 0xED14E311);
	r2 = D(r2, s[0][1][0], 0x001EF5F4, 0x0B0402FC, 0xFD09F015, 0xE711FDF9);
	r3 = D(r3, s[0][1][0], 0x074409F8, 0xF0FAFE06, 0xF40704FF, 0x0817F60B);
	r4 = D(r4, s[0][1][0], 0xFD180617, 0xF11AEBE4, 0xFBFA2503, 0xFF01F0FB);
	r5 = D(r5, s[0][1][0], 0x0209EB13, 0xF2160CFC, 0x0406F4FC, 0xF50810E3);
	r6 = D(r6, s[0][1][0], 0x0CF1F1E8, 0x110EED06, 0xF30E0518, 0x0601F911);
	r7 = D(r7, s[0][1][0], 0xFEF8FB12, 0xEBF40708, 0x0E19FDF2, 0xF906F4F9);
	r0 = D(r0, s[0][1][1], 0xDA2200F1, 0xF4D0F7F2, 0x12F4EB01, 0xFAF7E80E);
	r1 = D(r1, s[0][1][1], 0x0A0C040A, 0x0DE4FCF7, 0xFCE90413, 0x0F170BFD);
	r2 = D(r2, s[0][1][1], 0xE3FEF6D7, 0xF3EFF816, 0x0D12E0ED, 0xD80316EF);
	r3 = D(r3, s[0][1][1], 0x16060720, 0xE6F403F1, 0xFAF8320B, 0xF3D90C09);
	r4 = D(r4, s[0][1][1], 0x0FE30ED3, 0xFDF0F823, 0xFA0F0AF5, 0xF1FCF809);
	r5 = D(r5, s[0][1][1], 0x17D1F4EC, 0xFFF61400, 0xFD16F214, 0xD3CBE607);
	r6 = D(r6, s[0][1][1], 0x12E100EA, 0xFFFBEAEE, 0x00E40217, 0xFAFE090A);
	r7 = D(r7, s[0][1][1], 0xEED8FD07, 0x120904F9, 0x01061003, 0x1AED1AF1);
	r0 = D(r0, s[0][1][2], 0xF0F6F21E, 0x8123D1F4, 0x06021004, 0x11EE04F3);
	r1 = D(r1, s[0][1][2], 0x05FA090D, 0xFB0AEE1B, 0x07F9FD05, 0x020BF2E3);
	r2 = D(r2, s[0][1][2], 0xF902F0F5, 0x0CEF01D9, 0x06F40909, 0xE80925F3);
	r3 = D(r3, s[0][1][2], 0x0EF10C26, 0xFD1902F5, 0xEAF90CF2, 0xFB08FBFD);
	r4 = D(r4, s[0][1][2], 0xF10F1000, 0x040EFAED, 0x0B0C00F5, 0x0FE60017);
	r5 = D(r5, s[0][1][2], 0x03181E04, 0xE822FFEE, 0x0DF7F812, 0xD3BFFE14);
	r6 = D(r6, s[0][1][2], 0x1805E5EA, 0x04000CFC, 0x11BB0A08, 0x020D0605);
	r7 = D(r7, s[0][1][2], 0x09090700, 0x00F4FCF7, 0xE4FF1006, 0xFA120D16);
	r0 = D(r0, s[0][2][0], 0x08EC010A, 0xF62104FD, 0xF30B0BDD, 0xF909EFE3);
	r1 = D(r1, s[0][2][0], 0xC00C3403, 0xFD10FD13, 0x10E318F3, 0x0817FA12);
	r2 = D(r2, s[0][2][0], 0xEF08F6E3, 0x09F5E9D6, 0x04F503E2, 0xFB06FF09);
	r3 = D(r3, s[0][2][0], 0xFAF21524, 0xFF070701, 0x030AEB09, 0x10190703);
	r4 = D(r4, s[0][2][0], 0xFB18F8F1, 0xDCDFFAFA, 0x07BBFD04, 0xFD0AE80A);
	r5 = D(r5, s[0][2][0], 0xFDDAFB0C, 0xF9170BF3, 0x06EFF708, 0xF7FE0B10);
	r6 = D(r6, s[0][2][0], 0x09010DF5, 0xECF407E5, 0x07260909, 0xF1051615);
	r7 = D(r7, s[0][2][0], 0xF5F0070D, 0x0715F929, 0xF40104FD, 0xF9080305);
	r0 = D(r0, s[0][2][1], 0xECFAFAF2, 0x0B170406, 0x111002FF, 0x04F609F5);
	r1 = D(r1, s[0][2][1], 0x02FEE304, 0xECED1113, 0x090A15EF, 0xEE00F201);
	r2 = D(r2, s[0][2][1], 0xE80B13E3, 0xF20FFEFC, 0x07E4F110, 0xC702DBE4);
	r3 = D(r3, s[0][2][1], 0x0011FF02, 0xC3DBDB05, 0x0C19F613, 0x0019F5DC);
	r4 = D(r4, s[0][2][1], 0x09EDE0F4, 0x00F61CE7, 0xFE30F8F7, 0x0B120DF2);
	r5 = D(r5, s[0][2][1], 0x0DEDC5F5, 0xF8000AE3, 0x01CF07DD, 0xFEF8FCF4);
	r6 = D(r6, s[0][2][1], 0x0FF90CFA, 0xFA0BF809, 0x05E709FA, 0x0203FE10);
	r7 = D(r7, s[0][2][1], 0xFD050B12, 0xF7CC00E6, 0xFE0F010C, 0x0A19E513);
	r0 = D(r0, s[0][2][2], 0x180AFCD8, 0xF208E9F3, 0xF60315EB, 0xF9140800);
	r1 = D(r1, s[0][2][2], 0xF5CC0714, 0xEAF70709, 0x06DE082A, 0xF8EBF4E6);
	r2 = D(r2, s[0][2][2], 0xF51308F7, 0x0513F8EC, 0x0C0810FE, 0xCDB23107);
	r3 = D(r3, s[0][2][2], 0xF31217DE, 0xF0F9FC22, 0x0B020409, 0x0914F4F7);
	r4 = D(r4, s[0][2][2], 0xEF0BE612, 0xFB1D03FB, 0xFD0600EF, 0x05220BE0);
	r5 = D(r5, s[0][2][2], 0x04FB0202, 0x082E0B06, 0x05B5020B, 0xF013F6EB);
	r6 = D(r6, s[0][2][2], 0x1011F3F6, 0xED05FDED, 0x0300FD07, 0x02EAF300);
	r7 = D(r7, s[0][2][2], 0xF80EEF0F, 0xF406030F, 0x01FBFF0C, 0x08F9F90A);
	r0 = D(r0, s[1][0][0], 0x1120F4FB, 0xF4EDF805, 0x02EF07FF, 0x0AFCFC3F);
	r1 = D(r1, s[1][0][0], 0x00011B0A, 0x01EE05D0, 0x050EFC15, 0x0307FBE2);
	r2 = D(r2, s[1][0][0], 0x0C11FF10, 0x071D12FE, 0x0D100F16, 0x1A0F0E13);
	r3 = D(r3, s[1][0][0], 0xE7020918, 0xFA0EF4DE, 0xEDF7FDFF, 0x06F4E3ED);
	r4 = D(r4, s[1][0][0], 0x080BDF0A, 0xEC20F4D2, 0x0803EF0E, 0xF0E5F0E3);
	r5 = D(r5, s[1][0][0], 0x0CF60F0B, 0x1B230402, 0x140508EE, 0xD90AFD07);
	r6 = D(r6, s[1][0][0], 0x0AFFFE0F, 0x0E1900F3, 0xE1FB1CFC, 0x030DE79A);
	r7 = D(r7, s[1][0][0], 0xF208FC10, 0xEE170902, 0xF5FB18CB, 0x0304F101);
	r0 = D(r0, s[1][0][1], 0x1C05F20B, 0xFB00EDFB, 0xE8FBFEF4, 0x0E1700EC);
	r1 = D(r1, s[1][0][1], 0xFCE5FE10, 0xFB0204BB, 0x05FA10FC, 0x1918F02E);
	r2 = D(r2, s[1][0][1], 0xF2F2D612, 0xFEFC1119, 0x170AE8F8, 0xF10601F5);
	r3 = D(r3, s[1][0][1], 0x03FA1200, 0x10000316, 0x0A0CFB13, 0xECFDE4F9);
	r4 = D(r4, s[1][0][1], 0x0B03EE0B, 0x0416FCF4, 0x0707FE58, 0x0A15FEF4);
	r5 = D(r5, s[1][0][1], 0xF0F7FC01, 0xFA05F711, 0x050DF903, 0xFB12EFFE);
	r6 = D(r6, s[1][0][1], 0x021119DE, 0xEE02131B, 0xE6091C0E, 0xD3130C18);
	r7 = D(r7, s[1][0][1], 0xEEFFF3FF, 0x05E8CDFB, 0x19FE1201, 0x0508FCE3);
	r0 = D(r0, s[1][0][2], 0xEF0CEDEE, 0xF9E303F3, 0x1101FEF5, 0x1610FC01);
	r1 = D(r1, s[1][0][2], 0xF7F4FFF4, 0x0AE303DA, 0x0A020BFA, 0xFDDC1A15);
	r2 = D(r2, s[1][0][2], 0xFE1EF6F2, 0x0FF706ED, 0x0A06E901, 0xFC251019);
	r3 = D(r3, s[1][0][2], 0x0503F0F2, 0x01041AFA, 0x1914FBFD, 0x00060C29);
	r4 = D(r4, s[1][0][2], 0x0BFAFF0D, 0x0BEA0EF1, 0xF80604E6, 0xE9010FF6);
	r5 = D(r5, s[1][0][2], 0xFC0AFAE7, 0x0300FC10, 0x05F8FF06, 0x071A08F0);
	r6 = D(r6, s[1][0][2], 0x1413EF0D, 0x0505F8E1, 0x0EFFECEB, 0x07050EF7);
	r7 = D(r7, s[1][0][2], 0xF0F4FD0F, 0x061FF70A, 0xF7FEF5FC, 0xF4030AF5);
	r0 = D(r0, s[1][1][0], 0xFC26FC08, 0xFD080305, 0xF2EE02F7, 0x01040F18);
	r1 = D(r1, s[1][1][0], 0xEB0A13FE, 0x0D0A0412, 0xF5160A02, 0x1403FAF2);
	r2 = D(r2, s[1][1][0], 0xEF0FF201, 0x13EFF90C, 0xF8EDF114, 0x07ED03C6);
	r3 = D(r3, s[1][1][0], 0xF30D0BD1, 0xFFF903E9, 0xE5000115, 0x15E61BEA);
	r4 = D(r4, s[1][1][0], 0x1223F1F6, 0x1CFDF901, 0x050A020A, 0x060402EA);
	r5 = D(r5, s[1][1][0], 0x1414F50F, 0xED150511, 0xFAFA031A, 0x0414F40A);
	r6 = D(r6, s[1][1][0], 0x06050820, 0xF815FC21, 0xE7020710, 0x0101FE11);
	r7 = D(r7, s[1][1][0], 0x02FB160A, 0x0804F1ED, 0x07080CF0, 0xE61BEAC1);
	r0 = D(r0, s[1][1][1], 0xF719EE01, 0x0DE2F618, 0x12190BE4, 0x05FDD4E2);
	r1 = D(r1, s[1][1][1], 0x0809FEC5, 0x0905FAFC, 0xFC1A0D07, 0x0F040C0A);
	r2 = D(r2, s[1][1][1], 0x0708ED08, 0xDCE00204, 0xF50F018B, 0x0C0205F6);
	r3 = D(r3, s[1][1][1], 0xFDFA1C03, 0x0F08F7FE, 0x120E1820, 0x040FFB06);
	r4 = D(r4, s[1][1][1], 0x02E302E2, 0xFFF9F42A, 0x060EFAE8, 0x0EE4F224);
	r5 = D(r5, s[1][1][1], 0xDEF10BAD, 0x17F6FE08, 0x0E05ED16, 0x34F6EFF5);
	r6 = D(r6, s[1][1][1], 0xF408F22B, 0x000604CD, 0xFB0C09D7, 0xFB030CE9);
	r7 = D(r7, s[1][1][1], 0xF10901F7, 0xE9F2D2A7, 0xF2E70A09, 0x07F50AF6);
	r0 = D(r0, s[1][1][2], 0xECF70708, 0x0F0CFE0A, 0x0EE61902, 0x12FCFB18);
	r1 = D(r1, s[1][1][2], 0x0FF1ED09, 0x0FFBF203, 0x05FBFF34, 0xE908F01C);
	r2 = D(r2, s[1][1][2], 0x05080203, 0x09F91FEE, 0x110CF800, 0x081BFA05);
	r3 = D(r3, s[1][1][2], 0xF8CB0A22, 0x0F0F03EA, 0xF6040C1D, 0x17F7FC02);
	r4 = D(r4, s[1][1][2], 0xE30115F1, 0x0B0CF2F3, 0xF81205F2, 0x1D0B1535);
	r5 = D(r5, s[1][1][2], 0x13F4F11B, 0x10FB09FA, 0xE1E701FB, 0x0412FE0B);
	r6 = D(r6, s[1][1][2], 0x26FEFCC7, 0xF2FC1637, 0x02F70005, 0x09EF04FC);
	r7 = D(r7, s[1][1][2], 0x0DEFF61D, 0x0AF8FAEF, 0xFB03EEF2, 0x100BF7F8);
	r0 = D(r0, s[1][2][0], 0x00FF0526, 0xEF022DF2, 0xFDF0F515, 0xFFF502FA);
	r1 = D(r1, s[1][2][0], 0x0AFAF10A, 0xEB0607EA, 0xF901EF0B, 0xE1090FF1);
	r2 = D(r2, s[1][2][0], 0xF2DD06F0, 0xFB04F31D, 0xF1EAFFE3, 0x01051CED);
	r3 = D(r3, s[1][2][0], 0x1E20EDF4, 0x0F09FCD4, 0xF505F6EA, 0xEFEE15EB);
	r4 = D(r4, s[1][2][0], 0xF9F7041A, 0xF9FFEBE2, 0xF8FB06F7, 0x0DE4110A);
	r5 = D(r5, s[1][2][0], 0x0404F4EF, 0xDEE2F207, 0x0CFCFCFE, 0xFDF815CB);
	r6 = D(r6, s[1][2][0], 0xECFB20F3, 0xFDF101FD, 0x0C030118, 0x03F700EA);
	r7 = D(r7, s[1][2][0], 0x04FBED0C, 0x05F91234, 0xF9050AF6, 0x020AE2E9);
	r0 = D(r0, s[1][2][1], 0xE3FFF6FA, 0x03F51CED, 0x0DFD0E08, 0x070EFF05);
	r1 = D(r1, s[1][2][1], 0xFBE80A18, 0x030BEBE0, 0xD705021F, 0x030B1FBB);
	r2 = D(r2, s[1][2][1], 0x09E41100, 0x1B05E8D5, 0x0905E795, 0xEBF3F0C8);
	r3 = D(r3, s[1][2][1], 0xF518003B, 0x0604ECCB, 0x1108F513, 0x14F4F81D);
	r4 = D(r4, s[1][2][1], 0x090FF80E, 0xEA14F524, 0xFC0701C8, 0xFF0BDF0B);
	r5 = D(r5, s[1][2][1], 0xFE1BF40F, 0xFEEFEEEE, 0xCD0024FE, 0x0FE51306);
	r6 = D(r6, s[1][2][1], 0xF3E10912, 0xE8D71527, 0xF40DF213, 0xF8F11A14);
	r7 = D(r7, s[1][2][1], 0x14060EE5, 0xECEA0D05, 0xFD01EBFE, 0x04EF08FE);
	r0 = D(r0, s[1][2][2], 0xF4FDFFFC, 0x04170201, 0x01F20A01, 0x0020F113);
	r1 = D(r1, s[1][2][2], 0xFBEAEEF5, 0x00F7F2DA, 0x00E9EF0A, 0x1A0002EE);
	r2 = D(r2, s[1][2][2], 0x13080CFD, 0xF9FB0BF0, 0x0F09FCFE, 0xEDF7F681);
	r3 = D(r3, s[1][2][2], 0x16EEEC09, 0xF9F70DE2, 0x0E00040B, 0x0DE5FBFF);
	r4 = D(r4, s[1][2][2], 0xF501F5FA, 0xE9F405FA, 0x0117FD06, 0xEDFB02CE);
	r5 = D(r5, s[1][2][2], 0x1710DD13, 0xF8E91AEE, 0xF8F001EB, 0x0C00F0F2);
	r6 = D(r6, s[1][2][2], 0x09250321, 0x130CF9D0, 0x0D08F5E2, 0xFCE9FAF3);
	r7 = D(r7, s[1][2][2], 0x02F9FE14, 0x0210131C, 0xFF02E512, 0x02120E09);
	s[0][0][0] = G[4][xy.y+0][xy.x+0]; s[0][0][1] = G[4][xy.y+0][xy.x+1];
	s[0][0][2] = G[4][xy.y+0][xy.x+2]; s[0][1][0] = G[4][xy.y+1][xy.x+0];
	s[0][1][1] = G[4][xy.y+1][xy.x+1]; s[0][1][2] = G[4][xy.y+1][xy.x+2];
	s[0][2][0] = G[4][xy.y+2][xy.x+0]; s[0][2][1] = G[4][xy.y+2][xy.x+1];
	s[0][2][2] = G[4][xy.y+2][xy.x+2]; s[1][0][0] = G[5][xy.y+0][xy.x+0];
	s[1][0][1] = G[5][xy.y+0][xy.x+1]; s[1][0][2] = G[5][xy.y+0][xy.x+2];
	s[1][1][0] = G[5][xy.y+1][xy.x+0]; s[1][1][1] = G[5][xy.y+1][xy.x+1];
	s[1][1][2] = G[5][xy.y+1][xy.x+2]; s[1][2][0] = G[5][xy.y+2][xy.x+0];
	s[1][2][1] = G[5][xy.y+2][xy.x+1]; s[1][2][2] = G[5][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xFE01F8FD, 0xFD0D0BF8, 0xFFF8E609, 0x13F805F7);
	r1 = D(r1, s[0][0][0], 0x0802010A, 0xFEFF0501, 0xFE09F9F5, 0x02120A10);
	r2 = D(r2, s[0][0][0], 0xFE0703F5, 0x05EE1D11, 0xE902ECFB, 0xFBFC1320);
	r3 = D(r3, s[0][0][0], 0xFCE7F211, 0x05EE0A0A, 0x10F414F7, 0xFBF90F03);
	r4 = D(r4, s[0][0][0], 0xF3F8F9F7, 0xD620E6E5, 0x0BFD0DFD, 0xFA0619F3);
	r5 = D(r5, s[0][0][0], 0xF9E80C0D, 0x020015FF, 0xFD1F1202, 0x090BEAE1);
	r6 = D(r6, s[0][0][0], 0xF5FA080D, 0x0BF5EAEE, 0xEF06D4EF, 0xF3ED05EF);
	r7 = D(r7, s[0][0][0], 0xF7F6FCF3, 0x03FAE2F4, 0xF20FE6FE, 0xEB0012EE);
	r0 = D(r0, s[0][0][1], 0xF1E3EA07, 0xEF040706, 0xFA05F1F1, 0xF704F9FC);
	r1 = D(r1, s[0][0][1], 0x063EFE09, 0xF3040CE9, 0xFAF7D808, 0xF4110705);
	r2 = D(r2, s[0][0][1], 0xEEEE1107, 0x0B121401, 0x0705151B, 0x04061704);
	r3 = D(r3, s[0][0][1], 0xEBF1F3F4, 0xF5FF03FB, 0x0307F8F7, 0xFE10130B);
	r4 = D(r4, s[0][0][1], 0x02F30C19, 0x0BF718DC, 0xFC2517F8, 0x0CF70C08);
	r5 = D(r5, s[0][0][1], 0xEA24ED0F, 0xE00BF103, 0xF410140A, 0x0D1800E4);
	r6 = D(r6, s[0][0][1], 0xE6F8F705, 0xD4F90F04, 0xCE13EAEF, 0x11EC03FA);
	r7 = D(r7, s[0][0][1], 0x0E1E0610, 0x0E150A01, 0x0623F900, 0x0E1B0503);
	r0 = D(r0, s[0][0][2], 0xE1D5E6FF, 0xF81EEFF8, 0xF4E1F20A, 0xF2160811);
	r1 = D(r1, s[0][0][2], 0xFAF4F9F8, 0xE8D70911, 0x04FBE705, 0xF4260EF8);
	r2 = D(r2, s[0][0][2], 0xEFFF25F4, 0x1B1BE9FF, 0x020A13FA, 0x03010606);
	r3 = D(r3, s[0][0][2], 0xB61EDBF6, 0x02360C07, 0x051607FC, 0x131A13F3);
	r4 = D(r4, s[0][0][2], 0x0A19EC06, 0xF00BF6EC, 0x121F04F4, 0x06080A06);
	r5 = D(r5, s[0][0][2], 0x0FD9060F, 0x0C2A0AF6, 0xF4F500FB, 0x00FF0B06);
	r6 = D(r6, s[0][0][2], 0x0315FFED, 0xEB051700, 0xF2DC0211, 0x01EC03F8);
	r7 = D(r7, s[0][0][2], 0x19ED02ED, 0x12CE08F1, 0xE3F9FFF8, 0x180FFEFC);
	r0 = D(r0, s[0][1][0], 0x0AF9FC0D, 0xFDFB08EF, 0xF816EBFA, 0x02100108);
	r1 = D(r1, s[0][1][0], 0x0601E410, 0x03FE1F03, 0xDFEA05F1, 0xED070607);
	r2 = D(r2, s[0][1][0], 0xF0F5F2F4, 0x0307300B, 0xF8F805F9, 0x0807FF29);
	r3 = D(r3, s[0][1][0], 0x0025F9FB, 0xFFF900F8, 0xF5F608F4, 0xE9F50310);
	r4 = D(r4, s[0][1][0], 0xF01C0503, 0xFCF90F21, 0x00020A04, 0x030400FC);
	r5 = D(r5, s[0][1][0], 0xEA04C5FC, 0xE50EF6D3, 0x02001601, 0x03FAFC14);
	r6 = D(r6, s[0][1][0], 0x0AF2F914, 0x0EEC1105, 0x060AFE06, 0x01F60C0E);
	r7 = D(r7, s[0][1][0], 0xFC0008FB, 0xED03F104, 0x0AF9FC06, 0xFB070613);
	r0 = D(r0, s[0][1][1], 0xFC1FE1F6, 0xE9E004E0, 0x0DEA0DDA, 0xF20EFFEF);
	r1 = D(r1, s[0][1][1], 0x1FE5F71A, 0xF3F5FE0B, 0xFA17E3FE, 0x02EBFAE7);
	r2 = D(r2, s[0][1][1], 0xF80411C5, 0x05F9100B, 0xEE0EF504, 0x062D0AC7);
	r3 = D(r3, s[0][1][1], 0x00130D12, 0xFC06FEEC, 0xF2FDF80C, 0xEEF512F9);
	r4 = D(r4, s[0][1][1], 0xEAF801F5, 0x08151706, 0xEC0A0402, 0xFF3405E1);
	r5 = D(r5, s[0][1][1], 0x07FEF8F6, 0x0A1F2A09, 0xED1BF810, 0x1B1E3981);
	r6 = D(r6, s[0][1][1], 0xFFFD13F3, 0x0431F5ED, 0xF91B0812, 0xF7EB1608);
	r7 = D(r7, s[0][1][1], 0x0CD6E603, 0x0C18E71D, 0xFDC41117, 0x04FAFDF8);
	r0 = D(r0, s[0][1][2], 0x0715E1EC, 0x060313F8, 0x15D400FE, 0x0A2DE800);
	r1 = D(r1, s[0][1][2], 0xFC9E1009, 0xF0E814F9, 0x03F104FC, 0xF6FDFEE9);
	r2 = D(r2, s[0][1][2], 0xF624F7D1, 0x0D350FFD, 0x06D40AF8, 0x04CC06FB);
	r3 = D(r3, s[0][1][2], 0x15DEFB05, 0x14F811F6, 0xFE190711, 0x0C81050C);
	r4 = D(r4, s[0][1][2], 0xF7D1FFDC, 0x1839F60E, 0xF4CFF90D, 0x0A0DFA00);
	r5 = D(r5, s[0][1][2], 0x24CF20FF, 0x0D01F50B, 0xEE1DEAFD, 0xFDF51BF6);
	r6 = D(r6, s[0][1][2], 0xD72005F8, 0xF01A0B06, 0xF381EB00, 0x060916FA);
	r7 = D(r7, s[0][1][2], 0x06230DF3, 0xF707F6FD, 0x07DEF7EF, 0xFD14F5FA);
	r0 = D(r0, s[0][2][0], 0x000CF90D, 0x00EEE3DC, 0x0EF4FCFB, 0xF2FF1FFC);
	r1 = D(r1, s[0][2][0], 0xF2F9FC0C, 0x0BF60001, 0x0A0AE2FF, 0x0FFCF9E9);
	r2 = D(r2, s[0][2][0], 0xFD21EEE7, 0xFAF00F0A, 0xFBF8F3EB, 0xFA110731);
	r3 = D(r3, s[0][2][0], 0xEFF20AFA, 0x190BE106, 0xF60212D7, 0x091212F4);
	r4 = D(r4, s[0][2][0], 0x03EB12F2, 0xFCF10901, 0x070107FA, 0xFEFFFDEA);
	r5 = D(r5, s[0][2][0], 0xF8FAF412, 0x0407FE12, 0xFDE5FD09, 0xFEFF1422);
	r6 = D(r6, s[0][2][0], 0x14150AF4, 0x070EDD0C, 0xFEF1F51D, 0xFE1CF907);
	r7 = D(r7, s[0][2][0], 0xF70C0AF5, 0xEA16FDFE, 0x10F30300, 0x020104E9);
	r0 = D(r0, s[0][2][1], 0x02060BF7, 0x08F5E381, 0xFD1DEC08, 0xECFAF8DB);
	r1 = D(r1, s[0][2][1], 0xFF00F313, 0xFF1A10FB, 0xFE16F0F5, 0x0EF5F9E3);
	r2 = D(r2, s[0][2][1], 0x0DA80AE7, 0xF4FB16E8, 0xE90A0D21, 0x0D130434);
	r3 = D(r3, s[0][2][1], 0x15DCE8FD, 0x05F7EAF4, 0xF608ECE2, 0xF4EE080D);
	r4 = D(r4, s[0][2][1], 0xF01D1EFE, 0xFF2605E3, 0x100804EF, 0x090C1507);
	r5 = D(r5, s[0][2][1], 0x05E00804, 0xEB2CF802, 0xFD01F704, 0xFB2319F1);
	r6 = D(r6, s[0][2][1], 0x0EEEF802, 0x19E0030A, 0xFE090809, 0xF602F407);
	r7 = D(r7, s[0][2][1], 0x0811F60D, 0xDFF7FBFB, 0x031606EF, 0x04F30FF6);
	r0 = D(r0, s[0][2][2], 0x07DAF5F7, 0x040EFEEC, 0x0311F4FF, 0x031F0CF5);
	r1 = D(r1, s[0][2][2], 0x164906F6, 0x110E1714, 0xF116FAFD, 0x061009FF);
	r2 = D(r2, s[0][2][2], 0x22CF02FE, 0x04D620FB, 0xF9D4080F, 0xF691021D);
	r3 = D(r3, s[0][2][2], 0x053C0A0F, 0xF8F90900, 0x005B00E7, 0xFFCF06E6);
	r4 = D(r4, s[0][2][2], 0x1002F1F5, 0x0DDAF4FF, 0x052509FB, 0x10FDFBF7);
	r5 = D(r5, s[0][2][2], 0xF6F51814, 0xF5EB12F7, 0x01EBEE0C, 0xEEE80D04);
	r6 = D(r6, s[0][2][2], 0xF90D0B00, 0x113A0DEF, 0xFFE90104, 0x1309F801);
	r7 = D(r7, s[0][2][2], 0xFA110410, 0xE133FA01, 0x030DF0FD, 0x01EFF904);
	r0 = D(r0, s[1][0][0], 0x23010403, 0x0EFDF80F, 0x03FFF6F9, 0xFF0C0AFC);
	r1 = D(r1, s[1][0][0], 0xFFF8EDEA, 0xF4F9040D, 0x10FB12FB, 0xF6110CFC);
	r2 = D(r2, s[1][0][0], 0xF6291DF7, 0xFF0EF81E, 0xFD1612FB, 0x03F50F24);
	r3 = D(r3, s[1][0][0], 0xF114EE12, 0xF9FCF7EF, 0xEAED0CF2, 0x0A02F60B);
	r4 = D(r4, s[1][0][0], 0xFF0AF108, 0xD9E4FBBC, 0xF7090711, 0x02DD0824);
	r5 = D(r5, s[1][0][0], 0x04F8EAF1, 0x1DF002F0, 0x06060300, 0x000716F1);
	r6 = D(r6, s[1][0][0], 0x000DDA02, 0x08FCEDF2, 0xF6020EEF, 0x06F0EFF5);
	r7 = D(r7, s[1][0][0], 0xF80A01F7, 0x06F3150F, 0xF30114FD, 0x07F20302);
	r0 = D(r0, s[1][0][1], 0xFA0000FB, 0xEA0604F8, 0x061A0709, 0xF60C15FC);
	r1 = D(r1, s[1][0][1], 0x1DF705E9, 0x0B090400, 0x110DF110, 0xF512EDFC);
	r2 = D(r2, s[1][0][1], 0xFDEACF06, 0xE4FEFD0D, 0x0ED7FCFA, 0x10171D0A);
	r3 = D(r3, s[1][0][1], 0xF2FBFCE9, 0x080103E0, 0xF5030905, 0xE60AFB11);
	r4 = D(r4, s[1][0][1], 0x19FB11F3, 0x17FA09F6, 0x0F110604, 0xEB12DC0B);
	r5 = D(r5, s[1][0][1], 0xE9110B00, 0xF3F40DE6, 0x110414F7, 0xEDF4E000);
	r6 = D(r6, s[1][0][1], 0xEE122FE4, 0xFAF90FF2, 0xF30E00F9, 0xFF0BF703);
	r7 = D(r7, s[1][0][1], 0x1003ED14, 0x0EFCEDEF, 0x08F510FC, 0x11FCF5E7);
	r0 = D(r0, s[1][0][2], 0xE3FFF007, 0xF1FE1209, 0x03130DE7, 0x12150C07);
	r1 = D(r1, s[1][0][2], 0x08FEF602, 0xF1FCF012, 0xF5EBF10D, 0xF5FDFFFB);
	r2 = D(r2, s[1][0][2], 0x131206F9, 0xFC06F8EC, 0x06F7E6F0, 0x0E0105F5);
	r3 = D(r3, s[1][0][2], 0xF90C1B03, 0xFD001CF2, 0xF9FFFBFE, 0xF1F60C01);
	r4 = D(r4, s[1][0][2], 0xE6FBF613, 0x00FCFA1F, 0x13190704, 0xFBEDFA01);
	r5 = D(r5, s[1][0][2], 0x0817FCEB, 0x120CF8F6, 0xFFE4F7F9, 0xFCFA0208);
	r6 = D(r6, s[1][0][2], 0xF9120B15, 0x0901F3ED, 0xF1F71212, 0xFCF00307);
	r7 = D(r7, s[1][0][2], 0xEEE9FFFE, 0x11F5F902, 0xFFFB0408, 0x030505F8);
	r0 = D(r0, s[1][1][0], 0x0204F61B, 0x00FA00F1, 0x08F1ECF9, 0x08DCFA06);
	r1 = D(r1, s[1][1][0], 0x0816FC00, 0x0B060902, 0x08FDE408, 0xED0302F6);
	r2 = D(r2, s[1][1][0], 0xF5F518F1, 0x15FEFA0C, 0xFA01030F, 0x102CFCD5);
	r3 = D(r3, s[1][1][0], 0xEF00FE17, 0x00EFFDFE, 0xF404F8E5, 0x020FF10C);
	r4 = D(r4, s[1][1][0], 0xF00A00F3, 0x040001F9, 0xF60604FD, 0x0509FDFD);
	r5 = D(r5, s[1][1][0], 0x080EF710, 0x210410F2, 0x08FEF112, 0xF5FF09F9);
	r6 = D(r6, s[1][1][0], 0xFFFAFC01, 0xF804060D, 0x1CFB110C, 0x17020402);
	r7 = D(r7, s[1][1][0], 0xEDFC0AFE, 0x0F0CFAE4, 0x00FFFD0F, 0x140FEA19);
	r0 = D(r0, s[1][1][1], 0xEEF80F0D, 0xEAFFF807, 0xF50E080B, 0x06F90412);
	r1 = D(r1, s[1][1][1], 0xF507FF16, 0x05FE10FA, 0x1108FDF7, 0xF2F6F220);
	r2 = D(r2, s[1][1][1], 0x0212E600, 0xEFDDF612, 0x0F09F40D, 0x0305E4C8);
	r3 = D(r3, s[1][1][1], 0xE70607FF, 0xFE06F213, 0x0B00FF00, 0xE904E1E3);
	r4 = D(r4, s[1][1][1], 0x0116F50C, 0xD8EA0DED, 0x011702F7, 0x16FF0EF7);
	r5 = D(r5, s[1][1][1], 0xF2ED01EE, 0x08100E10, 0xF6100419, 0x0B080EFD);
	r6 = D(r6, s[1][1][1], 0xD8E61605, 0xEC0510FC, 0x230F0E0A, 0xFD0DFD10);
	r7 = D(r7, s[1][1][1], 0x1118FF08, 0x1A08FEFE, 0xE8F1EB0B, 0x0201F110);
	r0 = D(r0, s[1][1][2], 0x00FAFCF6, 0xFA12030C, 0xFFF6FE03, 0x1016E70A);
	r1 = D(r1, s[1][1][2], 0xF3E2F504, 0xF616EEF5, 0x01EF0B0F, 0xF6FE05F4);
	r2 = D(r2, s[1][1][2], 0xF1100601, 0xDDEBFC0B, 0x0602150A, 0x18E8130B);
	r3 = D(r3, s[1][1][2], 0xFEFAE6FE, 0xFF060719, 0xF0F1D61E, 0x10F2F10D);
	r4 = D(r4, s[1][1][2], 0xFBE8F819, 0xF4EE0B1E, 0x00120900, 0xFDFDFE02);
	r5 = D(r5, s[1][1][2], 0xED08DDFF, 0x0A03D8EA, 0x0DE1020D, 0xFF0910FE);
	r6 = D(r6, s[1][1][2], 0xE911F703, 0xE6190E05, 0x11F6FB07, 0x0006ED03);
	r7 = D(r7, s[1][1][2], 0x00F404FD, 0x1B041AFA, 0xFDFF0AFD, 0x0815FD19);
	r0 = D(r0, s[1][2][0], 0x11FEFC08, 0xFF0B11F9, 0xF50F15FC, 0xE901F8DC);
	r1 = D(r1, s[1][2][0], 0x070A12FA, 0xF5FB0209, 0x13FF010D, 0x05F105F8);
	r2 = D(r2, s[1][2][0], 0x0104F616, 0x0003EEFB, 0xF609F808, 0x0C04EC04);
	r3 = D(r3, s[1][2][0], 0x02F0F905, 0x0805FAFA, 0xF5E8F403, 0xFB0AFF11);
	r4 = D(r4, s[1][2][0], 0x04FBFFEB, 0x0015E3FE, 0xFCF3FA06, 0xEAF80608);
	r5 = D(r5, s[1][2][0], 0xFB02F71B, 0xED17FCE8, 0xFB08E5FF, 0xFBFA02FE);
	r6 = D(r6, s[1][2][0], 0x1E09F215, 0xFCF40109, 0x0F03FF11, 0x02021506);
	r7 = D(r7, s[1][2][0], 0x0F050701, 0xF60D0E01, 0xFCF5F703, 0xFD08E4F7);
	r0 = D(r0, s[1][2][1], 0xEDFB05EF, 0x00030202, 0xF4FE0012, 0x1502F5F1);
	r1 = D(r1, s[1][2][1], 0x0303FEFB, 0xFB05F20F, 0x03030607, 0x01F10EFE);
	r2 = D(r2, s[1][2][1], 0xFF0E11E8, 0xF711FDEB, 0x040116F0, 0x150101D7);
	r3 = D(r3, s[1][2][1], 0x0008F502, 0xFDF206EC, 0x0918010C, 0xFF07FD0C);
	r4 = D(r4, s[1][2][1], 0xE6F7F3F5, 0x1EF91EF1, 0xFC0E0001, 0xFC01F1F7);
	r5 = D(r5, s[1][2][1], 0x1C06FF0D, 0xF2F20D08, 0x11F705FD, 0x160FFD14);
	r6 = D(r6, s[1][2][1], 0xFACDF9F9, 0x10F90802, 0xF4FF0802, 0x10F4EFFD);
	r7 = D(r7, s[1][2][1], 0x030104E6, 0x020C001B, 0xF908F009, 0xE2021316);
	r0 = D(r0, s[1][2][2], 0xFB0107F9, 0x0C03050F, 0xF7F6F60E, 0x10F2FE0D);
	r1 = D(r1, s[1][2][2], 0xFFF70D1D, 0xFC08E6FA, 0x27071108, 0x05FCFA0C);
	r2 = D(r2, s[1][2][2], 0x0B041205, 0x0C0EFE00, 0x001000EC, 0x05E6FAF6);
	r3 = D(r3, s[1][2][2], 0x0606FC10, 0x0E0C0BF8, 0xEEF8E20F, 0x09060C03);
	r4 = D(r4, s[1][2][2], 0x05051405, 0xF906FAFC, 0xF4FEF1F2, 0xF2FDF801);
	r5 = D(r5, s[1][2][2], 0x09EF12F8, 0x07F90D02, 0xFA06DCF7, 0x1EFD0200);
	r6 = D(r6, s[1][2][2], 0xE5F1F717, 0x0EE9FC09, 0x070B02FE, 0x0EF5F101);
	r7 = D(r7, s[1][2][2], 0x14FF01FA, 0xECF30201, 0x02FD0203, 0xF906FCFD);
	s[0][0][0] = G[6][xy.y+0][xy.x+0]; s[0][0][1] = G[6][xy.y+0][xy.x+1];
	s[0][0][2] = G[6][xy.y+0][xy.x+2]; s[0][1][0] = G[6][xy.y+1][xy.x+0];
	s[0][1][1] = G[6][xy.y+1][xy.x+1]; s[0][1][2] = G[6][xy.y+1][xy.x+2];
	s[0][2][0] = G[6][xy.y+2][xy.x+0]; s[0][2][1] = G[6][xy.y+2][xy.x+1];
	s[0][2][2] = G[6][xy.y+2][xy.x+2]; s[1][0][0] = G[7][xy.y+0][xy.x+0];
	s[1][0][1] = G[7][xy.y+0][xy.x+1]; s[1][0][2] = G[7][xy.y+0][xy.x+2];
	s[1][1][0] = G[7][xy.y+1][xy.x+0]; s[1][1][1] = G[7][xy.y+1][xy.x+1];
	s[1][1][2] = G[7][xy.y+1][xy.x+2]; s[1][2][0] = G[7][xy.y+2][xy.x+0];
	s[1][2][1] = G[7][xy.y+2][xy.x+1]; s[1][2][2] = G[7][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x0DD911FB, 0xF503CC08, 0xFBE5E5FD, 0x11FFF20F);
	r1 = D(r1, s[0][0][0], 0x0F100BF4, 0xF319FBFB, 0x0AE21E15, 0x01DDFD01);
	r2 = D(r2, s[0][0][0], 0x0313F4F0, 0x1E181400, 0xFC020003, 0xDBFF0105);
	r3 = D(r3, s[0][0][0], 0xE0E91811, 0x09FB07FB, 0x0705190D, 0x120F0705);
	r4 = D(r4, s[0][0][0], 0xF5030311, 0xEBEE10F1, 0x0ACFFF07, 0xDEED04F9);
	r5 = D(r5, s[0][0][0], 0x09DC13D6, 0x04FF06F9, 0xFC000C06, 0xF7E8EAE1);
	r6 = D(r6, s[0][0][0], 0xDE00FC05, 0xED00100A, 0x031218FE, 0xEAE301FA);
	r7 = D(r7, s[0][0][0], 0x0C1DEF0B, 0x001003ED, 0x08F41000, 0xFE18080B);
	r0 = D(r0, s[0][0][1], 0xFC06F1F6, 0xD802F2ED, 0xEEE6FBEA, 0x1B0103F3);
	r1 = D(r1, s[0][0][1], 0xECF9F80B, 0xECF80113, 0xFFF10BFF, 0x0A12F50B);
	r2 = D(r2, s[0][0][1], 0x1235F101, 0xF815F508, 0x160401E9, 0xF0F1EAE2);
	r3 = D(r3, s[0][0][1], 0x1F19F2ED, 0x0B0B03FA, 0xF8141215, 0x0ACE180A);
	r4 = D(r4, s[0][0][1], 0x01EDE90B, 0xF5020504, 0x14D5FCFD, 0x07FFF104);
	r5 = D(r5, s[0][0][1], 0x2C0C0614, 0xF90B08F3, 0x10EA06FF, 0x0704FFB3);
	r6 = D(r6, s[0][0][1], 0xEA11F515, 0xF7ED08E4, 0x008811F7, 0xEEDE06FB);
	r7 = D(r7, s[0][0][1], 0x000003FC, 0x0B0200F3, 0x19F6090A, 0xF80CF9F1);
	r0 = D(r0, s[0][0][2], 0x0BF6FCF9, 0x1501060E, 0x01ED03E8, 0xF0130EE6);
	r1 = D(r1, s[0][0][2], 0xEB17F514, 0x2400FBFA, 0x00010209, 0x06060BF8);
	r2 = D(r2, s[0][0][2], 0x0B131809, 0xFC29DC12, 0xEE0DEB02, 0xEE1AEBE4);
	r3 = D(r3, s[0][0][2], 0x1129F708, 0xF0FBF5FE, 0x16F1F1F6, 0xEBF70AFA);
	r4 = D(r4, s[0][0][2], 0xDC020C0A, 0xF3DB00FF, 0xF3080417, 0x01DFFA09);
	r5 = D(r5, s[0][0][2], 0x09FD0805, 0x1015F30D, 0xE50405E2, 0xEDDCFC18);
	r6 = D(r6, s[0][0][2], 0x02F22E11, 0x23040510, 0x06FF080F, 0x00FA02F4);
	r7 = D(r7, s[0][0][2], 0x230BFA11, 0x0AF9F700, 0xF00208FD, 0xFDF10110);
	r0 = D(r0, s[0][1][0], 0x08FC00F0, 0x1501CAFB, 0x20D3FFF6, 0xEA19F8FC);
	r1 = D(r1, s[0][1][0], 0x041629D8, 0x09F5F4FB, 0x020605F3, 0x000EFB0F);
	r2 = D(r2, s[0][1][0], 0x160EE604, 0xFE181AFF, 0xF8F4F00E, 0x0BCB0CFE);
	r3 = D(r3, s[0][1][0], 0xFBFAF902, 0x0A04C112, 0x09EBF904, 0x05F605F4);
	r4 = D(r4, s[0][1][0], 0x24DDF903, 0x0905F902, 0xFBEBFAF6, 0x18F604F3);
	r5 = D(r5, s[0][1][0], 0x0D0B1E01, 0xE8210D0D, 0xFDFFF903, 0x010EF01F);
	r6 = D(r6, s[0][1][0], 0xF814E7F6, 0xE7FAE9ED, 0x18F422F9, 0xFAEA06D2);
	r7 = D(r7, s[0][1][0], 0x1015EBF6, 0xF8122431, 0x05D8FC00, 0xF6C80DEC);
	r0 = D(r0, s[0][1][1], 0x0603F1F0, 0xF621C3F1, 0x10EF0CFF, 0xD61EEDE3);
	r1 = D(r1, s[0][1][1], 0xFCF00009, 0xD5E0E504, 0xFDF100F0, 0x0BF100FC);
	r2 = D(r2, s[0][1][1], 0xCFDA16F5, 0x03140AD6, 0x110AF9ED, 0x0425FA0B);
	r3 = D(r3, s[0][1][1], 0xF7FB2211, 0xDEEBD2F1, 0xEA1F34E9, 0x02C70612);
	r4 = D(r4, s[0][1][1], 0xFEDFFDFC, 0xE6140FFE, 0xDCFF1808, 0xEA040CE7);
	r5 = D(r5, s[0][1][1], 0xF7DF0507, 0xFAF71303, 0x20EB11EF, 0xF6C10DFD);
	r6 = D(r6, s[0][1][1], 0xEEF1EBFC, 0x16160714, 0x0800FEF9, 0xEA042C22);
	r7 = D(r7, s[0][1][1], 0xDA10D70F, 0xF1FF091A, 0x140718FE, 0xC2120E11);
	r0 = D(r0, s[0][1][2], 0xFB0B0704, 0xDAF0010D, 0x12F209F3, 0xE60C0112);
	r1 = D(r1, s[0][1][2], 0x0808F9E1, 0x0BFCFC00, 0xFA0C0614, 0x0AE8F702);
	r2 = D(r2, s[0][1][2], 0x090C02FA, 0x0B09F8F3, 0xFB1C1AF5, 0x0AF40321);
	r3 = D(r3, s[0][1][2], 0x06F81307, 0x0F1CF8F8, 0xF102ED0A, 0xF5EDE4FC);
	r4 = D(r4, s[0][1][2], 0x18F6FBF9, 0x0B1009EB, 0x0B001113, 0x17D8F610);
	r5 = D(r5, s[0][1][2], 0xFEEAF9FE, 0x10F3E6FE, 0x0C0D0F01, 0x02E41A08);
	r6 = D(r6, s[0][1][2], 0xF8FA08E9, 0x01F80EF1, 0x09070004, 0x14EEFC02);
	r7 = D(r7, s[0][1][2], 0xFB080204, 0x02F5F90A, 0xFCE4FF01, 0x01EF0E00);
	r0 = D(r0, s[0][2][0], 0x00FDFC07, 0x17F9F113, 0x03F6E815, 0x07041C07);
	r1 = D(r1, s[0][2][0], 0xF9F61B12, 0xFA150613, 0x0001F70F, 0xE3F9F5FC);
	r2 = D(r2, s[0][2][0], 0x05FE0900, 0xE61E1510, 0x0DEBF108, 0x0D19EB0C);
	r3 = D(r3, s[0][2][0], 0x0F1BE1DF, 0x1805E9EA, 0x15E5F817, 0x0DFAFA07);
	r4 = D(r4, s[0][2][0], 0x06EA0503, 0xF5040CFA, 0xFD08FE00, 0x0EE3F7FD);
	r5 = D(r5, s[0][2][0], 0x0D10F7C8, 0x13EC0C10, 0x0005040B, 0x0002FF19);
	r6 = D(r6, s[0][2][0], 0xDF05F903, 0x260C0511, 0x0713F603, 0x04170B0A);
	r7 = D(r7, s[0][2][0], 0x030603FC, 0x17FE0FF5, 0xFAFD0102, 0xF5E00D04);
	r0 = D(r0, s[0][2][1], 0x1112F61B, 0x1500F1F8, 0xFDF30D0D, 0xEA0C0C08);
	r1 = D(r1, s[0][2][1], 0x0BE40A07, 0xEA020EFE, 0xF8020302, 0xE9ED0517);
	r2 = D(r2, s[0][2][1], 0x0A1C09F3, 0xF9CD0000, 0x0805FB08, 0x15D4FB19);
	r3 = D(r3, s[0][2][1], 0x0404F704, 0x0806ED15, 0xF6DC11E5, 0x15CAFE11);
	r4 = D(r4, s[0][2][1], 0x01AE0E1D, 0xEB06EAFB, 0x11FF0510, 0x07DD0001);
	r5 = D(r5, s[0][2][1], 0xF915F907, 0x01100001, 0x1204FBF9, 0x0AFA0408);
	r6 = D(r6, s[0][2][1], 0x0403DEF0, 0x0614FCFA, 0x0109F3FC, 0xF90B0D14);
	r7 = D(r7, s[0][2][1], 0xF4FD00FA, 0xEB19FEF2, 0x1F0FFB0A, 0xDC100901);
	r0 = D(r0, s[0][2][2], 0xFE1AF8F3, 0x07F20512, 0x05F2FD09, 0x07F008E9);
	r1 = D(r1, s[0][2][2], 0xF408F8F6, 0xF81BFC0F, 0xF90D02FD, 0x05EA00F1);
	r2 = D(r2, s[0][2][2], 0x0330FB17, 0xDCFA0EF2, 0xFE010508, 0x19A8F604);
	r3 = D(r3, s[0][2][2], 0x0A0BF1F3, 0xFAE8021E, 0x02EEF8F5, 0xED0E0D06);
	r4 = D(r4, s[0][2][2], 0x0D1D03E9, 0x14FC131B, 0x07F5F902, 0xFFEBFA04);
	r5 = D(r5, s[0][2][2], 0x070EFD1B, 0x04EE0702, 0xFFF1FDFA, 0x0706F91B);
	r6 = D(r6, s[0][2][2], 0xE6F209E2, 0xF70704FD, 0xF412FDF7, 0xF1F30106);
	r7 = D(r7, s[0][2][2], 0x09080004, 0x071000FF, 0x0DF7F603, 0xFAF9FF02);
	r0 = D(r0, s[1][0][0], 0xF109F7F6, 0x0A00FCFB, 0x10ED11F6, 0x29EA0306);
	r1 = D(r1, s[1][0][0], 0xE6F513FA, 0x06FEF511, 0x0608F9F6, 0xF2F003EF);
	r2 = D(r2, s[1][0][0], 0xF606F811, 0xD9091514, 0x0F14FA08, 0x21F32616);
	r3 = D(r3, s[1][0][0], 0x020BE4D3, 0xFF0103EF, 0x0EF903FF, 0xEC0D0B0A);
	r4 = D(r4, s[1][0][0], 0xF901F809, 0xB1EEF8FD, 0x0311F6FF, 0x1D17DD11);
	r5 = D(r5, s[1][0][0], 0x12F6EEFB, 0x02F62007, 0x0009240C, 0x2EE4B90E);
	r6 = D(r6, s[1][0][0], 0xF00B0B07, 0xFC07ECF5, 0x36F504F8, 0x0AE313FB);
	r7 = D(r7, s[1][0][0], 0x0A04F70D, 0x07FA1107, 0xE414FD0C, 0x01F10AE1);
	r0 = D(r0, s[1][0][1], 0xF90605F7, 0x29F2F6EC, 0x1FFF131F, 0xE7E8F603);
	r1 = D(r1, s[1][0][1], 0xF9011601, 0x0FFDFCF5, 0x09FFE7DE, 0x000E1DFA);
	r2 = D(r2, s[1][0][1], 0xDD191801, 0xF8050800, 0x06DA18F5, 0xE20F0AFE);
	r3 = D(r3, s[1][0][1], 0x03F2F91B, 0x05F304FA, 0xDBFD0308, 0x0B070004);
	r4 = D(r4, s[1][0][1], 0xF60122F7, 0x0EE8E88F, 0xEBFDF1F8, 0x11F9FD0A);
	r5 = D(r5, s[1][0][1], 0xF01CFB11, 0x0C0612F7, 0x10030C14, 0x1105DEFD);
	r6 = D(r6, s[1][0][1], 0xFC15F4F6, 0xEDF7FA22, 0x09080211, 0x16070812);
	r7 = D(r7, s[1][0][1], 0x13190100, 0x11F0FB06, 0x04080205, 0x00FE10FF);
	r0 = D(r0, s[1][0][2], 0x0F0009F8, 0x2600F1F6, 0xFBFE07EF, 0xE6FE09F2);
	r1 = D(r1, s[1][0][2], 0xF5FDF5FF, 0x130AF400, 0xFF03E30F, 0xEDFB0209);
	r2 = D(r2, s[1][0][2], 0x0EF90503, 0xF41DFAE7, 0x09FFEFED, 0xFA01FBF7);
	r3 = D(r3, s[1][0][2], 0x0A1903FD, 0xFFF7FAF8, 0xF6FC0C03, 0x07EEF3F7);
	r4 = D(r4, s[1][0][2], 0xFAEC0204, 0xFE07FFE8, 0x2009EA00, 0xEEF8F40E);
	r5 = D(r5, s[1][0][2], 0xFBF502E7, 0x17F5FAEE, 0x0004FEFF, 0xE50CE002);
	r6 = D(r6, s[1][0][2], 0x05FFF7E2, 0x1CED0F23, 0xEB01FF0F, 0x030005F7);
	r7 = D(r7, s[1][0][2], 0x0C0EF1F4, 0xF3FB0AF2, 0x12F90F06, 0x050CF7FE);
	r0 = D(r0, s[1][1][0], 0xEEE9111A, 0xFBFF0001, 0x1A01F6ED, 0xF7FE1203);
	r1 = D(r1, s[1][1][0], 0xFD0A1A03, 0x06FB0B09, 0x0705EAF6, 0x09F30000);
	r2 = D(r2, s[1][1][0], 0x0BF9EE01, 0xF0190C02, 0xF4E5F109, 0x1CF505DC);
	r3 = D(r3, s[1][1][0], 0xE72804E8, 0xF6E40707, 0x0607ED07, 0xFC01FAEC);
	r4 = D(r4, s[1][1][0], 0x07EC0910, 0x0713EAFC, 0x18FDFE08, 0x0702F10A);
	r5 = D(r5, s[1][1][0], 0xFDFEF8FD, 0x11FDF118, 0xF9F1F906, 0x02F3D6DF);
	r6 = D(r6, s[1][1][0], 0x05DCD6EC, 0xF6EBEA03, 0x03FC09FC, 0x06EFECE8);
	r7 = D(r7, s[1][1][0], 0xFF03EE0A, 0xDD05FBF8, 0xF9FEFF0F, 0x05FE1D03);
	r0 = D(r0, s[1][1][1], 0xF4FA01F7, 0x1B08A9EA, 0x05FF06F2, 0x09F5FBFA);
	r1 = D(r1, s[1][1][1], 0xD6160FEF, 0x0B0DFF02, 0xF7FFE922, 0xF9100503);
	r2 = D(r2, s[1][1][1], 0x160AFC08, 0xD6DEEBE0, 0x011EFB06, 0xC6D20315);
	r3 = D(r3, s[1][1][1], 0xCCFF1503, 0x09FA04FC, 0xE8FF0102, 0xE81400F8);
	r4 = D(r4, s[1][1][1], 0x0F061311, 0x16210304, 0x02F4F709, 0xFE0A04EC);
	r5 = D(r5, s[1][1][1], 0x0FF401E9, 0xFFEA17F4, 0xF7F314EF, 0x0210CFFF);
	r6 = D(r6, s[1][1][1], 0x0718FB0A, 0xFB190AFA, 0xFA090002, 0x160CD9FB);
	r7 = D(r7, s[1][1][1], 0x12090B18, 0xF4100312, 0x01E6F6FD, 0xFBFEE100);
	r0 = D(r0, s[1][1][2], 0x11F40408, 0xA6FC1306, 0xFB0602FD, 0x1AF22410);
	r1 = D(r1, s[1][1][2], 0xF5120A09, 0x0A00F3FB, 0xFEF10D0B, 0xFAF10904);
	r2 = D(r2, s[1][1][2], 0xE3E91EF2, 0xF9F6FBEE, 0xFCF3DEFB, 0xC9FCE9F0);
	r3 = D(r3, s[1][1][2], 0xFBF00DF4, 0xF21E0DF8, 0xF904DA00, 0x07040710);
	r4 = D(r4, s[1][1][2], 0x1207F70E, 0xCFEF0803, 0x0AF500FE, 0x06E7040B);
	r5 = D(r5, s[1][1][2], 0xE5F11007, 0x1814F3F4, 0x08EF18ED, 0xD2FFF90A);
	r6 = D(r6, s[1][1][2], 0xFD0D0A1A, 0x0CD60910, 0x050FF710, 0x05FDFA02);
	r7 = D(r7, s[1][1][2], 0x13F00204, 0x0C08ED05, 0xF00408FF, 0xFCFB0906);
	r0 = D(r0, s[1][2][0], 0x030009F8, 0x1813EBE8, 0x0C03FE01, 0x15FBEAE9);
	r1 = D(r1, s[1][2][0], 0xAA0B10FA, 0xFEEC1014, 0xEFF9030F, 0x1C07F0FA);
	r2 = D(r2, s[1][2][0], 0x280A0308, 0xE2EEF409, 0xF7F5FBF6, 0x0710F116);
	r3 = D(r3, s[1][2][0], 0x120AFB01, 0x160F07F8, 0x1A080D0A, 0x0214F8F1);
	r4 = D(r4, s[1][2][0], 0x1A06EC01, 0x22E20608, 0xF8000206, 0xF004F3F4);
	r5 = D(r5, s[1][2][0], 0xFF0DD81A, 0x1EE507E7, 0x04F0F5F8, 0x1FFCFAFF);
	r6 = D(r6, s[1][2][0], 0xFE050100, 0x13110A00, 0xF6FB0804, 0x03090BF8);
	r7 = D(r7, s[1][2][0], 0x0E13DF16, 0x0A01F607, 0x0F010AFB, 0xF8010211);
	r0 = D(r0, s[1][2][1], 0x0D060901, 0x0911FC00, 0x0700F6ED, 0x14FD0101);
	r1 = D(r1, s[1][2][1], 0xFFEF0816, 0xDF07FC03, 0xF004F907, 0x15FDFFDF);
	r2 = D(r2, s[1][2][1], 0x24F20601, 0xF4FA1203, 0x0406E4FE, 0x0B0AF0FC);
	r3 = D(r3, s[1][2][1], 0x02FA0006, 0x000A1600, 0xEC01E900, 0x25E70008);
	r4 = D(r4, s[1][2][1], 0x1301F808, 0x28F10815, 0x0301F8FC, 0x0F08FE0D);
	r5 = D(r5, s[1][2][1], 0x02EC1E01, 0x180E00E0, 0xFEF6F3E6, 0x031018FA);
	r6 = D(r6, s[1][2][1], 0xFE0BEB0A, 0x0FEC0BE4, 0x070BFD14, 0x0C0404EC);
	r7 = D(r7, s[1][2][1], 0xEAF4F1FA, 0x1DF9F8F4, 0xFCF7FCF4, 0x0AEDFD13);
	r0 = D(r0, s[1][2][2], 0xFD1BFF13, 0x280F05FE, 0x04FF08F9, 0x0003D20E);
	r1 = D(r1, s[1][2][2], 0xFB01020E, 0xF8FF0603, 0xFA0003EF, 0xF8140615);
	r2 = D(r2, s[1][2][2], 0x0F0F0A02, 0x0310F9F9, 0xE404FB05, 0xDE170C08);
	r3 = D(r3, s[1][2][2], 0xF108F6FC, 0x09F0121C, 0xF2F1FFF1, 0xF3F70F0E);
	r4 = D(r4, s[1][2][2], 0xF6FF08FF, 0x16FEFB20, 0x04FEFFF8, 0x0900EF0A);
	r5 = D(r5, s[1][2][2], 0xEAF70305, 0x0804FD0F, 0xEB04FCF9, 0x0C0D1603);
	r6 = D(r6, s[1][2][2], 0xD8F409FC, 0xFC0DFA07, 0xF7090F0C, 0x0E0B060C);
	r7 = D(r7, s[1][2][2], 0x09EB0204, 0x0A0508EE, 0x080214FB, 0xFC0CFEFA);
	s[0][0][0] = G[8][xy.y+0][xy.x+0]; s[0][0][1] = G[8][xy.y+0][xy.x+1];
	s[0][0][2] = G[8][xy.y+0][xy.x+2]; s[0][1][0] = G[8][xy.y+1][xy.x+0];
	s[0][1][1] = G[8][xy.y+1][xy.x+1]; s[0][1][2] = G[8][xy.y+1][xy.x+2];
	s[0][2][0] = G[8][xy.y+2][xy.x+0]; s[0][2][1] = G[8][xy.y+2][xy.x+1];
	s[0][2][2] = G[8][xy.y+2][xy.x+2]; s[1][0][0] = G[9][xy.y+0][xy.x+0];
	s[1][0][1] = G[9][xy.y+0][xy.x+1]; s[1][0][2] = G[9][xy.y+0][xy.x+2];
	s[1][1][0] = G[9][xy.y+1][xy.x+0]; s[1][1][1] = G[9][xy.y+1][xy.x+1];
	s[1][1][2] = G[9][xy.y+1][xy.x+2]; s[1][2][0] = G[9][xy.y+2][xy.x+0];
	s[1][2][1] = G[9][xy.y+2][xy.x+1]; s[1][2][2] = G[9][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x02F70B05, 0xE8F00A0B, 0xFAFC1101, 0xFAFB00EE);
	r1 = D(r1, s[0][0][0], 0x00140C03, 0xFC0BFFF8, 0xFEDF0911, 0x011DF6EC);
	r2 = D(r2, s[0][0][0], 0xF705FC10, 0x23FC0FFA, 0xF4F41104, 0x1D1CFE00);
	r3 = D(r3, s[0][0][0], 0xE1D5FF19, 0x15F313FB, 0xF3E41703, 0xF8F2FEEC);
	r4 = D(r4, s[0][0][0], 0x0BFA0216, 0x0AE486EA, 0x0C0701FB, 0x04EFF1FF);
	r5 = D(r5, s[0][0][0], 0xF9C20D03, 0xF3F9F0F6, 0x0FE906F5, 0xE009150C);
	r6 = D(r6, s[0][0][0], 0xE1E9130F, 0xFE0EE3F2, 0xCBCADC20, 0x09060A02);
	r7 = D(r7, s[0][0][0], 0x0C12F30E, 0xFBFD12F9, 0xF0060BF8, 0xF8F9F1D6);
	r0 = D(r0, s[0][0][1], 0xFA03FB0A, 0xDA01FF0A, 0xF703FDF3, 0x06F90CEA);
	r1 = D(r1, s[0][0][1], 0x0E08FD06, 0x0D04F9FD, 0xE60F0CE9, 0x08EAF9FE);
	r2 = D(r2, s[0][0][1], 0xDCD708E4, 0x06120F13, 0xEC1C05F8, 0xFF171602);
	r3 = D(r3, s[0][0][1], 0x252A0820, 0x0924FB0E, 0xE8F8FBFD, 0x00FC08EC);
	r4 = D(r4, s[0][0][1], 0xF2FB030C, 0xF22704D7, 0x04F8E8FD, 0x03140913);
	r5 = D(r5, s[0][0][1], 0xDAFE060F, 0xFC0702F6, 0x07FD07F5, 0xF5CB0B13);
	r6 = D(r6, s[0][0][1], 0x08FA0E00, 0x0111EE12, 0x0C04FC06, 0xFEECFD01);
	r7 = D(r7, s[0][0][1], 0xFB0A060C, 0xF4FA02E9, 0x030915EE, 0xEC0D14F2);
	r0 = D(r0, s[0][0][2], 0xFD0512FA, 0x0FF7000B, 0xFA0AFE00, 0x051B0605);
	r1 = D(r1, s[0][0][2], 0x050412FE, 0x07F7F9ED, 0x0110FEFD, 0xFBFC04FE);
	r2 = D(r2, s[0][0][2], 0x8126FBFE, 0x090ADD24, 0xF7E306FB, 0x13E1F706);
	r3 = D(r3, s[0][0][2], 0x38F9010D, 0x07F0F103, 0x0B01FABF, 0x070000E4);
	r4 = D(r4, s[0][0][2], 0x0DFFF612, 0x13110B0A, 0xF40CFBFD, 0xF3FCF709);
	r5 = D(r5, s[0][0][2], 0x2A110701, 0xF3F7FF0B, 0x010907FE, 0x150DEEF2);
	r6 = D(r6, s[0][0][2], 0x1310DCFE, 0xFC0519F6, 0x051DF311, 0x07FBFE09);
	r7 = D(r7, s[0][0][2], 0xFFF0F21A, 0x00FAFAEF, 0xF5FA04F6, 0x1312E708);
	r0 = D(r0, s[0][1][0], 0x17F103F0, 0x070D1222, 0xFB0E0E03, 0xFEF316F9);
	r1 = D(r1, s[0][1][0], 0x180C04F3, 0x0400F60D, 0xFFE6FEF5, 0xEDC313F7);
	r2 = D(r2, s[0][1][0], 0xF7270BFA, 0x0AF61DDC, 0x0BC4FDFA, 0x0F16E806);
	r3 = D(r3, s[0][1][0], 0x04FEE9F3, 0x0611FD1B, 0x0A1CFBF3, 0x04AB040A);
	r4 = D(r4, s[0][1][0], 0x05F6E817, 0xD928E3FD, 0x081DFE08, 0xEBF7050A);
	r5 = D(r5, s[0][1][0], 0xF626F201, 0xFD090801, 0x0F050003, 0xE8B5FB06);
	r6 = D(r6, s[0][1][0], 0x05EE15EB, 0x1BF213FF, 0x1497F001, 0xFE061211);
	r7 = D(r7, s[0][1][0], 0x09DA050C, 0x0102FB16, 0x020BE200, 0x061907E8);
	r0 = D(r0, s[0][1][1], 0x08F30A0E, 0xFA11FC0C, 0xF8F40CFE, 0x0433010D);
	r1 = D(r1, s[0][1][1], 0xF40E0917, 0x01E60F0A, 0xF2EC03E5, 0xF1C1F1EB);
	r2 = D(r2, s[0][1][1], 0x04F002F7, 0xEBFFF5C0, 0xF53CE10B, 0xFE170E01);
	r3 = D(r3, s[0][1][1], 0xF71704E8, 0x03D1FF14, 0xF4EEF3F4, 0xFCA903DC);
	r4 = D(r4, s[0][1][1], 0x02190817, 0x2B3107E9, 0xF7FE070B, 0xF80908E6);
	r5 = D(r5, s[0][1][1], 0xFCE909AE, 0x190E00ED, 0x0822F501, 0x1EB6FEEA);
	r6 = D(r6, s[0][1][1], 0x1F2C040E, 0xF5DE07FF, 0x1681F81E, 0xF403FC1C);
	r7 = D(r7, s[0][1][1], 0xFD1C0DF6, 0xE013F604, 0xF13402BC, 0x0B320DD8);
	r0 = D(r0, s[0][1][2], 0x138EFCF7, 0xF008ED0B, 0x050C0CE3, 0x16FD0B0D);
	r1 = D(r1, s[0][1][2], 0xFEFC0805, 0x1281F805, 0x1CFAF715, 0x0CE9FF00);
	r2 = D(r2, s[0][1][2], 0xE6F7F9F5, 0x1AE910D0, 0xEEE0F406, 0x031DF107);
	r3 = D(r3, s[0][1][2], 0xF9DEEFE5, 0x1203FC16, 0xF50AE6F4, 0x110209EF);
	r4 = D(r4, s[0][1][2], 0xF7F40901, 0x11F8F815, 0x0701FA09, 0x02E60E11);
	r5 = D(r5, s[0][1][2], 0xF708F61B, 0x09D7F4FC, 0xFBF319FC, 0xFCFDEA00);
	r6 = D(r6, s[0][1][2], 0x0026E628, 0x051C01FE, 0xF8E50E09, 0xFC1E0AE1);
	r7 = D(r7, s[0][1][2], 0xF3EB0006, 0x07EC0CF8, 0xFFE8D403, 0x0BED0315);
	r0 = D(r0, s[0][2][0], 0x0BE8EF0C, 0x110601FC, 0xF0B8EDFA, 0x03E2F2FD);
	r1 = D(r1, s[0][2][0], 0xF073F2FC, 0x0506FF04, 0xF2CB0217, 0x130317D8);
	r2 = D(r2, s[0][2][0], 0xE2E408F7, 0xE3F4E326, 0xF30C08FB, 0x055E060C);
	r3 = D(r3, s[0][2][0], 0xFAC6F5E6, 0xFCFAF705, 0x1A06EAF1, 0xF6B7F100);
	r4 = D(r4, s[0][2][0], 0x02F607ED, 0xF8F008F0, 0x0758FB01, 0x08E107F0);
	r5 = D(r5, s[0][2][0], 0x153C16EF, 0xFA0BF416, 0x06F1FD13, 0x069A150A);
	r6 = D(r6, s[0][2][0], 0xF40D01CC, 0xEE0602EA, 0xFD0B220B, 0xF20B0F1F);
	r7 = D(r7, s[0][2][0], 0x0229FD05, 0xF802F612, 0x01EAF7E5, 0x09D708DC);
	r0 = D(r0, s[0][2][1], 0x060A0210, 0xF2EFF319, 0x00DAF7DD, 0xFCEBFDFC);
	r1 = D(r1, s[0][2][1], 0x00FB0821, 0xEEFC1914, 0xECCC07F9, 0x0D0D02E9);
	r2 = D(r2, s[0][2][1], 0x0CEC040E, 0xEC35FA17, 0xFDF40702, 0x0228F5EF);
	r3 = D(r3, s[0][2][1], 0x1F8400E0, 0x16111316, 0x02330ADA, 0x061514F1);
	r4 = D(r4, s[0][2][1], 0x161EF902, 0xE12204FF, 0x1602FFF7, 0xEA8AD005);
	r5 = D(r5, s[0][2][1], 0x0E0A02F1, 0x042B11EC, 0x038EF809, 0x05810409);
	r6 = D(r6, s[0][2][1], 0x02C7FC0F, 0x22D2FFFC, 0x0AE0EE0A, 0x0818F70F);
	r7 = D(r7, s[0][2][1], 0x012A081B, 0xF4F40F0A, 0xFE0A0CE9, 0xF5FD14D8);
	r0 = D(r0, s[0][2][2], 0x09C8FE02, 0xF4F10D0D, 0xFFEA03E4, 0x09FA04F3);
	r1 = D(r1, s[0][2][2], 0x06FBFE07, 0x06F80B14, 0x0DD60CEC, 0x08B2FDFC);
	r2 = D(r2, s[0][2][2], 0xE1E306F9, 0x110B06CE, 0xEFFAED01, 0x0B18FF1D);
	r3 = D(r3, s[0][2][2], 0xECFEF301, 0xE61AFC1A, 0x0C28F6E7, 0xE7F203E5);
	r4 = D(r4, s[0][2][2], 0xF8FBFEE8, 0xF80D1213, 0xF41AEE04, 0xF4DD11E5);
	r5 = D(r5, s[0][2][2], 0x0CDD0516, 0xFF10FE1D, 0x05E40C12, 0x0BB110FF);
	r6 = D(r6, s[0][2][2], 0x02EFF605, 0xF20FFAFF, 0xFC0402F7, 0x20E8FCFD);
	r7 = D(r7, s[0][2][2], 0x0FD1FB20, 0x08CA040A, 0xF9EF010F, 0x162DFA0D);
	r0 = D(r0, s[1][0][0], 0xFDF815FB, 0xFDFEEFF3, 0xF907F80A, 0x09FEE20D);
	r1 = D(r1, s[1][0][0], 0xEA11F807, 0xF8F7F400, 0xEDF5171F, 0x14F60BFF);
	r2 = D(r2, s[1][0][0], 0x09F20E12, 0xFC0223F8, 0x0B09F000, 0xF8F80F0D);
	r3 = D(r3, s[1][0][0], 0x0817040E, 0x0AEC0A00, 0xF5E8F2EF, 0xF7F2F41B);
	r4 = D(r4, s[1][0][0], 0x090902FC, 0xDDA50200, 0x080004FA, 0xF50105E9);
	r5 = D(r5, s[1][0][0], 0xF807100D, 0x0105FE17, 0x14000D08, 0xE3ECED13);
	r6 = D(r6, s[1][0][0], 0x0012F10D, 0xFDEAFAF9, 0xE7FFF50F, 0xFA00EE01);
	r7 = D(r7, s[1][0][0], 0x0A0FF2FD, 0xF60AFC06, 0x15050EE9, 0x05F40517);
	r0 = D(r0, s[1][0][1], 0xF8F1F211, 0xEC020113, 0xF4FBEE03, 0x09020303);
	r1 = D(r1, s[1][0][1], 0xF30A04F9, 0xF0FB0DF7, 0xF5F70A07, 0xFDF9111A);
	r2 = D(r2, s[1][0][1], 0x0712FB19, 0x0309FBF6, 0x1302FD08, 0x0B03020F);
	r3 = D(r3, s[1][0][1], 0x17F3F1F3, 0xE7040B07, 0x03FD05F7, 0x0112F006);
	r4 = D(r4, s[1][0][1], 0xEA0A040A, 0x100F120F, 0xFBF2F407, 0xF9000001);
	r5 = D(r5, s[1][0][1], 0xFCF0E602, 0xFBF9F305, 0xFBF70C06, 0xD9FC010D);
	r6 = D(r6, s[1][0][1], 0x19FE07A2, 0x10F6070A, 0xF110F700, 0xF318EB06);
	r7 = D(r7, s[1][0][1], 0xF50009FA, 0xEF01F408, 0xF8DE0706, 0x010D0CFE);
	r0 = D(r0, s[1][0][2], 0x0E041017, 0xF0030316, 0x040104FF, 0xFB021402);
	r1 = D(r1, s[1][0][2], 0xEEF51AFF, 0xF504EC15, 0xFFF90FFA, 0x10160318);
	r2 = D(r2, s[1][0][2], 0x29000AF4, 0xEEDC0305, 0x05F6F815, 0xF40905F8);
	r3 = D(r3, s[1][0][2], 0xFDE1DBDE, 0xF7FB190C, 0xE8FB0BEE, 0xFCFDFEF8);
	r4 = D(r4, s[1][0][2], 0xFBEF0905, 0x18FAFCF9, 0xFDEAEFF7, 0xF914000E);
	r5 = D(r5, s[1][0][2], 0xFDFCEDFE, 0x011812F5, 0x0CFD11FA, 0x010B2308);
	r6 = D(r6, s[1][0][2], 0x03DEF10C, 0x050FFB04, 0x08040403, 0xFAFBF501);
	r7 = D(r7, s[1][0][2], 0xF807ECF3, 0x0405F8F8, 0x0DFEF3F8, 0xF7F1FAF4);
	r0 = D(r0, s[1][1][0], 0xF0F7F8FC, 0x0B02F2EF, 0x0009050D, 0xFF08EEF3);
	r1 = D(r1, s[1][1][0], 0x0D15EC07, 0x16F0FBE6, 0x0C0CFDF9, 0x0705E7FD);
	r2 = D(r2, s[1][1][0], 0x07090C02, 0xFB00110C, 0x021314F5, 0xE11D260D);
	r3 = D(r3, s[1][1][0], 0xF7EF04FC, 0xFD0516FB, 0x09FC0706, 0xE90AEE21);
	r4 = D(r4, s[1][1][0], 0x04FE0112, 0x0600FC06, 0x0F0703F0, 0xE9040400);
	r5 = D(r5, s[1][1][0], 0x0E0800EF, 0x040AF8FE, 0xF7FF04FA, 0xEE051FF3);
	r6 = D(r6, s[1][1][0], 0xF608FB0F, 0xFA0B1403, 0x08010D11, 0x030AE70A);
	r7 = D(r7, s[1][1][0], 0x13F8F220, 0x07FE09EF, 0x0402060D, 0xF3FFF600);
	r0 = D(r0, s[1][1][1], 0x000AFCED, 0x191000E1, 0xFE042008, 0xFFED11F2);
	r1 = D(r1, s[1][1][1], 0xFCFAF5FE, 0xF5EF0503, 0x080B010E, 0xF80506F9);
	r2 = D(r2, s[1][1][1], 0x020D0BFC, 0xEBFCF3FC, 0x13F2E600, 0xED0C0FF8);
	r3 = D(r3, s[1][1][1], 0xF8BF2A0E, 0xF717F1DF, 0x050805FD, 0xF6F4F8E2);
	r4 = D(r4, s[1][1][1], 0x07F2F4F2, 0x040BF4E0, 0x0BE8F1F4, 0xFE040C0A);
	r5 = D(r5, s[1][1][1], 0xF7ED121B, 0xF8F3E11A, 0x0DF8FE07, 0xE5060AFE);
	r6 = D(r6, s[1][1][1], 0xFADA1DDF, 0xFFFF09E1, 0x00E90103, 0xFDE500E7);
	r7 = D(r7, s[1][1][1], 0x0907F5E7, 0x0007FF0E, 0xFFF9F804, 0x08FEDEF9);
	r0 = D(r0, s[1][1][2], 0x03F5FF0E, 0x10001009, 0xFD0C0AF8, 0xFAF5FFFB);
	r1 = D(r1, s[1][1][2], 0x0F07FBEB, 0xFC03F307, 0x0FF408FD, 0x08F5F415);
	r2 = D(r2, s[1][1][2], 0xE10ADEFB, 0xF51607FA, 0xFC11F012, 0x14010509);
	r3 = D(r3, s[1][1][2], 0x02071020, 0xE508F3F5, 0xE800F8E4, 0x0B1704FF);
	r4 = D(r4, s[1][1][2], 0x1B0E1803, 0x250900EE, 0xFDE20601, 0x12FA0901);
	r5 = D(r5, s[1][1][2], 0x11FFECFD, 0xF2E5F4FF, 0xF00D0BF2, 0x010BF6F7);
	r6 = D(r6, s[1][1][2], 0xFC060AF1, 0xF9E9EFFF, 0x14F0060B, 0xFB090702);
	r7 = D(r7, s[1][1][2], 0x190309ED, 0x010EF507, 0x17040D12, 0xF6FC08E1);
	r0 = D(r0, s[1][2][0], 0xFAFE0F11, 0x0202F8F2, 0x01060A02, 0xFE14FDEF);
	r1 = D(r1, s[1][2][0], 0x0FF9FAF7, 0xFC0BEE09, 0xFC0604FB, 0x0DF80305);
	r2 = D(r2, s[1][2][0], 0xFDEAE602, 0x02000CF4, 0x0EF10AFA, 0x03E70500);
	r3 = D(r3, s[1][2][0], 0x02FEFE0A, 0xF7F90010, 0x04FBF7F9, 0xF9011902);
	r4 = D(r4, s[1][2][0], 0x041AF9ED, 0xEC0215FE, 0xF70DF106, 0x02F810E7);
	r5 = D(r5, s[1][2][0], 0xFF0D0609, 0xF5110C08, 0xFFFA050A, 0x0A020AED);
	r6 = D(r6, s[1][2][0], 0xE1FCFF20, 0xFAFDF6ED, 0xF6FCF7F9, 0xF116FEFF);
	r7 = D(r7, s[1][2][0], 0xFCFE0600, 0xFB0D02FD, 0x06060212, 0xFE0C0FE4);
	r0 = D(r0, s[1][2][1], 0xFFF8F302, 0xFCEF02F2, 0x0DF806FF, 0xF5E50EF7);
	r1 = D(r1, s[1][2][1], 0xFAFDFD0E, 0xE9EA1C02, 0xF81005FD, 0x26FD0EE2);
	r2 = D(r2, s[1][2][1], 0x17F6090C, 0xEBFDF901, 0x0E0407EE, 0xEEFB0CEB);
	r3 = D(r3, s[1][2][1], 0x140FF911, 0x05EA1A03, 0xF207FDF3, 0x1304F9EF);
	r4 = D(r4, s[1][2][1], 0xF7200CFF, 0x0CE91008, 0xFD09FC03, 0xF0F21408);
	r5 = D(r5, s[1][2][1], 0xFFFCE6E8, 0x0B110CF5, 0x100D08F9, 0x10FDFCEF);
	r6 = D(r6, s[1][2][1], 0xE3120014, 0x03091204, 0xFAF403EB, 0xF4051B09);
	r7 = D(r7, s[1][2][1], 0x0E03FC18, 0xFE091A00, 0xFAFEDAFE, 0xF505F916);
	r0 = D(r0, s[1][2][2], 0x060603FC, 0xFD02FB1C, 0xFC0CFE04, 0x082901E8);
	r1 = D(r1, s[1][2][2], 0x0A01FC04, 0x0912100E, 0xE70E01F5, 0x091F02F5);
	r2 = D(r2, s[1][2][2], 0x00F6F80C, 0xECFA01FF, 0xEC0BFB09, 0x0109DF04);
	r3 = D(r3, s[1][2][2], 0x0F0314F5, 0xF8F4FF0C, 0x09EA0906, 0xF912EEFE);
	r4 = D(r4, s[1][2][2], 0xFBF8F90D, 0xF701F3FE, 0x0306EE03, 0xF5FD0C04);
	r5 = D(r5, s[1][2][2], 0xF70EFA0F, 0x050D0F13, 0xEA030F03, 0x12070708);
	r6 = D(r6, s[1][2][2], 0xE3F30FF6, 0x0EFC03FC, 0xFB0DF909, 0xF0F70E13);
	r7 = D(r7, s[1][2][2], 0x03010208, 0xF71402F7, 0xFE0FFB07, 0xF102FAF7);
	s[0][0][0] = G[10][xy.y+0][xy.x+0]; s[0][0][1] = G[10][xy.y+0][xy.x+1];
	s[0][0][2] = G[10][xy.y+0][xy.x+2]; s[0][1][0] = G[10][xy.y+1][xy.x+0];
	s[0][1][1] = G[10][xy.y+1][xy.x+1]; s[0][1][2] = G[10][xy.y+1][xy.x+2];
	s[0][2][0] = G[10][xy.y+2][xy.x+0]; s[0][2][1] = G[10][xy.y+2][xy.x+1];
	s[0][2][2] = G[10][xy.y+2][xy.x+2]; s[1][0][0] = G[11][xy.y+0][xy.x+0];
	s[1][0][1] = G[11][xy.y+0][xy.x+1]; s[1][0][2] = G[11][xy.y+0][xy.x+2];
	s[1][1][0] = G[11][xy.y+1][xy.x+0]; s[1][1][1] = G[11][xy.y+1][xy.x+1];
	s[1][1][2] = G[11][xy.y+1][xy.x+2]; s[1][2][0] = G[11][xy.y+2][xy.x+0];
	s[1][2][1] = G[11][xy.y+2][xy.x+1]; s[1][2][2] = G[11][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x11090707, 0x15FFD7F4, 0xF9EC040C, 0xF6E9ECFE);
	r1 = D(r1, s[0][0][0], 0xFAE605FB, 0x09F504FF, 0xFEE604FA, 0xFBEF2011);
	r2 = D(r2, s[0][0][0], 0xFAFB1204, 0xE81513FD, 0xF906E9F8, 0xF203EE09);
	r3 = D(r3, s[0][0][0], 0xFE19FB1C, 0xEFF8FFFB, 0x0812050C, 0xE701F80C);
	r4 = D(r4, s[0][0][0], 0x08EE1015, 0x04EEFA0C, 0x000C0105, 0xF8F9FAFB);
	r5 = D(r5, s[0][0][0], 0xF60DF9FC, 0x2EE609F1, 0x0D070A07, 0xF3C813F9);
	r6 = D(r6, s[0][0][0], 0xF30603F6, 0xFC0BE2F9, 0xEDF91DF1, 0xF207FFF4);
	r7 = D(r7, s[0][0][0], 0xF5050CFE, 0xFBFEF904, 0x18060216, 0xF50AFE00);
	r0 = D(r0, s[0][0][1], 0x11FAFD1C, 0x0700FEC7, 0x11F5F2F5, 0x14F4F8F4);
	r1 = D(r1, s[0][0][1], 0xF30F090B, 0x05100009, 0x03F4E705, 0x00120403);
	r2 = D(r2, s[0][0][1], 0xF2DDFD04, 0x0DFCF9E9, 0x1101F0FA, 0x0DF711F9);
	r3 = D(r3, s[0][0][1], 0x0C09E20B, 0xFF0109FA, 0x1A0A1EF4, 0x09110013);
	r4 = D(r4, s[0][0][1], 0x02F600F7, 0x0D0910DE, 0x051EFE06, 0x06EEE706);
	r5 = D(r5, s[0][0][1], 0x02E61C0D, 0x0F05F8F4, 0x0CFAF8F5, 0x03EEF6B4);
	r6 = D(r6, s[0][0][1], 0x1A050C0D, 0xF4FCE00C, 0xCBE702C1, 0xE9F503FD);
	r7 = D(r7, s[0][0][1], 0x0B0407F0, 0xF2F9E3E8, 0x0F170F11, 0x12F70B08);
	r0 = D(r0, s[0][0][2], 0xFAF7E9F2, 0x07EE0C0B, 0x0804EB01, 0xF2FBEC08);
	r1 = D(r1, s[0][0][2], 0xFEEF0401, 0xF70613F1, 0x05F10F05, 0xF315F5E8);
	r2 = D(r2, s[0][0][2], 0xF107F203, 0xF6F00AFC, 0xFCFC050C, 0x02FF12FD);
	r3 = D(r3, s[0][0][2], 0x131E0C04, 0x0CF20307, 0x1F07EBFE, 0x050019FF);
	r4 = D(r4, s[0][0][2], 0xF20B0812, 0xEBF711ED, 0x0CFCF205, 0xFDF203ED);
	r5 = D(r5, s[0][0][2], 0x05FE0209, 0xEBF50F0E, 0x0F0900E8, 0x05DAF6AC);
	r6 = D(r6, s[0][0][2], 0x06E11800, 0xFB060F03, 0xF5F9F5C0, 0x0C11F018);
	r7 = D(r7, s[0][0][2], 0x0A1308F2, 0xEAF309E8, 0x11FAFF06, 0xF9041113);
	r0 = D(r0, s[0][1][0], 0xF4FE1200, 0x0805FD02, 0x12EF120C, 0x01FCEA08);
	r1 = D(r1, s[0][1][0], 0x20031515, 0xF4FA0D00, 0xEFF21F0A, 0xEEF106EE);
	r2 = D(r2, s[0][1][0], 0xF60D1805, 0xFD17EE06, 0x1301EA12, 0x0419F907);
	r3 = D(r3, s[0][1][0], 0x19F1F0EB, 0x00F1FEFC, 0x1109F9FC, 0xE7F4F8F9);
	r4 = D(r4, s[0][1][0], 0x0000F005, 0x0EDE2414, 0x0211F802, 0xF310EE00);
	r5 = D(r5, s[0][1][0], 0x0F0DF8F8, 0x0B05EFFA, 0x0AEF02F6, 0x041417F3);
	r6 = D(r6, s[0][1][0], 0xDCFF35EE, 0xF30CF703, 0xF6FC0DEA, 0x0ED3FAF9);
	r7 = D(r7, s[0][1][0], 0xFEFD1BF4, 0x14100904, 0x02FB0BF8, 0x1B20F414);
	r0 = D(r0, s[0][1][1], 0xFF10050A, 0x0202E0F8, 0x031902FA, 0x01F3FCFB);
	r1 = D(r1, s[0][1][1], 0x100F12FE, 0x1D190805, 0xF5242701, 0xE1FAF7F8);
	r2 = D(r2, s[0][1][1], 0xFC22F2FE, 0xF112CF08, 0x0BF0EF0A, 0xEDFCF3D1);
	r3 = D(r3, s[0][1][1], 0xE9EE0403, 0x09130800, 0xE9F0FF06, 0x00090AFF);
	r4 = D(r4, s[0][1][1], 0xF70B0022, 0x0BFB06F6, 0x0EF608FC, 0x0A0DE903);
	r5 = D(r5, s[0][1][1], 0x070207E2, 0xEF080EF7, 0xFFEB0BF2, 0xF5EF08AB);
	r6 = D(r6, s[0][1][1], 0x0B0AF904, 0x180204FF, 0xF10EFAF4, 0xFC020112);
	r7 = D(r7, s[0][1][1], 0x0BF8FEEE, 0x0106FB04, 0xE1EEF3FF, 0xFA0013F9);
	r0 = D(r0, s[0][1][2], 0xEF1606FB, 0x0E16000A, 0xFCE1F30F, 0xF3F814E6);
	r1 = D(r1, s[0][1][2], 0x07FB09FD, 0x09F9FC0B, 0xFA2109F3, 0xE4F606E2);
	r2 = D(r2, s[0][1][2], 0x0D23F115, 0xFDE42EF3, 0xEE0C18FA, 0x1629F3D3);
	r3 = D(r3, s[0][1][2], 0xEBEEF711, 0xFC290CF4, 0x0C11FC04, 0xF3F90AFC);
	r4 = D(r4, s[0][1][2], 0xE213080D, 0x06021007, 0x040914FC, 0xF100FEF1);
	r5 = D(r5, s[0][1][2], 0xFCE30AFD, 0x0B030412, 0xFB12EFCF, 0xF8EA0DCE);
	r6 = D(r6, s[0][1][2], 0x05ECF600, 0xFF0108FF, 0x0200F6FA, 0xEFE602FA);
	r7 = D(r7, s[0][1][2], 0xF7FA2404, 0xEE0A0CE0, 0x1BE5070F, 0x0102FEFC);
	r0 = D(r0, s[0][2][0], 0xFA070106, 0x08FAE7FA, 0x0C07F308, 0x00E6EDF2);
	r1 = D(r1, s[0][2][0], 0x14EDFC03, 0xF9130203, 0x1401040C, 0x10081615);
	r2 = D(r2, s[0][2][0], 0x25020200, 0x02EF13F5, 0x14F902FB, 0xEBDA02F0);
	r3 = D(r3, s[0][2][0], 0x130F0D09, 0xFF0900F6, 0xFAF8E206, 0xF7F6EFE8);
	r4 = D(r4, s[0][2][0], 0xEAF02408, 0xFCF605FC, 0x0B02F907, 0x00FD03FC);
	r5 = D(r5, s[0][2][0], 0x0C070407, 0x17FBE9FB, 0x03020D08, 0x0FFD02FB);
	r6 = D(r6, s[0][2][0], 0xF3F619FD, 0x03F60A06, 0xF9EFFEF8, 0x010B0007);
	r7 = D(r7, s[0][2][0], 0x0501FA04, 0x05F81CF8, 0xFAF8FB0A, 0x080C17FD);
	r0 = D(r0, s[0][2][1], 0x0EF20710, 0xF5F509F7, 0x12FFF8FD, 0xE00DF905);
	r1 = D(r1, s[0][2][1], 0xAB0601EB, 0xF8112007, 0xF3FE091F, 0x130C0313);
	r2 = D(r2, s[0][2][1], 0xF80EFD09, 0xFC260FF8, 0xEB060607, 0xFD000CEC);
	r3 = D(r3, s[0][2][1], 0x0AF3E602, 0xFC06FBF7, 0xF4FE2213, 0x0BFEEBF7);
	r4 = D(r4, s[0][2][1], 0x012202F6, 0xF716F9F8, 0xFA04EC02, 0x09FF0D09);
	r5 = D(r5, s[0][2][1], 0x0206EE0C, 0x0A03FCFC, 0xFC030B0C, 0x180BEEED);
	r6 = D(r6, s[0][2][1], 0xF8FA05FD, 0xEEEB02F6, 0x15050112, 0xFF0EEBF5);
	r7 = D(r7, s[0][2][1], 0xFC06F8F1, 0x1CFCF00D, 0xFBF3F903, 0x01F6FB08);
	r0 = D(r0, s[0][2][2], 0x0AEEF802, 0x11FB040F, 0x1305060A, 0x0212F306);
	r1 = D(r1, s[0][2][2], 0x01051707, 0x0BF40B01, 0xF3130510, 0x19F80214);
	r2 = D(r2, s[0][2][2], 0xF407E70A, 0xE3DF2FE9, 0xFBFCF004, 0xF3F912CA);
	r3 = D(r3, s[0][2][2], 0xFFFD0B08, 0xF7FC06F6, 0xFEEA2601, 0xF4FF05F3);
	r4 = D(r4, s[0][2][2], 0xE2010000, 0xFCF80104, 0xF3FFF8F0, 0x1FFDE1F7);
	r5 = D(r5, s[0][2][2], 0x090C0E0D, 0xEB18E602, 0x04F6D005, 0x0EFF0B04);
	r6 = D(r6, s[0][2][2], 0x071CEA0E, 0x15080607, 0x1DFFFE09, 0x1212F4F7);
	r7 = D(r7, s[0][2][2], 0xFD0300E8, 0x0403EF0F, 0xF6F319F9, 0xFF01F7FB);
	r0 = D(r0, s[1][0][0], 0xE902FD00, 0x18050DFD, 0xF3FE0E13, 0x0600F806);
	r1 = D(r1, s[1][0][0], 0xFD02F7F6, 0xEE06FE06, 0xF7080E09, 0xEFFCE2F9);
	r2 = D(r2, s[1][0][0], 0x0B090AEA, 0xF712EDED, 0x04F808FF, 0x13EAF4F4);
	r3 = D(r3, s[1][0][0], 0xDC0E09FD, 0xEBF70C03, 0xFC08E602, 0xF209E0FD);
	r4 = D(r4, s[1][0][0], 0xFE030215, 0xEFBCC5E6, 0xDFF8FC01, 0xF9F210FA);
	r5 = D(r5, s[1][0][0], 0x19F5FD03, 0xEAFD1C07, 0xF7050C04, 0x19FAF2FF);
	r6 = D(r6, s[1][0][0], 0xFD03FD0D, 0x031C1009, 0x09000011, 0xF7F0EF0C);
	r7 = D(r7, s[1][0][0], 0xED0406F2, 0x0CF7F903, 0xE919EFF9, 0xF20F1AF7);
	r0 = D(r0, s[1][0][1], 0xFB0B050A, 0xF7FCFDF9, 0x19FBF904, 0x04030100);
	r1 = D(r1, s[1][0][1], 0xFEE402FE, 0x1701E805, 0xE902F405, 0xFC0E040B);
	r2 = D(r2, s[1][0][1], 0x06D30DE6, 0xF5EB13EA, 0xEEFC12FE, 0x02FCEE01);
	r3 = D(r3, s[1][0][1], 0xE915F9E7, 0x1B06F903, 0x0BF0F0F5, 0xF8ECF605);
	r4 = D(r4, s[1][0][1], 0xF5001910, 0xC80EC50C, 0x16010CF5, 0xFCF4FE00);
	r5 = D(r5, s[1][0][1], 0x000414FB, 0x0B110A08, 0xFE0DF5FF, 0xF8EB12E4);
	r6 = D(r6, s[1][0][1], 0xCDF4FC05, 0xF9FCF6F8, 0xEDF912F2, 0x03FB0505);
	r7 = D(r7, s[1][0][1], 0x12000CE3, 0x1403FEF6, 0xF80102F9, 0x0418E402);
	r0 = D(r0, s[1][0][2], 0x0403F100, 0xF7000015, 0xEBFAFA11, 0xF9120B05);
	r1 = D(r1, s[1][0][2], 0x00FAF7FC, 0xFA09FCF5, 0x0BF2001B, 0xF0FC0AFB);
	r2 = D(r2, s[1][0][2], 0xE8FF0BF0, 0xF6FD050D, 0xF5070CFC, 0xF609ECF9);
	r3 = D(r3, s[1][0][2], 0x00EEF5F1, 0x0FFDFBFD, 0x0BF6EDFE, 0xFA180804);
	r4 = D(r4, s[1][0][2], 0x10FEF6F0, 0xFEF4E906, 0x03F70AFB, 0xEE0506EB);
	r5 = D(r5, s[1][0][2], 0xEAF2EF02, 0x0BFF0904, 0x0C04ED05, 0xF117FB0B);
	r6 = D(r6, s[1][0][2], 0x06FC0115, 0x0B0618F0, 0x020A12FC, 0xF20C0D09);
	r7 = D(r7, s[1][0][2], 0xFA0907F8, 0x011EF804, 0x08F107FC, 0x0FFE0A10);
	r0 = D(r0, s[1][1][0], 0x10F70DF9, 0xFDFCF105, 0xE2F9FAFF, 0x09FB02FA);
	r1 = D(r1, s[1][1][0], 0xB703EEE5, 0x1E01F200, 0x0D0EF711, 0x1A0511FF);
	r2 = D(r2, s[1][1][0], 0x03EB1DF6, 0xE7FBD0FF, 0xF801FE03, 0xFC020714);
	r3 = D(r3, s[1][1][0], 0xFA230BE6, 0xFCE5E40B, 0xF1E90BFD, 0x09010D06);
	r4 = D(r4, s[1][1][0], 0xFC07FDF0, 0x18F8EF08, 0x05FEFF06, 0xFC0E1504);
	r5 = D(r5, s[1][1][0], 0xE60DFDFB, 0xEDFBEBFA, 0xFB0D0000, 0xF4F0EAF6);
	r6 = D(r6, s[1][1][0], 0xF90EF805, 0x17F90E01, 0xF1E106FE, 0x0402FE10);
	r7 = D(r7, s[1][1][0], 0x22F4EDF9, 0xE91106E8, 0xFA120901, 0xECF8F518);
	r0 = D(r0, s[1][1][1], 0xFBFCFB02, 0xF6DB1E05, 0x0D0DFCFB, 0x26E8091B);
	r1 = D(r1, s[1][1][1], 0xFB0CFDB0, 0xFEED0D04, 0x130EFE15, 0xE313F0EB);
	r2 = D(r2, s[1][1][1], 0x0E25EE01, 0x09FD0416, 0xE711EC07, 0xF20803DD);
	r3 = D(r3, s[1][1][1], 0xFC041EF1, 0x12E2ECFE, 0x06EDFFF8, 0x09FE030F);
	r4 = D(r4, s[1][1][1], 0xF4E6C5E6, 0xD1FEBE15, 0x00FFF505, 0xDE0106F2);
	r5 = D(r5, s[1][1][1], 0x0817F2FB, 0x12FE1201, 0x04D9ED05, 0x07E7FABA);
	r6 = D(r6, s[1][1][1], 0x0CD3F309, 0xF306F9FF, 0x12E9F8F2, 0x010C1714);
	r7 = D(r7, s[1][1][1], 0x0500FCFC, 0xE50201E8, 0xF6F9060A, 0x20FAF116);
	r0 = D(r0, s[1][1][2], 0xFD04FC10, 0x11DEED0B, 0xF7000E05, 0xEDFBEB0D);
	r1 = D(r1, s[1][1][2], 0x0305FEF9, 0x11EA05FC, 0xF10208FB, 0xDEDC00FE);
	r2 = D(r2, s[1][1][2], 0xEAE705D0, 0x0DFD0505, 0xF9FE18FD, 0xF404F5F7);
	r3 = D(r3, s[1][1][2], 0xFFEAF723, 0x00F40BF4, 0xF3F4F305, 0xF32413FF);
	r4 = D(r4, s[1][1][2], 0xF00AF9E5, 0x18080DFC, 0xFF00FAFE, 0x0D11E601);
	r5 = D(r5, s[1][1][2], 0x0BDAFFFC, 0xF5010AF6, 0x11180AF7, 0xFC08F8DC);
	r6 = D(r6, s[1][1][2], 0x08E2020D, 0xF8F8DFF1, 0xF6F8F104, 0x1B090509);
	r7 = D(r7, s[1][1][2], 0x1EFC090C, 0x090A05FE, 0xFEF7F80D, 0x020011F4);
	r0 = D(r0, s[1][2][0], 0x1807F6FB, 0x00FFEC11, 0x05F80605, 0x0DF7F701);
	r1 = D(r1, s[1][2][0], 0xF716FCF9, 0xF6071308, 0x020A1AF7, 0x02051517);
	r2 = D(r2, s[1][2][0], 0x0D1BF0EB, 0x0F2028FB, 0xF4090F0A, 0xD9F7F5FD);
	r3 = D(r3, s[1][2][0], 0xFBF2FDFC, 0x0DF20400, 0x0800FF00, 0xF70CEF0B);
	r4 = D(r4, s[1][2][0], 0xF7110D05, 0x06052E04, 0x070B0309, 0x0EF9FE03);
	r5 = D(r5, s[1][2][0], 0x03FE0BEF, 0xF4F1E900, 0xEF090DFB, 0x19EB02F5);
	r6 = D(r6, s[1][2][0], 0x140D010D, 0xF30300FD, 0x04FE06FA, 0x0CFEF7FD);
	r7 = D(r7, s[1][2][0], 0xF4FFF0F7, 0xF5010CEB, 0x00FEF60F, 0x1003FC0A);
	r0 = D(r0, s[1][2][1], 0xF4F3F902, 0x190116ED, 0xE9FA04FE, 0xFA120406);
	r1 = D(r1, s[1][2][1], 0xFE09FED4, 0x0B0818FF, 0x0510FF09, 0xF6070C12);
	r2 = D(r2, s[1][2][1], 0x0DFA17E5, 0x05FDD50D, 0x0A06F4FC, 0x04FEFAED);
	r3 = D(r3, s[1][2][1], 0xFAD9EF0A, 0x1504F6EE, 0xFEFC1B0C, 0x0C18F0ED);
	r4 = D(r4, s[1][2][1], 0xDF050D05, 0xE3043506, 0xF6F90900, 0x19F9E604);
	r5 = D(r5, s[1][2][1], 0xFDDA030A, 0x050FF6EA, 0xF405090B, 0x04F511D4);
	r6 = D(r6, s[1][2][1], 0xFF0E130C, 0xF0F51309, 0x04ED07EA, 0xF81DEAF0);
	r7 = D(r7, s[1][2][1], 0xFC01FE03, 0xFCE90700, 0xF8F8040B, 0x04FD0EF4);
	r0 = D(r0, s[1][2][2], 0x10FCEE04, 0x0DFAF80A, 0xDF070601, 0x1102FE0F);
	r1 = D(r1, s[1][2][2], 0x0C0FFBF5, 0xFF140405, 0x0313F71D, 0x0B001301);
	r2 = D(r2, s[1][2][2], 0xE9F9F6E5, 0x13F905E8, 0xFEFA01F4, 0x10111CE6);
	r3 = D(r3, s[1][2][2], 0x060005F9, 0x0213FB09, 0xF5F9051C, 0xFE0401FC);
	r4 = D(r4, s[1][2][2], 0x1700FEEE, 0xF2F21B12, 0x00FAFC0F, 0x0800F60B);
	r5 = D(r5, s[1][2][2], 0xF1F5F9F5, 0x04F000F0, 0xF815FBFA, 0xF7FEFAC7);
	r6 = D(r6, s[1][2][2], 0xF8EE0908, 0x0CCE1DF8, 0xFEF017FD, 0x0708FDF6);
	r7 = D(r7, s[1][2][2], 0x0FF4F8F6, 0x0B09F2E5, 0x0B050701, 0x09F9F307);
	s[0][0][0] = G[12][xy.y+0][xy.x+0]; s[0][0][1] = G[12][xy.y+0][xy.x+1];
	s[0][0][2] = G[12][xy.y+0][xy.x+2]; s[0][1][0] = G[12][xy.y+1][xy.x+0];
	s[0][1][1] = G[12][xy.y+1][xy.x+1]; s[0][1][2] = G[12][xy.y+1][xy.x+2];
	s[0][2][0] = G[12][xy.y+2][xy.x+0]; s[0][2][1] = G[12][xy.y+2][xy.x+1];
	s[0][2][2] = G[12][xy.y+2][xy.x+2]; s[1][0][0] = G[13][xy.y+0][xy.x+0];
	s[1][0][1] = G[13][xy.y+0][xy.x+1]; s[1][0][2] = G[13][xy.y+0][xy.x+2];
	s[1][1][0] = G[13][xy.y+1][xy.x+0]; s[1][1][1] = G[13][xy.y+1][xy.x+1];
	s[1][1][2] = G[13][xy.y+1][xy.x+2]; s[1][2][0] = G[13][xy.y+2][xy.x+0];
	s[1][2][1] = G[13][xy.y+2][xy.x+1]; s[1][2][2] = G[13][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xF5F0EB02, 0xE2F11305, 0x0FE9F5FF, 0x3FEBFDFD);
	r1 = D(r1, s[0][0][0], 0x1B09FE0B, 0xF407FE06, 0xDCEE12F7, 0x01EAF605);
	r2 = D(r2, s[0][0][0], 0x1DF80A00, 0x21181314, 0x0D0E0E04, 0x1F0905FE);
	r3 = D(r3, s[0][0][0], 0x130EFDFB, 0x06FBEFF7, 0x04EE1705, 0xF3F407F6);
	r4 = D(r4, s[0][0][0], 0xFD0E07FB, 0x8106E52F, 0x10EBE506, 0xF8F413F4);
	r5 = D(r5, s[0][0][0], 0x130BF10D, 0x0EF5EB0E, 0x0E01FC0F, 0xF6F902FC);
	r6 = D(r6, s[0][0][0], 0xFA0503EE, 0x08FAFF19, 0x00EEDED3, 0xFF00FDEB);
	r7 = D(r7, s[0][0][0], 0xE1F90904, 0x00060800, 0x0B0DDB19, 0x2CF40BFE);
	r0 = D(r0, s[0][0][1], 0xE10A070C, 0x0117130A, 0xEE0D0FF2, 0x0E08EDEB);
	r1 = D(r1, s[0][0][1], 0xEAEF180A, 0xFAFC00F7, 0x0C0DF5C7, 0x27EF0911);
	r2 = D(r2, s[0][0][1], 0x11E4F00A, 0x14DDF009, 0xFFF2F416, 0x12EE0605);
	r3 = D(r3, s[0][0][1], 0xDE0CC335, 0x06FAFDF4, 0x08F6F600, 0xEEE30401);
	r4 = D(r4, s[0][0][1], 0x07F4FB0A, 0xF3FF35F4, 0x23EFE510, 0xFBFB05F0);
	r5 = D(r5, s[0][0][1], 0xFD01E8F2, 0x13F6E900, 0x24FAED0C, 0xF6EA141F);
	r6 = D(r6, s[0][0][1], 0x00FDD1F8, 0xEB081C0A, 0x0804142B, 0x04F90CF4);
	r7 = D(r7, s[0][0][1], 0xF90015FC, 0x1C040402, 0xF7040018, 0x2F07120F);
	r0 = D(r0, s[0][0][2], 0x05FBF404, 0x06091B04, 0x0BF303FA, 0xF503FD04);
	r1 = D(r1, s[0][0][2], 0x02FEEE07, 0xF100F302, 0x1605F2E9, 0x170AF8EA);
	r2 = D(r2, s[0][0][2], 0xC00C0704, 0x0FE4E3F6, 0x03F718F6, 0x10EDF309);
	r3 = D(r3, s[0][0][2], 0x1620CAF2, 0x16E712F4, 0x14FA0A00, 0x2DF3010F);
	r4 = D(r4, s[0][0][2], 0x0A0F03F5, 0xFB04FCFF, 0x15110100, 0x04FDF403);
	r5 = D(r5, s[0][0][2], 0xF90AFD0F, 0x0BFEFB0F, 0x04F9EBEF, 0xFF0F0C13);
	r6 = D(r6, s[0][0][2], 0x18F2E7E6, 0x1D001112, 0x0A0707FB, 0xDFFC1EF8);
	r7 = D(r7, s[0][0][2], 0x000A02EB, 0xFA020A13, 0x0E000C10, 0x14F20F00);
	r0 = D(r0, s[0][1][0], 0x0905100F, 0xFC1018F2, 0xDEFDF2FD, 0xFF010AFE);
	r1 = D(r1, s[0][1][0], 0x08F70604, 0xEFF502FC, 0x21F701F5, 0xFF23EAFD);
	r2 = D(r2, s[0][1][0], 0x19F7020F, 0x08ED010D, 0xFF03F4FB, 0xC803E1CF);
	r3 = D(r3, s[0][1][0], 0x01E60508, 0xEE0806F4, 0x3DFC18F6, 0x21F900F3);
	r4 = D(r4, s[0][1][0], 0xFAF911FA, 0x0129FE0F, 0x2005DE08, 0x140400FF);
	r5 = D(r5, s[0][1][0], 0xF1FFDE06, 0x1C0A0214, 0x07FE0AF6, 0xEF021B0E);
	r6 = D(r6, s[0][1][0], 0x070C0CFC, 0xD60603FC, 0xFEEDEEF3, 0xF6050506);
	r7 = D(r7, s[0][1][0], 0xF3011F01, 0xFB0BE703, 0x0DFEFA0E, 0xDEE1F5F0);
	r0 = D(r0, s[0][1][1], 0x01FAFD07, 0xEBFEFE03, 0x2604F31E, 0x130FEFF6);
	r1 = D(r1, s[0][1][1], 0x04F8FDF7, 0x0F0A24FE, 0x03E4EFDC, 0x1CF4EC05);
	r2 = D(r2, s[0][1][1], 0xFA150E12, 0x1805F2FB, 0xED07FC01, 0x0AF1EDEF);
	r3 = D(r3, s[0][1][1], 0xF8C6F011, 0x230900F8, 0xFB1816FF, 0xFD0600EC);
	r4 = D(r4, s[0][1][1], 0xED080D09, 0xFBDCF501, 0x1DF40EE0, 0x0C0CFDFC);
	r5 = D(r5, s[0][1][1], 0x0CFAF70A, 0xF9EB07F4, 0xF3FF02ED, 0x05E31A3F);
	r6 = D(r6, s[0][1][1], 0x3409E9F8, 0xD203DA06, 0x050D040E, 0xE122F1FA);
	r7 = D(r7, s[0][1][1], 0xE6111304, 0xF3F21C02, 0x21FEFD08, 0xF2F604F4);
	r0 = D(r0, s[0][1][2], 0xF6F2FDFC, 0x11E60EED, 0xFF1AF1FE, 0xE203ED04);
	r1 = D(r1, s[0][1][2], 0x0AFE0511, 0xF704F808, 0xE301EAF1, 0xFBFD0703);
	r2 = D(r2, s[0][1][2], 0x0910F018, 0x18000C06, 0x06F201DC, 0xF1FD010C);
	r3 = D(r3, s[0][1][2], 0x16151CFF, 0x30FAEEF0, 0xDD061AF7, 0xF70C0B05);
	r4 = D(r4, s[0][1][2], 0xDC0213FC, 0xF307FB0C, 0x23FE040A, 0xFDEA1B04);
	r5 = D(r5, s[0][1][2], 0x0B08FB18, 0xF9100EFA, 0x0A10FBFD, 0x10EA0E16);
	r6 = D(r6, s[0][1][2], 0x10F7FDF9, 0x05010802, 0xF801F007, 0x04E90BF1);
	r7 = D(r7, s[0][1][2], 0xE6FFFC0F, 0xF5080CFC, 0xF9F3160E, 0xE908FEFF);
	r0 = D(r0, s[0][2][0], 0xF8FA0001, 0x00181003, 0x1905F5EA, 0xE6FC1A01);
	r1 = D(r1, s[0][2][0], 0x2AF2E7BE, 0x3502FBF9, 0xE0FCEFE6, 0x1E100A11);
	r2 = D(r2, s[0][2][0], 0x33EB0302, 0x02F9EEF1, 0x0010F1F6, 0xFFEEFD08);
	r3 = D(r3, s[0][2][0], 0x0C10070D, 0xF8E40B02, 0x3EFE2319, 0x0FF6ECF2);
	r4 = D(r4, s[0][2][0], 0x2E0411F8, 0x3507010D, 0x1CFAF103, 0x0616EDF9);
	r5 = D(r5, s[0][2][0], 0x04FFF103, 0xF801EE01, 0x0908EAFD, 0xDF240CF4);
	r6 = D(r6, s[0][2][0], 0xE3090FF9, 0x1FF507FB, 0xEA14FC0B, 0x28090EFD);
	r7 = D(r7, s[0][2][0], 0x0BF002F6, 0xF902E809, 0xE4F90C16, 0x08FFE5FC);
	r0 = D(r0, s[0][2][1], 0xE50705F4, 0xEAED12F7, 0x0AF7F4FF, 0x17FCEBE9);
	r1 = D(r1, s[0][2][1], 0x2405FD0E, 0x06FFFA07, 0x070F04E7, 0x33DD0F0C);
	r2 = D(r2, s[0][2][1], 0xF6F6FCFF, 0xEC0CF419, 0xF7FAE9FB, 0xCF08FFF0);
	r3 = D(r3, s[0][2][1], 0x13FCEEFC, 0x30061AFD, 0x24EF1B0F, 0xD622E4ED);
	r4 = D(r4, s[0][2][1], 0x230A1317, 0x06E9170C, 0x2A070103, 0x090FEB14);
	r5 = D(r5, s[0][2][1], 0x1EFF0104, 0x0C0610FC, 0x14150AF1, 0x2C10F10C);
	r6 = D(r6, s[0][2][1], 0x08F810E0, 0x18EDD105, 0x20F30700, 0xFF12F1F6);
	r7 = D(r7, s[0][2][1], 0x0AF70E07, 0x00F709FA, 0x00F40B0F, 0xDFE80503);
	r0 = D(r0, s[0][2][2], 0xF301FAFB, 0x0F1606FA, 0xFE05F5FA, 0x01F8F3F7);
	r1 = D(r1, s[0][2][2], 0xEC19070D, 0xFFF8FDFE, 0x0C05F2E3, 0xF7101A19);
	r2 = D(r2, s[0][2][2], 0x14F6FE13, 0x0AF6FBFE, 0xFD21F3D3, 0xE50FFC0D);
	r3 = D(r3, s[0][2][2], 0x30ED07FD, 0xF30CFCFF, 0xD3F608FF, 0xF6190600);
	r4 = D(r4, s[0][2][2], 0xD113091D, 0x1EEE0C08, 0x1B0EFA02, 0xFE020CF2);
	r5 = D(r5, s[0][2][2], 0x02F7EBEE, 0x12F9FA1A, 0xF5FFF4F2, 0x071F120C);
	r6 = D(r6, s[0][2][2], 0x08FBFE09, 0x02F907F8, 0xE814FD07, 0x050503EA);
	r7 = D(r7, s[0][2][2], 0x07FD03FC, 0x1C19FC07, 0xF7FC000D, 0xEE0A0604);
	r0 = D(r0, s[1][0][0], 0x0D0AE71A, 0xF5EC0E05, 0xFDF40BFE, 0xEF0C0BFB);
	r1 = D(r1, s[1][0][0], 0x01FC01FE, 0x0403F3F4, 0x14ECEDF8, 0x020DE9FC);
	r2 = D(r2, s[1][0][0], 0xFEFCDF01, 0xF80F0804, 0xFE0CF80B, 0x0300FE0B);
	r3 = D(r3, s[1][0][0], 0x19F40CF5, 0x01F704FD, 0xF61904FA, 0x02E30A0A);
	r4 = D(r4, s[1][0][0], 0xFB03F407, 0x03FCDCD9, 0x08ECF106, 0xED18020B);
	r5 = D(r5, s[1][0][0], 0xF602EA03, 0x07FBDF0C, 0xFA0BF411, 0x1BF9F701);
	r6 = D(r6, s[1][0][0], 0xFFDDF703, 0xF90AEB01, 0xD60210FF, 0x1EFFFB03);
	r7 = D(r7, s[1][0][0], 0x0207FC0F, 0x02070CF3, 0xFDFD16EE, 0x04FFE2F8);
	r0 = D(r0, s[1][0][1], 0x05F712F7, 0x0304F9EC, 0x10E50BF3, 0x0600E6F1);
	r1 = D(r1, s[1][0][1], 0xFD07FE0A, 0x0BF309F5, 0x0001FA02, 0xF902FA18);
	r2 = D(r2, s[1][0][1], 0xFE16F7F9, 0x0EFAE805, 0x050B0E09, 0x0806F502);
	r3 = D(r3, s[1][0][1], 0xFCF50B09, 0xFFF501FA, 0x010615E7, 0xE7EDE3F8);
	r4 = D(r4, s[1][0][1], 0x0903FA0D, 0x02D5FFDC, 0x0809051A, 0x0315F80A);
	r5 = D(r5, s[1][0][1], 0xF1FCFCFB, 0xEEF8E5F2, 0x06ECFBFC, 0x0AF92105);
	r6 = D(r6, s[1][0][1], 0xFA0010FF, 0xF3F4EF07, 0xECFE1E13, 0x0D07FF00);
	r7 = D(r7, s[1][0][1], 0xFCF715F2, 0x0C0DECFA, 0x0EE7FB08, 0xD9FB0DD9);
	r0 = D(r0, s[1][0][2], 0xF606F702, 0x080D0908, 0x03F6F614, 0xF7EFFCE5);
	r1 = D(r1, s[1][0][2], 0x0904FF01, 0xFEF90603, 0xF1F117FB, 0xF9F70305);
	r2 = D(r2, s[1][0][2], 0xF4EB2E00, 0xF5010003, 0x09F303FA, 0xF80013FD);
	r3 = D(r3, s[1][0][2], 0xFB04F80B, 0x090CFCFC, 0x00FE020E, 0x020C0203);
	r4 = D(r4, s[1][0][2], 0xFEFB12F7, 0x1400F6FC, 0x1700FC0C, 0xED0101FD);
	r5 = D(r5, s[1][0][2], 0x08FA08FC, 0xFB0B040F, 0xFD0E0AF2, 0x0F1714F6);
	r6 = D(r6, s[1][0][2], 0xF7040606, 0xF50300F5, 0xF816130E, 0xFAFB1004);
	r7 = D(r7, s[1][0][2], 0xFD0000F1, 0x0AFDFC02, 0xF8030307, 0x0A110F12);
	r0 = D(r0, s[1][1][0], 0x061304F4, 0x02EB0BF4, 0xFFF71AF7, 0x011AE9F7);
	r1 = D(r1, s[1][1][0], 0x0AFEF706, 0xFA14070B, 0x0AF4F3F6, 0x0708E404);
	r2 = D(r2, s[1][1][0], 0x04F20ADD, 0x0217FCF0, 0xE9F1120C, 0xF9120105);
	r3 = D(r3, s[1][1][0], 0xEBE41C05, 0xF6EF15FF, 0xF81D13FD, 0xF2EE1EEB);
	r4 = D(r4, s[1][1][0], 0x01080DEE, 0xF6FFF0F3, 0xFB0D030C, 0x0811FBF9);
	r5 = D(r5, s[1][1][0], 0xF10703F9, 0x03141E0D, 0x0C06FA10, 0x1F0C1409);
	r6 = D(r6, s[1][1][0], 0xECF20003, 0xFBF723F8, 0x03FCE1F6, 0x02F1EDF6);
	r7 = D(r7, s[1][1][0], 0x0A061DF7, 0x03F414FB, 0xFF0E07F5, 0x1EFAFE06);
	r0 = D(r0, s[1][1][1], 0xF3F6F80F, 0xEC11FFEF, 0xF80CFA09, 0x0BFC1713);
	r1 = D(r1, s[1][1][1], 0xF1080F1C, 0x0306EC04, 0xD5E8FF1C, 0x05ECFAF8);
	r2 = D(r2, s[1][1][1], 0xF8FEF902, 0x0314F307, 0x05F00809, 0x001B16FF);
	r3 = D(r3, s[1][1][1], 0xFA001800, 0x0A26ED01, 0xE8E2FF07, 0xFE03FE10);
	r4 = D(r4, s[1][1][1], 0x14FE0009, 0x121A0E10, 0x070B0613, 0xFD0CFB0F);
	r5 = D(r5, s[1][1][1], 0x06F60C04, 0xEDECF4FA, 0xFD040007, 0xFB0312FF);
	r6 = D(r6, s[1][1][1], 0x0A11F600, 0xF9E3E7F5, 0x0AF9E8F9, 0xEE00EFFD);
	r7 = D(r7, s[1][1][1], 0x0310EAEC, 0xFEEDFDFD, 0x161E0A02, 0xF91D0D01);
	r0 = D(r0, s[1][1][2], 0x09F501E8, 0x1308FF0F, 0x02040E0A, 0xE507F302);
	r1 = D(r1, s[1][1][2], 0x0012FF04, 0xFA05F9F5, 0x0E16FBFE, 0x01190102);
	r2 = D(r2, s[1][1][2], 0x08ED05FE, 0x11F50C07, 0xF7FAFB0A, 0x0118EBF8);
	r3 = D(r3, s[1][1][2], 0x16FFF212, 0x17F4EDFE, 0xFC00FDD3, 0x0601E90A);
	r4 = D(r4, s[1][1][2], 0xE501FFF8, 0x0CFEE703, 0xF5090410, 0xF510F4FE);
	r5 = D(r5, s[1][1][2], 0x0012EAFE, 0xFAE9080E, 0x01EBF608, 0x02090004);
	r6 = D(r6, s[1][1][2], 0x14D8F40C, 0xFFFC17FC, 0x07090CFA, 0x0401FD02);
	r7 = D(r7, s[1][1][2], 0x0AFF04EF, 0xCF0B0202, 0x0C08FA19, 0x0605F305);
	r0 = D(r0, s[1][2][0], 0x1704FE08, 0xFF08FEFF, 0x06F9FB0B, 0x0A120105);
	r1 = D(r1, s[1][2][0], 0xF5050AFA, 0xEA0E0C0B, 0x07F5F8FF, 0xF90FE2FA);
	r2 = D(r2, s[1][2][0], 0x0404F4F7, 0xFFFEF0FA, 0xF5FAEB06, 0x0AF4F205);
	r3 = D(r3, s[1][2][0], 0xF7E80FEE, 0x0E000BFB, 0x01F20101, 0xEE04F9FB);
	r4 = D(r4, s[1][2][0], 0xF61D0911, 0xFEF6FC08, 0xFAFBED07, 0xF6EF12FD);
	r5 = D(r5, s[1][2][0], 0x060A1C03, 0xECFA15F2, 0x03140802, 0x16FAE806);
	r6 = D(r6, s[1][2][0], 0x0EEEF5F4, 0xF9F40BFD, 0xF7F20DF5, 0x16000803);
	r7 = D(r7, s[1][2][0], 0xFC02FB0E, 0xFA0B0F12, 0x0008F80D, 0x130DF8F0);
	r0 = D(r0, s[1][2][1], 0xFBFBF0EC, 0xB6F1FA0E, 0x0D0DFAF0, 0x19F8FE24);
	r1 = D(r1, s[1][2][1], 0xEBE1F509, 0xF9081A12, 0xFD10FA07, 0xF90000FB);
	r2 = D(r2, s[1][2][1], 0xFB0B0804, 0xF4FE0105, 0xFF13E604, 0x07D7FCF8);
	r3 = D(r3, s[1][2][1], 0x06F6F100, 0xFE0E0903, 0xE6FFFE19, 0xFAFDED00);
	r4 = D(r4, s[1][2][1], 0xFE021301, 0xE2DB0315, 0x05FB0C04, 0xEDFC060C);
	r5 = D(r5, s[1][2][1], 0xFD0FF2FD, 0xFA1401F6, 0x17090CF2, 0xF9F8F005);
	r6 = D(r6, s[1][2][1], 0xDAF001F4, 0x01F5F503, 0x12FE02EF, 0x06F4F5F1);
	r7 = D(r7, s[1][2][1], 0xFA000603, 0x0BFBFD08, 0xF4ECF5FE, 0xEFEDFE04);
	r0 = D(r0, s[1][2][2], 0x01FA0FFE, 0xF5160C05, 0xF8F10417, 0xFE00F70B);
	r1 = D(r1, s[1][2][2], 0xFC110EF8, 0xFBF806FB, 0xFAF407FA, 0xF6051508);
	r2 = D(r2, s[1][2][2], 0xEF11FDFC, 0x01FCE904, 0x03EB0104, 0x06F9FCF1);
	r3 = D(r3, s[1][2][2], 0xF3061AFB, 0x0AF8FA07, 0xC9F1FEE5, 0x120D0106);
	r4 = D(r4, s[1][2][2], 0xFFFF21F8, 0xFE160D03, 0xF707FF06, 0xFFEA04FF);
	r5 = D(r5, s[1][2][2], 0xEA0A0BE6, 0x1E0BFE04, 0x04EFF1F2, 0x1003FE09);
	r6 = D(r6, s[1][2][2], 0x21F30402, 0x0E1210FB, 0x01FD0FFF, 0x0DF807F6);
	r7 = D(r7, s[1][2][2], 0xF6ED050E, 0xED09FC07, 0xEFECF2FA, 0xF9F60EF1);
	s[0][0][0] = G[14][xy.y+0][xy.x+0]; s[0][0][1] = G[14][xy.y+0][xy.x+1];
	s[0][0][2] = G[14][xy.y+0][xy.x+2]; s[0][1][0] = G[14][xy.y+1][xy.x+0];
	s[0][1][1] = G[14][xy.y+1][xy.x+1]; s[0][1][2] = G[14][xy.y+1][xy.x+2];
	s[0][2][0] = G[14][xy.y+2][xy.x+0]; s[0][2][1] = G[14][xy.y+2][xy.x+1];
	s[0][2][2] = G[14][xy.y+2][xy.x+2]; s[1][0][0] = G[15][xy.y+0][xy.x+0];
	s[1][0][1] = G[15][xy.y+0][xy.x+1]; s[1][0][2] = G[15][xy.y+0][xy.x+2];
	s[1][1][0] = G[15][xy.y+1][xy.x+0]; s[1][1][1] = G[15][xy.y+1][xy.x+1];
	s[1][1][2] = G[15][xy.y+1][xy.x+2]; s[1][2][0] = G[15][xy.y+2][xy.x+0];
	s[1][2][1] = G[15][xy.y+2][xy.x+1]; s[1][2][2] = G[15][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x18F30B00, 0x070AE908, 0xF301F004, 0xFA050409);
	r1 = D(r1, s[0][0][0], 0xF90704FA, 0xEE0A02EC, 0xE7E4F406, 0xEAF60602);
	r2 = D(r2, s[0][0][0], 0x04EC17D6, 0x0C00DF09, 0x17F9F4F9, 0x01FE0B06);
	r3 = D(r3, s[0][0][0], 0x00EAF40C, 0x07110AFD, 0x0EFFF8F8, 0x16FBFF21);
	r4 = D(r4, s[0][0][0], 0xF80503D3, 0xEDC914E2, 0x06060CFE, 0x08F20303);
	r5 = D(r5, s[0][0][0], 0xFFF9F106, 0x0EF607F3, 0xFA020009, 0xE60610F1);
	r6 = D(r6, s[0][0][0], 0x0E060511, 0xF3FF0618, 0xE8F0E102, 0x0807E7FF);
	r7 = D(r7, s[0][0][0], 0x190B0827, 0xFCFFFDF6, 0x06F713FA, 0x05110E23);
	r0 = D(r0, s[0][0][1], 0x030CEFFC, 0xE418F411, 0x0203E9EE, 0xED040D01);
	r1 = D(r1, s[0][0][1], 0x0AFB09E4, 0xEE080BED, 0x010EF0F8, 0x070C07EF);
	r2 = D(r2, s[0][0][1], 0x13FD07EF, 0xF2091013, 0xECEFFB07, 0x05EEF612);
	r3 = D(r3, s[0][0][1], 0x1EE9FB07, 0xF9FE0D04, 0x15EF23FF, 0xFFEAF400);
	r4 = D(r4, s[0][0][1], 0xEC06F5DE, 0x09F41F13, 0xF6FCFD0F, 0x0307160B);
	r5 = D(r5, s[0][0][1], 0xF5EF01F8, 0x1DF7F702, 0x171AED1B, 0xB4021F10);
	r6 = D(r6, s[0][0][1], 0x03030DE8, 0xEE10FDEB, 0xF1FD00D1, 0xFB13F4FB);
	r7 = D(r7, s[0][0][1], 0x0BF3090B, 0xFE1002F3, 0x1CF7040A, 0xF3EFF7F3);
	r0 = D(r0, s[0][0][2], 0xFFF7DFFD, 0xFB00050F, 0x0AF2EDFE, 0xFA050FE3);
	r1 = D(r1, s[0][0][2], 0x080009F5, 0xE50B0812, 0x120CF004, 0x080D0F0D);
	r2 = D(r2, s[0][0][2], 0xE8F80E15, 0x0DE7EBFB, 0x1114FD00, 0x07FF0912);
	r3 = D(r3, s[0][0][2], 0x06CEFED0, 0x0E12FBF8, 0x14030AEF, 0x1B050A01);
	r4 = D(r4, s[0][0][2], 0x0F0503D0, 0xFD1100EF, 0x00F50FFB, 0x0FF60412);
	r5 = D(r5, s[0][0][2], 0x16E426F9, 0x33F8080A, 0x060DE805, 0x0109ED06);
	r6 = D(r6, s[0][0][2], 0x0FE0E9FE, 0xFBF20C0C, 0xF3FFF7FD, 0x0DF1FB12);
	r7 = D(r7, s[0][0][2], 0xE8FF0AD9, 0x00130810, 0xF2F8FCFB, 0xF400010A);
	r0 = D(r0, s[0][1][0], 0xFA0400FE, 0xFB02F6DB, 0xFF0412E8, 0xEF18F7E5);
	r1 = D(r1, s[0][1][0], 0xF8EF05FE, 0xEEEBF40A, 0x17F90823, 0xD4050DF5);
	r2 = D(r2, s[0][1][0], 0xEFF11215, 0x19EF0902, 0x011B0502, 0xDC1302E5);
	r3 = D(r3, s[0][1][0], 0xE209F1F8, 0xDE0B0204, 0x0E1005EA, 0x2FF000F5);
	r4 = D(r4, s[0][1][0], 0xFF060216, 0xF1E8FCF4, 0xFE090505, 0x05080EFE);
	r5 = D(r5, s[0][1][0], 0xF8EE0105, 0x09F7020D, 0xD308EF14, 0xE308EB19);
	r6 = D(r6, s[0][1][0], 0x1209E8F4, 0xF7FDC915, 0xE708D8F9, 0x29FFF2FE);
	r7 = D(r7, s[0][1][0], 0xF4FB1606, 0x10F400F0, 0xECF90DF5, 0x07050DFB);
	r0 = D(r0, s[0][1][1], 0x0D0ED90B, 0xC10318F8, 0xE4010614, 0xE9FBE9F4);
	r1 = D(r1, s[0][1][1], 0xFAF501E3, 0xFEFEF620, 0x0601F934, 0xE3F709F1);
	r2 = D(r2, s[0][1][1], 0x1DE80D0C, 0xF3FAF125, 0xFBE400F8, 0x07F80A03);
	r3 = D(r3, s[0][1][1], 0x0504F4E4, 0xF9030506, 0x03FD20F2, 0x03F901FF);
	r4 = D(r4, s[0][1][1], 0xFCED1018, 0x07EF1307, 0xF2EF0CFA, 0x0512E5E6);
	r5 = D(r5, s[0][1][1], 0x0C0B15FA, 0x1B191316, 0xEEFA0D11, 0x06050C03);
	r6 = D(r6, s[0][1][1], 0xE2F3F1FD, 0x15EF09F1, 0xE9FAF2E9, 0xF1FEFC0B);
	r7 = D(r7, s[0][1][1], 0xF40AFFFD, 0x0A02F6F2, 0xE5000C03, 0xF1FC180D);
	r0 = D(r0, s[0][1][2], 0xE3EAF2E8, 0x08FA0D1C, 0xEE030A04, 0xF100F7F4);
	r1 = D(r1, s[0][1][2], 0xF8000CEF, 0xF5EE0C18, 0x0EF602F9, 0xE9FCF708);
	r2 = D(r2, s[0][1][2], 0x1CEEF5EA, 0x070BF3F8, 0x040E19F5, 0xE70A05F5);
	r3 = D(r3, s[0][1][2], 0xF522F908, 0xFCF2FB09, 0xEB0C03F9, 0xEB1915FD);
	r4 = D(r4, s[0][1][2], 0x021803D9, 0x01111014, 0x0307070C, 0xE9F700F1);
	r5 = D(r5, s[0][1][2], 0xFD04041E, 0x12F30FFA, 0xF5FED9FD, 0xF4FEF215);
	r6 = D(r6, s[0][1][2], 0xF8F711EA, 0x04EEFC06, 0x0901F3FC, 0xF601F90D);
	r7 = D(r7, s[0][1][2], 0x00030B17, 0xF203010D, 0x0E02F8FF, 0x03190909);
	r0 = D(r0, s[0][2][0], 0x020CE609, 0xEC08EE07, 0xEC00FBFA, 0x07F80405);
	r1 = D(r1, s[0][2][0], 0xFBFCF8D8, 0x0D050006, 0x000A03F1, 0xFB13FFFE);
	r2 = D(r2, s[0][2][0], 0x1BF515F3, 0xF2F1EE08, 0xF306FB09, 0x09090421);
	r3 = D(r3, s[0][2][0], 0x040B0503, 0xF30CDA09, 0xFBF3F50D, 0xF3EEFF0C);
	r4 = D(r4, s[0][2][0], 0xEFF40AFF, 0x13040524, 0x0902FA05, 0x0BEB0D06);
	r5 = D(r5, s[0][2][0], 0xFAFD19FB, 0xE1F7E100, 0x07FD0706, 0x05FEE30E);
	r6 = D(r6, s[0][2][0], 0x090E00FB, 0x070F00ED, 0x0E12F60F, 0xFC120C03);
	r7 = D(r7, s[0][2][0], 0x06F224FF, 0xE8ED07FF, 0xFB01FD02, 0xFEFCF5EE);
	r0 = D(r0, s[0][2][1], 0xEA0CE100, 0x16FFF3E5, 0x1100FE0D, 0x09FD11EF);
	r1 = D(r1, s[0][2][1], 0x0DE8F9E6, 0x0CF50CF1, 0x08FE0706, 0xFCFD04F1);
	r2 = D(r2, s[0][2][1], 0xF00A160A, 0xF50AF9E4, 0x0CFFF2FF, 0xFB13CDED);
	r3 = D(r3, s[0][2][1], 0xF705F706, 0xF820EE0C, 0x28FF10FF, 0xFC02E6F9);
	r4 = D(r4, s[0][2][1], 0x130F0C17, 0x0DF601F3, 0x1511000A, 0xEE120B03);
	r5 = D(r5, s[0][2][1], 0x0BE6F002, 0xE0FA08FB, 0xFA02E310, 0xF801F60B);
	r6 = D(r6, s[0][2][1], 0x19FEFA0C, 0x0614F10F, 0x03EE03FC, 0x110D09F0);
	r7 = D(r7, s[0][2][1], 0x0B1002FE, 0xFFF501EF, 0x10F8F00D, 0x15070A07);
	r0 = D(r0, s[0][2][2], 0xFDF7E611, 0xEBFC0D0A, 0xFD13F610, 0x1AF113E5);
	r1 = D(r1, s[0][2][2], 0xEDFB0BF8, 0xFE0A1305, 0x0DE9FA0A, 0x080EFA0F);
	r2 = D(r2, s[0][2][2], 0xFCFC0D05, 0xEF0B25FC, 0xFE1010EF, 0xD10B06EA);
	r3 = D(r3, s[0][2][2], 0x16FBF8FE, 0x010800E7, 0x06FB00FC, 0xF2090706);
	r4 = D(r4, s[0][2][2], 0xF6D4FB12, 0xFB26FF10, 0x0AFDFE07, 0xFA01FC15);
	r5 = D(r5, s[0][2][2], 0x0C1207E8, 0x11100A0D, 0xFDE9D4FA, 0x0AFBEB0A);
	r6 = D(r6, s[0][2][2], 0x0CF10AFD, 0x10EAF7ED, 0x070A0406, 0x07F7F1F3);
	r7 = D(r7, s[0][2][2], 0x0512FE03, 0x07FF0005, 0xF804F6FD, 0xF21B0AF8);
	r0 = D(r0, s[1][0][0], 0xFDF7FD0C, 0x0406F211, 0x0108D302, 0x02060CF6);
	r1 = D(r1, s[1][0][0], 0x01FDDFFD, 0xF7FFF8FD, 0xE3F21816, 0xFC10F701);
	r2 = D(r2, s[1][0][0], 0xFDE9E700, 0x0506EAF3, 0xF5FD0305, 0xFA041C06);
	r3 = D(r3, s[1][0][0], 0x100CFD02, 0x04F1F6FC, 0x0CEFF7F8, 0x0FF71817);
	r4 = D(r4, s[1][0][0], 0xF7FC08F3, 0xECBF81FC, 0x08FD01EA, 0xFA0602F9);
	r5 = D(r5, s[1][0][0], 0x0104F0DE, 0x03061612, 0x07FD01FC, 0x23FDD31B);
	r6 = D(r6, s[1][0][0], 0xE3FEFDED, 0xF8F70915, 0x0BF10713, 0xE8EC0B0C);
	r7 = D(r7, s[1][0][0], 0x05FCFCFB, 0x0BFD07EC, 0x080D130B, 0x011EEBFE);
	r0 = D(r0, s[1][0][1], 0x0A1011DF, 0x02EE07FC, 0x0E00030E, 0x14090D0E);
	r1 = D(r1, s[1][0][1], 0xEB0C03FA, 0x04081110, 0x1FF6DCDC, 0x05F016F1);
	r2 = D(r2, s[1][0][1], 0x2727E0E9, 0xFAFCF21C, 0x0E03F60C, 0x0407FDF5);
	r3 = D(r3, s[1][0][1], 0x2BFEF015, 0xF9FE1307, 0xF6FE0AE2, 0xF8F40EFD);
	r4 = D(r4, s[1][0][1], 0xEBECF40A, 0xE305BD0E, 0xF702180E, 0xFD0715F2);
	r5 = D(r5, s[1][0][1], 0x1805F408, 0xF0F90C09, 0x02F1FFFE, 0x1DF6DFEA);
	r6 = D(r6, s[1][0][1], 0x0CDA08FD, 0x08FF14F3, 0x2E1C0AFD, 0x05FCED06);
	r7 = D(r7, s[1][0][1], 0x06FFFF0C, 0x0F05F924, 0xF9FB0BEE, 0x00E9EB05);
	r0 = D(r0, s[1][0][2], 0xF70CEFF8, 0xF8F4EB1F, 0xF7F911FC, 0xF903120B);
	r1 = D(r1, s[1][0][2], 0xF6F6FB04, 0x0C0BF50A, 0xF80AE9F9, 0x020B2808);
	r2 = D(r2, s[1][0][2], 0x130AADF5, 0x0F0DFEE0, 0xEE170208, 0x1AE3FCFF);
	r3 = D(r3, s[1][0][2], 0xFF1308EC, 0x04E6F711, 0xFEE5EEF9, 0xFA0DF200);
	r4 = D(r4, s[1][0][2], 0x03ED0107, 0xE5F3E8F9, 0x0707FFEB, 0x0B16F105);
	r5 = D(r5, s[1][0][2], 0x0615050E, 0x1712F211, 0x12FE01FF, 0x0206F00A);
	r6 = D(r6, s[1][0][2], 0x07FAFF09, 0x10F30202, 0x0AF20D09, 0xE50A07F4);
	r7 = D(r7, s[1][0][2], 0xFDE90B08, 0xFD1CE90E, 0xFD070E00, 0xE601F6EC);
	r0 = D(r0, s[1][1][0], 0xFE0903FA, 0x11FBF2EF, 0x110705FC, 0xFE19E9F7);
	r1 = D(r1, s[1][1][0], 0xFAFA0411, 0xE5FD08F5, 0xEE0FF804, 0xF3FCF703);
	r2 = D(r2, s[1][1][0], 0xEE0CC8F3, 0xFAF50EF8, 0x04F9010D, 0x1512FC1F);
	r3 = D(r3, s[1][1][0], 0x0FFC07FE, 0x0F07F1F9, 0x00000A08, 0x0429050F);
	r4 = D(r4, s[1][1][0], 0x1600EDF1, 0xE4FCC801, 0x07F8FFF4, 0x0C0DF215);
	r5 = D(r5, s[1][1][0], 0x0B03E72D, 0x1006F8FD, 0xFF01F710, 0xF71C08F9);
	r6 = D(r6, s[1][1][0], 0xFBF8EEED, 0x0A1B11E9, 0x0A07F01D, 0xFF1E1601);
	r7 = D(r7, s[1][1][0], 0xF80E11E8, 0xFB090AFF, 0xF30109F7, 0x0CE506FF);
	r0 = D(r0, s[1][1][1], 0x04F103EC, 0x0F2512FA, 0xEDF5EAF8, 0xFB04F810);
	r1 = D(r1, s[1][1][1], 0xF4EF0E08, 0x0CF5F3EA, 0xE5E9EA08, 0xF50BF3EC);
	r2 = D(r2, s[1][1][1], 0xF7F4A30E, 0xFB241A18, 0x0505FFF8, 0xF8110512);
	r3 = D(r3, s[1][1][1], 0xFCB50925, 0xF50BEC08, 0xEAF21206, 0x140BFAEE);
	r4 = D(r4, s[1][1][1], 0xEEFD0401, 0xE117DDE7, 0xD9F927F1, 0x1A12F7FF);
	r5 = D(r5, s[1][1][1], 0xFC0FF00B, 0xE6070001, 0xF9091308, 0xF00B02DE);
	r6 = D(r6, s[1][1][1], 0x1B11FAE5, 0x1EF7DAF5, 0x091F0104, 0xFAFC0BFC);
	r7 = D(r7, s[1][1][1], 0x1D1A06F3, 0xF91703FB, 0x04F31110, 0x0105D216);
	r0 = D(r0, s[1][1][2], 0x0F13FB05, 0xFEFC19FB, 0x0DF70706, 0xF600E204);
	r1 = D(r1, s[1][1][2], 0x01F00400, 0x05F500FF, 0x1E10070D, 0xE60BF714);
	r2 = D(r2, s[1][1][2], 0xE00BBC14, 0xEDFAFA1A, 0xFFF7150C, 0x02EF0602);
	r3 = D(r3, s[1][1][2], 0xECEDF418, 0xFBFA0FF3, 0x060AAD04, 0x0509F7FC);
	r4 = D(r4, s[1][1][2], 0xFC03F6F7, 0xF0F5E01A, 0x1B0E0DFB, 0x100304F4);
	r5 = D(r5, s[1][1][2], 0xFD010803, 0xF70EED10, 0x0A00F702, 0xEB0E2610);
	r6 = D(r6, s[1][1][2], 0xE60CEBF6, 0x1404FC0B, 0x12FAFA08, 0x0606F7FE);
	r7 = D(r7, s[1][1][2], 0x08ED0106, 0x0DF21409, 0x04F90601, 0x13F5C9FA);
	r0 = D(r0, s[1][2][0], 0x10FC1E04, 0x04EFF601, 0xF70B0200, 0xFC020FF3);
	r1 = D(r1, s[1][2][0], 0x0BED0FED, 0xE504EBED, 0x14130C0C, 0xFCF8F00A);
	r2 = D(r2, s[1][2][0], 0xEA0BDCF2, 0xFFF8F1F1, 0x18F7FDE9, 0xE5FB210C);
	r3 = D(r3, s[1][2][0], 0xFFE5F802, 0x100B010F, 0xFE1206D7, 0xFFE612EC);
	r4 = D(r4, s[1][2][0], 0x0609FDF4, 0xFBFCCD01, 0x01F810F2, 0xF0F51806);
	r5 = D(r5, s[1][2][0], 0x0EFD0E0E, 0x00F0F717, 0x020706FF, 0xE1F5F017);
	r6 = D(r6, s[1][2][0], 0xF2FAF8F1, 0x03EC1A01, 0xFA14F317, 0xEEF20E13);
	r7 = D(r7, s[1][2][0], 0x000D0E0C, 0x100AF90E, 0xF60A160B, 0x0A081403);
	r0 = D(r0, s[1][2][1], 0xF8F5F7E2, 0x07FEFE06, 0x09F7080B, 0x07FF09F5);
	r1 = D(r1, s[1][2][1], 0xFA050708, 0x05FFF804, 0xFCE001FF, 0xF0F1FF19);
	r2 = D(r2, s[1][2][1], 0xF7F9D1FB, 0x0A080CF6, 0xFAFF1A0D, 0xF51CF8FE);
	r3 = D(r3, s[1][2][1], 0xE2ECFE05, 0xFE01FAFE, 0xD4190BFD, 0xEAFEEBE0);
	r4 = D(r4, s[1][2][1], 0x0FED1307, 0xF10629FD, 0xF7E919F8, 0x000BFA02);
	r5 = D(r5, s[1][2][1], 0x0612F3F6, 0xEA112710, 0x04F31DF7, 0xC71BFC0D);
	r6 = D(r6, s[1][2][1], 0xEFF7D205, 0xD80CD20C, 0x05FFFDF5, 0x03ECFD03);
	r7 = D(r7, s[1][2][1], 0x0B090908, 0x010E0AF5, 0x0202ED06, 0xE007FA01);
	r0 = D(r0, s[1][2][2], 0xFC111804, 0xF7FDF70A, 0xF009F105, 0x1CF50B28);
	r1 = D(r1, s[1][2][2], 0x040CFEFF, 0x140D0AFB, 0xF5EF000E, 0xE3F7F90E);
	r2 = D(r2, s[1][2][2], 0x0700FD14, 0x04FDC715, 0x110709FE, 0xDF0210FA);
	r3 = D(r3, s[1][2][2], 0xF714F0FC, 0xF30CFE03, 0xF4FAE1FC, 0x050D05FF);
	r4 = D(r4, s[1][2][2], 0x080F1108, 0x0103E805, 0xFA080DF4, 0x06FDF703);
	r5 = D(r5, s[1][2][2], 0xF3E017F9, 0xF2EF000E, 0x07060803, 0xDB02F820);
	r6 = D(r6, s[1][2][2], 0xF7FA1106, 0x1006F304, 0xFFF60D0A, 0xFA05F1F2);
	r7 = D(r7, s[1][2][2], 0xF6FC0FFB, 0x1AF41508, 0xFB0DFF01, 0xF0000807);
	f0 = vec4(r0) * 6.20001240e-05;
	f0 += vec4(3.503e-02, -3.906e-03, -6.179e-03, -1.630e-02);
	f0 = max(f0, vec4(0.0));
	imageStore(out_image, opos + ivec2(0, 0), f0);
	f1 = vec4(r1) * 6.20001240e-05;
	f1 += vec4(-7.388e-02, 1.422e-02, 1.341e-02, -8.703e-03);
	f1 = max(f1, vec4(0.0));
	imageStore(out_image, opos + ivec2(1, 0), f1);
	f2 = vec4(r2) * 6.20001240e-05;
	f2 += vec4(1.788e-03, -3.992e-02, 1.373e-02, -3.984e-03);
	f2 = max(f2, vec4(0.0));
	imageStore(out_image, opos + ivec2(0, 1), f2);
	f3 = vec4(r3) * 6.20001240e-05;
	f3 += vec4(-3.260e-02, 3.191e-02, 4.517e-03, 3.626e-02);
	f3 = max(f3, vec4(0.0));
	imageStore(out_image, opos + ivec2(1, 1), f3);
	f4 = vec4(r4) * 6.20001240e-05;
	f4 += vec4(-1.352e-02, -1.826e-02, -2.313e-01, 4.844e-02);
	f4 = max(f4, vec4(0.0));
	imageStore(out_image, opos + ivec2(2, 0), f4);
	f5 = vec4(r5) * 6.20001240e-05;
	f5 += vec4(-6.043e-02, -6.617e-02, -1.414e-02, 2.374e-02);
	f5 = max(f5, vec4(0.0));
	imageStore(out_image, opos + ivec2(3, 0), f5);
	f6 = vec4(r6) * 6.20001240e-05;
	f6 += vec4(8.964e-03, -4.556e-02, -5.616e-03, 8.885e-03);
	f6 = max(f6, vec4(0.0));
	imageStore(out_image, opos + ivec2(2, 1), f6);
	f7 = vec4(r7) * 6.20001240e-05;
	f7 += vec4(2.667e-02, -2.786e-02, -3.333e-02, -6.323e-02);
	f7 = max(f7, vec4(0.0));
	imageStore(out_image, opos + ivec2(3, 1), f7);
	r0 = ivec4(0);
	r1 = ivec4(0);
	r2 = ivec4(0);
	r3 = ivec4(0);
	r4 = ivec4(0);
	r5 = ivec4(0);
	r6 = ivec4(0);
	r7 = ivec4(0);
	s[0][0][0] = G[0][xy.y+0][xy.x+0]; s[0][0][1] = G[0][xy.y+0][xy.x+1];
	s[0][0][2] = G[0][xy.y+0][xy.x+2]; s[0][1][0] = G[0][xy.y+1][xy.x+0];
	s[0][1][1] = G[0][xy.y+1][xy.x+1]; s[0][1][2] = G[0][xy.y+1][xy.x+2];
	s[0][2][0] = G[0][xy.y+2][xy.x+0]; s[0][2][1] = G[0][xy.y+2][xy.x+1];
	s[0][2][2] = G[0][xy.y+2][xy.x+2]; s[1][0][0] = G[1][xy.y+0][xy.x+0];
	s[1][0][1] = G[1][xy.y+0][xy.x+1]; s[1][0][2] = G[1][xy.y+0][xy.x+2];
	s[1][1][0] = G[1][xy.y+1][xy.x+0]; s[1][1][1] = G[1][xy.y+1][xy.x+1];
	s[1][1][2] = G[1][xy.y+1][xy.x+2]; s[1][2][0] = G[1][xy.y+2][xy.x+0];
	s[1][2][1] = G[1][xy.y+2][xy.x+1]; s[1][2][2] = G[1][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x000016FE, 0x12090304, 0xF607FE09, 0x07010802);
	r1 = D(r1, s[0][0][0], 0xF90EEB00, 0x220AEF03, 0x0F06FFE9, 0x0500EA07);
	r2 = D(r2, s[0][0][0], 0xF9FEFCDC, 0xF6170E03, 0x0310DA04, 0xFAF7F8F8);
	r3 = D(r3, s[0][0][0], 0x08E712F9, 0xFEF6FC08, 0x0CFDF307, 0xFBF20B05);
	r4 = D(r4, s[0][0][0], 0xECDAFDEA, 0x2000F502, 0xCAEAF6ED, 0x05FDE51B);
	r5 = D(r5, s[0][0][0], 0xFE0EF506, 0x10E915F9, 0x10F0FD04, 0x0B001401);
	r6 = D(r6, s[0][0][0], 0x09EA02F9, 0xF7FFF809, 0x12FFEFF1, 0xE7000EFB);
	r7 = D(r7, s[0][0][0], 0x090B0104, 0xFF0D08EC, 0xFC0801FA, 0x2505FCEF);
	r0 = D(r0, s[0][0][1], 0x06FE0118, 0xEC1CFEEF, 0x03F70205, 0xFC0A0300);
	r1 = D(r1, s[0][0][1], 0x01E9F9F4, 0x0706FAFC, 0x0A0DFFDE, 0x06FCF40F);
	r2 = D(r2, s[0][0][1], 0x25F707F9, 0x06E911F1, 0xF7E21A10, 0x0E05FDD7);
	r3 = D(r3, s[0][0][1], 0x06120305, 0xF6F9F706, 0xFBE80929, 0xFE0800D1);
	r4 = D(r4, s[0][0][1], 0xF4070C81, 0xFCF2F4F2, 0x0D03FB0E, 0xFCFFF5C8);
	r5 = D(r5, s[0][0][1], 0x0F03FCE2, 0x29FEFBFF, 0x0805F205, 0x060318E3);
	r6 = D(r6, s[0][0][1], 0xFE17F90C, 0x13020C0E, 0x00150F0E, 0xF4FC0BD5);
	r7 = D(r7, s[0][0][1], 0xE713E802, 0x020FEED2, 0x04FC0C00, 0xF60816FE);
	r0 = D(r0, s[0][0][2], 0xDE0214F3, 0xF6F7F909, 0xFA0B00FC, 0xFA04FCFD);
	r1 = D(r1, s[0][0][2], 0xEFF10105, 0x07F9050A, 0xF8F90AFA, 0xFD0C01F8);
	r2 = D(r2, s[0][0][2], 0xFAFB0DFD, 0x0C01F4E1, 0x12FDFEEE, 0xF1F7F6EA);
	r3 = D(r3, s[0][0][2], 0xF016F3FB, 0xFAF70CFF, 0x030CFC08, 0xEE04F600);
	r4 = D(r4, s[0][0][2], 0x130503D8, 0xE9FEEA0A, 0xEA0222F7, 0x0FFA14F6);
	r5 = D(r5, s[0][0][2], 0xF7FC0D02, 0xF804F5FD, 0xEEFBFCF9, 0x0702F1D8);
	r6 = D(r6, s[0][0][2], 0xFD02FAFF, 0x0F1207FF, 0x15F301FB, 0xFC16FDF0);
	r7 = D(r7, s[0][0][2], 0xF2FCF1F4, 0xFE06FCEF, 0xE5FAF9EA, 0x08030606);
	r0 = D(r0, s[0][1][0], 0x0AE40E05, 0x21FB180A, 0xFEFD1109, 0xFE0108FF);
	r1 = D(r1, s[0][1][0], 0x13110CFE, 0x19090EFD, 0x04DEEDFF, 0xF0001301);
	r2 = D(r2, s[0][1][0], 0x0401E9FE, 0x0308EDF4, 0xFAEAF00E, 0x0B04F6F4);
	r3 = D(r3, s[0][1][0], 0x061D181F, 0x0FF8FAFF, 0x0C1025F7, 0xFEEFFC05);
	r4 = D(r4, s[0][1][0], 0xFC14FF0A, 0xFE11E0F3, 0x1D05E2F3, 0xEEF6E5FD);
	r5 = D(r5, s[0][1][0], 0x09FA0A04, 0x0AFBF6F6, 0xFD2300F8, 0xFD03FA09);
	r6 = D(r6, s[0][1][0], 0xF3F8FC06, 0xFD09F719, 0xF1F8F0F9, 0xFFF10BE3);
	r7 = D(r7, s[0][1][0], 0x1E02DC0C, 0xE4F2EB0E, 0x14EDEA0A, 0x04FE01ED);
	r0 = D(r0, s[0][1][1], 0xDDEAF614, 0xFC0112F8, 0xF5FBFD14, 0x1D130D03);
	r1 = D(r1, s[0][1][1], 0x0E0C02EC, 0xF20EFA09, 0x0B17F40D, 0xF3FD0DEE);
	r2 = D(r2, s[0][1][1], 0xFF10F70B, 0x07E60407, 0x0213D2F8, 0xDEFAF29E);
	r3 = D(r3, s[0][1][1], 0xEBFCF906, 0x06FD0222, 0x15060103, 0x110FEAE7);
	r4 = D(r4, s[0][1][1], 0x01F406EC, 0x0EF60EF8, 0xF90A1BE8, 0xE406F505);
	r5 = D(r5, s[0][1][1], 0x00FCE218, 0x0D0DF50B, 0x0E06EF81, 0x06F9F704);
	r6 = D(r6, s[0][1][1], 0xF4EB0613, 0xFCD7EB1A, 0xF60DF918, 0x0FF3FFFE);
	r7 = D(r7, s[0][1][1], 0xC504EDFC, 0xFD0FEF07, 0xF5110D0A, 0xF9E40FF3);
	r0 = D(r0, s[0][1][2], 0x11EDE5FE, 0xF0E10618, 0x010DFB0A, 0xE3FB10D3);
	r1 = D(r1, s[0][1][2], 0xF0F00305, 0x12100D05, 0xF2011B06, 0x07FEFA01);
	r2 = D(r2, s[0][1][2], 0xFB0D0807, 0xFB09F5DD, 0xFCE91D0A, 0x02090CE2);
	r3 = D(r3, s[0][1][2], 0x050AF4E8, 0xF9080D0F, 0x0E03EFEE, 0xF3061804);
	r4 = D(r4, s[0][1][2], 0x0408EF0C, 0xEE06010B, 0xECFAF4FC, 0x1815DFBC);
	r5 = D(r5, s[0][1][2], 0xF8FD0A13, 0xF118FD10, 0x0001FFF6, 0xEE0F06F0);
	r6 = D(r6, s[0][1][2], 0xEFFF0C06, 0xF6EBE7DA, 0x09E900EE, 0x01F508EF);
	r7 = D(r7, s[0][1][2], 0xFCF10513, 0xEEF8DD0A, 0x09FB0E04, 0xE0EFE414);
	r0 = D(r0, s[0][2][0], 0xFF1B0303, 0xF9FC03F9, 0xFEFFFC04, 0xFB100EFF);
	r1 = D(r1, s[0][2][0], 0x0401FA0F, 0xECF5FC07, 0x0A09DE07, 0xFAFC0114);
	r2 = D(r2, s[0][2][0], 0xFCFDE8F7, 0xE9F0F705, 0x180E0607, 0x09F6FBEF);
	r3 = D(r3, s[0][2][0], 0x180A0A00, 0xEF080A02, 0x060018FD, 0xF4090410);
	r4 = D(r4, s[0][2][0], 0xF913FAFC, 0xF80C0201, 0x08050505, 0x06FAFD03);
	r5 = D(r5, s[0][2][0], 0x0EF409FE, 0xEE050B09, 0xE8240BF7, 0xFE07130B);
	r6 = D(r6, s[0][2][0], 0x170DF102, 0x16080C0A, 0xD8F71DFC, 0x00EF1DF9);
	r7 = D(r7, s[0][2][0], 0x0FFC1103, 0xFCF50E03, 0x060CF3ED, 0xF9F50AF7);
	r0 = D(r0, s[0][2][1], 0xF3F5F6F7, 0x0F0101FE, 0x0302EF03, 0x15F51203);
	r1 = D(r1, s[0][2][1], 0x02012402, 0xE80A11F3, 0x09FEE117, 0xEC0B1802);
	r2 = D(r2, s[0][2][1], 0xFA110D02, 0x0A0EFCF7, 0x07060A05, 0xFBF7F0D3);
	r3 = D(r3, s[0][2][1], 0x1104F1F5, 0xE7F7FDF8, 0xF800E3F4, 0x04FBEFF6);
	r4 = D(r4, s[0][2][1], 0x0900DFFE, 0x0CF305FF, 0x05F505E9, 0x0CF5FFEB);
	r5 = D(r5, s[0][2][1], 0xF70DEBFD, 0x09F81707, 0x19E40714, 0xF804ED04);
	r6 = D(r6, s[0][2][1], 0x0F14F803, 0x07ED09FF, 0x0FF2ED05, 0x0FFAFD03);
	r7 = D(r7, s[0][2][1], 0x16F403F1, 0xFD06FC0C, 0xEEE319FD, 0x00E8E9F0);
	r0 = D(r0, s[0][2][2], 0x0C0D0DF7, 0x10ED1BF3, 0x04F70204, 0xFCF7EE06);
	r1 = D(r1, s[0][2][2], 0xFBFAF907, 0x00F2FE04, 0xF4021502, 0x02F7F4FF);
	r2 = D(r2, s[0][2][2], 0xF706F202, 0xF40302F8, 0xFF16120A, 0xDE110CE8);
	r3 = D(r3, s[0][2][2], 0x0FF20A03, 0xF7FAF4FB, 0xECFFF10C, 0x010BE605);
	r4 = D(r4, s[0][2][2], 0xF3F8E90D, 0xFAF5F7FB, 0xF604FA02, 0xF5F90EF3);
	r5 = D(r5, s[0][2][2], 0xF6100CF8, 0xECEBEE08, 0x0BF6F3F6, 0xF6F6F1FD);
	r6 = D(r6, s[0][2][2], 0x0EF90904, 0xF8FD07EF, 0xF8F09804, 0x0310FBFA);
	r7 = D(r7, s[0][2][2], 0xDD0704F9, 0x0AFEFC07, 0x0806FF0D, 0x0B0F050A);
	r0 = D(r0, s[1][0][0], 0x1607DB05, 0xEC1BEE03, 0x00FF08FE, 0x0908D108);
	r1 = D(r1, s[1][0][0], 0xEF1A2B16, 0x0210E9FE, 0x1221E010, 0x1A000AF6);
	r2 = D(r2, s[1][0][0], 0xD02C1501, 0xFDFEE9DF, 0xE20DE3D8, 0x1617F20B);
	r3 = D(r3, s[1][0][0], 0xFDE12A00, 0x0EFD1E02, 0x111FFAF3, 0x13F40206);
	r4 = D(r4, s[1][0][0], 0x1EFD1708, 0x011455F3, 0x0EF074FD, 0x0CFBBCDD);
	r5 = D(r5, s[1][0][0], 0xF5F3E6FD, 0xF3C6EA0D, 0x12EA0DFB, 0xF8F427F5);
	r6 = D(r6, s[1][0][0], 0xFA12E8EA, 0xF51937FC, 0xEE38A804, 0xF42250EE);
	r7 = D(r7, s[1][0][0], 0x3908FED0, 0xF6F73301, 0x0DFEF713, 0x0A09D204);
	r0 = D(r0, s[1][0][1], 0xEBF1ECFE, 0xF4104708, 0x0408F1F7, 0xF4E4FD09);
	r1 = D(r1, s[1][0][1], 0xFDCF33FB, 0xFD2300D8, 0x0502F910, 0xFAF5F1F9);
	r2 = D(r2, s[1][0][1], 0xDD0EFE01, 0x1330DC05, 0xF4B720EF, 0xEDD60DFC);
	r3 = D(r3, s[1][0][1], 0x00042100, 0xE9FE1CFD, 0x060806F9, 0x00ECEFEC);
	r4 = D(r4, s[1][0][1], 0xF4FD0BFC, 0xFE0A1EE6, 0x2C0AF107, 0x17EB0404);
	r5 = D(r5, s[1][0][1], 0xE70CFDF6, 0xF7F6E801, 0xFDFE0D07, 0x0B09F503);
	r6 = D(r6, s[1][0][1], 0xFEFCF4E6, 0x0AFAE5F5, 0x020EF0EB, 0x16EC03F7);
	r7 = D(r7, s[1][0][1], 0x16EA34FF, 0x04F417F8, 0x15090AF8, 0x13EDDAEA);
	r0 = D(r0, s[1][0][2], 0x0DF8F6DD, 0xDBF9F502, 0x07060A0F, 0x1008FC03);
	r1 = D(r1, s[1][0][2], 0x080AF4F7, 0xF80C0108, 0x000505F4, 0x0DF30CFF);
	r2 = D(r2, s[1][0][2], 0xFEF00806, 0xF8190821, 0x0914F0F0, 0xFC23EFFE);
	r3 = D(r3, s[1][0][2], 0xFEF31200, 0xFFF5020A, 0xF2010B0E, 0x0616FAF1);
	r4 = D(r4, s[1][0][2], 0x0712FF13, 0x04050D00, 0x10020AF0, 0xEBDCE1F7);
	r5 = D(r5, s[1][0][2], 0xEEF507E8, 0xEE250A0C, 0xF4FF10FF, 0xFE09F60B);
	r6 = D(r6, s[1][0][2], 0xFF0906EB, 0xF9EF05FF, 0x0D10DF37, 0xF9F80115);
	r7 = D(r7, s[1][0][2], 0x06FFEAF6, 0x10C40CEF, 0x110F0D03, 0xFBF40F09);
	r0 = D(r0, s[1][1][0], 0x072CE4E3, 0xF99EDBEB, 0x0B031BFD, 0xFED14802);
	r1 = D(r1, s[1][1][0], 0xFAE40E03, 0xF8192707, 0x06E3F401, 0xFBEC02ED);
	r2 = D(r2, s[1][1][0], 0xE9511D04, 0xF814CCD9, 0x040A96E3, 0xF1EC0300);
	r3 = D(r3, s[1][1][0], 0xF3E100F1, 0xF7001AF2, 0x0BEB0F07, 0x002EB2EC);
	r4 = D(r4, s[1][1][0], 0xF0411704, 0x07D10922, 0x12F317EE, 0x0B150F10);
	r5 = D(r5, s[1][1][0], 0x13E80502, 0x0A0399F9, 0x0018F606, 0x00FBC3F1);
	r6 = D(r6, s[1][1][0], 0xFF00E3FC, 0x041F2BFB, 0xF5CFFEF9, 0x0D07E20D);
	r7 = D(r7, s[1][1][0], 0x1BEDECEA, 0xFE1BC6EF, 0xF933EB04, 0xE6CDEF0B);
	r0 = D(r0, s[1][1][1], 0x0A0D0EF4, 0x0D0411ED, 0x010C0F02, 0xF92ABC0F);
	r1 = D(r1, s[1][1][1], 0xFDF8C30B, 0x05E6F8F7, 0x04FA1B0C, 0xF504F2FE);
	r2 = D(r2, s[1][1][1], 0xE1201704, 0xF8FEEB07, 0x16FAF903, 0xFEA206DE);
	r3 = D(r3, s[1][1][1], 0xFF19ABEE, 0xFD10340A, 0x05FC0301, 0x130F1A00);
	r4 = D(r4, s[1][1][1], 0xF2E7133F, 0xE6260FF8, 0xEEFAFFF6, 0x00F20609);
	r5 = D(r5, s[1][1][1], 0x0E113B00, 0xF411200A, 0xF7210B0F, 0x02FDFF05);
	r6 = D(r6, s[1][1][1], 0x03F13B23, 0x3EEEF8E7, 0xF2462C1D, 0xF5DBFC1E);
	r7 = D(r7, s[1][1][1], 0xF900F500, 0x002EFDF6, 0xFAEAEEF7, 0x0C1523FB);
	r0 = D(r0, s[1][1][2], 0x020B15FB, 0x35F5FD0F, 0x040EF909, 0x00FC030D);
	r1 = D(r1, s[1][1][2], 0x0A0C050A, 0xEBE4F5E8, 0xEF0EF0F0, 0xF1FFFB15);
	r2 = D(r2, s[1][1][2], 0x090408F9, 0x0A0800FB, 0x0BF02110, 0x10C811ED);
	r3 = D(r3, s[1][1][2], 0xE4E3F5F5, 0x060F090B, 0x1DFDF1F2, 0xF911FDDD);
	r4 = D(r4, s[1][1][2], 0x1637F70B, 0x0A12FC01, 0x050CE7F4, 0xD905FFF0);
	r5 = D(r5, s[1][1][2], 0xFD0BF2FF, 0x250DF304, 0xF502EBFB, 0xFBE60503);
	r6 = D(r6, s[1][1][2], 0x0500F4FE, 0xFD0C05E1, 0xD8FA1E0C, 0x0608F9F8);
	r7 = D(r7, s[1][1][2], 0x1CE6100B, 0xF41B1BE4, 0x03E6EB05, 0x150B02F5);
	r0 = D(r0, s[1][2][0], 0xFF0A2BFC, 0xF6F7EF04, 0xFE0BEAFF, 0x07110D00);
	r1 = D(r1, s[1][2][0], 0xDC1DFB02, 0xF007E009, 0x0AFAFC02, 0x161F35EE);
	r2 = D(r2, s[1][2][0], 0xE4101011, 0x33E6F1FD, 0x01210FFF, 0x132ACA08);
	r3 = D(r3, s[1][2][0], 0x01DDFE02, 0xFA162403, 0x09F50806, 0x120AE90A);
	r4 = D(r4, s[1][2][0], 0xFC26DE0B, 0x09FCC6FC, 0x0BD20701, 0xE0EAC907);
	r5 = D(r5, s[1][2][0], 0x0113F706, 0xF4DAFFF4, 0xF02A1104, 0xFDF50AF3);
	r6 = D(r6, s[1][2][0], 0x1EFBF8FD, 0x16063D0A, 0x041DE005, 0xF507A300);
	r7 = D(r7, s[1][2][0], 0xFA14EEFB, 0x0B15F706, 0x0F02100E, 0x0309F710);
	r0 = D(r0, s[1][2][1], 0xFDFBE8F3, 0x0CDFFB00, 0x04FFF9FE, 0x072724F6);
	r1 = D(r1, s[1][2][1], 0xE6011F0B, 0x010D210C, 0x0A291F02, 0x05F9F5ED);
	r2 = D(r2, s[1][2][1], 0xE1E6F304, 0x1D2708FD, 0xCEFA00FD, 0x1B212AF8);
	r3 = D(r3, s[1][2][1], 0x09F822F6, 0xFC0BFE09, 0x1107F307, 0x18EFFFFD);
	r4 = D(r4, s[1][2][1], 0x05E6F905, 0x0B090107, 0x29CDF9F3, 0x01D9FC0C);
	r5 = D(r5, s[1][2][1], 0x0315F1FE, 0xF8131FFF, 0xB5F9FE11, 0x09FFF4FA);
	r6 = D(r6, s[1][2][1], 0xF9F3F0EF, 0x3306E407, 0x201F2B16, 0xF7100F1C);
	r7 = D(r7, s[1][2][1], 0xED111F17, 0xF5F309F7, 0x030C03FC, 0xF6F30D05);
	r0 = D(r0, s[1][2][2], 0xFC05EEF9, 0x1923080A, 0x02FEF702, 0x00FD000B);
	r1 = D(r1, s[1][2][2], 0x0CF9EEE7, 0x0E061112, 0x13F4EE08, 0xFC06FE00);
	r2 = D(r2, s[1][2][2], 0xE3020102, 0x0AF9ECE9, 0xFC10E003, 0x1118040B);
	r3 = D(r3, s[1][2][2], 0xF7F4FA03, 0xF7FBEF03, 0xF2F7F7FB, 0x0BF504FC);
	r4 = D(r4, s[1][2][2], 0xEFF7EE07, 0x0719FF05, 0x0EFE0AFC, 0xF8DBD80C);
	r5 = D(r5, s[1][2][2], 0x0C15FE0A, 0xF8150118, 0x10F60AFA, 0xFE190908);
	r6 = D(r6, s[1][2][2], 0x080401F9, 0xEFE0FCDC, 0x9D0807EA, 0x02010611);
	r7 = D(r7, s[1][2][2], 0xFC01F106, 0x1402E503, 0x06000B07, 0x06010C03);
	s[0][0][0] = G[2][xy.y+0][xy.x+0]; s[0][0][1] = G[2][xy.y+0][xy.x+1];
	s[0][0][2] = G[2][xy.y+0][xy.x+2]; s[0][1][0] = G[2][xy.y+1][xy.x+0];
	s[0][1][1] = G[2][xy.y+1][xy.x+1]; s[0][1][2] = G[2][xy.y+1][xy.x+2];
	s[0][2][0] = G[2][xy.y+2][xy.x+0]; s[0][2][1] = G[2][xy.y+2][xy.x+1];
	s[0][2][2] = G[2][xy.y+2][xy.x+2]; s[1][0][0] = G[3][xy.y+0][xy.x+0];
	s[1][0][1] = G[3][xy.y+0][xy.x+1]; s[1][0][2] = G[3][xy.y+0][xy.x+2];
	s[1][1][0] = G[3][xy.y+1][xy.x+0]; s[1][1][1] = G[3][xy.y+1][xy.x+1];
	s[1][1][2] = G[3][xy.y+1][xy.x+2]; s[1][2][0] = G[3][xy.y+2][xy.x+0];
	s[1][2][1] = G[3][xy.y+2][xy.x+1]; s[1][2][2] = G[3][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x05F7FDF5, 0xF3FC0707, 0x09F7FC03, 0x0302F7FC);
	r1 = D(r1, s[0][0][0], 0x02FC0105, 0xF3CEF1FA, 0xFBFC12E2, 0x06F60B00);
	r2 = D(r2, s[0][0][0], 0xFCF019ED, 0xF9E7F0F0, 0x0A0C12FF, 0x0305F6F7);
	r3 = D(r3, s[0][0][0], 0x0B0CF713, 0xF800050B, 0xF9E2090A, 0x070710ED);
	r4 = D(r4, s[0][0][0], 0x0205F200, 0xFAEC0508, 0xFDF7F5FC, 0xF6EEFA04);
	r5 = D(r5, s[0][0][0], 0xFE041303, 0x02EE1817, 0xEEF805ED, 0xFDFEEAF3);
	r6 = D(r6, s[0][0][0], 0x01F4F300, 0xE7F0100E, 0xFEFBE405, 0x0F13F510);
	r7 = D(r7, s[0][0][0], 0xE9CF12DC, 0xF3FF0C0A, 0x04F8FB11, 0xF7FDE0DE);
	r0 = D(r0, s[0][0][1], 0x01F7F5FA, 0xE5001D07, 0x1409FEFE, 0x0902FFFF);
	r1 = D(r1, s[0][0][1], 0xFEFD101A, 0xEC09F5F6, 0xEFFDFB15, 0x0C0AE404);
	r2 = D(r2, s[0][0][1], 0x0D162711, 0xF6FDFBD1, 0x010207F8, 0x0CFFF9E3);
	r3 = D(r3, s[0][0][1], 0x05090E0D, 0x02010C07, 0xF8FBFCFE, 0xF10B13FF);
	r4 = D(r4, s[0][0][1], 0xFCF9F7F0, 0x02FA0414, 0x07141AF0, 0x111B00EF);
	r5 = D(r5, s[0][0][1], 0x0C100604, 0xFDCE0302, 0xFBECFEF7, 0xEEF7FDFB);
	r6 = D(r6, s[0][0][1], 0x03F10F0A, 0xFFF9FCF8, 0xF30815F8, 0x24FDFFE6);
	r7 = D(r7, s[0][0][1], 0xF8FB1CFC, 0xEAD7F814, 0x07210908, 0xEFFD17F9);
	r0 = D(r0, s[0][0][2], 0x03E40106, 0x0C1906F0, 0x01FB0205, 0x0FF6E904);
	r1 = D(r1, s[0][0][2], 0x1813F4FC, 0xF1081001, 0x080EFDF5, 0x0B020DF5);
	r2 = D(r2, s[0][0][2], 0x1023F8E8, 0xFD090FD4, 0xF0EEEC17, 0x0FF51800);
	r3 = D(r3, s[0][0][2], 0x12030A14, 0xFE07F708, 0xE9FA0405, 0x0402040D);
	r4 = D(r4, s[0][0][2], 0xE2E2F3E3, 0x0117E4E6, 0xED1BF20F, 0x0227E9EF);
	r5 = D(r5, s[0][0][2], 0xF309FB09, 0x05EBF8FD, 0xF9FF040F, 0x00F4F7FF);
	r6 = D(r6, s[0][0][2], 0xFBFDF40E, 0xEFF9F406, 0x0D32E805, 0x27EA09DC);
	r7 = D(r7, s[0][0][2], 0xEDEAFE08, 0xFDBCFF20, 0x0C06F302, 0x010B0701);
	r0 = D(r0, s[0][1][0], 0x0611C90A, 0xFDFBED1A, 0x05FD10F7, 0xFB1C14FC);
	r1 = D(r1, s[0][1][0], 0x100CE3F7, 0xE5D6031A, 0xFCF1F902, 0x12FFDEF5);
	r2 = D(r2, s[0][1][0], 0xECE30C03, 0x05F9F3EB, 0xF80CEF06, 0x091708FD);
	r3 = D(r3, s[0][1][0], 0x03F6F5F8, 0x1104F10A, 0x04F0F002, 0x02FEFEFB);
	r4 = D(r4, s[0][1][0], 0xFC1D1A0C, 0xEFE50403, 0x11011B05, 0x0A04F804);
	r5 = D(r5, s[0][1][0], 0xF403F704, 0x08E7E608, 0xF4EA0F0A, 0x130AFEF9);
	r6 = D(r6, s[0][1][0], 0x08FBE501, 0xFAFCFE10, 0x0EFCF5F3, 0xF8E808EF);
	r7 = D(r7, s[0][1][0], 0x1B00EE06, 0x05F8F60C, 0x051B0A02, 0xEE000EF3);
	r0 = D(r0, s[0][1][1], 0xEA0CEED5, 0xE7E1160D, 0x1C0A0E04, 0xF4020000);
	r1 = D(r1, s[0][1][1], 0xDA0B0E1E, 0xE61705C3, 0xD6E20600, 0x0C18E90D);
	r2 = D(r2, s[0][1][1], 0xDEE7051E, 0x0502F5ED, 0x0910E904, 0xF2EF0919);
	r3 = D(r3, s[0][1][1], 0x06FA15FB, 0x09FC05F2, 0xF71A19EA, 0xF9F403DF);
	r4 = D(r4, s[0][1][1], 0xD93104FB, 0x08F706E7, 0x0CFD01F8, 0x07D914D5);
	r5 = D(r5, s[0][1][1], 0x0DFFF5E7, 0xAEFA1BE8, 0x0515F401, 0x07310618);
	r6 = D(r6, s[0][1][1], 0x1A06011C, 0x0228E31D, 0x14090F01, 0xEC2FFD00);
	r7 = D(r7, s[0][1][1], 0xF903C118, 0xF6DBEC03, 0x090BE6DD, 0xDD2E05E0);
	r0 = D(r0, s[0][1][2], 0xF703FD12, 0x0FBF18EB, 0xF60E05FE, 0xF7081611);
	r1 = D(r1, s[0][1][2], 0x02EF13E9, 0xE7F704FC, 0xDC18F014, 0x02E70CFD);
	r2 = D(r2, s[0][1][2], 0xF0F507FD, 0x0DEDF7E5, 0x04FE0CF0, 0x0AF4EEFA);
	r3 = D(r3, s[0][1][2], 0x1009FC07, 0x0D16F0FB, 0xFEFCFE05, 0x08041A11);
	r4 = D(r4, s[0][1][2], 0x812FEB06, 0xF51EF11D, 0xF620FCF9, 0x042CDCFE);
	r5 = D(r5, s[0][1][2], 0xDE07F9FD, 0x07EEE30C, 0x02FE07FB, 0xF5F0FA02);
	r6 = D(r6, s[0][1][2], 0x17EE03F8, 0xFCAAD725, 0x29E71B1A, 0x03D10FF8);
	r7 = D(r7, s[0][1][2], 0xF5EC0BE2, 0xF8D7EF0E, 0xF00D07FC, 0x000814EE);
	r0 = D(r0, s[0][2][0], 0x00CA06FA, 0xF11F090C, 0x0200FBFB, 0x01F2DCF4);
	r1 = D(r1, s[0][2][0], 0x0C270EF9, 0xF1FB17F1, 0x12F8FE01, 0x05FAF9EE);
	r2 = D(r2, s[0][2][0], 0x00FC0501, 0x09AF0ADB, 0x11F0E40C, 0x12DBE6F8);
	r3 = D(r3, s[0][2][0], 0xFAEC0A09, 0x03130202, 0xFDFA03FF, 0x030BF109);
	r4 = D(r4, s[0][2][0], 0x0210F910, 0xFDE102F6, 0x1013F1F7, 0xF83C0310);
	r5 = D(r5, s[0][2][0], 0xFEE81312, 0xFB280010, 0xF5042502, 0xFDE7FFF0);
	r6 = D(r6, s[0][2][0], 0xFEEEFAFF, 0xF2CB0EFA, 0xFC2C06F9, 0x050509E6);
	r7 = D(r7, s[0][2][0], 0x031102F1, 0x01160C05, 0x0002EFEA, 0xF1E51505);
	r0 = D(r0, s[0][2][1], 0x04D70DF7, 0xF3E60CF1, 0x0C060300, 0x0D0E0503);
	r1 = D(r1, s[0][2][1], 0x01EBFBE8, 0xEE21FEE6, 0x0E0FF60B, 0x010A10F8);
	r2 = D(r2, s[0][2][1], 0xF60BFCF7, 0x0E03F9D9, 0x021505FB, 0x0EDCF0E4);
	r3 = D(r3, s[0][2][1], 0x04AAFAF5, 0xF900FEF4, 0xF9F9F609, 0x0DFE02FE);
	r4 = D(r4, s[0][2][1], 0x00320902, 0x051103F8, 0x0203EE00, 0xEFEAF604);
	r5 = D(r5, s[0][2][1], 0xFAFE2201, 0xF9F216F2, 0x01351DF8, 0x020200FC);
	r6 = D(r6, s[0][2][1], 0x0301110C, 0x01ECF303, 0x00FA1023, 0xEF2215F7);
	r7 = D(r7, s[0][2][1], 0x09E81002, 0xFFF21A09, 0xFE0AF10A, 0xED00F71F);
	r0 = D(r0, s[0][2][2], 0x0EE50F02, 0x07EA01F3, 0x0301FDF3, 0x0D0403F8);
	r1 = D(r1, s[0][2][2], 0xFF1300F9, 0xFEFDFD1B, 0x220EE4DB, 0x07DB04ED);
	r2 = D(r2, s[0][2][2], 0xFBE0FF0B, 0x060A12FB, 0xEF0422F7, 0xEFE703FC);
	r3 = D(r3, s[0][2][2], 0x051CFFDE, 0x07140104, 0x0EF9EE10, 0x0DF7FA0B);
	r4 = D(r4, s[0][2][2], 0xF324D3E6, 0x02DB0A09, 0x08EE05F5, 0xF0EA09D8);
	r5 = D(r5, s[0][2][2], 0xFD08E412, 0x14FBEBF5, 0xE5FA0E0E, 0x010A0603);
	r6 = D(r6, s[0][2][2], 0x02F30802, 0xDDFCE50A, 0xF7ACE5EE, 0xFFEE0017);
	r7 = D(r7, s[0][2][2], 0xFD0E0D09, 0x06C01D14, 0xFEEA0DF8, 0xEED221E7);
	r0 = D(r0, s[1][0][0], 0x05FF0C2B, 0x03EAEB11, 0xFE0406F9, 0xFA12FD11);
	r1 = D(r1, s[1][0][0], 0xF3D8F701, 0x1308FA17, 0xFDF4F5F7, 0x0500FD23);
	r2 = D(r2, s[1][0][0], 0xFBE8F207, 0xFD2D0FF1, 0xF10DFA04, 0x031A071E);
	r3 = D(r3, s[1][0][0], 0xF71C03D9, 0xF2F70AE7, 0x0FEC09DE, 0xF9040EDF);
	r4 = D(r4, s[1][0][0], 0xF901FA0F, 0xFB16F6E1, 0xE40A1AE1, 0x24E30418);
	r5 = D(r5, s[1][0][0], 0xFFF90209, 0xF5F1EEF2, 0x04F7FE01, 0x11EF0004);
	r6 = D(r6, s[1][0][0], 0x0AF50623, 0xF1F5F405, 0x01FFFA25, 0xFC0C1611);
	r7 = D(r7, s[1][0][0], 0x0E0A3109, 0xF4050AF0, 0x0D0007DF, 0x051AF019);
	r0 = D(r0, s[1][0][1], 0x11ECFC1C, 0xF8F419FF, 0x02FCFB06, 0x00071711);
	r1 = D(r1, s[1][0][1], 0x00F8F0FB, 0x0002FFFF, 0xF9EB10F1, 0xF907081D);
	r2 = D(r2, s[1][0][1], 0x0E06F906, 0xEDFFFFFB, 0x0AF81C04, 0x1A13F2F5);
	r3 = D(r3, s[1][0][1], 0xF9F409E9, 0x0C0AEE03, 0x08E20E01, 0xF9FD15E5);
	r4 = D(r4, s[1][0][1], 0x1400110E, 0xE609F613, 0x04F5E112, 0x16EFE935);
	r5 = D(r5, s[1][0][1], 0x1118FDFE, 0xFFF60823, 0x0D0307E9, 0x0F071809);
	r6 = D(r6, s[1][0][1], 0xFAF80CFA, 0x00F702FB, 0xD302011A, 0xF71204DF);
	r7 = D(r7, s[1][0][1], 0x020FD0B6, 0xEAE60CED, 0xEBF612E4, 0x110602A6);
	r0 = D(r0, s[1][0][2], 0xFEFF0BE2, 0xFCECFF11, 0x03FF0107, 0x08F5F1F2);
	r1 = D(r1, s[1][0][2], 0xF8090D04, 0x1AFEE92E, 0xF9F9FDDA, 0x03F7F2E8);
	r2 = D(r2, s[1][0][2], 0x1C1C0CFE, 0x07EE0B0D, 0x08E80A01, 0x0C1F0CD4);
	r3 = D(r3, s[1][0][2], 0x020006C6, 0xFFFC0002, 0x060303F7, 0x0302F9FE);
	r4 = D(r4, s[1][0][2], 0x0AFE0411, 0x0FF514D4, 0xDC142404, 0x010B1C17);
	r5 = D(r5, s[1][0][2], 0xF4F7F30F, 0xFC010908, 0x12E9030D, 0xF205F408);
	r6 = D(r6, s[1][0][2], 0x06FFFCFE, 0x0D27EA2C, 0x10030DF7, 0x0B12F626);
	r7 = D(r7, s[1][0][2], 0x03020117, 0xF016E918, 0x142106F4, 0x12081C0C);
	r0 = D(r0, s[1][1][0], 0xFFF90B28, 0x09120604, 0xF801011A, 0xFDFFFBE8);
	r1 = D(r1, s[1][1][0], 0xF600FC2A, 0xF7041703, 0xFFF8F7E6, 0x0506E2FA);
	r2 = D(r2, s[1][1][0], 0xF5D5EA13, 0xEB1916FA, 0x14FDF7D0, 0xF9E81AF7);
	r3 = D(r3, s[1][1][0], 0xFD05F003, 0xFC07020E, 0x0BF8F0ED, 0xEDFC1F05);
	r4 = D(r4, s[1][1][0], 0x05F504F0, 0xF0FD0FFF, 0xD8010BED, 0x06032119);
	r5 = D(r5, s[1][1][0], 0xF2F31AFC, 0xF908FE2D, 0xF20307E0, 0xF80AFAF7);
	r6 = D(r6, s[1][1][0], 0xF6FFF80B, 0xE1F6ECFD, 0xF1160A15, 0x020919EA);
	r7 = D(r7, s[1][1][0], 0x0FF00600, 0xF9151533, 0xF20BFED2, 0xE8021718);
	r0 = D(r0, s[1][1][1], 0x0304ECA6, 0x0BF5F3CE, 0x15090C10, 0xF7080BE2);
	r1 = D(r1, s[1][1][1], 0x0D04FD1C, 0xED040BF4, 0x0EF8F6ED, 0x1A020414);
	r2 = D(r2, s[1][1][1], 0xE9FEF40B, 0x0E0AF214, 0x020BD9ED, 0xF2FFE5FE);
	r3 = D(r3, s[1][1][1], 0x03FBE69C, 0x09FBF2FD, 0xEF0B0E24, 0x06FBEC07);
	r4 = D(r4, s[1][1][1], 0x0EF70215, 0xF9FD0EEC, 0x01E9C812, 0x06EDCCE8);
	r5 = D(r5, s[1][1][1], 0x0A031106, 0x07EC0AE7, 0x05EFEBF9, 0xFEFD0205);
	r6 = D(r6, s[1][1][1], 0x03FAD3EA, 0x03F0F601, 0xE908030A, 0xF3F8F7ED);
	r7 = D(r7, s[1][1][1], 0xF016E381, 0xF101E8E2, 0x16F7F2F5, 0x06ED2E1A);
	r0 = D(r0, s[1][1][2], 0xE80BFA89, 0x00F8FC0A, 0x0602FF0D, 0x020B121B);
	r1 = D(r1, s[1][1][2], 0x19BE0DF1, 0xFE1BE7E9, 0xFF0F0622, 0x19FF0FFB);
	r2 = D(r2, s[1][1][2], 0x050C09ED, 0xF000F9FF, 0xEC0E19EB, 0x0C1EF2F1);
	r3 = D(r3, s[1][1][2], 0x0A04F507, 0x02EC05F4, 0xFA0DE500, 0x0411F714);
	r4 = D(r4, s[1][1][2], 0xED011BE2, 0xFBEF0EE4, 0xE9EF0205, 0xF70E0EDD);
	r5 = D(r5, s[1][1][2], 0x120FF1D4, 0x0F14FAE4, 0x0F0002F3, 0x0707FCEB);
	r6 = D(r6, s[1][1][2], 0xFF070AFF, 0xF6F702D9, 0xEF250415, 0x0FE1EF12);
	r7 = D(r7, s[1][1][2], 0xFDEF090D, 0xF3DBFA0E, 0xF80021F8, 0xFEFA1007);
	r0 = D(r0, s[1][2][0], 0x00F7F515, 0x0D04FF1E, 0xFC0BF9F7, 0xF805EEE5);
	r1 = D(r1, s[1][2][0], 0xF2F90619, 0x01FE1FFF, 0x05FF060C, 0xF8FEF910);
	r2 = D(r2, s[1][2][0], 0xF4FAEAF5, 0xF2D2F5E2, 0x041D173C, 0x01EA0916);
	r3 = D(r3, s[1][2][0], 0x0A0D0005, 0xF1030B16, 0xE9140106, 0xEFFAF51B);
	r4 = D(r4, s[1][2][0], 0xFDEB0F05, 0xEF02E8FF, 0x07EC010F, 0xF9E21201);
	r5 = D(r5, s[1][2][0], 0xF2F7D70A, 0xF9F5EF0D, 0xFC000BED, 0x06EDF8FD);
	r6 = D(r6, s[1][2][0], 0x0F02F1F3, 0x081C1009, 0x12F4F01A, 0xF7D8F701);
	r7 = D(r7, s[1][2][0], 0x120EF929, 0xFDF205FE, 0x02F9FA19, 0xFEF5EF05);
	r0 = D(r0, s[1][2][1], 0xF028E6FB, 0xFB0AFCF2, 0xFF01FB0A, 0xF3F41108);
	r1 = D(r1, s[1][2][1], 0xFB020607, 0xFCEDFF07, 0x0316CDF2, 0xFB0901F3);
	r2 = D(r2, s[1][2][1], 0xFDF2060A, 0xFC180C18, 0xEE1FF0DA, 0xF503F4EE);
	r3 = D(r3, s[1][2][1], 0xE4F003E8, 0xEB0306E2, 0x15F0FF1B, 0xFB19EA05);
	r4 = D(r4, s[1][2][1], 0x0BF2F9F9, 0xEFF5F809, 0x0CFD06F1, 0x0503DBBE);
	r5 = D(r5, s[1][2][1], 0xFB02E90F, 0x04030AED, 0x02EF1023, 0xF708FA1D);
	r6 = D(r6, s[1][2][1], 0xFB08E60D, 0xFA220B08, 0xFDE61C0D, 0x02FCFFF5);
	r7 = D(r7, s[1][2][1], 0x090919F2, 0xF418F90B, 0xEBF309D8, 0xDD080AFD);
	r0 = D(r0, s[1][2][2], 0x00E9232C, 0x00031709, 0xFA06FF00, 0x0C010223);
	r1 = D(r1, s[1][2][2], 0x010B060A, 0x05FB0810, 0x080711C1, 0xF8160124);
	r2 = D(r2, s[1][2][2], 0x1914EAF0, 0x1C05FA1A, 0xFBE60F05, 0xFAEFF233);
	r3 = D(r3, s[1][2][2], 0xEF060FFB, 0x04F7F814, 0xFDF4FB0D, 0xF303FE1D);
	r4 = D(r4, s[1][2][2], 0xEEF700F6, 0x06FAF60F, 0xFCEDFA1D, 0xFD0706E0);
	r5 = D(r5, s[1][2][2], 0x04F106FD, 0xEFF70411, 0x08F605E9, 0x07FDF505);
	r6 = D(r6, s[1][2][2], 0xFB000208, 0xE7FFE5EE, 0x03ED83F5, 0xE5FC07D8);
	r7 = D(r7, s[1][2][2], 0x05FCF615, 0x28080CFC, 0xF613FAF6, 0x0213ED06);
	s[0][0][0] = G[4][xy.y+0][xy.x+0]; s[0][0][1] = G[4][xy.y+0][xy.x+1];
	s[0][0][2] = G[4][xy.y+0][xy.x+2]; s[0][1][0] = G[4][xy.y+1][xy.x+0];
	s[0][1][1] = G[4][xy.y+1][xy.x+1]; s[0][1][2] = G[4][xy.y+1][xy.x+2];
	s[0][2][0] = G[4][xy.y+2][xy.x+0]; s[0][2][1] = G[4][xy.y+2][xy.x+1];
	s[0][2][2] = G[4][xy.y+2][xy.x+2]; s[1][0][0] = G[5][xy.y+0][xy.x+0];
	s[1][0][1] = G[5][xy.y+0][xy.x+1]; s[1][0][2] = G[5][xy.y+0][xy.x+2];
	s[1][1][0] = G[5][xy.y+1][xy.x+0]; s[1][1][1] = G[5][xy.y+1][xy.x+1];
	s[1][1][2] = G[5][xy.y+1][xy.x+2]; s[1][2][0] = G[5][xy.y+2][xy.x+0];
	s[1][2][1] = G[5][xy.y+2][xy.x+1]; s[1][2][2] = G[5][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xFFF6F40A, 0xFB12F622, 0x05040201, 0x0005F801);
	r1 = D(r1, s[0][0][0], 0x0FFA0802, 0xF5FFFBFA, 0x02FBFEF8, 0x260BFC0B);
	r2 = D(r2, s[0][0][0], 0x09F5F8F7, 0x1B00FAFE, 0xEE0924F3, 0x0307DE0B);
	r3 = D(r3, s[0][0][0], 0xFCE70A04, 0xFB0AFC05, 0x0C04FD0E, 0xDC04DF0C);
	r4 = D(r4, s[0][0][0], 0x060D07F3, 0x0AF10CF7, 0xEE11EE18, 0x05F5F711);
	r5 = D(r5, s[0][0][0], 0xF3F4F1F0, 0x0A06020D, 0x090FF6E9, 0xF6F60CF6);
	r6 = D(r6, s[0][0][0], 0x04FC00FD, 0x06050009, 0x02FAFAFF, 0x03F90CF1);
	r7 = D(r7, s[0][0][0], 0x03340206, 0xECFCF4FE, 0xFDF9F0F1, 0x0B08FD02);
	r0 = D(r0, s[0][0][1], 0xEB0F2006, 0xEE12D70D, 0xF90C0704, 0xEC0AF002);
	r1 = D(r1, s[0][0][1], 0xEAF80CEE, 0xD2EE0409, 0xFCECFCEE, 0x0309F304);
	r2 = D(r2, s[0][0][1], 0x25ECFBFE, 0x0117FADC, 0x0E141800, 0x0A06D3F9);
	r3 = D(r3, s[0][0][1], 0xF8F4F903, 0x0A05F805, 0x0E1DFF02, 0x0B19EEFC);
	r4 = D(r4, s[0][0][1], 0x0AE806FA, 0x11F805F4, 0x0B052AF6, 0x041B091E);
	r5 = D(r5, s[0][0][1], 0x1C160105, 0x0AFDF508, 0xFEEE05EE, 0x0D17FBFE);
	r6 = D(r6, s[0][0][1], 0x06EF000A, 0x230402F4, 0x06ECEE07, 0x060A0C0A);
	r7 = D(r7, s[0][0][1], 0x0E1505F7, 0x04F5C110, 0xF518150C, 0xC7E8FEF4);
	r0 = D(r0, s[0][0][2], 0xE41F0102, 0xEB1905FA, 0xF411060D, 0xD9FD14FB);
	r1 = D(r1, s[0][0][2], 0x0BFC06F9, 0xED0D19FA, 0x0E0EFEFE, 0x04E5010F);
	r2 = D(r2, s[0][0][2], 0xFEF50209, 0xC2BEFD0D, 0x1B23F301, 0xFCC50FF5);
	r3 = D(r3, s[0][0][2], 0xF9D801F4, 0xFFEB00F5, 0xF70A0A00, 0xE2F1E5EE);
	r4 = D(r4, s[0][0][2], 0xE5D4FF0B, 0xE0FA0112, 0xFC20F00D, 0x0610E7F9);
	r5 = D(r5, s[0][0][2], 0xF623F8FD, 0xF8EDFA0C, 0xF3F90215, 0xF7080AEE);
	r6 = D(r6, s[0][0][2], 0xFEF8F3FD, 0xFEF4EFFF, 0x1705F8F1, 0xEFD816FC);
	r7 = D(r7, s[0][0][2], 0xF7AAF7FD, 0xFDAF05F2, 0x00F60F0B, 0xD0A90BFC);
	r0 = D(r0, s[0][1][0], 0x09D91D1A, 0xF2E4F40B, 0x01FF0804, 0xEB090014);
	r1 = D(r1, s[0][1][0], 0x060B0700, 0x02F6FCFC, 0xFDFDF3FC, 0x0D0DF7FD);
	r2 = D(r2, s[0][1][0], 0x1425FC0F, 0xFB19D8D5, 0xF20A16EA, 0xFDDC00FD);
	r3 = D(r3, s[0][1][0], 0xEC020309, 0xF3F103F5, 0x0AF9FF16, 0x0814FF02);
	r4 = D(r4, s[0][1][0], 0x0204FEE6, 0x0C0AF010, 0x04E20BF4, 0x1E02F20C);
	r5 = D(r5, s[0][1][0], 0xFC0EECFA, 0xF7E90D0A, 0x03ED09EF, 0x05FE0107);
	r6 = D(r6, s[0][1][0], 0xFB0A0715, 0xFB0FFE08, 0xFA0511F3, 0xEF021505);
	r7 = D(r7, s[0][1][0], 0x0AD10B11, 0xF50717FA, 0x0AF3F20A, 0x01FEF2F5);
	r0 = D(r0, s[0][1][1], 0x0007091C, 0xF108FB06, 0x0E020704, 0xE305F0FB);
	r1 = D(r1, s[0][1][1], 0xF41500DB, 0xE1C8270C, 0xFC06E9F6, 0xF40C220C);
	r2 = D(r2, s[0][1][1], 0x07AE0C16, 0xEBF605C5, 0xFC000D04, 0xD523D90C);
	r3 = D(r3, s[0][1][1], 0xE112FCF5, 0xF9EA0216, 0x290C03E2, 0xFFF2F412);
	r4 = D(r4, s[0][1][1], 0xFA4DF6F8, 0x00010F0B, 0xFF14FD3B, 0xFD200C04);
	r5 = D(r5, s[0][1][1], 0x0C0F0CFB, 0xF405D80B, 0x1AF9FCFB, 0xFBD70D00);
	r6 = D(r6, s[0][1][1], 0x111FFE08, 0xEA160BF2, 0x05FD113A, 0x13EAECE0);
	r7 = D(r7, s[0][1][1], 0xE8380B00, 0x03220217, 0xF4ED0C0F, 0xFAFD0000);
	r0 = D(r0, s[0][1][2], 0xD546EC08, 0x00BA0A09, 0xFC10FE09, 0xCCDDD706);
	r1 = D(r1, s[0][1][2], 0xFF511200, 0xF6F5F6F2, 0x150DFC08, 0xE93DF807);
	r2 = D(r2, s[0][1][2], 0x0FF0FF0C, 0xC7D5FCEC, 0xFBF111FF, 0xE7F91DFB);
	r3 = D(r3, s[0][1][2], 0xDABDF604, 0x02EE0C06, 0x0B19EF0A, 0x0621F3ED);
	r4 = D(r4, s[0][1][2], 0x052E09EA, 0x04E9FC08, 0xE80411DF, 0xDB1CEEF6);
	r5 = D(r5, s[0][1][2], 0xF4E4FCF3, 0x00A5FC02, 0xE41E01EE, 0xF31C0704);
	r6 = D(r6, s[0][1][2], 0x05FF0F03, 0xE7D4F0FC, 0xDCD10FE8, 0x090B28FA);
	r7 = D(r7, s[0][1][2], 0xF09B02FA, 0x102B0AE6, 0x090E080E, 0xFC460BF0);
	r0 = D(r0, s[0][2][0], 0x001029F9, 0xFFFD000B, 0x0403FFFA, 0xF2F9F81A);
	r1 = D(r1, s[0][2][0], 0xFCEFE100, 0x0307F818, 0xF9FAF2E9, 0xFD010207);
	r2 = D(r2, s[0][2][0], 0x16F3B881, 0xE30022CE, 0x010C11FC, 0x0533E919);
	r3 = D(r3, s[0][2][0], 0xFD15F813, 0xF9F6F91C, 0x08F8F0F9, 0x0AE70B1E);
	r4 = D(r4, s[0][2][0], 0x1001FF0B, 0x0019F418, 0x102CD900, 0x1503F506);
	r5 = D(r5, s[0][2][0], 0xF5E20FEA, 0xFAFB0515, 0xFC0600E5, 0xE9050100);
	r6 = D(r6, s[0][2][0], 0xE6F91AFA, 0xF1FE100D, 0x1008E410, 0x00F61900);
	r7 = D(r7, s[0][2][0], 0x110EF70B, 0xFB051704, 0x0C22F005, 0x1F040D19);
	r0 = D(r0, s[0][2][1], 0x070D01F3, 0xFDE80601, 0x000407FA, 0x020BFDFE);
	r1 = D(r1, s[0][2][1], 0xF5060F05, 0xF92408FB, 0x0CEFE2DA, 0xF8130514);
	r2 = D(r2, s[0][2][1], 0x14DDEAE2, 0xE5E9F2A4, 0xFC21FB08, 0xE91FFEEE);
	r3 = D(r3, s[0][2][1], 0xF405FDF2, 0xFA1BF9FE, 0x0DF8F00D, 0xF718EF17);
	r4 = D(r4, s[0][2][1], 0x071B06D3, 0xFD06DF01, 0x0910FF1D, 0xFC01F00F);
	r5 = D(r5, s[0][2][1], 0x000AEEE7, 0xE5F50804, 0x0DF9F3F3, 0xFE1BF5FE);
	r6 = D(r6, s[0][2][1], 0xFB0DF50C, 0x030A18DA, 0xFD0AE812, 0xFB1CFE09);
	r7 = D(r7, s[0][2][1], 0x0FD6E50E, 0x0EF20E08, 0x07E7FA02, 0x06F202ED);
	r0 = D(r0, s[0][2][2], 0xFFE5E109, 0x1D30F9F9, 0xF8100607, 0x0F9305FE);
	r1 = D(r1, s[0][2][2], 0x00060601, 0x0D11E6F5, 0x0220E609, 0x0746EC17);
	r2 = D(r2, s[0][2][2], 0x00040309, 0xE5B9FFFD, 0x0CF71907, 0xF0CB08FE);
	r3 = D(r3, s[0][2][2], 0xFAA7FDF6, 0x13EE12FC, 0xF40C0205, 0x09EE0504);
	r4 = D(r4, s[0][2][2], 0x050EF6F9, 0x012116F1, 0x06F80001, 0xE45BFCEA);
	r5 = D(r5, s[0][2][2], 0xF8E90304, 0xEA300300, 0x0AEDFB00, 0x070404FA);
	r6 = D(r6, s[0][2][2], 0xF6E8FA1F, 0x08D8E504, 0x0316EF81, 0x00190511);
	r7 = D(r7, s[0][2][2], 0x04CDFEFA, 0x06111310, 0x0E02F7DC, 0x08BF16E7);
	r0 = D(r0, s[1][0][0], 0x0618FCFD, 0xF5F1FC00, 0xFD09080C, 0x0D03F50A);
	r1 = D(r1, s[1][0][0], 0x010D10FB, 0x0DFB01F4, 0xFCFFF3FB, 0x03020BFF);
	r2 = D(r2, s[1][0][0], 0xDC05EAF0, 0x02FAFF07, 0x111AE70F, 0x04FE15E8);
	r3 = D(r3, s[1][0][0], 0x09F70EFD, 0xFEFD0BFB, 0xF2030EF2, 0x01030205);
	r4 = D(r4, s[1][0][0], 0xF4FC0CE8, 0x000CFFFF, 0xFB0B0F0A, 0x0A0C01F8);
	r5 = D(r5, s[1][0][0], 0x0908FDFD, 0xFF02E800, 0xE5E0F901, 0xFE0403F5);
	r6 = D(r6, s[1][0][0], 0x0BFA0505, 0xFE0800ED, 0xF4EFF503, 0xE8FB1B08);
	r7 = D(r7, s[1][0][0], 0xF3CDFA01, 0xF6F1E90E, 0x0D0AF70A, 0xED1E0800);
	r0 = D(r0, s[1][0][1], 0xF6F9F619, 0x15130803, 0x00050B00, 0x0C04FB00);
	r1 = D(r1, s[1][0][1], 0xFEF30404, 0x0E12020F, 0x19FCFAFE, 0xF60C0CED);
	r2 = D(r2, s[1][0][1], 0xF2020517, 0xF501EB03, 0xF1F3F5F7, 0x0CEDF602);
	r3 = D(r3, s[1][0][1], 0xFDE40EF1, 0x0CE9F20B, 0xFEFBF1FF, 0x1606F015);
	r4 = D(r4, s[1][0][1], 0xEF04FA02, 0xE1020404, 0x39E7F40B, 0x0EE30BEE);
	r5 = D(r5, s[1][0][1], 0x06040211, 0xFC06F5FD, 0xF417F4F7, 0xF4F80604);
	r6 = D(r6, s[1][0][1], 0xFA030207, 0xEF00F00D, 0x1F0611F3, 0x0C211517);
	r7 = D(r7, s[1][0][1], 0x21F3E2F7, 0xCFF5C309, 0x130E0D17, 0x0E1AF0F1);
	r0 = D(r0, s[1][0][2], 0xFF00FCF1, 0x0215F7FC, 0xFC07FA03, 0xFC010CF8);
	r1 = D(r1, s[1][0][2], 0x00091A08, 0xFBF10BFF, 0x06FF0807, 0xF81ADFFB);
	r2 = D(r2, s[1][0][2], 0x0C0504FF, 0x1F09E6F8, 0xFEFEE8DE, 0x1AF50D0D);
	r3 = D(r3, s[1][0][2], 0xFCF2FC0F, 0x04030806, 0xF9F2F1F0, 0xF70AF103);
	r4 = D(r4, s[1][0][2], 0xD5F90D11, 0xFB160109, 0x0F010BFA, 0x0613FB17);
	r5 = D(r5, s[1][0][2], 0x1701F907, 0xFC0BF102, 0xE2F408FB, 0xF2E0F714);
	r6 = D(r6, s[1][0][2], 0x1904EB03, 0xF5E109F2, 0x06F2ED0E, 0x1A1909FC);
	r7 = D(r7, s[1][0][2], 0xDCDAE3ED, 0xCF03EBF9, 0x15FD15F1, 0x02FC1AFD);
	r0 = D(r0, s[1][1][0], 0x00F915FF, 0xF5010DEF, 0x030DF6F5, 0xFA01F50D);
	r1 = D(r1, s[1][1][0], 0xFA0DF4FD, 0x03001800, 0x0C09F80B, 0x0104FDFD);
	r2 = D(r2, s[1][1][0], 0xEFFFD81A, 0x0E10E60C, 0x0F1BF2F1, 0xFFEE0805);
	r3 = D(r3, s[1][1][0], 0xFA22F907, 0xF8F904FD, 0x0808F8FE, 0x100F1AFA);
	r4 = D(r4, s[1][1][0], 0xFE0F07F1, 0xFB020DF4, 0x10E814F3, 0xE80C1300);
	r5 = D(r5, s[1][1][0], 0xFB08070B, 0x00000A04, 0xFCFCF30F, 0xFBEE0508);
	r6 = D(r6, s[1][1][0], 0xEE080605, 0x1408060A, 0x0926F4DE, 0xEDECFFF0);
	r7 = D(r7, s[1][1][0], 0xE8F81EFC, 0xF7070809, 0x00FFF413, 0x11EA0205);
	r0 = D(r0, s[1][1][1], 0xFEF5ED02, 0xDD0CF100, 0x03FAFF0F, 0x0707F3F8);
	r1 = D(r1, s[1][1][1], 0xFE05FF0D, 0xFD0D12F9, 0xF60CEA16, 0x0ADD0507);
	r2 = D(r2, s[1][1][1], 0x09ED03FB, 0xD7F3F019, 0x00DA09F1, 0x0F00030E);
	r3 = D(r3, s[1][1][1], 0x1C02EE00, 0x0E0813ED, 0xF8FAFEE9, 0x05FEFA13);
	r4 = D(r4, s[1][1][1], 0x0800EBFD, 0x21F3E607, 0x0EF4F1FF, 0x0F12EF03);
	r5 = D(r5, s[1][1][1], 0xF4F8FBE6, 0x030EFCFD, 0xE209F5F9, 0x00E4F30A);
	r6 = D(r6, s[1][1][1], 0x0AFD0EFB, 0xEBF4EC15, 0xDCE61011, 0xFFF7F0E0);
	r7 = D(r7, s[1][1][1], 0x1B13F7FD, 0xF41007FC, 0xF00510FB, 0xF7FB15F9);
	r0 = D(r0, s[1][1][2], 0xFA0C0F06, 0xEEF6E9FF, 0xF6FA0104, 0x02110DFF);
	r1 = D(r1, s[1][1][2], 0xF7F708FC, 0xFD140F03, 0xF509FB06, 0xEA08ED08);
	r2 = D(r2, s[1][1][2], 0x1BF912FA, 0xF8FD18EE, 0xF916ECE1, 0xFCFEFA16);
	r3 = D(r3, s[1][1][2], 0xFD130B11, 0x04040500, 0xECFD02EA, 0x0007F90D);
	r4 = D(r4, s[1][1][2], 0xDEE80C09, 0xF70A1AF9, 0xF10712EE, 0x12F910EC);
	r5 = D(r5, s[1][1][2], 0x04F90808, 0x0816090E, 0xFF0A0EEB, 0x18080308);
	r6 = D(r6, s[1][1][2], 0xFFEDEEF8, 0xF618DB11, 0xE7F3FDF6, 0x0EEBF7F3);
	r7 = D(r7, s[1][1][2], 0x05070411, 0x0FEBE900, 0x19EEFDFC, 0xE9F5F108);
	r0 = D(r0, s[1][2][0], 0x051202F9, 0x18F91107, 0xFDFCFB06, 0x1900F403);
	r1 = D(r1, s[1][2][0], 0xF6F3FD04, 0x07F4F3F9, 0x04F30421, 0x091304F4);
	r2 = D(r2, s[1][2][0], 0xF709F8F6, 0xFD1A1712, 0xEAF30F06, 0x1CF405FC);
	r3 = D(r3, s[1][2][0], 0xF3FD04EF, 0x0007F7F2, 0xFF0009F7, 0x061CF909);
	r4 = D(r4, s[1][2][0], 0xF6FE0205, 0xF9E405F2, 0x05060900, 0xF903F80F);
	r5 = D(r5, s[1][2][0], 0x00FE0705, 0x1403F3FE, 0xFEF8F112, 0x01FFFBFC);
	r6 = D(r6, s[1][2][0], 0xF70B04D5, 0xFAFD2012, 0x030FF0FD, 0xF6000EF7);
	r7 = D(r7, s[1][2][0], 0x1BF70204, 0x1A14FF0E, 0xF3FDFA0C, 0xF9E8EA00);
	r0 = D(r0, s[1][2][1], 0x00F2FAEC, 0x13F6F6E9, 0xFB080300, 0xE8DB1F13);
	r1 = D(r1, s[1][2][1], 0x1202F6E6, 0x11090A02, 0xFF0A0001, 0xFD0F16F4);
	r2 = D(r2, s[1][2][1], 0x011F02ED, 0xE1FAEDFE, 0xEEF20AF9, 0x1C15FE01);
	r3 = D(r3, s[1][2][1], 0x040003E6, 0x0A08F1F7, 0xFC07FD05, 0x060B1309);
	r4 = D(r4, s[1][2][1], 0x010BFA06, 0x1601FC0F, 0xF0F6FA16, 0xEC090608);
	r5 = D(r5, s[1][2][1], 0x0107F705, 0x15F407FB, 0xCF0BF905, 0x0301F9FF);
	r6 = D(r6, s[1][2][1], 0x160AF3D9, 0xF9F7F31C, 0xFADE02FC, 0x07F9F70E);
	r7 = D(r7, s[1][2][1], 0x170AE1EE, 0xE5ECFB1B, 0x09F4FE0F, 0x0CED000F);
	r0 = D(r0, s[1][2][2], 0xFCE3ED05, 0xEC12FA07, 0xFDFE0300, 0x02F30F01);
	r1 = D(r1, s[1][2][2], 0xF40604F9, 0xF3FAF001, 0x0E10FFFF, 0xFE01F6F0);
	r2 = D(r2, s[1][2][2], 0x000B0F00, 0xF1201610, 0xD1160801, 0x270EFC16);
	r3 = D(r3, s[1][2][2], 0x0BF30002, 0xFE0C04F7, 0x120C0704, 0x10100313);
	r4 = D(r4, s[1][2][2], 0xF902FDE4, 0x06E9F20D, 0xEF0F00FC, 0x08F20406);
	r5 = D(r5, s[1][2][2], 0x06061A09, 0x05F5FC0E, 0xEA14F611, 0x00FA000F);
	r6 = D(r6, s[1][2][2], 0xFB040BF5, 0xE5E4E400, 0xEE0BF7EA, 0xF4D4ECF7);
	r7 = D(r7, s[1][2][2], 0xFF10E9EF, 0xF6FFEE09, 0xF1E1FCF8, 0x2210FB17);
	s[0][0][0] = G[6][xy.y+0][xy.x+0]; s[0][0][1] = G[6][xy.y+0][xy.x+1];
	s[0][0][2] = G[6][xy.y+0][xy.x+2]; s[0][1][0] = G[6][xy.y+1][xy.x+0];
	s[0][1][1] = G[6][xy.y+1][xy.x+1]; s[0][1][2] = G[6][xy.y+1][xy.x+2];
	s[0][2][0] = G[6][xy.y+2][xy.x+0]; s[0][2][1] = G[6][xy.y+2][xy.x+1];
	s[0][2][2] = G[6][xy.y+2][xy.x+2]; s[1][0][0] = G[7][xy.y+0][xy.x+0];
	s[1][0][1] = G[7][xy.y+0][xy.x+1]; s[1][0][2] = G[7][xy.y+0][xy.x+2];
	s[1][1][0] = G[7][xy.y+1][xy.x+0]; s[1][1][1] = G[7][xy.y+1][xy.x+1];
	s[1][1][2] = G[7][xy.y+1][xy.x+2]; s[1][2][0] = G[7][xy.y+2][xy.x+0];
	s[1][2][1] = G[7][xy.y+2][xy.x+1]; s[1][2][2] = G[7][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xF800E501, 0x1C1402FF, 0x06FB0202, 0x120006FB);
	r1 = D(r1, s[0][0][0], 0x11E21524, 0xF90BE8EF, 0x03F4070A, 0xF5F7040D);
	r2 = D(r2, s[0][0][0], 0xF6040309, 0x0B00F7C6, 0xECEC08F2, 0x07F10CFA);
	r3 = D(r3, s[0][0][0], 0xFAFE06EB, 0xF4F2FAFF, 0xFAF8F3FD, 0x0C210FFF);
	r4 = D(r4, s[0][0][0], 0xFDFCFEF9, 0xE8F70106, 0x1C07FB01, 0xE2FBF3E8);
	r5 = D(r5, s[0][0][0], 0xFA0008EE, 0xFC14E3FA, 0x0918FCED, 0xE7E71709);
	r6 = D(r6, s[0][0][0], 0xFDF81802, 0xE70908FD, 0xF8F004E9, 0xF7031A0D);
	r7 = D(r7, s[0][0][0], 0x0608EAFC, 0x0B0DF8F9, 0xD303002D, 0x140C07DC);
	r0 = D(r0, s[0][0][1], 0x24010B01, 0x17ED0F0B, 0xFFFE0400, 0xF1EC0407);
	r1 = D(r1, s[0][0][1], 0x06D9F40C, 0xF2050505, 0xF2030E0C, 0xFC060B13);
	r2 = D(r2, s[0][0][1], 0x09F503F8, 0x1DF013F9, 0xEEFC08CC, 0xEB1213E7);
	r3 = D(r3, s[0][0][1], 0xFFE30BF6, 0xFF0BF1FE, 0x0BF0F707, 0x08170601);
	r4 = D(r4, s[0][0][1], 0xFFFD0AF2, 0xFFF4ED08, 0xF90AE207, 0xEFF4D10C);
	r5 = D(r5, s[0][0][1], 0x09ECE902, 0x00F2FD04, 0x0EEEFFFE, 0x120C03F7);
	r6 = D(r6, s[0][0][1], 0xFCF90D02, 0xF0D2EE14, 0x01F90009, 0x070800FC);
	r7 = D(r7, s[0][0][1], 0xF0F2FC01, 0x04F0F4F0, 0x07060710, 0xE6FB1002);
	r0 = D(r0, s[0][0][2], 0xED210E16, 0xF90D020F, 0xFF0000FA, 0x08F207F0);
	r1 = D(r1, s[0][0][2], 0xE8F30609, 0x070917F5, 0xFEF70908, 0x0616FDF5);
	r2 = D(r2, s[0][0][2], 0xF407020A, 0x00DDEFF1, 0xC0EFE6EB, 0xD2F9F00F);
	r3 = D(r3, s[0][0][2], 0xFB010502, 0xE40BFB06, 0x0AEAEDF7, 0xFE17F813);
	r4 = D(r4, s[0][0][2], 0xFCE2F8FF, 0x10F8ED05, 0x132AFAE2, 0xED0C092E);
	r5 = D(r5, s[0][0][2], 0xFFF307EB, 0x0BE0FF14, 0xF9FCFBEF, 0x07FBF802);
	r6 = D(r6, s[0][0][2], 0x0807EDFF, 0xF3F205EA, 0x1C1C0113, 0xFFF0EEFD);
	r7 = D(r7, s[0][0][2], 0xD9FEDC07, 0x291708EC, 0xF4060312, 0xFCFB0CFB);
	r0 = D(r0, s[0][1][0], 0xF9F7E6F2, 0x120F16FF, 0xFCFB0000, 0x01FDFAFF);
	r1 = D(r1, s[0][1][0], 0x09FE0A0F, 0x1A0DC501, 0x07FCFA09, 0x170B03FE);
	r2 = D(r2, s[0][1][0], 0xFE050FFD, 0xF1FC0FF8, 0xF2FB2A1F, 0xEE150310);
	r3 = D(r3, s[0][1][0], 0x001000F8, 0x0C040709, 0x060512EB, 0xFDE605D8);
	r4 = D(r4, s[0][1][0], 0xF6F2FFF8, 0xF6E4EEEA, 0x0BD1FDF2, 0xFD0DF901);
	r5 = D(r5, s[0][1][0], 0x101109FA, 0x08F4E8F6, 0xE9F9E808, 0x0B0A160A);
	r6 = D(r6, s[0][1][0], 0xFB1E1F02, 0x17FD16D0, 0x01301730, 0xFFE21022);
	r7 = D(r7, s[0][1][0], 0x0220FB09, 0xECF319F9, 0xF2EDE713, 0xFC170901);
	r0 = D(r0, s[0][1][1], 0x08DEE600, 0xE7D818F6, 0x03FDFB0D, 0x040D10F5);
	r1 = D(r1, s[0][1][1], 0x00DB0406, 0x06F4F3F9, 0x01FBCC07, 0xFF16F207);
	r2 = D(r2, s[0][1][1], 0x05221204, 0x2807131A, 0x1B0A0A15, 0xF810133B);
	r3 = D(r3, s[0][1][1], 0xF3070302, 0x0AFBF704, 0xFA23F0F7, 0x080804EA);
	r4 = D(r4, s[0][1][1], 0x01F61700, 0xF014E9FD, 0xD80CEF10, 0xD5FAFB08);
	r5 = D(r5, s[0][1][1], 0x0B06C404, 0xDA8106F6, 0xF3DEFD01, 0x040FF803);
	r6 = D(r6, s[0][1][1], 0xF4F4F4F4, 0x0DF9FCF9, 0x07E9F60A, 0x1417062D);
	r7 = D(r7, s[0][1][1], 0x2D12291A, 0xE501F6FF, 0x201AF60A, 0x12EFF506);
	r0 = D(r0, s[0][1][2], 0x1EF30910, 0xFCFD01FD, 0x0A04FD10, 0xFDEE0102);
	r1 = D(r1, s[0][1][2], 0xF4F0F107, 0x00FF0812, 0x18B00205, 0xF10DF5FC);
	r2 = D(r2, s[0][1][2], 0x010AEB03, 0xF7100418, 0x1403030A, 0xE500FCF8);
	r3 = D(r3, s[0][1][2], 0x121E0604, 0xEA0406F7, 0xFFF9F000, 0xFCE31000);
	r4 = D(r4, s[0][1][2], 0x00EF0F08, 0x0AF913E4, 0xF0E20704, 0xF6EF05F4);
	r5 = D(r5, s[0][1][2], 0x16120B02, 0xF70908FF, 0xFF110820, 0x03FD100B);
	r6 = D(r6, s[0][1][2], 0xE0FC040E, 0x16DD1AFE, 0xF4041900, 0xCCF60AF5);
	r7 = D(r7, s[0][1][2], 0x1E050005, 0xFCF50509, 0xF3D50D06, 0x1920EC07);
	r0 = D(r0, s[0][2][0], 0xF404D505, 0x0B0EF50D, 0x01FBFEFF, 0xF202F2F6);
	r1 = D(r1, s[0][2][0], 0x03F20FFF, 0x2106EC04, 0xCA0E0AF2, 0xE2010504);
	r2 = D(r2, s[0][2][0], 0xDCD7080D, 0xFC07E2E4, 0xE60303F9, 0xF3FFF1E6);
	r3 = D(r3, s[0][2][0], 0x0C0EF7F9, 0x04F7060D, 0xF40F090E, 0x010B04FF);
	r4 = D(r4, s[0][2][0], 0xEBE20B1B, 0x10F9FD06, 0x07FAFB0A, 0xE8F6FF07);
	r5 = D(r5, s[0][2][0], 0x0DEA0AF8, 0x03260A00, 0x0FF9F406, 0x01EB02FF);
	r6 = D(r6, s[0][2][0], 0xFCFA0B07, 0x031BECEB, 0xFF2C08F5, 0xF6D910F9);
	r7 = D(r7, s[0][2][0], 0x0201E10C, 0xE1110CF4, 0x1AF6F202, 0xFCFAFD00);
	r0 = D(r0, s[0][2][1], 0x061F12F8, 0xE81910E6, 0xFE04080F, 0x12E0EEFE);
	r1 = D(r1, s[0][2][1], 0xF1DBFDFC, 0x0502F40A, 0xFD08FBE8, 0x08FD13FE);
	r2 = D(r2, s[0][2][1], 0x161B0706, 0x0E2EF40B, 0xFF0AFFF6, 0x03FA05C4);
	r3 = D(r3, s[0][2][1], 0x240DF5F6, 0x01F6F101, 0xE90A0103, 0xE8F9E90F);
	r4 = D(r4, s[0][2][1], 0x06D4130D, 0xF6F429F5, 0xD8F7FB08, 0x050FFAFA);
	r5 = D(r5, s[0][2][1], 0xF7EDE403, 0xF3DE07F3, 0xFC0C1AE1, 0x0B05F808);
	r6 = D(r6, s[0][2][1], 0xEE13F904, 0x0723F316, 0xE211DC03, 0x1EFA0702);
	r7 = D(r7, s[0][2][1], 0xF8DBE70D, 0xE1F8FB08, 0xFBFCE9DD, 0x070B02F9);
	r0 = D(r0, s[0][2][2], 0xF7FBFAF7, 0xFD0FE6E8, 0xF902F803, 0x0A0EFC0D);
	r1 = D(r1, s[0][2][2], 0x00FD15FA, 0x060401F6, 0xF7FF0B0E, 0xF60BEDF2);
	r2 = D(r2, s[0][2][2], 0xFC220005, 0x03140A20, 0x06020305, 0xFCED061B);
	r3 = D(r3, s[0][2][2], 0xF009F8F1, 0xFF020F01, 0xFC05FE11, 0x0F0CFF14);
	r4 = D(r4, s[0][2][2], 0x1DB1F30E, 0x02ED0816, 0x1810FBFC, 0x2B0809FD);
	r5 = D(r5, s[0][2][2], 0xEB170DF5, 0xEB020201, 0x05E8F703, 0x05FA0208);
	r6 = D(r6, s[0][2][2], 0x010C08FD, 0x08E901F7, 0x81DA12E9, 0xF909ED12);
	r7 = D(r7, s[0][2][2], 0xF312E2FA, 0xFD0712EA, 0xF6FBF806, 0x07F901F6);
	r0 = D(r0, s[1][0][0], 0x02F70926, 0x11F3EB01, 0xFE05F5FF, 0x0FF3E6F1);
	r1 = D(r1, s[1][0][0], 0xF5F41005, 0x0AF21209, 0x0A00EC01, 0xFAFA05FE);
	r2 = D(r2, s[1][0][0], 0x28FEFEE8, 0x0606DAFA, 0xE90F0606, 0xEC06DA14);
	r3 = D(r3, s[1][0][0], 0x03F6FFFD, 0xFA02070E, 0xF90E1707, 0x0AF1E9FB);
	r4 = D(r4, s[1][0][0], 0x09FE070B, 0x12091306, 0x0919FB28, 0xFF0101FD);
	r5 = D(r5, s[1][0][0], 0x04FDF2F7, 0xEDF9F9ED, 0x1CF7F6EB, 0x091006FC);
	r6 = D(r6, s[1][0][0], 0x05050F07, 0xE1F50B00, 0xF5F9EAF2, 0xFB17F4FE);
	r7 = D(r7, s[1][0][0], 0x0F0AF201, 0xFAEAF5F2, 0x0D14FC0D, 0x060105FF);
	r0 = D(r0, s[1][0][1], 0xE8EFFFFC, 0xD50406F8, 0xF7090806, 0xE801F70E);
	r1 = D(r1, s[1][0][1], 0xDD0701FA, 0xEA02F0F8, 0x26EEF7F7, 0x0B00E812);
	r2 = D(r2, s[1][0][1], 0x0D0CFDF3, 0xFDEDEDF7, 0xDAF503EE, 0x0604E7F9);
	r3 = D(r3, s[1][0][1], 0xE8FDF807, 0x12FB09F9, 0x0A1CF406, 0x0D00FE02);
	r4 = D(r4, s[1][0][1], 0x14F70E09, 0xEA030F08, 0xF7E126D1, 0xEE101509);
	r5 = D(r5, s[1][0][1], 0xF500F50E, 0xF6EDFCEB, 0x21F8F810, 0x0816EB04);
	r6 = D(r6, s[1][0][1], 0xF4F505F2, 0xE919050C, 0xFE0216F6, 0xE4EBF9F7);
	r7 = D(r7, s[1][0][1], 0x10FAF9F0, 0xEF02CAED, 0xFA0D0609, 0x2F19F606);
	r0 = D(r0, s[1][0][2], 0xED0AFE06, 0x1111F8F7, 0xFC0604FC, 0x1203F00C);
	r1 = D(r1, s[1][0][2], 0xF615F30A, 0x0DF40A04, 0x1CFBED11, 0x0B0007FB);
	r2 = D(r2, s[1][0][2], 0x15FFEB04, 0xF0F8FAF3, 0xE00C09F1, 0xF109030E);
	r3 = D(r3, s[1][0][2], 0xEC13E6FD, 0x030302F6, 0x02FB0901, 0xD407FC01);
	r4 = D(r4, s[1][0][2], 0x1A150202, 0xF0110AF4, 0xFF160EE8, 0xFBEA0803);
	r5 = D(r5, s[1][0][2], 0xFCFCF1ED, 0xE6F9090B, 0x150C0809, 0x0AFAFDF5);
	r6 = D(r6, s[1][0][2], 0xEFF60604, 0xFD0F020D, 0xEE1612F8, 0xF802F3EF);
	r7 = D(r7, s[1][0][2], 0x0C1AE5DC, 0x2BFD040C, 0x0A1DFFF8, 0x09FBD9F4);
	r0 = D(r0, s[1][1][0], 0xEAFB1307, 0x04DA01FF, 0xFD050206, 0x01010301);
	r1 = D(r1, s[1][1][0], 0xDA0105FA, 0x25FDF608, 0x08F2DDE9, 0xFF01F50F);
	r2 = D(r2, s[1][1][0], 0x11E901D1, 0x0FF8150D, 0xF6050011, 0x16F4CEF3);
	r3 = D(r3, s[1][1][0], 0xE3FD17F9, 0xF3FC0702, 0x0C0FF2FD, 0x0502F0FE);
	r4 = D(r4, s[1][1][0], 0x0701FFFD, 0x2C18E9FA, 0xF201E507, 0xFD010618);
	r5 = D(r5, s[1][1][0], 0x1D0A1006, 0xDF0601F6, 0x1AE8F1EA, 0xFEFF06FA);
	r6 = D(r6, s[1][1][0], 0xEEF70104, 0xDA0222FD, 0x0307FDFA, 0x16F80401);
	r7 = D(r7, s[1][1][0], 0xFDFCF00A, 0x0DEFF419, 0x09E01C17, 0x1AECFFFA);
	r0 = D(r0, s[1][1][1], 0xF9F80312, 0xE3FF0D05, 0x04EDF8FE, 0xFE07F902);
	r1 = D(r1, s[1][1][1], 0xF1F2FF11, 0xF4FCFE24, 0x26F6E7FE, 0x06FC05F9);
	r2 = D(r2, s[1][1][1], 0x0AFE10F6, 0xEA0AFC21, 0xE8F3F5F8, 0xFB00F604);
	r3 = D(r3, s[1][1][1], 0xFBFC1316, 0x0AECFB00, 0x0019F305, 0x0E08DAE9);
	r4 = D(r4, s[1][1][1], 0x0811F004, 0xFEF8F3ED, 0x050823F9, 0x0CE9FD13);
	r5 = D(r5, s[1][1][1], 0x0CEAE603, 0x8BFCFAFD, 0x1A1AF404, 0xFDFEF8F5);
	r6 = D(r6, s[1][1][1], 0xE8051201, 0xFEFA0B0D, 0xFCFDF9F6, 0xFEE7E90D);
	r7 = D(r7, s[1][1][1], 0xFC0B0BFE, 0x1AFDF0E6, 0xFD19F9E8, 0x0901F311);
	r0 = D(r0, s[1][1][2], 0x02EA00FD, 0x05090304, 0xFE0BFD07, 0xDF05F203);
	r1 = D(r1, s[1][1][2], 0x14141905, 0x1D040601, 0xF3F80A0C, 0x0601FAF2);
	r2 = D(r2, s[1][1][2], 0xE703020C, 0xEC060D20, 0x1FF1E607, 0x0DF806FA);
	r3 = D(r3, s[1][1][2], 0x03041005, 0x05F7F8FC, 0xF51DEDF8, 0x03E7E4EB);
	r4 = D(r4, s[1][1][2], 0xD6FCE2E3, 0x07101BFF, 0x1FFAEE0D, 0xDD14FCFD);
	r5 = D(r5, s[1][1][2], 0x0E15F811, 0x0B0204FC, 0x170BE2F9, 0x0F00FC00);
	r6 = D(r6, s[1][1][2], 0xFDF8FFF6, 0xF7F715FF, 0x0EFDFC0E, 0xFDF9E405);
	r7 = D(r7, s[1][1][2], 0xFC0314F4, 0xF5F9F0ED, 0x090DFFEB, 0xEAF9FA0D);
	r0 = D(r0, s[1][2][0], 0xF9FB15FA, 0x20F5E403, 0xFEF702FB, 0x0FFA0CFC);
	r1 = D(r1, s[1][2][0], 0xFDFE02F9, 0x1B11FEEB, 0x03120508, 0xF4F31CEF);
	r2 = D(r2, s[1][2][0], 0x0EF913DF, 0x08050918, 0xEDFC03FE, 0xF8FBD1F8);
	r3 = D(r3, s[1][2][0], 0xFFFEF1FE, 0xF400F407, 0x00F3F604, 0xF7F7F923);
	r4 = D(r4, s[1][2][0], 0x0FF206FD, 0x0D090004, 0xF8F10112, 0xFCE4F7FD);
	r5 = D(r5, s[1][2][0], 0xF9F90701, 0xF8000105, 0x0F07F9FB, 0xFA0F0304);
	r6 = D(r6, s[1][2][0], 0xF9FEF609, 0xF61B0801, 0xF4FFE6EA, 0xFAFFDE02);
	r7 = D(r7, s[1][2][0], 0x040D180B, 0xF9E70C28, 0x03E4F6F5, 0x1812F8F8);
	r0 = D(r0, s[1][2][1], 0x0BFE04F7, 0x23F8FAFC, 0x010706FE, 0xF7050602);
	r1 = D(r1, s[1][2][1], 0x0B0AFFF2, 0xF9170B01, 0x2BF12C09, 0xF903FE01);
	r2 = D(r2, s[1][2][1], 0x0E070117, 0xF6DBE60E, 0xFE09F40B, 0x0815F6F7);
	r3 = D(r3, s[1][2][1], 0xE9F613FB, 0xFF0A05FB, 0xEAEF1604, 0xEBFD1108);
	r4 = D(r4, s[1][2][1], 0x2D17C8FD, 0xF200EF06, 0xEAFEDF00, 0x0E06FCE0);
	r5 = D(r5, s[1][2][1], 0x05FCF707, 0xE709EA03, 0x23F5F005, 0xEEF80504);
	r6 = D(r6, s[1][2][1], 0xF6F90F0D, 0xF1FD0811, 0xF5FEE4ED, 0x1C0901EE);
	r7 = D(r7, s[1][2][1], 0xF2FDDD17, 0x0CF5F10C, 0x2EFCF90E, 0x1C010108);
	r0 = D(r0, s[1][2][2], 0x15EA10EF, 0xFEFDDE0B, 0x0203FF01, 0x07FC0DF9);
	r1 = D(r1, s[1][2][2], 0xED0F0EE6, 0x15070503, 0xFA07F8F2, 0x0B03FFFB);
	r2 = D(r2, s[1][2][2], 0x29F51BFE, 0xC90FFB01, 0xFF08FC0C, 0xF1FF0618);
	r3 = D(r3, s[1][2][2], 0x0409000A, 0xF41605F2, 0xEBFDFC10, 0xFF04FB0D);
	r4 = D(r4, s[1][2][2], 0x4604F3FD, 0xF8EFF412, 0x02F7F217, 0xF2FEE7DA);
	r5 = D(r5, s[1][2][2], 0x0EFEFA10, 0x010302E8, 0x100617FD, 0xF5060D03);
	r6 = D(r6, s[1][2][2], 0x05FCF607, 0xAFFE0003, 0xCDFFF6D3, 0x050AF9E9);
	r7 = D(r7, s[1][2][2], 0x15E4F8FB, 0xF712F103, 0x0D0022E6, 0x1509FF05);
	s[0][0][0] = G[8][xy.y+0][xy.x+0]; s[0][0][1] = G[8][xy.y+0][xy.x+1];
	s[0][0][2] = G[8][xy.y+0][xy.x+2]; s[0][1][0] = G[8][xy.y+1][xy.x+0];
	s[0][1][1] = G[8][xy.y+1][xy.x+1]; s[0][1][2] = G[8][xy.y+1][xy.x+2];
	s[0][2][0] = G[8][xy.y+2][xy.x+0]; s[0][2][1] = G[8][xy.y+2][xy.x+1];
	s[0][2][2] = G[8][xy.y+2][xy.x+2]; s[1][0][0] = G[9][xy.y+0][xy.x+0];
	s[1][0][1] = G[9][xy.y+0][xy.x+1]; s[1][0][2] = G[9][xy.y+0][xy.x+2];
	s[1][1][0] = G[9][xy.y+1][xy.x+0]; s[1][1][1] = G[9][xy.y+1][xy.x+1];
	s[1][1][2] = G[9][xy.y+1][xy.x+2]; s[1][2][0] = G[9][xy.y+2][xy.x+0];
	s[1][2][1] = G[9][xy.y+2][xy.x+1]; s[1][2][2] = G[9][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x000A0410, 0xE419F7FD, 0xFB0406FD, 0x0018F309);
	r1 = D(r1, s[0][0][0], 0xFBEEF803, 0xFAD5F314, 0xEBF40100, 0xF1F60707);
	r2 = D(r2, s[0][0][0], 0xF8FA0EF0, 0xF1E01C07, 0x171F30CB, 0xE8050E06);
	r3 = D(r3, s[0][0][0], 0xF51F05F9, 0xFF10040F, 0xF8070CC9, 0xEF130812);
	r4 = D(r4, s[0][0][0], 0xEA15FEF9, 0x07D6FFFC, 0x1502E0AC, 0xFA0F05F7);
	r5 = D(r5, s[0][0][0], 0x0610F806, 0x151C0610, 0x010700FF, 0xF5EE0000);
	r6 = D(r6, s[0][0][0], 0x000A09F2, 0xDE1B01FC, 0x0B07060F, 0xFBF117FA);
	r7 = D(r7, s[0][0][0], 0x0B13F5F5, 0xEF110226, 0x2814FC1B, 0xF4E5FC03);
	r0 = D(r0, s[0][0][1], 0x07EBFBF7, 0x2302F403, 0x07FE0E00, 0xFB140006);
	r1 = D(r1, s[0][0][1], 0x1EFAF40F, 0xF92602EF, 0x1107FBF7, 0x06F7E4FA);
	r2 = D(r2, s[0][0][1], 0xF5020110, 0x080E0D0B, 0xFFD9F9C4, 0xFC1DF811);
	r3 = D(r3, s[0][0][1], 0xFB0611FB, 0xF00DFEFE, 0xF908FD09, 0xEA0917F3);
	r4 = D(r4, s[0][0][1], 0xF31E09F4, 0xEB011F02, 0x0C27089C, 0x1E05FCFA);
	r5 = D(r5, s[0][0][1], 0x0201F8F6, 0x021B0716, 0x0BFE02E9, 0xF8FA010A);
	r6 = D(r6, s[0][0][1], 0x01F000F7, 0x0C00020C, 0xF4051C0B, 0x0B0907E7);
	r7 = D(r7, s[0][0][1], 0xE7070BE0, 0x1FF2F51B, 0x160F0704, 0x0E0C0605);
	r0 = D(r0, s[0][0][2], 0xF711E119, 0xF4FEF9F2, 0x0004FBFC, 0x02ECFBFE);
	r1 = D(r1, s[0][0][2], 0x1106FCFA, 0xF0E7F0FF, 0xFBFD01F3, 0x04F90008);
	r2 = D(r2, s[0][0][2], 0xFEEFF802, 0xFE16EBFF, 0x07E704E4, 0x030904E7);
	r3 = D(r3, s[0][0][2], 0xFF01F9FE, 0xF404FDFD, 0x03EEE3F7, 0x09FD05EC);
	r4 = D(r4, s[0][0][2], 0xE8C716EB, 0x1BFFFB1A, 0x0FF4EC30, 0x170DEC24);
	r5 = D(r5, s[0][0][2], 0x01FBF9FF, 0x02010B05, 0xF00709FE, 0xEE10F606);
	r6 = D(r6, s[0][0][2], 0x15FC0207, 0xF708050A, 0xF501FA16, 0xFDEE05EC);
	r7 = D(r7, s[0][0][2], 0xFD09F7F9, 0x04020108, 0x09DA000E, 0x0D070BE6);
	r0 = D(r0, s[0][1][0], 0x161015DD, 0xE8CAFC04, 0x0F0AF0FD, 0x0DE40F09);
	r1 = D(r1, s[0][1][0], 0xFFF10608, 0xE0CC0B29, 0xECFAFDFE, 0x0114F6F8);
	r2 = D(r2, s[0][1][0], 0x01110D03, 0xEA2CEEE2, 0xF903FBFD, 0xC415F406);
	r3 = D(r3, s[0][1][0], 0xEE11FDF3, 0xF603F914, 0xFF030B00, 0x030AEDE8);
	r4 = D(r4, s[0][1][0], 0xFD060AEB, 0xFB110C81, 0xFA03F2F8, 0xE50511EE);
	r5 = D(r5, s[0][1][0], 0xFB12FE10, 0x14EE250C, 0xDF0404FA, 0xF6D101FC);
	r6 = D(r6, s[0][1][0], 0x03FF0105, 0xF8FB0D04, 0x1CF102F8, 0xF414F302);
	r7 = D(r7, s[0][1][0], 0x05FCF322, 0x110C17ED, 0x07FE04FA, 0xF804F6ED);
	r0 = D(r0, s[0][1][1], 0xF4D90DD6, 0xFA100AF2, 0x04210107, 0xFA060503);
	r1 = D(r1, s[0][1][1], 0x0E141208, 0xF4E71821, 0xF7F211EF, 0x09F0E3FF);
	r2 = D(r2, s[0][1][1], 0x0205FD03, 0xF000E818, 0xEE12E9DC, 0x0617ED01);
	r3 = D(r3, s[0][1][1], 0x0E31FDFB, 0x09F806FE, 0xE7FB1DEE, 0xF407EFE0);
	r4 = D(r4, s[0][1][1], 0xEBF80CF5, 0x0C1205CD, 0xE50DF9EA, 0x1A1405EE);
	r5 = D(r5, s[0][1][1], 0xFCF91ADF, 0x1BEF1303, 0xF005F409, 0xF4E6F6FF);
	r6 = D(r6, s[0][1][1], 0x0805FEE6, 0x0AE30E05, 0x1228F4E5, 0xF300F409);
	r7 = D(r7, s[0][1][1], 0xCAD8F209, 0x07D5E7EF, 0x0C01FD0F, 0x0A1206F9);
	r0 = D(r0, s[0][1][2], 0x160EF60D, 0x1F0D11E1, 0x01FE0001, 0xF217FE18);
	r1 = D(r1, s[0][1][2], 0x031EFC03, 0xF518031D, 0x03E2F604, 0x0D1326F0);
	r2 = D(r2, s[0][1][2], 0x0AF0D917, 0xEACDFBEE, 0x09F602CB, 0x051E0600);
	r3 = D(r3, s[0][1][2], 0x07120015, 0x020BF6FA, 0xFBE2FD06, 0xFFE9EF01);
	r4 = D(r4, s[0][1][2], 0x090CF0FF, 0x1C280AFC, 0xE9F3EC13, 0x06C50805);
	r5 = D(r5, s[0][1][2], 0x08F9F312, 0x10FD0319, 0x0900EDFE, 0x041AF709);
	r6 = D(r6, s[0][1][2], 0x06070005, 0xE0EEE608, 0xFB08F7CE, 0xFC0B0FD9);
	r7 = D(r7, s[0][1][2], 0x1E0A09FA, 0x0CE9F203, 0x0809010D, 0xF8EEE4E5);
	r0 = D(r0, s[0][2][0], 0xFE42000F, 0x091F06F6, 0x0705F907, 0xFA0F0CF0);
	r1 = D(r1, s[0][2][0], 0x03AD0009, 0xE72C1109, 0x12EAF019, 0xFBFDF0FE);
	r2 = D(r2, s[0][2][0], 0x05E013FC, 0xF3331DC9, 0x10CF0BF0, 0xE5DAFB19);
	r3 = D(r3, s[0][2][0], 0xE011FF1C, 0x0FF706F8, 0x02AFFB04, 0xFED90012);
	r4 = D(r4, s[0][2][0], 0x012AF1ED, 0xF303F717, 0xF720F807, 0xF31500F5);
	r5 = D(r5, s[0][2][0], 0xE9110002, 0xFD15FB0B, 0x0050FDF4, 0xFA0DF7FE);
	r6 = D(r6, s[0][2][0], 0xF511F5F3, 0xF6100CEC, 0x07C7F8EE, 0x0681E216);
	r7 = D(r7, s[0][2][0], 0xF992052E, 0x0C1FF9D4, 0xEF110B14, 0x08F3FDF3);
	r0 = D(r0, s[0][2][1], 0xFADFF6F2, 0x0C0BEAEB, 0xFD06F403, 0x0C1807FB);
	r1 = D(r1, s[0][2][1], 0xFC13F207, 0xFEAE0EF6, 0x18F70E0B, 0x0EE510EB);
	r2 = D(r2, s[0][2][1], 0x1B15F102, 0x0EFAFFEB, 0xF6E5FEF1, 0x1B8B1B16);
	r3 = D(r3, s[0][2][1], 0xEE2716FB, 0x0912F4E7, 0xEE1917FC, 0xE93004F9);
	r4 = D(r4, s[0][2][1], 0x0611EEDA, 0xFA2F04F7, 0xD8E40A03, 0x182602FA);
	r5 = D(r5, s[0][2][1], 0xFB06F9F8, 0x1C21FD09, 0x02EA00C2, 0xF40608FD);
	r6 = D(r6, s[0][2][1], 0x051AFFFA, 0x0F1EFCC0, 0x04E8F045, 0xF0C5F506);
	r7 = D(r7, s[0][2][1], 0x06E8F102, 0x0A32E6F9, 0xF3D9FDE9, 0x0FE409F6);
	r0 = D(r0, s[0][2][2], 0x0C2D0010, 0x14060AD9, 0x020306F9, 0xF8F1FDFD);
	r1 = D(r1, s[0][2][2], 0x1E19FB05, 0xF20E0EFE, 0xFE34F707, 0x011402F8);
	r2 = D(r2, s[0][2][2], 0xF80DEB02, 0xE50D1109, 0xFE32FAE4, 0x0A10F50A);
	r3 = D(r3, s[0][2][2], 0xF4010302, 0xFFF905F7, 0xF9E70111, 0xF3C911F2);
	r4 = D(r4, s[0][2][2], 0x012009E7, 0x04E9EED1, 0x07FF0715, 0xF9260815);
	r5 = D(r5, s[0][2][2], 0xF4E11618, 0x07F7F707, 0xF9FCFC0F, 0x021500FD);
	r6 = D(r6, s[0][2][2], 0x07FFF80F, 0xEA19EE07, 0xD4C9A434, 0x08DBFBFB);
	r7 = D(r7, s[0][2][2], 0xFB31F8EA, 0xFA1309FC, 0xF711FDF8, 0x01FC0AF0);
	r0 = D(r0, s[1][0][0], 0x19FF1DF4, 0xED080401, 0x07FD0107, 0xF1FE041E);
	r1 = D(r1, s[1][0][0], 0xF1FFF8FD, 0xFB0004FE, 0x0CD8FB04, 0x00FD0504);
	r2 = D(r2, s[1][0][0], 0xF907F807, 0x13FAED13, 0x0D1D1BF8, 0xF408FEE9);
	r3 = D(r3, s[1][0][0], 0xF8ED011D, 0x0DEEF3FB, 0x0A04F3FF, 0x03FB0915);
	r4 = D(r4, s[1][0][0], 0x03D60002, 0x0318FDF2, 0x04ED1A21, 0x081010E5);
	r5 = D(r5, s[1][0][0], 0xFEF60706, 0xBEF801FC, 0x10EFF800, 0x04EC03F4);
	r6 = D(r6, s[1][0][0], 0xF907F2F9, 0x0111030E, 0x101BF5F9, 0x08070FFC);
	r7 = D(r7, s[1][0][0], 0xFDFF0416, 0xB3F7F40A, 0xFAE81705, 0xFEFF07FC);
	r0 = D(r0, s[1][0][1], 0x0B14F8F9, 0xF2080707, 0x09F9FB07, 0x031109F9);
	r1 = D(r1, s[1][0][1], 0xF709040A, 0xFA0BFEF6, 0x111501F8, 0x000A06FD);
	r2 = D(r2, s[1][0][1], 0xFEF605FA, 0x06FDFF0C, 0xF6050317, 0x09FF060F);
	r3 = D(r3, s[1][0][1], 0xFA00EEF5, 0x0C010AFE, 0xF7FE09F9, 0x080CF506);
	r4 = D(r4, s[1][0][1], 0xE804130B, 0x07EEFEFD, 0xFB0EF023, 0x1119FDED);
	r5 = D(r5, s[1][0][1], 0x060AF800, 0xCD060FF8, 0xF40C0D00, 0x000C0504);
	r6 = D(r6, s[1][0][1], 0x0202FF07, 0x06F207F9, 0xF9E91214, 0xF9EE1EFE);
	r7 = D(r7, s[1][0][1], 0x031D0F14, 0xB2E80302, 0xFB0E21FB, 0x16EFFD09);
	r0 = D(r0, s[1][0][2], 0xF9FCFF0A, 0xF90309D9, 0x01EA0103, 0xF507E7F2);
	r1 = D(r1, s[1][0][2], 0xE7F6F1F1, 0x0D1DF10B, 0x0DF30302, 0xFDF1F91A);
	r2 = D(r2, s[1][0][2], 0xFAE31F0A, 0x1107F911, 0x00EAFCD1, 0x1002FBF8);
	r3 = D(r3, s[1][0][2], 0xE603F4FE, 0x03140600, 0x090C0F01, 0x130FF2FD);
	r4 = D(r4, s[1][0][2], 0x1E1B0C1D, 0x14E704EB, 0xF0F40CC6, 0xFDEDFD0B);
	r5 = D(r5, s[1][0][2], 0xF1FF10F3, 0xEEFD1014, 0x030A0412, 0xFBFBFCFE);
	r6 = D(r6, s[1][0][2], 0x0302F809, 0x0EF71F0A, 0x050306F5, 0x0CFEE7F9);
	r7 = D(r7, s[1][0][2], 0xE8FF09FD, 0xEB080D16, 0xF2060209, 0x01FB110D);
	r0 = D(r0, s[1][1][0], 0x05030DF3, 0x04FCFBF0, 0x0300FF00, 0x06070707);
	r1 = D(r1, s[1][1][0], 0xFA05FA11, 0xFB09F30C, 0xEE08F801, 0xF90DF5F5);
	r2 = D(r2, s[1][1][0], 0xF4F0FC05, 0xF9FADDE7, 0x00F61703, 0xE70CF509);
	r3 = D(r3, s[1][1][0], 0xF713FF0A, 0xFFFFFEEF, 0xFD080E08, 0x10FF1002);
	r4 = D(r4, s[1][1][0], 0x0EFC0A15, 0x1D111713, 0x0BF50BF0, 0x02F90AFC);
	r5 = D(r5, s[1][1][0], 0x09120904, 0xDEFF03FC, 0x0A02F31B, 0x050DE609);
	r6 = D(r6, s[1][1][0], 0xF4080412, 0x160414C1, 0x08EF0C0A, 0xEB0B0DF8);
	r7 = D(r7, s[1][1][0], 0x051815F2, 0xF0F60BED, 0xF9F71308, 0x1201DCFF);
	r0 = D(r0, s[1][1][1], 0xEEFBE3FA, 0xF3F414F8, 0x010606FB, 0x01F40AF2);
	r1 = D(r1, s[1][1][1], 0x0CE5020B, 0x030004EE, 0xD40BE8FE, 0x0E030BF3);
	r2 = D(r2, s[1][1][1], 0xF70EFD1B, 0x11F91E25, 0xE5FBDC03, 0xD9FAFE19);
	r3 = D(r3, s[1][1][1], 0xFAF9F004, 0xEFFDFD09, 0xFCF9F612, 0x11F1010B);
	r4 = D(r4, s[1][1][1], 0xEAFF0FFB, 0xE2F31826, 0xE608ECF6, 0x02FEF00F);
	r5 = D(r5, s[1][1][1], 0xFF14FC08, 0xFE13F30F, 0x0210FE1C, 0x0106F515);
	r6 = D(r6, s[1][1][1], 0xF303FF0A, 0xF9FC1003, 0xFD0A06F9, 0xFB120D09);
	r7 = D(r7, s[1][1][1], 0x0207F413, 0xDD1205D7, 0x24F61603, 0xFA0E2B12);
	r0 = D(r0, s[1][1][2], 0x040917FF, 0x06000A1A, 0x010A0602, 0x0EDCFF12);
	r1 = D(r1, s[1][1][2], 0xF80AFB08, 0x10EAF4FC, 0x070DF508, 0xFE1BF6F8);
	r2 = D(r2, s[1][1][2], 0xF6071DFB, 0x0903FFFF, 0xED07101F, 0x0603E1F6);
	r3 = D(r3, s[1][1][2], 0xF2F905F5, 0xF90517FC, 0x1F0AF1F7, 0x0E070700);
	r4 = D(r4, s[1][1][2], 0x10FD1AFD, 0xFE030EFE, 0xF71513D1, 0xEC120604);
	r5 = D(r5, s[1][1][2], 0x1A0EFBEE, 0xFF03FC01, 0xF0F2EDF3, 0x06EF0202);
	r6 = D(r6, s[1][1][2], 0x08FCF801, 0xE9020BFF, 0xF6F02FF2, 0x0D04FF02);
	r7 = D(r7, s[1][1][2], 0x09F0F6FB, 0xF9FDE805, 0xE5FB1407, 0x010CFBED);
	r0 = D(r0, s[1][2][0], 0x08F6FA0C, 0x140EEBFC, 0x050001F6, 0x050CFAFB);
	r1 = D(r1, s[1][2][0], 0x0F04D805, 0x04F2E204, 0x02000201, 0xFDE8FFF7);
	r2 = D(r2, s[1][2][0], 0x16F809ED, 0x13ECFD15, 0xF1FD02F8, 0x06F3040C);
	r3 = D(r3, s[1][2][0], 0x06FC0E0B, 0x0D02F801, 0x06FF04FE, 0x08F20FF2);
	r4 = D(r4, s[1][2][0], 0xFBF90805, 0xE6EDFFF2, 0xF5E1FC14, 0xFDF10F0E);
	r5 = D(r5, s[1][2][0], 0xFFFBFFFB, 0x080B16F6, 0xF80BF3E6, 0xFFFB01F4);
	r6 = D(r6, s[1][2][0], 0xF80B15FC, 0xF116E40B, 0x07E10D07, 0x020401F4);
	r7 = D(r7, s[1][2][0], 0x03E8D108, 0x06EC1301, 0x05FE1627, 0x0BF9F300);
	r0 = D(r0, s[1][2][1], 0x1606F9EF, 0x11FAFAF5, 0xF90509FF, 0x030F09EB);
	r1 = D(r1, s[1][2][1], 0x00F30806, 0x01F6E112, 0xECFA0A06, 0xFA0201FB);
	r2 = D(r2, s[1][2][1], 0x0906E4F7, 0x1BFD0208, 0x02F2EFEB, 0x060218EB);
	r3 = D(r3, s[1][2][1], 0x04030506, 0xFB01FF07, 0x0C0600F7, 0xF9F9E6F6);
	r4 = D(r4, s[1][2][1], 0xE509E501, 0xF614CB00, 0xFEF00CFF, 0x180D2508);
	r5 = D(r5, s[1][2][1], 0xEDF3F9FF, 0xFD02F7FE, 0x07F91309, 0xFEFD0FFD);
	r6 = D(r6, s[1][2][1], 0xFFE90002, 0x0DFDE701, 0xF7FCF4F0, 0xE30CF109);
	r7 = D(r7, s[1][2][1], 0x02F90F1C, 0x06FBF800, 0xFCFFF407, 0xFF0DD80F);
	r0 = D(r0, s[1][2][2], 0xE70005E6, 0x09F6F1FF, 0x02F9FEFB, 0xFFFEFF0C);
	r1 = D(r1, s[1][2][2], 0x0D0801F2, 0xF9010817, 0xF4F113EB, 0x08E7E910);
	r2 = D(r2, s[1][2][2], 0xFF10FF05, 0x0819F5F5, 0xE9F30F09, 0x080C0008);
	r3 = D(r3, s[1][2][2], 0x182100FD, 0x0E08FC0B, 0xF9E307F1, 0xFAFBF9F7);
	r4 = D(r4, s[1][2][2], 0xFA080703, 0xECFBF8FE, 0x0D1CF5F7, 0x201EF6EF);
	r5 = D(r5, s[1][2][2], 0x03F80803, 0xFA0802EB, 0x0AF8FC09, 0xFFF90007);
	r6 = D(r6, s[1][2][2], 0xFF0CFFEF, 0xF91FF7FF, 0xF5D4DFEE, 0x0E1506F9);
	r7 = D(r7, s[1][2][2], 0x00FFEA03, 0xF1F80300, 0x0910DFF6, 0xFE0106F6);
	s[0][0][0] = G[10][xy.y+0][xy.x+0]; s[0][0][1] = G[10][xy.y+0][xy.x+1];
	s[0][0][2] = G[10][xy.y+0][xy.x+2]; s[0][1][0] = G[10][xy.y+1][xy.x+0];
	s[0][1][1] = G[10][xy.y+1][xy.x+1]; s[0][1][2] = G[10][xy.y+1][xy.x+2];
	s[0][2][0] = G[10][xy.y+2][xy.x+0]; s[0][2][1] = G[10][xy.y+2][xy.x+1];
	s[0][2][2] = G[10][xy.y+2][xy.x+2]; s[1][0][0] = G[11][xy.y+0][xy.x+0];
	s[1][0][1] = G[11][xy.y+0][xy.x+1]; s[1][0][2] = G[11][xy.y+0][xy.x+2];
	s[1][1][0] = G[11][xy.y+1][xy.x+0]; s[1][1][1] = G[11][xy.y+1][xy.x+1];
	s[1][1][2] = G[11][xy.y+1][xy.x+2]; s[1][2][0] = G[11][xy.y+2][xy.x+0];
	s[1][2][1] = G[11][xy.y+2][xy.x+1]; s[1][2][2] = G[11][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x0DEA02F4, 0xF4F0F10D, 0xFFFE0B06, 0xF2F8F3FB);
	r1 = D(r1, s[0][0][0], 0xEDFAFEF5, 0x0F0DFBF2, 0xF9EEFF0A, 0xEF0F0C03);
	r2 = D(r2, s[0][0][0], 0x09FCF3CB, 0x11020E16, 0x08020207, 0xF0070903);
	r3 = D(r3, s[0][0][0], 0x01F6E709, 0x1AFBF810, 0xF4152000, 0x0A010700);
	r4 = D(r4, s[0][0][0], 0x13081B06, 0x04FE10FB, 0x06ED0810, 0x06060409);
	r5 = D(r5, s[0][0][0], 0xF70EF601, 0xF209F9FF, 0x0DF508FF, 0x0813F40B);
	r6 = D(r6, s[0][0][0], 0xFBF5F80D, 0x00190AFB, 0xD5E01608, 0x18130C02);
	r7 = D(r7, s[0][0][0], 0xFD00FCEB, 0x0502F4DE, 0xFCFEF2F2, 0xEA030408);
	r0 = D(r0, s[0][0][1], 0xFD0DFFFE, 0x0E030506, 0x050605FD, 0x05F6EFF4);
	r1 = D(r1, s[0][0][1], 0x0CFAF814, 0x10E3FBF7, 0xF80607F8, 0xFDFEFB0C);
	r2 = D(r2, s[0][0][1], 0x0E0BE4E6, 0xFFEB00F7, 0x0F0A0CEF, 0xFDEAE506);
	r3 = D(r3, s[0][0][1], 0xF1FE0DFF, 0x08F9E506, 0xFE032AF3, 0xEDF8FD15);
	r4 = D(r4, s[0][0][1], 0x0B1204D3, 0x1AF912D4, 0xE9F710EF, 0x0719F6EA);
	r5 = D(r5, s[0][0][1], 0x0B0002FE, 0xE6F2EA0A, 0xF3F2FCFD, 0x1A03FC03);
	r6 = D(r6, s[0][0][1], 0x07F5FC03, 0x191020FC, 0x0202FEFC, 0x07F0FB05);
	r7 = D(r7, s[0][0][1], 0xF4F703FC, 0x0AC60AF5, 0xFDFCECF7, 0x02F60306);
	r0 = D(r0, s[0][0][2], 0x1BFEEF0E, 0x171AE606, 0xFBFF070E, 0x00FEFA0A);
	r1 = D(r1, s[0][0][2], 0x0A0CEBF7, 0x18FE05FF, 0xF7010B0F, 0xFB0EEEF0);
	r2 = D(r2, s[0][0][2], 0xD913FC00, 0x09E1E706, 0x03F10A0D, 0xFEF41419);
	r3 = D(r3, s[0][0][2], 0x0B00F312, 0xE403F704, 0xFBEBF7FA, 0xD1020710);
	r4 = D(r4, s[0][0][2], 0xFEE802EC, 0xF70E121A, 0x1317E409, 0xF4F00806);
	r5 = D(r5, s[0][0][2], 0x1207F90D, 0x22E612EB, 0x050413F5, 0x0AFE01E1);
	r6 = D(r6, s[0][0][2], 0xEDF7FB04, 0x12E102F5, 0x27010F06, 0x09010DF6);
	r7 = D(r7, s[0][0][2], 0xFD193B06, 0x030610DE, 0xF202FFFA, 0x06F00B08);
	r0 = D(r0, s[0][1][0], 0xEE0A1F0A, 0x04FEDD00, 0xFEFF0405, 0x17EFFBFA);
	r1 = D(r1, s[0][1][0], 0x0703FAFD, 0xDDF5F400, 0x060C12FA, 0x00010907);
	r2 = D(r2, s[0][1][0], 0xFEE7FDDE, 0x17F91629, 0x1128EB17, 0xF0FE1D19);
	r3 = D(r3, s[0][1][0], 0x07F1FE09, 0x02FF0902, 0xFAF910FF, 0x00001009);
	r4 = D(r4, s[0][1][0], 0x01F523D0, 0x0EDBF7FD, 0x0F0611FB, 0xE7050FFD);
	r5 = D(r5, s[0][1][0], 0x1810F50B, 0xEBFFFEFA, 0x0B03FBDE, 0xF5E6E800);
	r6 = D(r6, s[0][1][0], 0x02160809, 0xF8EE00FD, 0x01F60004, 0x0E09FB00);
	r7 = D(r7, s[0][1][0], 0xE5FA190C, 0xF30CF4F3, 0x03ED0FF2, 0x05B0EB09);
	r0 = D(r0, s[0][1][1], 0xF9F21014, 0xF9F0FC09, 0x010203F0, 0x0C12FBF9);
	r1 = D(r1, s[0][1][1], 0x191DF6FC, 0x01FD04EC, 0xFEF7F10A, 0x14FD1509);
	r2 = D(r2, s[0][1][1], 0x0818F6D6, 0xF6F5F9EB, 0xFD0604FE, 0x0C17E70B);
	r3 = D(r3, s[0][1][1], 0x20F9080E, 0x050AE908, 0x03F7F006, 0x0817FC18);
	r4 = D(r4, s[0][1][1], 0x0106E5C3, 0xF205EECB, 0xFCCF05FF, 0x00130804);
	r5 = D(r5, s[0][1][1], 0xE9FC1AFE, 0xF40CFC0D, 0x03EF04AF, 0x00F2F11A);
	r6 = D(r6, s[0][1][1], 0x13F6F40E, 0xEFEFFA08, 0xFBDB06DC, 0x15FA0EFF);
	r7 = D(r7, s[0][1][1], 0x1401080A, 0x0CF4F808, 0x07070AEF, 0x0BFB1201);
	r0 = D(r0, s[0][1][2], 0x0109FA1C, 0x0D1520F9, 0x1106030F, 0xED01FA0E);
	r1 = D(r1, s[0][1][2], 0xF0F701FF, 0xDDFC05FA, 0x08FAF719, 0x07FDEB00);
	r2 = D(r2, s[0][1][2], 0xF4F3FD18, 0xFEF5E5FE, 0x0A1A2502, 0xF8000BFC);
	r3 = D(r3, s[0][1][2], 0xEB13F117, 0x0709F412, 0xE4E4020C, 0x2DFA0516);
	r4 = D(r4, s[0][1][2], 0xFFFCEDE7, 0xFBFE32F3, 0x0108FB0C, 0xE7F20314);
	r5 = D(r5, s[0][1][2], 0x02F50D11, 0xF71613FC, 0xFBFFFDF6, 0xF915030B);
	r6 = D(r6, s[0][1][2], 0x21FFF412, 0xF0110401, 0x05F00AFE, 0xF707ED0C);
	r7 = D(r7, s[0][1][2], 0x090D0800, 0xE6F704E3, 0xF6F011F6, 0x06EB040F);
	r0 = D(r0, s[0][2][0], 0xF3001410, 0xF3FB26FF, 0x000101FD, 0x0106FC05);
	r1 = D(r1, s[0][2][0], 0xF2FCF6FD, 0xF200DCFF, 0x0D07EEF5, 0x00071608);
	r2 = D(r2, s[0][2][0], 0xFA040CF6, 0xE808E500, 0xEFF2DDE1, 0x0A060306);
	r3 = D(r3, s[0][2][0], 0x0C0EF70C, 0x0B01FC06, 0xF5030F09, 0x03FE1AF6);
	r4 = D(r4, s[0][2][0], 0xF8ED1B10, 0x010CF9FF, 0xFC1DDEFD, 0xD51000EB);
	r5 = D(r5, s[0][2][0], 0x09FF0A04, 0x08F7FF03, 0x17F80AEB, 0x16080404);
	r6 = D(r6, s[0][2][0], 0xF9FAF2F5, 0xF5062405, 0x06103701, 0x01FD15F8);
	r7 = D(r7, s[0][2][0], 0xF9F65201, 0x080C36FC, 0xFE00090B, 0xF7EEF501);
	r0 = D(r0, s[0][2][1], 0x14F5030C, 0xED0F000A, 0x030E120B, 0x01F3EA0B);
	r1 = D(r1, s[0][2][1], 0xE9FBE3FB, 0x0003F4FA, 0x04011E13, 0xEB00100C);
	r2 = D(r2, s[0][2][1], 0x0804ECFD, 0x0D22CE30, 0xF71303FD, 0xFF08E91B);
	r3 = D(r3, s[0][2][1], 0xFBF6FD0E, 0x0F010414, 0xF315FD09, 0x0E0C04FE);
	r4 = D(r4, s[0][2][1], 0x10F4DFE9, 0x06FD02EE, 0xFC060519, 0xFDF2F2F6);
	r5 = D(r5, s[0][2][1], 0xF9F4F2F2, 0xF7F611F5, 0xFD271ADE, 0xF8050204);
	r6 = D(r6, s[0][2][1], 0xE81515FC, 0xFB131902, 0xF2141205, 0x0308E2F5);
	r7 = D(r7, s[0][2][1], 0xFDF7DCF8, 0xFC1FF708, 0xEBF90FFA, 0x08FEFEF1);
	r0 = D(r0, s[0][2][2], 0xF10F08F0, 0x01FF0107, 0xFF06FD0E, 0x1105D90C);
	r1 = D(r1, s[0][2][2], 0xEBEAF00B, 0x13F9F303, 0x07F70BFE, 0x00010101);
	r2 = D(r2, s[0][2][2], 0xFE04F30C, 0x0FFB0D1D, 0xF0FB1CF8, 0xE203091D);
	r3 = D(r3, s[0][2][2], 0x090DD90B, 0x0405F402, 0x08F30DFB, 0xF0F4FB02);
	r4 = D(r4, s[0][2][2], 0x0BF1D9EB, 0x0604EE02, 0xEE001506, 0xF2020D08);
	r5 = D(r5, s[0][2][2], 0xED011DF8, 0x0D0D0EF7, 0x16E9E60C, 0x0908ED06);
	r6 = D(r6, s[0][2][2], 0xFC01FBF8, 0x13EEE515, 0xE0F2FFC2, 0xF80009ED);
	r7 = D(r7, s[0][2][2], 0xECEB9E0F, 0x23020EFB, 0x06F61501, 0x080D06F6);
	r0 = D(r0, s[1][0][0], 0xF10507FB, 0xD904F1FF, 0x0BFD0802, 0x06F61201);
	r1 = D(r1, s[1][0][0], 0x28E60001, 0x09EC0405, 0x000C0103, 0x09FDFC04);
	r2 = D(r2, s[1][0][0], 0xEDF4FF14, 0xFFFFF8F6, 0x0E01FF03, 0x130C0FE9);
	r3 = D(r3, s[1][0][0], 0x03FB0AF2, 0x0AF607F2, 0x14FB0EFD, 0x2009FBFA);
	r4 = D(r4, s[1][0][0], 0x0B05EB0C, 0x020FF403, 0xE90EF8FC, 0xE706E600);
	r5 = D(r5, s[1][0][0], 0x04F1EAFB, 0xE5040CF9, 0x170C0D09, 0xEE10F707);
	r6 = D(r6, s[1][0][0], 0xFB07EE01, 0x08FC03FA, 0xF4E3120D, 0xEF0DE703);
	r7 = D(r7, s[1][0][0], 0xEFF7F5F0, 0x07FA24FD, 0xFA080608, 0x1101F2F0);
	r0 = D(r0, s[1][0][1], 0x03F10EDD, 0xEAFFF6E9, 0xF5FAF904, 0x01F9F507);
	r1 = D(r1, s[1][0][1], 0xF201F9FD, 0xF10002F7, 0xF30D0201, 0xFDF50106);
	r2 = D(r2, s[1][0][1], 0xFB010304, 0xF8F814EA, 0x15182309, 0x09F710EB);
	r3 = D(r3, s[1][0][1], 0xF8FA0A0C, 0x0CFD0303, 0xFF0F0000, 0x03E509FE);
	r4 = D(r4, s[1][0][1], 0xEF0B0E08, 0x04F91809, 0x0CF010EC, 0xD10CF3E9);
	r5 = D(r5, s[1][0][1], 0xEDFB0801, 0x04100E09, 0x09110704, 0xFD0BFBFA);
	r6 = D(r6, s[1][0][1], 0x020119FB, 0xF1F0F807, 0xFB0A00F8, 0xE3F7FE09);
	r7 = D(r7, s[1][0][1], 0x10F00800, 0xF7FBFF0A, 0xEFE713FC, 0xEEFCF115);
	r0 = D(r0, s[1][0][2], 0xF502F9F3, 0xE4FFFA01, 0xFBFFFC09, 0xF90A0501);
	r1 = D(r1, s[1][0][2], 0xF7FC0413, 0xFF1AF5ED, 0xFF07F9F6, 0x01060BFC);
	r2 = D(r2, s[1][0][2], 0xFBEC0A02, 0xDBEEF3E0, 0xF0162112, 0xF4F5DBE6);
	r3 = D(r3, s[1][0][2], 0x0008FBF9, 0x020305FD, 0xFE030102, 0xE0EDEDF6);
	r4 = D(r4, s[1][0][2], 0x03010811, 0x01E3130F, 0xFF0EE609, 0x08E900FC);
	r5 = D(r5, s[1][0][2], 0x04FBFBFF, 0xFF0205FD, 0x0A000A0C, 0x0D040AF7);
	r6 = D(r6, s[1][0][2], 0x040001FE, 0x0E12F70A, 0xE1E9EF09, 0x0300EEF8);
	r7 = D(r7, s[1][0][2], 0xEAF9EC0B, 0xFCF801FC, 0x15EDFDF8, 0x07E0F30A);
	r0 = D(r0, s[1][1][0], 0x05EFFDF7, 0x07130AEF, 0xFE110301, 0xEA06FDFE);
	r1 = D(r1, s[1][1][0], 0x0EFDF910, 0x11D1FBE0, 0xF10004F8, 0xECFCE8FC);
	r2 = D(r2, s[1][1][0], 0x0317FA05, 0xF0FCFAED, 0xEF0EF714, 0xFC050DF8);
	r3 = D(r3, s[1][1][0], 0x01EE0404, 0xF5F2FA08, 0x0C07FF07, 0x00171005);
	r4 = D(r4, s[1][1][0], 0xFA04050A, 0xDB070401, 0xF90E090D, 0x09070E09);
	r5 = D(r5, s[1][1][0], 0xFE0105F8, 0xDBF9000F, 0xF0FE0702, 0x0203F6FB);
	r6 = D(r6, s[1][1][0], 0xFE07FAED, 0xFA18FDF8, 0x1505F70A, 0x0B0D02F4);
	r7 = D(r7, s[1][1][0], 0xF5FDD5FA, 0xECFA130B, 0x05E9FF0A, 0xCFFD0EFF);
	r0 = D(r0, s[1][1][1], 0xE2FA0B02, 0x01140515, 0x00FF0405, 0xED040808);
	r1 = D(r1, s[1][1][1], 0x110814FE, 0x10CD16F8, 0x1510FBF4, 0x08FEFB01);
	r2 = D(r2, s[1][1][1], 0x122AF908, 0x1C0F09F5, 0x040DEB15, 0xE3FC05FD);
	r3 = D(r3, s[1][1][1], 0xFC01FA11, 0x00F4FE0E, 0x2212F909, 0xF1090803);
	r4 = D(r4, s[1][1][1], 0xFB17F20E, 0xEB0B210B, 0x000E02FC, 0x15FAF2FF);
	r5 = D(r5, s[1][1][1], 0x08FAF302, 0xF3F5040C, 0xF50EF606, 0xF6E80F0F);
	r6 = D(r6, s[1][1][1], 0x05E8F2F6, 0x0F1EFC0F, 0x1B10EE10, 0x08FE07FD);
	r7 = D(r7, s[1][1][1], 0x1813190E, 0xFD16F822, 0xF007EB05, 0x05E208EB);
	r0 = D(r0, s[1][1][2], 0x15F609F8, 0x05ECF807, 0x01FEFC0F, 0xF7F0F3FA);
	r1 = D(r1, s[1][1][2], 0x0B0F0AF8, 0x0A08E302, 0xFBF80007, 0x0214F7DF);
	r2 = D(r2, s[1][1][2], 0x02F905F3, 0xDC040400, 0xEFF3FF07, 0xFFF1FCD3);
	r3 = D(r3, s[1][1][2], 0x06FDF0FE, 0xF4F8F508, 0x00091116, 0x1001F308);
	r4 = D(r4, s[1][1][2], 0xFA29150A, 0x15DA0E0C, 0x0BEEFDF6, 0x0DCC1407);
	r5 = D(r5, s[1][1][2], 0x19091407, 0x0F16E8E6, 0xF7FA0806, 0xFDF40304);
	r6 = D(r6, s[1][1][2], 0xF7F7FA02, 0xF0EF0300, 0x0902F3FD, 0xF90607E2);
	r7 = D(r7, s[1][1][2], 0xFF06F505, 0xF20AFD14, 0xF9110CED, 0xEEF9FF03);
	r0 = D(r0, s[1][2][0], 0xF9F80D02, 0xE9E5F6F4, 0x06FEFD06, 0x08FF0400);
	r1 = D(r1, s[1][2][0], 0x1AF702FC, 0xF8E9E2ED, 0xFBF5EFFF, 0x0D04FB07);
	r2 = D(r2, s[1][2][0], 0xF0100EF2, 0x03050DC8, 0x08FD0908, 0xE901FDF2);
	r3 = D(r3, s[1][2][0], 0xF411F1F3, 0x01F200F9, 0x10FFF7F3, 0xF60909FE);
	r4 = D(r4, s[1][2][0], 0xF315021B, 0x0DFBFEED, 0x02FE07F6, 0x0410E406);
	r5 = D(r5, s[1][2][0], 0xF11202FA, 0xF800F700, 0x0F010115, 0xFAF9FF0A);
	r6 = D(r6, s[1][2][0], 0x0E100B09, 0x08FF14E8, 0x1603FEF8, 0xF5E705FB);
	r7 = D(r7, s[1][2][0], 0xF8DFBCEE, 0xFD0B060A, 0xF407E30F, 0x09FDF0E8);
	r0 = D(r0, s[1][2][1], 0x18051607, 0x0E1E20EC, 0xFE01FDF7, 0x0FE9D909);
	r1 = D(r1, s[1][2][1], 0xF7030D0C, 0xFFEBFFF2, 0x06070AFA, 0xFBFE090E);
	r2 = D(r2, s[1][2][1], 0xF91B1DF2, 0xE6DD06DF, 0xFAF90207, 0xF0E204F2);
	r3 = D(r3, s[1][2][1], 0x08FDF606, 0xE7F30502, 0xEE08140B, 0x03ED17F2);
	r4 = D(r4, s[1][2][1], 0x060107F0, 0x03F3DA02, 0xFBF900F5, 0xFBBC2A03);
	r5 = D(r5, s[1][2][1], 0x1AF70CFA, 0x0CFE04FF, 0xF81B0E0B, 0xFE13F704);
	r6 = D(r6, s[1][2][1], 0x06060513, 0xFA18280E, 0x04FA17D9, 0xFA06F1F9);
	r7 = D(r7, s[1][2][1], 0xF70C1CFE, 0x130A160A, 0x04EF0CEC, 0xFF050D03);
	r0 = D(r0, s[1][2][2], 0x0AFCFBF7, 0x08F40813, 0xFF04FD04, 0x0CD41601);
	r1 = D(r1, s[1][2][2], 0xF3FB0A0F, 0x0801F8E3, 0xFCFE201A, 0xD501F90B);
	r2 = D(r2, s[1][2][2], 0x03080800, 0x09F611FB, 0x09ECF6F4, 0xF3F510F2);
	r3 = D(r3, s[1][2][2], 0x07FBFC09, 0xFBED01FC, 0x031EEBEA, 0x051BF601);
	r4 = D(r4, s[1][2][2], 0xFF0A070A, 0x0408031F, 0xF3EEF000, 0x10071CED);
	r5 = D(r5, s[1][2][2], 0xFF0DFD05, 0x00F7E311, 0x0EEA111F, 0x05F208FF);
	r6 = D(r6, s[1][2][2], 0x0605FEEF, 0x05F924F2, 0xF9B8C908, 0xF80211DC);
	r7 = D(r7, s[1][2][2], 0xFD13FD10, 0x1D1E0211, 0x1D020909, 0xF800EEFA);
	s[0][0][0] = G[12][xy.y+0][xy.x+0]; s[0][0][1] = G[12][xy.y+0][xy.x+1];
	s[0][0][2] = G[12][xy.y+0][xy.x+2]; s[0][1][0] = G[12][xy.y+1][xy.x+0];
	s[0][1][1] = G[12][xy.y+1][xy.x+1]; s[0][1][2] = G[12][xy.y+1][xy.x+2];
	s[0][2][0] = G[12][xy.y+2][xy.x+0]; s[0][2][1] = G[12][xy.y+2][xy.x+1];
	s[0][2][2] = G[12][xy.y+2][xy.x+2]; s[1][0][0] = G[13][xy.y+0][xy.x+0];
	s[1][0][1] = G[13][xy.y+0][xy.x+1]; s[1][0][2] = G[13][xy.y+0][xy.x+2];
	s[1][1][0] = G[13][xy.y+1][xy.x+0]; s[1][1][1] = G[13][xy.y+1][xy.x+1];
	s[1][1][2] = G[13][xy.y+1][xy.x+2]; s[1][2][0] = G[13][xy.y+2][xy.x+0];
	s[1][2][1] = G[13][xy.y+2][xy.x+1]; s[1][2][2] = G[13][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x02EF030F, 0x0012EEFD, 0xFD04FC02, 0x0B0CFAF5);
	r1 = D(r1, s[0][0][0], 0xF5FF0EF9, 0x0E010210, 0xFAFC05EF, 0xF212F6FB);
	r2 = D(r2, s[0][0][0], 0xD6E601E6, 0x13E10B0A, 0x0D0B0616, 0x0C0900FB);
	r3 = D(r3, s[0][0][0], 0x06060D01, 0xF5FB0F09, 0xF6020B11, 0xEB06D5FD);
	r4 = D(r4, s[0][0][0], 0x05F7FB18, 0x0CF315E4, 0xDE01F8E6, 0x16F80303);
	r5 = D(r5, s[0][0][0], 0x220DF6F4, 0xEC00EEFB, 0x09FDF7F6, 0x1D0103F6);
	r6 = D(r6, s[0][0][0], 0xEEFE09F6, 0x14FE110A, 0x02F90C05, 0xEBF9FD07);
	r7 = D(r7, s[0][0][0], 0xEFF6E4FE, 0xCDFCDBDE, 0x15F1F3F7, 0xEFFB0C07);
	r0 = D(r0, s[0][0][1], 0x1B07FDFF, 0x080FCD07, 0x04F3F4FD, 0xFF02FCFD);
	r1 = D(r1, s[0][0][1], 0x010CF5EA, 0xE7F3FF05, 0xE2E902FB, 0x0D0301F9);
	r2 = D(r2, s[0][0][1], 0xD51400DD, 0x0014ECFF, 0x14EB0800, 0x170CFC0A);
	r3 = D(r3, s[0][0][1], 0x0DF3F804, 0x002309FD, 0x1DF7FD0B, 0xEF04F2F7);
	r4 = D(r4, s[0][0][1], 0x0A050A04, 0x12F0F0F1, 0x31FC001C, 0xDD031E12);
	r5 = D(r5, s[0][0][1], 0xEE040E0F, 0x0601FC04, 0xF70B0FFB, 0xEEFD0EF9);
	r6 = D(r6, s[0][0][1], 0xE207FDFE, 0x06F3E8F4, 0x1C090A07, 0x1912190A);
	r7 = D(r7, s[0][0][1], 0xF80208F9, 0xD1FFE2B9, 0xF9000E02, 0x0607D112);
	r0 = D(r0, s[0][0][2], 0x010FEB0C, 0xFC02FEFA, 0xF804FF01, 0x16070CEC);
	r1 = D(r1, s[0][0][2], 0xE00309F6, 0x04FC0211, 0xFE0804FA, 0xE9FD0AFC);
	r2 = D(r2, s[0][0][2], 0xFFF404E6, 0xF50F1EF6, 0x00F4FD0B, 0x0318FE15);
	r3 = D(r3, s[0][0][2], 0xE303FDF5, 0xF3070F04, 0x0C00FDFF, 0x11FDFBE8);
	r4 = D(r4, s[0][0][2], 0xFCDD0E07, 0xF400EF07, 0x060DFA02, 0xEEF6EE0D);
	r5 = D(r5, s[0][0][2], 0xDFF7F80C, 0x0A20F60A, 0x23F911F8, 0x02FD05EB);
	r6 = D(r6, s[0][0][2], 0xF5F0050B, 0x14EEF5F1, 0x2208E5F9, 0x1715020C);
	r7 = D(r7, s[0][0][2], 0xF8EAFF0C, 0x0AFDF9F1, 0xE6F10407, 0x10E9F3EF);
	r0 = D(r0, s[0][1][0], 0x1AF10609, 0xF61F04FD, 0xFAFA0400, 0x0C0AFF0A);
	r1 = D(r1, s[0][1][0], 0xEC0B1201, 0x0D09060C, 0x032DFEF4, 0x0200F005);
	r2 = D(r2, s[0][1][0], 0x04FA0DDF, 0xF2F901FA, 0x22F5E202, 0xEC0D1711);
	r3 = D(r3, s[0][1][0], 0x011DEE00, 0xF1FBEC0B, 0x0C0B0AFF, 0xF9FCF8EB);
	r4 = D(r4, s[0][1][0], 0x2306010B, 0xD31712FB, 0xF1FDFCEC, 0xF1F41019);
	r5 = D(r5, s[0][1][0], 0xC9FAFDFE, 0xF41CF8F5, 0xFBF6E6EC, 0x0301E802);
	r6 = D(r6, s[0][1][0], 0x091003F5, 0x39F4EC0B, 0x0A15E715, 0x1BE0EAF9);
	r7 = D(r7, s[0][1][0], 0x310714F9, 0x1E19FAFF, 0x04F10909, 0x111EF81E);
	r0 = D(r0, s[0][1][1], 0x02EDDBDC, 0xE810F0F6, 0x06FE0A0F, 0x06FCEF0E);
	r1 = D(r1, s[0][1][1], 0x070FDD0E, 0x14FAF407, 0x0DFF0205, 0x2709FCFF);
	r2 = D(r2, s[0][1][1], 0x15F00FEB, 0x021F0A03, 0xF312E7E5, 0x15F5ECE0);
	r3 = D(r3, s[0][1][1], 0x07F8B6FC, 0x0EF6EE01, 0x1B00F900, 0xF8F4EAFD);
	r4 = D(r4, s[0][1][1], 0x0AEA0700, 0x1D07F7FA, 0x0B0216E8, 0xFAF4070E);
	r5 = D(r5, s[0][1][1], 0x2502F717, 0xEB090B14, 0xEA09E8D9, 0x030812FF);
	r6 = D(r6, s[0][1][1], 0x0A01E7FA, 0x05FD0E12, 0xED23041C, 0x190824EB);
	r7 = D(r7, s[0][1][1], 0xF901E2F2, 0xF0EF0BF8, 0xED060F0C, 0x030D0A0E);
	r0 = D(r0, s[0][1][2], 0x0207070E, 0x12F6F213, 0x02F2FD06, 0x0DFEFCFA);
	r1 = D(r1, s[0][1][2], 0x2409EE08, 0x0D000607, 0xE3171DFE, 0x03F800F9);
	r2 = D(r2, s[0][1][2], 0xFA04FDFA, 0xEF21000C, 0xF80D2AF0, 0xFF20FF18);
	r3 = D(r3, s[0][1][2], 0x01F8E504, 0xF209F500, 0xF0F010F6, 0x101BEA0C);
	r4 = D(r4, s[0][1][2], 0x04152903, 0xF8F6030E, 0x1001FA1A, 0xF21315E8);
	r5 = D(r5, s[0][1][2], 0xED0303FB, 0x01F3ED06, 0xF80A0B0E, 0x00F90202);
	r6 = D(r6, s[0][1][2], 0xF7F80C0A, 0x15EB14FF, 0x07E6E8EF, 0xF3130E08);
	r7 = D(r7, s[0][1][2], 0x1504FA19, 0xF0FF04CE, 0xF900FBE9, 0x1B0EE9EC);
	r0 = D(r0, s[0][2][0], 0xFC160216, 0xEAEF0704, 0xFC03F702, 0xEC0F030B);
	r1 = D(r1, s[0][2][0], 0xEC01FCFD, 0x090D0306, 0xFE06EE00, 0x020FF803);
	r2 = D(r2, s[0][2][0], 0x43FFE7FF, 0x1E050114, 0xF71FF7F3, 0xF1ED00FB);
	r3 = D(r3, s[0][2][0], 0xD7E701FD, 0xEBFF05FD, 0xE7E2E6FE, 0x200AFEEA);
	r4 = D(r4, s[0][2][0], 0x0B08FD07, 0xF2F0FB13, 0x1123FAF1, 0x110A110C);
	r5 = D(r5, s[0][2][0], 0xFDFB0904, 0xEB07F4FA, 0xD814FAF7, 0xF2FFF604);
	r6 = D(r6, s[0][2][0], 0x100302F6, 0x16F60513, 0xFE10DADE, 0xE2000FF0);
	r7 = D(r7, s[0][2][0], 0x34FF1405, 0x2824FF24, 0xE313F8F9, 0xDD110007);
	r0 = D(r0, s[0][2][1], 0xE300F5FD, 0x27F8FA12, 0xF804F9FE, 0x1EFCF414);
	r1 = D(r1, s[0][2][1], 0x05FC0412, 0x161508FE, 0x0AF8F402, 0xFB05F6EB);
	r2 = D(r2, s[0][2][1], 0xE70C08D8, 0x18EFFB1C, 0x2507000B, 0xF3FCDBEC);
	r3 = D(r3, s[0][2][1], 0x0503FF11, 0xDBFA0AFB, 0x160FFE04, 0x0106F9F6);
	r4 = D(r4, s[0][2][1], 0xF0FF0CF9, 0x001AFDFC, 0xF8010DF9, 0x0DE10F0D);
	r5 = D(r5, s[0][2][1], 0x38FC0FED, 0x14F4EEF1, 0xFFFC1701, 0xF006FCFF);
	r6 = D(r6, s[0][2][1], 0xFC12F4EE, 0x01E5F9FE, 0xF7DA0A01, 0xE90D10EB);
	r7 = D(r7, s[0][2][1], 0xEF13E204, 0x1FF5D7F0, 0xED0208E9, 0x1BEDF6FE);
	r0 = D(r0, s[0][2][2], 0x01F61518, 0x1208FA0F, 0xF90502F9, 0x160CFCFA);
	r1 = D(r1, s[0][2][2], 0xE9F9F4EF, 0x09F4FB22, 0x12FA0506, 0xEEE406FF);
	r2 = D(r2, s[0][2][2], 0x0E0B09F5, 0x1A09E90D, 0xF30E04F9, 0x210713F0);
	r3 = D(r3, s[0][2][2], 0xFD050115, 0xE4F8FF12, 0xF3FDFD06, 0xEC04E206);
	r4 = D(r4, s[0][2][2], 0xCA050EE9, 0xE80008DC, 0x10F70904, 0xF6F30E02);
	r5 = D(r5, s[0][2][2], 0x09F90918, 0x1A07F000, 0xF3FE09FA, 0xFDF9FF00);
	r6 = D(r6, s[0][2][2], 0x05FC06FE, 0xE10E0E04, 0xEBFEEBE2, 0xC70618F5);
	r7 = D(r7, s[0][2][2], 0x16F80EF0, 0x0C2803E5, 0x0606F913, 0x0602F5FE);
	r0 = D(r0, s[1][0][0], 0xEEFF04F7, 0xEF050402, 0xFF05F2FD, 0xF1F2FE0C);
	r1 = D(r1, s[1][0][0], 0x00FEFAF0, 0xFE0406F6, 0xF909F7F4, 0xFC0401FB);
	r2 = D(r2, s[1][0][0], 0x03F905E4, 0x001CFAFC, 0xF90DED0F, 0x0CFCFBFB);
	r3 = D(r3, s[1][0][0], 0x04070211, 0x0CF7F507, 0xFFF0FDFD, 0xFBFA0011);
	r4 = D(r4, s[1][0][0], 0xFEFCFB0B, 0x0D170D10, 0xEAE90B0E, 0x021117FB);
	r5 = D(r5, s[1][0][0], 0x02FF0A0A, 0xF2F602F1, 0xFCFA06FD, 0x050A0B08);
	r6 = D(r6, s[1][0][0], 0x0A0A0B0A, 0xFCF80B10, 0xF909F7FC, 0x0D0AF505);
	r7 = D(r7, s[1][0][0], 0xFA180AFB, 0xEBF50F0B, 0xF7ED1E0F, 0x04FA0202);
	r0 = D(r0, s[1][0][1], 0x04EF0915, 0xEC0EF202, 0x02F904F8, 0xFDF6140B);
	r1 = D(r1, s[1][0][1], 0x09FBF90F, 0xF207F809, 0xFC06EC03, 0x02FCF6F8);
	r2 = D(r2, s[1][0][1], 0x040109ED, 0xFA0505F1, 0x0704ECFD, 0x0B092004);
	r3 = D(r3, s[1][0][1], 0x00F4E500, 0x000406E9, 0x06020803, 0xFCED18F2);
	r4 = D(r4, s[1][0][1], 0x030504F2, 0xFE0609FF, 0x04FDF8FF, 0x010AF0EF);
	r5 = D(r5, s[1][0][1], 0x0905F8E7, 0x02F9FD0E, 0x080D0BEB, 0xFDF70BF6);
	r6 = D(r6, s[1][0][1], 0x0407FEF7, 0x0701F70D, 0x29E6F800, 0xECFF0405);
	r7 = D(r7, s[1][0][1], 0x0911E60D, 0x03FC2AFC, 0x071A150C, 0x0AF3E804);
	r0 = D(r0, s[1][0][2], 0xF900CB01, 0xEEF900EC, 0xFFF602F8, 0x0207EA0E);
	r1 = D(r1, s[1][0][2], 0x09F6041B, 0x0EF9EE09, 0x06F3FAFC, 0xFD0514EC);
	r2 = D(r2, s[1][0][2], 0x07110DF0, 0x0F0D1DEC, 0xF7FEF7F5, 0x171BFBF6);
	r3 = D(r3, s[1][0][2], 0x14FCF503, 0xFE080C0A, 0x00FBFD11, 0xF70807F2);
	r4 = D(r4, s[1][0][2], 0xFB081D08, 0xF50C24FE, 0x04FAEC01, 0xF81DC807);
	r5 = D(r5, s[1][0][2], 0x02000605, 0x0D100B15, 0x09F9FA0A, 0xF6FDF8FC);
	r6 = D(r6, s[1][0][2], 0xFD0B02FF, 0x0804FA00, 0xF315EBF7, 0xFF15E409);
	r7 = D(r7, s[1][0][2], 0xFD150302, 0xF815FC0C, 0xF509EAF5, 0x0B0F1D07);
	r0 = D(r0, s[1][1][0], 0x1D23F9F2, 0x00FDFB16, 0xFCF9FE04, 0xF7E3FE15);
	r1 = D(r1, s[1][1][0], 0xE803F108, 0x1CFDEB05, 0x0000FD01, 0xFC02EDF2);
	r2 = D(r2, s[1][1][0], 0x03DE0901, 0x10F6F50C, 0x030815EE, 0xE1F6FAFD);
	r3 = D(r3, s[1][1][0], 0xF8EFF301, 0xF809F700, 0x13E408F2, 0x0505EE04);
	r4 = D(r4, s[1][1][0], 0x090D01F2, 0xEB050AF8, 0xF70EF1FF, 0xF2150DF6);
	r5 = D(r5, s[1][1][0], 0xFAE615EB, 0xFBECFDF7, 0xFDF20306, 0x0307F0FA);
	r6 = D(r6, s[1][1][0], 0x030103F4, 0x00190C04, 0xFD090605, 0x12060103);
	r7 = D(r7, s[1][1][0], 0x08250207, 0xF9EEF704, 0xFE1DFE07, 0xF8060E07);
	r0 = D(r0, s[1][1][1], 0x05041007, 0x0008FAFE, 0x13F603FC, 0x030A0AFE);
	r1 = D(r1, s[1][1][1], 0x0611ED0D, 0xF8FE1909, 0x0401F901, 0x01120208);
	r2 = D(r2, s[1][1][1], 0x06F50BF5, 0x11CA0205, 0xE4F4F0EE, 0xEAF0F701);
	r3 = D(r3, s[1][1][1], 0xEFF9FFFB, 0xFB090716, 0xFC00F804, 0xFB07F9EE);
	r4 = D(r4, s[1][1][1], 0xFA13F5F1, 0x10FDFC04, 0xD0FC0B05, 0x1B2F0B11);
	r5 = D(r5, s[1][1][1], 0x17F7F800, 0xEB031AFD, 0xFC02FAE1, 0x1A0F0709);
	r6 = D(r6, s[1][1][1], 0x02FD171B, 0x18FEF3F6, 0xFFE11BF3, 0xF4FF03F0);
	r7 = D(r7, s[1][1][1], 0x02EF0EFB, 0x17020CE7, 0xFEF6F2ED, 0xFE06090F);
	r0 = D(r0, s[1][1][2], 0xE91707D4, 0xF30403F5, 0x1006FFFE, 0xF300FEFF);
	r1 = D(r1, s[1][1][2], 0xF7110E0B, 0xF3F3FA0B, 0x0FEB0CFA, 0xFC2504E9);
	r2 = D(r2, s[1][1][2], 0x0AF0F007, 0xFE0EFB10, 0x05EEFDF4, 0x000F020E);
	r3 = D(r3, s[1][1][2], 0x0112EE15, 0xFB0909F0, 0x00FB0EFB, 0x050CFA0C);
	r4 = D(r4, s[1][1][2], 0xF1F2F705, 0x0600FDF9, 0xEE16F70A, 0x0BF817EB);
	r5 = D(r5, s[1][1][2], 0x0303050E, 0x06F20A1A, 0x030E0508, 0x10120800);
	r6 = D(r6, s[1][1][2], 0xFF0FF90F, 0x09F3F4F1, 0x00140402, 0xFC10F70B);
	r7 = D(r7, s[1][1][2], 0x11FDE5F9, 0xE8F801FD, 0x100A09FD, 0xEF0AFAF9);
	r0 = D(r0, s[1][2][0], 0x170A100A, 0x0CEB0E09, 0x09090300, 0x02FFF8F4);
	r1 = D(r1, s[1][2][0], 0x03FE1607, 0x0DE70CEA, 0x14000900, 0xFC04F507);
	r2 = D(r2, s[1][2][0], 0xD4E10904, 0xF50602FA, 0xF607E50A, 0xF5F1FB00);
	r3 = D(r3, s[1][2][0], 0xF80600FD, 0x08F6F806, 0x14FBF2FE, 0x0FEF1BFF);
	r4 = D(r4, s[1][2][0], 0x0B04ED0B, 0xFA0CEB09, 0xEF120EFB, 0xF6FAF8FA);
	r5 = D(r5, s[1][2][0], 0x070BE906, 0xF6FFEEF5, 0xF7F7EF05, 0x04FE0414);
	r6 = D(r6, s[1][2][0], 0xEEFBF902, 0x0C0AFC07, 0xE9F9F61B, 0x01170C00);
	r7 = D(r7, s[1][2][0], 0x0202170B, 0xF809070F, 0xF505FCFB, 0x0C03FDFB);
	r0 = D(r0, s[1][2][1], 0x05130617, 0x17F0FB0F, 0xF2020203, 0xFF0408FA);
	r1 = D(r1, s[1][2][1], 0xFBEBFBF7, 0x11F901FC, 0xEF130DF8, 0x0CFA040C);
	r2 = D(r2, s[1][2][1], 0xDE130F07, 0xEBC3E0ED, 0x0607F9F9, 0x120B00F8);
	r3 = D(r3, s[1][2][1], 0xFFED09E7, 0x02F706EF, 0xF70DF7F5, 0xEFFD000B);
	r4 = D(r4, s[1][2][1], 0xCCEC07FF, 0xFAD5FFFA, 0xE50B15F4, 0xF1F9E7FD);
	r5 = D(r5, s[1][2][1], 0xF807F4F7, 0xF9131203, 0x170116FF, 0xF9F00BF7);
	r6 = D(r6, s[1][2][1], 0x0AFE05FA, 0xF005F5EC, 0x170DF2F8, 0xF7E4EFF0);
	r7 = D(r7, s[1][2][1], 0x07FBFDFB, 0xF7FFFC03, 0x0CE907FD, 0x13F6FFF9);
	r0 = D(r0, s[1][2][2], 0xF0010002, 0xFE09F4EF, 0x010102FA, 0x14F2FC02);
	r1 = D(r1, s[1][2][2], 0xE5F3F109, 0xF910F0F2, 0x15FA0CFA, 0xFB0407FD);
	r2 = D(r2, s[1][2][2], 0xFA06FDF7, 0xEAF42A04, 0x14F5E2F6, 0xF1EC1607);
	r3 = D(r3, s[1][2][2], 0x00FBE9FC, 0x070AF5FC, 0xFAF70905, 0xDCFCFE08);
	r4 = D(r4, s[1][2][2], 0xEEF1F604, 0xF600F109, 0xF5EDF30E, 0x0B03F000);
	r5 = D(r5, s[1][2][2], 0xF4100609, 0x0313F5FF, 0x01EF1307, 0xFBFBFC0D);
	r6 = D(r6, s[1][2][2], 0xF50500F6, 0xF309000E, 0xA884F7F3, 0xEF210C06);
	r7 = D(r7, s[1][2][2], 0xFEFBF7ED, 0xF90F0905, 0xECF4F2FE, 0xFDFE0908);
	s[0][0][0] = G[14][xy.y+0][xy.x+0]; s[0][0][1] = G[14][xy.y+0][xy.x+1];
	s[0][0][2] = G[14][xy.y+0][xy.x+2]; s[0][1][0] = G[14][xy.y+1][xy.x+0];
	s[0][1][1] = G[14][xy.y+1][xy.x+1]; s[0][1][2] = G[14][xy.y+1][xy.x+2];
	s[0][2][0] = G[14][xy.y+2][xy.x+0]; s[0][2][1] = G[14][xy.y+2][xy.x+1];
	s[0][2][2] = G[14][xy.y+2][xy.x+2]; s[1][0][0] = G[15][xy.y+0][xy.x+0];
	s[1][0][1] = G[15][xy.y+0][xy.x+1]; s[1][0][2] = G[15][xy.y+0][xy.x+2];
	s[1][1][0] = G[15][xy.y+1][xy.x+0]; s[1][1][1] = G[15][xy.y+1][xy.x+1];
	s[1][1][2] = G[15][xy.y+1][xy.x+2]; s[1][2][0] = G[15][xy.y+2][xy.x+0];
	s[1][2][1] = G[15][xy.y+2][xy.x+1]; s[1][2][2] = G[15][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x19EAFC07, 0x0B1CEDFC, 0x04FEF703, 0x060A0F04);
	r1 = D(r1, s[0][0][0], 0xF80FF317, 0xE91400EE, 0xF5FA0001, 0xE910030D);
	r2 = D(r2, s[0][0][0], 0x0522FA0D, 0x0C0C141E, 0x1C08F7F3, 0x0EFAFA07);
	r3 = D(r3, s[0][0][0], 0x16FD07ED, 0xF4F8FAFA, 0xF9F9FEE9, 0xFD1507F0);
	r4 = D(r4, s[0][0][0], 0xF8FE0706, 0x0404E700, 0x05E51EE2, 0x02190B09);
	r5 = D(r5, s[0][0][0], 0x0100F8F7, 0x07ECE4EC, 0x010AFE02, 0xF303FFF2);
	r6 = D(r6, s[0][0][0], 0x1015EFF3, 0x0EF90AEA, 0xFB0FFE08, 0x07020EEE);
	r7 = D(r7, s[0][0][0], 0xF1040EE0, 0xF108FB0A, 0xFCF7FBFC, 0x0FF7FEF3);
	r0 = D(r0, s[0][0][1], 0x09F5100A, 0xFE1503F0, 0xFDF40506, 0xF9F80318);
	r1 = D(r1, s[0][0][1], 0xFD0910F7, 0xFB1309FB, 0xFA02F401, 0xEE040505);
	r2 = D(r2, s[0][0][1], 0xFF0414FD, 0xFEC9021B, 0xE8F3E422, 0xF7F50FF5);
	r3 = D(r3, s[0][0][1], 0x03FF130D, 0xFC150F0D, 0x1DF9F80B, 0xEF08E707);
	r4 = D(r4, s[0][0][1], 0x0E08120A, 0x06F20704, 0xFFFA131A, 0xEB04FBF5);
	r5 = D(r5, s[0][0][1], 0xEFFB0705, 0xF6F8F5F9, 0xF01D00FB, 0xF4FF1012);
	r6 = D(r6, s[0][0][1], 0xF804030D, 0x15EB0405, 0x0FF70710, 0xFEFB1A07);
	r7 = D(r7, s[0][0][1], 0x0517ED0E, 0xEE05EE16, 0x1A061108, 0xF9F10F07);
	r0 = D(r0, s[0][0][2], 0x05F50D03, 0xF9EAF60C, 0x01FFF808, 0xFC000802);
	r1 = D(r1, s[0][0][2], 0xE3F3F5FF, 0x070D000F, 0xEC05090C, 0x0A020418);
	r2 = D(r2, s[0][0][2], 0x0403FF01, 0x0C1AD2FC, 0x000A0DF7, 0xFA13EA0A);
	r3 = D(r3, s[0][0][2], 0xFA06100F, 0xF202F80D, 0xED18E702, 0xFAF706FC);
	r4 = D(r4, s[0][0][2], 0xE714F80E, 0x14FF070C, 0xF712180D, 0xFEEFFBC0);
	r5 = D(r5, s[0][0][2], 0xFAF8FC04, 0xF41EFCF7, 0xF60CF6F7, 0xFEF30B08);
	r6 = D(r6, s[0][0][2], 0x0BFEF8F9, 0x08F0E210, 0xF8E314F2, 0x070510FA);
	r7 = D(r7, s[0][0][2], 0x05FFFBEF, 0x26F2EF10, 0xFCEF1B04, 0x05F30603);
	r0 = D(r0, s[0][1][0], 0xF407010F, 0x1F03EEFF, 0x03050F03, 0x01000702);
	r1 = D(r1, s[0][1][0], 0x0A0EF419, 0xF4F506FC, 0xF8F9FF00, 0xFCF7FFFE);
	r2 = D(r2, s[0][1][0], 0xE7FFE91C, 0xF9F9FFE9, 0x1906FFE3, 0xEE012002);
	r3 = D(r3, s[0][1][0], 0xE8F5FFFD, 0x0C09FF13, 0xEFF41F13, 0x18F4FA05);
	r4 = D(r4, s[0][1][0], 0x00FDFDEC, 0x010CF3F1, 0xDFE002FD, 0x14F90F02);
	r5 = D(r5, s[0][1][0], 0x01F6F503, 0xF10DF702, 0x12F3F50C, 0x09000C01);
	r6 = D(r6, s[0][1][0], 0x01FEF2EB, 0xFC120EEA, 0x041AFBFB, 0x070DFBF8);
	r7 = D(r7, s[0][1][0], 0xE9190201, 0x061A0805, 0x06FC02E5, 0xCA02020B);
	r0 = D(r0, s[0][1][1], 0x01030B10, 0x00061104, 0x0609F802, 0x03FB1CFE);
	r1 = D(r1, s[0][1][1], 0x0B0CF8F5, 0xE1EE0EFC, 0x030007F8, 0x10F61809);
	r2 = D(r2, s[0][1][1], 0xF3FA0DF2, 0xC402E9EA, 0x05FE110D, 0xF6DDFAF3);
	r3 = D(r3, s[0][1][1], 0x0FED0FF3, 0xFEF30008, 0x1AEFFF13, 0x1AFDF604);
	r4 = D(r4, s[0][1][1], 0xD9F4F0F9, 0x0CE8FDFD, 0xFE07FEFB, 0x060A0315);
	r5 = D(r5, s[0][1][1], 0xF70D04F3, 0xFEEAF6E3, 0xFDE10807, 0x00FC1004);
	r6 = D(r6, s[0][1][1], 0x04080705, 0x1B06FB1F, 0xF30526E0, 0xE9FE0CDD);
	r7 = D(r7, s[0][1][1], 0x0F040C0E, 0x0D071C06, 0xF8FEE4FE, 0xEEF7FCF6);
	r0 = D(r0, s[0][1][2], 0xF20A1CE5, 0xDFED191D, 0x0CF501FD, 0x16EFF8EB);
	r1 = D(r1, s[0][1][2], 0xD604F90E, 0xEAFA05F9, 0x03131805, 0x1C12EEFF);
	r2 = D(r2, s[0][1][2], 0x04FFFBFF, 0x060613EF, 0xF8040EFE, 0xF900F6FE);
	r3 = D(r3, s[0][1][2], 0x10131709, 0x05FFF916, 0x0803F8FC, 0xFAFE09F6);
	r4 = D(r4, s[0][1][2], 0xE7F4EA11, 0x080502FD, 0xD801FFFD, 0xF3150CF1);
	r5 = D(r5, s[0][1][2], 0x020212FD, 0x0812FF00, 0xF6F50BF7, 0x0DFB0300);
	r6 = D(r6, s[0][1][2], 0x060A04FD, 0x0E0DCD08, 0xE9EC000A, 0x1113FB0F);
	r7 = D(r7, s[0][1][2], 0xF9060CF4, 0x020D070D, 0x0000040A, 0xEE2312FD);
	r0 = D(r0, s[0][2][0], 0x1A0822E6, 0xFE05090A, 0x0601FEF8, 0xFA0B00F2);
	r1 = D(r1, s[0][2][0], 0xF400F7FE, 0xF110E90A, 0x0CF70106, 0xFAF5F7F9);
	r2 = D(r2, s[0][2][0], 0x10FBEA14, 0xE0EF2E07, 0xF40106F8, 0xEF1FF8F6);
	r3 = D(r3, s[0][2][0], 0x0F0C05FA, 0x00FAFB09, 0x0FFFF5FA, 0x00FA0606);
	r4 = D(r4, s[0][2][0], 0x0301FAF9, 0xF408F6EE, 0x10F80DEA, 0x1309FFEF);
	r5 = D(r5, s[0][2][0], 0x02F8F7F7, 0xF5030D02, 0x101AF012, 0xEA070103);
	r6 = D(r6, s[0][2][0], 0x00FCF6FC, 0x09061614, 0xF5F219EB, 0xE112F9FF);
	r7 = D(r7, s[0][2][0], 0x14EE00DE, 0x210F1F0E, 0x01120AFD, 0x160207F7);
	r0 = D(r0, s[0][2][1], 0xE3070401, 0x04F702FB, 0x010602FF, 0xFF13FFFF);
	r1 = D(r1, s[0][2][1], 0x19F5EC0B, 0xE808FA07, 0x0B0CFDFD, 0x030216E0);
	r2 = D(r2, s[0][2][1], 0xEC0BEBF1, 0x02F4F8E7, 0xFE01F9F3, 0x20D9040B);
	r3 = D(r3, s[0][2][1], 0xF7FBF8F3, 0xFCEDEC00, 0xF6F1F606, 0x0F08EB06);
	r4 = D(r4, s[0][2][1], 0xFAFCEB15, 0xF7FD070B, 0x09FFFF0B, 0xDBF8F203);
	r5 = D(r5, s[0][2][1], 0x16FD0600, 0xFEFDF6FF, 0xB3F1EC06, 0x03FA0A0E);
	r6 = D(r6, s[0][2][1], 0x0C0AF201, 0xF6F511E8, 0x120D1303, 0xF200F124);
	r7 = D(r7, s[0][2][1], 0x1CEBDEF3, 0x15DE3907, 0x01F4FD11, 0xF0FEF904);
	r0 = D(r0, s[0][2][2], 0x160AFBED, 0xFAEBFAFB, 0x010D00FF, 0x0D03FAF5);
	r1 = D(r1, s[0][2][2], 0x04EE02FD, 0x0AFA0016, 0x030B030D, 0xF80CECF2);
	r2 = D(r2, s[0][2][2], 0x0DEDFA17, 0xEF06200B, 0x03FD1D04, 0x0C15130F);
	r3 = D(r3, s[0][2][2], 0x1109000B, 0x02EFF1F4, 0xF2FEEAF6, 0x1BF7FDF9);
	r4 = D(r4, s[0][2][2], 0xE7EFE228, 0xFB07F505, 0x0C0A0906, 0xF2291A1D);
	r5 = D(r5, s[0][2][2], 0xF7FB1100, 0xF20203EC, 0xFB0207ED, 0x040708FA);
	r6 = D(r6, s[0][2][2], 0xFFFFF1E5, 0x29F9E51C, 0x0504B5FF, 0xD802E300);
	r7 = D(r7, s[0][2][2], 0x0B00ED13, 0x11F6120E, 0xF9FDE807, 0xFAFB1A0E);
	r0 = D(r0, s[1][0][0], 0xF613ED11, 0xF4FEF003, 0x02020602, 0x0408FD01);
	r1 = D(r1, s[1][0][0], 0x03FE01EE, 0xFE0BE509, 0xFEFF0FEF, 0xFC0A16FB);
	r2 = D(r2, s[1][0][0], 0xEEF601F6, 0x1415F6FC, 0xEC0910DA, 0x06FD0AF8);
	r3 = D(r3, s[1][0][0], 0x1509EB02, 0xFDFFF7FC, 0xF9FEF408, 0x0801FE02);
	r4 = D(r4, s[1][0][0], 0x0510FA0C, 0xEBF40BE9, 0x05F5F5FF, 0x05ECFFEF);
	r5 = D(r5, s[1][0][0], 0x0DFA10F8, 0x040DDB16, 0xFEED010A, 0x13000A06);
	r6 = D(r6, s[1][0][0], 0x06FBF7FD, 0x0AF8F8F7, 0x08FDFE01, 0x05FC220C);
	r7 = D(r7, s[1][0][0], 0x02F6F916, 0xF9E70720, 0xF5020EFC, 0x0A111200);
	r0 = D(r0, s[1][0][1], 0x2307FD06, 0x34F0220D, 0x0204FB09, 0x0CEB000E);
	r1 = D(r1, s[1][0][1], 0xFB06EC04, 0x13E82600, 0x10FE0E05, 0x15F7ED03);
	r2 = D(r2, s[1][0][1], 0x03FAF615, 0x13E6E817, 0xE5FDF8F4, 0x07030309);
	r3 = D(r3, s[1][0][1], 0xFA00EA00, 0xE90103FB, 0xEE200304, 0x060B05DA);
	r4 = D(r4, s[1][0][1], 0x01EC0EF3, 0xF0EA0F01, 0x0106E907, 0x03F6020E);
	r5 = D(r5, s[1][0][1], 0x00FC2419, 0x0FF9FF04, 0x09EC06F8, 0x0FF90705);
	r6 = D(r6, s[1][0][1], 0xF602EDF7, 0x060E05FF, 0xFBF9F3FC, 0xF51807FF);
	r7 = D(r7, s[1][0][1], 0xF5011D0B, 0x1914FB01, 0x050BF619, 0x07FF1C16);
	r0 = D(r0, s[1][0][2], 0x0014F5F6, 0xE8FAFBEB, 0x010805FB, 0x0AFB10F2);
	r1 = D(r1, s[1][0][2], 0xF2F4FFF8, 0xFE020520, 0x0A14FBFD, 0x1014ED06);
	r2 = D(r2, s[1][0][2], 0xEE070B07, 0x10170F02, 0x03F401F3, 0x1B04EF15);
	r3 = D(r3, s[1][0][2], 0xFAF5F702, 0xF1EFFE00, 0xFBF507F9, 0x18FE06F1);
	r4 = D(r4, s[1][0][2], 0xFB110804, 0xFDF00700, 0xF8E6E7D6, 0x0303FAEC);
	r5 = D(r5, s[1][0][2], 0x0405ED12, 0xF90104F9, 0xEBF1010C, 0xF310F3F6);
	r6 = D(r6, s[1][0][2], 0x050904FF, 0x13F9FAF0, 0x04F911E5, 0xF1F617FF);
	r7 = D(r7, s[1][0][2], 0x050DF806, 0xFC07E8FE, 0xF4E6FAFA, 0xFA1EF521);
	r0 = D(r0, s[1][1][0], 0xF109F6FC, 0xFF110A0F, 0x09F7FA01, 0x010AFD05);
	r1 = D(r1, s[1][1][0], 0xFBFBEAFE, 0x1115F012, 0x0008F806, 0x02F6F3F3);
	r2 = D(r2, s[1][1][0], 0xFE0CC4F5, 0x1A13FDFD, 0xFA010001, 0x0EFD1011);
	r3 = D(r3, s[1][1][0], 0x0902FC09, 0x01FA0301, 0xF70800EE, 0xFD05FA09);
	r4 = D(r4, s[1][1][0], 0xFA060405, 0x1313F306, 0xD101EB03, 0xFD11090B);
	r5 = D(r5, s[1][1][0], 0x06F5F60E, 0xF8FA0A10, 0x12FD04F5, 0x01F804FB);
	r6 = D(r6, s[1][1][0], 0x0BFDF610, 0x00DCDEF0, 0xF0141B0A, 0xEEFD09F4);
	r7 = D(r7, s[1][1][0], 0xFD170FDF, 0xEEE8E5EB, 0x03011508, 0xF503FD12);
	r0 = D(r0, s[1][1][1], 0xFD0811F9, 0x02C10BFE, 0x070FF8F6, 0xF60700FF);
	r1 = D(r1, s[1][1][1], 0x0E20F4FB, 0x2010E8FC, 0x1A1BF209, 0xD501DE11);
	r2 = D(r2, s[1][1][1], 0x08F61306, 0x0BEB01F2, 0xF6F2DCFA, 0x01F8F2F3);
	r3 = D(r3, s[1][1][1], 0x0902E7EE, 0xF90B0507, 0xFFF3F5FF, 0x1002E212);
	r4 = D(r4, s[1][1][1], 0x09F3DCE8, 0x0707EF0F, 0x02FB110E, 0xEE0AFE06);
	r5 = D(r5, s[1][1][1], 0x060FFAF9, 0x16FEFFFA, 0x070CF2FF, 0x0AFD0EF6);
	r6 = D(r6, s[1][1][1], 0xFB0CFD0A, 0xFDF30404, 0xE305001C, 0xFBFB13FE);
	r7 = D(r7, s[1][1][1], 0xFA0209E0, 0x0D0901E0, 0x0305F3FB, 0xF0FDFDF1);
	r0 = D(r0, s[1][1][2], 0xF3EAFC0A, 0x21EB1624, 0x05FDFA07, 0xFC01F4F2);
	r1 = D(r1, s[1][1][2], 0xDEE4FF18, 0x0BED17FF, 0xFB02F506, 0x10FC01FB);
	r2 = D(r2, s[1][1][2], 0xF6FC0D05, 0x1712E212, 0xEE02C40B, 0x2A13F0F5);
	r3 = D(r3, s[1][1][2], 0x06EFF1F9, 0x12F9F7EF, 0xF4F90413, 0x1406F70B);
	r4 = D(r4, s[1][1][2], 0x0B0520FF, 0xF4E80201, 0x02FDF8E2, 0xFDF00AF7);
	r5 = D(r5, s[1][1][2], 0x00F41613, 0xE90D1F0E, 0x0B0F11F7, 0xFF0CFE05);
	r6 = D(r6, s[1][1][2], 0xF60D06FA, 0x1404FEF1, 0xE41D10F2, 0xF9F6F9F2);
	r7 = D(r7, s[1][1][2], 0x0F0632D9, 0xD4191A06, 0xFFF5E502, 0x010516F2);
	r0 = D(r0, s[1][2][0], 0xFA041916, 0xFA02EEF6, 0x03FE00FF, 0x05F4FC0E);
	r1 = D(r1, s[1][2][0], 0x19EEEE0C, 0x0D03F209, 0xF0F5EE0D, 0xFF0A09FC);
	r2 = D(r2, s[1][2][0], 0xF2000512, 0xF902F8FA, 0xFB0B0DF9, 0xDA091DFF);
	r3 = D(r3, s[1][2][0], 0x1CF7FFFE, 0x010BFD0C, 0x17F1FBF9, 0xF90003E9);
	r4 = D(r4, s[1][2][0], 0xFEF3160C, 0x0402020A, 0xEE1404ED, 0x090AFCF8);
	r5 = D(r5, s[1][2][0], 0x08040104, 0xE703F412, 0x0DEBEE00, 0xF7F60BF9);
	r6 = D(r6, s[1][2][0], 0x02FF0106, 0x07FBF4E4, 0x11060721, 0xF3FDE1FC);
	r7 = D(r7, s[1][2][0], 0xFE05FBE6, 0xFBF7150B, 0xD71502F1, 0xF40D13FF);
	r0 = D(r0, s[1][2][1], 0x09FBF3CD, 0xFA0FF1E5, 0x090EFAF9, 0x0BEFFC1B);
	r1 = D(r1, s[1][2][1], 0x180BF8FF, 0xFA0B1DF5, 0x12EDDB13, 0xFBEFF9FC);
	r2 = D(r2, s[1][2][1], 0xFA10ED1D, 0x0106F6FC, 0xF4F2FFEB, 0xFF05FD0C);
	r3 = D(r3, s[1][2][1], 0x0A00F402, 0xF602FEFA, 0xF90F02FF, 0xEFF4D70C);
	r4 = D(r4, s[1][2][1], 0xFD020313, 0x0D1D0C0B, 0x0B080E12, 0x0202D4FE);
	r5 = D(r5, s[1][2][1], 0xFC1312F7, 0x0709F40B, 0x16020305, 0x12F806FF);
	r6 = D(r6, s[1][2][1], 0xFBF4F5F0, 0x0011E80D, 0xF0F3D8EC, 0x1BFDF907);
	r7 = D(r7, s[1][2][1], 0xF9F6111C, 0xFADEE515, 0x04080629, 0xE311F40A);
	r0 = D(r0, s[1][2][2], 0xF7070302, 0x02130A0F, 0xF9070500, 0xDE22F80C);
	r1 = D(r1, s[1][2][2], 0x06160DF1, 0x07F10911, 0xF4EE1205, 0x0A0CFF13);
	r2 = D(r2, s[1][2][2], 0x17FEF3FE, 0xFF03B902, 0xF7F60007, 0x06FF0D0F);
	r3 = D(r3, s[1][2][2], 0xF7F209F6, 0xFB02F710, 0xF30E08F7, 0xEE09EE1D);
	r4 = D(r4, s[1][2][2], 0xD016E7F4, 0x0E05F4FE, 0x0313F912, 0xFDFC04EC);
	r5 = D(r5, s[1][2][2], 0x08FD04FF, 0x080F0301, 0x11F5EF0D, 0xFC06F00B);
	r6 = D(r6, s[1][2][2], 0xF7F4F7FE, 0xF413FF02, 0xC0C9D1D1, 0xF50B09F7);
	r7 = D(r7, s[1][2][2], 0xEB0511F0, 0xF004E70A, 0xD2F2F80D, 0x07060716);
	f0 = vec4(r0) * 6.20001240e-05;
	f0 += vec4(-2.740e-02, -3.237e-02, 2.393e-02, -1.985e-02);
	f0 = max(f0, vec4(0.0));
	imageStore(out_image, opos + ivec2(4, 0), f0);
	f1 = vec4(r1) * 6.20001240e-05;
	f1 += vec4(-2.385e-02, 1.545e-02, -1.434e-02, -3.610e-03);
	f1 = max(f1, vec4(0.0));
	imageStore(out_image, opos + ivec2(5, 0), f1);
	f2 = vec4(r2) * 6.20001240e-05;
	f2 += vec4(1.910e-02, 8.247e-03, -1.679e-02, 4.232e-02);
	f2 = max(f2, vec4(0.0));
	imageStore(out_image, opos + ivec2(4, 1), f2);
	f3 = vec4(r3) * 6.20001240e-05;
	f3 += vec4(-5.650e-03, 3.789e-02, -3.285e-02, 3.540e-02);
	f3 = max(f3, vec4(0.0));
	imageStore(out_image, opos + ivec2(5, 1), f3);
	f4 = vec4(r4) * 6.20001240e-05;
	f4 += vec4(2.338e-02, -1.366e-02, -5.084e-03, -1.740e-02);
	f4 = max(f4, vec4(0.0));
	imageStore(out_image, opos + ivec2(6, 0), f4);
	f5 = vec4(r5) * 6.20001240e-05;
	f5 += vec4(-1.820e-02, -1.230e-02, -1.172e-04, 2.145e-02);
	f5 = max(f5, vec4(0.0));
	imageStore(out_image, opos + ivec2(7, 0), f5);
	f6 = vec4(r6) * 6.20001240e-05;
	f6 += vec4(-1.864e-02, -2.331e-03, -9.819e-03, 9.815e-03);
	f6 = max(f6, vec4(0.0));
	imageStore(out_image, opos + ivec2(6, 1), f6);
	f7 = vec4(r7) * 6.20001240e-05;
	f7 += vec4(-9.156e-02, 3.528e-02, -2.476e-02, 1.626e-02);
	f7 = max(f7, vec4(0.0));
	imageStore(out_image, opos + ivec2(7, 1), f7);
}

//!DESC CuNNy-4x64-BILINEAR-TEST-conv3
//!HOOK LUMA
//!COMPUTE 64 16 8 8
//!BIND conv2
//!BIND LUMA
//!SAVE conv3
//!WIDTH LUMA.w 8 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_spirv_intrinsics : require
#extension GL_EXT_control_flow_attributes : require
spirv_instruction (extensions = ["SPV_KHR_integer_dot_product"], capabilities = [6019, 6018], id = 4450)
int dp4(int a, int b, spirv_literal int fmt);
#define D(r, s, a, b, c, d) ivec4(r.x + dp4(s, a, 0), r.y + dp4(s, b, 0), r.z + dp4(s, c, 0), r.w + dp4(s, d, 0))
shared int G[16][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(8, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			vec4 r, g, b, a;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(8, 2) + ivec2(1, 1)) * conv2_pt;
			r = conv2_gather(p, 0);
			g = conv2_gather(p, 1);
			b = conv2_gather(p, 2);
			a = conv2_gather(p, 3);
			vec4 v0 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v1 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v2 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v3 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(8, 2) + ivec2(3, 1)) * conv2_pt;
			r = conv2_gather(p, 0);
			g = conv2_gather(p, 1);
			b = conv2_gather(p, 2);
			a = conv2_gather(p, 3);
			vec4 v4 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v5 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v6 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v7 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(8, 2) + ivec2(5, 1)) * conv2_pt;
			r = conv2_gather(p, 0);
			g = conv2_gather(p, 1);
			b = conv2_gather(p, 2);
			a = conv2_gather(p, 3);
			vec4 v8 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v9 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v10 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v11 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(8, 2) + ivec2(7, 1)) * conv2_pt;
			r = conv2_gather(p, 0);
			g = conv2_gather(p, 1);
			b = conv2_gather(p, 2);
			a = conv2_gather(p, 3);
			vec4 v12 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v13 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v14 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v15 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			G[0][ay][ax] = int(packSnorm4x8(v0));
			G[1][ay][ax] = int(packSnorm4x8(v1));
			G[2][ay][ax] = int(packSnorm4x8(v2));
			G[3][ay][ax] = int(packSnorm4x8(v3));
			G[4][ay][ax] = int(packSnorm4x8(v4));
			G[5][ay][ax] = int(packSnorm4x8(v5));
			G[6][ay][ax] = int(packSnorm4x8(v6));
			G[7][ay][ax] = int(packSnorm4x8(v7));
			G[8][ay][ax] = int(packSnorm4x8(v8));
			G[9][ay][ax] = int(packSnorm4x8(v9));
			G[10][ay][ax] = int(packSnorm4x8(v10));
			G[11][ay][ax] = int(packSnorm4x8(v11));
			G[12][ay][ax] = int(packSnorm4x8(v12));
			G[13][ay][ax] = int(packSnorm4x8(v13));
			G[14][ay][ax] = int(packSnorm4x8(v14));
			G[15][ay][ax] = int(packSnorm4x8(v15));
		}
	}
	barrier();
	int s[2][3][3];
	ivec4 r0;
	ivec4 r1;
	ivec4 r2;
	ivec4 r3;
	ivec4 r4;
	ivec4 r5;
	ivec4 r6;
	ivec4 r7;
	vec4 f0;
	vec4 f1;
	vec4 f2;
	vec4 f3;
	vec4 f4;
	vec4 f5;
	vec4 f6;
	vec4 f7;
	r0 = ivec4(0);
	r1 = ivec4(0);
	r2 = ivec4(0);
	r3 = ivec4(0);
	r4 = ivec4(0);
	r5 = ivec4(0);
	r6 = ivec4(0);
	r7 = ivec4(0);
	s[0][0][0] = G[0][xy.y+0][xy.x+0]; s[0][0][1] = G[0][xy.y+0][xy.x+1];
	s[0][0][2] = G[0][xy.y+0][xy.x+2]; s[0][1][0] = G[0][xy.y+1][xy.x+0];
	s[0][1][1] = G[0][xy.y+1][xy.x+1]; s[0][1][2] = G[0][xy.y+1][xy.x+2];
	s[0][2][0] = G[0][xy.y+2][xy.x+0]; s[0][2][1] = G[0][xy.y+2][xy.x+1];
	s[0][2][2] = G[0][xy.y+2][xy.x+2]; s[1][0][0] = G[1][xy.y+0][xy.x+0];
	s[1][0][1] = G[1][xy.y+0][xy.x+1]; s[1][0][2] = G[1][xy.y+0][xy.x+2];
	s[1][1][0] = G[1][xy.y+1][xy.x+0]; s[1][1][1] = G[1][xy.y+1][xy.x+1];
	s[1][1][2] = G[1][xy.y+1][xy.x+2]; s[1][2][0] = G[1][xy.y+2][xy.x+0];
	s[1][2][1] = G[1][xy.y+2][xy.x+1]; s[1][2][2] = G[1][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x030012F3, 0xFC0E0DFB, 0x15F21B01, 0x07020810);
	r1 = D(r1, s[0][0][0], 0xFF071001, 0xF4FD0606, 0x03FCF2FB, 0xF1010500);
	r2 = D(r2, s[0][0][0], 0xFF0810FE, 0xFE05F917, 0xFFF1F4F6, 0xFD0204F1);
	r3 = D(r3, s[0][0][0], 0x09F0F303, 0x12F4030A, 0x06000D00, 0xFCFA0010);
	r4 = D(r4, s[0][0][0], 0xFFF6F5FB, 0x0502F4FC, 0x23F5C7FB, 0x1C03FB0C);
	r5 = D(r5, s[0][0][0], 0x03ECE711, 0xFFF5FF12, 0x0BFF10EE, 0xFD010202);
	r6 = D(r6, s[0][0][0], 0x13F8E8F4, 0xFCFEEB17, 0xFE040812, 0x1E09F616);
	r7 = D(r7, s[0][0][0], 0xEAF6EFF0, 0xF90BF60C, 0x04090E0E, 0x00D501E6);
	r0 = D(r0, s[0][0][1], 0x0106EE00, 0xF0F4FE01, 0xFFEFFB04, 0xFE07070A);
	r1 = D(r1, s[0][0][1], 0xF5FB0300, 0x08F8050B, 0x10F9FEFD, 0x06090D02);
	r2 = D(r2, s[0][0][1], 0xFA01F3F9, 0x01F7FAFB, 0xDB04F409, 0x0BF907FE);
	r3 = D(r3, s[0][0][1], 0x00F907F8, 0x03D8FBFB, 0xFEF9F904, 0x050404F5);
	r4 = D(r4, s[0][0][1], 0x04200912, 0xFFFE12F6, 0xEBE6F5FA, 0x0206F200);
	r5 = D(r5, s[0][0][1], 0xFC05FDF9, 0xF3120004, 0x0BF415F9, 0x03F908FE);
	r6 = D(r6, s[0][0][1], 0xFEFCF2EE, 0x02F50509, 0x06011E03, 0x03000DE9);
	r7 = D(r7, s[0][0][1], 0xF40712F0, 0xED05E508, 0x1AFAEDFE, 0xF202FBF8);
	r0 = D(r0, s[0][0][2], 0xFDEDECF3, 0x06FB06F0, 0x07010C06, 0x110508FC);
	r1 = D(r1, s[0][0][2], 0x0C110706, 0x0BFCF008, 0x0A09F7F3, 0x0000FD06);
	r2 = D(r2, s[0][0][2], 0xF4020FEE, 0x0804FF05, 0x171503FC, 0x03FEF806);
	r3 = D(r3, s[0][0][2], 0xFDEEF6F5, 0x08EA09EE, 0x03F1F901, 0xF4FC0313);
	r4 = D(r4, s[0][0][2], 0x0CFB0713, 0x0FFA0904, 0x0B03FAFF, 0x0EFD04DD);
	r5 = D(r5, s[0][0][2], 0x10F9FEF0, 0x0104060E, 0xF3F60201, 0x0309FA04);
	r6 = D(r6, s[0][0][2], 0xF5110DFF, 0x17F5FF04, 0x19F6F104, 0xEF001D02);
	r7 = D(r7, s[0][0][2], 0xFCE716CC, 0xE4F7FCFA, 0xFFF4FEDB, 0xEF00FFF4);
	r0 = D(r0, s[0][1][0], 0x0D0708F3, 0x0205E8EF, 0xF702E6FA, 0x08030308);
	r1 = D(r1, s[0][1][0], 0xFC0D06F9, 0x0A07F6FC, 0x22F8DA00, 0x040C15F4);
	r2 = D(r2, s[0][1][0], 0x070EE7F9, 0x120AFBF3, 0x0CFFF509, 0xEDFE09FE);
	r3 = D(r3, s[0][1][0], 0xFC02F000, 0x03DEFFF2, 0x01FB1403, 0xF109F0FB);
	r4 = D(r4, s[0][1][0], 0x0301040E, 0xF602250D, 0xFE1083E0, 0x0C070608);
	r5 = D(r5, s[0][1][0], 0xFD0B00FF, 0x0CFA0001, 0xF30C1205, 0x00090D08);
	r6 = D(r6, s[0][1][0], 0x07FBECFC, 0x090804FD, 0xFE022520, 0xE221EFF9);
	r7 = D(r7, s[0][1][0], 0x0AF82C17, 0xFB16E10D, 0xFA00060D, 0x020919FB);
	r0 = D(r0, s[0][1][1], 0xF71A05F9, 0xF6F4E5FB, 0x0400EF0A, 0x12FBFAF8);
	r1 = D(r1, s[0][1][1], 0x00F8EBF1, 0xFFF602F6, 0x0409F6EB, 0xFD1906F0);
	r2 = D(r2, s[0][1][1], 0x140C0CF6, 0x04FD1BED, 0xEF0CFAB2, 0xFBECF8EC);
	r3 = D(r3, s[0][1][1], 0x1102F604, 0x02CB16F1, 0x0F05EF03, 0xF8F203FC);
	r4 = D(r4, s[0][1][1], 0x07EDEC08, 0x09F2EAFC, 0x0DF8EEF7, 0xF10DEBF3);
	r5 = D(r5, s[0][1][1], 0xECFD07FA, 0x020DE7F9, 0xE0E8100B, 0xFCF9EF06);
	r6 = D(r6, s[0][1][1], 0xFCF5EAF7, 0xF40A0703, 0x17058AF7, 0xF0F509E7);
	r7 = D(r7, s[0][1][1], 0xF7F8E414, 0x15F64D0C, 0x09FFB108, 0xFDFAE313);
	r0 = D(r0, s[0][1][2], 0x1600F6FD, 0xFEFCEFEF, 0x080E01FC, 0x0D09F908);
	r1 = D(r1, s[0][1][2], 0x0006EFF9, 0xF9F9F903, 0xEB090CFA, 0xF3F50A06);
	r2 = D(r2, s[0][1][2], 0x01FD03F5, 0x0AF801F6, 0x0CFE12E1, 0x03ECF4FF);
	r3 = D(r3, s[0][1][2], 0xF003F3F5, 0x10CCF7EF, 0x00F8FC01, 0xFD040004);
	r4 = D(r4, s[0][1][2], 0x06FFFEE6, 0xF5F809F9, 0x0C08F8FA, 0xFDFAF316);
	r5 = D(r5, s[0][1][2], 0xF8E815E3, 0x0A0EFBFB, 0xF30302EE, 0x0506FD00);
	r6 = D(r6, s[0][1][2], 0xF31707F3, 0xEC03FD07, 0xEE32F7CD, 0xF1DB100D);
	r7 = D(r7, s[0][1][2], 0xE8FD10F1, 0x1EF10C08, 0x05FFEDDE, 0xFFFBE508);
	r0 = D(r0, s[0][2][0], 0xECFBF0FA, 0x1216F8FF, 0xF3F6F2FE, 0xFA061102);
	r1 = D(r1, s[0][2][0], 0x00F60F09, 0x0304F901, 0xF8ECFFFC, 0xF5FAF9F4);
	r2 = D(r2, s[0][2][0], 0x020103FA, 0x04070C0E, 0xF4F4F816, 0x050DEC07);
	r3 = D(r3, s[0][2][0], 0xFFF1FC12, 0x14DD0813, 0xEF050006, 0xF203E905);
	r4 = D(r4, s[0][2][0], 0xFE120903, 0xFAFBFF08, 0xFDFAE60B, 0x0E0AF710);
	r5 = D(r5, s[0][2][0], 0xF2F30BFE, 0xFEF8FA05, 0x010C1705, 0xFD070203);
	r6 = D(r6, s[0][2][0], 0x1CFB1207, 0xE3FD0308, 0xE0FCED0D, 0xED05C306);
	r7 = D(r7, s[0][2][0], 0x0E020107, 0xDE161B05, 0xF5F509F5, 0x0001050A);
	r0 = D(r0, s[0][2][1], 0x0AFDDF00, 0x06FD03F5, 0x000CF003, 0x02F907F8);
	r1 = D(r1, s[0][2][1], 0x06FBF9F9, 0xF5F00E0A, 0x01FAEE01, 0x00FD05FA);
	r2 = D(r2, s[0][2][1], 0x08000D06, 0x02FC10F5, 0xF8010AFC, 0xFEFAF703);
	r3 = D(r3, s[0][2][1], 0x06F90A01, 0x0501F6EE, 0x02FE02FE, 0xFEF9ED00);
	r4 = D(r4, s[0][2][1], 0xF7FFF7F9, 0x0217FBF4, 0xFCFCF709, 0xF1060C04);
	r5 = D(r5, s[0][2][1], 0x03FBF303, 0xFCFC0A04, 0x15FE12FA, 0x05FA0001);
	r6 = D(r6, s[0][2][1], 0xD9DF0113, 0x1E21C8FC, 0x14FBFAF4, 0x0A2B0AF9);
	r7 = D(r7, s[0][2][1], 0x0503F0FA, 0x0FF1E5F0, 0x0008E102, 0xEE041807);
	r0 = D(r0, s[0][2][2], 0xF701FCF5, 0x10000404, 0x0504FCFF, 0xFC070D01);
	r1 = D(r1, s[0][2][2], 0x00F8F204, 0x0500FBE8, 0x12FFF202, 0xFB04FA01);
	r2 = D(r2, s[0][2][2], 0x07010CF7, 0xFD080C10, 0x0502F10A, 0xF2E6EB02);
	r3 = D(r3, s[0][2][2], 0x00FA0300, 0x0CFEF6F6, 0xFEF8F608, 0xF9F0F401);
	r4 = D(r4, s[0][2][2], 0xFDF805FB, 0xFD09F2F8, 0x1610F5F7, 0x100D08EE);
	r5 = D(r5, s[0][2][2], 0x050D1902, 0xF5FD01F3, 0xECEF03FB, 0x04FD00FF);
	r6 = D(r6, s[0][2][2], 0x0F04F305, 0x1302FAFC, 0xF7E00302, 0x0F17DF1D);
	r7 = D(r7, s[0][2][2], 0x0BF1E309, 0x0CECF80A, 0x0DF904F0, 0x02FA0902);
	r0 = D(r0, s[1][0][0], 0xFF08FDFE, 0x04F4F80A, 0xFD17EBF2, 0x09FE0B03);
	r1 = D(r1, s[1][0][0], 0x0408F002, 0x0909FD03, 0x0003040F, 0x1007F50D);
	r2 = D(r2, s[1][0][0], 0xFA0B17EB, 0x0009FFF7, 0xF707F8FC, 0x0E0201F9);
	r3 = D(r3, s[1][0][0], 0xF8FB02F1, 0xF311EDE4, 0x0AFAF805, 0xF7EE0CF5);
	r4 = D(r4, s[1][0][0], 0x0DF3F3F5, 0xEEDEF40C, 0x03EEF5F6, 0x11F6FB1B);
	r5 = D(r5, s[1][0][0], 0x0E180316, 0x0008FF13, 0xF6F4FF21, 0xFEFF03FB);
	r6 = D(r6, s[1][0][0], 0x040BFEF1, 0xFCF508FB, 0x19AEEA20, 0x09E707F0);
	r7 = D(r7, s[1][0][0], 0x09F5E61D, 0xF90F15F3, 0x0AFF040A, 0x0DEFF7FC);
	r0 = D(r0, s[1][0][1], 0x0E0E0206, 0xF4EBF2F6, 0xFEE60B06, 0x00060B07);
	r1 = D(r1, s[1][0][1], 0xFEFCFB05, 0x01F7050A, 0x06FDFB02, 0x01EEF5F4);
	r2 = D(r2, s[1][0][1], 0xFBF2FF04, 0xFDFF0900, 0xF307E50D, 0xFDFB1117);
	r3 = D(r3, s[1][0][1], 0xF0F70F03, 0xE8E1CDEE, 0x08FF0704, 0x06FB09F2);
	r4 = D(r4, s[1][0][1], 0xF7FBFAE5, 0x0C01FC07, 0x07FDFA0B, 0xF31501FB);
	r5 = D(r5, s[1][0][1], 0x0124F409, 0x10FAF301, 0x091603E8, 0xFEFB0703);
	r6 = D(r6, s[1][0][1], 0xDEFFEE1B, 0xF8130BDB, 0xE7F8CFFC, 0xEC070E10);
	r7 = D(r7, s[1][0][1], 0x071EE719, 0x17020DFC, 0x06ECF301, 0x0009F8E8);
	r0 = D(r0, s[1][0][2], 0xF6F7F6EF, 0x00EAF9F0, 0x0A04FA09, 0xFDF406EF);
	r1 = D(r1, s[1][0][2], 0xFD0BF503, 0xFA0EFB10, 0x110A03EB, 0xFEFDF535);
	r2 = D(r2, s[1][0][2], 0x00FE01EB, 0x080501F5, 0x1309FDFE, 0xF9F0F70A);
	r3 = D(r3, s[1][0][2], 0xF6090814, 0xE406DDDD, 0xFC04FDF0, 0xFB06E916);
	r4 = D(r4, s[1][0][2], 0x020F091A, 0xFAF502EB, 0xFE15FC0E, 0x1AFC0214);
	r5 = D(r5, s[1][0][2], 0xFF060D14, 0x0A01FCEA, 0xF5F50505, 0x010AFC04);
	r6 = D(r6, s[1][0][2], 0xF7300CFB, 0xEBFBFB1F, 0xF420D3E6, 0xF205000D);
	r7 = D(r7, s[1][0][2], 0xF70B02FE, 0xE1EAE409, 0xF605FEF8, 0xEF14F105);
	r0 = D(r0, s[1][1][0], 0x03FBF3F2, 0x05F1EEFB, 0xF60CF7E3, 0xFFFBFA09);
	r1 = D(r1, s[1][1][0], 0x07F8FF15, 0xF903F40F, 0x0C05F800, 0xFF080106);
	r2 = D(r2, s[1][1][0], 0xF707F6EF, 0x0907F610, 0x02F80BEE, 0xFBFFF0F8);
	r3 = D(r3, s[1][1][0], 0x00F4FFFE, 0xF5FFE3FF, 0x050B0503, 0xEDEC12D6);
	r4 = D(r4, s[1][1][0], 0xF5030301, 0xFDF60305, 0xFCFDFCD9, 0x00F50A09);
	r5 = D(r5, s[1][1][0], 0x09F70EFD, 0xFFF3F402, 0xF90D07EC, 0xFBF703F8);
	r6 = D(r6, s[1][1][0], 0xDCE70AF7, 0x0DF916FD, 0x1CF11F10, 0xED0CFAF4);
	r7 = D(r7, s[1][1][0], 0x0EF9FA29, 0xECE705E7, 0x12080806, 0x11FAE8FC);
	r0 = D(r0, s[1][1][1], 0x01FA0910, 0x080BFCED, 0xF4FD000E, 0xFD030FF3);
	r1 = D(r1, s[1][1][1], 0x03080422, 0xEE0B05F4, 0x03E7E9E9, 0xFD0CFFF0);
	r2 = D(r2, s[1][1][1], 0x0D00F316, 0xF70F09F3, 0xFE01F5FF, 0xF10CF80B);
	r3 = D(r3, s[1][1][1], 0x0900FBFF, 0x06F6CDF7, 0x05F8F005, 0x13F703F8);
	r4 = D(r4, s[1][1][1], 0xFFF7F8EC, 0xFA0506F8, 0xF7FCE5ED, 0xFAFCF4F7);
	r5 = D(r5, s[1][1][1], 0x04F208FF, 0x14FCFB02, 0xEEF3FF06, 0x000A0903);
	r6 = D(r6, s[1][1][1], 0x1C0BEC0C, 0xF508F7E9, 0x110E1627, 0xFA0BEEF9);
	r7 = D(r7, s[1][1][1], 0xFDF506F0, 0x1204FC04, 0xFEF2F510, 0x03F8FF3A);
	r0 = D(r0, s[1][1][2], 0x10FF1606, 0x02FB06FD, 0x020AFB0E, 0x02FFF9FF);
	r1 = D(r1, s[1][1][2], 0xFC030315, 0xFE00F3FE, 0x1AF20006, 0xF9F109A7);
	r2 = D(r2, s[1][1][2], 0x050810DB, 0xFCF2F6EC, 0xEA0D04E9, 0x03F2F814);
	r3 = D(r3, s[1][1][2], 0x03060C00, 0xFE02E2FE, 0x05F808FB, 0xFE041025);
	r4 = D(r4, s[1][1][2], 0x0904EBF8, 0xFB0406FC, 0x190DF5EF, 0x02F008FB);
	r5 = D(r5, s[1][1][2], 0xFCF3FF19, 0xFA0503F0, 0x03020DF2, 0xFF0E0A02);
	r6 = D(r6, s[1][1][2], 0xFFEB05F0, 0x0409FAFF, 0xE9FBFDEB, 0x0D0E0904);
	r7 = D(r7, s[1][1][2], 0x0718000A, 0x0710ED02, 0xF7FD0F0E, 0x0AF518E1);
	r0 = D(r0, s[1][2][0], 0x02F6FAFD, 0x05F5F2F1, 0x03FE01FD, 0x020CF60D);
	r1 = D(r1, s[1][2][0], 0xE8FAFBFD, 0x020100F3, 0x02F606F4, 0x000704FC);
	r2 = D(r2, s[1][2][0], 0xFB0D02FE, 0x0C07FA09, 0xF5EA04F5, 0x03F9FF0C);
	r3 = D(r3, s[1][2][0], 0xF0050E05, 0xF6F9EFF8, 0xF801FD02, 0xEEF6FCF4);
	r4 = D(r4, s[1][2][0], 0x15F70E0E, 0xFDFE0A00, 0x04D700E2, 0x1DFBF708);
	r5 = D(r5, s[1][2][0], 0xF3EDFFDF, 0xFF12010B, 0xFB0F1C05, 0xF9FB0205);
	r6 = D(r6, s[1][2][0], 0xE7F016FB, 0x0BFA1707, 0xF62AF313, 0x05ECFC09);
	r7 = D(r7, s[1][2][0], 0xF6EBF61F, 0x031209E4, 0xF50D0302, 0xF7110104);
	r0 = D(r0, s[1][2][1], 0x03EE0FE8, 0xF40FFCEF, 0xFAF21107, 0x0712FEFA);
	r1 = D(r1, s[1][2][1], 0xFF0EFA09, 0xEF0F030B, 0xF202F8F3, 0xEBE5EF0F);
	r2 = D(r2, s[1][2][1], 0xEC020907, 0xE902F7FE, 0x06F0EE01, 0xFCEEF307);
	r3 = D(r3, s[1][2][1], 0x030312F4, 0xE807F10E, 0xF900FCFF, 0xFCF902F2);
	r4 = D(r4, s[1][2][1], 0xFE030213, 0x08F000F2, 0xF1E50410, 0xF3FE03FC);
	r5 = D(r5, s[1][2][1], 0x1F011127, 0x01F6F613, 0x15EC0305, 0x01040503);
	r6 = D(r6, s[1][2][1], 0x0E14F3F2, 0xFAFC12EA, 0xDC051D14, 0xF9032707);
	r7 = D(r7, s[1][2][1], 0x0202F9E1, 0x070B1C0A, 0x06F6FD01, 0x021112F0);
	r0 = D(r0, s[1][2][2], 0x00F1040B, 0x12F1FAF5, 0x05F40506, 0xFA04FC01);
	r1 = D(r1, s[1][2][2], 0xFBF9FBF7, 0xF00B03FE, 0x10F709FC, 0xF7EE02F9);
	r2 = D(r2, s[1][2][2], 0x09FD0306, 0xF814EAFA, 0xEBE3E231, 0xFDF6FEFF);
	r3 = D(r3, s[1][2][2], 0xF9FB1600, 0xE406F1FB, 0x000101FE, 0xEF0CF803);
	r4 = D(r4, s[1][2][2], 0xF50004F4, 0x021B0307, 0x1FF7091A, 0x0216EFF4);
	r5 = D(r5, s[1][2][2], 0xF6F8021F, 0xF9100100, 0x0BFBFBFE, 0xFEFC0305);
	r6 = D(r6, s[1][2][2], 0x13EA0E00, 0xDC0DFDFD, 0x0DFBF518, 0x1C080FD5);
	r7 = D(r7, s[1][2][2], 0x0013FF01, 0xE30AFCFD, 0x19FDE7F6, 0x07FCFDE9);
	s[0][0][0] = G[2][xy.y+0][xy.x+0]; s[0][0][1] = G[2][xy.y+0][xy.x+1];
	s[0][0][2] = G[2][xy.y+0][xy.x+2]; s[0][1][0] = G[2][xy.y+1][xy.x+0];
	s[0][1][1] = G[2][xy.y+1][xy.x+1]; s[0][1][2] = G[2][xy.y+1][xy.x+2];
	s[0][2][0] = G[2][xy.y+2][xy.x+0]; s[0][2][1] = G[2][xy.y+2][xy.x+1];
	s[0][2][2] = G[2][xy.y+2][xy.x+2]; s[1][0][0] = G[3][xy.y+0][xy.x+0];
	s[1][0][1] = G[3][xy.y+0][xy.x+1]; s[1][0][2] = G[3][xy.y+0][xy.x+2];
	s[1][1][0] = G[3][xy.y+1][xy.x+0]; s[1][1][1] = G[3][xy.y+1][xy.x+1];
	s[1][1][2] = G[3][xy.y+1][xy.x+2]; s[1][2][0] = G[3][xy.y+2][xy.x+0];
	s[1][2][1] = G[3][xy.y+2][xy.x+1]; s[1][2][2] = G[3][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x07E7F801, 0x09F7F805, 0x12010803, 0xF804F905);
	r1 = D(r1, s[0][0][0], 0x090109FB, 0x030003FA, 0x0EF7F014, 0xE4030104);
	r2 = D(r2, s[0][0][0], 0x0A00FE05, 0x0608F205, 0xED0114FD, 0x030D06FE);
	r3 = D(r3, s[0][0][0], 0x020D04FD, 0xE9000CFC, 0xFBEE02F9, 0x0AF2DFEE);
	r4 = D(r4, s[0][0][0], 0xF4FEE200, 0xD313F718, 0x0EF30E05, 0x1301ED02);
	r5 = D(r5, s[0][0][0], 0x01F5F3F9, 0x00FC08FC, 0xE0F3E601, 0x070702F4);
	r6 = D(r6, s[0][0][0], 0x03FDEDD4, 0x0BF738DA, 0xF51BF808, 0x13DF00F3);
	r7 = D(r7, s[0][0][0], 0xEDFDF9F0, 0xFDF3FEEE, 0xFAFCF4FF, 0x010324F4);
	r0 = D(r0, s[0][0][1], 0xF9100EE4, 0x0D0A2405, 0x02FA0A0D, 0xF9F8FCFC);
	r1 = D(r1, s[0][0][1], 0xFA00F2ED, 0x0CFA01F8, 0x13FCFE03, 0x2006F904);
	r2 = D(r2, s[0][0][1], 0xFDE81304, 0xFB0704FF, 0xB8FAF2FC, 0x17F9FF00);
	r3 = D(r3, s[0][0][1], 0x000FF5F5, 0xE5FEFD08, 0x03F8F9FA, 0x120A0AF0);
	r4 = D(r4, s[0][0][1], 0xFCF4D2F4, 0xE3FC06F9, 0x0F02F5EE, 0x03FC1BFA);
	r5 = D(r5, s[0][0][1], 0x1406D212, 0x0101FDEE, 0xEC010210, 0x05FFFFFF);
	r6 = D(r6, s[0][0][1], 0xD3E7F10D, 0x0D070BF0, 0xFBE3F719, 0xF8DB0B04);
	r7 = D(r7, s[0][0][1], 0xF80CFAED, 0xFD181EF6, 0xE105F005, 0x050EEBE1);
	r0 = D(r0, s[0][0][2], 0xFA0A00F8, 0xDA010701, 0x07060904, 0x0707FD03);
	r1 = D(r1, s[0][0][2], 0xE8FEFF0B, 0x0F040DF4, 0x020CFF10, 0x0FEE0B11);
	r2 = D(r2, s[0][0][2], 0xF1010209, 0x0B0D0914, 0x090200FE, 0x17EC09F3);
	r3 = D(r3, s[0][0][2], 0x0E1A070E, 0x01E203EE, 0xF6FC06F3, 0x0E0504EC);
	r4 = D(r4, s[0][0][2], 0xFDF9FAFA, 0xEDF20307, 0x080A08F0, 0x0DFE00DC);
	r5 = D(r5, s[0][0][2], 0x1BF203F4, 0x0EF6F0F8, 0xF7F01109, 0x04FAFFFD);
	r6 = D(r6, s[0][0][2], 0xE20101EF, 0x040F0EF4, 0xFCED05BA, 0xF2F71B00);
	r7 = D(r7, s[0][0][2], 0x1B020CF5, 0x0BF606F6, 0xAA06E0FE, 0xED0A0BEC);
	r0 = D(r0, s[0][1][0], 0x0F19ECFF, 0xF2FFDEFE, 0x0F0C1F08, 0xFF02EEF7);
	r1 = D(r1, s[0][1][0], 0xFDFDF505, 0x060EE1F8, 0x0410F103, 0xEEFF0AE0);
	r2 = D(r2, s[0][1][0], 0xF202F600, 0xF705F2FF, 0xFD002205, 0xFD0307F7);
	r3 = D(r3, s[0][1][0], 0xF505F201, 0x03F80504, 0x09FC1103, 0x17130805);
	r4 = D(r4, s[0][1][0], 0x07FDF9F9, 0x07050218, 0x08FBB6EA, 0xF51605EB);
	r5 = D(r5, s[0][1][0], 0x180FEC10, 0x070513EE, 0xEEF1190C, 0x0704FB00);
	r6 = D(r6, s[0][1][0], 0x101BD6EF, 0x1B05EAE1, 0xFFE4F4D7, 0x27D781FB);
	r7 = D(r7, s[0][1][0], 0xE9F8150A, 0x05FA0D10, 0xFC090FFA, 0xD70011D9);
	r0 = D(r0, s[0][1][1], 0xE6EAE802, 0x18F21103, 0xECF6EC0F, 0xF807F50A);
	r1 = D(r1, s[0][1][1], 0xFB080914, 0x171A011E, 0x1405FD21, 0xCCF9F1F3);
	r2 = D(r2, s[0][1][1], 0xEBF8F906, 0xE602F0FC, 0xE90603C7, 0x04FB1003);
	r3 = D(r3, s[0][1][1], 0x0C0A05F5, 0xF8EC1EEF, 0x0DF906F9, 0x0704E8EE);
	r4 = D(r4, s[0][1][1], 0xEBEEED00, 0xF508EFFA, 0xDFF7F10D, 0xF6EAFDEA);
	r5 = D(r5, s[0][1][1], 0x1AF41624, 0x03070503, 0xF1E90B0D, 0xF9FC070B);
	r6 = D(r6, s[0][1][1], 0x131CE902, 0x04FE021D, 0xE0110207, 0xEFF729FF);
	r7 = D(r7, s[0][1][1], 0x8DF1181D, 0xFDED1AFC, 0xFD0FE1FD, 0xE509F3E8);
	r0 = D(r0, s[0][1][2], 0xFC05F4F6, 0x021A2903, 0x0807F811, 0x0901F5F3);
	r1 = D(r1, s[0][1][2], 0xFD12FB0A, 0x1D020309, 0x08EA10E8, 0xD803FBF2);
	r2 = D(r2, s[0][1][2], 0xF107F5EB, 0x03F6F40B, 0x060EDEE4, 0x17FFE80D);
	r3 = D(r3, s[0][1][2], 0x0DF2F805, 0xEDD80D15, 0xFFF9FDF3, 0x170B1007);
	r4 = D(r4, s[0][1][2], 0x14EFF10E, 0xED050204, 0xF7FC0F02, 0x03F6F6D5);
	r5 = D(r5, s[0][1][2], 0xFAEEFC0E, 0xF5050006, 0xCF000102, 0xF7050704);
	r6 = D(r6, s[0][1][2], 0xF5F402F7, 0xE9F9FA1C, 0xCD10F7FA, 0xE90121E7);
	r7 = D(r7, s[0][1][2], 0x01022502, 0x05F918E6, 0xD0FCF8F2, 0x0400F7DD);
	r0 = D(r0, s[0][2][0], 0xF20001F1, 0xF1150501, 0xFCF0FBF4, 0x09FFEFFE);
	r1 = D(r1, s[0][2][0], 0x02000912, 0xF00FF40C, 0xE9FC160B, 0x0602F9E4);
	r2 = D(r2, s[0][2][0], 0xF4EFEA03, 0xEC03F0F8, 0xFCF20D01, 0xFB160703);
	r3 = D(r3, s[0][2][0], 0x0EFEFAEA, 0x07F1030F, 0x0109FEFE, 0x15F201EB);
	r4 = D(r4, s[0][2][0], 0x0600F0F7, 0x00070806, 0xEE060BF5, 0xFA1116E6);
	r5 = D(r5, s[0][2][0], 0xFE11FF03, 0xFF0107FF, 0xFCFCF105, 0xFEFDFC00);
	r6 = D(r6, s[0][2][0], 0x0B19F91C, 0x09F0FCDF, 0x02DCF5FB, 0x04E307E2);
	r7 = D(r7, s[0][2][0], 0xFEE0DD1C, 0x01F01409, 0x020A0606, 0xF400FBF1);
	r0 = D(r0, s[0][2][1], 0xF6050514, 0xFF000713, 0x0BFB03E9, 0xFCFEFA06);
	r1 = D(r1, s[0][2][1], 0x040902EA, 0x0AF0D4F6, 0xF900F0FE, 0x04090BEE);
	r2 = D(r2, s[0][2][1], 0xF917F30D, 0xF60AE908, 0x03E2FDFA, 0x0FF405FB);
	r3 = D(r3, s[0][2][1], 0x1703F30B, 0x07F518F2, 0xFE03F406, 0x26EA10D2);
	r4 = D(r4, s[0][2][1], 0x07EBF105, 0xFAFAF7F9, 0x02E6FEFE, 0xF6100524);
	r5 = D(r5, s[0][2][1], 0xFAFEEF0B, 0x06F6FD0F, 0xFDF70403, 0x03FD05FE);
	r6 = D(r6, s[0][2][1], 0x04F604E6, 0x0FF21100, 0x1ACDF7F6, 0xCBE3051C);
	r7 = D(r7, s[0][2][1], 0x09010C04, 0x02F72E1C, 0x0BF7F201, 0xDE16C6D2);
	r0 = D(r0, s[0][2][2], 0xEEFDE301, 0xFFF80706, 0x0305121A, 0xF903E812);
	r1 = D(r1, s[0][2][2], 0x15FEF7FB, 0x000AED0D, 0x02031A0D, 0x04FD01FE);
	r2 = D(r2, s[0][2][2], 0xF7FFF2E8, 0xE302E2F5, 0x0AECF605, 0x021201F4);
	r3 = D(r3, s[0][2][2], 0x16FF08F9, 0x08210EFE, 0x020302F5, 0x1C000BF0);
	r4 = D(r4, s[0][2][2], 0x0808F7EB, 0xF807EE17, 0x0D000805, 0x03FCF80F);
	r5 = D(r5, s[0][2][2], 0x06091207, 0x0FF90702, 0xF3F2F811, 0xF9FE000A);
	r6 = D(r6, s[0][2][2], 0xF1E0FAEE, 0xEDFB07FB, 0x00F8EEEE, 0x33170A09);
	r7 = D(r7, s[0][2][2], 0x1FF000E4, 0x11F8F417, 0xFBFC1301, 0xE1FCFDD7);
	r0 = D(r0, s[1][0][0], 0x08F0ED02, 0xFEF80401, 0xF704FA0A, 0xF4ED0012);
	r1 = D(r1, s[1][0][0], 0x04D8F117, 0x06FD030E, 0x0B030B1B, 0x0309FD10);
	r2 = D(r2, s[1][0][0], 0xFE010401, 0xED09FD10, 0x09F10408, 0x00FE0B03);
	r3 = D(r3, s[1][0][0], 0xFCF70404, 0xE60A08FF, 0x01FC0BFC, 0x1303FEED);
	r4 = D(r4, s[1][0][0], 0x02F605F0, 0xFFFDFF06, 0x150314FB, 0xFAE8F6EF);
	r5 = D(r5, s[1][0][0], 0xF0F7090D, 0x0903F40F, 0xFF010E0F, 0x060509F7);
	r6 = D(r6, s[1][0][0], 0x01EBFFAF, 0xEEE51BDA, 0xE3F70019, 0x1203FC26);
	r7 = D(r7, s[1][0][0], 0x0CF7D0F2, 0xF7E8DFFD, 0xF8F909F2, 0xD4C105BD);
	r0 = D(r0, s[1][0][1], 0xF90CF1D0, 0x09FD06FA, 0x0CE702DF, 0xFCFF0AFE);
	r1 = D(r1, s[1][0][1], 0xF9EA04EF, 0xF60203F1, 0xFEFAF506, 0xF5FE0314);
	r2 = D(r2, s[1][0][1], 0x030B0C08, 0x0AF80C01, 0xFD0ED2FA, 0xF9F4EDEF);
	r3 = D(r3, s[1][0][1], 0x0EFCFB0E, 0xF70A0301, 0x07FE0107, 0xFE19F5B9);
	r4 = D(r4, s[1][0][1], 0xFBFA0C18, 0x00110C1D, 0x140A0C10, 0x0308F6CE);
	r5 = D(r5, s[1][0][1], 0x0C001FF6, 0xFDF40C07, 0xF50DEBFA, 0x03FA00F9);
	r6 = D(r6, s[1][0][1], 0xFAF0C80E, 0x060EFDFD, 0xFBF8FF2D, 0xE6FB15FA);
	r7 = D(r7, s[1][0][1], 0xFB21ECF0, 0xFF0C08E5, 0xED0FEFF0, 0xFC0A21FB);
	r0 = D(r0, s[1][0][2], 0x04FEFBE8, 0x0115F722, 0x10060DFF, 0xFCFBFEFC);
	r1 = D(r1, s[1][0][2], 0xFC0FFE0E, 0xFE0000F7, 0x080DE3FF, 0xF9FC04FA);
	r2 = D(r2, s[1][0][2], 0x08F411FF, 0x03F900FD, 0xFF1506F6, 0xFA0107FE);
	r3 = D(r3, s[1][0][2], 0xFDFF0304, 0x0CFDF512, 0x07F3FCF5, 0xFC0F01FB);
	r4 = D(r4, s[1][0][2], 0xECF9F70C, 0x0AFBFF10, 0x02051C08, 0x0CF80EE9);
	r5 = D(r5, s[1][0][2], 0xFF1019E5, 0x010F01FE, 0x0AF9F5F7, 0x0004FCFD);
	r6 = D(r6, s[1][0][2], 0x050D282C, 0x0B15D9FF, 0x2D000BF0, 0xF5240B89);
	r7 = D(r7, s[1][0][2], 0xF8F1F4D5, 0x12072700, 0x0FFCEF0C, 0x04FDFD17);
	r0 = D(r0, s[1][1][0], 0x06FC00F7, 0xFF0CFBDE, 0xFB0CECE2, 0xFBFF0AFE);
	r1 = D(r1, s[1][1][0], 0x15F404FD, 0x1301FDE7, 0x03EFFCE9, 0xF4E4F900);
	r2 = D(r2, s[1][1][0], 0x0C060900, 0xFBF50503, 0xF3C8D4FE, 0x0107E5E5);
	r3 = D(r3, s[1][1][0], 0xFAFBFEF0, 0x0314DE15, 0xF5FA00F6, 0xF7EBFD0A);
	r4 = D(r4, s[1][1][0], 0xF4190109, 0xFCEF0103, 0x14F0EEBC, 0x000C09F3);
	r5 = D(r5, s[1][1][0], 0xF4DFFAEC, 0xF5F00A12, 0x072305C5, 0x0701F202);
	r6 = D(r6, s[1][1][0], 0x11E6EEED, 0x21BE1608, 0xFAE8E912, 0x23FEE8F6);
	r7 = D(r7, s[1][1][0], 0x1F24FCFE, 0xF0811A27, 0xFDDF0600, 0x0CF207EB);
	r0 = D(r0, s[1][1][1], 0x06F4FF05, 0xF40B04F2, 0x00F80113, 0x06F208FB);
	r1 = D(r1, s[1][1][1], 0xFEE8F5FF, 0xE902FFED, 0xF2F4E41A, 0x0F0F0501);
	r2 = D(r2, s[1][1][1], 0xFBFD23FA, 0x01FEFAF8, 0xFE0D120D, 0xFF02D4E4);
	r3 = D(r3, s[1][1][1], 0xFBE4FB03, 0xE8150E11, 0x0BFD000B, 0x0E18EF03);
	r4 = D(r4, s[1][1][1], 0x01DEF5FB, 0xF21408EA, 0x00F30415, 0xF7FAF0BD);
	r5 = D(r5, s[1][1][1], 0xE40F02EC, 0x030B0104, 0x040406C1, 0x000002FB);
	r6 = D(r6, s[1][1][1], 0x11CE04F6, 0xDA1AD210, 0x04E8D3ED, 0xC3E3EA13);
	r7 = D(r7, s[1][1][1], 0x1FE80DFB, 0x04F8F71B, 0x0CF0EEF3, 0xED02FE0E);
	r0 = D(r0, s[1][1][2], 0x08051100, 0x0B010FFE, 0x081CFE01, 0x04F6FD0D);
	r1 = D(r1, s[1][1][2], 0xECFBF6FA, 0xF6FBF1EF, 0x0308F202, 0x0A09FAF7);
	r2 = D(r2, s[1][1][2], 0x0B0106FE, 0x0302F8E3, 0xF6DF190B, 0xFD08F004);
	r3 = D(r3, s[1][1][2], 0x061202FB, 0xEC0EF909, 0x03FC04F0, 0xFB08E70B);
	r4 = D(r4, s[1][1][2], 0xF40FE8F3, 0x0BF00D1C, 0xF6FD07F9, 0x10F10CD9);
	r5 = D(r5, s[1][1][2], 0x0818FED9, 0x04FD00FE, 0x0EFD010A, 0x01030403);
	r6 = D(r6, s[1][1][2], 0xEB1913DF, 0xF1EF16FF, 0xE7E403FE, 0x0ED9DF03);
	r7 = D(r7, s[1][1][2], 0xF0E517F3, 0xFCF9EF16, 0x04030ADC, 0x2701070B);
	r0 = D(r0, s[1][2][0], 0x01F0FC07, 0xF1F6F6F7, 0xFB00F7F3, 0x0D04FCF2);
	r1 = D(r1, s[1][2][0], 0xFCECF9F8, 0x0CEBFBFA, 0x11070013, 0xF409000B);
	r2 = D(r2, s[1][2][0], 0xF81BFDF9, 0x0207FC03, 0x19EC0AEF, 0x021CF5FD);
	r3 = D(r3, s[1][2][0], 0xF0F1F704, 0xF907FA05, 0xFBF8FB03, 0xEE03FC0C);
	r4 = D(r4, s[1][2][0], 0xFAE4F0FC, 0xFFF10608, 0x07E3FE01, 0xF4F4F600);
	r5 = D(r5, s[1][2][0], 0x1704FA1D, 0xFEF8FDFB, 0x040A0D0E, 0x000600FE);
	r6 = D(r6, s[1][2][0], 0x0601F619, 0xF3FC0B0A, 0x150C08F4, 0x04191312);
	r7 = D(r7, s[1][2][0], 0x04E6F801, 0x070F060D, 0x11F10D14, 0xEEFD08D6);
	r0 = D(r0, s[1][2][1], 0xF90AFD02, 0x010BF2E4, 0x11FBFC09, 0x0E0A05EE);
	r1 = D(r1, s[1][2][1], 0xF8F006F5, 0xFAFEF907, 0x0E0D0608, 0x0A0C0902);
	r2 = D(r2, s[1][2][1], 0x0B0AFFF2, 0xFD0501E3, 0xD90AE2F4, 0xFD02061D);
	r3 = D(r3, s[1][2][1], 0xEA13E70C, 0xDC08FE10, 0xFD0BFF06, 0xE408FA12);
	r4 = D(r4, s[1][2][1], 0x08F405F3, 0x0CFFFE00, 0x0A17F1F9, 0xFE0511F9);
	r5 = D(r5, s[1][2][1], 0x0BF71408, 0xF506FE04, 0x13F0EF11, 0x000000F0);
	r6 = D(r6, s[1][2][1], 0x0DFB12E5, 0xCDFBECFF, 0x100205E9, 0x02E004FD);
	r7 = D(r7, s[1][2][1], 0xF30EFF0C, 0xF6E904EC, 0xF81A10FF, 0xF0070CF8);
	r0 = D(r0, s[1][2][2], 0x00F9FAFE, 0xFE13F70E, 0xF90B090A, 0x03FAFE00);
	r1 = D(r1, s[1][2][2], 0xEE01FEF6, 0xF90006F6, 0xEF0B040B, 0xF00109F0);
	r2 = D(r2, s[1][2][2], 0xF3FB020E, 0x02FFFE0A, 0xFE0922FF, 0xFBFDF901);
	r3 = D(r3, s[1][2][2], 0xEB0303FD, 0xE805F002, 0xFAFDFFFE, 0xFBECF9FB);
	r4 = D(r4, s[1][2][2], 0xF3060D05, 0xF9F1FCF2, 0x10F90202, 0x10FF00DE);
	r5 = D(r5, s[1][2][2], 0xFAF8F31F, 0x030109FC, 0xFEF20606, 0x05030601);
	r6 = D(r6, s[1][2][2], 0xC207070A, 0xF0F718EC, 0x0100110B, 0xF5260409);
	r7 = D(r7, s[1][2][2], 0xF6F9F4E9, 0x1D15EFF0, 0xE5FB00F7, 0xE41005DA);
	s[0][0][0] = G[4][xy.y+0][xy.x+0]; s[0][0][1] = G[4][xy.y+0][xy.x+1];
	s[0][0][2] = G[4][xy.y+0][xy.x+2]; s[0][1][0] = G[4][xy.y+1][xy.x+0];
	s[0][1][1] = G[4][xy.y+1][xy.x+1]; s[0][1][2] = G[4][xy.y+1][xy.x+2];
	s[0][2][0] = G[4][xy.y+2][xy.x+0]; s[0][2][1] = G[4][xy.y+2][xy.x+1];
	s[0][2][2] = G[4][xy.y+2][xy.x+2]; s[1][0][0] = G[5][xy.y+0][xy.x+0];
	s[1][0][1] = G[5][xy.y+0][xy.x+1]; s[1][0][2] = G[5][xy.y+0][xy.x+2];
	s[1][1][0] = G[5][xy.y+1][xy.x+0]; s[1][1][1] = G[5][xy.y+1][xy.x+1];
	s[1][1][2] = G[5][xy.y+1][xy.x+2]; s[1][2][0] = G[5][xy.y+2][xy.x+0];
	s[1][2][1] = G[5][xy.y+2][xy.x+1]; s[1][2][2] = G[5][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x15190501, 0x13FCFF06, 0xFFFE0602, 0x0B07EFF6);
	r1 = D(r1, s[0][0][0], 0xF2F1030F, 0xFFF20510, 0xFC05FD17, 0x0905FC09);
	r2 = D(r2, s[0][0][0], 0x042C06F3, 0xFA1CFCF5, 0x020BF40B, 0x0CF70BF7);
	r3 = D(r3, s[0][0][0], 0x0EDD0607, 0x02FDFAF7, 0xFCFB06F8, 0xFBF1FA13);
	r4 = D(r4, s[0][0][0], 0x09D30A02, 0x1214FEED, 0xF0890BE9, 0x10D6FB13);
	r5 = D(r5, s[0][0][0], 0x09210204, 0xFAFCECFE, 0xFCFBFF0E, 0x04DDFFFF);
	r6 = D(r6, s[0][0][0], 0xFF06F8E7, 0xFCEBE710, 0xBD0E0E19, 0x04FBCADD);
	r7 = D(r7, s[0][0][0], 0x12F5150D, 0xF5EC12ED, 0xFB0C08F9, 0x06031805);
	r0 = D(r0, s[0][0][1], 0x0900FA11, 0xFC0508F3, 0x0CDBF607, 0x08110CFF);
	r1 = D(r1, s[0][0][1], 0x09F7F804, 0x04FA0D17, 0x0B0C0E12, 0xF60009FA);
	r2 = D(r2, s[0][0][1], 0x082EEEFC, 0xFC2509F3, 0x0B040F05, 0x02EE0115);
	r3 = D(r3, s[0][0][1], 0x04E50200, 0xF6FF0710, 0xEDF60BF8, 0x081BF925);
	r4 = D(r4, s[0][0][1], 0xFFEEFD18, 0x05E11809, 0x0715ED0F, 0xFCF40415);
	r5 = D(r5, s[0][0][1], 0x05CEF204, 0x0DF517F9, 0xFE00F4EF, 0x04F603FC);
	r6 = D(r6, s[0][0][1], 0xFC0FF708, 0xF15204FC, 0x06E132EE, 0xF2FF0702);
	r7 = D(r7, s[0][0][1], 0x0B10D50F, 0xF2ED0CF3, 0x030C0AEB, 0xF200031A);
	r0 = D(r0, s[0][0][2], 0xFF040106, 0x0D19FC08, 0x08C5FA06, 0xFC0BFEFF);
	r1 = D(r1, s[0][0][2], 0xFDF8F511, 0xFE18FE02, 0xFA0CFC03, 0xF4010405);
	r2 = D(r2, s[0][0][2], 0xEC211DEC, 0xFE1EF3FA, 0x07EA07F4, 0x00F401F9);
	r3 = D(r3, s[0][0][2], 0x03C5050E, 0xF9F438CE, 0x01050300, 0x091014FB);
	r4 = D(r4, s[0][0][2], 0xF8F82605, 0x0DF00201, 0x030104FF, 0x03161CFF);
	r5 = D(r5, s[0][0][2], 0x03F3F3FB, 0x000709F0, 0x060A0CF4, 0x02FFFD02);
	r6 = D(r6, s[0][0][2], 0x07E6080F, 0x0D2F1CF4, 0xF79F10FB, 0x0C0E0E01);
	r7 = D(r7, s[0][0][2], 0x060F0F17, 0x0AF102FA, 0x0EFD1108, 0x0A0BDCFD);
	r0 = D(r0, s[0][1][0], 0x0A07EEFA, 0xE7A40800, 0x08F106F9, 0x0C0D0C04);
	r1 = D(r1, s[0][1][0], 0xFBFF0005, 0xF3EF0A06, 0xF416FE09, 0x06F6FAFD);
	r2 = D(r2, s[0][1][0], 0xF60B1104, 0x04070E04, 0x020106E7, 0x090602FE);
	r3 = D(r3, s[0][1][0], 0x0CF605FB, 0x0D270CED, 0x00FD08FB, 0x04F5F8FF);
	r4 = D(r4, s[0][1][0], 0xF71B12F8, 0xF9E9120B, 0xF681110A, 0x0400FB07);
	r5 = D(r5, s[0][1][0], 0x04FBEC0E, 0x05F40C0A, 0x05EB0203, 0xFDE310FE);
	r6 = D(r6, s[0][1][0], 0xF100FB17, 0x09E125E8, 0x0BFC11FC, 0x1A0D1D1A);
	r7 = D(r7, s[0][1][0], 0x05FBA4E3, 0xE701FBF5, 0xF60C05F9, 0xFC16FFE3);
	r0 = D(r0, s[0][1][1], 0xE7F3FAF4, 0x07E4190F, 0xEAE8E6F8, 0x05F00407);
	r1 = D(r1, s[0][1][1], 0x110BE5F2, 0x0702FDF3, 0x1B04FAF4, 0xFF1A14F5);
	r2 = D(r2, s[0][1][1], 0xF4D51BFE, 0xFCEE1D04, 0x0C1A27FA, 0x0B2BFF06);
	r3 = D(r3, s[0][1][1], 0x06DB290B, 0xF31125F0, 0x001004FB, 0xFF390BFE);
	r4 = D(r4, s[0][1][1], 0x131CFA00, 0x04EA0BFD, 0xF8B6F3FB, 0x060BEEEF);
	r5 = D(r5, s[0][1][1], 0x06FA0C05, 0x0DFF0203, 0x04110EE8, 0x0AEC11F6);
	r6 = D(r6, s[0][1][1], 0xFA0FEAF9, 0xE1FE1D02, 0x1EF80AFD, 0x020EDF0C);
	r7 = D(r7, s[0][1][1], 0xFA0019F9, 0x1A1609FC, 0xFE000EFB, 0xF5ED37FC);
	r0 = D(r0, s[0][1][2], 0x0DF6D508, 0xEFF8FC08, 0x07D9F6F6, 0xF8001C01);
	r1 = D(r1, s[0][1][2], 0x0116F70E, 0xFF01100B, 0x08EB000B, 0x06FB04F0);
	r2 = D(r2, s[0][1][2], 0xEFEE0E06, 0x0C0719FE, 0x0313F9E4, 0x1101FEF6);
	r3 = D(r3, s[0][1][2], 0xF8CB0CF7, 0xDF400C0D, 0xFEFA1CF9, 0xFBF8290D);
	r4 = D(r4, s[0][1][2], 0x0120EE02, 0x040B1301, 0x02181DFE, 0xF507030E);
	r5 = D(r5, s[0][1][2], 0xFFF8E003, 0xFAFF18FE, 0xFA01FDFB, 0xF90BF6FE);
	r6 = D(r6, s[0][1][2], 0x11F71C11, 0xF3080DFF, 0x0BEB12F4, 0x2912FEFF);
	r7 = D(r7, s[0][1][2], 0xF2EDFA0A, 0x0EF81805, 0x04D21E0E, 0x01151501);
	r0 = D(r0, s[0][2][0], 0xFAF1F8FE, 0x10D3EDF8, 0xEFF30901, 0xF0FE0100);
	r1 = D(r1, s[0][2][0], 0x00DFECFA, 0xFAF10A06, 0xFDFBFA0A, 0xFE01F4F8);
	r2 = D(r2, s[0][2][0], 0xEAF8E902, 0xFD0CFDFC, 0x020D0AFF, 0x05FDEEFF);
	r3 = D(r3, s[0][2][0], 0x07E2180F, 0x080A1B05, 0x04FF03F8, 0xF9F3FB01);
	r4 = D(r4, s[0][2][0], 0x0D10E2FA, 0x06FEF904, 0x0781DFF4, 0x040E000A);
	r5 = D(r5, s[0][2][0], 0x0CF1F9FB, 0x0304FAFD, 0x0B39270D, 0xFCF2FB03);
	r6 = D(r6, s[0][2][0], 0x12F71CFC, 0x10DBE40E, 0xF7E610F3, 0xF904EBCE);
	r7 = D(r7, s[0][2][0], 0xFFD8FC15, 0xF62CF0F7, 0x06FCF502, 0x0101F0F7);
	r0 = D(r0, s[0][2][1], 0x00FDF908, 0x02E2E2EB, 0xF80DD814, 0xF8F51208);
	r1 = D(r1, s[0][2][1], 0xF9F5F202, 0x0FFEE005, 0xF0F1FE01, 0x050D0407);
	r2 = D(r2, s[0][2][1], 0xFCCFF9F8, 0xF4D414F8, 0xEFF5ED21, 0xF80C0202);
	r3 = D(r3, s[0][2][1], 0x0BD220FB, 0x0AD818F7, 0xFC11FFFF, 0xF4D0BD06);
	r4 = D(r4, s[0][2][1], 0xEFED10F4, 0xF8122705, 0x00CDE004, 0x00E801ED);
	r5 = D(r5, s[0][2][1], 0x1203E802, 0x0D07F1F4, 0xFC214A04, 0xFEF60400);
	r6 = D(r6, s[0][2][1], 0x0C08F6FD, 0x0BF6E8F6, 0xF6391921, 0xDA1707F0);
	r7 = D(r7, s[0][2][1], 0x002C45F0, 0x0D0D81F6, 0xFA111D02, 0x090FFBF5);
	r0 = D(r0, s[0][2][2], 0x0DE7E7F3, 0x0102EE0A, 0xF600AEFF, 0x0A0903FD);
	r1 = D(r1, s[0][2][2], 0xF8FED110, 0x07F2DCFD, 0x0E1BD0F8, 0x01FA2409);
	r2 = D(r2, s[0][2][2], 0xFCEAEF11, 0x0BE0E0F3, 0xF402D204, 0xFECA91FE);
	r3 = D(r3, s[0][2][2], 0xFAC00001, 0xFBFB1507, 0xFEFA1405, 0xF1E60DEF);
	r4 = D(r4, s[0][2][2], 0x090CE8F9, 0x051EFAFD, 0xFB3A47EF, 0xFCD5D9D1);
	r5 = D(r5, s[0][2][2], 0xFF0A0B03, 0x000828FB, 0x061F0D0A, 0x040910FE);
	r6 = D(r6, s[0][2][2], 0xFC131EEA, 0x00FD1A1E, 0x020F3F06, 0xE8173721);
	r7 = D(r7, s[0][2][2], 0x020B0004, 0xE4133B10, 0xF00A2B09, 0x0D091102);
	r0 = D(r0, s[1][0][0], 0x1204F615, 0xF40106FA, 0xFBFCF917, 0xF6FA01F8);
	r1 = D(r1, s[1][0][0], 0xF500ED05, 0x0EFC12F9, 0x14F600E6, 0xED0601FD);
	r2 = D(r2, s[1][0][0], 0xF1FEEDFC, 0xFF0A03EC, 0xFEFD09F6, 0xF901F9E1);
	r3 = D(r3, s[1][0][0], 0x16030408, 0xE5FFF7FD, 0xE402FC03, 0x20F300F3);
	r4 = D(r4, s[1][0][0], 0x15E6EAE5, 0x04F20D06, 0x34D60601, 0x090E0AF0);
	r5 = D(r5, s[1][0][0], 0x0DFBFECB, 0xD90A0624, 0x0CFEEEF6, 0x010401EE);
	r6 = D(r6, s[1][0][0], 0xFD2102FA, 0x1AFA101E, 0xBE060E05, 0x1B091FFD);
	r7 = D(r7, s[1][0][0], 0x17F51A14, 0x0DEC0A18, 0x0102F510, 0xC6170316);
	r0 = D(r0, s[1][0][1], 0xF90703F7, 0x0C0BF10B, 0x14F90CF6, 0x03F4FFFF);
	r1 = D(r1, s[1][0][1], 0xE0E7FE10, 0x0EF9F6F7, 0x1805E4F8, 0xFBFEFB0E);
	r2 = D(r2, s[1][0][1], 0xF70010F1, 0xF20500FB, 0xD1FCF901, 0x1005FFEA);
	r3 = D(r3, s[1][0][1], 0x0EF2010C, 0xEE000BFD, 0xF40A0307, 0x19090BF6);
	r4 = D(r4, s[1][0][1], 0x09ED0EED, 0xFCF4FF17, 0x0007FDFA, 0xFDFC13F5);
	r5 = D(r5, s[1][0][1], 0x0EF5F1E6, 0xE2010A13, 0x13F608E9, 0xFCF9060C);
	r6 = D(r6, s[1][0][1], 0xF50D0926, 0x110F0316, 0x930AED0A, 0x3701020D);
	r7 = D(r7, s[1][0][1], 0x20F3FCEC, 0x10F806FB, 0xDC06FA09, 0xE2F80007);
	r0 = D(r0, s[1][0][2], 0x09FFF0EA, 0xE7F1072F, 0x00001406, 0x090CF6EB);
	r1 = D(r1, s[1][0][2], 0xD5F9000C, 0x1F030B07, 0xFCF70C09, 0x0FFAF9FC);
	r2 = D(r2, s[1][0][2], 0x0A0700F4, 0xF904F7E9, 0xEDEB0E1F, 0x190206F8);
	r3 = D(r3, s[1][0][2], 0x0BFFF6F3, 0xBAE6121D, 0xF309F304, 0x1F05200C);
	r4 = D(r4, s[1][0][2], 0x060F04DA, 0xE500FE1C, 0x1B011F16, 0xF5080BFA);
	r5 = D(r5, s[1][0][2], 0xF10CFB15, 0x0B01090D, 0xFFEFF4F6, 0xF4000300);
	r6 = D(r6, s[1][0][2], 0x03DB0DEC, 0x0A05120E, 0xDDE8E0F4, 0x2DE21FD8);
	r7 = D(r7, s[1][0][2], 0x1BF911F7, 0x18FDEB2D, 0xD0FD0115, 0xE9FCD8F6);
	r0 = D(r0, s[1][1][0], 0xEB1218EC, 0x100507DE, 0x0502FA20, 0xFBF504F9);
	r1 = D(r1, s[1][1][0], 0x06EA0B05, 0x1AF904F2, 0x240DEADE, 0xE309F51E);
	r2 = D(r2, s[1][1][0], 0xFA00F7F8, 0x08040B04, 0xEE1BFA0D, 0xFDFCF5F9);
	r3 = D(r3, s[1][1][0], 0x0C0B0107, 0xBE0CF7EA, 0xF2FBF303, 0x14E90A07);
	r4 = D(r4, s[1][1][0], 0x03E41BE1, 0xEB01041C, 0x190A19EA, 0xFDF606F4);
	r5 = D(r5, s[1][1][0], 0xFCFF03E5, 0xF3040434, 0x23F2F3FD, 0x0DF20004);
	r6 = D(r6, s[1][1][0], 0x13FBEB01, 0x1008EC23, 0xDFF9131C, 0x1C06170F);
	r7 = D(r7, s[1][1][0], 0xED02F102, 0xDFEAE802, 0xF3F6F90A, 0xDEFAEC08);
	r0 = D(r0, s[1][1][1], 0x10F5FFFE, 0x200008FF, 0x0EF70F11, 0x010C0100);
	r1 = D(r1, s[1][1][1], 0x070DF6F9, 0x0DF005FF, 0x1A0B12F7, 0xEDFA0F12);
	r2 = D(r2, s[1][1][1], 0xEF0203FB, 0x0C09F5FC, 0xA20108FC, 0x0E0310EC);
	r3 = D(r3, s[1][1][1], 0x1B00FE10, 0x02FB0003, 0x0A0103FF, 0x1104EFF9);
	r4 = D(r4, s[1][1][1], 0x082EDDF0, 0x1BCD01EC, 0xFFFCFC16, 0x0D0CF8FA);
	r5 = D(r5, s[1][1][1], 0x2602F6EF, 0x0FFAFC00, 0x0EECEDF2, 0xF9FF0701);
	r6 = D(r6, s[1][1][1], 0x140F0DFB, 0xDB0101F1, 0x1106141A, 0xEC080EBF);
	r7 = D(r7, s[1][1][1], 0xFE060516, 0x84E50A19, 0x1A0BE802, 0xB3FE0FF9);
	r0 = D(r0, s[1][1][2], 0xEF0A0AFD, 0xF10106EC, 0x06F4FA0F, 0x0E04F7F5);
	r1 = D(r1, s[1][1][2], 0xF301080F, 0x10000415, 0x03EDFFF9, 0xEE0616FC);
	r2 = D(r2, s[1][1][2], 0x03F3FDEC, 0xFE0301F1, 0xED0309DE, 0x1B0A0507);
	r3 = D(r3, s[1][1][2], 0x0BFF07F7, 0xDFD40F17, 0xE60407EC, 0x200D1A0D);
	r4 = D(r4, s[1][1][2], 0xFFE1F4FD, 0xF106F4ED, 0x01081601, 0x051801DE);
	r5 = D(r5, s[1][1][2], 0x1604FAFE, 0xF704F800, 0x030500EE, 0xFCFDF50A);
	r6 = D(r6, s[1][1][2], 0xDFD200FD, 0xE60401F9, 0x06041E01, 0x1F000623);
	r7 = D(r7, s[1][1][2], 0x12FBECF5, 0x030A001E, 0xE7040DF3, 0xF502F5E4);
	r0 = D(r0, s[1][2][0], 0xE0FCFDF9, 0x160707F0, 0x1010021F, 0x0DFA01FA);
	r1 = D(r1, s[1][2][0], 0x1D04FF00, 0x2BFFFFD9, 0x1B03F2FC, 0xDD09FB09);
	r2 = D(r2, s[1][2][0], 0xFF0101F4, 0x10070BE9, 0xEF03040A, 0xFBF409EC);
	r3 = D(r3, s[1][2][0], 0x02FE0711, 0xCB04F90C, 0xFEFB02FA, 0x13FD0401);
	r4 = D(r4, s[1][2][0], 0x07F8E4DE, 0xE0FC0201, 0x12EE0405, 0xEFFCF6F9);
	r5 = D(r5, s[1][2][0], 0x00FBEEEF, 0x16FBFF0C, 0x0EFAF4CA, 0x0A0001FC);
	r6 = D(r6, s[1][2][0], 0x0800FA08, 0x05F9E41F, 0xE1F9EB01, 0x0C0A0607);
	r7 = D(r7, s[1][2][0], 0xB2F9F321, 0x00EFFE09, 0x0100FEFD, 0x02101512);
	r0 = D(r0, s[1][2][1], 0xEDFFFE03, 0x18FAF807, 0x02ED0208, 0xF80B07F3);
	r1 = D(r1, s[1][2][1], 0xFE06F911, 0x250605E8, 0x14FFFE10, 0xF8F305F8);
	r2 = D(r2, s[1][2][1], 0xFC0AF7EB, 0x0B0E0D07, 0xFFEBFE0D, 0x1B02FA07);
	r3 = D(r3, s[1][2][1], 0x0FEEFD05, 0xE3F0050A, 0xFD040607, 0x21FB101A);
	r4 = D(r4, s[1][2][1], 0x01FAEDF4, 0xFC14FCF4, 0x11F7FBEF, 0xF50605EC);
	r5 = D(r5, s[1][2][1], 0x2F050ACF, 0x0E05FB11, 0x0C1103EC, 0xF4070109);
	r6 = D(r6, s[1][2][1], 0xB8F725F3, 0x01F0041C, 0x96FBFBEF, 0xE1F83211);
	r7 = D(r7, s[1][2][1], 0xE115FA03, 0x0DFF04FA, 0xBD050EEB, 0xEDED05E8);
	r0 = D(r0, s[1][2][2], 0x11FEEB00, 0xF310FA0C, 0xEBFBFC1A, 0x090CF8FA);
	r1 = D(r1, s[1][2][2], 0x0402FFFF, 0x1A0FF7FF, 0xF9E60009, 0x00E90C0E);
	r2 = D(r2, s[1][2][2], 0xF505190E, 0x04FA0602, 0xC4F70D03, 0x2303EFF5);
	r3 = D(r3, s[1][2][2], 0x0DFF070D, 0xA2D4150B, 0xF1FAFCF6, 0x220BFA10);
	r4 = D(r4, s[1][2][2], 0xF803EAF9, 0xFC1206F3, 0x18F50504, 0xFD01FF04);
	r5 = D(r5, s[1][2][2], 0x13FC0703, 0xFE01FD07, 0x0500FADA, 0x00F70005);
	r6 = D(r6, s[1][2][2], 0xBAE80F0A, 0xE6030607, 0xFCECFDDC, 0x1FFDE5F1);
	r7 = D(r7, s[1][2][2], 0xFAE820F3, 0x04FD0603, 0xE5ECF6F1, 0xD006021D);
	s[0][0][0] = G[6][xy.y+0][xy.x+0]; s[0][0][1] = G[6][xy.y+0][xy.x+1];
	s[0][0][2] = G[6][xy.y+0][xy.x+2]; s[0][1][0] = G[6][xy.y+1][xy.x+0];
	s[0][1][1] = G[6][xy.y+1][xy.x+1]; s[0][1][2] = G[6][xy.y+1][xy.x+2];
	s[0][2][0] = G[6][xy.y+2][xy.x+0]; s[0][2][1] = G[6][xy.y+2][xy.x+1];
	s[0][2][2] = G[6][xy.y+2][xy.x+2]; s[1][0][0] = G[7][xy.y+0][xy.x+0];
	s[1][0][1] = G[7][xy.y+0][xy.x+1]; s[1][0][2] = G[7][xy.y+0][xy.x+2];
	s[1][1][0] = G[7][xy.y+1][xy.x+0]; s[1][1][1] = G[7][xy.y+1][xy.x+1];
	s[1][1][2] = G[7][xy.y+1][xy.x+2]; s[1][2][0] = G[7][xy.y+2][xy.x+0];
	s[1][2][1] = G[7][xy.y+2][xy.x+1]; s[1][2][2] = G[7][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x0FE6FD0C, 0x0CED0CFA, 0x0BF7E004, 0x0C03FCFB);
	r1 = D(r1, s[0][0][0], 0xFE00010A, 0x0AFD03FE, 0x09EC01EE, 0x07050D0C);
	r2 = D(r2, s[0][0][0], 0x0CF5FDF8, 0x05EA0AF5, 0x1312EE22, 0x0C0AF8FD);
	r3 = D(r3, s[0][0][0], 0x00E9F200, 0xFA0D02FE, 0x060402FE, 0xF2F3FCF8);
	r4 = D(r4, s[0][0][0], 0xFAF803F5, 0xF704FBFB, 0xF6EDF2CC, 0xF3EF0301);
	r5 = D(r5, s[0][0][0], 0xE4F001FD, 0x040E091F, 0xDEF91407, 0xFD01FE02);
	r6 = D(r6, s[0][0][0], 0x1310EC2A, 0xDE0805E7, 0xD9F91904, 0x05062304);
	r7 = D(r7, s[0][0][0], 0x09F01612, 0xC9FA1EFE, 0xFBFE0701, 0x0D0304F1);
	r0 = D(r0, s[0][0][1], 0x05F9EDEF, 0xF00804FA, 0xFB0E05F2, 0xF902F100);
	r1 = D(r1, s[0][0][1], 0x0B16F401, 0xF302FC12, 0x00FBF504, 0xF30105FA);
	r2 = D(r2, s[0][0][1], 0xFD0DFF09, 0x08FC13FB, 0xF50AF402, 0x010607F7);
	r3 = D(r3, s[0][0][1], 0x07000BF8, 0xCF06FF0A, 0xF5040400, 0x06FD0312);
	r4 = D(r4, s[0][0][1], 0xDA08F90E, 0x05010102, 0xF1F4FFFD, 0x07F4FFF8);
	r5 = D(r5, s[0][0][1], 0x0100D607, 0xF5130305, 0xFEEF050A, 0xF3FDF900);
	r6 = D(r6, s[0][0][1], 0xDF00011A, 0xF0FD07FD, 0x1BF3FF00, 0xF7EDF80C);
	r7 = D(r7, s[0][0][1], 0xFF0E1AC4, 0x08FC2CFB, 0xFD09FEFB, 0xEFF71E05);
	r0 = D(r0, s[0][0][2], 0xF4EC020A, 0xFFFC1202, 0x0AFEF0EC, 0xFFFDE80C);
	r1 = D(r1, s[0][0][2], 0xF50CFC06, 0xFB0DFBFB, 0xEDF40DF2, 0xF6F50CF3);
	r2 = D(r2, s[0][0][2], 0x02FC13E9, 0xF9F60B04, 0x050A0CFF, 0xF90AFE14);
	r3 = D(r3, s[0][0][2], 0xF9FDFA01, 0xE9FC1C0E, 0x0208F801, 0xEF07090F);
	r4 = D(r4, s[0][0][2], 0x1A0F0B05, 0xFFF6F3F9, 0xF6020313, 0xE2FE1217);
	r5 = D(r5, s[0][0][2], 0xFFFAFFFE, 0x04F40003, 0xFFFB1806, 0xFF04F7FF);
	r6 = D(r6, s[0][0][2], 0x1D0EF708, 0xFF09ECED, 0xDE1EEE05, 0xF2E8FD19);
	r7 = D(r7, s[0][0][2], 0xEC0608D1, 0x050B0F06, 0x03171203, 0x0B120EF4);
	r0 = D(r0, s[0][1][0], 0x10090424, 0xF3F403F0, 0x0E01110E, 0x05FBFA01);
	r1 = D(r1, s[0][1][0], 0xFA0F0101, 0xF7EB08EE, 0xF9FDFAF0, 0x0303080C);
	r2 = D(r2, s[0][1][0], 0x010BFAFE, 0x0702F7FF, 0xFE0213F7, 0xF6FF2006);
	r3 = D(r3, s[0][1][0], 0x07071908, 0x07F60F15, 0x01FB04F5, 0xF612FC06);
	r4 = D(r4, s[0][1][0], 0xECFF05EE, 0xFF0206DF, 0xFCD3D3C5, 0xF2010E1C);
	r5 = D(r5, s[0][1][0], 0x0CEF04FF, 0x0C030704, 0xF8CBF7FB, 0xFC08FDF4);
	r6 = D(r6, s[0][1][0], 0x0C12002C, 0xF00312F2, 0x08D22B21, 0x00D608E6);
	r7 = D(r7, s[0][1][0], 0xE40B26FB, 0xED1DFB12, 0x00EBF1FE, 0x101618FC);
	r0 = D(r0, s[0][1][1], 0xE717FCF5, 0x1B040CC6, 0xFE0A07E6, 0xFCEF020C);
	r1 = D(r1, s[0][1][1], 0x0105F2FE, 0x02EEF70B, 0x0502F0D6, 0x0FFF0A02);
	r2 = D(r2, s[0][1][1], 0xFFFCF9F8, 0x08F7E803, 0xE7EA1011, 0x06FE0A0B);
	r3 = D(r3, s[0][1][1], 0xFBF80B13, 0xF7F523FB, 0x0FFBF916, 0xFDF4D702);
	r4 = D(r4, s[0][1][1], 0x19CEF8E3, 0x01F819EC, 0xE6F5FEEC, 0x030DF1F5);
	r5 = D(r5, s[0][1][1], 0xFAC2150C, 0xFBE21708, 0xFAF4240F, 0x0DF80608);
	r6 = D(r6, s[0][1][1], 0x02FBFD09, 0x070DDA0A, 0x1CD0060D, 0xF4290105);
	r7 = D(r7, s[0][1][1], 0xF9190DC9, 0x0F1808FB, 0x090701FD, 0x19060DFD);
	r0 = D(r0, s[0][1][2], 0x0007FFF2, 0xF10FF814, 0xF60FF004, 0xF606FB04);
	r1 = D(r1, s[0][1][2], 0xFDF8F403, 0x03F8020B, 0xFAF6FE0E, 0x060E0E03);
	r2 = D(r2, s[0][1][2], 0xF7080502, 0xFAF9F50C, 0x06FB11FB, 0xF80004FC);
	r3 = D(r3, s[0][1][2], 0x01F6F2F4, 0x00031203, 0xFAF8FC08, 0xFA0DD8E9);
	r4 = D(r4, s[0][1][2], 0xEEE22C02, 0x0DF10CE5, 0x01EFF404, 0xF1030C0E);
	r5 = D(r5, s[0][1][2], 0x0AF31C1E, 0x0508FC00, 0x09E21DF8, 0x0C070301);
	r6 = D(r6, s[0][1][2], 0xE3D1E61F, 0xF412F3EF, 0x06C303FC, 0xF61EF703);
	r7 = D(r7, s[0][1][2], 0x0B07FFE3, 0xE703E1B2, 0x0BF2F90B, 0xF30C2600);
	r0 = D(r0, s[0][2][0], 0x0AF8020F, 0xF50BF805, 0x1118FD08, 0x0BFDEEEB);
	r1 = D(r1, s[0][2][0], 0xFF10F5FA, 0xF0FAF90B, 0xFFFEE9FD, 0xFCF70E13);
	r2 = D(r2, s[0][2][0], 0xFE03120D, 0xEFECEE13, 0x101CFFF8, 0xFA02000E);
	r3 = D(r3, s[0][2][0], 0xFE0217FA, 0x0E1AFD07, 0xF7F7FD17, 0x0AF604F5);
	r4 = D(r4, s[0][2][0], 0xF8EC0200, 0x01EBFE03, 0x0C080AE1, 0xF7020AF1);
	r5 = D(r5, s[0][2][0], 0xF405F814, 0xFB0D0813, 0xE4D913FE, 0x050704FF);
	r6 = D(r6, s[0][2][0], 0x090AFAFF, 0x080008DB, 0xF5FF0AE5, 0x14131B06);
	r7 = D(r7, s[0][2][0], 0x051815FB, 0x13040907, 0xFEF8FDF8, 0xE6F90C0C);
	r0 = D(r0, s[0][2][1], 0xFBEF060A, 0x04FEF1E8, 0x08F411FC, 0xFF03F200);
	r1 = D(r1, s[0][2][1], 0xED07E8FB, 0xF1F7EDFB, 0xF60E08F3, 0xFDC509F6);
	r2 = D(r2, s[0][2][1], 0xF714EDE5, 0xFC0CECE9, 0xF2E61AFF, 0xFA16F1F2);
	r3 = D(r3, s[0][2][1], 0x02EB0100, 0x04CE1BE1, 0x0004FE05, 0x0802F20A);
	r4 = D(r4, s[0][2][1], 0x081BEDE5, 0x02CEF9FB, 0xF8FE08F0, 0x040D05E9);
	r5 = D(r5, s[0][2][1], 0xF8CA1511, 0xFFFEFE06, 0xF4FD0A06, 0xFBF80502);
	r6 = D(r6, s[0][2][1], 0x01F80B17, 0x0309FF0E, 0x0A092500, 0x1308FF05);
	r7 = D(r7, s[0][2][1], 0xFF0F1D27, 0x12F40FD9, 0x07EBFDF8, 0xF9D402F6);
	r0 = D(r0, s[0][2][2], 0x0DF802F6, 0xFCFF0AE8, 0xEC1007FB, 0x070D00F4);
	r1 = D(r1, s[0][2][2], 0xF7E7FD0B, 0x14F9F2FB, 0xF2070EFA, 0xF8D60601);
	r2 = D(r2, s[0][2][2], 0xFF0E0EF6, 0xFE1D0AFD, 0x00F400E4, 0xFAFFFAFD);
	r3 = D(r3, s[0][2][2], 0xFB1312EE, 0xE0B60F06, 0x0FFEFE05, 0x0D06EFFE);
	r4 = D(r4, s[0][2][2], 0xE5FCFC07, 0xFFE5F7E6, 0x070A1907, 0x051FE7F8);
	r5 = D(r5, s[0][2][2], 0x07E70F27, 0xFCFD0503, 0x0DE01EFE, 0x07060E00);
	r6 = D(r6, s[0][2][2], 0xFFE60820, 0x190712A6, 0x12F3FA1D, 0xEA1AD2FB);
	r7 = D(r7, s[0][2][2], 0xF314FBD6, 0xF5F305F1, 0xF5DD041C, 0x03190D08);
	r0 = D(r0, s[1][0][0], 0xE208F303, 0xEC020506, 0x0020FFEB, 0xF0F901F9);
	r1 = D(r1, s[1][0][0], 0x0B0DF9EA, 0xFCFE0CFC, 0xFB140508, 0x0B00FA0A);
	r2 = D(r2, s[1][0][0], 0x06010EFE, 0x000800FF, 0xFFFD05F3, 0xF1FF06F9);
	r3 = D(r3, s[1][0][0], 0x00FDFF0E, 0x00F20FED, 0xF4F60008, 0xED0AFBFA);
	r4 = D(r4, s[1][0][0], 0xF9F903FB, 0x09F3FE09, 0x0D07EF20, 0xF4F604EC);
	r5 = D(r5, s[1][0][0], 0x09FD18F1, 0xFE000006, 0xF80B05EF, 0x04F8FCFA);
	r6 = D(r6, s[1][0][0], 0x0E15F1E1, 0x1104F61A, 0xEDF1F617, 0xF204F30F);
	r7 = D(r7, s[1][0][0], 0x0D1AF7DE, 0x00F8F30B, 0x05FD0DFD, 0xFF020210);
	r0 = D(r0, s[1][0][1], 0x0516F8F9, 0x0400FCEE, 0xF30BF7F7, 0xF5050005);
	r1 = D(r1, s[1][0][1], 0xF9F3FAF7, 0x0AF7FF0B, 0x050203FC, 0xF00204F5);
	r2 = D(r2, s[1][0][1], 0xE5FF0600, 0x01090DF4, 0x0AEE0EFF, 0xF704FFFB);
	r3 = D(r3, s[1][0][1], 0x0401030D, 0x01F7FD0A, 0xFEEA0602, 0x0408EFF4);
	r4 = D(r4, s[1][0][1], 0xDBE8FEFA, 0x07F30F10, 0xFCF309F2, 0xFE10E8E5);
	r5 = D(r5, s[1][0][1], 0x23F4050C, 0x00F90A0C, 0xF6060CF8, 0x01FAFEF9);
	r6 = D(r6, s[1][0][1], 0x05D103ED, 0x1B06F007, 0xFE0DF3EB, 0xFD0D13F8);
	r7 = D(r7, s[1][0][1], 0xF1ED0431, 0xE80BF601, 0xF1F3FE01, 0x0DF201FD);
	r0 = D(r0, s[1][0][2], 0xF2EEF1E3, 0xF00E13FB, 0xF813F1EC, 0xF7FFF6FF);
	r1 = D(r1, s[1][0][2], 0x08F503FE, 0xEEEB0100, 0xF103F206, 0xFAF2FCFF);
	r2 = D(r2, s[1][0][2], 0x031108F6, 0xFE0202FD, 0x0FF4F7FA, 0x0CEFF304);
	r3 = D(r3, s[1][0][2], 0x0003F7FB, 0xF40800F9, 0x01F20BF0, 0x05FE04EF);
	r4 = D(r4, s[1][0][2], 0x00F40619, 0xF3FA1AFA, 0xFAFEFAE9, 0x11F10AFD);
	r5 = D(r5, s[1][0][2], 0x08EF060C, 0xF2FDF6F9, 0x1B0415FD, 0xFA04FE00);
	r6 = D(r6, s[1][0][2], 0xF9100F17, 0x1D0501FC, 0xE3020412, 0xE512E2FB);
	r7 = D(r7, s[1][0][2], 0xEFF20E07, 0xCC0510F3, 0x0EFC11EE, 0xFFFA0BFC);
	r0 = D(r0, s[1][1][0], 0x0AF6FF14, 0x02F603F3, 0x03FAFBF3, 0xFB03FDFD);
	r1 = D(r1, s[1][1][0], 0x06FC05EE, 0x04F9FF08, 0x18020214, 0xF1F7000A);
	r2 = D(r2, s[1][1][0], 0x000E1305, 0x01F30DFB, 0xE1F0FE03, 0x05110BFB);
	r3 = D(r3, s[1][1][0], 0xF5F4F3F0, 0x0CF0F2FE, 0xFB060708, 0xFF00FFFD);
	r4 = D(r4, s[1][1][0], 0xF3E7F7E8, 0x01FFF211, 0xECBEE304, 0x10E60202);
	r5 = D(r5, s[1][1][0], 0xFA11F1FB, 0xF60A08F5, 0x0310D805, 0xFCFBF8FF);
	r6 = D(r6, s[1][1][0], 0x20E2F5E1, 0xF7FFF7E1, 0xE10D1CE9, 0x190AF3FB);
	r7 = D(r7, s[1][1][0], 0xFD00FA08, 0xF60327EC, 0x02FB0AF0, 0x0E15FAEA);
	r0 = D(r0, s[1][1][1], 0xF4D1020A, 0xFEFCF805, 0xFCEEDC00, 0xE805FB03);
	r1 = D(r1, s[1][1][1], 0xF0FA03FD, 0xFEDCE8E8, 0xEEFA0D0A, 0x0207FC0F);
	r2 = D(r2, s[1][1][1], 0xEF0905FA, 0x0709EFFB, 0xFFF90513, 0x0203F2FB);
	r3 = D(r3, s[1][1][1], 0xF5FF0706, 0xF6010EFF, 0x01180211, 0xF7D3F803);
	r4 = D(r4, s[1][1][1], 0xFE19F8F6, 0xEF0C07FD, 0xFFDEEEF9, 0x04D5FE03);
	r5 = D(r5, s[1][1][1], 0xF4070AFC, 0x05120F0A, 0xD5FE09FC, 0xF2FCF40F);
	r6 = D(r6, s[1][1][1], 0xE2E215FF, 0x04E1BC04, 0xCD0211E6, 0xCEABF332);
	r7 = D(r7, s[1][1][1], 0x1BD4ECFB, 0x0B061905, 0xF7F408FA, 0x0FF108F8);
	r0 = D(r0, s[1][1][2], 0x00020BF0, 0xFD08FD03, 0xF0F9EFF3, 0xFE0AFB03);
	r1 = D(r1, s[1][1][2], 0x0A0800FC, 0x11F0FF04, 0xF2EC1619, 0xD6FA00F8);
	r2 = D(r2, s[1][1][2], 0xFD090813, 0xE1FBEBFF, 0x0000F4F6, 0x04F6F50A);
	r3 = D(r3, s[1][1][2], 0x0304F6FA, 0xC4F10E05, 0xF80F06FD, 0x03E808FC);
	r4 = D(r4, s[1][1][2], 0xEFEF01F8, 0x01F608EF, 0x1B1408E8, 0x0BD8FF00);
	r5 = D(r5, s[1][1][2], 0x010C12F7, 0x0602F5EF, 0x070002FB, 0x0CFDFDFF);
	r6 = D(r6, s[1][1][2], 0xFE03030E, 0xFAF70FF6, 0x10FCF31F, 0x18B000EC);
	r7 = D(r7, s[1][1][2], 0xEEEDFAF0, 0xF905170E, 0x0C0806FB, 0xD6FB0B04);
	r0 = D(r0, s[1][2][0], 0x05030407, 0xF8F6E0F7, 0xF706FB06, 0xFDFCE8F1);
	r1 = D(r1, s[1][2][0], 0xF70CE5FA, 0x02F3F9FC, 0xEC060812, 0x01EE0802);
	r2 = D(r2, s[1][2][0], 0xF905F7F7, 0xE8FEE8F3, 0xF70D05F4, 0xF8FD01F4);
	r3 = D(r3, s[1][2][0], 0x05F2F51F, 0x05010F0C, 0x01FC06FD, 0x01ECED06);
	r4 = D(r4, s[1][2][0], 0xFC080DF3, 0xF10012FB, 0xF3E0FF0D, 0x04FC000D);
	r5 = D(r5, s[1][2][0], 0x132E14F5, 0x0E190101, 0x01FE02F7, 0xFE02FBFF);
	r6 = D(r6, s[1][2][0], 0x1313E0ED, 0xF402F40A, 0x1DF9E707, 0x1CFEDDFA);
	r7 = D(r7, s[1][2][0], 0xF301FCF1, 0x1602FED8, 0x020005FE, 0x0EEE04F8);
	r0 = D(r0, s[1][2][1], 0x04FC1C0B, 0xF8F6F601, 0xFE17EC07, 0x0109E8FF);
	r1 = D(r1, s[1][2][1], 0x0B00E100, 0xFDA6F608, 0xF0F1010C, 0x0B05F603);
	r2 = D(r2, s[1][2][1], 0x0CF7EDF3, 0xFFE6CEF2, 0xF7F5161C, 0x06DFFAFA);
	r3 = D(r3, s[1][2][1], 0x08FDF30E, 0xF602F602, 0xFAF303FF, 0x07E9C3FB);
	r4 = D(r4, s[1][2][1], 0x0006F4FD, 0xFF090812, 0xE507EB0B, 0x0DF2F4FD);
	r5 = D(r5, s[1][2][1], 0xFD050A04, 0xFEFE09FD, 0xF9E006FC, 0x050006FA);
	r6 = D(r6, s[1][2][1], 0x0F0E06FC, 0x12FAF7F4, 0x110DC809, 0xED08C600);
	r7 = D(r7, s[1][2][1], 0x12EE0A0C, 0x1812E00D, 0x0E0AFA04, 0x14F203EA);
	r0 = D(r0, s[1][2][2], 0xE506F900, 0x02F502F2, 0xF2FDFF0A, 0xEFFAF2FA);
	r1 = D(r1, s[1][2][2], 0xF9F4EE00, 0xFAEDF0F9, 0xF9FA0F08, 0x020501F9);
	r2 = D(r2, s[1][2][2], 0xF9EE08F9, 0xEEE7DDFD, 0xD7FD07FA, 0xF0EBF4FE);
	r3 = D(r3, s[1][2][2], 0xF6F5E708, 0x02E30408, 0x02FD08F4, 0x01FDE5F7);
	r4 = D(r4, s[1][2][2], 0x09EC05FE, 0xF719FE01, 0x0A0CFEFE, 0xF2DDF1FF);
	r5 = D(r5, s[1][2][2], 0x14E120FB, 0xFC0B00F5, 0x0AFDFBF7, 0x040400FC);
	r6 = D(r6, s[1][2][2], 0x06EE0C04, 0x03F601DA, 0x0C08EBF7, 0xE3082F0E);
	r7 = D(r7, s[1][2][2], 0xEB0EEDF7, 0xFCF2FD19, 0x0FEC0BF5, 0x09EBEC0A);
	s[0][0][0] = G[8][xy.y+0][xy.x+0]; s[0][0][1] = G[8][xy.y+0][xy.x+1];
	s[0][0][2] = G[8][xy.y+0][xy.x+2]; s[0][1][0] = G[8][xy.y+1][xy.x+0];
	s[0][1][1] = G[8][xy.y+1][xy.x+1]; s[0][1][2] = G[8][xy.y+1][xy.x+2];
	s[0][2][0] = G[8][xy.y+2][xy.x+0]; s[0][2][1] = G[8][xy.y+2][xy.x+1];
	s[0][2][2] = G[8][xy.y+2][xy.x+2]; s[1][0][0] = G[9][xy.y+0][xy.x+0];
	s[1][0][1] = G[9][xy.y+0][xy.x+1]; s[1][0][2] = G[9][xy.y+0][xy.x+2];
	s[1][1][0] = G[9][xy.y+1][xy.x+0]; s[1][1][1] = G[9][xy.y+1][xy.x+1];
	s[1][1][2] = G[9][xy.y+1][xy.x+2]; s[1][2][0] = G[9][xy.y+2][xy.x+0];
	s[1][2][1] = G[9][xy.y+2][xy.x+1]; s[1][2][2] = G[9][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x0307E4F9, 0xF406E300, 0x0CFD0002, 0x030304F6);
	r1 = D(r1, s[0][0][0], 0xF4FFFCFA, 0x0F01040B, 0x11FF07FE, 0x09FFFB11);
	r2 = D(r2, s[0][0][0], 0x1203F70A, 0x0FF5FFF5, 0x040E08FD, 0xFEFCFC09);
	r3 = D(r3, s[0][0][0], 0xFBF3FC07, 0x1A05010B, 0x010C01F7, 0x0BFDE311);
	r4 = D(r4, s[0][0][0], 0xFD0F1D02, 0x0BFB08F7, 0x05F4EEF3, 0xFB02C2FB);
	r5 = D(r5, s[0][0][0], 0xFD0BE103, 0x021508F8, 0xE102F5FB, 0x03FF0104);
	r6 = D(r6, s[0][0][0], 0xEFF20502, 0x0AFF0B08, 0xA4FCC9F7, 0xD6FF0800);
	r7 = D(r7, s[0][0][0], 0x1CFC14E1, 0x020B1CF4, 0x070702FB, 0xEBF11B31);
	r0 = D(r0, s[0][0][1], 0x0CDEFEF5, 0xFB001701, 0x0C01FA02, 0xFAFFF503);
	r1 = D(r1, s[0][0][1], 0xFEEC0A03, 0xF4010EF9, 0xF102EFF2, 0x0B0F00FA);
	r2 = D(r2, s[0][0][1], 0x02E7F7E9, 0x0504FCFF, 0xDC09F9F7, 0xF302FEE8);
	r3 = D(r3, s[0][0][1], 0xEE1A0A06, 0x03041311, 0x0AE40503, 0x04F90B02);
	r4 = D(r4, s[0][0][1], 0xE20B0DF2, 0xFE151205, 0x03FA01D9, 0x080407F3);
	r5 = D(r5, s[0][0][1], 0xF602E7D9, 0xF614FB06, 0x04F41C01, 0x0B1203FC);
	r6 = D(r6, s[0][0][1], 0x1119F9EB, 0x0DFD1615, 0xC505C5D6, 0xE4090514);
	r7 = D(r7, s[0][0][1], 0xF80204EA, 0xEFECEB20, 0x00F90BF9, 0x09030C05);
	r0 = D(r0, s[0][0][2], 0xF2021F01, 0x19060529, 0x0AF4F602, 0xF7020602);
	r1 = D(r1, s[0][0][2], 0x0610FC13, 0x020804E9, 0xF6F2FFEE, 0xFD03FAF5);
	r2 = D(r2, s[0][0][2], 0x0BF7F4FA, 0x0EF906F6, 0xF5F60700, 0x05FAF40B);
	r3 = D(r3, s[0][0][2], 0xFDFF0506, 0x0300F210, 0x0C050400, 0x0100060D);
	r4 = D(r4, s[0][0][2], 0x0307FBFB, 0x120E1401, 0xFC171F08, 0x050AE605);
	r5 = D(r5, s[0][0][2], 0x12F1FBE2, 0xFF0BFDFF, 0xF2FD0001, 0x02030001);
	r6 = D(r6, s[0][0][2], 0x0DFFFA2E, 0xFBFEFBCC, 0xE6FAE3FA, 0xDBF70706);
	r7 = D(r7, s[0][0][2], 0xF3040E03, 0xE60407EB, 0xFF130A07, 0xFC010703);
	r0 = D(r0, s[0][1][0], 0xEFFF0B06, 0xFA0DE606, 0xFBF9FE0A, 0x0910FA02);
	r1 = D(r1, s[0][1][0], 0x0CF3FFFF, 0x0A06FD06, 0xF1F2E4E5, 0x060EFA01);
	r2 = D(r2, s[0][1][0], 0xECFEF0F8, 0xFD05F306, 0xFCF0FB07, 0x04FBF608);
	r3 = D(r3, s[0][1][0], 0x0804F906, 0xF1030305, 0xFB0F04F7, 0x0E04040D);
	r4 = D(r4, s[0][1][0], 0x0D030304, 0xF9190BE5, 0xFC0BE3E8, 0x0908EC0F);
	r5 = D(r5, s[0][1][0], 0xEDF4F50E, 0xFDECF907, 0xF514C7EE, 0xFE300C04);
	r6 = D(r6, s[0][1][0], 0x01E2FE1F, 0x0104FC02, 0x07FEE2FF, 0xF9E40213);
	r7 = D(r7, s[0][1][0], 0xFA040900, 0x05FBEBE8, 0xF908ECFA, 0x05F71DF9);
	r0 = D(r0, s[0][1][1], 0x0524032D, 0xEF11FDF2, 0x0EEC080C, 0x0AD7010D);
	r1 = D(r1, s[0][1][1], 0x06DD1808, 0xF5170CF4, 0xFEFECDFE, 0x0614EF11);
	r2 = D(r2, s[0][1][1], 0x0709E7E5, 0xFE2803F2, 0xFA0DF8E4, 0xFD11F305);
	r3 = D(r3, s[0][1][1], 0xEB13F102, 0x0D0C08C5, 0xFE19EE01, 0x17F0F714);
	r4 = D(r4, s[0][1][1], 0x10E20204, 0xE6F91C18, 0x11F2F0CE, 0x0E07E8FC);
	r5 = D(r5, s[0][1][1], 0xE716E3E2, 0xF2EC02F7, 0xE5FA0C11, 0x0005FF07);
	r6 = D(r6, s[0][1][1], 0xFFFDE4FD, 0x0AFA1AF2, 0x0204FE05, 0x18E7F7FD);
	r7 = D(r7, s[0][1][1], 0x02FCEFEC, 0xECE3F9F0, 0x08E4F908, 0x0804FFE0);
	r0 = D(r0, s[0][1][2], 0x000BFFFE, 0xF20107FD, 0x0E0EF910, 0x03F8FCFE);
	r1 = D(r1, s[0][1][2], 0xFD13FAF4, 0x090909EC, 0xEA23FCEB, 0xFDF00E0C);
	r2 = D(r2, s[0][1][2], 0xFA0306FF, 0xFBF1F4FF, 0x0508F9FA, 0x050804F6);
	r3 = D(r3, s[0][1][2], 0xF6040506, 0xFE000B03, 0x0700FFFB, 0x0801120D);
	r4 = D(r4, s[0][1][2], 0xFCF9F625, 0x07EDF600, 0x010B1104, 0x0AFCEAF3);
	r5 = D(r5, s[0][1][2], 0xF0F61500, 0x04070600, 0xFFF10CF1, 0x06EF0504);
	r6 = D(r6, s[0][1][2], 0xE303041B, 0x230503F0, 0x1C0F132A, 0xF2E109E4);
	r7 = D(r7, s[0][1][2], 0xEEFB02F8, 0x04FB0201, 0xF819E814, 0x0FFD04F0);
	r0 = D(r0, s[0][2][0], 0xFF090B0A, 0xF206F703, 0xF9FB1203, 0x0B0FFD06);
	r1 = D(r1, s[0][2][0], 0xF703F104, 0xF703BB00, 0x0A010403, 0x07F6FBFE);
	r2 = D(r2, s[0][2][0], 0x00FF0610, 0x09FDF8FA, 0x0100E70C, 0xF4F9EE01);
	r3 = D(r3, s[0][2][0], 0x08050107, 0x290320FF, 0xF9FE0003, 0xFE08EFFB);
	r4 = D(r4, s[0][2][0], 0xFB0307EF, 0x03041DF8, 0x05080908, 0x0E07F1FD);
	r5 = D(r5, s[0][2][0], 0xF4F41F02, 0xF6F5FA01, 0xE6F7FBF6, 0x02F60301);
	r6 = D(r6, s[0][2][0], 0x02010C08, 0x260205D6, 0x01FCF9FC, 0xFDF50412);
	r7 = D(r7, s[0][2][0], 0x0407F705, 0x06F61DF6, 0x02FFFE01, 0x22EC06F1);
	r0 = D(r0, s[0][2][1], 0x09060602, 0x05F0EFEE, 0x0301020A, 0xFF00FE10);
	r1 = D(r1, s[0][2][1], 0x05040CFD, 0x05EEFFE7, 0xE90505EA, 0xE412CA0B);
	r2 = D(r2, s[0][2][1], 0xFAFAF0F7, 0xF117D809, 0x10F722FD, 0x0D0FED02);
	r3 = D(r3, s[0][2][1], 0x05F009F7, 0xFA04F00C, 0xFD08FE08, 0x0005FD04);
	r4 = D(r4, s[0][2][1], 0x19060BF2, 0xF90A0DEA, 0x0507EC00, 0xFA09FAFC);
	r5 = D(r5, s[0][2][1], 0xF4F3D8EA, 0x0CFCFD02, 0xEEF619F7, 0x0B06FFFC);
	r6 = D(r6, s[0][2][1], 0xF5EEFFE9, 0xDBFB07DC, 0xFE06F4FF, 0xE810FC05);
	r7 = D(r7, s[0][2][1], 0xF2000F05, 0xFCF103F8, 0x0B010000, 0xE3F6F4DC);
	r0 = D(r0, s[0][2][2], 0xFF06F8F7, 0xFBFEFB07, 0x0100120B, 0xFB0BFA0D);
	r1 = D(r1, s[0][2][2], 0x010C0405, 0x00020109, 0xFEFC030C, 0x0707F50D);
	r2 = D(r2, s[0][2][2], 0xFCFEFAFF, 0xF6FEF4F0, 0x0BFD13FE, 0x090F0700);
	r3 = D(r3, s[0][2][2], 0xF9090BF3, 0x07FFF90B, 0x0501FEFF, 0x05000808);
	r4 = D(r4, s[0][2][2], 0xFF0803DD, 0x0401FCEC, 0x03160006, 0x0809FDEE);
	r5 = D(r5, s[0][2][2], 0xFD0910E8, 0x0705F4FF, 0xF9FD03ED, 0x02FC0002);
	r6 = D(r6, s[0][2][2], 0xF50B14FE, 0x0BFAF1E6, 0x00050C01, 0x04F2EC0F);
	r7 = D(r7, s[0][2][2], 0x0E07FB03, 0xF7101012, 0xFD051105, 0xF5FC00F6);
	r0 = D(r0, s[1][0][0], 0xFAFD0105, 0xE60D0519, 0xFB100202, 0x08FA04F8);
	r1 = D(r1, s[1][0][0], 0xF6FA0606, 0x05E805F9, 0xFC07F70A, 0x040A0502);
	r2 = D(r2, s[1][0][0], 0xFFFB03EF, 0x050AFEFE, 0xFB1410F6, 0x02FC14F8);
	r3 = D(r3, s[1][0][0], 0xF50508F7, 0xF4040402, 0x04F7F6F6, 0xF4F600F9);
	r4 = D(r4, s[1][0][0], 0x03F4F701, 0xFEF1EFFB, 0x15E20107, 0xE2EF020D);
	r5 = D(r5, s[1][0][0], 0x0405F3FC, 0xFE0AEF03, 0x09FE050E, 0xF1F201FB);
	r6 = D(r6, s[1][0][0], 0xE91D0713, 0x2004F6FC, 0x0B120B03, 0x16FFF3F6);
	r7 = D(r7, s[1][0][0], 0xE4E612F7, 0xF8020E03, 0xEEFCFDF3, 0x0BEBF800);
	r0 = D(r0, s[1][0][1], 0x05FFEF00, 0x1003F6F8, 0xFB03FDF6, 0x0704F306);
	r1 = D(r1, s[1][0][1], 0xFAF4F7FF, 0xFD03ED11, 0x020B04EB, 0x0302FD01);
	r2 = D(r2, s[1][0][1], 0x13FBFAFC, 0x09070205, 0x091BE8FB, 0xFFFEF707);
	r3 = D(r3, s[1][0][1], 0x09F5F10C, 0xF4FCFBF5, 0x03EBFE04, 0x0CDDFC00);
	r4 = D(r4, s[1][0][1], 0x15FDF4F4, 0xFEFCF5FE, 0xF2F10105, 0x04D70A05);
	r5 = D(r5, s[1][0][1], 0x15FBEEFA, 0xF503EE04, 0xFA14FF08, 0x0101F808);
	r6 = D(r6, s[1][0][1], 0x12EFD704, 0xFE0FFA0F, 0xE707F20A, 0xFF10EFFA);
	r7 = D(r7, s[1][0][1], 0xF7DF1201, 0x0CFD1005, 0x0B0400FF, 0x09160CFE);
	r0 = D(r0, s[1][0][2], 0xF3F2FFF7, 0x03F60005, 0xF402FCFD, 0xF9FEF505);
	r1 = D(r1, s[1][0][2], 0xFA000305, 0xFEF9ED05, 0xFDFF040B, 0x040814F9);
	r2 = D(r2, s[1][0][2], 0x05ECFFF5, 0xFF0610FE, 0x02FBEBF8, 0xF90EE511);
	r3 = D(r3, s[1][0][2], 0xFB0BF80C, 0x0DF505F6, 0x01EC1303, 0x0904000E);
	r4 = D(r4, s[1][0][2], 0x0705ECFC, 0xFBFF0B03, 0x0205E90C, 0x08FBFF02);
	r5 = D(r5, s[1][0][2], 0xFFF2DFF9, 0x030AF5F6, 0x00170401, 0xFE07FFF5);
	r6 = D(r6, s[1][0][2], 0xF8F0FFFA, 0x1BC413FE, 0xFAF913FE, 0xF4F9FC27);
	r7 = D(r7, s[1][0][2], 0xE403080E, 0xF5120615, 0xFC05D10A, 0x0DF6FFF9);
	r0 = D(r0, s[1][1][0], 0xFBF6F50B, 0xFA13020A, 0xF5F90206, 0xF2050301);
	r1 = D(r1, s[1][1][0], 0x08F2FA04, 0xFD0600FB, 0x030C0AFF, 0x0DFDFBF9);
	r2 = D(r2, s[1][1][0], 0xFC0CFA0A, 0xFC000D06, 0x0E021121, 0x0406030B);
	r3 = D(r3, s[1][1][0], 0xEEEB09FA, 0x06EDFF09, 0x01FE0101, 0xF8EE04FA);
	r4 = D(r4, s[1][1][0], 0x19FB18FC, 0xEA03F9E8, 0xFD0FFB00, 0xF8E9F108);
	r5 = D(r5, s[1][1][0], 0xF7080EFA, 0x0211FC09, 0xEF070AD4, 0xF50307F4);
	r6 = D(r6, s[1][1][0], 0xFF0D030C, 0xE1EFFBF4, 0xFA0FF105, 0x0B06FE0F);
	r7 = D(r7, s[1][1][0], 0x06EEFE08, 0xE9F9ED05, 0x01FD05E8, 0x0313F7F4);
	r0 = D(r0, s[1][1][1], 0xFCECF9F0, 0xF31E080E, 0x170BF507, 0xF8F5FC10);
	r1 = D(r1, s[1][1][1], 0xFB02FF06, 0x01E7F6F9, 0xF5FED416, 0xFEF9DBFA);
	r2 = D(r2, s[1][1][1], 0x00F500F7, 0xFE070115, 0xF2E50EE0, 0x0303F412);
	r3 = D(r3, s[1][1][1], 0x0202E6FE, 0xFCF806C6, 0xF4FA0804, 0x0AD40E1C);
	r4 = D(r4, s[1][1][1], 0x0A0A1D0D, 0xF50711EF, 0x0802F205, 0x01DDF20B);
	r5 = D(r5, s[1][1][1], 0x27000DF8, 0x01FCF704, 0xFD08F80B, 0x001307FA);
	r6 = D(r6, s[1][1][1], 0x03EB05ED, 0xFF0411FF, 0xF8CAEFDF, 0x00051608);
	r7 = D(r7, s[1][1][1], 0x0F26F8E6, 0x002CF0EF, 0x10F50208, 0xE8E92907);
	r0 = D(r0, s[1][1][2], 0xF8F41911, 0xFE141501, 0xFE14F801, 0xF503F305);
	r1 = D(r1, s[1][1][2], 0x0CEFFFF7, 0xFD0CF2F5, 0xF6FFE3FA, 0xFFFF0CF4);
	r2 = D(r2, s[1][1][2], 0xFAF50702, 0x0202E7F5, 0xF40D1100, 0x0713EAF7);
	r3 = D(r3, s[1][1][2], 0xFB03E60A, 0x0EE81200, 0x07F60003, 0xEE06FDFB);
	r4 = D(r4, s[1][1][2], 0x0C00D5EC, 0x0EF41400, 0xFEFDF500, 0x11EF01F8);
	r5 = D(r5, s[1][1][2], 0x070201FC, 0xFEF0FA11, 0xF00B0B03, 0x03F509FA);
	r6 = D(r6, s[1][1][2], 0xF906C3DB, 0xF3FD16FC, 0xEBED130D, 0xFFF7EEEC);
	r7 = D(r7, s[1][1][2], 0xF2E20709, 0xF813F203, 0xF3FD07E6, 0xFB10F210);
	r0 = D(r0, s[1][2][0], 0x11F211FB, 0xF9050DFD, 0x01FAF0FC, 0xFBF708FF);
	r1 = D(r1, s[1][2][0], 0x03FB14FC, 0x08FE1118, 0x08FF0703, 0xFBF8FBEF);
	r2 = D(r2, s[1][2][0], 0x0806F7FE, 0x12F2FEF9, 0x00E41302, 0x04FC0616);
	r3 = D(r3, s[1][2][0], 0xFF02FEFF, 0xFCF40521, 0x01F8FE05, 0xFCEE0E00);
	r4 = D(r4, s[1][2][0], 0xFA04E500, 0x0500F108, 0x0CF617ED, 0xFA010EF3);
	r5 = D(r5, s[1][2][0], 0xFD0404FB, 0x07FF0304, 0x0A07F0F9, 0xFD0302FA);
	r6 = D(r6, s[1][2][0], 0x121326F6, 0xF4EDF4F2, 0x140C0C06, 0x0300F2F2);
	r7 = D(r7, s[1][2][0], 0xF4FFE40B, 0xEE0A02FB, 0x02FF0800, 0xED01EAFA);
	r0 = D(r0, s[1][2][1], 0x00F60BF7, 0x06FE0DFA, 0x0E110709, 0x0E0B0006);
	r1 = D(r1, s[1][2][1], 0x1206F804, 0x0A0BEE10, 0x0610F4F0, 0xF0F500F7);
	r2 = D(r2, s[1][2][1], 0xFD000006, 0x110003F7, 0x150BD2E1, 0x09F7F504);
	r3 = D(r3, s[1][2][1], 0xFD080C0C, 0x0C14F907, 0xFDFDFD06, 0x02F2070A);
	r4 = D(r4, s[1][2][1], 0x010F20FD, 0xEF01E703, 0x0C0CFCED, 0x02F20EFE);
	r5 = D(r5, s[1][2][1], 0x0708000B, 0x0713FB0A, 0xF719FA05, 0x0008FF02);
	r6 = D(r6, s[1][2][1], 0xFE02E42A, 0x180D12FA, 0x0A111C00, 0x00F4FF08);
	r7 = D(r7, s[1][2][1], 0x0A0404F4, 0xFE08F2E8, 0x16090113, 0x00062605);
	r0 = D(r0, s[1][2][2], 0x10FEF80B, 0xFB11FC02, 0xF8FA04FA, 0xF9F3F1F8);
	r1 = D(r1, s[1][2][2], 0x040C080B, 0xF80805F9, 0xF906F7FD, 0x06011309);
	r2 = D(r2, s[1][2][2], 0x0F0D00FD, 0x06F902FC, 0xFC050406, 0x01F8FDFC);
	r3 = D(r3, s[1][2][2], 0xF4F8EF01, 0xFC002405, 0x00FA0401, 0xF6F6F0F9);
	r4 = D(r4, s[1][2][2], 0x06FEFD01, 0x08020906, 0x0CFFFF0E, 0xFEFC05FB);
	r5 = D(r5, s[1][2][2], 0x0709FB0E, 0x030B0314, 0x000D0AFD, 0xFF050108);
	r6 = D(r6, s[1][2][2], 0xEF06E40B, 0xFC1111FB, 0xFC02F8F9, 0xFBBD080F);
	r7 = D(r7, s[1][2][2], 0xF1F0F906, 0xFAF4120E, 0x0408E8F8, 0xF30D09F3);
	s[0][0][0] = G[10][xy.y+0][xy.x+0]; s[0][0][1] = G[10][xy.y+0][xy.x+1];
	s[0][0][2] = G[10][xy.y+0][xy.x+2]; s[0][1][0] = G[10][xy.y+1][xy.x+0];
	s[0][1][1] = G[10][xy.y+1][xy.x+1]; s[0][1][2] = G[10][xy.y+1][xy.x+2];
	s[0][2][0] = G[10][xy.y+2][xy.x+0]; s[0][2][1] = G[10][xy.y+2][xy.x+1];
	s[0][2][2] = G[10][xy.y+2][xy.x+2]; s[1][0][0] = G[11][xy.y+0][xy.x+0];
	s[1][0][1] = G[11][xy.y+0][xy.x+1]; s[1][0][2] = G[11][xy.y+0][xy.x+2];
	s[1][1][0] = G[11][xy.y+1][xy.x+0]; s[1][1][1] = G[11][xy.y+1][xy.x+1];
	s[1][1][2] = G[11][xy.y+1][xy.x+2]; s[1][2][0] = G[11][xy.y+2][xy.x+0];
	s[1][2][1] = G[11][xy.y+2][xy.x+1]; s[1][2][2] = G[11][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xF2090F02, 0xEFFF0909, 0x03021BF7, 0xFFEC0008);
	r1 = D(r1, s[0][0][0], 0x0207FC08, 0x03E906F6, 0xF3F31001, 0x0807FDFF);
	r2 = D(r2, s[0][0][0], 0xFB04FC01, 0xF906FFF9, 0x0AFC1209, 0xFC0105F0);
	r3 = D(r3, s[0][0][0], 0x0DFEF6E6, 0xF5F0F605, 0x000CF4FC, 0x07FA07F8);
	r4 = D(r4, s[0][0][0], 0x120502E3, 0x10EBF2FF, 0xF2E8EDF2, 0xFD0505FE);
	r5 = D(r5, s[0][0][0], 0xF80BF1FE, 0xFB08ED03, 0x090B0110, 0x02F80A03);
	r6 = D(r6, s[0][0][0], 0xFBF70F08, 0xF835F506, 0x09110212, 0x0A0007F6);
	r7 = D(r7, s[0][0][0], 0x0C0BEFE4, 0xE903ECF7, 0xFD070802, 0x0F09C412);
	r0 = D(r0, s[0][0][1], 0x04F610EE, 0x1E0AFB08, 0x19FA000B, 0x07FE0DFE);
	r1 = D(r1, s[0][0][1], 0xFFF705EB, 0x07F307F4, 0x14FBF4F2, 0xDF09F7FA);
	r2 = D(r2, s[0][0][1], 0x030D03F4, 0xF9FE0010, 0x29F5EFFE, 0x110A0BF9);
	r3 = D(r3, s[0][0][1], 0x0701F303, 0x2B060E01, 0xF90DFAEF, 0x04FBFAD5);
	r4 = D(r4, s[0][0][1], 0xFDE617FE, 0xEEFDEFFD, 0x17F7F5EB, 0xFB163000);
	r5 = D(r5, s[0][0][1], 0x01E7BEF8, 0xED0DEB03, 0xE51501FD, 0xFFFE080D);
	r6 = D(r6, s[0][0][1], 0xFA0DEFD6, 0xF71104D1, 0xAAFF0FF0, 0x26F910F8);
	r7 = D(r7, s[0][0][1], 0xFEE81ED2, 0xF412E0E3, 0x0707FED5, 0x06F0F7E8);
	r0 = D(r0, s[0][0][2], 0xFFEE06F1, 0xF0100010, 0xF3E910FC, 0x02FC1CF8);
	r1 = D(r1, s[0][0][2], 0x15EDF3F4, 0xFF0C0BF1, 0xEE1AEFFF, 0xF7F2F70E);
	r2 = D(r2, s[0][0][2], 0xED18EDEF, 0x05070904, 0x10E7ECEB, 0x000111FB);
	r3 = D(r3, s[0][0][2], 0xFE0003F6, 0xF606FC07, 0xFC08EBE5, 0x07FC07F8);
	r4 = D(r4, s[0][0][2], 0xFB0EFCF2, 0x0CF5E7FF, 0xEFF603F0, 0x03F60108);
	r5 = D(r5, s[0][0][2], 0xF308F1FC, 0xFF04FE05, 0xF704F406, 0x05F80506);
	r6 = D(r6, s[0][0][2], 0xF00BCB01, 0x0505DDF6, 0xE4E4F9E4, 0x18F0F517);
	r7 = D(r7, s[0][0][2], 0x15E90381, 0x1F091512, 0x1208F900, 0x140CD923);
	r0 = D(r0, s[0][1][0], 0x04EAFB08, 0x03F50C0B, 0x01E40012, 0x05FD04F7);
	r1 = D(r1, s[0][1][0], 0x08F9060A, 0x01F606FD, 0xF7F0F9F5, 0xF010EBF7);
	r2 = D(r2, s[0][1][0], 0xEEF10504, 0x05FAFEF3, 0x0E04E1F6, 0x0805FE05);
	r3 = D(r3, s[0][1][0], 0xFFFB03FD, 0x090005F6, 0xF70102FC, 0x11F9F20A);
	r4 = D(r4, s[0][1][0], 0xDF16EB04, 0xFC160CF1, 0x02EED902, 0xFE0BDE1E);
	r5 = D(r5, s[0][1][0], 0xF71AD607, 0xFDF505FA, 0xFC1D1A0D, 0x03F8FF06);
	r6 = D(r6, s[0][1][0], 0x13F0E817, 0xF01DD405, 0xF3FBE0DF, 0xDD02030F);
	r7 = D(r7, s[0][1][0], 0x231EDCF7, 0xFBF7E2C2, 0x03F6FDFB, 0x161C0EF2);
	r0 = D(r0, s[0][1][1], 0xF30AF402, 0xFF0B1800, 0xF5F809EC, 0x01F11208);
	r1 = D(r1, s[0][1][1], 0xF703041A, 0xFB01030D, 0x0900EA1B, 0x1709DDEC);
	r2 = D(r2, s[0][1][1], 0xF70805FD, 0x0AF014FE, 0xCC15F7FF, 0x04FC1016);
	r3 = D(r3, s[0][1][1], 0x17050307, 0xF719FE06, 0xEC0CF001, 0x04F2F4F4);
	r4 = D(r4, s[0][1][1], 0x1806DEE2, 0xF10EF5F9, 0x04050BE4, 0xFC09EFF8);
	r5 = D(r5, s[0][1][1], 0x1E1316F0, 0xFF13FBF8, 0x1204F507, 0xFF00FE02);
	r6 = D(r6, s[0][1][1], 0xD907E6F4, 0x0215F310, 0xF6FB16B1, 0xCAEDEB09);
	r7 = D(r7, s[0][1][1], 0xC7FBFED8, 0x03DEE3FD, 0x00FA01EE, 0xE4FDF3E3);
	r0 = D(r0, s[0][1][2], 0xFD011310, 0x090201FB, 0x04EBF3F5, 0xFBFE14F2);
	r1 = D(r1, s[0][1][2], 0xFA0506EE, 0x02EB13F5, 0x15ED030A, 0xF522F914);
	r2 = D(r2, s[0][1][2], 0xF8F4F4FA, 0x08F91207, 0xE1F0F201, 0xF7EA1800);
	r3 = D(r3, s[0][1][2], 0xFB0409FA, 0x1214F022, 0xF80EFDF6, 0xFAF21BFF);
	r4 = D(r4, s[0][1][2], 0xF8FCFAF2, 0xFC0411EF, 0x0DEF02F2, 0x11091816);
	r5 = D(r5, s[0][1][2], 0x100CEDF2, 0x000301FC, 0x0709FEFF, 0x010AF9FA);
	r6 = D(r6, s[0][1][2], 0x1BF0EF02, 0xFEFB07FD, 0xF9F40029, 0xCCF6D527);
	r7 = D(r7, s[0][1][2], 0xFF0F061A, 0x03FD0C30, 0xFEE00DF8, 0x080BFAEF);
	r0 = D(r0, s[0][2][0], 0x0E02FB05, 0x0208F7F8, 0x100707FF, 0xFEFA1CFF);
	r1 = D(r1, s[0][2][0], 0x0908FDFF, 0x0BFFEB01, 0xF203F606, 0x17F6F9F6);
	r2 = D(r2, s[0][2][0], 0xF20EFF0B, 0xF8FF0802, 0xF011F311, 0x0EF3FF0C);
	r3 = D(r3, s[0][2][0], 0x091009F4, 0x04F5FCFE, 0x08F5F905, 0x100101EF);
	r4 = D(r4, s[0][2][0], 0x0205F7F8, 0xFBFB1CFC, 0x17CFEB1C, 0xFF15EC09);
	r5 = D(r5, s[0][2][0], 0x1DDBF40C, 0x0805000E, 0xDC0F11EE, 0xFEFE01FF);
	r6 = D(r6, s[0][2][0], 0x2001C506, 0xF118F605, 0x0500100C, 0x1CCAFC09);
	r7 = D(r7, s[0][2][0], 0xE70DF404, 0x0604F9FC, 0x000BFE02, 0xEB15EC04);
	r0 = D(r0, s[0][2][1], 0x03020712, 0x05FC11FA, 0xF9FD1511, 0x0CF00EFD);
	r1 = D(r1, s[0][2][1], 0x10060605, 0x15EA0002, 0xE5FA0907, 0xF4FEEF09);
	r2 = D(r2, s[0][2][1], 0xE70A08F4, 0xFB07F305, 0x0504C30B, 0x0C0BFFF9);
	r3 = D(r3, s[0][2][1], 0x0D00F0F7, 0xF40D0F09, 0xF500F706, 0x0CFAFA08);
	r4 = D(r4, s[0][2][1], 0xEE03F119, 0x09EBF7F3, 0x091302F8, 0xF80BE50A);
	r5 = D(r5, s[0][2][1], 0x051FC711, 0x01020803, 0x08FFF5FF, 0x000D0AFB);
	r6 = D(r6, s[0][2][1], 0x0E050824, 0x1411FF0B, 0xF807060A, 0x1C2A0FE3);
	r7 = D(r7, s[0][2][1], 0x13F6F701, 0x1BF22708, 0xFAFB1107, 0x0E02F606);
	r0 = D(r0, s[0][2][2], 0xF2FFFC06, 0xFCFD11FD, 0x09E901F9, 0xFCEC0AFB);
	r1 = D(r1, s[0][2][2], 0x040B010B, 0xFDFC05FB, 0xF1F8F7F5, 0x0707FEFC);
	r2 = D(r2, s[0][2][2], 0xFEFDFD00, 0xFAFB0807, 0x0AD21C10, 0x01F60107);
	r3 = D(r3, s[0][2][2], 0xFDF608F2, 0xF2EDE8FE, 0xF701FC03, 0xFF0101F6);
	r4 = D(r4, s[0][2][2], 0xFDEEFDFF, 0xFCFD06FB, 0x03F1F40C, 0xF80AF81C);
	r5 = D(r5, s[0][2][2], 0x1A0BF508, 0xFCFC0012, 0x060713FA, 0xFB0CFEFE);
	r6 = D(r6, s[0][2][2], 0xFFFDC711, 0x0503E7F4, 0x04CD0413, 0xEAD220D8);
	r7 = D(r7, s[0][2][2], 0xFFF8FD04, 0xEA0F17FB, 0xFDF2FBFE, 0xE510070C);
	r0 = D(r0, s[1][0][0], 0xEBF4FB06, 0x0AF4F70B, 0x0606F80B, 0x12FD0B03);
	r1 = D(r1, s[1][0][0], 0x0403FD00, 0xFFFBF701, 0xFDF5F80F, 0xEAFD01F8);
	r2 = D(r2, s[1][0][0], 0xF9F50903, 0x0908010A, 0x0E0FF519, 0x13FFF0F9);
	r3 = D(r3, s[1][0][0], 0xFE10FDF9, 0xE8F7FAFC, 0x00F7FD00, 0xF700F8F6);
	r4 = D(r4, s[1][0][0], 0x000311FE, 0x13FDF708, 0xF1000CFB, 0x11F1FB03);
	r5 = D(r5, s[1][0][0], 0xFBE11210, 0x090014F6, 0x1CEEF401, 0x0002F1F7);
	r6 = D(r6, s[1][0][0], 0xED3114F0, 0x0BFB02FF, 0x01FEEDAC, 0x09F51306);
	r7 = D(r7, s[1][0][0], 0xF1210AFE, 0xFEE4FDFB, 0x070D05FF, 0x0D0D0BF0);
	r0 = D(r0, s[1][0][1], 0xEB080A16, 0xEF1B0203, 0x0AF7FAFE, 0x05FD01F8);
	r1 = D(r1, s[1][0][1], 0xF703F8F7, 0x01FF07FE, 0xED09FE0E, 0x01FEFB0E);
	r2 = D(r2, s[1][0][1], 0x0304FB14, 0xFDF7FE02, 0xFCFD1501, 0xFC11F4F9);
	r3 = D(r3, s[1][0][1], 0xF9F00901, 0xEF10EBF2, 0xEEF6F905, 0xEA140503);
	r4 = D(r4, s[1][0][1], 0x0AFC0F0B, 0xF2FDF601, 0xFC11FEF8, 0xFF02EE13);
	r5 = D(r5, s[1][0][1], 0x08FAF910, 0xE8F7FAFB, 0xFE05F8F9, 0x03020101);
	r6 = D(r6, s[1][0][1], 0xFED4160F, 0xDBF20CFA, 0xEBF8F6C7, 0xF0FCF712);
	r7 = D(r7, s[1][0][1], 0x08D4E81F, 0xF9EDFDFB, 0xE9F508FF, 0x010306FE);
	r0 = D(r0, s[1][0][2], 0xF5051205, 0x07F3F401, 0xF902EA01, 0x04F70501);
	r1 = D(r1, s[1][0][2], 0x0706F9F8, 0xF0FC0805, 0x0002F60E, 0x060C0505);
	r2 = D(r2, s[1][0][2], 0xF2FF0608, 0xF805FC01, 0x07EEFCF7, 0xFEFBF60D);
	r3 = D(r3, s[1][0][2], 0xF0090202, 0x0400F903, 0xFF030DFE, 0xF4010500);
	r4 = D(r4, s[1][0][2], 0xEBF8F6F6, 0xFCFC02F0, 0x01051BEF, 0xFB0E0AFC);
	r5 = D(r5, s[1][0][2], 0x03EE0004, 0x08FEFD03, 0xF4F50508, 0x01060AFD);
	r6 = D(r6, s[1][0][2], 0xEA08EAF7, 0xCD130F11, 0x0FFE03E9, 0x02090E15);
	r7 = D(r7, s[1][0][2], 0x05150707, 0xE702F50F, 0x08FC03FA, 0x020A1212);
	r0 = D(r0, s[1][1][0], 0x0FED02FF, 0x140905F7, 0x01061004, 0x00090005);
	r1 = D(r1, s[1][1][0], 0xF9060A11, 0xFE0EE508, 0xFB1402F9, 0xF70607EC);
	r2 = D(r2, s[1][1][0], 0x080BF411, 0xE8F4F615, 0x0308F917, 0xF6F0F705);
	r3 = D(r3, s[1][1][0], 0x05000401, 0x10EFF1E9, 0x060602F4, 0x04F20604);
	r4 = D(r4, s[1][1][0], 0xF5060EF1, 0xE40803E5, 0xFB16F8F4, 0x00EC05FC);
	r5 = D(r5, s[1][1][0], 0x100804F3, 0xEC0F05FF, 0x00C40CE5, 0xFFFE05FE);
	r6 = D(r6, s[1][1][0], 0x051EF001, 0x0D03F4F9, 0xE91E130A, 0xF1F10AF5);
	r7 = D(r7, s[1][1][0], 0xF704F3FB, 0x03F804FD, 0x010406FE, 0x0C04FDF9);
	r0 = D(r0, s[1][1][1], 0xFA12FDF7, 0xE207F708, 0xF1010DEF, 0xF809F416);
	r1 = D(r1, s[1][1][1], 0x0303FD0A, 0x1020ED0E, 0x1CECDF14, 0xF1E308FE);
	r2 = D(r2, s[1][1][1], 0xFBE3F7EC, 0xFE06FDF0, 0xE80008EA, 0xFCF614FA);
	r3 = D(r3, s[1][1][1], 0x02030BED, 0x040DFDE4, 0x090E0E03, 0x0AE1FEFA);
	r4 = D(r4, s[1][1][1], 0xF610F8FC, 0x01F8FA07, 0xFBF1F908, 0x06F3F3FC);
	r5 = D(r5, s[1][1][1], 0xF6F3F1FC, 0xE7140207, 0xF6F6F60F, 0xF7F51F05);
	r6 = D(r6, s[1][1][1], 0x14F3FDF8, 0x14E512EC, 0xDFE61420, 0xF8FDEF10);
	r7 = D(r7, s[1][1][1], 0xFDFC00F5, 0x0A16FA06, 0x071206F8, 0x18E60804);
	r0 = D(r0, s[1][1][2], 0xFB000BFA, 0x0AFEF815, 0x08090007, 0xFEF81703);
	r1 = D(r1, s[1][1][2], 0xF8050909, 0xF8F80502, 0x10F5F211, 0x0C06EDFB);
	r2 = D(r2, s[1][1][2], 0xFC0A0609, 0xFBF809FA, 0x0E0AF016, 0xEE05F5FA);
	r3 = D(r3, s[1][1][2], 0xFC00FD0B, 0xEEF1F6EE, 0x0800FDF9, 0xEFFFF7F9);
	r4 = D(r4, s[1][1][2], 0x090C0A0D, 0x0B04F203, 0xF6090709, 0x04F30C06);
	r5 = D(r5, s[1][1][2], 0x0A0BF1FB, 0x0601FF07, 0xFCFC100B, 0x0106FC06);
	r6 = D(r6, s[1][1][2], 0x0D050017, 0xF10FFEE9, 0x09F7FB08, 0xEA0011F5);
	r7 = D(r7, s[1][1][2], 0xF1FF0D09, 0x1310EFDC, 0x0CEB0814, 0xE9FB0303);
	r0 = D(r0, s[1][2][0], 0xF306F5F1, 0xFFF7F709, 0xFD0205E7, 0xEEF106F9);
	r1 = D(r1, s[1][2][0], 0xF5F40609, 0x00F11F0C, 0xF6030507, 0x01EFF803);
	r2 = D(r2, s[1][2][0], 0xFEF5FF09, 0xFEEE0A0F, 0xFEFAFFEF, 0xFF08F9F3);
	r3 = D(r3, s[1][2][0], 0xF707EEF9, 0x1C0C03F9, 0xF9FB0302, 0x062301F5);
	r4 = D(r4, s[1][2][0], 0xFDF901FA, 0xFAF20902, 0x101806EE, 0x120CF0F8);
	r5 = D(r5, s[1][2][0], 0x00E9FDFE, 0x00161105, 0xF30103FE, 0xFE06FC03);
	r6 = D(r6, s[1][2][0], 0xE71C0501, 0x0E1BE6EE, 0xFAF404EB, 0xFEE40203);
	r7 = D(r7, s[1][2][0], 0x07EE0605, 0x07F6F00A, 0x06F2FBF6, 0x0207F2E2);
	r0 = D(r0, s[1][2][1], 0x04F30508, 0xFC0910F2, 0x030B0203, 0xF8F7FA01);
	r1 = D(r1, s[1][2][1], 0x030DFF07, 0xFCE203FD, 0xEFFB0309, 0xFAF5F4EC);
	r2 = D(r2, s[1][2][1], 0xFBFEF9FF, 0x0F0B020C, 0xEF0DFFF9, 0x02EC0202);
	r3 = D(r3, s[1][2][1], 0xFFFAF30E, 0x11050203, 0x04F606FC, 0x0315040A);
	r4 = D(r4, s[1][2][1], 0x011D0B06, 0xFFF4FC15, 0xFF14FA00, 0x111106FF);
	r5 = D(r5, s[1][2][1], 0x0201FAFB, 0xFE0002F4, 0x00F9F7F3, 0xFA050405);
	r6 = D(r6, s[1][2][1], 0xF8DDEFF6, 0x00F7F815, 0x0505EFF9, 0x1C14D803);
	r7 = D(r7, s[1][2][1], 0x0E09F10F, 0xF619FE00, 0x060006F2, 0x0CF1F5F1);
	r0 = D(r0, s[1][2][2], 0xFE00F902, 0xFF12E807, 0x02FEF103, 0x0BFC0802);
	r1 = D(r1, s[1][2][2], 0xFC0603FF, 0xEAF410EB, 0xFA08E911, 0x11F7EF0E);
	r2 = D(r2, s[1][2][2], 0x1B0AF20B, 0x06F30101, 0xF7E600F5, 0xF7FB0A02);
	r3 = D(r3, s[1][2][2], 0x02F1EE14, 0xF8FFFC02, 0x010001F7, 0xF4060B00);
	r4 = D(r4, s[1][2][2], 0xFEF1F60A, 0xF4F707ED, 0x0A0103FD, 0x06050405);
	r5 = D(r5, s[1][2][2], 0xF6F918F9, 0xFCFEFD06, 0xEFED15F3, 0x010108FF);
	r6 = D(r6, s[1][2][2], 0x0FE5FD0E, 0xF9F008F2, 0x080FF40A, 0xFCF00D02);
	r7 = D(r7, s[1][2][2], 0x040408F4, 0xED0BF101, 0x05FCF615, 0x00F5F702);
	s[0][0][0] = G[12][xy.y+0][xy.x+0]; s[0][0][1] = G[12][xy.y+0][xy.x+1];
	s[0][0][2] = G[12][xy.y+0][xy.x+2]; s[0][1][0] = G[12][xy.y+1][xy.x+0];
	s[0][1][1] = G[12][xy.y+1][xy.x+1]; s[0][1][2] = G[12][xy.y+1][xy.x+2];
	s[0][2][0] = G[12][xy.y+2][xy.x+0]; s[0][2][1] = G[12][xy.y+2][xy.x+1];
	s[0][2][2] = G[12][xy.y+2][xy.x+2]; s[1][0][0] = G[13][xy.y+0][xy.x+0];
	s[1][0][1] = G[13][xy.y+0][xy.x+1]; s[1][0][2] = G[13][xy.y+0][xy.x+2];
	s[1][1][0] = G[13][xy.y+1][xy.x+0]; s[1][1][1] = G[13][xy.y+1][xy.x+1];
	s[1][1][2] = G[13][xy.y+1][xy.x+2]; s[1][2][0] = G[13][xy.y+2][xy.x+0];
	s[1][2][1] = G[13][xy.y+2][xy.x+1]; s[1][2][2] = G[13][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xFEF0F2FD, 0x12FD00F9, 0x1C08ECEB, 0x03F70201);
	r1 = D(r1, s[0][0][0], 0x0BF80F08, 0xF9FC02FA, 0x11F6FDF5, 0xEA170300);
	r2 = D(r2, s[0][0][0], 0x06E40005, 0xFE0101FB, 0xF821000C, 0xFEED0900);
	r3 = D(r3, s[0][0][0], 0x0CF700FC, 0xF917FEFA, 0xF7FD0A02, 0xFEEC0FF2);
	r4 = D(r4, s[0][0][0], 0xFC080EFE, 0xFAFB0E0B, 0xD4E71AE4, 0x00DD01FA);
	r5 = D(r5, s[0][0][0], 0xFBE60E0A, 0xF601F6F6, 0xF6021413, 0xFBFA06FE);
	r6 = D(r6, s[0][0][0], 0xF91DF7E7, 0xF90BE901, 0xD116F0E8, 0x0D010CF2);
	r7 = D(r7, s[0][0][0], 0xFBFED40E, 0xFD0D1315, 0xFB0207EB, 0xDD071F00);
	r0 = D(r0, s[0][0][1], 0xFD070EEB, 0xFBFEFB0D, 0xFAFE02E4, 0xFBEB0602);
	r1 = D(r1, s[0][0][1], 0xF9110404, 0xF303FE0A, 0xECE915FB, 0x0512FB0C);
	r2 = D(r2, s[0][0][1], 0xFCEEFF09, 0x0B01F9FE, 0x0714FE15, 0xECE7080C);
	r3 = D(r3, s[0][0][1], 0xEDF5F50B, 0x1F2210F9, 0xF2FEF5FB, 0xE50A1903);
	r4 = D(r4, s[0][0][1], 0x0A08EEFB, 0x1706F0FC, 0xE2F91104, 0xD7F909E5);
	r5 = D(r5, s[0][0][1], 0xF6E41216, 0xF509F6FE, 0xEBF60009, 0x07F5F7F4);
	r6 = D(r6, s[0][0][1], 0xFE13040C, 0x0308DC1B, 0x14F503F1, 0x13081715);
	r7 = D(r7, s[0][0][1], 0xC7C242FB, 0xDA0F23EC, 0xE40D09E8, 0xFC1E05F0);
	r0 = D(r0, s[0][0][2], 0xF8D91AFD, 0x0D12ECF7, 0xFFF70AEC, 0xFDD90AFC);
	r1 = D(r1, s[0][0][2], 0xF403F805, 0xF9F1FF03, 0xE4EDFB12, 0x06EE0109);
	r2 = D(r2, s[0][0][2], 0x02EB0E00, 0xF4E313EB, 0xFD22ECFF, 0xF5FAF807);
	r3 = D(r3, s[0][0][2], 0xE7E3FAFF, 0x0924F803, 0xF7FB09FB, 0x070E14FF);
	r4 = D(r4, s[0][0][2], 0xEEEFF81A, 0x0C04E3FD, 0x041702FD, 0xDEFE06E7);
	r5 = D(r5, s[0][0][2], 0xF6E1F208, 0xF812FA01, 0x02FAFF18, 0xFB05FEFE);
	r6 = D(r6, s[0][0][2], 0xEFF5EA15, 0xBAFB0BF0, 0xF72E19FE, 0xF8F610E1);
	r7 = D(r7, s[0][0][2], 0x0805F5F6, 0x1881EDE6, 0x150A07FA, 0x00160503);
	r0 = D(r0, s[0][1][0], 0x070B0BF4, 0x0BE6F511, 0x0E05E5FB, 0x060709FD);
	r1 = D(r1, s[0][1][0], 0x06F614F6, 0x1206FA01, 0xFDEE03FE, 0x1B000C03);
	r2 = D(r2, s[0][1][0], 0xE304FF1D, 0x130EEC11, 0xFF11EAC0, 0xFB081401);
	r3 = D(r3, s[0][1][0], 0x061111FA, 0xDBF9EB09, 0xF7F00B04, 0xFC08FD07);
	r4 = D(r4, s[0][1][0], 0xEDD4FA0C, 0xF0090A04, 0xC4BF1AF5, 0xFBFC03E3);
	r5 = D(r5, s[0][1][0], 0xF2EC06FE, 0xE71C0CDC, 0xEB001E17, 0xFDFE06FC);
	r6 = D(r6, s[0][1][0], 0xF706FDE0, 0xDBFAFAFC, 0x101D24E0, 0x0BB60525);
	r7 = D(r7, s[0][1][0], 0xF21B11FD, 0x050DF3E6, 0xF90308E6, 0x0502EB06);
	r0 = D(r0, s[0][1][1], 0xE5F1E508, 0xE8F20009, 0xF2DBF308, 0x06F2F6F5);
	r1 = D(r1, s[0][1][1], 0x02FE10E1, 0xFEF41415, 0x21D3E2FE, 0xF3F8EFF8);
	r2 = D(r2, s[0][1][1], 0xFB1714FC, 0x0D04FD13, 0x29F11DF4, 0x02FB2DFF);
	r3 = D(r3, s[0][1][1], 0xF204FAFB, 0xF906080B, 0x00FE0CF1, 0xE9E6F218);
	r4 = D(r4, s[0][1][1], 0xFBFEF9E1, 0xFB03F0EB, 0x0CE2E704, 0xE8FAE9F2);
	r5 = D(r5, s[0][1][1], 0xEB07FAE9, 0x000E02E8, 0xE9121D03, 0x0C0A0CEA);
	r6 = D(r6, s[0][1][1], 0x01061ADF, 0xF52C13ED, 0xF6F6DBAC, 0x0BF23099);
	r7 = D(r7, s[0][1][1], 0x06E0DF32, 0xD9CFBAC6, 0xF119FCCD, 0xFF09F700);
	r0 = D(r0, s[0][1][2], 0xEEF810D9, 0xE0FBFAEB, 0x0618ED08, 0x0BF8FBFE);
	r1 = D(r1, s[0][1][2], 0xF70C07F3, 0xEE100204, 0xFEE801FB, 0xECFD00FF);
	r2 = D(r2, s[0][1][2], 0xFAF5F4FF, 0x0805F20E, 0x030A01F0, 0xF2FD040E);
	r3 = D(r3, s[0][1][2], 0xFB0AF8F4, 0x00FAF300, 0xFB0703FA, 0x070AFBF6);
	r4 = D(r4, s[0][1][2], 0x0DF1F318, 0xE7EE04DF, 0x090C01F4, 0xE70905EC);
	r5 = D(r5, s[0][1][2], 0x010407F9, 0xFEFC00FA, 0xFC030E28, 0xFB04FBFD);
	r6 = D(r6, s[0][1][2], 0x06F8FD00, 0x35B9F8F7, 0xFEF7F1E7, 0x11811E81);
	r7 = D(r7, s[0][1][2], 0x17CCF80C, 0x0EDE0EF3, 0x130308F3, 0x03F41415);
	r0 = D(r0, s[0][2][0], 0x0000F104, 0xFFEFDFFC, 0xEEF0F907, 0xEFFEF500);
	r1 = D(r1, s[0][2][0], 0xF10A1009, 0x0CFBED09, 0xF9F4FBF5, 0xEAFEEBF6);
	r2 = D(r2, s[0][2][0], 0xF8EFFA07, 0xF7E4F3F6, 0xFED409F3, 0xFDF00803);
	r3 = D(r3, s[0][2][0], 0xEB05FA04, 0xCA110CEF, 0xF7FCFEFC, 0x09FBF3F3);
	r4 = D(r4, s[0][2][0], 0x10F8F601, 0xFEFD0B10, 0x2AF1D0E3, 0xF31F10F5);
	r5 = D(r5, s[0][2][0], 0x050512EF, 0xEA0B080E, 0x08FDF013, 0x000205FF);
	r6 = D(r6, s[0][2][0], 0xD800FEFC, 0xF10EF1F5, 0xC1F2031E, 0xDBBB10F9);
	r7 = D(r7, s[0][2][0], 0xF118E8E0, 0xF117FD22, 0x02F50A09, 0xDE030EF6);
	r0 = D(r0, s[0][2][1], 0x08DCF6FE, 0xF8F3DEFE, 0x0119FDF1, 0xFAF80DFE);
	r1 = D(r1, s[0][2][1], 0xF1E50A0F, 0xF4FB0010, 0xDFF10904, 0xF8F10E06);
	r2 = D(r2, s[0][2][1], 0xFA03FB0C, 0x0BEFF812, 0xFCE0020B, 0xF9F90C06);
	r3 = D(r3, s[0][2][1], 0x13110BF8, 0xF402E1F5, 0xFC070507, 0x17F7F8E6);
	r4 = D(r4, s[0][2][1], 0x00100508, 0xFB12FBE1, 0xDAEAF5F7, 0xF4F6FBE9);
	r5 = D(r5, s[0][2][1], 0x13DE07EF, 0xFEFEFF05, 0x01C90C1A, 0xF8FC00F7);
	r6 = D(r6, s[0][2][1], 0xF5E70CF7, 0x0501F7F5, 0xF5C61DEB, 0xD310DD03);
	r7 = D(r7, s[0][2][1], 0xECEDFC1D, 0xE206F3ED, 0xF3FA08FE, 0x160F1403);
	r0 = D(r0, s[0][2][2], 0xEEFD00F2, 0x0CEB00F3, 0xFF0AEF00, 0x06FFFBFE);
	r1 = D(r1, s[0][2][2], 0xF91307FA, 0xF50EF603, 0x09FE1211, 0x06FA0803);
	r2 = D(r2, s[0][2][2], 0x06FD0708, 0xF60AFAFE, 0x01D703FE, 0xF51101F0);
	r3 = D(r3, s[0][2][2], 0x13F20906, 0xFC0B00FA, 0x03FA05FE, 0xF413FBF4);
	r4 = D(r4, s[0][2][2], 0x0AFA011F, 0xFB1BFFF2, 0xF6000DE5, 0xD4FCF4F5);
	r5 = D(r5, s[0][2][2], 0xFFDDF4F8, 0x00020F06, 0x0FFE041B, 0x03130205);
	r6 = D(r6, s[0][2][2], 0xF8FAF614, 0xF90FF102, 0xF7130A15, 0xF7B4F9C6);
	r7 = D(r7, s[0][2][2], 0xEF08F1F2, 0x06F6FBD9, 0xFAFDF403, 0x06F2FF0C);
	r0 = D(r0, s[1][0][0], 0xFCFC0614, 0x06EDF8FD, 0xF80513FE, 0xFBE60906);
	r1 = D(r1, s[1][0][0], 0xFEF20B04, 0xFAF9F7F6, 0x000206F0, 0x08EDFB07);
	r2 = D(r2, s[1][0][0], 0x0101FD02, 0x0905FDF9, 0xFD120A0D, 0x06EE02EB);
	r3 = D(r3, s[1][0][0], 0x00010D06, 0xFA0D0009, 0x02070005, 0x00100116);
	r4 = D(r4, s[1][0][0], 0x0616E6F5, 0x0B0AF107, 0xF8F2F016, 0x0C0BFDEE);
	r5 = D(r5, s[1][0][0], 0x18E4E9F0, 0xFDF6FC08, 0x0BF4F407, 0xFBFDF9F1);
	r6 = D(r6, s[1][0][0], 0xF3FCF202, 0xEE090500, 0x06F90BF6, 0x10F7F1FB);
	r7 = D(r7, s[1][0][0], 0x080A21F3, 0xF9F0FB0E, 0xFD101808, 0xEF01FE08);
	r0 = D(r0, s[1][0][1], 0xF3FE0204, 0xFC0E0B03, 0xFCF5FDF1, 0x0307060A);
	r1 = D(r1, s[1][0][1], 0xF60AFB0C, 0x0B09FD04, 0x030902E5, 0xF7D905FE);
	r2 = D(r2, s[1][0][1], 0xF302F912, 0xF6F7F6F3, 0x0BF0F201, 0xF40301FA);
	r3 = D(r3, s[1][0][1], 0x06EE08FF, 0x100810FD, 0xFE03EEF8, 0xF204FBFB);
	r4 = D(r4, s[1][0][1], 0x0BA6F713, 0xFCE70200, 0x1106F00C, 0xF7FD11E1);
	r5 = D(r5, s[1][0][1], 0x17F8FFFC, 0x08F9FD0F, 0x03F21D09, 0xFEF3FBFB);
	r6 = D(r6, s[1][0][1], 0xE403C719, 0xE5FB1014, 0xF8C01EE4, 0xED08DB1F);
	r7 = D(r7, s[1][0][1], 0xE8F811CA, 0xFEF70D21, 0xFB07F9FC, 0x01FD0300);
	r0 = D(r0, s[1][0][2], 0xF9F2FF0A, 0xFE06081F, 0x0B0AFDF6, 0x00FC0BF4);
	r1 = D(r1, s[1][0][2], 0xFA00F507, 0xF8FBFD05, 0x0A13F207, 0xFB0C03F4);
	r2 = D(r2, s[1][0][2], 0xFB0801F2, 0xF9FAFAFD, 0x0FED1EFD, 0x08FDFF02);
	r3 = D(r3, s[1][0][2], 0xFB08040A, 0xF5070C05, 0x021012FC, 0x0304FFF7);
	r4 = D(r4, s[1][0][2], 0x1AF9FF0A, 0x0AEFFA06, 0xF8F70E03, 0xF7FFF6EE);
	r5 = D(r5, s[1][0][2], 0x0BECF603, 0xEFFC0000, 0x0BD4FFFF, 0x0204FFF6);
	r6 = D(r6, s[1][0][2], 0xFB10F010, 0x13F714FD, 0xE413DC16, 0xF1C502FE);
	r7 = D(r7, s[1][0][2], 0x0DFCE5FE, 0xF90AF205, 0x0003EC14, 0xFE100D13);
	r0 = D(r0, s[1][1][0], 0xF6F8FA00, 0x06F00FE8, 0xFF1308E4, 0xED050B02);
	r1 = D(r1, s[1][1][0], 0x0DF40F04, 0x00010CF5, 0xFA030BEB, 0xF0F8ED05);
	r2 = D(r2, s[1][1][0], 0x11F4E9FF, 0xFB02F804, 0xFAFAFBFE, 0x080D0EED);
	r3 = D(r3, s[1][1][0], 0xFD0AFC03, 0x0402F80C, 0x0103F406, 0x04FE0C15);
	r4 = D(r4, s[1][1][0], 0x15FC1108, 0xFDFF0602, 0x1F2BF815, 0x010D0FEC);
	r5 = D(r5, s[1][1][0], 0xFBF7FF01, 0xECF6F1ED, 0x01EF250F, 0xFB091710);
	r6 = D(r6, s[1][1][0], 0x1501F20C, 0xDB100511, 0xD704E1EB, 0x13FB16DE);
	r7 = D(r7, s[1][1][0], 0x0901F10B, 0x0EFE01FC, 0xF603FE0B, 0x03FEEDFA);
	r0 = D(r0, s[1][1][1], 0x1608DDF5, 0x00F40805, 0x031502F9, 0x00FA0D01);
	r1 = D(r1, s[1][1][1], 0xEFF40313, 0x01D8090A, 0x02EB00E4, 0xFB12F8FE);
	r2 = D(r2, s[1][1][1], 0x0806EEFE, 0x07FA0E08, 0xEA031C01, 0xF40A0A06);
	r3 = D(r3, s[1][1][1], 0xEB06FB09, 0x0802E306, 0x111001FE, 0xF3140404);
	r4 = D(r4, s[1][1][1], 0xC9122507, 0xF2FEFDF5, 0x000FEB07, 0x0302F90B);
	r5 = D(r5, s[1][1][1], 0xE91904F4, 0xFAFAFBF7, 0xE4D7FEE3, 0x0A04FDF9);
	r6 = D(r6, s[1][1][1], 0xF5F2D306, 0x0EF3F607, 0x9B0504FF, 0xF4FA1BFD);
	r7 = D(r7, s[1][1][1], 0x06E3F80C, 0x0DF6FBDB, 0xEF10F2ED, 0xEFFD1C12);
	r0 = D(r0, s[1][1][2], 0xF4FF1202, 0xFBF60600, 0xF80FEB05, 0x03FEFC03);
	r1 = D(r1, s[1][1][2], 0x05000800, 0xFFF30503, 0x0209EBFA, 0xF612120A);
	r2 = D(r2, s[1][1][2], 0x09EF0609, 0x00080802, 0x1304F804, 0xF006F101);
	r3 = D(r3, s[1][1][2], 0x09FEEFFD, 0xDEF71BF7, 0x0E1507F9, 0xFF01FFF6);
	r4 = D(r4, s[1][1][2], 0x060B051A, 0x0E000FFF, 0x01F80DF9, 0x03FDF6F7);
	r5 = D(r5, s[1][1][2], 0xFBF002F8, 0xF7FE0AF5, 0x0CEDFC05, 0x02060AF9);
	r6 = D(r6, s[1][1][2], 0x03FBE206, 0x1B16F0FF, 0xF3F91806, 0x0306F6EC);
	r7 = D(r7, s[1][1][2], 0xFF0FFDFB, 0xF9EDE807, 0xFDFEB10D, 0x0F09E708);
	r0 = D(r0, s[1][2][0], 0x010011FD, 0xFC06F9FC, 0x0A0A00FC, 0x03001005);
	r1 = D(r1, s[1][2][0], 0x06FB02FD, 0xF5021303, 0xFE03FCEE, 0xFEF1EC00);
	r2 = D(r2, s[1][2][0], 0x0E040103, 0xEC0804FB, 0x05FFDDF2, 0x0502EFF8);
	r3 = D(r3, s[1][2][0], 0x040C0A12, 0xF3020906, 0xF5FCFC08, 0xF805FB02);
	r4 = D(r4, s[1][2][0], 0xFEFDEFFF, 0x17090505, 0xE6FDEA0F, 0x080D0FE7);
	r5 = D(r5, s[1][2][0], 0xDDF909F3, 0xF6FE07F3, 0xEA030008, 0xF2FE04FD);
	r6 = D(r6, s[1][2][0], 0xF1FBFB01, 0x0203F4FA, 0x19FB0509, 0xFD131816);
	r7 = D(r7, s[1][2][0], 0xFC090817, 0x0BFDFA0E, 0x0008FCF8, 0x0F0AD314);
	r0 = D(r0, s[1][2][1], 0x0F0107F6, 0x0808F407, 0x1607F1F5, 0x0DF3FA07);
	r1 = D(r1, s[1][2][1], 0x01FFF9FD, 0xCDE90519, 0xFA0017E3, 0x030BFF09);
	r2 = D(r2, s[1][2][1], 0x0A07F70C, 0xFD050B04, 0xE80F1CFF, 0xF90AF5FB);
	r3 = D(r3, s[1][2][1], 0x0203F808, 0x0E03DA06, 0xFA0106FB, 0x0C07EC03);
	r4 = D(r4, s[1][2][1], 0x1905EC0B, 0xD1F700E6, 0xF8FE0611, 0xEE0AEFF1);
	r5 = D(r5, s[1][2][1], 0xF107080F, 0xFAFE0000, 0xF7F20100, 0xF801F804);
	r6 = D(r6, s[1][2][1], 0x2AF904F9, 0xFCF9FEFE, 0x11050011, 0x0316D1FB);
	r7 = D(r7, s[1][2][1], 0xF5FEFF0C, 0x0601EAFD, 0x0CFEF2FB, 0x0105EE00);
	r0 = D(r0, s[1][2][2], 0x02FB0307, 0x04F50406, 0x05090713, 0x04F903FE);
	r1 = D(r1, s[1][2][2], 0x06FAE502, 0xFFFF05FF, 0x100DF4F7, 0x0F15FC05);
	r2 = D(r2, s[1][2][2], 0x0F000F07, 0xFAFC04F8, 0xFFEB03F2, 0x03F9F904);
	r3 = D(r3, s[1][2][2], 0x00050510, 0x0708FD08, 0xFD02FD02, 0xF902EF04);
	r4 = D(r4, s[1][2][2], 0x03FFE803, 0xEA050401, 0x061BFFF7, 0xFDF7FDF6);
	r5 = D(r5, s[1][2][2], 0x02051CEC, 0xF700FBF6, 0xF4FB0400, 0xFC060503);
	r6 = D(r6, s[1][2][2], 0x1211EBFA, 0xEEECFA00, 0xF6F6F40A, 0xFD15F609);
	r7 = D(r7, s[1][2][2], 0x0008F214, 0xF9F605F7, 0x00FEF6FA, 0xFED201FF);
	s[0][0][0] = G[14][xy.y+0][xy.x+0]; s[0][0][1] = G[14][xy.y+0][xy.x+1];
	s[0][0][2] = G[14][xy.y+0][xy.x+2]; s[0][1][0] = G[14][xy.y+1][xy.x+0];
	s[0][1][1] = G[14][xy.y+1][xy.x+1]; s[0][1][2] = G[14][xy.y+1][xy.x+2];
	s[0][2][0] = G[14][xy.y+2][xy.x+0]; s[0][2][1] = G[14][xy.y+2][xy.x+1];
	s[0][2][2] = G[14][xy.y+2][xy.x+2]; s[1][0][0] = G[15][xy.y+0][xy.x+0];
	s[1][0][1] = G[15][xy.y+0][xy.x+1]; s[1][0][2] = G[15][xy.y+0][xy.x+2];
	s[1][1][0] = G[15][xy.y+1][xy.x+0]; s[1][1][1] = G[15][xy.y+1][xy.x+1];
	s[1][1][2] = G[15][xy.y+1][xy.x+2]; s[1][2][0] = G[15][xy.y+2][xy.x+0];
	s[1][2][1] = G[15][xy.y+2][xy.x+1]; s[1][2][2] = G[15][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xF4FE1207, 0x02EA0A06, 0xF365FC05, 0x0DF102FD);
	r1 = D(r1, s[0][0][0], 0xF7C7FDF8, 0xFDF90602, 0xE80EF001, 0xFBFD01F8);
	r2 = D(r2, s[0][0][0], 0xFE4911F9, 0x08E40A02, 0x03322FFE, 0x00EAED08);
	r3 = D(r3, s[0][0][0], 0x05AE0DFD, 0xF6540BFD, 0x010C07F2, 0xE8E6FC07);
	r4 = D(r4, s[0][0][0], 0x06441001, 0xFB1F0D07, 0xE9B1EFE2, 0xEE0CE8F4);
	r5 = D(r5, s[0][0][0], 0x04CEFD03, 0x04E11002, 0xE6DA1808, 0xFBF3F903);
	r6 = D(r6, s[0][0][0], 0x122A12FC, 0x07152DE2, 0x06811301, 0xEB00C508);
	r7 = D(r7, s[0][0][0], 0x027F0315, 0xF9211819, 0x022707F3, 0xFF7129F4);
	r0 = D(r0, s[0][0][1], 0xF01EFA17, 0xFD080307, 0xFDEB0611, 0x04F7040A);
	r1 = D(r1, s[0][0][1], 0x09070B01, 0xEE170403, 0xF22EEEF7, 0x05FAFD01);
	r2 = D(r2, s[0][0][1], 0xF8180611, 0xFC230CFA, 0x121DEFFF, 0x02080CF0);
	r3 = D(r3, s[0][0][1], 0xF30301F5, 0x09FB080B, 0xFDF800FF, 0xECF1FEFC);
	r4 = D(r4, s[0][0][1], 0xFD3B13F4, 0x0B0702EB, 0xEE1B0AEE, 0xFB140505);
	r5 = D(r5, s[0][0][1], 0xEC13FB01, 0x000C0A0A, 0xF9F80ADC, 0x01E7FAFE);
	r6 = D(r6, s[0][0][1], 0x1623F2EC, 0x120AF500, 0x0E0F01F7, 0x0FECDFF8);
	r7 = D(r7, s[0][0][1], 0x18FF1E13, 0x05F00DFE, 0x0A21FEFF, 0xF43902FF);
	r0 = D(r0, s[0][0][2], 0xF0F114F8, 0x100CF3E8, 0xF6FCE216, 0x05FB070F);
	r1 = D(r1, s[0][0][2], 0xFF040006, 0xFD0807F6, 0xF91CF511, 0xF9FF00FF);
	r2 = D(r2, s[0][0][2], 0xFF130FF6, 0x0301020E, 0x130517F3, 0x0C0F0F03);
	r3 = D(r3, s[0][0][2], 0xF8E90AFF, 0x0D1202ED, 0x00F7F800, 0xFD071105);
	r4 = D(r4, s[0][0][2], 0xF0FC01F9, 0x0B03EAFB, 0x0504010B, 0xE80A1FF5);
	r5 = D(r5, s[0][0][2], 0xFB0014F2, 0x030DFFF4, 0x160608EF, 0x00080202);
	r6 = D(r6, s[0][0][2], 0x02E915F3, 0x08F5EAF6, 0x1B1A07E6, 0x2FDB09F4);
	r7 = D(r7, s[0][0][2], 0xE9CA0E26, 0xEF091F07, 0x0B1EFAE6, 0xF9F2E9FD);
	r0 = D(r0, s[0][1][0], 0x13360AF7, 0xEBE3EC10, 0xF4330008, 0x04EFFA09);
	r1 = D(r1, s[0][1][0], 0x03BFF6F1, 0xF2E3FCFC, 0x0517F5F9, 0x121BFA07);
	r2 = D(r2, s[0][1][0], 0xEF25FD13, 0x0003F404, 0x0469FD00, 0x05140200);
	r3 = D(r3, s[0][1][0], 0x010F2607, 0x10FC13FA, 0xFEF8FF08, 0xF0BB07FF);
	r4 = D(r4, s[0][1][0], 0x05A6070C, 0x06F70E01, 0x001F17EF, 0xF30BFAFE);
	r5 = D(r5, s[0][1][0], 0xFE1F0C08, 0xF51501F8, 0xEF04F7FE, 0x0222FDFC);
	r6 = D(r6, s[0][1][0], 0x0A0C09F9, 0xF4EBE6F0, 0xE3ED271F, 0xF91211DF);
	r7 = D(r7, s[0][1][0], 0x05BF19F5, 0xF505070A, 0x0BEC03F2, 0x100FFEFE);
	r0 = D(r0, s[0][1][1], 0x0A00F618, 0x06F00BFD, 0x0C0A030F, 0xF9F5FEEF);
	r1 = D(r1, s[0][1][1], 0x000F0CFF, 0x01E10302, 0x062C06F7, 0xF10D040D);
	r2 = D(r2, s[0][1][1], 0xF31A0B13, 0xE9F5F601, 0x062911EF, 0x15F50AE7);
	r3 = D(r3, s[0][1][1], 0x0E15110B, 0xF31A0BFE, 0xF5FF0800, 0xFEFD00EC);
	r4 = D(r4, s[0][1][1], 0xFB18020D, 0xFAE10D13, 0x043903FB, 0xFB07EEFD);
	r5 = D(r5, s[0][1][1], 0x04F30CEF, 0xFC0F0107, 0xDA03F30F, 0xF7F1F601);
	r6 = D(r6, s[0][1][1], 0xF500150E, 0xFFFA1BEE, 0xE72411F6, 0x17D10706);
	r7 = D(r7, s[0][1][1], 0x04E61A00, 0x0F0C09E8, 0xFB3417F5, 0x13D30BF0);
	r0 = D(r0, s[0][1][2], 0x1112F10F, 0x03F1F5E5, 0x03F9F9F7, 0xF80C050B);
	r1 = D(r1, s[0][1][2], 0xF70F0214, 0xF600FA16, 0xFCFCFF09, 0x1A00F8EF);
	r2 = D(r2, s[0][1][2], 0x0DF7FE01, 0x09F30F01, 0xFC0218D0, 0xF6FE0E03);
	r3 = D(r3, s[0][1][2], 0x00080803, 0x2912F701, 0xFFFC0604, 0x0AF002FF);
	r4 = D(r4, s[0][1][2], 0xFA0FFC05, 0xF9FFF8FA, 0xFB1AFC00, 0x020EF7F1);
	r5 = D(r5, s[0][1][2], 0xDAECFA01, 0xFD070E07, 0xFE12EE02, 0x0100F903);
	r6 = D(r6, s[0][1][2], 0x0607E519, 0x0010091C, 0x0D22040A, 0xEB07E9F6);
	r7 = D(r7, s[0][1][2], 0xF030EDD1, 0x0A03F511, 0x06F7FBFE, 0xFCF60815);
	r0 = D(r0, s[0][2][0], 0xEF00FEF8, 0x1CFBE8F0, 0xEE0A0E03, 0x05F9F600);
	r1 = D(r1, s[0][2][0], 0xFFF90115, 0x12EBFEFE, 0x06F90406, 0x03FFEDEF);
	r2 = D(r2, s[0][2][0], 0x0202F2FC, 0x12FCF0F2, 0xFA13EA03, 0xFD13FC04);
	r3 = D(r3, s[0][2][0], 0xF40D1008, 0xFC060404, 0xFDF9F6EE, 0x01ECFD0A);
	r4 = D(r4, s[0][2][0], 0xFA2109F1, 0xE7F8080C, 0x0F1517DC, 0xFB030EF3);
	r5 = D(r5, s[0][2][0], 0xFE130602, 0xFE03F5FC, 0x0A0C150C, 0xFD0601FE);
	r6 = D(r6, s[0][2][0], 0xFD01EBE8, 0x1FDC0C0D, 0xEBFCFA09, 0xF91811E7);
	r7 = D(r7, s[0][2][0], 0x050DF516, 0xE50C070B, 0xF0040F10, 0xE4F5070C);
	r0 = D(r0, s[0][2][1], 0xE9070204, 0xFC1312F4, 0xFC0EFB01, 0x0A0AF6FC);
	r1 = D(r1, s[0][2][1], 0x08FC0803, 0x060E02ED, 0xF3F506FE, 0xF2F7F71D);
	r2 = D(r2, s[0][2][1], 0xFF08FB02, 0x11FB04F1, 0x02F31106, 0x0BFD0909);
	r3 = D(r3, s[0][2][1], 0xFFFE0EF9, 0xF00CF701, 0xFA050307, 0x1203F700);
	r4 = D(r4, s[0][2][1], 0x05EEF60C, 0xDBFBFEF4, 0xF80012F0, 0x150502F7);
	r5 = D(r5, s[0][2][1], 0xFFEF1007, 0xFCFCF0FE, 0xEF030509, 0x00F90906);
	r6 = D(r6, s[0][2][1], 0xED212710, 0xEB1403EE, 0xE5F900F8, 0x182608EE);
	r7 = D(r7, s[0][2][1], 0xF7FEF6F3, 0x0702FCFE, 0xF00C030A, 0x120DE302);
	r0 = D(r0, s[0][2][2], 0xF6F8020F, 0x090EFFF8, 0x01080FF6, 0x0C020301);
	r1 = D(r1, s[0][2][2], 0xFCFEFC05, 0x070616F6, 0x0906ED0C, 0xED0DF507);
	r2 = D(r2, s[0][2][2], 0x08FD0604, 0x14FBFDFB, 0xD21EEE0B, 0x130202FD);
	r3 = D(r3, s[0][2][2], 0x01F8FE03, 0xD31201EB, 0x0701FC02, 0xFEEF05F0);
	r4 = D(r4, s[0][2][2], 0x1A05F20B, 0xF41409F9, 0x0CF705FF, 0x08FA0B09);
	r5 = D(r5, s[0][2][2], 0x1306F1FC, 0x0200FC0B, 0x0900F3FA, 0xFEFA0201);
	r6 = D(r6, s[0][2][2], 0xFFFBE203, 0x1CF607E8, 0xFCF6DBFF, 0x0700F0DF);
	r7 = D(r7, s[0][2][2], 0x090AF2F7, 0xF31122FB, 0xF808EC08, 0x06080404);
	r0 = D(r0, s[1][0][0], 0x02FD14F1, 0x050BEF0B, 0xFAF2FD18, 0x0CF9FA0A);
	r1 = D(r1, s[1][0][0], 0xFEFAFBEB, 0x01FC0904, 0x091417F2, 0xF0FEFAF4);
	r2 = D(r2, s[1][0][0], 0x0D0CE703, 0x0F09F8EA, 0xEA05F8F6, 0xEC0B02EE);
	r3 = D(r3, s[1][0][0], 0xF90600F0, 0x0212EE37, 0xF903F1F8, 0xF0090FE3);
	r4 = D(r4, s[1][0][0], 0xFEF60B12, 0x0A06EF01, 0xFD122753, 0xF3F81C03);
	r5 = D(r5, s[1][0][0], 0xFCF80201, 0xF90EF524, 0x0CF2FA07, 0x01FA0700);
	r6 = D(r6, s[1][0][0], 0x070D1AF3, 0x0126E9FE, 0x1B1BC3EC, 0x0C070F32);
	r7 = D(r7, s[1][0][0], 0xE5EA0918, 0xFE1BD22A, 0xFF0DF717, 0xF711E91C);
	r0 = D(r0, s[1][0][1], 0xF6FC02FD, 0x07F4F6F9, 0xE9F5E307, 0x00FCFA08);
	r1 = D(r1, s[1][0][1], 0x01FFF902, 0x00FF0119, 0x08FE02EE, 0xF2041109);
	r2 = D(r2, s[1][0][1], 0x0E0DF210, 0x160C0507, 0xFD070914, 0xFAE2020A);
	r3 = D(r3, s[1][0][1], 0xF80501FD, 0xFCDE06F8, 0x03FDFE01, 0x0EFA0A09);
	r4 = D(r4, s[1][0][1], 0xEE0113D5, 0x0A0BF8F3, 0x0207093C, 0xF815F42A);
	r5 = D(r5, s[1][0][1], 0x02F20B11, 0xF80A1509, 0x04FB0505, 0x05000405);
	r6 = D(r6, s[1][0][1], 0xD9EAF401, 0x11070CF9, 0x11F6DB21, 0xCBF40415);
	r7 = D(r7, s[1][0][1], 0xEB21060B, 0x06F506E9, 0x100E0011, 0x0903F226);
	r0 = D(r0, s[1][0][2], 0x04060BF2, 0xF20C0004, 0x03FDF613, 0x04F7FCF2);
	r1 = D(r1, s[1][0][2], 0xF903EC13, 0x0D07F6F1, 0xFC08FF02, 0x06FF0015);
	r2 = D(r2, s[1][0][2], 0x090D0AF4, 0x0AFCEF01, 0xDE011A24, 0x0CFCF1E2);
	r3 = D(r3, s[1][0][2], 0x080202EC, 0x1512061B, 0xFDFC00FC, 0x03FC0EDB);
	r4 = D(r4, s[1][0][2], 0xFEFD2C01, 0xF7040403, 0x0A1705DC, 0xFDFF0F12);
	r5 = D(r5, s[1][0][2], 0x0AF8F3F3, 0xFCFFFE09, 0xF9F4FEE8, 0xFD01FD01);
	r6 = D(r6, s[1][0][2], 0x06F417F8, 0xE3FD12EF, 0x10FBF62D, 0xF3DA1F13);
	r7 = D(r7, s[1][0][2], 0x01FCED01, 0x070CFBF2, 0xF0020BF5, 0x04F011E2);
	r0 = D(r0, s[1][1][0], 0xFE01011D, 0xFEFD0CF6, 0x0A06FFF2, 0xFB01070A);
	r1 = D(r1, s[1][1][0], 0x03FA0E1D, 0xFC05250D, 0xFE0D1AF1, 0xF8FFF4FD);
	r2 = D(r2, s[1][1][0], 0xF4111EFE, 0xFF0219FE, 0x070BFA31, 0xF5100001);
	r3 = D(r3, s[1][1][0], 0x00F60002, 0x12ED0716, 0xFE09F204, 0x02F8F9E3);
	r4 = D(r4, s[1][1][0], 0xF007FEBA, 0x1507DBE8, 0x0D0E1381, 0xFBF6031F);
	r5 = D(r5, s[1][1][0], 0xFB001AFF, 0xF8F9FDED, 0x130318C0, 0x00FC0909);
	r6 = D(r6, s[1][1][0], 0x1003E107, 0xE8FA1208, 0x09470610, 0x2DE70F1C);
	r7 = D(r7, s[1][1][0], 0xD90E0A19, 0xD7FEF20C, 0x060DF900, 0x0006091A);
	r0 = D(r0, s[1][1][1], 0x13F3F625, 0x13F70CE3, 0x08F8000E, 0xFD0F000E);
	r1 = D(r1, s[1][1][1], 0x0A1602F6, 0x04FB02DE, 0x0711F1ED, 0x0205FF05);
	r2 = D(r2, s[1][1][1], 0x0A1BECF9, 0x0510F70D, 0xF90D0BF2, 0xFA0CF4EE);
	r3 = D(r3, s[1][1][1], 0xF1090DF5, 0x01ED0AEF, 0x0103F9FB, 0xFF1303FB);
	r4 = D(r4, s[1][1][1], 0xEA0504F9, 0xEE00DC10, 0xF2E91916, 0x020B171C);
	r5 = D(r5, s[1][1][1], 0xE2F8EDFF, 0xF7F5FD05, 0x0BEE06F6, 0x01090007);
	r6 = D(r6, s[1][1][1], 0xD7FAEF09, 0x1D051208, 0x26F72016, 0x081F0222);
	r7 = D(r7, s[1][1][1], 0xFAFE1D03, 0x2113F2E3, 0x03F7F501, 0x10F4D30A);
	r0 = D(r0, s[1][1][2], 0x08FDFD0B, 0xFA07F7FA, 0xFB060212, 0x0109E9F7);
	r1 = D(r1, s[1][1][2], 0xFD12FCFE, 0x050503E6, 0xF90E0AE6, 0xECE80316);
	r2 = D(r2, s[1][1][2], 0x16FBF914, 0x0801FAFC, 0x00F1050D, 0x0EFE0A06);
	r3 = D(r3, s[1][1][2], 0xFC060AF7, 0x12D3FA2C, 0x07FD0500, 0x03F90710);
	r4 = D(r4, s[1][1][2], 0xE407FED6, 0xFA03FC03, 0x0D01FB0D, 0x0AFBFD11);
	r5 = D(r5, s[1][1][2], 0x07FF02E5, 0x01F40A06, 0xFDFD08FF, 0x0706FE0B);
	r6 = D(r6, s[1][1][2], 0xF2132903, 0x10FB06E7, 0x0F17E0B5, 0x0AFCFFEE);
	r7 = D(r7, s[1][1][2], 0xEBEE0426, 0xF9DE26F8, 0xDF0FE9F7, 0x0A1124E0);
	r0 = D(r0, s[1][2][0], 0x0701FEFC, 0x01F109E5, 0x00FDED05, 0x03FB1504);
	r1 = D(r1, s[1][2][0], 0xFFFB0000, 0xFDEF0EFA, 0x0E0BFCFC, 0xEFF10FF6);
	r2 = D(r2, s[1][2][0], 0x0204F8F5, 0xFFF00606, 0x030914B3, 0xFF02FA14);
	r3 = D(r3, s[1][2][0], 0x0B0B0010, 0x08FEF000, 0xFBF80204, 0x0DFD13FC);
	r4 = D(r4, s[1][2][0], 0xDB0904FB, 0xF704F109, 0x02F6E0C1, 0xFA03FF0F);
	r5 = D(r5, s[1][2][0], 0x09F6040E, 0xF3F603EC, 0x0D03F9EF, 0xFFF80BFD);
	r6 = D(r6, s[1][2][0], 0x140404E2, 0xFC171116, 0x0AF0171D, 0xFE0BDBFA);
	r7 = D(r7, s[1][2][0], 0x10FD0C1B, 0x0C090516, 0x02FF0E06, 0xF819F802);
	r0 = D(r0, s[1][2][1], 0xEF00FA06, 0x05F106FB, 0x00FE07FF, 0xF903FB08);
	r1 = D(r1, s[1][2][1], 0xF300F8E7, 0xF110201B, 0x10020F03, 0x12FE100C);
	r2 = D(r2, s[1][2][1], 0x0D021D06, 0x06FEFAED, 0x0205F610, 0x0109030D);
	r3 = D(r3, s[1][2][1], 0xFD040105, 0x03F3FD2F, 0x05FBFBFF, 0x02FE0E01);
	r4 = D(r4, s[1][2][1], 0x0AF00BD5, 0xFD13F211, 0xF70EFB43, 0xF40612E1);
	r5 = D(r5, s[1][2][1], 0xCC071828, 0xF200FEFF, 0x11E4E7EF, 0x06FDFB01);
	r6 = D(r6, s[1][2][1], 0xF000FC1C, 0x001B1313, 0xE8EEC4E2, 0xF602FCE5);
	r7 = D(r7, s[1][2][1], 0x0AF40906, 0xF1F0F90F, 0xFF13E70F, 0x092713EE);
	r0 = D(r0, s[1][2][2], 0x01FA05FC, 0x0707EC1F, 0xFE0CFD04, 0xFB00F9FF);
	r1 = D(r1, s[1][2][2], 0x03FBE3FF, 0x02FCEAF8, 0xFFFCE7F6, 0x030B080B);
	r2 = D(r2, s[1][2][2], 0x1916EA0C, 0x05F8E90B, 0xF706F7EE, 0x0EFE00FB);
	r3 = D(r3, s[1][2][2], 0x0BF80EF9, 0xF9D600F0, 0xFDFB0A07, 0xF9F90BFE);
	r4 = D(r4, s[1][2][2], 0xF405F60E, 0x08FBF1FF, 0xFC0212F5, 0x08E3FAF1);
	r5 = D(r5, s[1][2][2], 0xE0EBF912, 0x01F906F3, 0x0904F2F5, 0x01F609FF);
	r6 = D(r6, s[1][2][2], 0xFEFBFE15, 0x0CEDFB2C, 0x041DF123, 0x0009360F);
	r7 = D(r7, s[1][2][2], 0x05F412FD, 0x220CE6E0, 0x0009E80F, 0x04FC2400);
	f0 = vec4(r0) * 6.20001240e-05;
	f0 += vec4(2.911e-02, 1.780e-02, -8.573e-03, 6.251e-03);
	f0 = max(f0, vec4(0.0));
	imageStore(out_image, opos + ivec2(0, 0), f0);
	f1 = vec4(r1) * 6.20001240e-05;
	f1 += vec4(1.120e-02, 1.766e-02, 3.587e-02, 1.411e-02);
	f1 = max(f1, vec4(0.0));
	imageStore(out_image, opos + ivec2(1, 0), f1);
	f2 = vec4(r2) * 6.20001240e-05;
	f2 += vec4(-1.452e-02, 9.862e-03, 1.178e-02, 2.484e-02);
	f2 = max(f2, vec4(0.0));
	imageStore(out_image, opos + ivec2(0, 1), f2);
	f3 = vec4(r3) * 6.20001240e-05;
	f3 += vec4(4.347e-02, 1.542e-02, -1.155e-02, 7.154e-03);
	f3 = max(f3, vec4(0.0));
	imageStore(out_image, opos + ivec2(1, 1), f3);
	f4 = vec4(r4) * 6.20001240e-05;
	f4 += vec4(2.769e-02, 3.106e-02, -5.480e-03, 3.134e-02);
	f4 = max(f4, vec4(0.0));
	imageStore(out_image, opos + ivec2(2, 0), f4);
	f5 = vec4(r5) * 6.20001240e-05;
	f5 += vec4(-7.677e-03, -6.075e-03, -2.138e-02, -8.819e-03);
	f5 = max(f5, vec4(0.0));
	imageStore(out_image, opos + ivec2(3, 0), f5);
	f6 = vec4(r6) * 6.20001240e-05;
	f6 += vec4(-3.136e-02, -5.603e-02, -8.399e-03, -1.023e-01);
	f6 = max(f6, vec4(0.0));
	imageStore(out_image, opos + ivec2(2, 1), f6);
	f7 = vec4(r7) * 6.20001240e-05;
	f7 += vec4(-1.934e-02, -5.135e-02, 1.046e-02, -2.360e-02);
	f7 = max(f7, vec4(0.0));
	imageStore(out_image, opos + ivec2(3, 1), f7);
	r0 = ivec4(0);
	r1 = ivec4(0);
	r2 = ivec4(0);
	r3 = ivec4(0);
	r4 = ivec4(0);
	r5 = ivec4(0);
	r6 = ivec4(0);
	r7 = ivec4(0);
	s[0][0][0] = G[0][xy.y+0][xy.x+0]; s[0][0][1] = G[0][xy.y+0][xy.x+1];
	s[0][0][2] = G[0][xy.y+0][xy.x+2]; s[0][1][0] = G[0][xy.y+1][xy.x+0];
	s[0][1][1] = G[0][xy.y+1][xy.x+1]; s[0][1][2] = G[0][xy.y+1][xy.x+2];
	s[0][2][0] = G[0][xy.y+2][xy.x+0]; s[0][2][1] = G[0][xy.y+2][xy.x+1];
	s[0][2][2] = G[0][xy.y+2][xy.x+2]; s[1][0][0] = G[1][xy.y+0][xy.x+0];
	s[1][0][1] = G[1][xy.y+0][xy.x+1]; s[1][0][2] = G[1][xy.y+0][xy.x+2];
	s[1][1][0] = G[1][xy.y+1][xy.x+0]; s[1][1][1] = G[1][xy.y+1][xy.x+1];
	s[1][1][2] = G[1][xy.y+1][xy.x+2]; s[1][2][0] = G[1][xy.y+2][xy.x+0];
	s[1][2][1] = G[1][xy.y+2][xy.x+1]; s[1][2][2] = G[1][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x0F08D112, 0x07F0F505, 0xF702FC1A, 0x181603FC);
	r1 = D(r1, s[0][0][0], 0x0EFBFA00, 0xFB020219, 0xE5030805, 0xFE0DD807);
	r2 = D(r2, s[0][0][0], 0x08F606FB, 0xFB0901FE, 0xFC0603FE, 0x01FCF5FE);
	r3 = D(r3, s[0][0][0], 0x09EDF302, 0xF711E007, 0x030005FF, 0x0DFDF813);
	r4 = D(r4, s[0][0][0], 0x0AF41911, 0xE9FA14EF, 0x01FEFAF6, 0x0AEFF9F5);
	r5 = D(r5, s[0][0][0], 0x04F60000, 0xF9E7FFEB, 0x071402F7, 0xE007FF01);
	r6 = D(r6, s[0][0][0], 0xFD10FB11, 0xF91DEDD9, 0xE1E6F907, 0x130AFB14);
	r7 = D(r7, s[0][0][0], 0x110AFD12, 0x08FEF301, 0xF5F42106, 0x04F904FE);
	r0 = D(r0, s[0][0][1], 0xF6F2FEF7, 0x29E800FF, 0xF3F2F010, 0x06F8DBF3);
	r1 = D(r1, s[0][0][1], 0xF7FAF60C, 0x09F2F725, 0x0C15EA18, 0x04F80101);
	r2 = D(r2, s[0][0][1], 0x0C12FE03, 0x080C0101, 0xE1F2DCF9, 0x020D05FB);
	r3 = D(r3, s[0][0][1], 0x0E0C11EF, 0xECECEFFD, 0xF707F601, 0xE013E8FB);
	r4 = D(r4, s[0][0][1], 0x030AF1FF, 0x120AFB07, 0xF603F1FB, 0xFDEDEAF6);
	r5 = D(r5, s[0][0][1], 0x0DFEFDFF, 0x040508FF, 0xF6FA06F9, 0x05FAED07);
	r6 = D(r6, s[0][0][1], 0x02F51F0A, 0xFFFFCDFB, 0x01EEA301, 0xE8FDF4E6);
	r7 = D(r7, s[0][0][1], 0x02060E06, 0x0C090203, 0xFBE1FC0E, 0xFF030008);
	r0 = D(r0, s[0][0][2], 0x111D0AF7, 0x160509FE, 0xF20AE904, 0x0DF80026);
	r1 = D(r1, s[0][0][2], 0xFF04F403, 0x0FFEF4E7, 0x0AF1E3F9, 0x11F2050E);
	r2 = D(r2, s[0][0][2], 0x08FD01FF, 0x00FF0D03, 0x1DF5F80B, 0x14CEF012);
	r3 = D(r3, s[0][0][2], 0x0106E4F4, 0x0B0DF8FC, 0x01050207, 0x1002000A);
	r4 = D(r4, s[0][0][2], 0x0FF9FA0A, 0x04FBF600, 0xE8ECF7FC, 0xFB090704);
	r5 = D(r5, s[0][0][2], 0xF515FB00, 0x01040CEF, 0x0EF1FAF4, 0x07ECF0FA);
	r6 = D(r6, s[0][0][2], 0x1DFD0D0E, 0x08E70602, 0xFC05CEF3, 0xE60BFADE);
	r7 = D(r7, s[0][0][2], 0x0F180A0C, 0xFB010102, 0x13F0FC02, 0xFB030800);
	r0 = D(r0, s[0][1][0], 0x00E0050E, 0x0F0CF302, 0x0CF41704, 0xE900E2F4);
	r1 = D(r1, s[0][1][0], 0x0E0311FA, 0xFE09ECF9, 0xEBEAE511, 0xFFFEF01A);
	r2 = D(r2, s[0][1][0], 0x02FE0D03, 0xDE06E107, 0x09E511F5, 0x01F6081B);
	r3 = D(r3, s[0][1][0], 0x00FFC8FF, 0xF40BEDF9, 0x09FB0BFE, 0xFBF8EB06);
	r4 = D(r4, s[0][1][0], 0x00F8E2F4, 0xDB0C02E6, 0x05FDFB00, 0xE90BFA12);
	r5 = D(r5, s[0][1][0], 0xFEFBFA0F, 0x190204FF, 0xF802F507, 0xF5110509);
	r6 = D(r6, s[0][1][0], 0x02FDFDFB, 0xF3F4102F, 0xE3F3D507, 0x01F7EAFD);
	r7 = D(r7, s[0][1][0], 0x0A0000FB, 0x07FCFBF2, 0xFB0E0C02, 0xFEF4F307);
	r0 = D(r0, s[0][1][1], 0xFB02E2FE, 0x1513BDF6, 0x14EF1A05, 0xFEF3DDE9);
	r1 = D(r1, s[0][1][1], 0x0509EFFC, 0x08EE070B, 0x0E17CFF5, 0xFC0A1501);
	r2 = D(r2, s[0][1][1], 0xFDFBF6FA, 0x0A02EC12, 0xF40E10F6, 0xFB100CFB);
	r3 = D(r3, s[0][1][1], 0xFE042AF3, 0x0CF807F6, 0x0F0DED04, 0xFB03DC07);
	r4 = D(r4, s[0][1][1], 0x00F80402, 0xF0FB0613, 0xFD07FFFA, 0x19FDE6EF);
	r5 = D(r5, s[0][1][1], 0xFA0BFAFE, 0x0AE9E7F9, 0xF70B0301, 0x13EDFD08);
	r6 = D(r6, s[0][1][1], 0x0F27AE03, 0x06F88718, 0xFA150E02, 0x0B0C07FB);
	r7 = D(r7, s[0][1][1], 0xF4FCFD02, 0xFF01E7F0, 0xEEF71611, 0xFE0C130A);
	r0 = D(r0, s[0][1][2], 0x09EEE8E9, 0xE314F7E8, 0x03F90307, 0xF6F6F105);
	r1 = D(r1, s[0][1][2], 0x04F3FBF3, 0x1BF0E9FC, 0x06061DE3, 0x05EF00FE);
	r2 = D(r2, s[0][1][2], 0xF5000200, 0x0BFFFEEF, 0xF109F1F9, 0x020EFB07);
	r3 = D(r3, s[0][1][2], 0xFEFBF419, 0xE7ECFFFC, 0x02FBF9F6, 0xF2FE11FE);
	r4 = D(r4, s[0][1][2], 0xFF0B140E, 0x08FD0DFA, 0x02010719, 0x02F703FB);
	r5 = D(r5, s[0][1][2], 0x0204FD04, 0x0311F0D8, 0x0000F1FD, 0x120CE702);
	r6 = D(r6, s[0][1][2], 0xFCF2EF08, 0x1A110AED, 0x1608E80D, 0x04E0F70B);
	r7 = D(r7, s[0][1][2], 0x050B0AF9, 0xFD060BF8, 0xF4E80EF5, 0x08F91600);
	r0 = D(r0, s[0][2][0], 0xFEEAE5FF, 0xE508C714, 0xFDFA0C14, 0xFEF61712);
	r1 = D(r1, s[0][2][0], 0xFDFEFA12, 0x02FAEC01, 0xFDFBED08, 0xF7FFF10A);
	r2 = D(r2, s[0][2][0], 0xFB010007, 0x04F401FE, 0xF916FD15, 0xF6F1FDF8);
	r3 = D(r3, s[0][2][0], 0x0A060001, 0xF603F911, 0xFAFEFF02, 0xF8F9F204);
	r4 = D(r4, s[0][2][0], 0xECE7FC0A, 0x0DFD0904, 0x0AFD0101, 0xFB050100);
	r5 = D(r5, s[0][2][0], 0xFA010103, 0x02FF0CF8, 0x04FF0210, 0xFAF8FAEA);
	r6 = D(r6, s[0][2][0], 0x01E9E305, 0xF610E1F7, 0x02FFFF03, 0x0FF7FF0A);
	r7 = D(r7, s[0][2][0], 0x000B0713, 0x0000FF01, 0xEC102808, 0xFE0304FA);
	r0 = D(r0, s[0][2][1], 0xFBFDF00A, 0xF3EADA12, 0xF9F8F6FB, 0xF9F9E8E7);
	r1 = D(r1, s[0][2][1], 0xF7FBF9FA, 0x0415FEE6, 0x03FCD2FC, 0x070DFCF5);
	r2 = D(r2, s[0][2][1], 0xFF040AF8, 0xEF001405, 0x11EE060C, 0x11FE0301);
	r3 = D(r3, s[0][2][1], 0x030CDFF3, 0x01FEF104, 0x0302F5F7, 0x35F0E60D);
	r4 = D(r4, s[0][2][1], 0x0E1103F5, 0xEB1FDA0C, 0xF3FA0703, 0x05F0FFF6);
	r5 = D(r5, s[0][2][1], 0x00F70204, 0xF306DB00, 0x0805F1E7, 0xEF1FEBFE);
	r6 = D(r6, s[0][2][1], 0xEDF1DEF6, 0x1405FBFB, 0x001381F3, 0xF9FEF9F9);
	r7 = D(r7, s[0][2][1], 0x00040407, 0x0CFCFA01, 0x08010D05, 0x04021806);
	r0 = D(r0, s[0][2][2], 0x160DFDED, 0x1FFDE603, 0xEEEF07FB, 0x0D180905);
	r1 = D(r1, s[0][2][2], 0x03010813, 0x0AECFDFD, 0xF7ECFAE7, 0x1006F7F8);
	r2 = D(r2, s[0][2][2], 0xFEF9FA10, 0xF4F5EEFD, 0xEFFB11F7, 0xE4CEFEFC);
	r3 = D(r3, s[0][2][2], 0x0507E9F8, 0x0FFDF8FF, 0x0D0BF70A, 0xFF0C0A0D);
	r4 = D(r4, s[0][2][2], 0xFDDE010F, 0x080B0BE8, 0xF3060B09, 0x171305F3);
	r5 = D(r5, s[0][2][2], 0x0A1809F8, 0x06F8FAEB, 0x000802FE, 0xF6FD04FD);
	r6 = D(r6, s[0][2][2], 0xD61A06D2, 0xF205F4F9, 0x06F5F2F1, 0x03F700F0);
	r7 = D(r7, s[0][2][2], 0x03060705, 0xFB020702, 0xF50504F2, 0xFF001104);
	r0 = D(r0, s[1][0][0], 0x0CE8F701, 0x1105F909, 0xDFE8FA17, 0x0E00E8E9);
	r1 = D(r1, s[1][0][0], 0x05FDFF04, 0x07F60303, 0x0BF1F211, 0x0804FDE5);
	r2 = D(r2, s[1][0][0], 0xFEEFFB02, 0x01F9FAF3, 0xE4F9F916, 0xF4F9FBF8);
	r3 = D(r3, s[1][0][0], 0x0003FC05, 0xFA0405FC, 0xFA0EFC01, 0xF90C080D);
	r4 = D(r4, s[1][0][0], 0xEEDEF0F3, 0x1B050116, 0xF6FBF7FD, 0x01F4EDFD);
	r5 = D(r5, s[1][0][0], 0xF904F309, 0x0BEE00FA, 0xF9080CF6, 0x00F10C02);
	r6 = D(r6, s[1][0][0], 0x16F4F9F1, 0xF01AFED6, 0xF61BF2F6, 0xFB11FCFC);
	r7 = D(r7, s[1][0][0], 0x1EFEF504, 0xFEF80305, 0xFD0900F3, 0x01020708);
	r0 = D(r0, s[1][0][1], 0xFCFB0B18, 0x1D00F1D6, 0x13000A0F, 0xEF00F9F9);
	r1 = D(r1, s[1][0][1], 0xF2FF03FB, 0x0F17FE16, 0x05060811, 0x0502FAF1);
	r2 = D(r2, s[1][0][1], 0xFCFCFA03, 0x06050312, 0xC9FFF516, 0xF6F3FFFB);
	r3 = D(r3, s[1][0][1], 0xFE03F616, 0x02E4F2FB, 0x0305F804, 0x0811FEF4);
	r4 = D(r4, s[1][0][1], 0xFA0FFB09, 0x1CFB00FD, 0xF80CF5FC, 0x07ED0BD0);
	r5 = D(r5, s[1][0][1], 0x06FC02E1, 0x05F3EBDF, 0xF9F21500, 0xEBECF70F);
	r6 = D(r6, s[1][0][1], 0x051705F7, 0xFFD6ECEE, 0x0C0D0412, 0x07FCE616);
	r7 = D(r7, s[1][0][1], 0x00F9FDFF, 0x06F6F2FC, 0x00E0F308, 0xFD04FCF1);
	r0 = D(r0, s[1][0][2], 0xE0FBF616, 0x0420FEF6, 0xEB060719, 0x0205F5D7);
	r1 = D(r1, s[1][0][2], 0x0405FEE5, 0x070C03E4, 0x0B021815, 0xFCECE901);
	r2 = D(r2, s[1][0][2], 0x0507FF15, 0xF3FBF90F, 0x0BF9ECF9, 0x060C00E0);
	r3 = D(r3, s[1][0][2], 0xF7F01012, 0xF6070612, 0xF40C0004, 0x0EFFFEEE);
	r4 = D(r4, s[1][0][2], 0xFCF6FF0A, 0xFDFC00EE, 0xFA0509F3, 0xF9030306);
	r5 = D(r5, s[1][0][2], 0x0404020D, 0x0103F802, 0xFF02F900, 0x04FD05EB);
	r6 = D(r6, s[1][0][2], 0xF2E50BEC, 0x08FCF720, 0xF900F416, 0x04E5FEE4);
	r7 = D(r7, s[1][0][2], 0xF608FEF5, 0xFC05F8E1, 0x06FEF618, 0xFAFF06DF);
	r0 = D(r0, s[1][1][0], 0xF5100E02, 0x0FF834FB, 0xFAF5F4EB, 0x00F2CEE2);
	r1 = D(r1, s[1][1][0], 0x02F8F7F2, 0xE902ED04, 0xF6F80000, 0x080008F0);
	r2 = D(r2, s[1][1][0], 0x090D03FF, 0x03FD15FB, 0xBD0FF701, 0xF9FE08F1);
	r3 = D(r3, s[1][1][0], 0xFD08F504, 0xF7ECFD0F, 0x09F70503, 0xFE0700FA);
	r4 = D(r4, s[1][1][0], 0xF7F50706, 0xF902F11D, 0xFA02F7F5, 0x020100FD);
	r5 = D(r5, s[1][1][0], 0x00F904F5, 0x07F60908, 0x090DEB08, 0x0A110B0A);
	r6 = D(r6, s[1][1][0], 0xF0060E04, 0x12240009, 0xDA06F5E6, 0xFD0AE8ED);
	r7 = D(r7, s[1][1][0], 0x1711FF04, 0x0CF41808, 0x010F05F4, 0xF902FAFE);
	r0 = D(r0, s[1][1][1], 0x15E216E1, 0xFB01F3FB, 0x19070517, 0xEE02F2FE);
	r1 = D(r1, s[1][1][1], 0x02EEFFF5, 0xF9E9F7DF, 0xF9EDFDF4, 0xFD04EAEA);
	r2 = D(r2, s[1][1][1], 0xFA090A0D, 0x100C0313, 0x1308F909, 0x041605F7);
	r3 = D(r3, s[1][1][1], 0x00FF0213, 0x040F1710, 0x020C03FE, 0x11E50BE8);
	r4 = D(r4, s[1][1][1], 0xFDFB0206, 0xE4F9FCF5, 0x09FC08F5, 0xF80D07F9);
	r5 = D(r5, s[1][1][1], 0x12FC00D1, 0xEEF00EF6, 0xEB0BFE15, 0xFAEBF9F7);
	r6 = D(r6, s[1][1][1], 0xF60705D9, 0xFD0514FB, 0x12FAEC00, 0x17EE210E);
	r7 = D(r7, s[1][1][1], 0x011002FB, 0xFDF907F9, 0xF7FDF6F2, 0x061002F8);
	r0 = D(r0, s[1][1][2], 0x0601150F, 0xF8F3FCDB, 0x080205F8, 0xFCE71AF6);
	r1 = D(r1, s[1][1][2], 0x05F707F5, 0x08170DE4, 0xF7F8F60B, 0x00F800F9);
	r2 = D(r2, s[1][1][2], 0xFF0DEFF7, 0x060F150B, 0x0CFF0CF7, 0x0B1F0A2E);
	r3 = D(r3, s[1][1][2], 0x05FE0C09, 0x0AF5F5F7, 0x0800FD0B, 0x0126F9F8);
	r4 = D(r4, s[1][1][2], 0xED0E03EB, 0xF3FEFEF4, 0x05080AE8, 0xFE1B0BF6);
	r5 = D(r5, s[1][1][2], 0x15000604, 0x0CF2F808, 0x0D03FC07, 0x07150017);
	r6 = D(r6, s[1][1][2], 0x1302FCA3, 0xF417F30D, 0xFEF2F5F8, 0x0C1603D6);
	r7 = D(r7, s[1][1][2], 0x0516F205, 0xF7F7FCF7, 0xF412F7EF, 0xF505FDFF);
	r0 = D(r0, s[1][2][0], 0x1AE90DE7, 0xE81EF7EF, 0xE1FDFE04, 0xF4D901EF);
	r1 = D(r1, s[1][2][0], 0xFBFF01FD, 0xF911070A, 0xD4FA13FD, 0x07FC02FF);
	r2 = D(r2, s[1][2][0], 0xFA02FB0A, 0x0901FEFC, 0xDC0CF30E, 0xFD05FCED);
	r3 = D(r3, s[1][2][0], 0x03FEFD15, 0x0EFC0715, 0x0A00FCFF, 0xF4FC0209);
	r4 = D(r4, s[1][2][0], 0x0108FA03, 0x02E60D1A, 0x0404F80A, 0xE8F7F908);
	r5 = D(r5, s[1][2][0], 0x01F51202, 0xF4FF1F18, 0x090300FB, 0x01001108);
	r6 = D(r6, s[1][2][0], 0x0109E5F9, 0xF5D816F3, 0x110BF6ED, 0x0AF1EC08);
	r7 = D(r7, s[1][2][0], 0x09FB0407, 0x07FC05FB, 0xE9F40F0A, 0x00FE0305);
	r0 = D(r0, s[1][2][1], 0x08FBF30D, 0x1CDE1F09, 0x25EEEC0E, 0x0D040903);
	r1 = D(r1, s[1][2][1], 0xFFEC02FB, 0xFFD7080A, 0xEFF9F8E0, 0x00DA1300);
	r2 = D(r2, s[1][2][1], 0x00FFFD04, 0x01EE01FD, 0xF8F20720, 0xE0F1F718);
	r3 = D(r3, s[1][2][1], 0x0D0A0B07, 0x0FF615EF, 0x03120815, 0x0BFD0308);
	r4 = D(r4, s[1][2][1], 0x0816FF0A, 0x0303041A, 0xFAFF0404, 0xF0040007);
	r5 = D(r5, s[1][2][1], 0x0C060704, 0xFFF00204, 0x14FF000C, 0xF4FDFAFB);
	r6 = D(r6, s[1][2][1], 0x0AE916F9, 0xF8D433F6, 0xE7FB17E6, 0x09001BED);
	r7 = D(r7, s[1][2][1], 0x05E50EF0, 0x07F0FAFC, 0xFE05F7E2, 0x040C0500);
	r0 = D(r0, s[1][2][2], 0xF012ED02, 0xF9F511FF, 0xD61F12FC, 0x0611F007);
	r1 = D(r1, s[1][2][2], 0xFA04F9F3, 0xF8FD120D, 0xFC0E04F8, 0x25F91203);
	r2 = D(r2, s[1][2][2], 0x07F4F7EC, 0xF9FA08FC, 0x1507FCEA, 0xFB0516E8);
	r3 = D(r3, s[1][2][2], 0x0DEF18FE, 0x0CF403EC, 0x1102F9FE, 0xFDE4060B);
	r4 = D(r4, s[1][2][2], 0xDA1FF119, 0x150C0A14, 0xF2F80D04, 0xF2F30D0D);
	r5 = D(r5, s[1][2][2], 0xEDFD01F6, 0xFEF809FA, 0x071509E4, 0x0A09F7FF);
	r6 = D(r6, s[1][2][2], 0x04CF0AFE, 0xF512E3FE, 0xFD02050C, 0x02F9F406);
	r7 = D(r7, s[1][2][2], 0x04FDFAFE, 0x05F9FB02, 0xF1F8FDF8, 0x0BF70306);
	s[0][0][0] = G[2][xy.y+0][xy.x+0]; s[0][0][1] = G[2][xy.y+0][xy.x+1];
	s[0][0][2] = G[2][xy.y+0][xy.x+2]; s[0][1][0] = G[2][xy.y+1][xy.x+0];
	s[0][1][1] = G[2][xy.y+1][xy.x+1]; s[0][1][2] = G[2][xy.y+1][xy.x+2];
	s[0][2][0] = G[2][xy.y+2][xy.x+0]; s[0][2][1] = G[2][xy.y+2][xy.x+1];
	s[0][2][2] = G[2][xy.y+2][xy.x+2]; s[1][0][0] = G[3][xy.y+0][xy.x+0];
	s[1][0][1] = G[3][xy.y+0][xy.x+1]; s[1][0][2] = G[3][xy.y+0][xy.x+2];
	s[1][1][0] = G[3][xy.y+1][xy.x+0]; s[1][1][1] = G[3][xy.y+1][xy.x+1];
	s[1][1][2] = G[3][xy.y+1][xy.x+2]; s[1][2][0] = G[3][xy.y+2][xy.x+0];
	s[1][2][1] = G[3][xy.y+2][xy.x+1]; s[1][2][2] = G[3][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xD9270AFE, 0x07C90FD6, 0xE8FE13E9, 0xFA05090B);
	r1 = D(r1, s[0][0][0], 0xEF020503, 0xCE03FDFC, 0x160900FC, 0xEA091309);
	r2 = D(r2, s[0][0][0], 0x10FB09FF, 0xFC01FCF8, 0xE7EC0FE4, 0x12FE1E02);
	r3 = D(r3, s[0][0][0], 0x001308FA, 0xFC0017EB, 0x020D020A, 0x0AEA0009);
	r4 = D(r4, s[0][0][0], 0x16FB0EE0, 0xFCF9042E, 0xF8F6FE03, 0xFBFA2100);
	r5 = D(r5, s[0][0][0], 0xCCF6FAF7, 0xCEFD0B06, 0xF4FFDC04, 0x02011401);
	r6 = D(r6, s[0][0][0], 0xDE1DE90F, 0x132E19D1, 0xEF0C00EA, 0x0AF4F005);
	r7 = D(r7, s[0][0][0], 0xFAFFFB04, 0xF3F800FE, 0x01F0F7F5, 0xF7FDFEFB);
	r0 = D(r0, s[0][0][1], 0x0BFCFDF0, 0xF0F1F50D, 0xF7FA17C1, 0xEC032408);
	r1 = D(r1, s[0][0][1], 0xFDF31005, 0x0FF714EE, 0x060911FE, 0x16FFFB0F);
	r2 = D(r2, s[0][0][1], 0xF700FEF0, 0xEAFB0BF9, 0x25E90AF0, 0xEFF701E3);
	r3 = D(r3, s[0][0][1], 0xFF0B050E, 0x070B230E, 0xF5FA08FB, 0xF4F5FCF5);
	r4 = D(r4, s[0][0][1], 0x05F50504, 0x11031B02, 0x010217FE, 0xF7FEF010);
	r5 = D(r5, s[0][0][1], 0xEB0CF600, 0xF2FBEBFF, 0xE5FCDC03, 0xF809FCF7);
	r6 = D(r6, s[0][0][1], 0xF7E7ED01, 0x11161118, 0x01FF1B0B, 0x040D08F5);
	r7 = D(r7, s[0][0][1], 0x0905F30A, 0x08F2F000, 0xE81031FE, 0x0EFCFD11);
	r0 = D(r0, s[0][0][2], 0x14E60C0F, 0x1C0321B6, 0xFD0AEEF5, 0x001DE915);
	r1 = D(r1, s[0][0][2], 0xEF04FE04, 0xFDFF06D3, 0xE5040D00, 0x1C05E408);
	r2 = D(r2, s[0][0][2], 0xF8FCF8F0, 0x010301FD, 0x06F5F8C0, 0xFA0207F4);
	r3 = D(r3, s[0][0][2], 0x0012030B, 0xFB070E15, 0x0AF0FEFF, 0x0200F203);
	r4 = D(r4, s[0][0][2], 0x21FD0201, 0x09F90805, 0x00FE0B02, 0xFF0C000C);
	r5 = D(r5, s[0][0][2], 0x090118F8, 0xD71801F6, 0xD0FC06F1, 0xDFF6FE0F);
	r6 = D(r6, s[0][0][2], 0xFC1B0023, 0x0CEFF1EC, 0xF70E14D2, 0x1B02F0F4);
	r7 = D(r7, s[0][0][2], 0x09FAD604, 0xFBF807F5, 0xDE0607D3, 0x18FD0406);
	r0 = D(r0, s[0][1][0], 0xE6ECFF25, 0x271901C9, 0x03021903, 0xF2FFF10C);
	r1 = D(r1, s[0][1][0], 0x09F60DF3, 0x1C061DF5, 0x09FC13F5, 0x09081209);
	r2 = D(r2, s[0][1][0], 0x0302FFF3, 0x0EFE1F19, 0x22F637E1, 0xFEFDFE1A);
	r3 = D(r3, s[0][1][0], 0x02FE0409, 0xEB040D03, 0xF807EC00, 0x06F7DCE4);
	r4 = D(r4, s[0][1][0], 0xF8092314, 0x2BEF0307, 0xFE0108FD, 0x000A1404);
	r5 = D(r5, s[0][1][0], 0xBB0202E2, 0xEC05020F, 0xDAF0E0FF, 0x09ED1707);
	r6 = D(r6, s[0][1][0], 0x031017E7, 0xE18B0513, 0x17E61116, 0x1BFAF5F0);
	r7 = D(r7, s[0][1][0], 0x0608F000, 0x0AF60304, 0x0C1802FF, 0xFDF7FA09);
	r0 = D(r0, s[0][1][1], 0x01E6131A, 0x0908F9CE, 0xEFFEB6D8, 0x0AF1FBF3);
	r1 = D(r1, s[0][1][1], 0xEDF6F5F7, 0xBD18F8FA, 0x0317C0F3, 0x10FAF6FB);
	r2 = D(r2, s[0][1][1], 0x0B09F2EF, 0x03111F09, 0x8112D602, 0x0AEFFB0E);
	r3 = D(r3, s[0][1][1], 0xF9F61A17, 0x0CEE04FE, 0xFF0A0303, 0x11F2F2DD);
	r4 = D(r4, s[0][1][1], 0x08091500, 0xCF17F5EB, 0xECFA0EF7, 0xE208FF1E);
	r5 = D(r5, s[0][1][1], 0xFE09E706, 0xFFFAD8F0, 0xE2FE0600, 0x11FE06FA);
	r6 = D(r6, s[0][1][1], 0xF72504FD, 0x09CAED0A, 0x0C2123D5, 0x08FD001B);
	r7 = D(r7, s[0][1][1], 0x030FEF0A, 0x04000DFE, 0x0FEBF103, 0x02060B03);
	r0 = D(r0, s[0][1][2], 0xDC01FE01, 0x12E30ED7, 0x121317F8, 0xFB09F831);
	r1 = D(r1, s[0][1][2], 0xE304FAF3, 0xFEF7F7D9, 0x1907FBFE, 0xF700E302);
	r2 = D(r2, s[0][1][2], 0x0E0104EF, 0x090303E0, 0xF1101505, 0xFCF2F3F9);
	r3 = D(r3, s[0][1][2], 0xFC0920FC, 0x09FA18DD, 0xFEFF0206, 0xFE081D15);
	r4 = D(r4, s[0][1][2], 0x010FD20B, 0x0E09FDFC, 0xEB0D03F3, 0xCC10FF06);
	r5 = D(r5, s[0][1][2], 0x0A03F6DD, 0xE3F810FB, 0xE108F40A, 0xF906F606);
	r6 = D(r6, s[0][1][2], 0xD0E9EF02, 0xE9BC0EF0, 0x060A0BE2, 0xE4F8FEED);
	r7 = D(r7, s[0][1][2], 0xFFFC03FC, 0xEFFEFEFF, 0xF4D3EAFA, 0xFE060801);
	r0 = D(r0, s[0][2][0], 0xFCF010CE, 0x03232181, 0x0AFDF2C7, 0xE800E800);
	r1 = D(r1, s[0][2][0], 0x04F501F8, 0x120EFACD, 0x05ECF9F9, 0xFCF3F403);
	r2 = D(r2, s[0][2][0], 0xFA02F5FC, 0x17FC24FF, 0xFA0703DF, 0x080410E2);
	r3 = D(r3, s[0][2][0], 0x0EF70F1C, 0x020AF1F8, 0xFF05FFF3, 0xFF000AF7);
	r4 = D(r4, s[0][2][0], 0xFB06EC15, 0xFB130AF9, 0x0AF3F8FA, 0x1104FE08);
	r5 = D(r5, s[0][2][0], 0x0700F6FF, 0xECE6F7F9, 0xFFF603F4, 0xF5F9FEFD);
	r6 = D(r6, s[0][2][0], 0xD50811EB, 0x0B0710CE, 0x07E31EDC, 0xFEFD0C00);
	r7 = D(r7, s[0][2][0], 0xFEFDFDFE, 0x02011214, 0x000EFE05, 0x0AFC0505);
	r0 = D(r0, s[0][2][1], 0x00E5E913, 0x0EE417CB, 0xDF04060C, 0xEC111FEF);
	r1 = D(r1, s[0][2][1], 0x0B05FDFF, 0xFFFDF5F7, 0x15EEFA05, 0x0400FAFE);
	r2 = D(r2, s[0][2][1], 0xFFF913FA, 0x170331FE, 0x19EC0305, 0xECF7FBEE);
	r3 = D(r3, s[0][2][1], 0xF9FB0C0A, 0xFB01FB06, 0xF604FDF9, 0x020703F3);
	r4 = D(r4, s[0][2][1], 0xFC091006, 0x0CED24F9, 0xFE000312, 0xFD0CFFF1);
	r5 = D(r5, s[0][2][1], 0x0D09F60A, 0xFFFEFB03, 0xEEF60305, 0x07080C28);
	r6 = D(r6, s[0][2][1], 0xF2A9F6EB, 0xFAFBF2D4, 0xEB12FEEF, 0xFDF8F702);
	r7 = D(r7, s[0][2][1], 0xFA0004F2, 0xFDFCFA02, 0xFB0BF700, 0xF8000105);
	r0 = D(r0, s[0][2][2], 0xF5FBFA1A, 0x03FB0EC1, 0x13FC0CE7, 0xF1FFF719);
	r1 = D(r1, s[0][2][2], 0x05FE03F5, 0x16F419D5, 0x0906EF0A, 0xF501F4FC);
	r2 = D(r2, s[0][2][2], 0x0109F8F1, 0x09FE0610, 0x010B04E5, 0xE7ECEFED);
	r3 = D(r3, s[0][2][2], 0x000407F3, 0x03F4FEF1, 0x070103FF, 0x11061905);
	r4 = D(r4, s[0][2][2], 0xE00AC803, 0x031EE8F9, 0x060708F8, 0xFC07FC17);
	r5 = D(r5, s[0][2][2], 0x04F9040D, 0xE40B0810, 0xDC030810, 0xFDFC0B08);
	r6 = D(r6, s[0][2][2], 0xE7031120, 0x11E304F2, 0x24070314, 0x1F06E507);
	r7 = D(r7, s[0][2][2], 0xEEF6EB09, 0xF900FEFC, 0xEA05F419, 0x05FD0D10);
	r0 = D(r0, s[1][0][0], 0x23E6FD0C, 0x020CFEDD, 0xF6100D54, 0x0D040420);
	r1 = D(r1, s[1][0][0], 0x01ECFEFA, 0xF4F3F5F0, 0x0DE4FE17, 0xE81707F1);
	r2 = D(r2, s[1][0][0], 0x02030E00, 0x02F8FF0D, 0xF302050E, 0x05F5F1F8);
	r3 = D(r3, s[1][0][0], 0x000A0417, 0x0413F3D9, 0xFEFFFDF5, 0xF60104FA);
	r4 = D(r4, s[1][0][0], 0xF9F3FDFE, 0x1213F0E6, 0xFCF7F9FB, 0x0FF5030F);
	r5 = D(r5, s[1][0][0], 0xFA0608EE, 0x0006020B, 0xF9FFFCE4, 0xFE030104);
	r6 = D(r6, s[1][0][0], 0xE6211335, 0xE6D7F9EB, 0x01AFFF1A, 0xFDF0FFF3);
	r7 = D(r7, s[1][0][0], 0xF90A08FA, 0xFCFA0400, 0x1411FCF1, 0x0312FBF2);
	r0 = D(r0, s[1][0][1], 0xFA110618, 0xFAF8F211, 0x00F509FA, 0xEFE121FF);
	r1 = D(r1, s[1][0][1], 0xFEF7F3F0, 0xF6F813DD, 0x15F710F6, 0x03F7E800);
	r2 = D(r2, s[1][0][1], 0x050CFD06, 0x0C11FB2E, 0x0C0809F1, 0xF800FC09);
	r3 = D(r3, s[1][0][1], 0x101A00EF, 0xF9E1FFF1, 0xF1FCFAFD, 0xF904040E);
	r4 = D(r4, s[1][0][1], 0x2C010317, 0xEF09FD07, 0x0511FEF4, 0x0101F201);
	r5 = D(r5, s[1][0][1], 0x1201F6EE, 0x16F5FC10, 0x0CFEF6ED, 0x0C0A11F8);
	r6 = D(r6, s[1][0][1], 0x0405F814, 0xFFF10BF8, 0x08F50FEE, 0xFD10D4ED);
	r7 = D(r7, s[1][0][1], 0xFAFDFA03, 0x01080417, 0xFCF7F7F7, 0xFA03FFF8);
	r0 = D(r0, s[1][0][2], 0x0BF6EE16, 0x0408E7DF, 0x2B02FAED, 0x18141409);
	r1 = D(r1, s[1][0][2], 0x00F9FF0A, 0x16F70BFF, 0xFE0320F5, 0xF2F1E8E7);
	r2 = D(r2, s[1][0][2], 0x10FF0E07, 0x05FFFA16, 0x2808F5F2, 0xF90A00CC);
	r3 = D(r3, s[1][0][2], 0xFBF70BDA, 0x15EFDF05, 0x01F5FAFE, 0xF7FD01EC);
	r4 = D(r4, s[1][0][2], 0xE91616D9, 0x0DEE0DF9, 0xF4030FFB, 0x13F614ED);
	r5 = D(r5, s[1][0][2], 0xF80101FB, 0x09F801F9, 0x05F116EB, 0x0C0F190E);
	r6 = D(r6, s[1][0][2], 0x02F4FF13, 0x0EFB00BE, 0x15FB0C11, 0xF004FCE2);
	r7 = D(r7, s[1][0][2], 0xF8FFE901, 0x0D0804F9, 0xFC1505E0, 0xF202FBFD);
	r0 = D(r0, s[1][1][0], 0x05E215F6, 0xF2EDE8FD, 0xDADBFF0B, 0x08120D0A);
	r1 = D(r1, s[1][1][0], 0xFAED0AFA, 0xE8D80618, 0x0BE90123, 0xFB0DEC13);
	r2 = D(r2, s[1][1][0], 0xFC040007, 0x1342FC25, 0xF7EADFC8, 0xF509F90A);
	r3 = D(r3, s[1][1][0], 0xE4E40405, 0x0DD403FA, 0xFD05F0F1, 0x0CDFFA09);
	r4 = D(r4, s[1][1][0], 0xF9EF070D, 0xF80AF30C, 0xFFFBF6FC, 0x07F218F9);
	r5 = D(r5, s[1][1][0], 0xF9D6FFD5, 0x26FDF804, 0xF904F4D0, 0x03E70AFE);
	r6 = D(r6, s[1][1][0], 0x1B00FD02, 0x05F70C04, 0xEC81F4E9, 0x1514F1E4);
	r7 = D(r7, s[1][1][0], 0xF7080404, 0xFCED06F7, 0xE601F904, 0x041603FC);
	r0 = D(r0, s[1][1][1], 0xF809F5FF, 0xE7F8E6E6, 0x0208FB1A, 0x0B062708);
	r1 = D(r1, s[1][1][1], 0xF9FBFE0F, 0x01E2F9FE, 0xE507FEC8, 0xF5F6080E);
	r2 = D(r2, s[1][1][1], 0x14EA00E3, 0xD618FB0B, 0xE522FE14, 0x1304100B);
	r3 = D(r3, s[1][1][1], 0xF306ED0F, 0xF6FD0105, 0x07F00CFC, 0xE9050504);
	r4 = D(r4, s[1][1][1], 0x1333F705, 0xF4FA0C08, 0x020AF901, 0x110C1AFB);
	r5 = D(r5, s[1][1][1], 0x11E6030D, 0xF5D2FEF7, 0xEEFCF8E3, 0xFCEAFB00);
	r6 = D(r6, s[1][1][1], 0x18EFF6EF, 0x1BF612FC, 0x0815FBE0, 0xF7050800);
	r7 = D(r7, s[1][1][1], 0xF702030B, 0x10081102, 0xF7040B0C, 0xF808F901);
	r0 = D(r0, s[1][1][2], 0xF0FB20FC, 0xFF09FEF0, 0xF50EF6FB, 0x09E90530);
	r1 = D(r1, s[1][1][2], 0xEDF8FEF3, 0xF7EEE9FC, 0xF8F5CF19, 0x07F2F700);
	r2 = D(r2, s[1][1][2], 0x060BFF03, 0x1007EE0C, 0xF3EEF914, 0x09FD020E);
	r3 = D(r3, s[1][1][2], 0x02FA07F0, 0x061A0EED, 0xFE0002FD, 0x10F81A12);
	r4 = D(r4, s[1][1][2], 0x0AD30228, 0xD807F22C, 0x0AFC0718, 0x09DDF20B);
	r5 = D(r5, s[1][1][2], 0xF00B0003, 0x0C12F6F6, 0xFBFD1403, 0x0FE504FF);
	r6 = D(r6, s[1][1][2], 0xF5EFF413, 0x070DCDEF, 0x03ED0C14, 0x0BC825F9);
	r7 = D(r7, s[1][1][2], 0xF9FBFD0A, 0x0B060FF9, 0x0000020F, 0xF0F91104);
	r0 = D(r0, s[1][2][0], 0x0C2E03EC, 0xE3FE04C9, 0xF9F60600, 0x00130D07);
	r1 = D(r1, s[1][2][0], 0xED0509F3, 0x170103E6, 0xF2F9F4F9, 0xF216070D);
	r2 = D(r2, s[1][2][0], 0xFAFA0709, 0x0728EF02, 0xEBF1FDEE, 0x0204FAF5);
	r3 = D(r3, s[1][2][0], 0x15D2F505, 0xFDE20B0F, 0xFF07EFF2, 0xFC04FB21);
	r4 = D(r4, s[1][2][0], 0xF5FF0804, 0xD3FF0BF1, 0x00FFF1FB, 0x080DF3FE);
	r5 = D(r5, s[1][2][0], 0xFA0B0BF1, 0xFB05FCF5, 0xF9F8FD06, 0x08F700EA);
	r6 = D(r6, s[1][2][0], 0xDAB4FB07, 0x08FFE9D3, 0xE8CEE8FC, 0xFE0CFF11);
	r7 = D(r7, s[1][2][0], 0xFCFAF910, 0x04F30000, 0xFCFEF41D, 0x00FF0600);
	r0 = D(r0, s[1][2][1], 0x07EF0AFF, 0x0EFFFCED, 0x00FEEF0F, 0xF6170BF5);
	r1 = D(r1, s[1][2][1], 0x0605FC07, 0x0802F204, 0xFB05F206, 0xFAFB07F7);
	r2 = D(r2, s[1][2][1], 0x12F00AFB, 0x0905091A, 0xD80EEDCB, 0xF7F211EF);
	r3 = D(r3, s[1][2][1], 0x06D40709, 0x060FFCEE, 0xFC0F06F5, 0x15F20003);
	r4 = D(r4, s[1][2][1], 0xFAFBF00C, 0xF8FDFBF4, 0xFE00FF09, 0x0AF9F3F8);
	r5 = D(r5, s[1][2][1], 0x060BFD04, 0x22EAF8FE, 0x0B1207F8, 0xF3FFFAF5);
	r6 = D(r6, s[1][2][1], 0xF8032006, 0xFDFBF30A, 0xF40FF1F6, 0xFBF6ED14);
	r7 = D(r7, s[1][2][1], 0xFFFA0205, 0x06EDF803, 0x130F022D, 0x030100F7);
	r0 = D(r0, s[1][2][2], 0xED11FFE1, 0x12F3E3ED, 0xF7E81823, 0x0605FF1F);
	r1 = D(r1, s[1][2][2], 0xF40902F6, 0xEFF20515, 0xFF0601F1, 0x02F4FC13);
	r2 = D(r2, s[1][2][2], 0x0B0702F8, 0xE714F501, 0xF2EAE1CC, 0xE8F60810);
	r3 = D(r3, s[1][2][2], 0x080CF8FA, 0xEE050A14, 0x0203FFFF, 0xF003DD07);
	r4 = D(r4, s[1][2][2], 0xF9EFFFF6, 0xF611F8F1, 0xFD0B0004, 0xF30800F8);
	r5 = D(r5, s[1][2][2], 0x03F80105, 0xDD05F407, 0x06F6111F, 0x020AFAE6);
	r6 = D(r6, s[1][2][2], 0xF40D0CF0, 0x15131B16, 0x04040A10, 0x05FFE9FF);
	r7 = D(r7, s[1][2][2], 0x07F907FF, 0xFF030103, 0x0B010104, 0x02040404);
	s[0][0][0] = G[4][xy.y+0][xy.x+0]; s[0][0][1] = G[4][xy.y+0][xy.x+1];
	s[0][0][2] = G[4][xy.y+0][xy.x+2]; s[0][1][0] = G[4][xy.y+1][xy.x+0];
	s[0][1][1] = G[4][xy.y+1][xy.x+1]; s[0][1][2] = G[4][xy.y+1][xy.x+2];
	s[0][2][0] = G[4][xy.y+2][xy.x+0]; s[0][2][1] = G[4][xy.y+2][xy.x+1];
	s[0][2][2] = G[4][xy.y+2][xy.x+2]; s[1][0][0] = G[5][xy.y+0][xy.x+0];
	s[1][0][1] = G[5][xy.y+0][xy.x+1]; s[1][0][2] = G[5][xy.y+0][xy.x+2];
	s[1][1][0] = G[5][xy.y+1][xy.x+0]; s[1][1][1] = G[5][xy.y+1][xy.x+1];
	s[1][1][2] = G[5][xy.y+1][xy.x+2]; s[1][2][0] = G[5][xy.y+2][xy.x+0];
	s[1][2][1] = G[5][xy.y+2][xy.x+1]; s[1][2][2] = G[5][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xED01F8EC, 0x17EA0F26, 0xFBF110EF, 0xF6E6F9F8);
	r1 = D(r1, s[0][0][0], 0xF4FAFEF6, 0x0803130C, 0xF6120A01, 0x050A170D);
	r2 = D(r2, s[0][0][0], 0xFBFC01F6, 0xEC00080D, 0x04D4DBDC, 0xF0FA0F12);
	r3 = D(r3, s[0][0][0], 0xF60CFC00, 0xFFF801FB, 0xFA03F90A, 0xF4011511);
	r4 = D(r4, s[0][0][0], 0xFDFB07FD, 0x1C05F7EF, 0x0902120B, 0x01DC1CF7);
	r5 = D(r5, s[0][0][0], 0x0AFEF9FE, 0x0C050A04, 0xFBCD1306, 0xF80CF4F2);
	r6 = D(r6, s[0][0][0], 0x0119E9F7, 0x1B1A0AFB, 0xF80514FD, 0x14F1E70E);
	r7 = D(r7, s[0][0][0], 0x0726F4EE, 0x030EFAF5, 0xECE91105, 0x0506FFFF);
	r0 = D(r0, s[0][0][1], 0x01D90F10, 0xCC1A23B1, 0xDFBC29E8, 0xF4100BF3);
	r1 = D(r1, s[0][0][1], 0x05120703, 0xF4E80FF4, 0xF5000409, 0x05EAFEF2);
	r2 = D(r2, s[0][0][1], 0x0EF200FA, 0xFF11FC09, 0xFCFFF4F2, 0x15F6020A);
	r3 = D(r3, s[0][0][1], 0x00190E08, 0x020601EA, 0x0AFEFC01, 0xFFFF24FE);
	r4 = D(r4, s[0][0][1], 0x112CFFF8, 0xF7181400, 0x12F30CFF, 0x01FE08F9);
	r5 = D(r5, s[0][0][1], 0x050A28FB, 0xFAE2FD09, 0x02C4DDFA, 0xF4EC0BFB);
	r6 = D(r6, s[0][0][1], 0xE9040D13, 0x040A10F9, 0x0905F519, 0xF110100D);
	r7 = D(r7, s[0][0][1], 0x07020A19, 0xF309F505, 0x01131BEB, 0x001A0DFC);
	r0 = D(r0, s[0][0][2], 0x27021A0B, 0xF205329C, 0xFAFDD908, 0x050B2600);
	r1 = D(r1, s[0][0][2], 0xFF0A01F3, 0xFBEF1708, 0xFFF1F409, 0x08EDF70D);
	r2 = D(r2, s[0][0][2], 0xFB230601, 0x02FEF2F2, 0x06F61008, 0xFB02070C);
	r3 = D(r3, s[0][0][2], 0x191801EA, 0xF40EC80F, 0x0503F311, 0xE208091A);
	r4 = D(r4, s[0][0][2], 0x03E022F2, 0x0F10CC07, 0x0218F00C, 0x1E0BF0FD);
	r5 = D(r5, s[0][0][2], 0x0B11FCF0, 0x09070004, 0xFEEC010B, 0xFEFC16FD);
	r6 = D(r6, s[0][0][2], 0xF9300507, 0x11F1F50D, 0xFFF7EFD6, 0x15030200);
	r7 = D(r7, s[0][0][2], 0xF7FB0312, 0xF21A0CEE, 0x25FAFAF1, 0xF2FFFBFB);
	r0 = D(r0, s[0][1][0], 0xEEF524DD, 0x1527FDD1, 0x14160320, 0x07091614);
	r1 = D(r1, s[0][1][0], 0xFAEFFEF8, 0x04FAEFF5, 0xFCEC15F4, 0xF806F90A);
	r2 = D(r2, s[0][1][0], 0x01FD10F7, 0xF40AF300, 0x0E03FA0E, 0xFF1003FA);
	r3 = D(r3, s[0][1][0], 0x081D1A10, 0x0B02E9F3, 0xFCF91500, 0xECE7F406);
	r4 = D(r4, s[0][1][0], 0xECFD0AFE, 0x00E30805, 0xFF050812, 0x04F61005);
	r5 = D(r5, s[0][1][0], 0xECC80E08, 0x12FFF9FB, 0x0405D3FB, 0x170B01FC);
	r6 = D(r6, s[0][1][0], 0xF1120403, 0xA3FC0820, 0xFF07170E, 0xF915F50C);
	r7 = D(r7, s[0][1][0], 0xF6001206, 0x0A0C04FD, 0xF807F3FB, 0xFB0D0C0E);
	r0 = D(r0, s[0][1][1], 0x1F0E1820, 0x042530F8, 0xFC110E01, 0x050AF402);
	r1 = D(r1, s[0][1][1], 0xF8F9F101, 0xF0E41318, 0x0112000A, 0x0CDC0AF6);
	r2 = D(r2, s[0][1][1], 0x0D23160E, 0x0A440802, 0xF8FDF903, 0xEB2103F5);
	r3 = D(r3, s[0][1][1], 0x0015050C, 0x07FEF20C, 0xFC04FFFC, 0xE8F76A08);
	r4 = D(r4, s[0][1][1], 0x0CEB23FC, 0x03F0EE0E, 0xF70215F9, 0x13E123FB);
	r5 = D(r5, s[0][1][1], 0x0FFA0F03, 0x14DD1904, 0xF9F1E2FD, 0xFFFE1AF5);
	r6 = D(r6, s[0][1][1], 0xFAF12AE4, 0xDFD80035, 0xF61201F7, 0xE6EC33F9);
	r7 = D(r7, s[0][1][1], 0xFCFA0802, 0x0E042109, 0xE62522F9, 0x0104F604);
	r0 = D(r0, s[0][1][2], 0xC7F9FFD0, 0x2C0A24E9, 0x152DD612, 0xECF41317);
	r1 = D(r1, s[0][1][2], 0xF4FA06FF, 0x00F022D7, 0x09023701, 0x0BF7EEEB);
	r2 = D(r2, s[0][1][2], 0xFCFAFA08, 0xFE100705, 0x19E0D3F2, 0x1211C0F9);
	r3 = D(r3, s[0][1][2], 0xE02943F4, 0x0EE818F6, 0x04010410, 0x0419E902);
	r4 = D(r4, s[0][1][2], 0xF1FC25F1, 0xEEFECDF4, 0x0F16E9FE, 0xED222108);
	r5 = D(r5, s[0][1][2], 0xE5291EFE, 0x03040005, 0x0200F304, 0xF4F617EE);
	r6 = D(r6, s[0][1][2], 0xF1EB1E08, 0xCBFE17E1, 0xDF0C210A, 0x0014EF16);
	r7 = D(r7, s[0][1][2], 0x04F7F40A, 0x01F7D002, 0xF80608E9, 0xF1FAF7FC);
	r0 = D(r0, s[0][2][0], 0xFDFA1605, 0x040D22F3, 0x0304230B, 0xF4EAF905);
	r1 = D(r1, s[0][2][0], 0xF7ED0606, 0xFEF80CFC, 0x0101F8FC, 0xFF1C0702);
	r2 = D(r2, s[0][2][0], 0xF904EA03, 0x04220806, 0x150704F9, 0xF1D3EFEF);
	r3 = D(r3, s[0][2][0], 0xFC0B0EF1, 0x03F001F2, 0x08FDF401, 0x1407FF06);
	r4 = D(r4, s[0][2][0], 0x0DE2FDFA, 0xFF00F6F5, 0xF7F8FC02, 0x11F1FE06);
	r5 = D(r5, s[0][2][0], 0xFDEEFE0E, 0xFA031400, 0x080D2110, 0xEDFD0E06);
	r6 = D(r6, s[0][2][0], 0x02E43703, 0x0AE118FA, 0x0AF6F513, 0x02F92A09);
	r7 = D(r7, s[0][2][0], 0x050EF20E, 0x030CE900, 0xF1261E0D, 0xF7030FFE);
	r0 = D(r0, s[0][2][1], 0xE5E2E7FF, 0x06EFE026, 0xFAE439EC, 0xFBF83007);
	r1 = D(r1, s[0][2][1], 0xFF0BFA07, 0xF6011E0A, 0xF60C0EFC, 0x04111907);
	r2 = D(r2, s[0][2][1], 0xF1F702FF, 0x102B8EF5, 0xF0CA17ED, 0xF10DF211);
	r3 = D(r3, s[0][2][1], 0x0407420F, 0x0312F2FD, 0xF205D200, 0xFDFE33E6);
	r4 = D(r4, s[0][2][1], 0xF4DDCFEA, 0x19F9160C, 0x0C24F2EB, 0x0B18080D);
	r5 = D(r5, s[0][2][1], 0x0E12070B, 0x08EC270A, 0xFA0118F9, 0x08F90210);
	r6 = D(r6, s[0][2][1], 0xB3CBF326, 0xEE03FF0B, 0x0913D716, 0x1313E501);
	r7 = D(r7, s[0][2][1], 0xFE003F0A, 0x0F13EDFA, 0x0F082705, 0x150B14FE);
	r0 = D(r0, s[0][2][2], 0x1D0D5FFE, 0x1444B1FA, 0x11F6DCD2, 0x0524500F);
	r1 = D(r1, s[0][2][2], 0x0204DCF7, 0x1010260E, 0xFFF9F7E1, 0x06FF3909);
	r2 = D(r2, s[0][2][2], 0x07ECF701, 0xF12BF910, 0x19FA010B, 0xF8127F0D);
	r3 = D(r3, s[0][2][2], 0xFC0440ED, 0xF8FA8102, 0xFEE8BD03, 0x06057FF8);
	r4 = D(r4, s[0][2][2], 0x05BECE0A, 0xFC0C1CF4, 0x0BF829EE, 0xF3090907);
	r5 = D(r5, s[0][2][2], 0xF62D3702, 0x0B021AF2, 0x124C42EF, 0xE90C1301);
	r6 = D(r6, s[0][2][2], 0x150F7F04, 0xFAEF171D, 0xF912A0F7, 0x00003BFC);
	r7 = D(r7, s[0][2][2], 0xF6100C07, 0x0312A8FE, 0xEE0AD61B, 0xFFF20106);
	r0 = D(r0, s[1][0][0], 0x1BFF0632, 0xD7FEF409, 0xA8F60111, 0x06F51330);
	r1 = D(r1, s[1][0][0], 0x010407FF, 0x00040828, 0xF904111B, 0x2300F50E);
	r2 = D(r2, s[1][0][0], 0xF312F0F7, 0x1DF20103, 0x1F0F1BF8, 0x0A000AF2);
	r3 = D(r3, s[1][0][0], 0xF903120F, 0xC3EAFACC, 0xF60F0500, 0xE7EBFF03);
	r4 = D(r4, s[1][0][0], 0xFC140A17, 0xF40D1013, 0xF2FCFE07, 0x080FF3FA);
	r5 = D(r5, s[1][0][0], 0xCBFBFB07, 0xCE140CF7, 0x05FFECF2, 0xFCFB0315);
	r6 = D(r6, s[1][0][0], 0xECF61206, 0x0EE21424, 0x04F80735, 0x1210F510);
	r7 = D(r7, s[1][0][0], 0xF4020B06, 0xEA0AFBFA, 0x00F90D3D, 0x0DFE0808);
	r0 = D(r0, s[1][0][1], 0xDB0E000C, 0xD2FFF31F, 0x09EBE811, 0x05120124);
	r1 = D(r1, s[1][0][1], 0xFD040400, 0xE406D905, 0xF3E50726, 0x2704FB10);
	r2 = D(r2, s[1][0][1], 0xF3FDFE02, 0x02F51026, 0x271A2413, 0xFAF7060F);
	r3 = D(r3, s[1][0][1], 0x110E03DF, 0xD202FBF5, 0xEC0BF709, 0xEBF60C18);
	r4 = D(r4, s[1][0][1], 0xABEF140F, 0xFEF6E600, 0xFFF109FA, 0xF2F50D10);
	r5 = D(r5, s[1][0][1], 0xE10900FE, 0x0DFDFFF9, 0x1FF0E4E6, 0xDB05170D);
	r6 = D(r6, s[1][0][1], 0xF2FD080C, 0x02121109, 0x19EAF618, 0x1815ED00);
	r7 = D(r7, s[1][0][1], 0xFE03FF04, 0xEDFE0114, 0xDC060503, 0x0A04FDFD);
	r0 = D(r0, s[1][0][2], 0xFE040B0C, 0x0507C52B, 0x21F6FC13, 0x0025FE21);
	r1 = D(r1, s[1][0][2], 0xF10EFF10, 0xF3120621, 0xF90FF41F, 0x0F1D03D9);
	r2 = D(r2, s[1][0][2], 0xFE070611, 0xEEF3FE18, 0x1D001B12, 0xF804110C);
	r3 = D(r3, s[1][0][2], 0xFC0E1DFF, 0xE504FCF5, 0xF3FC0007, 0x11030AF5);
	r4 = D(r4, s[1][0][2], 0xD10A15F0, 0x02FF10FC, 0x1605F908, 0x20FD0902);
	r5 = D(r5, s[1][0][2], 0x090201F7, 0xE5F92A07, 0x040600ED, 0xC008041B);
	r6 = D(r6, s[1][0][2], 0xF2E51124, 0x0A0409FF, 0xCDFE1B0B, 0x08EDF7EA);
	r7 = D(r7, s[1][0][2], 0x0CFEFCF8, 0xFA000309, 0x05071AEB, 0x09F9FCFE);
	r0 = D(r0, s[1][1][0], 0xF50AE8F7, 0xE50ABBF7, 0xAC041825, 0x1016000F);
	r1 = D(r1, s[1][1][0], 0xEB11FDF4, 0xBFFA0A09, 0x12FF0C1F, 0xFD0106E0);
	r2 = D(r2, s[1][1][0], 0xF40C030E, 0x03F606EB, 0xC7051419, 0x040306FF);
	r3 = D(r3, s[1][1][0], 0xFCF8FF03, 0x04EA0B16, 0xEFF702F1, 0xD8F8FEFE);
	r4 = D(r4, s[1][1][0], 0xC5EBFF13, 0xDBEC080D, 0x0101FF0E, 0xFB0CFA0F);
	r5 = D(r5, s[1][1][0], 0xD1F1FE13, 0xEBFEF60B, 0x1F1201DA, 0xD9EFFE0F);
	r6 = D(r6, s[1][1][0], 0xF512FF13, 0xB30EEB14, 0x030A0F24, 0x1401E2F5);
	r7 = D(r7, s[1][1][0], 0xF6050603, 0xFE1308F2, 0x0E00EB0C, 0x060AF6F7);
	r0 = D(r0, s[1][1][1], 0xDFFF0FF3, 0xBEF11515, 0x810A0B03, 0xFDEFE80B);
	r1 = D(r1, s[1][1][1], 0x0D0FF30D, 0xE9E3F822, 0xF2FC06D5, 0x040705F6);
	r2 = D(r2, s[1][1][1], 0xED0AF506, 0xF3121502, 0xF4FA222B, 0xCFEE070A);
	r3 = D(r3, s[1][1][1], 0x0B010009, 0xE4040AFE, 0xF9FC0908, 0xECE609F0);
	r4 = D(r4, s[1][1][1], 0xF9113305, 0xF90F14B4, 0xFBE0FBF5, 0x08E2F205);
	r5 = D(r5, s[1][1][1], 0x08FEFC02, 0x100012ED, 0x0D0DFF06, 0xFCEBF205);
	r6 = D(r6, s[1][1][1], 0xF90DEBF7, 0x09E7070F, 0x1D090313, 0xF5BE0B0E);
	r7 = D(r7, s[1][1][1], 0xD307FEE6, 0xEAEA09E8, 0xF0E3FD0F, 0xFFF8FDEC);
	r0 = D(r0, s[1][1][2], 0x12FD1E0B, 0x03F31DFD, 0x09FCC3EC, 0xEEFF0EF7);
	r1 = D(r1, s[1][1][2], 0xED0402F8, 0xD50E081D, 0xF50107F4, 0x16FCF502);
	r2 = D(r2, s[1][1][2], 0xE7FC0F0D, 0x15EC021D, 0xB0FEFD1D, 0xD8EFF1E8);
	r3 = D(r3, s[1][1][2], 0x02010902, 0xEFEDF0EF, 0xFAF80506, 0x080AEF12);
	r4 = D(r4, s[1][1][2], 0xDF13FB19, 0x17FC1317, 0xFDFEEF03, 0xF8F5040C);
	r5 = D(r5, s[1][1][2], 0xFA130302, 0x06E00B06, 0xFEF20516, 0xFDF7FB17);
	r6 = D(r6, s[1][1][2], 0xF20E091B, 0x040A09FF, 0xFAFCE903, 0x10090D17);
	r7 = D(r7, s[1][1][2], 0xFB05FC1B, 0xDDFB00EF, 0xE1F3EF14, 0x080DFDF4);
	r0 = D(r0, s[1][2][0], 0x1E070321, 0xEFF52A14, 0xC4FAF81B, 0x08FB0504);
	r1 = D(r1, s[1][2][0], 0xF901F5F8, 0xD403FD07, 0x2509FA14, 0x0AF8060B);
	r2 = D(r2, s[1][2][0], 0xEE0D0300, 0x05EC0627, 0xEBFBE712, 0xF20802F7);
	r3 = D(r3, s[1][2][0], 0x02040012, 0xF8070DF9, 0xEC0EFF05, 0xEC1015F7);
	r4 = D(r4, s[1][2][0], 0x12F70517, 0xFFF6FF2C, 0xF202F302, 0x0C030A07);
	r5 = D(r5, s[1][2][0], 0xD800FFF5, 0xC7E9E9F9, 0xEF04FC04, 0xF209F8FE);
	r6 = D(r6, s[1][2][0], 0xF70DF81D, 0xD61FF8E8, 0x12F0EF0D, 0x0F0FE62C);
	r7 = D(r7, s[1][2][0], 0x0408FE0C, 0x0101F9F3, 0x0B080114, 0x09050AFD);
	r0 = D(r0, s[1][2][1], 0xC50216EF, 0xF6F7F51F, 0xD8F9FBFB, 0xEF110906);
	r1 = D(r1, s[1][2][1], 0xFCEDFB09, 0xF5CDFD0E, 0x1EF506F9, 0x060406F6);
	r2 = D(r2, s[1][2][1], 0xFD020402, 0xF7090513, 0xC7F70510, 0xAE01F50D);
	r3 = D(r3, s[1][2][1], 0x0305F90C, 0x0BFFEFF8, 0xF2F60404, 0xEE08FF14);
	r4 = D(r4, s[1][2][1], 0x07FAF1FA, 0xF7F0F101, 0xEAEBFCF2, 0xF8F5E301);
	r5 = D(r5, s[1][2][1], 0xFFFCF901, 0x0AF2FAF0, 0xCFE500F3, 0xE8050E09);
	r6 = D(r6, s[1][2][1], 0x22F1070B, 0xEFFDE9EF, 0x16FD0D16, 0x210AF9F2);
	r7 = D(r7, s[1][2][1], 0xFC1005F0, 0x0FFA0B01, 0xE109F30D, 0x050C01EF);
	r0 = D(r0, s[1][2][2], 0xF10B071C, 0x070ADBF7, 0x1E040E18, 0x01020318);
	r1 = D(r1, s[1][2][2], 0xEDFF030D, 0xBC03171D, 0x280FF902, 0x16FC0F01);
	r2 = D(r2, s[1][2][2], 0xEFFC090A, 0xF502F80B, 0x81020F1C, 0xE0F1FF11);
	r3 = D(r3, s[1][2][2], 0xFEFE01FF, 0xE106F805, 0xF0FFFE07, 0x0F0A130D);
	r4 = D(r4, s[1][2][2], 0x22000202, 0x0E07F31F, 0xCDFFFF09, 0x0A0D11F6);
	r5 = D(r5, s[1][2][2], 0xF0FDFC00, 0xD7F00706, 0xF3FD08F8, 0xFE07FA0B);
	r6 = D(r6, s[1][2][2], 0xB6D9E2ED, 0xACBE0002, 0x0B08052F, 0x27050A01);
	r7 = D(r7, s[1][2][2], 0xFDF70400, 0xFBFD01F7, 0x16FBF212, 0x0D0209F6);
	s[0][0][0] = G[6][xy.y+0][xy.x+0]; s[0][0][1] = G[6][xy.y+0][xy.x+1];
	s[0][0][2] = G[6][xy.y+0][xy.x+2]; s[0][1][0] = G[6][xy.y+1][xy.x+0];
	s[0][1][1] = G[6][xy.y+1][xy.x+1]; s[0][1][2] = G[6][xy.y+1][xy.x+2];
	s[0][2][0] = G[6][xy.y+2][xy.x+0]; s[0][2][1] = G[6][xy.y+2][xy.x+1];
	s[0][2][2] = G[6][xy.y+2][xy.x+2]; s[1][0][0] = G[7][xy.y+0][xy.x+0];
	s[1][0][1] = G[7][xy.y+0][xy.x+1]; s[1][0][2] = G[7][xy.y+0][xy.x+2];
	s[1][1][0] = G[7][xy.y+1][xy.x+0]; s[1][1][1] = G[7][xy.y+1][xy.x+1];
	s[1][1][2] = G[7][xy.y+1][xy.x+2]; s[1][2][0] = G[7][xy.y+2][xy.x+0];
	s[1][2][1] = G[7][xy.y+2][xy.x+1]; s[1][2][2] = G[7][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xDFF73EF8, 0xF71035F9, 0xF608000E, 0xF2F920E0);
	r1 = D(r1, s[0][0][0], 0xFFF90A02, 0xE8F10B13, 0x12F70911, 0xFCFCFFD9);
	r2 = D(r2, s[0][0][0], 0xF906FF04, 0x1400F90B, 0x0BF70002, 0xFC04F2FE);
	r3 = D(r3, s[0][0][0], 0x0201F906, 0xF5F1F4EC, 0x0905EF06, 0xFEE7FFE9);
	r4 = D(r4, s[0][0][0], 0x16F0DEF3, 0xF80B0A01, 0xF503FFFF, 0x07F00BF1);
	r5 = D(r5, s[0][0][0], 0xF0070CFC, 0x0E071313, 0x16F50B01, 0x0E0AFFE7);
	r6 = D(r6, s[0][0][0], 0x1C0D0C0C, 0x07F311F4, 0xECEA3613, 0xE7F1F7EB);
	r7 = D(r7, s[0][0][0], 0xFBFDFB15, 0xF4010205, 0xFEFE1B06, 0xFF00F5F9);
	r0 = D(r0, s[0][0][1], 0x030318DB, 0xE7FD0F03, 0xE401E413, 0xF3FC04D2);
	r1 = D(r1, s[0][0][1], 0xF40404F5, 0x0A02F303, 0xF50619FB, 0xF6DD17E6);
	r2 = D(r2, s[0][0][1], 0xF9FE0800, 0xFF0B031F, 0xFEFF100D, 0xEC0D1407);
	r3 = D(r3, s[0][0][1], 0xF8032AF7, 0x041D0A06, 0x0304EEFE, 0xF01B04DF);
	r4 = D(r4, s[0][0][1], 0xE81003EA, 0xF212F716, 0xF1FBFFFC, 0x01093C04);
	r5 = D(r5, s[0][0][1], 0x070411F4, 0x02F70F08, 0xF6EDF8EC, 0xFFF109E7);
	r6 = D(r6, s[0][0][1], 0xF8F9F3F5, 0x1FF502E9, 0x0E0CE9AD, 0x25FEEA00);
	r7 = D(r7, s[0][0][1], 0x03ED05EC, 0xFA07110E, 0xF80111E4, 0x08030EF8);
	r0 = D(r0, s[0][0][2], 0xE9011200, 0x0105EBEA, 0xE4DF04F0, 0xDFFF05B6);
	r1 = D(r1, s[0][0][2], 0x050B0605, 0xF2FE0218, 0xF6FA14FF, 0xF3EDEE01);
	r2 = D(r2, s[0][0][2], 0x020204F7, 0x0CF1FEFB, 0x09E60EF8, 0x01F3EBF5);
	r3 = D(r3, s[0][0][2], 0xFE110BD5, 0x0A06EFE9, 0x0907FDFF, 0xE8180CE5);
	r4 = D(r4, s[0][0][2], 0x03DD12EE, 0x06F4F6F2, 0xFCF9FAEE, 0x18E9FB0D);
	r5 = D(r5, s[0][0][2], 0x10FD09EF, 0xFA04010E, 0x0C06070A, 0x070900E7);
	r6 = D(r6, s[0][0][2], 0x16F41604, 0xEA05FFEF, 0x080415EE, 0xDED51D20);
	r7 = D(r7, s[0][0][2], 0x02F3FE11, 0xF902F7FF, 0xFC0B0FF1, 0xFD050DED);
	r0 = D(r0, s[0][1][0], 0x0B0109F1, 0xE1E9FAE4, 0x1FE40201, 0xF3E621FF);
	r1 = D(r1, s[0][1][0], 0xFD0C0E09, 0xE70B1DF5, 0xFCEF1EFE, 0xFA0105FC);
	r2 = D(r2, s[0][1][0], 0xF807F603, 0x03FEE6FE, 0x0CE60C1F, 0xFEFDF71B);
	r3 = D(r3, s[0][1][0], 0x0AF90F0C, 0x0C150315, 0x03020C17, 0xFAF1F315);
	r4 = D(r4, s[0][1][0], 0x0503FDF8, 0xF7042AFA, 0x00F706F7, 0x17061BFA);
	r5 = D(r5, s[0][1][0], 0xF5BB04EE, 0x00D3FCFF, 0xEFF6FE02, 0x07E10BED);
	r6 = D(r6, s[0][1][0], 0xF7EFFAF7, 0x10FFE6F7, 0x0F120CF2, 0x08030513);
	r7 = D(r7, s[0][1][0], 0xFA1306FD, 0x050604F6, 0x0B1612FE, 0x040B0205);
	r0 = D(r0, s[0][1][1], 0x080D2712, 0x06F53EFB, 0xF120101B, 0x020B1BC6);
	r1 = D(r1, s[0][1][1], 0x01010414, 0xFFF013FE, 0xEFD301EA, 0x04E402D7);
	r2 = D(r2, s[0][1][1], 0x081206FA, 0x10F0F7DF, 0x1518DD1C, 0xFCFEE70F);
	r3 = D(r3, s[0][1][1], 0xF7011505, 0xF9F00A0B, 0x030AF70A, 0xE3F8F3F7);
	r4 = D(r4, s[0][1][1], 0xE0E50010, 0x111407E7, 0x04FD08F8, 0x05ED1EFF);
	r5 = D(r5, s[0][1][1], 0x00DE0EF8, 0xFD051DE4, 0x04F2F719, 0x06E909F6);
	r6 = D(r6, s[0][1][1], 0x070314CA, 0x01E6F1F5, 0xFE05E9BA, 0xEF11F2F9);
	r7 = D(r7, s[0][1][1], 0xFEEB01F7, 0xFB020C09, 0xFFF21F03, 0xF4FD0408);
	r0 = D(r0, s[0][1][2], 0x07EC0EFF, 0xFFF72E08, 0xDF11F0DA, 0xF02223D9);
	r1 = D(r1, s[0][1][2], 0xF609FFF4, 0x061320FF, 0x00E8F9E6, 0x06F80ED1);
	r2 = D(r2, s[0][1][2], 0xFBFA02F6, 0x040C0214, 0xF810FFF0, 0xF8FA2210);
	r3 = D(r3, s[0][1][2], 0x0E031CF0, 0x0309E909, 0xF3FBF110, 0xFDEF19D5);
	r4 = D(r4, s[0][1][2], 0x081A05CE, 0x01F9E90B, 0xFA0513FA, 0x05EBF6E5);
	r5 = D(r5, s[0][1][2], 0x0007FAF1, 0x03FFF31D, 0x0CF1120A, 0x04D00ADB);
	r6 = D(r6, s[0][1][2], 0x08F0FFE9, 0xF018E5F2, 0x161821EA, 0xFF050BFB);
	r7 = D(r7, s[0][1][2], 0xF306F109, 0x03010606, 0xFBFE0BEF, 0x090AFCFA);
	r0 = D(r0, s[0][2][0], 0xF8D9ECEE, 0x0709F2F2, 0xFD0902EB, 0x0818FED6);
	r1 = D(r1, s[0][2][0], 0xF8EF04F3, 0x0BCA03FF, 0xF5F713FF, 0xFFF90102);
	r2 = D(r2, s[0][2][0], 0xFB0104F8, 0xF4030B04, 0xED010CFD, 0x191FFA09);
	r3 = D(r3, s[0][2][0], 0x03FB070F, 0x0B0409EC, 0x09100214, 0xF9FA1DFB);
	r4 = D(r4, s[0][2][0], 0x020C0E24, 0x0402EA2A, 0xFE0B0006, 0x06FE14F3);
	r5 = D(r5, s[0][2][0], 0xF3B907EA, 0xF3C90BFE, 0x0D0D0C0C, 0x07EDFFE9);
	r6 = D(r6, s[0][2][0], 0x0BFE1407, 0xFBFEF3F7, 0xF9F0130A, 0xF80DED0D);
	r7 = D(r7, s[0][2][0], 0x00F3F3F6, 0xFF0AFC10, 0xFB220F02, 0x0303F700);
	r0 = D(r0, s[0][2][1], 0x03FE10CB, 0xDB0404FA, 0x0DFB1321, 0x02FA0EBB);
	r1 = D(r1, s[0][2][1], 0x09FE05FC, 0xFBC0FE0B, 0x0614FDFC, 0x02F903FB);
	r2 = D(r2, s[0][2][1], 0x0412F8F6, 0xF91313FC, 0x0AF50617, 0xF4D809F6);
	r3 = D(r3, s[0][2][1], 0x0B0117F3, 0x06F008F2, 0x08F7FBFB, 0xF7C71800);
	r4 = D(r4, s[0][2][1], 0x03FB1B1B, 0xF7FFF5FC, 0xFFF500FF, 0xF1E10C00);
	r5 = D(r5, s[0][2][1], 0x070511FE, 0xFBE70805, 0xF8030DEE, 0xFB03FFF5);
	r6 = D(r6, s[0][2][1], 0xF9ED0BD8, 0xE622FDE1, 0xECF719FD, 0xF5D8E319);
	r7 = D(r7, s[0][2][1], 0x1504FDF6, 0xF4F40417, 0x0DEF15E3, 0xF80D0104);
	r0 = D(r0, s[0][2][2], 0xDB211701, 0xF0DB29FA, 0xFEF4F0EA, 0xFB01FADE);
	r1 = D(r1, s[0][2][2], 0x05F10607, 0x01E01AED, 0x01FFF807, 0x00FF0EEF);
	r2 = D(r2, s[0][2][2], 0xF7F7FBFC, 0x010B1E08, 0x11E6070E, 0xFCDB0BEF);
	r3 = D(r3, s[0][2][2], 0xFE04FAE1, 0x04EC00EF, 0xFB0AF506, 0x17FC1204);
	r4 = D(r4, s[0][2][2], 0x131D18E1, 0xFC21051A, 0xF2E7FEFF, 0xFF11FA05);
	r5 = D(r5, s[0][2][2], 0x120C040A, 0xF3E8100D, 0x040307FB, 0x06070FF0);
	r6 = D(r6, s[0][2][2], 0xD00912F8, 0xE9F821DE, 0xFF0014F2, 0x12F10AE5);
	r7 = D(r7, s[0][2][2], 0xFDFD0DEF, 0x0BEEFB11, 0xF4E4DC02, 0xFF12FFF5);
	r0 = D(r0, s[1][0][0], 0x01F7FBFC, 0xF8EAEF04, 0xFCE61515, 0xEB0A0B0F);
	r1 = D(r1, s[1][0][0], 0xFE02FBF6, 0x0AF1FE02, 0xFDFC0705, 0x06F710FC);
	r2 = D(r2, s[1][0][0], 0x07EFFB07, 0x0BFEFAFA, 0x0602ED00, 0x05FEFD06);
	r3 = D(r3, s[1][0][0], 0xFF0E00F5, 0xEF1306F8, 0x00070206, 0x0303030F);
	r4 = D(r4, s[1][0][0], 0x08F7F00D, 0xF10E0B06, 0x0101FEF5, 0x02FCF3FE);
	r5 = D(r5, s[1][0][0], 0x12F502FF, 0x11F40D16, 0xFD02F3F7, 0xFCF803FE);
	r6 = D(r6, s[1][0][0], 0x0CEEFF01, 0x0529DF05, 0xFFF4FB14, 0xF40D0800);
	r7 = D(r7, s[1][0][0], 0x08000A01, 0xFDF803FA, 0x01F6FBF5, 0x0204F508);
	r0 = D(r0, s[1][0][1], 0xFA021909, 0xF3D40C0E, 0x29F81102, 0x030AF201);
	r1 = D(r1, s[1][0][1], 0x06FA0704, 0x1EE8060B, 0xF6FD0AF1, 0xDFECFBFC);
	r2 = D(r2, s[1][0][1], 0x00F6FF05, 0xFD07000D, 0x0AFD0121, 0x1CFFF313);
	r3 = D(r3, s[1][0][1], 0x060806F2, 0x0EF502F9, 0xFCFC1305, 0x07EDFA05);
	r4 = D(r4, s[1][0][1], 0x00E0EF03, 0xF702ECFB, 0x030D0004, 0xFDF1FD1B);
	r5 = D(r5, s[1][0][1], 0xEFF203FA, 0x04F31909, 0x17F900FA, 0xF207100A);
	r6 = D(r6, s[1][0][1], 0xEC02FF14, 0xF819F8D4, 0x16EFF8E5, 0xF3190609);
	r7 = D(r7, s[1][0][1], 0xFC08FBFF, 0xF8090C05, 0x080BF4FD, 0xFAFF0A06);
	r0 = D(r0, s[1][0][2], 0x00080705, 0x36F1F3E4, 0x1A05F9F8, 0xF70BE7E7);
	r1 = D(r1, s[1][0][2], 0x010306EC, 0xFCE1F2E3, 0xF60301F1, 0xCDDEFE06);
	r2 = D(r2, s[1][0][2], 0xEF020800, 0x02F2FE09, 0x0FF501F2, 0x0FEE00F5);
	r3 = D(r3, s[1][0][2], 0xF61CF0FC, 0xE5070DEF, 0xE9070706, 0x0CF8EFF3);
	r4 = D(r4, s[1][0][2], 0x0103E6F4, 0xF90308F2, 0xF5F71006, 0xFCF4F2E9);
	r5 = D(r5, s[1][0][2], 0x0501FAFE, 0xF7FDFF12, 0x02F40103, 0xEF0CF7F3);
	r6 = D(r6, s[1][0][2], 0xEE0DF717, 0xFAF0FEF3, 0xFDEC02FF, 0x01E4030B);
	r7 = D(r7, s[1][0][2], 0xF922EC06, 0x03FD13F8, 0x11F2FFE8, 0x0304F804);
	r0 = D(r0, s[1][1][0], 0xF7080104, 0xEBF5FEF8, 0x03E0F80B, 0xFCFD20EA);
	r1 = D(r1, s[1][1][0], 0xF0FCFDFA, 0xF8FE19FB, 0xFDEF0915, 0x03EF08FD);
	r2 = D(r2, s[1][1][0], 0x06FC040E, 0xFFF4FCFC, 0x0500EA06, 0x16050905);
	r3 = D(r3, s[1][1][0], 0x0EFFF600, 0x060F23FD, 0xFCFC06FD, 0x19EA11FA);
	r4 = D(r4, s[1][1][0], 0xFCF4110C, 0xF805020A, 0xF9EC0701, 0xF3FEEF05);
	r5 = D(r5, s[1][1][0], 0xFE0BF0FD, 0x2009FC17, 0xFBFFEAF4, 0xEC00FF0D);
	r6 = D(r6, s[1][1][0], 0xE724F0FB, 0x0E00E211, 0xF702FDF3, 0x0500F3F2);
	r7 = D(r7, s[1][1][0], 0xF2ECFC05, 0xFF03FF06, 0x0EE60CFF, 0x00FEF7FF);
	r0 = D(r0, s[1][1][1], 0x0701FAFB, 0xEC0B0F0E, 0x06BD27FC, 0xEC09EC13);
	r1 = D(r1, s[1][1][1], 0xFF090B0A, 0xFAF9E304, 0xF7F902F1, 0xD8DDFE08);
	r2 = D(r2, s[1][1][1], 0x02160CF8, 0xCDBF03FC, 0x17F6E4FF, 0x010905FC);
	r3 = D(r3, s[1][1][1], 0xF102FEF4, 0xDD12FB02, 0x10F501F6, 0x0F0FF4F9);
	r4 = D(r4, s[1][1][1], 0x0A0F040A, 0x06060D16, 0xFCFCF70A, 0x130CDDFE);
	r5 = D(r5, s[1][1][1], 0xE00AEF00, 0xFAE002FB, 0xFDDEEB00, 0xEBF9EF03);
	r6 = D(r6, s[1][1][1], 0x0809FEF4, 0x2AF4F400, 0x12F2FD02, 0xFBD7FA0B);
	r7 = D(r7, s[1][1][1], 0xFB07FAF4, 0x0B0203F9, 0x06FBFAE1, 0x0A06040D);
	r0 = D(r0, s[1][1][2], 0xED050C1A, 0xEAE8FE10, 0x17EAF7DF, 0xED1BEC0D);
	r1 = D(r1, s[1][1][2], 0xF00902F5, 0x16E5F3ED, 0xD6CC0202, 0xDDE3FB08);
	r2 = D(r2, s[1][1][2], 0xF6EF0D07, 0xFA1A0804, 0xFAEA09F0, 0x28E9FEFE);
	r3 = D(r3, s[1][1][2], 0xF4FCFCE7, 0xF905F3EA, 0xFD05FC05, 0xFF070006);
	r4 = D(r4, s[1][1][2], 0xC6F700E1, 0xEFF5F80D, 0x08041301, 0xED03DCF6);
	r5 = D(r5, s[1][1][2], 0x05FC21F3, 0x180D0CFE, 0xDB04E30F, 0xEA1AFBFF);
	r6 = D(r6, s[1][1][2], 0x02F606D6, 0xF30B1B1C, 0xE50F080A, 0xFFC7F10A);
	r7 = D(r7, s[1][1][2], 0xF7F4F100, 0x040B03FC, 0xE60CFEEC, 0xF8EFFB09);
	r0 = D(r0, s[1][2][0], 0x1F0B06E0, 0xFF0B02FB, 0xF9041703, 0x10F401F3);
	r1 = D(r1, s[1][2][0], 0xF80406F2, 0x03FA1301, 0x04F7E118, 0xFBFE0DFD);
	r2 = D(r2, s[1][2][0], 0xF2F8FA05, 0x0C00F6F4, 0x09060905, 0x00F90F04);
	r3 = D(r3, s[1][2][0], 0xF205F3FA, 0x04F1FAFE, 0xFD060D04, 0xF102FA00);
	r4 = D(r4, s[1][2][0], 0x0106F510, 0x1C02F912, 0x000411FD, 0x0905DF10);
	r5 = D(r5, s[1][2][0], 0x04F204FA, 0x03EFF803, 0x07FAFDF9, 0xF4FA0BFB);
	r6 = D(r6, s[1][2][0], 0xF3FEF809, 0xF6E72701, 0xFCE704F9, 0x1007F5FA);
	r7 = D(r7, s[1][2][0], 0xF8FCFBFD, 0x02F70603, 0xF0F70EEF, 0x050A0704);
	r0 = D(r0, s[1][2][1], 0xF6170907, 0xEE061FEE, 0x16F3F1F9, 0xF7FE02FD);
	r1 = D(r1, s[1][2][1], 0x030707F9, 0xFC07E6FE, 0x13D9BA03, 0x05010FFE);
	r2 = D(r2, s[1][2][1], 0x00FDFA00, 0xFBE7FEFC, 0x11161A0A, 0xEC0101F8);
	r3 = D(r3, s[1][2][1], 0x00FD01F9, 0x06FA1418, 0x081404F3, 0xFEEF0FFF);
	r4 = D(r4, s[1][2][1], 0x07FD09FB, 0xE6080019, 0xFDFD0C0C, 0xED0CE513);
	r5 = D(r5, s[1][2][1], 0x061704FC, 0x120D0F0E, 0xFDF4FF07, 0xEB04E1F1);
	r6 = D(r6, s[1][2][1], 0xF5FE03FB, 0xE6FAFEEE, 0xC50C02EF, 0xF2ED02EF);
	r7 = D(r7, s[1][2][1], 0x0D17FDF6, 0xEB1212FE, 0xFBFDFDE5, 0xF3030BF8);
	r0 = D(r0, s[1][2][2], 0x0D04F7EF, 0xF4E4F50C, 0x210FACFF, 0x04041305);
	r1 = D(r1, s[1][2][2], 0xF0FB07F8, 0xF1FBF6F5, 0xE5DEC119, 0xE5000902);
	r2 = D(r2, s[1][2][2], 0xFBF60A05, 0x06F80A00, 0x1CE9F4EB, 0xEE0204EA);
	r3 = D(r3, s[1][2][2], 0x0C01FBEF, 0x19051D0A, 0x05FE02F8, 0x01080DFB);
	r4 = D(r4, s[1][2][2], 0x0606C9FD, 0xF70C04FF, 0xF012E8F9, 0x0313E0E4);
	r5 = D(r5, s[1][2][2], 0xFB0B0EF8, 0x1400030D, 0xF70B02F9, 0xF8F7F3F8);
	r6 = D(r6, s[1][2][2], 0xD8F600F3, 0xF00814FD, 0x07090DF5, 0x1615EFF4);
	r7 = D(r7, s[1][2][2], 0xEAFFFCF2, 0xF9010D02, 0x260A04FD, 0xFDF90008);
	s[0][0][0] = G[8][xy.y+0][xy.x+0]; s[0][0][1] = G[8][xy.y+0][xy.x+1];
	s[0][0][2] = G[8][xy.y+0][xy.x+2]; s[0][1][0] = G[8][xy.y+1][xy.x+0];
	s[0][1][1] = G[8][xy.y+1][xy.x+1]; s[0][1][2] = G[8][xy.y+1][xy.x+2];
	s[0][2][0] = G[8][xy.y+2][xy.x+0]; s[0][2][1] = G[8][xy.y+2][xy.x+1];
	s[0][2][2] = G[8][xy.y+2][xy.x+2]; s[1][0][0] = G[9][xy.y+0][xy.x+0];
	s[1][0][1] = G[9][xy.y+0][xy.x+1]; s[1][0][2] = G[9][xy.y+0][xy.x+2];
	s[1][1][0] = G[9][xy.y+1][xy.x+0]; s[1][1][1] = G[9][xy.y+1][xy.x+1];
	s[1][1][2] = G[9][xy.y+1][xy.x+2]; s[1][2][0] = G[9][xy.y+2][xy.x+0];
	s[1][2][1] = G[9][xy.y+2][xy.x+1]; s[1][2][2] = G[9][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x0B13ECFA, 0xF30D0520, 0x0B07F109, 0xE60B010A);
	r1 = D(r1, s[0][0][0], 0x070202FC, 0x12FDF001, 0x0905F21B, 0xEEF6FC25);
	r2 = D(r2, s[0][0][0], 0xFB0A080A, 0x020B050B, 0x04FA0810, 0x02FAFF01);
	r3 = D(r3, s[0][0][0], 0x0103EC07, 0x0B04E4FF, 0x0F080200, 0x1511FEFB);
	r4 = D(r4, s[0][0][0], 0x05F70D08, 0x1CEBF604, 0x0303F60B, 0xEB14EC04);
	r5 = D(r5, s[0][0][0], 0x0FF805F2, 0xF200FE11, 0x01F9FF05, 0xFC060202);
	r6 = D(r6, s[0][0][0], 0xF4F0F2FE, 0xFCFAEE0A, 0xF80FE50B, 0xFC02F9FC);
	r7 = D(r7, s[0][0][0], 0xFB08FE05, 0xF3100AFC, 0x0202F50D, 0x0AFE0B03);
	r0 = D(r0, s[0][0][1], 0xFC070601, 0x17ECE6FD, 0xFDF0F8FF, 0x0AF3F4FC);
	r1 = D(r1, s[0][0][1], 0x13EEF800, 0x0AF4F505, 0xF2041819, 0xD410EDFA);
	r2 = D(r2, s[0][0][1], 0x09070709, 0xF4070EFE, 0x04F715FB, 0x08FFFEF2);
	r3 = D(r3, s[0][0][1], 0x0BEC0300, 0x0DEA0FEE, 0xF717FF00, 0x0406FE04);
	r4 = D(r4, s[0][0][1], 0x120B1414, 0x13F4F9F3, 0x1B0AFAFA, 0x0005020F);
	r5 = D(r5, s[0][0][1], 0x0A0B0012, 0x1815F7F6, 0x0CF212F5, 0xF818FE05);
	r6 = D(r6, s[0][0][1], 0xF7F1F303, 0x17F6F1E6, 0xF0FB09F9, 0x19E8F000);
	r7 = D(r7, s[0][0][1], 0xE70A010A, 0xFB0FF7FA, 0x11F9ECFF, 0xF1FB0510);
	r0 = D(r0, s[0][0][2], 0xF80CEF05, 0x19F2E3E0, 0xECFD0CF6, 0xE1F6FBE4);
	r1 = D(r1, s[0][0][2], 0x0D0F030E, 0x101AE9F8, 0xF00E100A, 0xF6F309F8);
	r2 = D(r2, s[0][0][2], 0x0406FB04, 0x06F40702, 0x12F40BE9, 0x18F7FDF0);
	r3 = D(r3, s[0][0][2], 0x03F30D11, 0x19FE09F3, 0x0600F108, 0xF9FE15F7);
	r4 = D(r4, s[0][0][2], 0xF2FFF50B, 0x050E1412, 0xFEF80AFB, 0x0E14F802);
	r5 = D(r5, s[0][0][2], 0xFD01F40B, 0x0AF70301, 0xF80604E9, 0xF609EF0E);
	r6 = D(r6, s[0][0][2], 0x0A040702, 0xF902F2ED, 0xFF010918, 0xE80F02FC);
	r7 = D(r7, s[0][0][2], 0xF4FD0B01, 0x0DF9FAF7, 0x05EEF3F8, 0xFDF008F2);
	r0 = D(r0, s[0][1][0], 0xFBF4B8E4, 0xFFEBD2F6, 0xFE010906, 0xFFF3D1EA);
	r1 = D(r1, s[0][1][0], 0xF2FE04FD, 0xF716FDFA, 0x040DDA01, 0x050311FF);
	r2 = D(r2, s[0][1][0], 0x000CFFFA, 0x10F5D907, 0xFCE80CFC, 0xF6F50612);
	r3 = D(r3, s[0][1][0], 0xFEFF16FF, 0xF4EB0203, 0xF1E601FE, 0x05020E0F);
	r4 = D(r4, s[0][1][0], 0x02F9FF16, 0xF80716FB, 0xFA05F6F9, 0xF401F4E8);
	r5 = D(r5, s[0][1][0], 0x0618EBF2, 0xFC07FA0C, 0x0905FA06, 0x160C0FF2);
	r6 = D(r6, s[0][1][0], 0x0208D4E0, 0xF80C06EC, 0x04FBEB02, 0xF8F9E811);
	r7 = D(r7, s[0][1][0], 0x05F90B07, 0xFE0402F8, 0xD2030703, 0x04F812FE);
	r0 = D(r0, s[0][1][1], 0x1FFE12D5, 0xF2FCCFF7, 0x02F7EB22, 0xE00A0DCB);
	r1 = D(r1, s[0][1][1], 0x0718FEFD, 0x0CFD0523, 0xFFF70417, 0x06F000FE);
	r2 = D(r2, s[0][1][1], 0x05C9F915, 0x09ABFAFE, 0xF20B0AFE, 0x0C22FEF9);
	r3 = D(r3, s[0][1][1], 0xFCE11200, 0xF9F200DD, 0xEF08F303, 0x0D100114);
	r4 = D(r4, s[0][1][1], 0xEB17EAF1, 0xE4F40B00, 0x081F1206, 0xF40E0127);
	r5 = D(r5, s[0][1][1], 0xFDD5FB0C, 0xF9F8FAFF, 0x02F20F05, 0x01E90005);
	r6 = D(r6, s[0][1][1], 0x0DE2FDEB, 0xFFECEFE5, 0x0CE51EF4, 0x0221FD00);
	r7 = D(r7, s[0][1][1], 0xF0DB0B01, 0xFC10E508, 0xDA1BDCE0, 0x0239FFF4);
	r0 = D(r0, s[0][1][2], 0xEFF3D503, 0xFC08EAF3, 0xE3F2F8D1, 0x02060000);
	r1 = D(r1, s[0][1][2], 0xFC100205, 0xF107F5E5, 0x04F8FBF2, 0xFFFF0002);
	r2 = D(r2, s[0][1][2], 0x0901FEFC, 0x04F8FB12, 0x08120013, 0x00E90415);
	r3 = D(r3, s[0][1][2], 0x04EBFEF1, 0x0900D806, 0x0008F2FD, 0x0EE20E08);
	r4 = D(r4, s[0][1][2], 0xE9F8F8FF, 0xEF0B0805, 0xFCE307F0, 0xE4E5FCEC);
	r5 = D(r5, s[0][1][2], 0x07110F0F, 0x0913FF00, 0x020608FF, 0x0BF6FBF6);
	r6 = D(r6, s[0][1][2], 0xFA071A10, 0xFEF811FF, 0x0B00FB19, 0xFEFB13ED);
	r7 = D(r7, s[0][1][2], 0xF8FF01F9, 0xF7020104, 0x1612FFD5, 0xFCF401F2);
	r0 = D(r0, s[0][2][0], 0x15FCD608, 0x2007B616, 0x06FED6F2, 0xFAFAEAD4);
	r1 = D(r1, s[0][2][0], 0x070BF6F7, 0xF90015FD, 0x010CF9FD, 0x0004FEFC);
	r2 = D(r2, s[0][2][0], 0x09FFF1F5, 0xF2F90D01, 0xF4F9F1ED, 0xFBF324FB);
	r3 = D(r3, s[0][2][0], 0x05000AFD, 0xF7040B01, 0x00030003, 0xF809E2EF);
	r4 = D(r4, s[0][2][0], 0xF7FBF417, 0x08F31400, 0x0CF7FE0A, 0x06FC06FD);
	r5 = D(r5, s[0][2][0], 0xF902E60D, 0x1510E106, 0x08F60A0F, 0x0106F3F9);
	r6 = D(r6, s[0][2][0], 0x150C06FE, 0x02FBE63E, 0xFAFDFFFE, 0xF1FC01FE);
	r7 = D(r7, s[0][2][0], 0x1403F4FB, 0xFE0006FC, 0x08FBE1FA, 0x06F80304);
	r0 = D(r0, s[0][2][1], 0x06F804E3, 0xFA0201E8, 0x0A05D8DE, 0x17F700FB);
	r1 = D(r1, s[0][2][1], 0xFA0FF2F5, 0x0A0AFB18, 0xFB0BFF0C, 0x0105F714);
	r2 = D(r2, s[0][2][1], 0x02010A07, 0xEFE20AFC, 0xFF08D20B, 0xFC0DF902);
	r3 = D(r3, s[0][2][1], 0xF7F9FEE5, 0x00120C0D, 0x021002FF, 0x00FCEE08);
	r4 = D(r4, s[0][2][1], 0x1108FB0C, 0xFADCEBE0, 0x04120F09, 0xFEEC08E5);
	r5 = D(r5, s[0][2][1], 0x0A0CFBF6, 0xFE05F6ED, 0x0A10011E, 0x0CFF0BFA);
	r6 = D(r6, s[0][2][1], 0x0B13FF0E, 0x01FB8604, 0x050E090D, 0x0510050D);
	r7 = D(r7, s[0][2][1], 0x05FE11F8, 0xFDF206F6, 0xFCEE1613, 0x07F9F0F7);
	r0 = D(r0, s[0][2][2], 0x0A05FD0C, 0xEBFAED15, 0x05FE02EC, 0xF9F90CF7);
	r1 = D(r1, s[0][2][2], 0xFF0201F3, 0x010904EB, 0x040FF511, 0x050D2611);
	r2 = D(r2, s[0][2][2], 0x0604FD07, 0x06050214, 0xFDF6FDDE, 0xF3F003F8);
	r3 = D(r3, s[0][2][2], 0x03FE01FD, 0x070510F5, 0xFE0B10FE, 0x07F9FBF0);
	r4 = D(r4, s[0][2][2], 0xF5EE01F7, 0xF9F00A0A, 0xFFEEEDE2, 0xF800E50C);
	r5 = D(r5, s[0][2][2], 0x0000F9F7, 0xF8FBFE03, 0x030BFFEC, 0x00090102);
	r6 = D(r6, s[0][2][2], 0xF90EFE15, 0x1C0BE71A, 0xFEE209F1, 0x000AEDFA);
	r7 = D(r7, s[0][2][2], 0x0608F601, 0xF9070A0A, 0xF203130E, 0xF7EF0604);
	r0 = D(r0, s[1][0][0], 0xF7F4F40A, 0x0300EBF2, 0x0CE4FAF0, 0xFF1BF107);
	r1 = D(r1, s[1][0][0], 0x0505FBFE, 0xF3FFEEF4, 0x03E7FCF6, 0x06E7140E);
	r2 = D(r2, s[1][0][0], 0xF2FFFE03, 0xFBFAF1FE, 0x02FBF302, 0x03FE0206);
	r3 = D(r3, s[1][0][0], 0x0B17FDF7, 0xE3031F08, 0xFC040208, 0x01E600ED);
	r4 = D(r4, s[1][0][0], 0xE4F50AE5, 0xEBFFEFFA, 0x0008F503, 0xF9FC0906);
	r5 = D(r5, s[1][0][0], 0xFF0400E6, 0x01F905E8, 0x00030607, 0x0AFD0AF0);
	r6 = D(r6, s[1][0][0], 0x16F7FDFF, 0x1C2306FB, 0x0AF30AFF, 0xFB16FEF0);
	r7 = D(r7, s[1][0][0], 0x0102FBFB, 0x01010BFE, 0xF601F1FF, 0x05060300);
	r0 = D(r0, s[1][0][1], 0xECF1F206, 0xFB080203, 0xF508E8FD, 0x05EE10F5);
	r1 = D(r1, s[1][0][1], 0x0EF7FCF9, 0x00F3F3FA, 0x09F1FD06, 0x19120012);
	r2 = D(r2, s[1][0][1], 0xFBFCFAFB, 0xFFEFE702, 0xD52014EC, 0xF607FD03);
	r3 = D(r3, s[1][0][1], 0x031EF313, 0x0409F406, 0x03FEFDF5, 0x0AF7F9E6);
	r4 = D(r4, s[1][0][1], 0xFEE710E8, 0xEE260409, 0x0514FAFB, 0xFC09F809);
	r5 = D(r5, s[1][0][1], 0x0DFC16F7, 0x1202F6F1, 0x03EEF2EC, 0xF90E11F1);
	r6 = D(r6, s[1][0][1], 0x0802DC01, 0x1DFAFEFC, 0x0EE1030A, 0xE5F91409);
	r7 = D(r7, s[1][0][1], 0x091500F5, 0xF212FCFD, 0xF6F50400, 0x030803EE);
	r0 = D(r0, s[1][0][2], 0x04FDEB15, 0x23012806, 0x06D1FF1E, 0xF1FB16EA);
	r1 = D(r1, s[1][0][2], 0x08F812FB, 0x08F90DF2, 0xF7FB0513, 0xF610DD0A);
	r2 = D(r2, s[1][0][2], 0x02FEFF08, 0x02F7EAFA, 0x0FFE15F8, 0x09F0F7FB);
	r3 = D(r3, s[1][0][2], 0x1AF10800, 0xED0B12EE, 0xFE02F908, 0x14D70D0D);
	r4 = D(r4, s[1][0][2], 0xF5E3F407, 0xE6FF0C0D, 0x05EE11F9, 0xFCE705F7);
	r5 = D(r5, s[1][0][2], 0xF6FF09EA, 0x081002FD, 0xF508F400, 0x11FA01FF);
	r6 = D(r6, s[1][0][2], 0xFDF701EF, 0x1E1614F0, 0x04F1FCFB, 0xF0ECECEB);
	r7 = D(r7, s[1][0][2], 0xDE06DA0D, 0x08FC07F7, 0x05E61010, 0x01060507);
	r0 = D(r0, s[1][1][0], 0xE1FB03FD, 0xF3FF130E, 0x17EEF800, 0x03F8F90C);
	r1 = D(r1, s[1][1][0], 0x09EEFCFE, 0x06F3F7F8, 0xF60B05EB, 0xFBF0FF01);
	r2 = D(r2, s[1][1][0], 0x06FCF7F9, 0x0AF9F602, 0xEDF5FBEE, 0x0BFB03F5);
	r3 = D(r3, s[1][1][0], 0xFF06050B, 0xF1FEED23, 0x0707F5FC, 0x04FFF80B);
	r4 = D(r4, s[1][1][0], 0xEBD0E003, 0x1D1709FE, 0xFDFCF203, 0xFAF70DFA);
	r5 = D(r5, s[1][1][0], 0xFF0515F8, 0x00050604, 0x02F90009, 0x0BF806FE);
	r6 = D(r6, s[1][1][0], 0xFC0200EF, 0xF6F602F5, 0xDAF6160E, 0xFFF9E811);
	r7 = D(r7, s[1][1][0], 0x01F708F9, 0xF8040BF3, 0xF9F6041A, 0x000D0200);
	r0 = D(r0, s[1][1][1], 0xDF07F507, 0xE9E814E9, 0xFBFADBF2, 0x0507D4FF);
	r1 = D(r1, s[1][1][1], 0xFCF70905, 0x10090BEF, 0xEFFCF416, 0xF90F15F8);
	r2 = D(r2, s[1][1][1], 0xF3110C01, 0x17031401, 0x010EFA0D, 0xEE0AFA06);
	r3 = D(r3, s[1][1][1], 0xFFF7ED06, 0xF3EB000A, 0x08F1F3F1, 0xFEE10FE9);
	r4 = D(r4, s[1][1][1], 0xF103E00A, 0x0F0312F2, 0xE30801F9, 0x04FEEDE0);
	r5 = D(r5, s[1][1][1], 0x12FB19F3, 0x0CE10AFF, 0xF00BF4F4, 0x02EBFEFE);
	r6 = D(r6, s[1][1][1], 0x04D90508, 0x0809FB09, 0xF3F9DDF6, 0xFEFA0500);
	r7 = D(r7, s[1][1][1], 0xFA0115F8, 0xF9F8E9F2, 0xF80DFFE5, 0xFA0000EF);
	r0 = D(r0, s[1][1][2], 0x0AFA24EC, 0x060BF6DF, 0x04F1F30A, 0xE9EFE510);
	r1 = D(r1, s[1][1][2], 0xFBFCFA0F, 0x09E812EE, 0xF017EBF7, 0x11F6DFFC);
	r2 = D(r2, s[1][1][2], 0x0F07FFF7, 0xFA0C070D, 0x12FA14FF, 0x0A01030B);
	r3 = D(r3, s[1][1][2], 0xFC010FFC, 0x04FDFE05, 0xFBF7ECFA, 0x02BD2117);
	r4 = D(r4, s[1][1][2], 0x16E0F70E, 0xFA2A0FF9, 0x00FB0403, 0xF7EF0F03);
	r5 = D(r5, s[1][1][2], 0xFEE80909, 0xE40CF714, 0x0F0308E4, 0x060E0506);
	r6 = D(r6, s[1][1][2], 0x021502F9, 0xFAF11805, 0xF2FDFA24, 0x030D1EF8);
	r7 = D(r7, s[1][1][2], 0x010A0407, 0xEEF907FD, 0xF817D8FC, 0xF205FFFF);
	r0 = D(r0, s[1][2][0], 0x3B0DE3E2, 0x19070BEB, 0x2EF605F2, 0x14030116);
	r1 = D(r1, s[1][2][0], 0x06F8F90B, 0x0300E60E, 0xF9F1FCFE, 0xF807F8FB);
	r2 = D(r2, s[1][2][0], 0x0E0802F6, 0xF3EC02FB, 0x0401E2D3, 0xF1050FFE);
	r3 = D(r3, s[1][2][0], 0xF00B0605, 0xEDFEF802, 0xFB0306FB, 0xFA09050C);
	r4 = D(r4, s[1][2][0], 0x080800F5, 0xD3FDDB12, 0xFFF7F103, 0xFCF4FB07);
	r5 = D(r5, s[1][2][0], 0xE8040209, 0x05051B07, 0x0E0AFFFA, 0xFAFEF8F6);
	r6 = D(r6, s[1][2][0], 0x11EAF5E6, 0xF61EEEFF, 0xF3E5F0F3, 0xF2F71005);
	r7 = D(r7, s[1][2][0], 0x0A0601FC, 0xF70B1004, 0x03FCF4E5, 0xFD08FAFF);
	r0 = D(r0, s[1][2][1], 0xEA06E802, 0xF109F502, 0xDF1B06FA, 0x021302F3);
	r1 = D(r1, s[1][2][1], 0xF0FF13F9, 0xE41A0722, 0xFADF12FA, 0x08FD02FE);
	r2 = D(r2, s[1][2][1], 0x0F0C08F4, 0x14DBF108, 0x01FF03C6, 0xEB05ED20);
	r3 = D(r3, s[1][2][1], 0xF9F800F6, 0xFF030E0D, 0x09F9F508, 0xEFF208FB);
	r4 = D(r4, s[1][2][1], 0x020412FA, 0xF2D40301, 0xF70EFF04, 0xF407F806);
	r5 = D(r5, s[1][2][1], 0x10F2FF08, 0x010A05FB, 0x070B1F03, 0x0DFFF4F9);
	r6 = D(r6, s[1][2][1], 0xFE200C0E, 0xF00A0CFC, 0x10D5F1E6, 0xF6FFEF1B);
	r7 = D(r7, s[1][2][1], 0xFDFBFDF8, 0x05FEEBFD, 0xF4ECE302, 0xFB04FBF9);
	r0 = D(r0, s[1][2][2], 0x0FFC09D7, 0xF021F2F6, 0x01EC12E8, 0xEEE5F802);
	r1 = D(r1, s[1][2][2], 0x19FEFD05, 0x0BF41310, 0x06230F0E, 0xE5FA0010);
	r2 = D(r2, s[1][2][2], 0x0DFFF707, 0xE3ECF404, 0xFE2411E7, 0x1105FD08);
	r3 = D(r3, s[1][2][2], 0x04FB0200, 0x08F5FD05, 0xFD06FE04, 0xF5EC03F6);
	r4 = D(r4, s[1][2][2], 0xFC12FEF5, 0xD60FF3E8, 0x0AEF0108, 0x04F6FDF7);
	r5 = D(r5, s[1][2][2], 0xE9FC0B01, 0xFDF8F8F8, 0x24F70F09, 0x0F09FEF7);
	r6 = D(r6, s[1][2][2], 0x04030616, 0x07EDF01C, 0x06010BF7, 0x0803F8FC);
	r7 = D(r7, s[1][2][2], 0x0F05FFFB, 0x06FEF9FD, 0xF3FFF5EE, 0xF7FE03FD);
	s[0][0][0] = G[10][xy.y+0][xy.x+0]; s[0][0][1] = G[10][xy.y+0][xy.x+1];
	s[0][0][2] = G[10][xy.y+0][xy.x+2]; s[0][1][0] = G[10][xy.y+1][xy.x+0];
	s[0][1][1] = G[10][xy.y+1][xy.x+1]; s[0][1][2] = G[10][xy.y+1][xy.x+2];
	s[0][2][0] = G[10][xy.y+2][xy.x+0]; s[0][2][1] = G[10][xy.y+2][xy.x+1];
	s[0][2][2] = G[10][xy.y+2][xy.x+2]; s[1][0][0] = G[11][xy.y+0][xy.x+0];
	s[1][0][1] = G[11][xy.y+0][xy.x+1]; s[1][0][2] = G[11][xy.y+0][xy.x+2];
	s[1][1][0] = G[11][xy.y+1][xy.x+0]; s[1][1][1] = G[11][xy.y+1][xy.x+1];
	s[1][1][2] = G[11][xy.y+1][xy.x+2]; s[1][2][0] = G[11][xy.y+2][xy.x+0];
	s[1][2][1] = G[11][xy.y+2][xy.x+1]; s[1][2][2] = G[11][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x1DE8E4E6, 0xA01EE409, 0xE603EF08, 0xF5F9FDE7);
	r1 = D(r1, s[0][0][0], 0xF1100600, 0xD311F801, 0xFBFC06F8, 0xFDF1FE18);
	r2 = D(r2, s[0][0][0], 0xFE0307FE, 0x0BF40611, 0x11191909, 0xF700FBF0);
	r3 = D(r3, s[0][0][0], 0x0322F9EC, 0xE7FAFE0E, 0xFB03FC0C, 0xF4F615E5);
	r4 = D(r4, s[0][0][0], 0x100116D4, 0xFB08F4F6, 0x04120800, 0x20010B03);
	r5 = D(r5, s[0][0][0], 0xF9FF080B, 0xF50AE5F2, 0xEDFA06FA, 0x090C04FE);
	r6 = D(r6, s[0][0][0], 0xDBFAFA08, 0xEE0C10EF, 0x152025E2, 0xDB061BF9);
	r7 = D(r7, s[0][0][0], 0xF2E009F4, 0xF605F604, 0xE40D0701, 0xFBF80305);
	r0 = D(r0, s[0][0][1], 0x0412A3E4, 0x4D128114, 0xE0FAD6DF, 0xD718F6F7);
	r1 = D(r1, s[0][0][1], 0xFE11F0F8, 0xFA08D0DC, 0xF3F305EF, 0x11E2F516);
	r2 = D(r2, s[0][0][1], 0xF7F30200, 0x02FAE902, 0xEF0613EE, 0xFC110005);
	r3 = D(r3, s[0][0][1], 0xE802FFFA, 0x010E0208, 0xFA03010A, 0xECF5F4E9);
	r4 = D(r4, s[0][0][1], 0x0131010A, 0x140611EA, 0xF809F60B, 0xDD0E07FD);
	r5 = D(r5, s[0][0][1], 0xFF081CE6, 0x09F8DDF0, 0x13F211FD, 0x04F113F7);
	r6 = D(r6, s[0][0][1], 0xEC110607, 0x0706FBF6, 0x0D049D01, 0x0BEA05FB);
	r7 = D(r7, s[0][0][1], 0x27DC1202, 0xFC06E808, 0x0608090D, 0xFEFDFAFB);
	r0 = D(r0, s[0][0][2], 0xECCD9116, 0x8121810A, 0x05031DFD, 0x05ED11FE);
	r1 = D(r1, s[0][0][2], 0x0006F4FE, 0x14EE00FB, 0xFC190B11, 0xFAE804D6);
	r2 = D(r2, s[0][0][2], 0xF8FEE20B, 0xF7FEFD07, 0x07050009, 0x080BD1EF);
	r3 = D(r3, s[0][0][2], 0x09E9FCF2, 0x130FE4F3, 0x09FE0208, 0x100ACD05);
	r4 = D(r4, s[0][0][2], 0x0AF70FF2, 0xF703EEFD, 0x0C06F2D4, 0x1AF903E7);
	r5 = D(r5, s[0][0][2], 0xFDFD15E7, 0xEC0CF00E, 0x06E005CB, 0x0B0C0CFF);
	r6 = D(r6, s[0][0][2], 0x02FFF703, 0xBCFF0001, 0xE009EC13, 0x06E401E1);
	r7 = D(r7, s[0][0][2], 0x05C0FB07, 0xF207D804, 0xFCFA01F8, 0xF9070F00);
	r0 = D(r0, s[0][1][0], 0xD80181DD, 0xEB100201, 0x0B1F10F0, 0xFF08F4EE);
	r1 = D(r1, s[0][1][0], 0x01FAFD06, 0xE7F7E7FA, 0xF2FE18F5, 0xFC0BDDF9);
	r2 = D(r2, s[0][1][0], 0x04FC0105, 0x0AF2160E, 0xE31D0306, 0xF0F30B08);
	r3 = D(r3, s[0][1][0], 0x031BEEF5, 0xFBD6EE0D, 0xF902F1FF, 0xF6D9FFF5);
	r4 = D(r4, s[0][1][0], 0x00E9ED12, 0xCEFA0E0F, 0x06000304, 0x09F715FF);
	r5 = D(r5, s[0][1][0], 0x1AF916FD, 0xF9FD0105, 0xFD09FDFF, 0x01130CFC);
	r6 = D(r6, s[0][1][0], 0xF71211E4, 0x1305F70E, 0xEC2DE20E, 0x1AFC0BF4);
	r7 = D(r7, s[0][1][0], 0xFDE6F302, 0x0002FC07, 0xF511E509, 0xF601F1FC);
	r0 = D(r0, s[0][1][1], 0x0E0EA605, 0x8121CE05, 0xC7E3BADF, 0xFDFE04F1);
	r1 = D(r1, s[0][1][1], 0xE91503FD, 0xF80D1FEC, 0xFDF6EDF4, 0x0C08F7F7);
	r2 = D(r2, s[0][1][1], 0x0501050B, 0xEF0FEB0F, 0xECD8F7EF, 0x18F40B04);
	r3 = D(r3, s[0][1][1], 0x03F102FF, 0x04FE03FA, 0xFCFD040F, 0xE1EF8B10);
	r4 = D(r4, s[0][1][1], 0xDBF02714, 0xFCF8E2F3, 0x0EFBF505, 0xD203101C);
	r5 = D(r5, s[0][1][1], 0xEC13FFDC, 0x0301EAD1, 0xFEDEFC1C, 0xF7FE000B);
	r6 = D(r6, s[0][1][1], 0xF207DCEE, 0xD5038BF8, 0x0DC509EC, 0xE809FD11);
	r7 = D(r7, s[0][1][1], 0xEDFB0301, 0xFC0F04EC, 0xC60CFDF9, 0x03F3FEF7);
	r0 = D(r0, s[0][1][2], 0x9A16A20C, 0xCFFFE9F2, 0xF4EC2604, 0xEB0DFB0A);
	r1 = D(r1, s[0][1][2], 0x01FCFFF8, 0xFF030800, 0xFDF9EFF6, 0xFDF5FD01);
	r2 = D(r2, s[0][1][2], 0x0308FAFB, 0x0408FF14, 0x0324F2C2, 0xF909F900);
	r3 = D(r3, s[0][1][2], 0x09F7F8F8, 0x000FE1EC, 0x03FD0AFE, 0x0A0F0AF2);
	r4 = D(r4, s[0][1][2], 0x09ED0CEB, 0x06FFF90E, 0xFA0BFCD3, 0xF30B08EC);
	r5 = D(r5, s[0][1][2], 0xFB05F210, 0xF7EDE8E8, 0x1BE50001, 0xFB1C03E9);
	r6 = D(r6, s[0][1][2], 0xBC20E011, 0xDC2B81FA, 0x03F805E7, 0x111D10EB);
	r7 = D(r7, s[0][1][2], 0x13E5F50D, 0xFDE9F803, 0xE42502ED, 0x01FA070B);
	r0 = D(r0, s[0][2][0], 0x15F1A727, 0x29119A26, 0xFC0701ED, 0xED24E505);
	r1 = D(r1, s[0][2][0], 0xF3FC0602, 0x07FA0904, 0xFEE60FF9, 0xFF03E800);
	r2 = D(r2, s[0][2][0], 0xFC050907, 0x1DFF0508, 0xF1F4F5F9, 0x0FF9F602);
	r3 = D(r3, s[0][2][0], 0x020DFCEB, 0x0116F40C, 0x0EFA0201, 0x1106ECF4);
	r4 = D(r4, s[0][2][0], 0xFEF002F0, 0xF1EF00EF, 0x00FD0208, 0x0A000D04);
	r5 = D(r5, s[0][2][0], 0xF8F9F9F7, 0x0D04FCF6, 0x0F1004FE, 0x08F91905);
	r6 = D(r6, s[0][2][0], 0xE3FEFFDC, 0xC119F0F4, 0x22FD0CF8, 0x1BEEE70F);
	r7 = D(r7, s[0][2][0], 0xE90E0BF1, 0x01FDE50D, 0x12F0FCFB, 0x040009F5);
	r0 = D(r0, s[0][2][1], 0x0715F7FC, 0x070BBAED, 0x25FBC404, 0x02082116);
	r1 = D(r1, s[0][2][1], 0xD608FA05, 0x0DF4D909, 0x12E8D804, 0xF815F4F4);
	r2 = D(r2, s[0][2][1], 0xF9FD0211, 0x04CC16F1, 0x2114EEF9, 0xEAF40606);
	r3 = D(r3, s[0][2][1], 0xED030410, 0xF9FBFDF4, 0xFB090FFD, 0x23071BF9);
	r4 = D(r4, s[0][2][1], 0xF1D71125, 0xEA0CFEF4, 0xFE05FD05, 0x11F3EBEA);
	r5 = D(r5, s[0][2][1], 0xFB02F5F6, 0xEE0CE71D, 0x0A16FD07, 0x0E0412FF);
	r6 = D(r6, s[0][2][1], 0x81E328FC, 0x81FABD16, 0xFF051AEE, 0xF9E41601);
	r7 = D(r7, s[0][2][1], 0x0A07E6F5, 0xEAF80700, 0x05051718, 0x04FBFCFC);
	r0 = D(r0, s[0][2][2], 0xE5F8B80D, 0xDC05D0F7, 0x073E1BE5, 0x0EF6F8E3);
	r1 = D(r1, s[0][2][2], 0x0504FC03, 0x0715ECFD, 0x0DE111E7, 0x0DFAFB04);
	r2 = D(r2, s[0][2][2], 0xF302FF05, 0x14E4F116, 0x091A1103, 0xFFE61DFE);
	r3 = D(r3, s[0][2][2], 0xF8F208C4, 0xF813F6F8, 0x0208FF04, 0x0A021818);
	r4 = D(r4, s[0][2][2], 0xFAF11FE1, 0x1EFFA901, 0xF405FDF5, 0x08E819F4);
	r5 = D(r5, s[0][2][2], 0x0803F302, 0xF90EE6F5, 0x05F70401, 0x01FC0809);
	r6 = D(r6, s[0][2][2], 0xD8EBE815, 0x811FE118, 0x0D0CF30D, 0x0E0AF6F4);
	r7 = D(r7, s[0][2][2], 0x09EEFCFF, 0xFDFA0BFF, 0x09F6FCFD, 0x09FBFF09);
	r0 = D(r0, s[1][0][0], 0xF61C04FB, 0x100008C0, 0xEEE70E28, 0x03FE0103);
	r1 = D(r1, s[1][0][0], 0xFF02FD01, 0xF1EEFDF3, 0xF50912E8, 0xFDF7FEFF);
	r2 = D(r2, s[1][0][0], 0x02000400, 0xF905FD01, 0xF60FFC0C, 0x13FE01F6);
	r3 = D(r3, s[1][0][0], 0xFE0903FC, 0x0E05FDF5, 0x0506FC09, 0xEBFF0708);
	r4 = D(r4, s[1][0][0], 0x161E11F5, 0xFE04EFF5, 0xFBFA1003, 0xF7E9FF03);
	r5 = D(r5, s[1][0][0], 0x110D00FF, 0xF50A06EE, 0xFFF4F401, 0x0E0504FA);
	r6 = D(r6, s[1][0][0], 0x240C1517, 0xD8111807, 0xFBFCF4FA, 0x00EBFB0C);
	r7 = D(r7, s[1][0][0], 0x0FF6FF12, 0x06020701, 0xFC05FCFE, 0x0507FDFE);
	r0 = D(r0, s[1][0][1], 0xFFF70416, 0xDBFCF406, 0x0503FFEF, 0xF7E9F304);
	r1 = D(r1, s[1][0][1], 0xDF09F90F, 0xDE0DFB10, 0xF90EFEF2, 0xF70AE7FF);
	r2 = D(r2, s[1][0][1], 0xF1FC18EC, 0xF200FE06, 0x0608F8EE, 0xF30BF304);
	r3 = D(r3, s[1][0][1], 0x0D04EEE3, 0x0600E9FE, 0x06F304F7, 0xEF01FCF3);
	r4 = D(r4, s[1][0][1], 0xF80C0AF2, 0x15E9E7EC, 0x0A0913FE, 0xF1F90607);
	r5 = D(r5, s[1][0][1], 0xF5FB05F4, 0xFFE8100D, 0x1B12F805, 0x0BE916F7);
	r6 = D(r6, s[1][0][1], 0x0601F0FF, 0xF90DF314, 0xEC13070E, 0xED1205FE);
	r7 = D(r7, s[1][0][1], 0x060010FA, 0xFC01FEFC, 0xEF01F6F2, 0xF8F6F501);
	r0 = D(r0, s[1][0][2], 0x10FA07EC, 0x0017180C, 0x10FB100D, 0xEC1006F9);
	r1 = D(r1, s[1][0][2], 0x0CF90AF4, 0x101005FD, 0xF5E8FB09, 0x0DF6FEF9);
	r2 = D(r2, s[1][0][2], 0xFAFDF7F8, 0xF2FDF308, 0x1C1514FD, 0xF705FE0A);
	r3 = D(r3, s[1][0][2], 0x07FDE3FA, 0x0A02FAF8, 0x0504F5FB, 0xEC050207);
	r4 = D(r4, s[1][0][2], 0x11FD05F4, 0x060DF3E1, 0xFC14FAFE, 0xF40D0BFA);
	r5 = D(r5, s[1][0][2], 0xFE0CF509, 0xFF10EBF1, 0x0AF407FC, 0x00EC0906);
	r6 = D(r6, s[1][0][2], 0xFFE4FAFC, 0x0B050407, 0xED09ED07, 0x0B18F411);
	r7 = D(r7, s[1][0][2], 0x0C000900, 0x0BFCF7FC, 0xDA1CFF1B, 0x0100FC04);
	r0 = D(r0, s[1][1][0], 0x08FBF1FC, 0xD2F201F7, 0x25FD0CF9, 0x011010FE);
	r1 = D(r1, s[1][1][0], 0xF9F00406, 0x0FFE10F2, 0x04F90907, 0x0109F5FF);
	r2 = D(r2, s[1][1][0], 0x080704F8, 0xFE12FCFF, 0xFEFD0E06, 0xFDF20C00);
	r3 = D(r3, s[1][1][0], 0x0402E2F8, 0x08F909F2, 0x130FFE01, 0x08080806);
	r4 = D(r4, s[1][1][0], 0x06F4FF09, 0x0004EC26, 0x04F90002, 0xF5E800FE);
	r5 = D(r5, s[1][1][0], 0xFDEA0DDC, 0xE3FDFCEA, 0x010407F9, 0x01F70FF9);
	r6 = D(r6, s[1][1][0], 0xFC0EF5E6, 0x10EBEDF1, 0xFD0A15FF, 0xEDEF0EF0);
	r7 = D(r7, s[1][1][0], 0xF908FA01, 0xFBFD11F0, 0xFF0907EF, 0x02FEFF00);
	r0 = D(r0, s[1][1][1], 0xEC0C03CF, 0x0A1DF70A, 0x1110FEF2, 0x2B15FF0A);
	r1 = D(r1, s[1][1][1], 0x01030C04, 0xF612FFE6, 0x00F0F61B, 0x0E09FCFD);
	r2 = D(r2, s[1][1][1], 0xF60808F9, 0xF40DF700, 0xFCFB0CF6, 0xF711F8F6);
	r3 = D(r3, s[1][1][1], 0xFBF1E7FA, 0xEE00E4F5, 0xF6050508, 0x04FF10FA);
	r4 = D(r4, s[1][1][1], 0xEC1616EF, 0x02F5F8F5, 0x0A0D1505, 0x120816F6);
	r5 = D(r5, s[1][1][1], 0xFF0BF10C, 0x10F404FA, 0x1227F402, 0x1518F907);
	r6 = D(r6, s[1][1][1], 0xD804F417, 0xFFF5FCFC, 0xF4F7FE02, 0x0AFA0B19);
	r7 = D(r7, s[1][1][1], 0x0A11F3F9, 0x01090D0E, 0x191314C6, 0xFD00FC06);
	r0 = D(r0, s[1][1][2], 0xFDF8FF0D, 0xFADE05EB, 0xF900E010, 0xFDFC0202);
	r1 = D(r1, s[1][1][2], 0x040301FF, 0x1300F6F2, 0xFBEA0901, 0x0612090E);
	r2 = D(r2, s[1][1][2], 0x08090AFC, 0x0007FD22, 0xFCD609ED, 0x0D04FDFB);
	r3 = D(r3, s[1][1][2], 0x020AE8EE, 0x040BF8F7, 0xFC070800, 0xF706EBFF);
	r4 = D(r4, s[1][1][2], 0xF3050400, 0x04FD080C, 0xFE01FEFF, 0xE70BFB08);
	r5 = D(r5, s[1][1][2], 0x06F40E08, 0xFCF3FB07, 0x05000AF0, 0xF8FE06E2);
	r6 = D(r6, s[1][1][2], 0x090C2010, 0xFEFC07F3, 0x0B01F9ED, 0xDF00F701);
	r7 = D(r7, s[1][1][2], 0x09180306, 0x03F1FEFE, 0x08F8F3FC, 0x0200F1FC);
	r0 = D(r0, s[1][2][0], 0xF00002F7, 0x05F2F80E, 0x04F9F8EA, 0x0E1A03F5);
	r1 = D(r1, s[1][2][0], 0x030004EF, 0xF5F11206, 0x0BFD0603, 0x1113FAF9);
	r2 = D(r2, s[1][2][0], 0x0D1009F3, 0x0DF1FCFC, 0xFBFB03FB, 0xFC0C05DC);
	r3 = D(r3, s[1][2][0], 0x0D21F40E, 0x0203FBFB, 0x08E3FF01, 0xF9FE02FB);
	r4 = D(r4, s[1][2][0], 0x010DFAFB, 0x130EF70A, 0x0604F9EF, 0x0AF50211);
	r5 = D(r5, s[1][2][0], 0x08E4F908, 0x000BF9F2, 0x100202E7, 0xF5000301);
	r6 = D(r6, s[1][2][0], 0xFCFD1403, 0x0D0C05D8, 0x2016E8E4, 0xF2FDFCF4);
	r7 = D(r7, s[1][2][0], 0x0B1303FB, 0xF80CFC02, 0xFFFB060B, 0x00FB0004);
	r0 = D(r0, s[1][2][1], 0xF0F7F805, 0xFDFAFD2B, 0xEEFE0BE1, 0x021015FC);
	r1 = D(r1, s[1][2][1], 0x09FE0AF9, 0x0AF6FB02, 0xF9100D01, 0x11E3FA09);
	r2 = D(r2, s[1][2][1], 0x03F1F3FD, 0xF507FC09, 0x0A04EDF8, 0x09FEFDF3);
	r3 = D(r3, s[1][2][1], 0x14FEEBF9, 0xF6F9F8FD, 0xF8F705F7, 0x03E4F8E5);
	r4 = D(r4, s[1][2][1], 0xFF0FF6F3, 0xEEFDFBFB, 0xF904F308, 0xEFEB0310);
	r5 = D(r5, s[1][2][1], 0xF50C06F9, 0x06E7F50A, 0x0F09FCFD, 0xEAFD0FF8);
	r6 = D(r6, s[1][2][1], 0x010EFDFB, 0x0A0401DF, 0xFD0FEAF7, 0xEFFD0400);
	r7 = D(r7, s[1][2][1], 0xFAFBEBFF, 0x06FCFE02, 0xF7040602, 0x05F2FFF5);
	r0 = D(r0, s[1][2][2], 0x0F0C00E6, 0xFDFD0ADE, 0xF5F60901, 0x03011904);
	r1 = D(r1, s[1][2][2], 0xF509FB05, 0x0BF5FCF6, 0xF9FFEE01, 0xFC0F04F6);
	r2 = D(r2, s[1][2][2], 0xFD000406, 0xF2F405F7, 0x05F403F7, 0x09ECF80B);
	r3 = D(r3, s[1][2][2], 0x02F604F6, 0x06F0F511, 0x02FEFCFE, 0xF6110509);
	r4 = D(r4, s[1][2][2], 0x1DFEF603, 0x01FBEB21, 0x0BFDFBFF, 0x0A15F506);
	r5 = D(r5, s[1][2][2], 0x0500FC0A, 0x070AF310, 0x05DDFEFA, 0x0110FFFF);
	r6 = D(r6, s[1][2][2], 0x10FBF909, 0x43FAE3F0, 0x0913FC01, 0xF91F01F4);
	r7 = D(r7, s[1][2][2], 0x0C0C0DF5, 0xFFF808F9, 0xF8EB0B0C, 0xFF0D03F8);
	s[0][0][0] = G[12][xy.y+0][xy.x+0]; s[0][0][1] = G[12][xy.y+0][xy.x+1];
	s[0][0][2] = G[12][xy.y+0][xy.x+2]; s[0][1][0] = G[12][xy.y+1][xy.x+0];
	s[0][1][1] = G[12][xy.y+1][xy.x+1]; s[0][1][2] = G[12][xy.y+1][xy.x+2];
	s[0][2][0] = G[12][xy.y+2][xy.x+0]; s[0][2][1] = G[12][xy.y+2][xy.x+1];
	s[0][2][2] = G[12][xy.y+2][xy.x+2]; s[1][0][0] = G[13][xy.y+0][xy.x+0];
	s[1][0][1] = G[13][xy.y+0][xy.x+1]; s[1][0][2] = G[13][xy.y+0][xy.x+2];
	s[1][1][0] = G[13][xy.y+1][xy.x+0]; s[1][1][1] = G[13][xy.y+1][xy.x+1];
	s[1][1][2] = G[13][xy.y+1][xy.x+2]; s[1][2][0] = G[13][xy.y+2][xy.x+0];
	s[1][2][1] = G[13][xy.y+2][xy.x+1]; s[1][2][2] = G[13][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x0FEBF505, 0xF2F70803, 0xE610F500, 0xEEFDD80E);
	r1 = D(r1, s[0][0][0], 0xFDF4FFF5, 0x011405F5, 0x07FD03F0, 0xFBEE060A);
	r2 = D(r2, s[0][0][0], 0xFA0305F9, 0x07F7F705, 0xD5150AFD, 0xFC130709);
	r3 = D(r3, s[0][0][0], 0x09061CFF, 0xF8142700, 0x10EFF0F8, 0x0F10D2EB);
	r4 = D(r4, s[0][0][0], 0x0D21EBE3, 0x06160F00, 0x16F7FDFA, 0x0105FBF9);
	r5 = D(r5, s[0][0][0], 0xF50005F9, 0xE80C0B0B, 0x13FAFDF4, 0x16FDFE03);
	r6 = D(r6, s[0][0][0], 0xE4130F14, 0x081AFAD7, 0xFC1C08FD, 0x18020504);
	r7 = D(r7, s[0][0][0], 0x04F8F205, 0xF8F40002, 0xFB03EAF9, 0x0DFEF701);
	r0 = D(r0, s[0][0][1], 0xA717050F, 0xE5E1EEED, 0xFE161714, 0xA6E009E3);
	r1 = D(r1, s[0][0][1], 0xF20004FF, 0xEA040102, 0x0F18E612, 0xEACF0910);
	r2 = D(r2, s[0][0][1], 0x040FFB00, 0xFBF8FBFE, 0xF8080616, 0x0A09FDFE);
	r3 = D(r3, s[0][0][1], 0xE2271AFC, 0xD2220BF8, 0x0AF401F4, 0xE9EA0DFB);
	r4 = D(r4, s[0][0][1], 0x1317E910, 0xF62AF7FF, 0x03FC00F7, 0x00EB02F3);
	r5 = D(r5, s[0][0][1], 0x071811FA, 0xFE0C04DD, 0xF8E5160C, 0x0403F1FF);
	r6 = D(r6, s[0][0][1], 0x1CEDD9F5, 0xDCE93EF2, 0x040BF80C, 0x07E90CF9);
	r7 = D(r7, s[0][0][1], 0x0CF90CFA, 0xFDF3F302, 0xF8F6FDEF, 0x0BF7080A);
	r0 = D(r0, s[0][0][2], 0x1EF808F9, 0x15E52A16, 0xECFB0601, 0x9502F9F2);
	r1 = D(r1, s[0][0][2], 0x06FE0B01, 0xE00518FA, 0xE70D0A01, 0x02DA0606);
	r2 = D(r2, s[0][0][2], 0x010CFDF2, 0x0A18ED0D, 0xF2211BD0, 0xFE1907DC);
	r3 = D(r3, s[0][0][2], 0xDB1FED19, 0xF50F060C, 0xFAF00502, 0xFF2000F4);
	r4 = D(r4, s[0][0][2], 0x070E07FB, 0x0AF308F7, 0x0E020BEE, 0xEC160FF2);
	r5 = D(r5, s[0][0][2], 0x12110701, 0xF3071603, 0x0F09F30A, 0x0EF710F2);
	r6 = D(r6, s[0][0][2], 0xFDF6F123, 0xE10416F5, 0x13150614, 0xF00D0010);
	r7 = D(r7, s[0][0][2], 0x18F2F10A, 0xFFEC03FD, 0xF90D1DFF, 0x04F1060B);
	r0 = D(r0, s[0][1][0], 0x0102F4F9, 0xF9DD0C05, 0xEBFF12F3, 0x0D07C1ED);
	r1 = D(r1, s[0][1][0], 0x0601F8F5, 0xECF60419, 0xF20100FA, 0x08E8ED15);
	r2 = D(r2, s[0][1][0], 0xF8F103FC, 0x0618EFFB, 0xCB0513ED, 0x10F4F60B);
	r3 = D(r3, s[0][1][0], 0x060200FF, 0x101108F4, 0xFE0207EB, 0x0BFCE922);
	r4 = D(r4, s[0][1][0], 0xF2F5E8CF, 0xF0DEF8FF, 0xFE07EE07, 0xF3EC03DF);
	r5 = D(r5, s[0][1][0], 0xFEF4FBFB, 0xFB080007, 0xFEF9081C, 0xEBF20601);
	r6 = D(r6, s[0][1][0], 0x11E3FBE8, 0xFD25E611, 0x10DD0EF4, 0xFE0205FA);
	r7 = D(r7, s[0][1][0], 0xF2010004, 0xFF05FE01, 0xFD0DF81D, 0xFD05FE0E);
	r0 = D(r0, s[0][1][1], 0x07CE1C09, 0x03FD0DFC, 0x0AFCF1F8, 0xACA1E20B);
	r1 = D(r1, s[0][1][1], 0xFFFFF6F5, 0xF6F6FE09, 0xFC1EC619, 0xEA02E605);
	r2 = D(r2, s[0][1][1], 0x1AFCF900, 0xEC02021A, 0xFF21E0DA, 0x1F0AFD03);
	r3 = D(r3, s[0][1][1], 0x18EDF908, 0x20FF06EF, 0xFCF9FBDE, 0xEF020502);
	r4 = D(r4, s[0][1][1], 0xFEFFEFE5, 0x26F30D11, 0x12FF0002, 0x06F70416);
	r5 = D(r5, s[0][1][1], 0xF704EDF4, 0xF70FDFEF, 0x07FC0114, 0xF5FC0ADC);
	r6 = D(r6, s[0][1][1], 0xCE3A3BC9, 0xD18100F3, 0xD032E700, 0xEA041133);
	r7 = D(r7, s[0][1][1], 0xFDF018FF, 0xEBFC08FA, 0xED01F30B, 0x03FB0715);
	r0 = D(r0, s[0][1][2], 0x0EE1FBE8, 0xDC810DF8, 0x0A30F812, 0xA8F7D5F3);
	r1 = D(r1, s[0][1][2], 0xF50602FA, 0xF620F9EB, 0xDC001B30, 0xD7EAED03);
	r2 = D(r2, s[0][1][2], 0xF913FBEE, 0x0FF304EC, 0xE60FEFF3, 0xFEF702FE);
	r3 = D(r3, s[0][1][2], 0xDC1BFD09, 0x0511FBF5, 0x010DFCF6, 0x17D4070A);
	r4 = D(r4, s[0][1][2], 0xFD27C901, 0x142CEAFD, 0xF9FF02EA, 0xD1EDFFEC);
	r5 = D(r5, s[0][1][2], 0x1F0906FF, 0x1306F5F3, 0x001A1511, 0xF900F8CD);
	r6 = D(r6, s[0][1][2], 0xFD05E8D3, 0x1B1E0AF4, 0x2609F4F4, 0xF20104E8);
	r7 = D(r7, s[0][1][2], 0xF6F9F407, 0x0EF8F805, 0x1FDBE704, 0x0EFB001F);
	r0 = D(r0, s[0][2][0], 0x1005F711, 0x01131803, 0xCDEB00F3, 0xC799E70A);
	r1 = D(r1, s[0][2][0], 0xF8FA06FC, 0xDCFEFEE3, 0x0DFCF5F3, 0xF9F30400);
	r2 = D(r2, s[0][2][0], 0x03FFFDFC, 0x050E050E, 0xFF1DF2F4, 0x050EFF07);
	r3 = D(r3, s[0][2][0], 0x0A0D0516, 0x020CFFF8, 0x001006FB, 0x031D01FA);
	r4 = D(r4, s[0][2][0], 0xE410EFD5, 0xF7120CF1, 0xF3F5EC00, 0xF1F4F705);
	r5 = D(r5, s[0][2][0], 0xFD0AFFF6, 0xFDF411FB, 0x010AFEFD, 0xF8EAFFF4);
	r6 = D(r6, s[0][2][0], 0xEC19E0FD, 0xF41D1305, 0xEE32FF0E, 0x03150902);
	r7 = D(r7, s[0][2][0], 0x03E9FAF8, 0x09110005, 0xE8F1FC25, 0x0E0DF807);
	r0 = D(r0, s[0][2][1], 0xF31ADDFA, 0x142C18FE, 0x01040A09, 0xC2D9EEF7);
	r1 = D(r1, s[0][2][1], 0xFCFE09F8, 0xF416FAED, 0x0D35DF0B, 0x05FE1915);
	r2 = D(r2, s[0][2][1], 0x0C18F705, 0xF82DEF00, 0xF60DFC07, 0xFBEEFB06);
	r3 = D(r3, s[0][2][1], 0x181EEEEB, 0xF800F5FF, 0x06F9FFFA, 0x0600F50C);
	r4 = D(r4, s[0][2][1], 0x09160005, 0xD43C21DD, 0xFF0D0704, 0xF4F107FE);
	r5 = D(r5, s[0][2][1], 0xF91303E6, 0x08FDF5E5, 0x081904F1, 0x062408F0);
	r6 = D(r6, s[0][2][1], 0xD6CADFE1, 0xB33CF7F6, 0xEABBF7F7, 0x0F0A03EA);
	r7 = D(r7, s[0][2][1], 0x021004FE, 0xFDEEFA0B, 0x1A2C0809, 0x0905E111);
	r0 = D(r0, s[0][2][2], 0x02FE02EF, 0x19FC1FFD, 0x04F1BF0F, 0xFDD9E3F4);
	r1 = D(r1, s[0][2][2], 0xFDF40906, 0xF71AFED4, 0xFD08FE01, 0x01EE0FF1);
	r2 = D(r2, s[0][2][2], 0xF2FAFBF7, 0x0B0CEB0E, 0xE9160BF3, 0x090EE7F4);
	r3 = D(r3, s[0][2][2], 0xFF0FE8F9, 0xF7F5F3F0, 0xF508F900, 0xF9B20AFA);
	r4 = D(r4, s[0][2][2], 0xFD0A0BF1, 0x101802D5, 0xFA11FBFA, 0xF700F1FA);
	r5 = D(r5, s[0][2][2], 0x0EFDFB19, 0x01F604EF, 0xF90BF5F9, 0x101BFF01);
	r6 = D(r6, s[0][2][2], 0xECE806F7, 0xDF1E26EC, 0xF40E2AED, 0xFC0800FD);
	r7 = D(r7, s[0][2][2], 0xF901FDFE, 0x0CF2F804, 0xF817ECF3, 0x09FF0715);
	r0 = D(r0, s[1][0][0], 0xFCFAD6FD, 0x16120EF5, 0x0400FA27, 0x05FC1E00);
	r1 = D(r1, s[1][0][0], 0x04FAFA04, 0x070809F6, 0xF910000C, 0x110104F9);
	r2 = D(r2, s[1][0][0], 0x0202F60B, 0xF907F703, 0xED12F40A, 0xF9070BFE);
	r3 = D(r3, s[1][0][0], 0x0AD70B04, 0x0D031700, 0xEDFCFFF4, 0x02F805F5);
	r4 = D(r4, s[1][0][0], 0x0321E602, 0x04E50C0D, 0xFAF6F801, 0xF60D0B12);
	r5 = D(r5, s[1][0][0], 0xFAEFFB10, 0xEEE2EDF6, 0x0CFC02FD, 0xFC0AF3F8);
	r6 = D(r6, s[1][0][0], 0x0EDC0300, 0xE8F308D6, 0xFB16FFFE, 0xF1041011);
	r7 = D(r7, s[1][0][0], 0x00F7F804, 0xFEFE01F6, 0xFC190704, 0xFAF802FD);
	r0 = D(r0, s[1][0][1], 0xEEF3F0ED, 0x0E0DFFFE, 0x01E30916, 0xF9F901FC);
	r1 = D(r1, s[1][0][1], 0xF2F806FC, 0xFCFBFADE, 0xFC86EE0A, 0x06F3020E);
	r2 = D(r2, s[1][0][1], 0xFDDFFE08, 0xF627FDFE, 0x14D50002, 0xF4ECFB08);
	r3 = D(r3, s[1][0][1], 0xF9E203F6, 0xFCFA09ED, 0xF3FEF5FE, 0x02150EF0);
	r4 = D(r4, s[1][0][1], 0x03FCED17, 0xED04FFFC, 0xFF060104, 0x0503F917);
	r5 = D(r5, s[1][0][1], 0x030D11F7, 0x02CDF300, 0x02030205, 0xFA08040B);
	r6 = D(r6, s[1][0][1], 0xFFF81312, 0xECF4E6BF, 0x03F5E4ED, 0xFC1B1FFE);
	r7 = D(r7, s[1][0][1], 0xF9F50809, 0xF5F7FC05, 0x02EE11E5, 0x052411FD);
	r0 = D(r0, s[1][0][2], 0xFDF8FB03, 0xFD1414EB, 0xF4B6E609, 0xFA1F08E8);
	r1 = D(r1, s[1][0][2], 0xF30C15FC, 0xF4EAF505, 0xFAE70CEB, 0x08FE090F);
	r2 = D(r2, s[1][0][2], 0x090301FF, 0x130F0700, 0xF90EEDEA, 0x1308EB0C);
	r3 = D(r3, s[1][0][2], 0xFFEE0A09, 0x010109F7, 0xFC04F302, 0xFD170BF2);
	r4 = D(r4, s[1][0][2], 0xF6FDF807, 0x0908F90A, 0x03E905F3, 0x0215020B);
	r5 = D(r5, s[1][0][2], 0x030009F5, 0xFA02FEF3, 0x03FD0504, 0xFCF20907);
	r6 = D(r6, s[1][0][2], 0xFD0E1303, 0xFE0009E7, 0xF9FCF711, 0x03DEEDF2);
	r7 = D(r7, s[1][0][2], 0x0DF2F7F9, 0xFF0106F8, 0x0B01FB03, 0xFAF509F3);
	r0 = D(r0, s[1][1][0], 0x060205DA, 0xEA1905F9, 0xF621F604, 0xE607FFEB);
	r1 = D(r1, s[1][1][0], 0x0B01F600, 0xF702DB18, 0xF6EE0419, 0x06FEFA05);
	r2 = D(r2, s[1][1][0], 0xF6F7FE09, 0x0AF00305, 0xE8FA0217, 0x02F5FFEE);
	r3 = D(r3, s[1][1][0], 0x0609FEF5, 0xFA0A0202, 0xF703F5ED, 0xFA07FCED);
	r4 = D(r4, s[1][1][0], 0xEF0700FD, 0x02050B1B, 0x1008DFFB, 0xE9F7F011);
	r5 = D(r5, s[1][1][0], 0xF317FF09, 0x07F10013, 0xFE00FA01, 0xFD011105);
	r6 = D(r6, s[1][1][0], 0xEC1CFFEC, 0x1307D9FF, 0xFCF4FBFC, 0x04DCF8E2);
	r7 = D(r7, s[1][1][0], 0x0F06F0F6, 0xFBE2F1FD, 0x11030A08, 0x0108FAF8);
	r0 = D(r0, s[1][1][1], 0x0B0008EC, 0xF204FCD8, 0x170CFD05, 0x02FF22F2);
	r1 = D(r1, s[1][1][1], 0x1412EEFD, 0x151B03EF, 0xFC0D120E, 0xEC0304F3);
	r2 = D(r2, s[1][1][1], 0xF70C00E4, 0xF1F70EF2, 0x1818ED07, 0x0A13FA05);
	r3 = D(r3, s[1][1][1], 0xF7D60C1F, 0x1400010A, 0x0C0CFEFF, 0x060C06E6);
	r4 = D(r4, s[1][1][1], 0xF0020304, 0x0D0BFCF7, 0xFB13F606, 0x03F4E4F2);
	r5 = D(r5, s[1][1][1], 0x03130DEB, 0x06080801, 0x0B1602FD, 0xF310FBF0);
	r6 = D(r6, s[1][1][1], 0xF10F0FF5, 0x01F7DFF4, 0xD009F4DC, 0x24F7E303);
	r7 = D(r7, s[1][1][1], 0xE6F3FEEB, 0xF500F806, 0x09F7F80B, 0x1FEF000D);
	r0 = D(r0, s[1][1][2], 0xFBEE2EFE, 0xFF02F6FD, 0x01F104E0, 0x12F8ED08);
	r1 = D(r1, s[1][1][2], 0x070E06F3, 0x032A05F0, 0xE2090203, 0x0702F30B);
	r2 = D(r2, s[1][1][2], 0xF1FFF7F6, 0xFA01E906, 0x0D110913, 0x09E60CF2);
	r3 = D(r3, s[1][1][2], 0xEEE206F5, 0x0203EA14, 0xFC01F0FF, 0x04E518F3);
	r4 = D(r4, s[1][1][2], 0x060E1304, 0xFBF6FAF1, 0x15F70EFA, 0xEB221406);
	r5 = D(r5, s[1][1][2], 0x12F4FF01, 0x07F3D9FC, 0xEBFBFF0B, 0xFE100A07);
	r6 = D(r6, s[1][1][2], 0x0B1025FC, 0x121D3109, 0xFAFA1122, 0x030D0DEB);
	r7 = D(r7, s[1][1][2], 0xF3F6FCFB, 0x06F9FF04, 0x04FBF219, 0x0BEB01FF);
	r0 = D(r0, s[1][2][0], 0xDA000D0C, 0xDAFAEE0C, 0x1005C10E, 0x09100004);
	r1 = D(r1, s[1][2][0], 0x0B12F903, 0x0205E5FA, 0xE406FF07, 0xFBF8120A);
	r2 = D(r2, s[1][2][0], 0x0404F7FD, 0x080202F1, 0x0A0EEF0B, 0x0902140D);
	r3 = D(r3, s[1][2][0], 0xFF0C060F, 0x04050C07, 0x0800FBF6, 0xFB1203E0);
	r4 = D(r4, s[1][2][0], 0xFF0CF7F7, 0xD7EBF9FE, 0x08FEFA0A, 0x1A000C02);
	r5 = D(r5, s[1][2][0], 0xFCFEF009, 0x0503FEFF, 0xFB0BF31A, 0x0102F304);
	r6 = D(r6, s[1][2][0], 0xE70BF4FA, 0xF9040C11, 0xF70C0003, 0x06180CF3);
	r7 = D(r7, s[1][2][0], 0x09FA01FE, 0x02020606, 0x04FFFF18, 0xF802FB02);
	r0 = D(r0, s[1][2][1], 0x03100416, 0x0E0110E6, 0xFC1200F5, 0x0309F410);
	r1 = D(r1, s[1][2][1], 0x040DF400, 0x061E0C0F, 0x05FBF80B, 0x08060903);
	r2 = D(r2, s[1][2][1], 0x0502FDEE, 0x01FA0209, 0xF3FBF2F8, 0x1711F202);
	r3 = D(r3, s[1][2][1], 0x06EF0002, 0x08EBFE09, 0xFA050501, 0xF6080601);
	r4 = D(r4, s[1][2][1], 0xF9FC01F9, 0x13090CB4, 0x0BFAFE03, 0xFAF3F91A);
	r5 = D(r5, s[1][2][1], 0xE606070B, 0x1211FFF6, 0x081DF816, 0xF7010BFE);
	r6 = D(r6, s[1][2][1], 0xE406CA09, 0xF7EEF31E, 0x23FF150C, 0xDA0B0703);
	r7 = D(r7, s[1][2][1], 0xF006FEEA, 0xF5030CFC, 0xE80300F8, 0xFCFCF8F8);
	r0 = D(r0, s[1][2][2], 0x1303E4FA, 0x0C1A1907, 0xE9F9EC0A, 0x0D090602);
	r1 = D(r1, s[1][2][2], 0x00060CF1, 0xF70BF612, 0xEE07DEFF, 0x0A060808);
	r2 = D(r2, s[1][2][2], 0xFC0202FB, 0xFBF5F706, 0x15F7FCFE, 0xFC0AFFF2);
	r3 = D(r3, s[1][2][2], 0xFF020701, 0x10FA1A06, 0xFF04F902, 0xFBFB1D01);
	r4 = D(r4, s[1][2][2], 0xFBFDFA1C, 0xF0FD0400, 0xF8FF0908, 0x01F7ED13);
	r5 = D(r5, s[1][2][2], 0xFE01F602, 0x0A040605, 0xEEFFF607, 0x080AF4FF);
	r6 = D(r6, s[1][2][2], 0x04FCE504, 0x1D080918, 0x041D0401, 0xE809F907);
	r7 = D(r7, s[1][2][2], 0xFA140BF7, 0x06031300, 0xF70C0402, 0xF7FC0AF6);
	s[0][0][0] = G[14][xy.y+0][xy.x+0]; s[0][0][1] = G[14][xy.y+0][xy.x+1];
	s[0][0][2] = G[14][xy.y+0][xy.x+2]; s[0][1][0] = G[14][xy.y+1][xy.x+0];
	s[0][1][1] = G[14][xy.y+1][xy.x+1]; s[0][1][2] = G[14][xy.y+1][xy.x+2];
	s[0][2][0] = G[14][xy.y+2][xy.x+0]; s[0][2][1] = G[14][xy.y+2][xy.x+1];
	s[0][2][2] = G[14][xy.y+2][xy.x+2]; s[1][0][0] = G[15][xy.y+0][xy.x+0];
	s[1][0][1] = G[15][xy.y+0][xy.x+1]; s[1][0][2] = G[15][xy.y+0][xy.x+2];
	s[1][1][0] = G[15][xy.y+1][xy.x+0]; s[1][1][1] = G[15][xy.y+1][xy.x+1];
	s[1][1][2] = G[15][xy.y+1][xy.x+2]; s[1][2][0] = G[15][xy.y+2][xy.x+0];
	s[1][2][1] = G[15][xy.y+2][xy.x+1]; s[1][2][2] = G[15][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xF6171CF4, 0x14CD0BF3, 0x0EB90AE4, 0x120D1AFA);
	r1 = D(r1, s[0][0][0], 0xFE3AFAFD, 0x13C109E4, 0x17F915F5, 0xF4F7FB02);
	r2 = D(r2, s[0][0][0], 0x013EF80D, 0x1B16FD00, 0x09E3E1E7, 0xFD03FCF3);
	r3 = D(r3, s[0][0][0], 0xFCE30B0F, 0xE1FCF905, 0x030BFBFF, 0xF9F7F8F5);
	r4 = D(r4, s[0][0][0], 0xFFDA0C02, 0x194408FD, 0xFA1B03F7, 0x0550080A);
	r5 = D(r5, s[0][0][0], 0x122B0BFB, 0x0B420FED, 0xFF090103, 0x09F514FE);
	r6 = D(r6, s[0][0][0], 0x0F1D0D09, 0xC8F71C0A, 0x0A90E7FE, 0x06302DF8);
	r7 = D(r7, s[0][0][0], 0xF927F602, 0xFDFDFBF6, 0x041109F0, 0x02D4FA08);
	r0 = D(r0, s[0][0][1], 0xE92106E9, 0x2A3AF2F5, 0x15F604E8, 0xF0CD12E5);
	r1 = D(r1, s[0][0][1], 0x06FE0E05, 0x0D0417F9, 0xFDEDF903, 0xD6ECF3EB);
	r2 = D(r2, s[0][0][1], 0x031BFCF8, 0x02ED1205, 0x1818121A, 0x04F312F9);
	r3 = D(r3, s[0][0][1], 0x0CCEEFF9, 0x0CEC0600, 0x0017EFFB, 0x17140A0D);
	r4 = D(r4, s[0][0][1], 0xFC011502, 0xF01DE515, 0x01DE07EF, 0x0EEBF4F6);
	r5 = D(r5, s[0][0][1], 0x1981FEED, 0x0DFB09E9, 0xFF120D0A, 0x03EC0C01);
	r6 = D(r6, s[0][0][1], 0xFA1DF6F8, 0x0FD4FBEE, 0x070C1809, 0xFD0AF227);
	r7 = D(r7, s[0][0][1], 0x09230DFE, 0x06FF08EE, 0xE05BFA09, 0x0003FD08);
	r0 = D(r0, s[0][0][2], 0x2205E5F6, 0x041016DF, 0xC6C3E1DD, 0xCFFAEEFA);
	r1 = D(r1, s[0][0][2], 0x0301E9FC, 0xFB1BF201, 0xF1FF0414, 0xE3FB2DEB);
	r2 = D(r2, s[0][0][2], 0x13FFF405, 0x0312E705, 0xFDDD05EB, 0x0011F6EE);
	r3 = D(r3, s[0][0][2], 0xE51F0304, 0xFBEEFFF1, 0x0C020AFA, 0xF80BEC0F);
	r4 = D(r4, s[0][0][2], 0xD7EAE8FE, 0xFA0FF802, 0xFFE9F90C, 0x0CEB0305);
	r5 = D(r5, s[0][0][2], 0xFEF9F8F3, 0x1225030B, 0x00F10EEF, 0x0A030801);
	r6 = D(r6, s[0][0][2], 0x22251506, 0xEB2CF907, 0xEB01F2F4, 0xF11E1304);
	r7 = D(r7, s[0][0][2], 0xE80309ED, 0x0D0204FE, 0x08120617, 0xF9FA08FC);
	r0 = D(r0, s[0][1][0], 0xF7EFF607, 0xF62F00F8, 0x222413EE, 0x18080FE3);
	r1 = D(r1, s[0][1][0], 0x063908FA, 0x04070805, 0xF1C7FA17, 0x102509EE);
	r2 = D(r2, s[0][1][0], 0xFB01FAFC, 0x0CF0C3FB, 0xFF1018FD, 0xFB04F202);
	r3 = D(r3, s[0][1][0], 0x12361C04, 0xF03B0B03, 0x0525F5F7, 0x0E01EDFF);
	r4 = D(r4, s[0][1][0], 0xF9EB0B1B, 0xFFC00F0F, 0xF2FA12FB, 0x13F50DF9);
	r5 = D(r5, s[0][1][0], 0x0126F80F, 0x021200FD, 0x0524E910, 0x0400FF09);
	r6 = D(r6, s[0][1][0], 0xE7EE09EB, 0x010C08F0, 0xD7FC2D0F, 0xEE2006FF);
	r7 = D(r7, s[0][1][0], 0xFC0E0BFA, 0xFAF8ED0B, 0xFA18090A, 0xFDFDFC08);
	r0 = D(r0, s[0][1][1], 0xEB0CE5FE, 0xD1110A12, 0x1213E9E5, 0xEE3102E5);
	r1 = D(r1, s[0][1][1], 0xF90101F8, 0xF20607F5, 0xF6D30BE7, 0x0318030C);
	r2 = D(r2, s[0][1][1], 0xF90702FA, 0x040819FD, 0xF21AFEE7, 0xF7030C14);
	r3 = D(r3, s[0][1][1], 0xFF0E0014, 0x010C05F5, 0x1507FD09, 0xE3E7E803);
	r4 = D(r4, s[0][1][1], 0xF5DCF1F8, 0xFAF4F604, 0xFB0104FC, 0xFBFAF5F7);
	r5 = D(r5, s[0][1][1], 0xFD0CF401, 0x0811FFEF, 0x0D1DF8EC, 0xF3ED0B08);
	r6 = D(r6, s[0][1][1], 0xFA07E92B, 0x2C151AF4, 0xEC140907, 0xF5FD00F4);
	r7 = D(r7, s[0][1][1], 0x0600FD09, 0xF80B081F, 0xFB111310, 0x06F3FCF5);
	r0 = D(r0, s[0][1][2], 0x16FF1CF3, 0xFAEE110E, 0x05C703F8, 0xFEF00AE7);
	r1 = D(r1, s[0][1][2], 0x020100EE, 0x04FEF60A, 0xF7FB10E1, 0xEE0B0D06);
	r2 = D(r2, s[0][1][2], 0x01070504, 0xECE4F114, 0x0CEBE0EF, 0x080F08FF);
	r3 = D(r3, s[0][1][2], 0xFAF1F8EC, 0x12FDEF04, 0x0507EE04, 0xE910ED08);
	r4 = D(r4, s[0][1][2], 0x05CA0AE5, 0x23010CEF, 0x0EEE0400, 0x0B08EBF7);
	r5 = D(r5, s[0][1][2], 0xF4030002, 0xFDFAFFFB, 0x103108F0, 0xF60CF8E1);
	r6 = D(r6, s[0][1][2], 0xE911EBE1, 0x16F1E70B, 0x05E8FFFA, 0x06F1FC0F);
	r7 = D(r7, s[0][1][2], 0x07FC0AF8, 0x02FA030F, 0x10F501F5, 0xFA06FDFA);
	r0 = D(r0, s[0][2][0], 0xFA19FCF7, 0xE033FC02, 0xF21C1EFC, 0x1101F90D);
	r1 = D(r1, s[0][2][0], 0xF71502F9, 0xF51A15F1, 0xFE09F601, 0xF50F0F11);
	r2 = D(r2, s[0][2][0], 0x03FD03FF, 0xF9EEFAF6, 0x02D502EC, 0x041EFEFF);
	r3 = D(r3, s[0][2][0], 0x03FC140B, 0x0F110102, 0xFF030C06, 0xF30404FC);
	r4 = D(r4, s[0][2][0], 0x0F06F8F0, 0xE1EFF7E2, 0x0309FBFD, 0xFBFE02FC);
	r5 = D(r5, s[0][2][0], 0xF8090903, 0xFC0D0301, 0x011218FC, 0xF2FB030D);
	r6 = D(r6, s[0][2][0], 0xE22620F3, 0xE3101FF8, 0x21EDF0E3, 0x100CFB03);
	r7 = D(r7, s[0][2][0], 0x0C03F200, 0xF7FE04F5, 0xD815FD07, 0x06FAF304);
	r0 = D(r0, s[0][2][1], 0xFE150109, 0xE2E5EA03, 0xFEF2EC08, 0xF4F618EE);
	r1 = D(r1, s[0][2][1], 0x01F50201, 0xE810EB00, 0x1FF1E9DC, 0xF8040408);
	r2 = D(r2, s[0][2][1], 0xF60401F4, 0x03FFF8EE, 0x0114F6FA, 0x08FA0606);
	r3 = D(r3, s[0][2][1], 0x030EFC18, 0xE4FA0A01, 0xF911FB02, 0x052304FD);
	r4 = D(r4, s[0][2][1], 0x0AFEF0FD, 0x0816FDEB, 0xF5F5FDFE, 0xEF0A0AF3);
	r5 = D(r5, s[0][2][1], 0x08080F04, 0xD10504FA, 0xFD04FF09, 0xFA1319F6);
	r6 = D(r6, s[0][2][1], 0x11150AE5, 0xCD130107, 0xDA09F406, 0x03FE18F9);
	r7 = D(r7, s[0][2][1], 0x0C120005, 0xF700FE08, 0xF003F3F3, 0x0E04F802);
	r0 = D(r0, s[0][2][2], 0xEA12000C, 0xEF06010C, 0xFDF311EB, 0x030E0ED7);
	r1 = D(r1, s[0][2][2], 0xFB0A0602, 0xF8001105, 0x06FF15E0, 0xFE03000C);
	r2 = D(r2, s[0][2][2], 0xF60D04FD, 0xFFF8F8F1, 0x1A0C25FA, 0xF5E904FF);
	r3 = D(r3, s[0][2][2], 0x04F5FEFE, 0xEEF7F708, 0xFCFBF8F7, 0xD7E4F9F8);
	r4 = D(r4, s[0][2][2], 0x24D31AF2, 0xC1000B0C, 0x04F20308, 0xF8FDE701);
	r5 = D(r5, s[0][2][2], 0xFAF9F30A, 0xFD06F506, 0x040EFBF5, 0x0DFE0C04);
	r6 = D(r6, s[0][2][2], 0x0BFE01F7, 0xE1F9F005, 0x19F51EF6, 0x0B0C0F04);
	r7 = D(r7, s[0][2][2], 0xF3F71405, 0xF30DFFF9, 0xED0FF7E0, 0x01FEF6F4);
	r0 = D(r0, s[1][0][0], 0x160EF034, 0x14F5EBF8, 0xCAEDF61C, 0x1102EA08);
	r1 = D(r1, s[1][0][0], 0xFA03FCF7, 0xE801000E, 0x0E0AF50D, 0x040C0519);
	r2 = D(r2, s[1][0][0], 0x0703F5F7, 0xFA100BF6, 0x0E0805E3, 0xF9FFFB00);
	r3 = D(r3, s[1][0][0], 0x1001ED08, 0x04E50BE3, 0x00F900F7, 0xF70A0C15);
	r4 = D(r4, s[1][0][0], 0xEDFFE5E3, 0x12E2201A, 0xFA0605FB, 0xEA12E814);
	r5 = D(r5, s[1][0][0], 0x0DFFF611, 0xF4F5E712, 0xFA0307F8, 0x05FECB08);
	r6 = D(r6, s[1][0][0], 0x0D16F71E, 0xF3E1182F, 0xF3F51005, 0xEC150AE5);
	r7 = D(r7, s[1][0][0], 0x06130EE9, 0xF907F008, 0x0AFE0F21, 0x0C061009);
	r0 = D(r0, s[1][0][1], 0xF3F92412, 0x041811FA, 0xEE112AE2, 0x03031F13);
	r1 = D(r1, s[1][0][1], 0x02060C07, 0x150D0707, 0x0F161F1A, 0xFA10FCDF);
	r2 = D(r2, s[1][0][1], 0x0704F5FA, 0xEF06F904, 0xEE021711, 0xF20CFC04);
	r3 = D(r3, s[1][0][1], 0xF00A04FC, 0x08ECEDCE, 0xF8FD0505, 0x1DF3EF3A);
	r4 = D(r4, s[1][0][1], 0x1D1CEE07, 0x14F60830, 0x0C00FE21, 0xFE100B06);
	r5 = D(r5, s[1][0][1], 0xF8FEFB05, 0x03FC011C, 0x00FAFF09, 0xEFFBC808);
	r6 = D(r6, s[1][0][1], 0x2F202634, 0x1A06EC2A, 0x0702D50C, 0x23181A20);
	r7 = D(r7, s[1][0][1], 0xFEFAFBF1, 0x0109010F, 0x070DF2FD, 0x05FB05E5);
	r0 = D(r0, s[1][0][2], 0x150607FA, 0x04FBEF12, 0xFEFF0A02, 0xF604DC14);
	r1 = D(r1, s[1][0][2], 0xEFF0F300, 0xE2FA0413, 0x140CDE00, 0x01FCF307);
	r2 = D(r2, s[1][0][2], 0x150DF605, 0x01090EFD, 0x10F90BE9, 0xF6110216);
	r3 = D(r3, s[1][0][2], 0xFB08E9FC, 0x01F801F7, 0x0003FA0E, 0xD90E0A0F);
	r4 = D(r4, s[1][0][2], 0xF70E0E11, 0xF7FF0F13, 0x01070FFD, 0x14F5F310);
	r5 = D(r5, s[1][0][2], 0x06FD0E04, 0x04F70710, 0xFEFFFBEF, 0x05FF031B);
	r6 = D(r6, s[1][0][2], 0x0AFB00F2, 0x11FB0526, 0x220D3015, 0xFBF4FC21);
	r7 = D(r7, s[1][0][2], 0xECF304FB, 0x000BFAFE, 0xF8F60BF6, 0x05F409FA);
	r0 = D(r0, s[1][1][0], 0xF10D081C, 0x0E27ECFF, 0xEE05E91F, 0x030B2FF5);
	r1 = D(r1, s[1][1][0], 0xFAFFEA0D, 0xED09D713, 0xF100F9EC, 0x0111F932);
	r2 = D(r2, s[1][1][0], 0xF903F5FE, 0xF8F507F8, 0xF50E1902, 0xFBFFF7FB);
	r3 = D(r3, s[1][1][0], 0xF5F10404, 0xFFF4F11A, 0x0804FFFE, 0xE7F11202);
	r4 = D(r4, s[1][1][0], 0xE822F402, 0x10EEE2EE, 0x09030A01, 0xFDED2B03);
	r5 = D(r5, s[1][1][0], 0xEEECE416, 0xFC04DE1E, 0xF6FCFFF3, 0x03FAF3FC);
	r6 = D(r6, s[1][1][0], 0x0102163D, 0x1311F115, 0x19FE020B, 0xFCEE0E1E);
	r7 = D(r7, s[1][1][0], 0xFD0207EC, 0xFCFDF501, 0x2007091A, 0x02F603F5);
	r0 = D(r0, s[1][1][1], 0xFAEFEFE2, 0xE7F1FFE3, 0x1B0416F4, 0x0D150D19);
	r1 = D(r1, s[1][1][1], 0x04FAF7EC, 0x0E05F217, 0xF0080C28, 0x09FC0207);
	r2 = D(r2, s[1][1][1], 0xEDF8EC1C, 0xEA0DED0D, 0x1404F828, 0xF9FBDBF1);
	r3 = D(r3, s[1][1][1], 0x22FB020D, 0xF6000CF5, 0xFE04FD17, 0x05F4091C);
	r4 = D(r4, s[1][1][1], 0xE805D7B6, 0x03D401FB, 0x09FDF6EC, 0xF1FC070C);
	r5 = D(r5, s[1][1][1], 0x0306EE06, 0x00EC0121, 0x05FBF20E, 0xFCEAF424);
	r6 = D(r6, s[1][1][1], 0x140CE20A, 0xF4F7F3F0, 0x08F41624, 0x02E701F7);
	r7 = D(r7, s[1][1][1], 0xFB0806FC, 0xFFF402FC, 0xFAFDDBF9, 0x011516E8);
	r0 = D(r0, s[1][1][2], 0xE5071A1F, 0x0A0BF7E6, 0x0B0FFE14, 0xFFE019F6);
	r1 = D(r1, s[1][1][2], 0xF5001112, 0x15F40009, 0xFBEDD9F6, 0xE404FBFD);
	r2 = D(r2, s[1][1][2], 0x08FE0407, 0xF8F1FFFF, 0xFB03FB08, 0xFEEDFEFC);
	r3 = D(r3, s[1][1][2], 0xF11AF120, 0x03E9F90D, 0xFF0309F8, 0x0E0C1518);
	r4 = D(r4, s[1][1][2], 0x16FF10F8, 0xF4100DEE, 0x1B02ECFA, 0x14061C19);
	r5 = D(r5, s[1][1][2], 0x03000303, 0xF5FCF7F0, 0x0301E817, 0x0301EB05);
	r6 = D(r6, s[1][1][2], 0x081D28F0, 0x080A1D18, 0x09F6CFFD, 0xFDF6E701);
	r7 = D(r7, s[1][1][2], 0xE8F2070D, 0x0B0703FF, 0xF400FDFE, 0x01FE0BF6);
	r0 = D(r0, s[1][2][0], 0x1CF3EE32, 0xEAF80DF1, 0x1514FD25, 0x1CF4131A);
	r1 = D(r1, s[1][2][0], 0xF302FF07, 0xED121215, 0x01FEFD09, 0x020510EA);
	r2 = D(r2, s[1][2][0], 0x0305F9F5, 0x02FA06FC, 0xFC07FD1C, 0xEF02F518);
	r3 = D(r3, s[1][2][0], 0x21F2030B, 0x11080900, 0xFCF50313, 0xEFEEFA25);
	r4 = D(r4, s[1][2][0], 0xF2061010, 0xE300E20F, 0xFAFFEFFF, 0xF4FDFD0C);
	r5 = D(r5, s[1][2][0], 0xF308EFFF, 0xFAFCD500, 0xFF030C05, 0xFF0B041D);
	r6 = D(r6, s[1][2][0], 0x05FBC0FC, 0xF5FFFA1B, 0x07D5082B, 0x0E02FD10);
	r7 = D(r7, s[1][2][0], 0xFE09060E, 0x02FDFF0B, 0x1C06CA20, 0x06030100);
	r0 = D(r0, s[1][2][1], 0xFB001201, 0x0607FFF2, 0x0301EB15, 0xF5FFDBFB);
	r1 = D(r1, s[1][2][1], 0xFD0DE700, 0xF4F8ED06, 0x00E6FE09, 0x0AF40621);
	r2 = D(r2, s[1][2][1], 0x0EFBEB05, 0x09FC1103, 0xF4FDF2FF, 0x04E6EC28);
	r3 = D(r3, s[1][2][1], 0xF1F00115, 0x03F3E819, 0xF9FA0016, 0x0700F825);
	r4 = D(r4, s[1][2][1], 0xF5EFF8FA, 0x0A1CFA0A, 0xFF000B06, 0x0F1C0D09);
	r5 = D(r5, s[1][2][1], 0xFC000708, 0x0EF5031E, 0xF9FC0510, 0x0704FF05);
	r6 = D(r6, s[1][2][1], 0xEAFFE606, 0xF9EEB5DF, 0xE3EEF7FC, 0xC11DFD07);
	r7 = D(r7, s[1][2][1], 0xFC0A0C07, 0x0B06FCF5, 0xFF03F40B, 0x000408FA);
	r0 = D(r0, s[1][2][2], 0xF1E8FC03, 0x28FCEEF7, 0x120A271A, 0xEC1ED2FE);
	r1 = D(r1, s[1][2][2], 0x03FB02FF, 0x0CE7200F, 0xF8F114C9, 0x000DFE08);
	r2 = D(r2, s[1][2][2], 0x0C07FDF7, 0x03FC08E2, 0xFEE82C04, 0xF90BFBF9);
	r3 = D(r3, s[1][2][2], 0x12091606, 0x12060C01, 0xFAFCFD02, 0xD6050B1C);
	r4 = D(r4, s[1][2][2], 0x09F01912, 0x01061DFB, 0x010019FA, 0xF9ED1405);
	r5 = D(r5, s[1][2][2], 0xFD0F09F9, 0x1507EC0A, 0x0B0214FA, 0x140AF9EE);
	r6 = D(r6, s[1][2][2], 0x0C04FF16, 0xFF099114, 0x050B050B, 0x03F90CEA);
	r7 = D(r7, s[1][2][2], 0xF5F9F715, 0x00050209, 0x04F30D12, 0xFBFF0BFB);
	f0 = vec4(r0) * 6.20001240e-05;
	f0 += vec4(-5.043e-03, -4.123e-02, 2.402e-04, -2.539e-02);
	f0 = max(f0, vec4(0.0));
	imageStore(out_image, opos + ivec2(4, 0), f0);
	f1 = vec4(r1) * 6.20001240e-05;
	f1 += vec4(9.867e-03, 4.639e-04, 1.835e-03, 8.374e-03);
	f1 = max(f1, vec4(0.0));
	imageStore(out_image, opos + ivec2(5, 0), f1);
	f2 = vec4(r2) * 6.20001240e-05;
	f2 += vec4(1.134e-02, -8.776e-02, -7.788e-02, 1.518e-02);
	f2 = max(f2, vec4(0.0));
	imageStore(out_image, opos + ivec2(4, 1), f2);
	f3 = vec4(r3) * 6.20001240e-05;
	f3 += vec4(-8.899e-02, 1.643e-02, 2.867e-03, -6.442e-02);
	f3 = max(f3, vec4(0.0));
	imageStore(out_image, opos + ivec2(5, 1), f3);
	f4 = vec4(r4) * 6.20001240e-05;
	f4 += vec4(-5.233e-03, -6.949e-02, -1.280e-03, -3.974e-02);
	f4 = max(f4, vec4(0.0));
	imageStore(out_image, opos + ivec2(6, 0), f4);
	f5 = vec4(r5) * 6.20001240e-05;
	f5 += vec4(-5.603e-02, 6.125e-02, -1.023e-02, -2.217e-02);
	f5 = max(f5, vec4(0.0));
	imageStore(out_image, opos + ivec2(7, 0), f5);
	f6 = vec4(r6) * 6.20001240e-05;
	f6 += vec4(-4.851e-02, -1.219e-03, -8.824e-02, -2.181e-02);
	f6 = max(f6, vec4(0.0));
	imageStore(out_image, opos + ivec2(6, 1), f6);
	f7 = vec4(r7) * 6.20001240e-05;
	f7 += vec4(2.790e-02, 2.547e-02, -2.786e-02, -2.781e-02);
	f7 = max(f7, vec4(0.0));
	imageStore(out_image, opos + ivec2(7, 1), f7);
}

//!DESC CuNNy-4x64-BILINEAR-TEST-conv4
//!HOOK LUMA
//!COMPUTE 64 16 8 8
//!BIND conv3
//!BIND LUMA
//!SAVE conv4
//!WIDTH LUMA.w 8 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_spirv_intrinsics : require
#extension GL_EXT_control_flow_attributes : require
spirv_instruction (extensions = ["SPV_KHR_integer_dot_product"], capabilities = [6019, 6018], id = 4450)
int dp4(int a, int b, spirv_literal int fmt);
#define D(r, s, a, b, c, d) ivec4(r.x + dp4(s, a, 0), r.y + dp4(s, b, 0), r.z + dp4(s, c, 0), r.w + dp4(s, d, 0))
shared int G[16][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(8, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			vec4 r, g, b, a;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(8, 2) + ivec2(1, 1)) * conv3_pt;
			r = conv3_gather(p, 0);
			g = conv3_gather(p, 1);
			b = conv3_gather(p, 2);
			a = conv3_gather(p, 3);
			vec4 v0 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v1 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v2 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v3 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(8, 2) + ivec2(3, 1)) * conv3_pt;
			r = conv3_gather(p, 0);
			g = conv3_gather(p, 1);
			b = conv3_gather(p, 2);
			a = conv3_gather(p, 3);
			vec4 v4 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v5 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v6 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v7 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(8, 2) + ivec2(5, 1)) * conv3_pt;
			r = conv3_gather(p, 0);
			g = conv3_gather(p, 1);
			b = conv3_gather(p, 2);
			a = conv3_gather(p, 3);
			vec4 v8 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v9 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v10 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v11 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(8, 2) + ivec2(7, 1)) * conv3_pt;
			r = conv3_gather(p, 0);
			g = conv3_gather(p, 1);
			b = conv3_gather(p, 2);
			a = conv3_gather(p, 3);
			vec4 v12 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v13 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v14 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v15 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			G[0][ay][ax] = int(packSnorm4x8(v0));
			G[1][ay][ax] = int(packSnorm4x8(v1));
			G[2][ay][ax] = int(packSnorm4x8(v2));
			G[3][ay][ax] = int(packSnorm4x8(v3));
			G[4][ay][ax] = int(packSnorm4x8(v4));
			G[5][ay][ax] = int(packSnorm4x8(v5));
			G[6][ay][ax] = int(packSnorm4x8(v6));
			G[7][ay][ax] = int(packSnorm4x8(v7));
			G[8][ay][ax] = int(packSnorm4x8(v8));
			G[9][ay][ax] = int(packSnorm4x8(v9));
			G[10][ay][ax] = int(packSnorm4x8(v10));
			G[11][ay][ax] = int(packSnorm4x8(v11));
			G[12][ay][ax] = int(packSnorm4x8(v12));
			G[13][ay][ax] = int(packSnorm4x8(v13));
			G[14][ay][ax] = int(packSnorm4x8(v14));
			G[15][ay][ax] = int(packSnorm4x8(v15));
		}
	}
	barrier();
	int s[2][3][3];
	ivec4 r0;
	ivec4 r1;
	ivec4 r2;
	ivec4 r3;
	ivec4 r4;
	ivec4 r5;
	ivec4 r6;
	ivec4 r7;
	vec4 f0;
	vec4 f1;
	vec4 f2;
	vec4 f3;
	vec4 f4;
	vec4 f5;
	vec4 f6;
	vec4 f7;
	r0 = ivec4(0);
	r1 = ivec4(0);
	r2 = ivec4(0);
	r3 = ivec4(0);
	r4 = ivec4(0);
	r5 = ivec4(0);
	r6 = ivec4(0);
	r7 = ivec4(0);
	s[0][0][0] = G[0][xy.y+0][xy.x+0]; s[0][0][1] = G[0][xy.y+0][xy.x+1];
	s[0][0][2] = G[0][xy.y+0][xy.x+2]; s[0][1][0] = G[0][xy.y+1][xy.x+0];
	s[0][1][1] = G[0][xy.y+1][xy.x+1]; s[0][1][2] = G[0][xy.y+1][xy.x+2];
	s[0][2][0] = G[0][xy.y+2][xy.x+0]; s[0][2][1] = G[0][xy.y+2][xy.x+1];
	s[0][2][2] = G[0][xy.y+2][xy.x+2]; s[1][0][0] = G[1][xy.y+0][xy.x+0];
	s[1][0][1] = G[1][xy.y+0][xy.x+1]; s[1][0][2] = G[1][xy.y+0][xy.x+2];
	s[1][1][0] = G[1][xy.y+1][xy.x+0]; s[1][1][1] = G[1][xy.y+1][xy.x+1];
	s[1][1][2] = G[1][xy.y+1][xy.x+2]; s[1][2][0] = G[1][xy.y+2][xy.x+0];
	s[1][2][1] = G[1][xy.y+2][xy.x+1]; s[1][2][2] = G[1][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x08E205FE, 0x0107FE01, 0x0FDB05FB, 0x02FB0307);
	r1 = D(r1, s[0][0][0], 0xF70806EE, 0x00060101, 0xF8090B09, 0xF9E825E7);
	r2 = D(r2, s[0][0][0], 0xFDFD0604, 0x03010301, 0x02070601, 0x06FA0EF1);
	r3 = D(r3, s[0][0][0], 0x03FF0905, 0xFF050407, 0x0200F602, 0x0501FFFC);
	r4 = D(r4, s[0][0][0], 0x07F509F7, 0x040B00FB, 0xFD00FCF5, 0xF0FE0C11);
	r5 = D(r5, s[0][0][0], 0xFB030303, 0xFD040DFE, 0x04F9FE01, 0xFCD8EE07);
	r6 = D(r6, s[0][0][0], 0xFC04FCFA, 0xFE0BEDE9, 0x0BFA0B08, 0x08F80910);
	r7 = D(r7, s[0][0][0], 0xFA050308, 0xFDFAFF02, 0x0903FFE3, 0xF802F4FB);
	r0 = D(r0, s[0][0][1], 0xE12001F1, 0x0A0CFFF6, 0xF4EFE113, 0xFBF4FD0F);
	r1 = D(r1, s[0][0][1], 0x0402FFFD, 0x03040104, 0x0BFEF604, 0xF4E6010D);
	r2 = D(r2, s[0][0][1], 0x060C0104, 0x020000F5, 0xFE090206, 0xFAE50A03);
	r3 = D(r3, s[0][0][1], 0xFB0101FD, 0x07F30A07, 0x04FE0204, 0x0E070902);
	r4 = D(r4, s[0][0][1], 0x080B08F9, 0x080BFFFC, 0x000D0FF5, 0x020213FC);
	r5 = D(r5, s[0][0][1], 0x070D0AFC, 0x0B0DFAFF, 0x06FBFA0B, 0x05DAF9FD);
	r6 = D(r6, s[0][0][1], 0x0C020808, 0x04FA100E, 0xF501F91A, 0xFCFD0CEF);
	r7 = D(r7, s[0][0][1], 0x02F6F8EA, 0x06FEF703, 0x100806D9, 0x11050305);
	r0 = D(r0, s[0][0][2], 0x0D07FCFD, 0xF80606F5, 0xFDE1E6F8, 0x05FAFE10);
	r1 = D(r1, s[0][0][2], 0xF90001E6, 0x03FE03FE, 0xFE03F9F3, 0xF2EBFF03);
	r2 = D(r2, s[0][0][2], 0xFE0506FB, 0xF708F704, 0xF8FB16FA, 0xFC031001);
	r3 = D(r3, s[0][0][2], 0xF502FFF9, 0xF2E519F4, 0xF6F9F8FE, 0xF2050EFB);
	r4 = D(r4, s[0][0][2], 0xEDFE1204, 0x010304FD, 0xE9F407F9, 0xFF0106F7);
	r5 = D(r5, s[0][0][2], 0xFF0A1104, 0x030F00FE, 0x03FFFC0E, 0x09FEEB0E);
	r6 = D(r6, s[0][0][2], 0xF4F10704, 0xEC0FF4E8, 0x0202F9ED, 0x02FF0506);
	r7 = D(r7, s[0][0][2], 0xF5070E05, 0x08FB0608, 0xF1FD080D, 0xF0031606);
	r0 = D(r0, s[0][1][0], 0x06D5D105, 0xFCF9F603, 0xF9EABE16, 0xFF000106);
	r1 = D(r1, s[0][1][0], 0xFC02EF09, 0xF803FD04, 0xE902F209, 0xF4EBB203);
	r2 = D(r2, s[0][1][0], 0xFFF7000A, 0xEEE9F302, 0xF9F6ED07, 0x0404FF09);
	r3 = D(r3, s[0][1][0], 0xFBFEF0F4, 0xD8E4F8F5, 0x06FB0100, 0x03F704FE);
	r4 = D(r4, s[0][1][0], 0xF80FF40C, 0x0202FB00, 0x02F6EF04, 0xEE0BF110);
	r5 = D(r5, s[0][1][0], 0x06FFFA00, 0xF6F4F802, 0x04FE0102, 0x03F0DC06);
	r6 = D(r6, s[0][1][0], 0xF0FDE8FD, 0xF5FDE80C, 0x02FFF3EE, 0x080BF602);
	r7 = D(r7, s[0][1][0], 0x06EB04F6, 0x09FB05F8, 0xF405050B, 0x06F409FC);
	r0 = D(r0, s[0][1][1], 0xF601F8FB, 0x03EEFF05, 0x1AB60717, 0x0C01FCF8);
	r1 = D(r1, s[0][1][1], 0x0C061207, 0x03F8FE00, 0xEAD60AF4, 0x03E2F909);
	r2 = D(r2, s[0][1][1], 0xFFFB030F, 0xFCD40300, 0xF9F70704, 0xFAFBEA17);
	r3 = D(r3, s[0][1][1], 0xFF100300, 0xE703FE01, 0xF6FEF802, 0x01080209);
	r4 = D(r4, s[0][1][1], 0x08EFFF00, 0x09F3FF02, 0x06F206FF, 0x130000FB);
	r5 = D(r5, s[0][1][1], 0x0F04FB0B, 0xF8FAFEFC, 0xEC04FE0F, 0xF5E30218);
	r6 = D(r6, s[0][1][1], 0x03FDF410, 0xC412050C, 0xFFFBF1F6, 0x0A060203);
	r7 = D(r7, s[0][1][1], 0x10080409, 0xF302FC0A, 0xE10407EE, 0x03090606);
	r0 = D(r0, s[0][1][2], 0x01DD0B12, 0x02F908F6, 0xFCEBF4E9, 0xFCFFFD0D);
	r1 = D(r1, s[0][1][2], 0xF8F9F30F, 0x02FE0301, 0x01CE14F5, 0x0DD5F004);
	r2 = D(r2, s[0][1][2], 0x0CFFF2FA, 0xFDEE1106, 0xFFFB0301, 0x03F8FD01);
	r3 = D(r3, s[0][1][2], 0x01FB0CFC, 0xFE0EFDFA, 0xFBEDFAFF, 0x04F60701);
	r4 = D(r4, s[0][1][2], 0xF9030208, 0xFD0001FF, 0xF2FCE9FB, 0xF31006FC);
	r5 = D(r5, s[0][1][2], 0xFEF20107, 0xFAF2FCFF, 0x05FDFA08, 0x03F0F901);
	r6 = D(r6, s[0][1][2], 0x0FF1FEF7, 0xEBE20F14, 0x02E7F4FA, 0xF0FC0700);
	r7 = D(r7, s[0][1][2], 0xEFCF2102, 0x0A07FCFB, 0xFCFC0AD5, 0xF7FA1505);
	r0 = D(r0, s[0][2][0], 0xF3D0E301, 0xF105FF00, 0xEC17D603, 0xFFF60502);
	r1 = D(r1, s[0][2][0], 0xF8FA0308, 0xFFFFFD00, 0x000704FA, 0x13E18B1A);
	r2 = D(r2, s[0][2][0], 0xFAF3F402, 0xFE0102FB, 0xFBF60303, 0x10FFD109);
	r3 = D(r3, s[0][2][0], 0xFDFDFA02, 0x0EFE0906, 0x0A02FA00, 0x09050208);
	r4 = D(r4, s[0][2][0], 0xF703EE03, 0xFA020103, 0xF4F7F5FA, 0xF90CEAF5);
	r5 = D(r5, s[0][2][0], 0x0006F502, 0xFCFDF3FA, 0x06F90803, 0x02F6DFF9);
	r6 = D(r6, s[0][2][0], 0xFEFDFCF8, 0x0CFD0904, 0xF4EBFE06, 0xFEF7F4F7);
	r7 = D(r7, s[0][2][0], 0xF50BF70C, 0xFCF902FB, 0xF00301C1, 0xFB080B08);
	r0 = D(r0, s[0][2][1], 0x0EDEDF03, 0xF4FFFB00, 0x0FBEFA01, 0xFDFF0009);
	r1 = D(r1, s[0][2][1], 0xF7F1F2FD, 0x0400FDFB, 0x0DFB0004, 0xE7F6F9E4);
	r2 = D(r2, s[0][2][1], 0xF6010708, 0x09EFFC02, 0x00050504, 0x05FEFF08);
	r3 = D(r3, s[0][2][1], 0xFDEFF700, 0x0208FBFA, 0xFEFF0102, 0xFDEFF503);
	r4 = D(r4, s[0][2][1], 0xF5FE1001, 0xFD050004, 0xFBFAF9F9, 0x0D0113ED);
	r5 = D(r5, s[0][2][1], 0xFA020008, 0xF0FEF802, 0x09FEFDFE, 0xFF08EC0F);
	r6 = D(r6, s[0][2][1], 0xF7FB04FA, 0xF9FF1302, 0xFB09FC03, 0x01070007);
	r7 = D(r7, s[0][2][1], 0xF9FEFA07, 0x1000F301, 0x10FD0AF5, 0x02F0F2F7);
	r0 = D(r0, s[0][2][2], 0xF9DB0105, 0x03F003FD, 0x00ED07E7, 0x01FA0107);
	r1 = D(r1, s[0][2][2], 0xF9E701F8, 0x02FD0002, 0xFC0102FD, 0xFFD3EC0F);
	r2 = D(r2, s[0][2][2], 0xFF010005, 0xF90103E4, 0xFDFCFE02, 0xEFFAE7FF);
	r3 = D(r3, s[0][2][2], 0xF4F60EF9, 0xFDFAFFFB, 0xFDFD0104, 0xFE090104);
	r4 = D(r4, s[0][2][2], 0xFFFF0005, 0xFE04FD03, 0xFEF80503, 0xF4100CFA);
	r5 = D(r5, s[0][2][2], 0xFA020008, 0xF6F60DF7, 0x07F80106, 0x02FC0604);
	r6 = D(r6, s[0][2][2], 0x02FC05FD, 0x04F506FD, 0x01FC00FC, 0xFE0404FD);
	r7 = D(r7, s[0][2][2], 0xFDFA0E00, 0x0200FAF3, 0x0FFCFB03, 0x01F40F16);
	r0 = D(r0, s[1][0][0], 0x02EBFC06, 0x0306F00D, 0x0FAB03F1, 0x05FC03FC);
	r1 = D(r1, s[1][0][0], 0x07FE0A07, 0x0000FE05, 0x09FEE400, 0xE2C5FDE9);
	r2 = D(r2, s[1][0][0], 0x0502FF05, 0xFEFCFC04, 0xFC01F70A, 0xF00207EC);
	r3 = D(r3, s[1][0][0], 0x01FE0201, 0x00FBF306, 0x0102FF03, 0x0201FFFE);
	r4 = D(r4, s[1][0][0], 0xFDF6D6EE, 0x0200FD06, 0xFFFC0408, 0x0AF90CF6);
	r5 = D(r5, s[1][0][0], 0x0403FA0A, 0x060701FD, 0x080200FD, 0x02F00B0A);
	r6 = D(r6, s[1][0][0], 0xFD0417F4, 0xE40CC602, 0xF30404F8, 0x01FCF906);
	r7 = D(r7, s[1][0][0], 0xFDF7FEF9, 0x07FF060E, 0xFD071A0C, 0x0CF9FBFA);
	r0 = D(r0, s[1][0][1], 0x160709ED, 0x05FFE109, 0xEEFB14FE, 0x05FD0CF9);
	r1 = D(r1, s[1][0][1], 0x0806F708, 0xF904FB01, 0xF6FD8103, 0x1C03E000);
	r2 = D(r2, s[1][0][1], 0xF907FB09, 0xF7F4F803, 0x0803FA01, 0xFE0BF908);
	r3 = D(r3, s[1][0][1], 0x0000F6F3, 0x0510EFF1, 0x10FF010C, 0xFEFEEFF8);
	r4 = D(r4, s[1][0][1], 0xFB0CE205, 0xF907FA09, 0x0B07EE08, 0x0901FDF0);
	r5 = D(r5, s[1][0][1], 0xEF05EA10, 0xFE0107FB, 0x0DFBF8FC, 0xFA0B00F4);
	r6 = D(r6, s[1][0][1], 0xF8FAF806, 0xF1EFCF02, 0xFD0206F8, 0x09010FE4);
	r7 = D(r7, s[1][0][1], 0xFAF7B3F8, 0xF7FFED05, 0xFC0CF3F8, 0x0A01ECF8);
	r0 = D(r0, s[1][0][2], 0xFEFDFC0C, 0x1200FC05, 0xFFE4F805, 0xFDFE00FA);
	r1 = D(r1, s[1][0][2], 0x01F6E90D, 0xFE040104, 0xFCFAEF02, 0xFFEAF9FB);
	r2 = D(r2, s[1][0][2], 0xF70D0404, 0xF6F6FF03, 0xF80AF701, 0xF9150DFC);
	r3 = D(r3, s[1][0][2], 0xFFFE0002, 0xFF12F304, 0x0204FFFF, 0x0004FEFA);
	r4 = D(r4, s[1][0][2], 0x0705EE03, 0xFF00FE02, 0xFAFAFE02, 0x00020C05);
	r5 = D(r5, s[1][0][2], 0x0006FF01, 0xFBF5FE01, 0x0BFA00FA, 0xFF010215);
	r6 = D(r6, s[1][0][2], 0x0DF906FD, 0xFDFDB6F2, 0xFFF3F103, 0x1005FA00);
	r7 = D(r7, s[1][0][2], 0xE2F2C003, 0xFFFCF5FB, 0x021CD304, 0x0202F8F9);
	r0 = D(r0, s[1][1][0], 0x090A100C, 0x00F6F7F9, 0xF2CD0BFF, 0xFDF8FCFC);
	r1 = D(r1, s[1][1][0], 0xFC08090E, 0xFBFF02FD, 0xFAFB01F2, 0xF18127D1);
	r2 = D(r2, s[1][1][0], 0xFCFC0907, 0x0401F302, 0xFFFDFCFE, 0xE90BFBF9);
	r3 = D(r3, s[1][1][0], 0x0600FA07, 0x0205EEEA, 0x0A060A0B, 0x07040109);
	r4 = D(r4, s[1][1][0], 0x0C1AF3FB, 0x0303FC0B, 0x0A0E0112, 0xF8D4E5E8);
	r5 = D(r5, s[1][1][0], 0x0608FF09, 0xFFF2FA05, 0x090BF9FF, 0x05000009);
	r6 = D(r6, s[1][1][0], 0xF3F8FEF7, 0xEF061605, 0x0700F4FB, 0x02ECF6F0);
	r7 = D(r7, s[1][1][0], 0xF6F7E9FB, 0x1907FC08, 0xFEFFBDFB, 0xFF07FDFE);
	r0 = D(r0, s[1][1][1], 0x03DE0B06, 0x0B01B8E5, 0x091AEDFC, 0x1100F606);
	r1 = D(r1, s[1][1][1], 0xFCFD07FA, 0x0001FEFC, 0x0207E0CC, 0x11F70011);
	r2 = D(r2, s[1][1][1], 0xEEF5FFEF, 0x0F10D9F5, 0x0403F602, 0xDCEEF705);
	r3 = D(r3, s[1][1][1], 0xEF0AEFFC, 0x01F2ED00, 0xF2080D01, 0xFBFCF0EF);
	r4 = D(r4, s[1][1][1], 0x0705DCF0, 0x0406F704, 0xFE0602F0, 0xE5EC09EF);
	r5 = D(r5, s[1][1][1], 0xF912EDFC, 0x050904EB, 0xFFF607FE, 0x1207FF04);
	r6 = D(r6, s[1][1][1], 0x1703F7FE, 0xE61CE2FB, 0x14FFF1FC, 0xFD0FFB07);
	r7 = D(r7, s[1][1][1], 0xE8FBBAF6, 0xEBF108F0, 0x0BF20316, 0xFBF3F602);
	r0 = D(r0, s[1][1][2], 0x01FA00FB, 0x0D03EEFD, 0xF9E3F001, 0x0603FE03);
	r1 = D(r1, s[1][1][2], 0xFC190AEE, 0xFE0402FC, 0x0D0FF5FB, 0x0FC90CFC);
	r2 = D(r2, s[1][1][2], 0x050FF702, 0xFA11E6F8, 0xFB090101, 0x0FFBFC0B);
	r3 = D(r3, s[1][1][2], 0xFDFEE003, 0x06FF0401, 0x0C01FD06, 0x0B07FCF7);
	r4 = D(r4, s[1][1][2], 0x0B05000B, 0x00030002, 0x0208F909, 0x22E7030E);
	r5 = D(r5, s[1][1][2], 0x0307F603, 0x0D02F1F8, 0xFFFDFEFF, 0xDD040502);
	r6 = D(r6, s[1][1][2], 0x0F02FCF5, 0xF829E9E7, 0x0700F508, 0x0FFD0107);
	r7 = D(r7, s[1][1][2], 0x07EAE4F5, 0x05EF0400, 0x0CFD1C0A, 0x1700EDED);
	r0 = D(r0, s[1][2][0], 0x0A1BF2F5, 0xFDFE0B00, 0x0A010FE9, 0xFFFE02F7);
	r1 = D(r1, s[1][2][0], 0xFCF00310, 0xFCFF05FB, 0x01FE030D, 0xFF81EFE4);
	r2 = D(r2, s[1][2][0], 0xFD05030C, 0x0701FAFC, 0x0D03FF02, 0xFFEF05FD);
	r3 = D(r3, s[1][2][0], 0x0105FB02, 0x0901FEFB, 0x0003FE06, 0xFFFF0002);
	r4 = D(r4, s[1][2][0], 0x0800FD04, 0xFE020305, 0xFC05F711, 0x06E6EAC9);
	r5 = D(r5, s[1][2][0], 0x06090508, 0x0A090306, 0x01FAFF05, 0xF4F7F3FB);
	r6 = D(r6, s[1][2][0], 0x06F90507, 0xFEE9F90F, 0xF3EFF5FC, 0x0C0A02F5);
	r7 = D(r7, s[1][2][0], 0x0DF4DA0D, 0x07060004, 0xFEF1E9E9, 0x00F60708);
	r0 = D(r0, s[1][2][1], 0x02F50FDE, 0xF006F9F7, 0x018EE9E5, 0xFAFA04F7);
	r1 = D(r1, s[1][2][1], 0xF9FC05F4, 0xFC040300, 0xFCFB02FC, 0x18F6EBEF);
	r2 = D(r2, s[1][2][1], 0xFF020301, 0xFA03FBF4, 0x04050403, 0xFFFFF900);
	r3 = D(r3, s[1][2][1], 0xF706F5FF, 0x06010203, 0xFEF60407, 0x0104FAF2);
	r4 = D(r4, s[1][2][1], 0x00FDF9F1, 0x0004FCF9, 0x010306F7, 0xEA1BF0ED);
	r5 = D(r5, s[1][2][1], 0xF905F9FD, 0xFAFD0DFF, 0x02F807F9, 0x0E0BF900);
	r6 = D(r6, s[1][2][1], 0xFBFBF100, 0x1000080F, 0x0201EF17, 0xF7F6FFFE);
	r7 = D(r7, s[1][2][1], 0xF8FCE9EF, 0x10FD0B08, 0xFD200FF1, 0xFCF6F8E6);
	r0 = D(r0, s[1][2][2], 0x0BD1E9F3, 0xFD0CFA03, 0xF425FB0A, 0xFEFE04FD);
	r1 = D(r1, s[1][2][2], 0x02EBECE8, 0x0203FFFE, 0xFE020604, 0x0307FFE9);
	r2 = D(r2, s[1][2][2], 0xFB03F8FD, 0x05FCF806, 0x04FD0201, 0x000EFC0D);
	r3 = D(r3, s[1][2][2], 0x0500EE09, 0x02FFF9FB, 0x0302FBFE, 0x04FE0400);
	r4 = D(r4, s[1][2][2], 0x04FB0AFF, 0x0402FF00, 0xFFFAEE0C, 0x21ED0002);
	r5 = D(r5, s[1][2][2], 0xFD03FD06, 0xFAFB0003, 0xFE0202FA, 0x0FFDEF0A);
	r6 = D(r6, s[1][2][2], 0x07F9FA03, 0x10E8F9F6, 0xF8F800FC, 0xFF03F7FD);
	r7 = D(r7, s[1][2][2], 0xF6F7E70B, 0xFEFB0400, 0x1E06E4FC, 0x0BF7F601);
	s[0][0][0] = G[2][xy.y+0][xy.x+0]; s[0][0][1] = G[2][xy.y+0][xy.x+1];
	s[0][0][2] = G[2][xy.y+0][xy.x+2]; s[0][1][0] = G[2][xy.y+1][xy.x+0];
	s[0][1][1] = G[2][xy.y+1][xy.x+1]; s[0][1][2] = G[2][xy.y+1][xy.x+2];
	s[0][2][0] = G[2][xy.y+2][xy.x+0]; s[0][2][1] = G[2][xy.y+2][xy.x+1];
	s[0][2][2] = G[2][xy.y+2][xy.x+2]; s[1][0][0] = G[3][xy.y+0][xy.x+0];
	s[1][0][1] = G[3][xy.y+0][xy.x+1]; s[1][0][2] = G[3][xy.y+0][xy.x+2];
	s[1][1][0] = G[3][xy.y+1][xy.x+0]; s[1][1][1] = G[3][xy.y+1][xy.x+1];
	s[1][1][2] = G[3][xy.y+1][xy.x+2]; s[1][2][0] = G[3][xy.y+2][xy.x+0];
	s[1][2][1] = G[3][xy.y+2][xy.x+1]; s[1][2][2] = G[3][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x0D1AFB10, 0xF90FF400, 0xF320FBEB, 0xFDFC05F8);
	r1 = D(r1, s[0][0][0], 0x0711FDF8, 0x03F702FE, 0xF208FDF5, 0x08FD0DDE);
	r2 = D(r2, s[0][0][0], 0x05FDF6FA, 0xFD14F711, 0xF5F4FCFB, 0x080FD7FD);
	r3 = D(r3, s[0][0][0], 0x0109FFFF, 0xDEF6FDFA, 0x0BEEFE00, 0x03050000);
	r4 = D(r4, s[0][0][0], 0xF415F201, 0x05F302FF, 0xF81903F3, 0xF619F5F1);
	r5 = D(r5, s[0][0][0], 0x0105FA00, 0x0306F606, 0x00EF04F6, 0x110B05E0);
	r6 = D(r6, s[0][0][0], 0xFD15FBFA, 0xFCF6F4F5, 0x0403F2FE, 0xF905F3F9);
	r7 = D(r7, s[0][0][0], 0x0C0D10FD, 0x00F7FD00, 0xF2FF0D04, 0x04F6000A);
	r0 = D(r0, s[0][0][1], 0xF01302EC, 0xFE05EB08, 0x0407E211, 0xFBE7FEFE);
	r1 = D(r1, s[0][0][1], 0xFA19F8F1, 0xFB0700FB, 0xFF11EEFF, 0xF031E906);
	r2 = D(r2, s[0][0][1], 0xFCFAFBFE, 0x0015F20B, 0xFCFEEBFB, 0xEA23FFF8);
	r3 = D(r3, s[0][0][1], 0x06120002, 0x07FDECFD, 0xFDF802FE, 0xFE0E02FD);
	r4 = D(r4, s[0][0][1], 0xFD09F3F6, 0x0405FFFE, 0xFD16F202, 0xF70AFFEF);
	r5 = D(r5, s[0][0][1], 0x0613FCF7, 0xFB0BF407, 0x00F203FA, 0xFFFF13C4);
	r6 = D(r6, s[0][0][1], 0xF924EEFB, 0x09B7EC03, 0x07F1FEFC, 0xF206FAF3);
	r7 = D(r7, s[0][0][1], 0x0B21DE09, 0x03FD02FF, 0xE9EE00F2, 0x081DFB00);
	r0 = D(r0, s[0][0][2], 0xF911F8FF, 0x010FFA00, 0x13FC01FF, 0x06F803FF);
	r1 = D(r1, s[0][0][2], 0xF20C02FB, 0xFBFF01FE, 0x0014F201, 0x0C011205);
	r2 = D(r2, s[0][0][2], 0x03E807FC, 0xFC13F204, 0x00080302, 0xFE0B07F2);
	r3 = D(r3, s[0][0][2], 0x0814FB08, 0x09FDF8FD, 0x04F80B00, 0xF8FEFFFC);
	r4 = D(r4, s[0][0][2], 0xFA1109FE, 0xFEFD0600, 0x09DA1100, 0x07E10405);
	r5 = D(r5, s[0][0][2], 0xF9FE07FA, 0x060F07FD, 0x03F9FEFA, 0xF6F9FEFB);
	r6 = D(r6, s[0][0][2], 0x01FBFCFA, 0x00F88908, 0xFEFC07F6, 0xF7000600);
	r7 = D(r7, s[0][0][2], 0x0817D301, 0x09FAFDF8, 0x0DEDDFFE, 0xF708FEFA);
	r0 = D(r0, s[0][1][0], 0xFF00ECF8, 0x0E05F6F7, 0xFB10050F, 0xF60103FA);
	r1 = D(r1, s[0][1][0], 0xFD07FBF7, 0xFFF6FE0B, 0x0D0701F6, 0x111FF8D8);
	r2 = D(r2, s[0][1][0], 0x04070501, 0x0106F5F6, 0xF601F70D, 0x1546EC8A);
	r3 = D(r3, s[0][1][0], 0x0313F0FE, 0x050CF817, 0x02FEFDF5, 0xFE05FD00);
	r4 = D(r4, s[0][1][0], 0xECF8FAEC, 0x00F0FD08, 0xFB0C09E3, 0x0828F206);
	r5 = D(r5, s[0][1][0], 0x05FAFFF2, 0xFE08F901, 0xFDF5FEF7, 0xEC1CFBEE);
	r6 = D(r6, s[0][1][0], 0x0504FD10, 0x09F3FB06, 0x06EDFBF2, 0x020DF810);
	r7 = D(r7, s[0][1][0], 0xD508F1E5, 0x0E0EFEF0, 0xDEF6D2F1, 0x0500F2F2);
	r0 = D(r0, s[0][1][1], 0xFA3210FE, 0x03FFFCEC, 0xE7EBF2E4, 0xF8F4FF05);
	r1 = D(r1, s[0][1][1], 0x041906EE, 0x00FF0004, 0x0717F5F2, 0xDB13E211);
	r2 = D(r2, s[0][1][1], 0xFC17FEED, 0xED0DE60B, 0xFEF80106, 0xF6FAFDF4);
	r3 = D(r3, s[0][1][1], 0xF40ADDF3, 0xFFEAFF06, 0x000F0902, 0xFE0EF6FE);
	r4 = D(r4, s[0][1][1], 0xF408F905, 0x01FFF905, 0xFE1FEBFC, 0xF7FBE7DD);
	r5 = D(r5, s[0][1][1], 0xFD08E4EF, 0xFB19F901, 0x00F90A02, 0xF7F8FFD1);
	r6 = D(r6, s[0][1][1], 0xED11F4E1, 0x1705F705, 0xF3FC0103, 0x07E7F7F5);
	r7 = D(r7, s[0][1][1], 0xA901EB10, 0x05FC1301, 0xE71100FF, 0xFF22FCFC);
	r0 = D(r0, s[0][1][2], 0x0F00FE09, 0x01FEECF5, 0x0413FAEC, 0x0AFCFCFC);
	r1 = D(r1, s[0][1][2], 0x011005FD, 0x010200FD, 0xF80AFBF8, 0xFB0BF2F7);
	r2 = D(r2, s[0][1][2], 0xF400FEFD, 0xFB07FE0D, 0xFE0FFFFF, 0x0E080B05);
	r3 = D(r3, s[0][1][2], 0xFF12F7FC, 0xF6000602, 0x060903F7, 0x03FC03F3);
	r4 = D(r4, s[0][1][2], 0x08FE09F8, 0x03FD07FF, 0x03F70D00, 0xF41013FA);
	r5 = D(r5, s[0][1][2], 0x08FD0E00, 0x0C04F5FD, 0xFE00F701, 0x0111F8FC);
	r6 = D(r6, s[0][1][2], 0xF5FAEC0A, 0xEB0EEAE8, 0x0DCD15F7, 0xFB0707FD);
	r7 = D(r7, s[0][1][2], 0xE9F4FEF8, 0xE503F4FC, 0x00F8F608, 0x060BFDFA);
	r0 = D(r0, s[0][2][0], 0xFCFE06FC, 0x09FC0108, 0xF20AF503, 0xFD0608FC);
	r1 = D(r1, s[0][2][0], 0x1104F505, 0x03000405, 0x03FCF408, 0x20FA0403);
	r2 = D(r2, s[0][2][0], 0xFF01F7FF, 0xF804F405, 0xFDFCFC04, 0x1106E70E);
	r3 = D(r3, s[0][2][0], 0xF8F5F107, 0xF405FDF0, 0x0702F703, 0xFF06FBF6);
	r4 = D(r4, s[0][2][0], 0xF3FF010E, 0x02FC040E, 0x060804FF, 0x0013F902);
	r5 = D(r5, s[0][2][0], 0xFFFDF401, 0x04F2F0F2, 0xFA0704FB, 0x08F2FB09);
	r6 = D(r6, s[0][2][0], 0x01FD0304, 0xF7C2F1FF, 0xEC0C29F9, 0xFFFCF303);
	r7 = D(r7, s[0][2][0], 0x0102ECFB, 0x0905F5FD, 0x0B02E5FA, 0x05FFEFEF);
	r0 = D(r0, s[0][2][1], 0xF7FEE1F4, 0x06050008, 0x1A06F5E7, 0xFEFF00FA);
	r1 = D(r1, s[0][2][1], 0x02090504, 0xFD04FF02, 0xFBFCF50B, 0xE01B0810);
	r2 = D(r2, s[0][2][1], 0xFEFC0802, 0xF5F2F10C, 0xF8F5FEFE, 0x010AFDF9);
	r3 = D(r3, s[0][2][1], 0xF5E0F30F, 0xF8E703F9, 0x07010100, 0xFA000308);
	r4 = D(r4, s[0][2][1], 0x01F206FB, 0x00FF0601, 0xF400F805, 0xE3F4F8FA);
	r5 = D(r5, s[0][2][1], 0xFCFC090F, 0x07F4D4EA, 0x0204F9FD, 0x0EFEF115);
	r6 = D(r6, s[0][2][1], 0x0910FB0E, 0x01ECED03, 0x10FC1CF2, 0xF5FAFE08);
	r7 = D(r7, s[0][2][1], 0xE7FCF500, 0x06EAEDE8, 0xDFEFF10F, 0xFE10FC02);
	r0 = D(r0, s[0][2][2], 0xFB0EF3FD, 0x0606FB00, 0xFBF9F6FE, 0x0602FEFF);
	r1 = D(r1, s[0][2][2], 0xF605FE09, 0xF8FFFFFF, 0xFE03F805, 0xF70509F1);
	r2 = D(r2, s[0][2][2], 0xFD09FDFA, 0xF401F9FD, 0xFAFB0602, 0xFCF9F503);
	r3 = D(r3, s[0][2][2], 0xFE03F7FF, 0xFAF107FB, 0x05050AF5, 0xFDF4F7FC);
	r4 = D(r4, s[0][2][2], 0x010F01FB, 0xFEFD0501, 0x0EFA06F5, 0x0AFC0202);
	r5 = D(r5, s[0][2][2], 0x04F906F8, 0xEFFBFEF9, 0x04FEFE00, 0xFDFEE90D);
	r6 = D(r6, s[0][2][2], 0xFAFFED05, 0x01DFFA19, 0x140909F3, 0x0CFD02FA);
	r7 = D(r7, s[0][2][2], 0xFC03F307, 0xF105F403, 0xFD07F80C, 0xF3F1F50E);
	r0 = D(r0, s[1][0][0], 0xEEF31602, 0xFF020AFF, 0xF6F809EF, 0xFD011006);
	r1 = D(r1, s[1][0][0], 0x030012F3, 0x010606FE, 0xF9F6F9FF, 0x140C270C);
	r2 = D(r2, s[1][0][0], 0x03FC02FD, 0xFBFB08FC, 0xFCF70401, 0x08F7FAF6);
	r3 = D(r3, s[1][0][0], 0x05FC0909, 0xEBF5F405, 0xFFFCF9F8, 0x040105FC);
	r4 = D(r4, s[1][0][0], 0x03040CFF, 0x04FFFC00, 0x03060501, 0xF9FE07F6);
	r5 = D(r5, s[1][0][0], 0x0601FBFB, 0x05FE0702, 0xFEFD0406, 0xF906EBCD);
	r6 = D(r6, s[1][0][0], 0xFF0308FA, 0xEF0EDF02, 0xEFFBF6F9, 0xEFFC0EFB);
	r7 = D(r7, s[1][0][0], 0x08ED0705, 0x08070108, 0xF3F50FF9, 0xFAF812FF);
	r0 = D(r0, s[1][0][1], 0x03FDF4EC, 0xFC0D0BFB, 0x0304F303, 0xFAFDFB09);
	r1 = D(r1, s[1][0][1], 0x04050FF3, 0x07FE0601, 0xF9FE0803, 0x17E7FCE3);
	r2 = D(r2, s[1][0][1], 0x080D0AFD, 0x0B020303, 0x00EF04FC, 0x0C0317DF);
	r3 = D(r3, s[1][0][1], 0xFFF50500, 0xF8E804FB, 0xFF040BFC, 0x0803FB00);
	r4 = D(r4, s[1][0][1], 0x08E9FCFF, 0x02030101, 0x00FD09F2, 0xFCF7F0F3);
	r5 = D(r5, s[1][0][1], 0x09FF09F7, 0xFBFD01FC, 0x0202F2FF, 0x07FFACE5);
	r6 = D(r6, s[1][0][1], 0x040907FA, 0xEFFDD7ED, 0xEEF6F0F0, 0xFAFFF605);
	r7 = D(r7, s[1][0][1], 0xED01F8EB, 0x05FE0A00, 0xE702F8F5, 0xFAFD0803);
	r0 = D(r0, s[1][0][2], 0x0FEC0BEF, 0xFE03FEFA, 0xFE020FFD, 0xFD010AFC);
	r1 = D(r1, s[1][0][2], 0x030107F3, 0x060203FD, 0x0703F202, 0x08F7EAFB);
	r2 = D(r2, s[1][0][2], 0xFFFF03FD, 0xFF09FAFC, 0x0BFC08FE, 0xFFFF05D3);
	r3 = D(r3, s[1][0][2], 0xFBF004FE, 0x09F500FE, 0xFF030001, 0x07FCFDFB);
	r4 = D(r4, s[1][0][2], 0x08F6FDFD, 0x020105FC, 0xFFFBFF07, 0x02EC040F);
	r5 = D(r5, s[1][0][2], 0x03FE07F9, 0x000205F8, 0xFC0C0A05, 0x011418CA);
	r6 = D(r6, s[1][0][2], 0x010907FF, 0x070DF4F7, 0x0C0306FF, 0x09FB0504);
	r7 = D(r7, s[1][0][2], 0xFCFE1A00, 0x020CF800, 0xF8FB0AFD, 0x0108FCF2);
	r0 = D(r0, s[1][1][0], 0xF4FB01F8, 0x010F0004, 0xEEF9FF06, 0x01FE0B00);
	r1 = D(r1, s[1][1][0], 0xF40A18EE, 0xFD1006FF, 0xE9170105, 0xE2FFEB12);
	r2 = D(r2, s[1][1][0], 0x020801FF, 0xE6FDFF0C, 0x03030A04, 0xFAEEBCD4);
	r3 = D(r3, s[1][1][0], 0xFC00FA04, 0xEE0C0A04, 0x020100F7, 0x010501FB);
	r4 = D(r4, s[1][1][0], 0xF6ED0008, 0x020EFFFC, 0xFD06FE06, 0xD9FAFEF8);
	r5 = D(r5, s[1][1][0], 0x04F21000, 0x05FA0800, 0x05021106, 0xF906F3D7);
	r6 = D(r6, s[1][1][0], 0x08F00B00, 0x020EFBF7, 0xF205F40C, 0xD6F5FC05);
	r7 = D(r7, s[1][1][0], 0xE804E404, 0x04FE0BFF, 0xC3F91913, 0x0805EFF6);
	r0 = D(r0, s[1][1][1], 0xED07FD18, 0xF4FBEB05, 0x130602F9, 0x01050101);
	r1 = D(r1, s[1][1][1], 0x83FE3A0A, 0x002714FD, 0xED1EF10D, 0x06DA9B12);
	r2 = D(r2, s[1][1][1], 0x000E11F8, 0xFAFAF809, 0xE9070E06, 0xFEDF0DE7);
	r3 = D(r3, s[1][1][1], 0xFF15B305, 0xD60CFC04, 0xF5041707, 0xEDED0B08);
	r4 = D(r4, s[1][1][1], 0xE6FDF1FE, 0x03F90004, 0xF1FBF508, 0xE5DF060B);
	r5 = D(r5, s[1][1][1], 0xFFD90508, 0xEC001501, 0xF5ED03FC, 0x09E21CF7);
	r6 = D(r6, s[1][1][1], 0xF401C2FD, 0x0809EC14, 0xEE04CA08, 0xE007F40D);
	r7 = D(r7, s[1][1][1], 0xD0EA131C, 0xDDFE05F7, 0xD8F0F40B, 0xEFE903F9);
	r0 = D(r0, s[1][1][2], 0xFAF9FC03, 0x08F6FD02, 0x00001DF8, 0xFA06FE03);
	r1 = D(r1, s[1][1][2], 0x050B1AF2, 0x020507FE, 0xF7080803, 0x2BF11CFD);
	r2 = D(r2, s[1][1][2], 0x0402F408, 0x05FF0FF9, 0x03FD0505, 0x02F70CE8);
	r3 = D(r3, s[1][1][2], 0x0604FA06, 0x04FE030C, 0xFF05FF0A, 0x0704FF02);
	r4 = D(r4, s[1][1][2], 0xFE070C0E, 0x0204FEFE, 0xFF090B03, 0x03F505F3);
	r5 = D(r5, s[1][1][2], 0x00FB0A02, 0xFCFD0CF5, 0xFF0203FC, 0x00F0F0F5);
	r6 = D(r6, s[1][1][2], 0x00150004, 0xED0504EF, 0x04F70002, 0x03F7FCF8);
	r7 = D(r7, s[1][1][2], 0xCBF8FAF9, 0x130CF603, 0xC4F7F5FB, 0x0BF907FC);
	r0 = D(r0, s[1][2][0], 0x04081803, 0xFD000206, 0xF6010413, 0x05FEFE06);
	r1 = D(r1, s[1][2][0], 0xF7F71FEF, 0xFAF6F7FF, 0xFE060304, 0xD1F8FF29);
	r2 = D(r2, s[1][2][0], 0xFDFDF4FC, 0x0E0EFC03, 0xFAED0305, 0xFEF40CE3);
	r3 = D(r3, s[1][2][0], 0x04090B04, 0xF008FE09, 0xFB0AFFF9, 0xFE050406);
	r4 = D(r4, s[1][2][0], 0xFEFC1E0A, 0x01FF0000, 0xFB070504, 0xBFE9130B);
	r5 = D(r5, s[1][2][0], 0xFDFFFE03, 0xFB07FC04, 0x04080702, 0x0C1109DE);
	r6 = D(r6, s[1][2][0], 0x03FF00FE, 0xF1091700, 0x0407E700, 0xDCEB0C0F);
	r7 = D(r7, s[1][2][0], 0xCEF6031C, 0xFE05DC05, 0xD0E8FFFA, 0xFA0F0706);
	r0 = D(r0, s[1][2][1], 0xDA02030B, 0xFA0E0202, 0xF301EEF8, 0x02FF02FB);
	r1 = D(r1, s[1][2][1], 0xF7F022FA, 0xFB07FB01, 0xEC00FF04, 0xF3CAD607);
	r2 = D(r2, s[1][2][1], 0x000EFD02, 0xE0050602, 0xFFFCFBFF, 0xFFF6F3D5);
	r3 = D(r3, s[1][2][1], 0xE1161205, 0xFF02FC08, 0xF5F3FEFC, 0xECE9FC08);
	r4 = D(r4, s[1][2][1], 0xF7E90109, 0xFA080602, 0xEAFE0508, 0xECF3010B);
	r5 = D(r5, s[1][2][1], 0xF60B0909, 0xEA0F000D, 0xF917FE08, 0xFBFA0AE8);
	r6 = D(r6, s[1][2][1], 0xFEFDFD01, 0xEEEA000A, 0x0702090D, 0x00FCFC03);
	r7 = D(r7, s[1][2][1], 0xB3DC1114, 0xEBECAE02, 0xD4F1FB07, 0xC8F6FE10);
	r0 = D(r0, s[1][2][2], 0x12F9F1F4, 0x0003010C, 0xF9030909, 0x00010308);
	r1 = D(r1, s[1][2][2], 0xF0F30CFC, 0x05FB00FD, 0xFAF20405, 0xCD0202F9);
	r2 = D(r2, s[1][2][2], 0x020503FF, 0x0701FF03, 0xFFF9FEFF, 0x030004E7);
	r3 = D(r3, s[1][2][2], 0x070A0602, 0x0100FC07, 0xFBFA0600, 0xFAFBF701);
	r4 = D(r4, s[1][2][2], 0xF2FBFB01, 0x0303F9FD, 0x0301020A, 0x08F4FD09);
	r5 = D(r5, s[1][2][2], 0xF902FCFF, 0xFCF5F8FB, 0x0404FE04, 0x02F80DE5);
	r6 = D(r6, s[1][2][2], 0x02E90610, 0xE4EC1305, 0xFCFDFA00, 0x020008FD);
	r7 = D(r7, s[1][2][2], 0xEAFFF910, 0x09EBFBF7, 0xEEEE1908, 0xE0F4FE00);
	s[0][0][0] = G[4][xy.y+0][xy.x+0]; s[0][0][1] = G[4][xy.y+0][xy.x+1];
	s[0][0][2] = G[4][xy.y+0][xy.x+2]; s[0][1][0] = G[4][xy.y+1][xy.x+0];
	s[0][1][1] = G[4][xy.y+1][xy.x+1]; s[0][1][2] = G[4][xy.y+1][xy.x+2];
	s[0][2][0] = G[4][xy.y+2][xy.x+0]; s[0][2][1] = G[4][xy.y+2][xy.x+1];
	s[0][2][2] = G[4][xy.y+2][xy.x+2]; s[1][0][0] = G[5][xy.y+0][xy.x+0];
	s[1][0][1] = G[5][xy.y+0][xy.x+1]; s[1][0][2] = G[5][xy.y+0][xy.x+2];
	s[1][1][0] = G[5][xy.y+1][xy.x+0]; s[1][1][1] = G[5][xy.y+1][xy.x+1];
	s[1][1][2] = G[5][xy.y+1][xy.x+2]; s[1][2][0] = G[5][xy.y+2][xy.x+0];
	s[1][2][1] = G[5][xy.y+2][xy.x+1]; s[1][2][2] = G[5][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xFDF6E412, 0x06090700, 0xF1BCFDFC, 0xF813F918);
	r1 = D(r1, s[0][0][0], 0xFFF402F4, 0xFFF902FE, 0xFEF4F4FC, 0xC0120610);
	r2 = D(r2, s[0][0][0], 0xFCD9F8FF, 0xF9030405, 0xFD0711FD, 0xEDCFFCFB);
	r3 = D(r3, s[0][0][0], 0xF60A0204, 0xF2F411F1, 0x08F6FC00, 0xFBFDFE01);
	r4 = D(r4, s[0][0][0], 0xF700FD05, 0x02FF04FE, 0x0A05FC04, 0xA60509F8);
	r5 = D(r5, s[0][0][0], 0x00F4F100, 0x05FDFC00, 0xFB11F819, 0xFECDF5E3);
	r6 = D(r6, s[0][0][0], 0x0400E900, 0xC0F4F803, 0x02F20003, 0xDA0B04FD);
	r7 = D(r7, s[0][0][0], 0xEAFBF6F5, 0xF40A0011, 0x26060503, 0x0102F20D);
	r0 = D(r0, s[0][0][1], 0xFDF7FA09, 0x04050F08, 0xF4E8E201, 0xFD05FA19);
	r1 = D(r1, s[0][0][1], 0x09F90205, 0xFEFCFCFD, 0x04FF0602, 0xB5F8F3FB);
	r2 = D(r2, s[0][0][1], 0xFBF602FC, 0xFD05F402, 0xFDFBF4FF, 0xF3F30417);
	r3 = D(r3, s[0][0][1], 0xFDFF010F, 0xE7EDEFFD, 0xFC0103FF, 0xF70D01FD);
	r4 = D(r4, s[0][0][1], 0xFF0111FD, 0xFF0303FC, 0xF1040408, 0xEE0C030A);
	r5 = D(r5, s[0][0][1], 0xF90104FD, 0x030307FD, 0xFB090016, 0x04E91ED0);
	r6 = D(r6, s[0][0][1], 0xFF0BFD05, 0xEBFA370E, 0x06EA04FF, 0xDFD10EFA);
	r7 = D(r7, s[0][0][1], 0x0004ECF5, 0xFC0BFD0C, 0xEEF512FA, 0x020EFC06);
	r0 = D(r0, s[0][0][2], 0x00F7EDFB, 0x0401F808, 0xFFFA28EF, 0xFA03F710);
	r1 = D(r1, s[0][0][2], 0x09FFFFFB, 0xFFF707FD, 0x0205FB01, 0xD8F81B19);
	r2 = D(r2, s[0][0][2], 0x07DF06FC, 0x021200FC, 0xFAF70804, 0x07B002FF);
	r3 = D(r3, s[0][0][2], 0xFC07FD0C, 0xEBF81004, 0xFFFDFBFB, 0xFFF90605);
	r4 = D(r4, s[0][0][2], 0xF9DA0901, 0xFEFE01FF, 0xFFEE0607, 0x0FD4FF00);
	r5 = D(r5, s[0][0][2], 0xF6F60A05, 0x050002FB, 0xFC08FA15, 0xF9F8FCE2);
	r6 = D(r6, s[0][0][2], 0xFDFCFA0B, 0xFC1106FE, 0x0407FE06, 0x02DBF504);
	r7 = D(r7, s[0][0][2], 0x0F11ECE9, 0x0005FC07, 0x81DAF7F3, 0xFD080306);
	r0 = D(r0, s[0][1][0], 0x0C0FFBFC, 0xF6EAE801, 0x04D7CD06, 0xFC0CF318);
	r1 = D(r1, s[0][1][0], 0xF9ED0DFC, 0x01FAFEFB, 0xF3E5FAFD, 0xD3EDE8E9);
	r2 = D(r2, s[0][1][0], 0xFDE9FC01, 0x0801FA12, 0xFBEB03FB, 0x05D61502);
	r3 = D(r3, s[0][1][0], 0xFD021007, 0xFCEC100B, 0x020E0A01, 0xF90A05FE);
	r4 = D(r4, s[0][1][0], 0xD7F32DF9, 0x02F802FB, 0xFFF10307, 0xEEF8DB00);
	r5 = D(r5, s[0][1][0], 0xFAFB1403, 0xF309F100, 0xFE0BFD16, 0x03DA0DEA);
	r6 = D(r6, s[0][1][0], 0xF6FFE801, 0x03F91800, 0xFDF2FD02, 0xCFFCFEF8);
	r7 = D(r7, s[0][1][0], 0xC7130EF8, 0x0101FB0A, 0xC4FD0DFC, 0x07090903);
	r0 = D(r0, s[0][1][1], 0xFCDDD21B, 0x00EFF807, 0xEC11EC01, 0xFDFEEF1E);
	r1 = D(r1, s[0][1][1], 0xEA06CE03, 0xFEFA09FC, 0x10E3F7F5, 0xF7060FFD);
	r2 = D(r2, s[0][1][1], 0xF4FC0907, 0xF0F21D06, 0x01E110FE, 0xF7EDD805);
	r3 = D(r3, s[0][1][1], 0xF5FD1D0E, 0xF4E40B01, 0x0301FCFE, 0xDAF40B04);
	r4 = D(r4, s[0][1][1], 0xDFE210F4, 0xFFFAFCFB, 0xF6F60503, 0x00170DF7);
	r5 = D(r5, s[0][1][1], 0xF7F71308, 0xF7EFEB08, 0xFFFDF10B, 0xFDF40FFF);
	r6 = D(r6, s[0][1][1], 0x05040202, 0xE9FB0C23, 0xF60E0808, 0xC9E9FFFE);
	r7 = D(r7, s[0][1][1], 0xC2F5F2F9, 0x07050906, 0x1513E8EF, 0xA2FDEDFE);
	r0 = D(r0, s[0][1][2], 0xF4ECE901, 0xF7F9EE04, 0x080527F2, 0x03FFF90E);
	r1 = D(r1, s[0][1][2], 0xF90EF60F, 0xFFF905F8, 0xEFECF5FE, 0xF7F903DE);
	r2 = D(r2, s[0][1][2], 0xFED8FA00, 0xF3FB0519, 0xF4E80403, 0xF1D614F5);
	r3 = D(r3, s[0][1][2], 0xFA020E08, 0xECF20504, 0x01F90406, 0xEBED03FE);
	r4 = D(r4, s[0][1][2], 0xEBE605F5, 0x02FA04FE, 0xFDF01002, 0xFDD6EA09);
	r5 = D(r5, s[0][1][2], 0xF6F70AFA, 0xF605F608, 0x0204F11A, 0xF810FBF1);
	r6 = D(r6, s[0][1][2], 0xFFF3F008, 0xFFEE1603, 0x0800FE09, 0xF6DF020D);
	r7 = D(r7, s[0][1][2], 0xBAF7070F, 0x02F3F20B, 0x30FF0404, 0xF1090708);
	r0 = D(r0, s[0][2][0], 0x08FBEA0C, 0xFAFA04FD, 0xF6CEE709, 0xF815F917);
	r1 = D(r1, s[0][2][0], 0x07F8FBFF, 0x03FAFFFA, 0xF9F7F1FE, 0x01110100);
	r2 = D(r2, s[0][2][0], 0x04EE00FB, 0xF8ED02FD, 0xFDF80600, 0xEBC90000);
	r3 = D(r3, s[0][2][0], 0x04FEF3FA, 0x0B01EEF9, 0x0402FE03, 0xF703FBFC);
	r4 = D(r4, s[0][2][0], 0xF7ED0FFD, 0x00F801FA, 0xFA060102, 0xC014EEFD);
	r5 = D(r5, s[0][2][0], 0xFEFE0C05, 0xF9E70004, 0xFE14FA14, 0x07CA04BB);
	r6 = D(r6, s[0][2][0], 0x08040AFB, 0x0802DBF1, 0xF1130809, 0xF4F205FE);
	r7 = D(r7, s[0][2][0], 0xCCEA01F8, 0xFB10FD0C, 0x16DB0801, 0xFC09F9F6);
	r0 = D(r0, s[0][2][1], 0x0908E213, 0x01EF0FF7, 0xF2F0FB08, 0x0308FA13);
	r1 = D(r1, s[0][2][1], 0xEBF00306, 0xFF0203FA, 0xFAF2E8FC, 0x8F12FB0C);
	r2 = D(r2, s[0][2][1], 0x08F104FC, 0xBC05F907, 0xE7FEFEFE, 0x01E00805);
	r3 = D(r3, s[0][2][1], 0xF7020A09, 0xF5010103, 0xF5FB0003, 0xECF10E01);
	r4 = D(r4, s[0][2][1], 0xF6EFFF01, 0xFEFA07FC, 0xF5EFFB0B, 0xD4F70CFD);
	r5 = D(r5, s[0][2][1], 0x00F512FE, 0xF8F6F305, 0xFD05F319, 0x02F104F7);
	r6 = D(r6, s[0][2][1], 0x08FDFA06, 0xF708E4F8, 0x07FB0A08, 0xE4F5FB03);
	r7 = D(r7, s[0][2][1], 0xDC070008, 0xFB07FA02, 0x81EE02F6, 0xCBF60C15);
	r0 = D(r0, s[0][2][2], 0xF6DC0B06, 0xF3F1FF00, 0x0E11D4F2, 0xFA00F913);
	r1 = D(r1, s[0][2][2], 0xF6FEF906, 0xFCFBFDFC, 0xE9ECEA02, 0x10080619);
	r2 = D(r2, s[0][2][2], 0x06EE09FD, 0xDBE10306, 0xF5FCFD08, 0x03B60507);
	r3 = D(r3, s[0][2][2], 0xF2F40A00, 0xFB03FB03, 0xFEF80501, 0xDAE3FA02);
	r4 = D(r4, s[0][2][2], 0xEAF4F30B, 0xFEFC00FB, 0xF8FA07FC, 0xFADCFF08);
	r5 = D(r5, s[0][2][2], 0xF3F209F5, 0xE5F7050B, 0xFA00FC16, 0xFAE50ADF);
	r6 = D(r6, s[0][2][2], 0xF0F9FC06, 0xF718F403, 0xF3010207, 0x04EFFE04);
	r7 = D(r7, s[0][2][2], 0xC112DF0A, 0x08F7FF07, 0xAD0502F3, 0xC5FC0702);
	r0 = D(r0, s[1][0][0], 0xF30B07FC, 0xF70301F6, 0xF4F81C15, 0x0003FBF4);
	r1 = D(r1, s[1][0][0], 0xF5020AFD, 0xFFFD0504, 0x0606F7F9, 0x05FE0FD1);
	r2 = D(r2, s[1][0][0], 0x010C09FC, 0xFE00FBFB, 0xF4FE0BF6, 0xF01605EA);
	r3 = D(r3, s[1][0][0], 0x04FF02FC, 0xF10013F0, 0xFC000BFA, 0x010102F7);
	r4 = D(r4, s[1][0][0], 0x040B01EE, 0xF7060400, 0x010AFEF0, 0x01EEFDDF);
	r5 = D(r5, s[1][0][0], 0x06030203, 0x00060100, 0x0701FCF5, 0xFAFE1906);
	r6 = D(r6, s[1][0][0], 0x010205FD, 0xF51207C0, 0xE4F601F7, 0xEE030BB7);
	r7 = D(r7, s[1][0][0], 0x030A0BEB, 0x01FF01EF, 0x0209FAEA, 0x0A0001FF);
	r0 = D(r0, s[1][0][1], 0x0AFFF20C, 0xEC0402FC, 0x1FF603FD, 0x00FE01F6);
	r1 = D(r1, s[1][0][1], 0x09F609F5, 0x06040100, 0xF80806ED, 0xF7EEE424);
	r2 = D(r2, s[1][0][1], 0x000C0207, 0xE8FF06F1, 0xF0FF0C07, 0xEC01FFFA);
	r3 = D(r3, s[1][0][1], 0xFDFB01F6, 0xEDFA0C0C, 0xFD06FE05, 0xFF020AF7);
	r4 = D(r4, s[1][0][1], 0x00F70301, 0xF7FA0101, 0xFB0A01FC, 0xF4F7F1ED);
	r5 = D(r5, s[1][0][1], 0x03100402, 0x07FA0602, 0xFAFC00F6, 0xBD0FFF06);
	r6 = D(r6, s[1][0][1], 0xF8FF12F7, 0xEDF2050C, 0x090B070B, 0x0400F4FE);
	r7 = D(r7, s[1][0][1], 0x0FF5FDFC, 0x050107EE, 0x02F2FEFE, 0x03FBFFF1);
	r0 = D(r0, s[1][0][2], 0xFD0716F4, 0xF6F3FCFC, 0xFDEB13F2, 0x0600FFF7);
	r1 = D(r1, s[1][0][2], 0xFD0D04FD, 0xFD020303, 0xF7FDFC01, 0x09E11E1B);
	r2 = D(r2, s[1][0][2], 0xFD050004, 0xFC08FDFE, 0x01050C06, 0xFD140E07);
	r3 = D(r3, s[1][0][2], 0x0907FCFA, 0x050A0F07, 0xFFF8F3FE, 0xFB0B0606);
	r4 = D(r4, s[1][0][2], 0xF6E00701, 0xFC000205, 0x01FE040A, 0x0701FE06);
	r5 = D(r5, s[1][0][2], 0xF4040104, 0xFD030C10, 0xFAFAFBF5, 0xE9070B07);
	r6 = D(r6, s[1][0][2], 0xFDF6F7F7, 0xEFFB07E4, 0x0202F4F5, 0x00F80301);
	r7 = D(r7, s[1][0][2], 0xE8050C06, 0xFA0902F2, 0xF70A07E2, 0xFC060AFE);
	r0 = D(r0, s[1][1][0], 0x080B09F8, 0x040404FA, 0x06F202F9, 0x0B0400F7);
	r1 = D(r1, s[1][1][0], 0xF5121306, 0x0401FA01, 0xFA0201F2, 0xF605FAFB);
	r2 = D(r2, s[1][1][0], 0xFB0AFA06, 0x00060604, 0xFA04FFFE, 0xEA010605);
	r3 = D(r3, s[1][1][0], 0xF30607FD, 0x06FDFEF8, 0xEBFBFDFC, 0xFE00FFF5);
	r4 = D(r4, s[1][1][0], 0xFBFC00E6, 0xFE0AFE00, 0x0C0CF9FD, 0x100700F2);
	r5 = D(r5, s[1][1][0], 0xFB06FCFD, 0x0309F902, 0xF504FBF7, 0xFA0003F9);
	r6 = D(r6, s[1][1][0], 0x0DFA10FF, 0x02F903F0, 0x0FFDFEF4, 0xF809FED7);
	r7 = D(r7, s[1][1][0], 0xFDF702D0, 0x0FFD0500, 0xF7F61FF0, 0xFCF3FCE7);
	r0 = D(r0, s[1][1][1], 0x1508ED0D, 0x0D000AF1, 0xE8000EEE, 0xFC02FCF9);
	r1 = D(r1, s[1][1][1], 0xF902FF0A, 0x1802FC04, 0x01F8FD06, 0xFF15FEFF);
	r2 = D(r2, s[1][1][1], 0x140201FB, 0x0413F00D, 0x02FB0E01, 0xCFC4F408);
	r3 = D(r3, s[1][1][1], 0xFD040AFD, 0x03E9F307, 0x05EC0FFD, 0xF806F8EB);
	r4 = D(r4, s[1][1][1], 0xF7B10FFC, 0xF8E704F3, 0xF5E309FA, 0xEA050A11);
	r5 = D(r5, s[1][1][1], 0xF5FF07F5, 0x0B0EF5FA, 0xF4FBFEFB, 0xCF17FEFB);
	r6 = D(r6, s[1][1][1], 0x09020002, 0x0A10FEFA, 0xFF07090D, 0x01F20308);
	r7 = D(r7, s[1][1][1], 0xFEF410B2, 0xF8F301F8, 0x010DFCEB, 0xF6FBFEED);
	r0 = D(r0, s[1][1][2], 0x04FEF0F9, 0x07CC02FC, 0x0CE4F8F4, 0xF5F800F8);
	r1 = D(r1, s[1][1][2], 0xFEFC10FD, 0x05FF0105, 0x07D5FB0C, 0xFDB2F304);
	r2 = D(r2, s[1][1][2], 0xF4FD0101, 0x04FB070B, 0x05F0FF01, 0xF48FFD09);
	r3 = D(r3, s[1][1][2], 0xEFD10BFE, 0x05F1FD07, 0xF5F9FCFD, 0x0DF5F8FD);
	r4 = D(r4, s[1][1][2], 0x10E8FF0B, 0xFCF4FD07, 0x05E1F903, 0x0009FCF6);
	r5 = D(r5, s[1][1][2], 0xF8E3000D, 0x14F9F102, 0x0B02FBF8, 0xDCE21402);
	r6 = D(r6, s[1][1][2], 0xF1EB0907, 0x06FBD403, 0xF0FDF9F0, 0xFF0803FF);
	r7 = D(r7, s[1][1][2], 0x1203F9D6, 0xEE1412FE, 0x0AFDFFED, 0x0308FFFB);
	r0 = D(r0, s[1][2][0], 0xFF1213FC, 0x02FFFE03, 0x05F107E5, 0xFF04FAF4);
	r1 = D(r1, s[1][2][0], 0x0BFB1407, 0x05FC0500, 0x01FCFE02, 0x13EF0EE3);
	r2 = D(r2, s[1][2][0], 0xFB000B00, 0xFE0606FB, 0xFF030B02, 0xF8140701);
	r3 = D(r3, s[1][2][0], 0xFFFC0503, 0x0B01090A, 0xF6050507, 0xFF02FBFA);
	r4 = D(r4, s[1][2][0], 0xFE020B1A, 0xFD070003, 0x010A0103, 0x0FF8F9EB);
	r5 = D(r5, s[1][2][0], 0xFC070703, 0xFA010400, 0xFF03FAF6, 0xFD070E00);
	r6 = D(r6, s[1][2][0], 0xFFF40802, 0x11FB1012, 0x09FD03F1, 0xFCFBFE02);
	r7 = D(r7, s[1][2][0], 0xFDFA11F1, 0x00FDFFFF, 0x09F80405, 0x02F9FBF7);
	r0 = D(r0, s[1][2][1], 0x00ECF002, 0x0102F802, 0x05FAF6FD, 0x0108F7F7);
	r1 = D(r1, s[1][2][1], 0x06020408, 0x0500F703, 0x00FD06FE, 0xFFD9D2F3);
	r2 = D(r2, s[1][2][1], 0x04FB0602, 0x00FD0FFB, 0x050106FD, 0xE5F2EBEA);
	r3 = D(r3, s[1][2][1], 0x06050606, 0x070500F8, 0x0000FA02, 0xFFFF05FC);
	r4 = D(r4, s[1][2][1], 0x0DEFF7FB, 0xFF04FC03, 0xF8EFFD04, 0xECF30207);
	r5 = D(r5, s[1][2][1], 0xF200FD00, 0xF8F407F3, 0x0B02FDFB, 0xEEFDFF07);
	r6 = D(r6, s[1][2][1], 0x0605F708, 0xFE030AFF, 0x030005F0, 0x0CFFF703);
	r7 = D(r7, s[1][2][1], 0x0BE60209, 0xF7F5F004, 0x060BFCEF, 0xFA0906FD);
	r0 = D(r0, s[1][2][2], 0xFAEAFBF3, 0x07F6F508, 0x0402FE03, 0x010603F1);
	r1 = D(r1, s[1][2][2], 0x0FF7FF0D, 0x00FF0204, 0x040403FA, 0xF0D317E1);
	r2 = D(r2, s[1][2][2], 0xFF03FD02, 0xFE0004FA, 0x01040602, 0x13ED0502);
	r3 = D(r3, s[1][2][2], 0x01DEF702, 0x02100508, 0x02FE0904, 0x03F6FEFD);
	r4 = D(r4, s[1][2][2], 0xFF05010B, 0x05FC0309, 0x02F601F0, 0x02EE0613);
	r5 = D(r5, s[1][2][2], 0x08F60002, 0xEEE20403, 0xF709FCF4, 0x01E30207);
	r6 = D(r6, s[1][2][2], 0xFFE80400, 0x09FBFF12, 0x010204E3, 0xFAEF030B);
	r7 = D(r7, s[1][2][2], 0x09FDFFF9, 0x07FDF600, 0x0211FFF3, 0xFFE2FCED);
	s[0][0][0] = G[6][xy.y+0][xy.x+0]; s[0][0][1] = G[6][xy.y+0][xy.x+1];
	s[0][0][2] = G[6][xy.y+0][xy.x+2]; s[0][1][0] = G[6][xy.y+1][xy.x+0];
	s[0][1][1] = G[6][xy.y+1][xy.x+1]; s[0][1][2] = G[6][xy.y+1][xy.x+2];
	s[0][2][0] = G[6][xy.y+2][xy.x+0]; s[0][2][1] = G[6][xy.y+2][xy.x+1];
	s[0][2][2] = G[6][xy.y+2][xy.x+2]; s[1][0][0] = G[7][xy.y+0][xy.x+0];
	s[1][0][1] = G[7][xy.y+0][xy.x+1]; s[1][0][2] = G[7][xy.y+0][xy.x+2];
	s[1][1][0] = G[7][xy.y+1][xy.x+0]; s[1][1][1] = G[7][xy.y+1][xy.x+1];
	s[1][1][2] = G[7][xy.y+1][xy.x+2]; s[1][2][0] = G[7][xy.y+2][xy.x+0];
	s[1][2][1] = G[7][xy.y+2][xy.x+1]; s[1][2][2] = G[7][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x35121C18, 0x02EAFB01, 0x290B131B, 0xF700F7FD);
	r1 = D(r1, s[0][0][0], 0xF5FEE7F9, 0xFFFD0109, 0x000501F8, 0x2DE9F6F7);
	r2 = D(r2, s[0][0][0], 0xF608FE06, 0x0901FCFA, 0x0609F8F5, 0xF019F509);
	r3 = D(r3, s[0][0][0], 0xF40201F3, 0xFD12FCF2, 0xE903F7FD, 0xEF00F801);
	r4 = D(r4, s[0][0][0], 0xFCF6FA14, 0x08FFFC02, 0xFAFD01E4, 0x190DFE05);
	r5 = D(r5, s[0][0][0], 0xEAFBE100, 0xFFE8F5FE, 0xFCFDF0FD, 0x0A28F112);
	r6 = D(r6, s[0][0][0], 0x0902EDFC, 0xE807030D, 0xF90BF7FD, 0xEC06FEF7);
	r7 = D(r7, s[0][0][0], 0x000BFBF3, 0x0BF6FEFF, 0xFDC82017, 0xD4FBF908);
	r0 = D(r0, s[0][0][1], 0x1410FDFD, 0xFDF10201, 0x0B00F500, 0xF30BF4F9);
	r1 = D(r1, s[0][0][1], 0x02EFF9F5, 0xFEFEFA08, 0xFAFC0307, 0xF01E02FF);
	r2 = D(r2, s[0][0][1], 0xF4F8F30A, 0x01EEF4FE, 0x0106FE05, 0xF8FEE4FA);
	r3 = D(r3, s[0][0][1], 0xF004FBF9, 0xF115FCFF, 0xFC07F8FF, 0xFFFAFCFC);
	r4 = D(r4, s[0][0][1], 0x13EF0B0C, 0x03FEFEFB, 0xF606070B, 0xD2D90ED7);
	r5 = D(r5, s[0][0][1], 0xF9F8F200, 0x0DFDFE02, 0x02FCF200, 0x07D0FA0B);
	r6 = D(r6, s[0][0][1], 0xF7F1F818, 0xD6FD14AD, 0x0A0AFD0C, 0xE1FE00B0);
	r7 = D(r7, s[0][0][1], 0x0FCC0DE6, 0x0D06F4EE, 0xF3FC130B, 0xF3FFE800);
	r0 = D(r0, s[0][0][2], 0x1AFCFE0D, 0xFDFAF3FC, 0x25DCFB06, 0xF8FFF501);
	r1 = D(r1, s[0][0][2], 0xFAFCE9FF, 0x00FEFE03, 0xFCEEFC01, 0x03ED19EE);
	r2 = D(r2, s[0][0][2], 0x0304F401, 0x08DEF5FB, 0x0109F901, 0x0B06ECEF);
	r3 = D(r3, s[0][0][2], 0x04FAFF00, 0xEB1702F8, 0x030FFBFC, 0x0002FAFD);
	r4 = D(r4, s[0][0][2], 0x0A1403FE, 0xFBFBF8FC, 0x130003F5, 0xFB02A5E0);
	r5 = D(r5, s[0][0][2], 0xFE09FEFD, 0xFBEFFEFF, 0xF6FDF5FC, 0x1912EEFE);
	r6 = D(r6, s[0][0][2], 0xF20104F6, 0xD5F5161F, 0xF20B01F9, 0x0405F20D);
	r7 = D(r7, s[0][0][2], 0xDE1107DA, 0x1204EAF9, 0x061D1109, 0xF6F8F207);
	r0 = D(r0, s[0][1][0], 0xFFCA0D0C, 0x090802FE, 0x24F8F713, 0xFAFAF511);
	r1 = D(r1, s[0][1][0], 0xF9EEEAEE, 0xFD0003FF, 0xC109070A, 0x0E1CDE9D);
	r2 = D(r2, s[0][1][0], 0x02010BEF, 0xA31EFCEF, 0x0B0BFC07, 0x061C08FA);
	r3 = D(r3, s[0][1][0], 0x02EE090B, 0xC506F20C, 0x0213FCED, 0xEBFF03F6);
	r4 = D(r4, s[0][1][0], 0xE715FED5, 0x00FB00F9, 0x02EA09FF, 0x08F2F506);
	r5 = D(r5, s[0][1][0], 0x000805F5, 0xF8FA0F0A, 0xF8FCFD03, 0x07E7E607);
	r6 = D(r6, s[0][1][0], 0x02F9F019, 0x2C1A1B01, 0x0BD900FB, 0x03FCF8FF);
	r7 = D(r7, s[0][1][0], 0xDDFCF3EE, 0x1CF4FD01, 0x232314E9, 0xF3EFF4EF);
	r0 = D(r0, s[0][1][1], 0x09D4FF01, 0xCB0E06FE, 0x0DD9F708, 0x00E6FCF6);
	r1 = D(r1, s[0][1][1], 0xF3EAFB0A, 0xFBFD0401, 0xC01110E7, 0xFA1FEFF9);
	r2 = D(r2, s[0][1][1], 0xF91912FC, 0xD34708F4, 0x14FCFFDC, 0x0E12F416);
	r3 = D(r3, s[0][1][1], 0xEC0B02E9, 0xF31711AF, 0xEA000B15, 0xF81806F4);
	r4 = D(r4, s[0][1][1], 0xE30A05CE, 0xF70901F2, 0xE804FFF9, 0x06021EC7);
	r5 = D(r5, s[0][1][1], 0xF31604EF, 0x0F06FDFE, 0xFDF1FD01, 0x0807FE00);
	r6 = D(r6, s[0][1][1], 0xEB1AFE13, 0xEE2BF822, 0x0BEFFEDB, 0x0B0001D3);
	r7 = D(r7, s[0][1][1], 0xCB0AF1ED, 0xFFE9F8F2, 0x05101CF4, 0xF30B08FD);
	r0 = D(r0, s[0][1][2], 0xEDC0E00F, 0xEE03FDFE, 0x2812FCF9, 0xFEEEFF03);
	r1 = D(r1, s[0][1][2], 0xF706D60A, 0xFF01FA04, 0xE605F8FD, 0xC70014CA);
	r2 = D(r2, s[0][1][2], 0xF90A190C, 0x101A0410, 0xF503FFFD, 0xF80FFAF9);
	r3 = D(r3, s[0][1][2], 0xF903FFFF, 0x0E1E0C01, 0x01F7FEFA, 0xD709FCFD);
	r4 = D(r4, s[0][1][2], 0xF2F9E209, 0x01F4FCF5, 0x02FA0301, 0x0505DAC7);
	r5 = D(r5, s[0][1][2], 0xF5F706EA, 0xFCFCEFFF, 0xFDFCFE03, 0x0B0C0304);
	r6 = D(r6, s[0][1][2], 0xF4EDF9FA, 0xEA070DDA, 0xFA0BEE17, 0x0904FA05);
	r7 = D(r7, s[0][1][2], 0xA805FA00, 0x06E7E909, 0xC408D7AB, 0xED0CEDEA);
	r0 = D(r0, s[0][2][0], 0x0724F603, 0x1B030002, 0x0FFB4008, 0x03F6F306);
	r1 = D(r1, s[0][2][0], 0x020AF5FD, 0x0311FE07, 0x030C00FC, 0xD6F21ED0);
	r2 = D(r2, s[0][2][0], 0x01EAFB03, 0x07240508, 0xFEFAFD0E, 0xFA2100C6);
	r3 = D(r3, s[0][2][0], 0x070CF504, 0x01000B03, 0xF9FBE8F7, 0xEDF602F3);
	r4 = D(r4, s[0][2][0], 0x15BC0E18, 0xFFFCFDFA, 0xFCF70E01, 0xFD9B0BFD);
	r5 = D(r5, s[0][2][0], 0x08ED06F8, 0xF411FEFE, 0x03F3FC04, 0xEEDB0B0A);
	r6 = D(r6, s[0][2][0], 0xF6F0FAFD, 0x1F3A10E2, 0x0BF40A12, 0x0605F2FE);
	r7 = D(r7, s[0][2][0], 0xE717200B, 0xF7FCE013, 0xBB280309, 0xE510F6EE);
	r0 = D(r0, s[0][2][1], 0x2FCFFF02, 0xF9FB0BF8, 0xFDF904EB, 0x00EAF306);
	r1 = D(r1, s[0][2][1], 0x1610FF09, 0x030D0401, 0x0408F800, 0x3311E400);
	r2 = D(r2, s[0][2][1], 0x05FFFB02, 0x0D1B04EF, 0x01FFF2F6, 0xFA12E71B);
	r3 = D(r3, s[0][2][1], 0x0F31F9FB, 0x070402FA, 0x04D6F502, 0x07F8DAFD);
	r4 = D(r4, s[0][2][1], 0x03FD0A04, 0xFF0A0AFF, 0xF1EEFA10, 0x0CDA12EE);
	r5 = D(r5, s[0][2][1], 0x0DF80C04, 0xF510FBEC, 0xFEECF5FB, 0x00010402);
	r6 = D(r6, s[0][2][1], 0x1D01F505, 0x0F08FFEE, 0x0505FAF4, 0xFAF604FE);
	r7 = D(r7, s[0][2][1], 0xB71C19DE, 0xFFF005DF, 0x0F163681, 0x13F8F0FD);
	r0 = D(r0, s[0][2][2], 0x0D14F210, 0x14F605FB, 0x231AF7FB, 0x00FA02EF);
	r1 = D(r1, s[0][2][2], 0x11140319, 0x02010103, 0x051509F6, 0x81172181);
	r2 = D(r2, s[0][2][2], 0xF6FF0603, 0x01170819, 0x0406030B, 0x00D3F6F3);
	r3 = D(r3, s[0][2][2], 0x030CFB0B, 0xFEEE0203, 0xFE0AFBF5, 0x00F30403);
	r4 = D(r4, s[0][2][2], 0x0A0115FE, 0xFD06FCFD, 0x0906EDE6, 0xEF07EBD4);
	r5 = D(r5, s[0][2][2], 0xFC0A0DF0, 0x0813EFE3, 0xFD020001, 0x0640FC0C);
	r6 = D(r6, s[0][2][2], 0x08D40509, 0x20124EF8, 0x08F40EFC, 0xF6F2FAFD);
	r7 = D(r7, s[0][2][2], 0x12102AEF, 0xFDFCEE05, 0xF5F125F2, 0x0EF6F8B7);
	r0 = D(r0, s[1][0][0], 0x0006F2F6, 0x02050404, 0x190581F7, 0x04FFFD02);
	r1 = D(r1, s[1][0][0], 0x06FCFC25, 0x0103FD03, 0xFF09F80A, 0x2B0DDE4F);
	r2 = D(r2, s[1][0][0], 0x0803000D, 0xF7010203, 0xF3F309FE, 0x0C030717);
	r3 = D(r3, s[1][0][0], 0x0B010303, 0xF1FAFD0A, 0x08F90101, 0xFFF70306);
	r4 = D(r4, s[1][0][0], 0xE5FB06FA, 0xF7F8FE06, 0x0605F005, 0x0C120AF9);
	r5 = D(r5, s[1][0][0], 0xFF030900, 0xFA090303, 0x07080109, 0x17FD040D);
	r6 = D(r6, s[1][0][0], 0x0AFE0900, 0x1D04ED06, 0xF6F3FD14, 0x0009FBFC);
	r7 = D(r7, s[1][0][0], 0xF31AFE03, 0x10FDF008, 0x0E111A0A, 0x0AF7FC01);
	r0 = D(r0, s[1][0][1], 0x090CED09, 0xFBFC0704, 0x0CE921FF, 0x02FF0206);
	r1 = D(r1, s[1][0][1], 0xFC0BF913, 0xFC07FE02, 0xFC05F712, 0x0E06EEDA);
	r2 = D(r2, s[1][0][1], 0xFC090102, 0x00FEF80C, 0xFB060A05, 0xFE0D0214);
	r3 = D(r3, s[1][0][1], 0x02FC01FF, 0xFC0DFE25, 0xFC01FFFF, 0xFB0BF704);
	r4 = D(r4, s[1][0][1], 0xF7031008, 0xF9040005, 0x0A05FF08, 0x0BF6CA14);
	r5 = D(r5, s[1][0][1], 0xEC050206, 0x02FFFE0B, 0xF8FC03F7, 0xF310F71B);
	r6 = D(r6, s[1][0][1], 0xFE00FE09, 0x031508EF, 0xE60FEC01, 0xFE08F809);
	r7 = D(r7, s[1][0][1], 0xD9100020, 0xFF02FFF9, 0xC40AF507, 0x06071610);
	r0 = D(r0, s[1][0][2], 0x03FF0A05, 0x0601FD01, 0x0907DEF7, 0x05030610);
	r1 = D(r1, s[1][0][2], 0xF5010C0D, 0x0002FE02, 0x00050213, 0x050D36EF);
	r2 = D(r2, s[1][0][2], 0xF704F603, 0x03080E0E, 0xFE00FB00, 0xFA05FB07);
	r3 = D(r3, s[1][0][2], 0x00FE140A, 0xFF0708F8, 0x07FFF7FC, 0xF5050405);
	r4 = D(r4, s[1][0][2], 0xE704F303, 0xFFFFFE04, 0xF5FC02F3, 0xFBFE1C02);
	r5 = D(r5, s[1][0][2], 0xF705FD03, 0xFB03F4FE, 0x02010407, 0xE8060908);
	r6 = D(r6, s[1][0][2], 0xFC050AFA, 0x101B021A, 0xF9FD0C1A, 0x05020200);
	r7 = D(r7, s[1][0][2], 0x0803EB1D, 0xF700FA07, 0xEA05EC05, 0x080EEA0E);
	r0 = D(r0, s[1][1][0], 0xF41711DC, 0x00F303FC, 0xF9FE8181, 0x0207050B);
	r1 = D(r1, s[1][1][0], 0x07FA022C, 0x06010B03, 0xFFF8EFF6, 0xFB04810A);
	r2 = D(r2, s[1][1][0], 0x020CFD06, 0xF80800F9, 0xF503EEFF, 0x0FFC0210);
	r3 = D(r3, s[1][1][0], 0xE4FBFDFC, 0xFDF9FE1E, 0x08F2FA0D, 0x06F8FBFA);
	r4 = D(r4, s[1][1][0], 0x0406ECF4, 0xFAFC0708, 0x050FF9FB, 0xF31DE50E);
	r5 = D(r5, s[1][1][0], 0x03FEFDFD, 0xFE0AEDEF, 0x05FC060C, 0x0CA50508);
	r6 = D(r6, s[1][1][0], 0x06F904EC, 0x29FF08E2, 0xF0F30512, 0xFD180012);
	r7 = D(r7, s[1][1][0], 0x04FEEE28, 0x0006F501, 0x01FADE01, 0x00F7F40A);
	r0 = D(r0, s[1][1][1], 0x07020CF9, 0x0014F506, 0x05ED81E4, 0xFDF30E01);
	r1 = D(r1, s[1][1][1], 0x0209FA08, 0x00070303, 0xFDFAE7DF, 0x0F043D99);
	r2 = D(r2, s[1][1][1], 0xF2FB09FC, 0xEC08F803, 0x00E8F203, 0x0408F808);
	r3 = D(r3, s[1][1][1], 0xE3FCF900, 0xFDF3EDF9, 0x000AEEFF, 0xF213F30C);
	r4 = D(r4, s[1][1][1], 0xF9E9E716, 0xFCFDFC00, 0x050EF704, 0x041ADB0C);
	r5 = D(r5, s[1][1][1], 0xF40BED01, 0xF203FC06, 0xF6001006, 0x080CE4FD);
	r6 = D(r6, s[1][1][1], 0xF81CF6E8, 0x06EEEE10, 0xFDFE0E01, 0xF812F3CF);
	r7 = D(r7, s[1][1][1], 0xF40DF12E, 0xF9FB090E, 0xE21100FB, 0xED12F80E);
	r0 = D(r0, s[1][1][2], 0xFC03D013, 0x01040005, 0x050D1117, 0x0B06FB04);
	r1 = D(r1, s[1][1][2], 0xFBFDF806, 0xFF02FD02, 0x040700EF, 0xF41298D6);
	r2 = D(r2, s[1][1][2], 0xFF0112E8, 0xE4FDF908, 0xFB03FDF8, 0x01FDFB07);
	r3 = D(r3, s[1][1][2], 0xE5FCF509, 0xFCFFEE0B, 0xFDFAE2FE, 0xF30DF5FA);
	r4 = D(r4, s[1][1][2], 0xFB03FA03, 0xFCFDF802, 0x0407FEEE, 0xEDE111FF);
	r5 = D(r5, s[1][1][2], 0xF1F9F4F9, 0xFD080806, 0x0605FD06, 0x1708ED1E);
	r6 = D(r6, s[1][1][2], 0x05FFFFFF, 0xFB021EFD, 0xE2F4EF16, 0xFDFC06FE);
	r7 = D(r7, s[1][1][2], 0xDDFF0000, 0xEF030913, 0xEFF909F9, 0xFA03DC04);
	r0 = D(r0, s[1][2][0], 0x06E781F7, 0xFE05020F, 0xF00503E2, 0xFC060202);
	r1 = D(r1, s[1][2][0], 0xFBFFEE24, 0x0204FC02, 0x0208FB07, 0x0E09B311);
	r2 = D(r2, s[1][2][0], 0x0406F204, 0x07F400EC, 0x04F8FFF5, 0x0D06FA15);
	r3 = D(r3, s[1][2][0], 0x07F60701, 0x0E080807, 0x07FFFC0D, 0x060AF306);
	r4 = D(r4, s[1][2][0], 0xF3F4F90B, 0x00010502, 0x0704F8FC, 0xF319F828);
	r5 = D(r5, s[1][2][0], 0x030401F6, 0x0DFA0BF8, 0xFE030104, 0x06FE091B);
	r6 = D(r6, s[1][2][0], 0x01030803, 0x28D8FC05, 0xF6FBFE06, 0xFF12F605);
	r7 = D(r7, s[1][2][0], 0x11F7F72E, 0x02FE0707, 0x01F4F90F, 0x16F5FA11);
	r0 = D(r0, s[1][2][1], 0xFC1220F4, 0x0CEAEFFB, 0x18181AF8, 0xF0F90A06);
	r1 = D(r1, s[1][2][1], 0xFF09FE00, 0xFB0401F9, 0x0704FC04, 0xF40A61F5);
	r2 = D(r2, s[1][2][1], 0xF904FE01, 0xFFFA000A, 0x0310FA01, 0xFA070F00);
	r3 = D(r3, s[1][2][1], 0xFE0DFD08, 0x0CFD0308, 0xF200E604, 0xEF0BE7F6);
	r4 = D(r4, s[1][2][1], 0xF701E808, 0xF6FE02FF, 0x0008F902, 0x2802EAD2);
	r5 = D(r5, s[1][2][1], 0xFD010AFE, 0xFC02F20A, 0xFA020E02, 0xF516F408);
	r6 = D(r6, s[1][2][1], 0x0B0206F3, 0xFEEC0304, 0xF9E60EEB, 0xFE020405);
	r7 = D(r7, s[1][2][1], 0x02E6FF0B, 0xF7040205, 0xED0AF6FA, 0xF1F7D311);
	r0 = D(r0, s[1][2][2], 0xFB09EF18, 0x01FF02FB, 0x23F0D708, 0xF9010608);
	r1 = D(r1, s[1][2][2], 0x0500FEFF, 0x02030302, 0x06FC070F, 0xF81B2A81);
	r2 = D(r2, s[1][2][2], 0xFC0406F4, 0x0AFD1009, 0xF9020606, 0xFFFFFD01);
	r3 = D(r3, s[1][2][2], 0x05000501, 0x040C0F0C, 0x09050308, 0xF70EFB00);
	r4 = D(r4, s[1][2][2], 0xF6FE1615, 0x0004FE04, 0xFC00FDE9, 0xF00C1C17);
	r5 = D(r5, s[1][2][2], 0xF90606FB, 0xF2010217, 0xFF020509, 0x06040909);
	r6 = D(r6, s[1][2][2], 0x020006F6, 0x080E0601, 0x07061BFE, 0xF907E616);
	r7 = D(r7, s[1][2][2], 0xEAEFF03D, 0xF8FBF609, 0x090FF812, 0xE517FA05);
	s[0][0][0] = G[8][xy.y+0][xy.x+0]; s[0][0][1] = G[8][xy.y+0][xy.x+1];
	s[0][0][2] = G[8][xy.y+0][xy.x+2]; s[0][1][0] = G[8][xy.y+1][xy.x+0];
	s[0][1][1] = G[8][xy.y+1][xy.x+1]; s[0][1][2] = G[8][xy.y+1][xy.x+2];
	s[0][2][0] = G[8][xy.y+2][xy.x+0]; s[0][2][1] = G[8][xy.y+2][xy.x+1];
	s[0][2][2] = G[8][xy.y+2][xy.x+2]; s[1][0][0] = G[9][xy.y+0][xy.x+0];
	s[1][0][1] = G[9][xy.y+0][xy.x+1]; s[1][0][2] = G[9][xy.y+0][xy.x+2];
	s[1][1][0] = G[9][xy.y+1][xy.x+0]; s[1][1][1] = G[9][xy.y+1][xy.x+1];
	s[1][1][2] = G[9][xy.y+1][xy.x+2]; s[1][2][0] = G[9][xy.y+2][xy.x+0];
	s[1][2][1] = G[9][xy.y+2][xy.x+1]; s[1][2][2] = G[9][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x2400EA16, 0xF802160E, 0xC3F2811D, 0x0DFBF7FC);
	r1 = D(r1, s[0][0][0], 0x0402FA03, 0x00F1F901, 0x0005F104, 0xE603F3F1);
	r2 = D(r2, s[0][0][0], 0xFBF101F9, 0x00FEB6F9, 0x0607EC08, 0x10180E09);
	r3 = D(r3, s[0][0][0], 0xFCFAECFD, 0x0201CBFB, 0xFEFAF205, 0x011004FA);
	r4 = D(r4, s[0][0][0], 0x071925FC, 0x0709FF06, 0x04F7FC0B, 0xF5F3F5F1);
	r5 = D(r5, s[0][0][0], 0xFD050501, 0x07F4F801, 0x0905FD00, 0xE9F3FE0C);
	r6 = D(r6, s[0][0][0], 0x01F5D41F, 0xFF07A71F, 0x0307FFF4, 0xE9F0D2FF);
	r7 = D(r7, s[0][0][0], 0x0817C1FE, 0x0D07FDFE, 0x0012D903, 0x0B10F60B);
	r0 = D(r0, s[0][0][1], 0xEE08FDB7, 0xEFEF0B02, 0xAD0BFD0A, 0x0A04F709);
	r1 = D(r1, s[0][0][1], 0xFDFD1202, 0xFA0EFEFD, 0xFFF1130B, 0x0194E5D5);
	r2 = D(r2, s[0][0][1], 0x03E9FBF5, 0xF8FA1B10, 0x06F500FC, 0xF3F6EA06);
	r3 = D(r3, s[0][0][1], 0x02E5F8F7, 0x03E7BF00, 0xFC03F906, 0x00000DFA);
	r4 = D(r4, s[0][0][1], 0x01EDEEFA, 0x01F802FB, 0xF6FBFDFE, 0xE815D102);
	r5 = D(r5, s[0][0][1], 0xF7F303FB, 0x03101204, 0x08F9020C, 0x012E0D11);
	r6 = D(r6, s[0][0][1], 0xF60DF90E, 0xE2FAEE0C, 0x020210FA, 0xF203F0F1);
	r7 = D(r7, s[0][0][1], 0xF4E996F1, 0xF7F1050B, 0xE1098108, 0x002112FA);
	r0 = D(r0, s[0][0][2], 0x0FFCEF24, 0xEA09F201, 0x1005F605, 0x0EFD03FE);
	r1 = D(r1, s[0][0][2], 0xFB050215, 0xF6F9FD07, 0xEFFB1801, 0x810FFDF7);
	r2 = D(r2, s[0][0][2], 0xFFECF9FA, 0xFD0B130D, 0x0808F8F8, 0x01FFE817);
	r3 = D(r3, s[0][0][2], 0x0A120BEC, 0x0A0CEEFF, 0xF7EFEEED, 0xFAFE06FF);
	r4 = D(r4, s[0][0][2], 0x090A05FA, 0xFAF8FEFE, 0xF90113FE, 0xF81BDA11);
	r5 = D(r5, s[0][0][2], 0xFA01FA03, 0xFFF8FFFA, 0x0DFA0003, 0x06EDEC07);
	r6 = D(r6, s[0][0][2], 0x02FCE3EA, 0xE1E60A21, 0x01000AEE, 0xF8020206);
	r7 = D(r7, s[0][0][2], 0xFDBAECF0, 0x080707F8, 0x091490FA, 0xFE022CF4);
	r0 = D(r0, s[0][1][0], 0xBEF6FED7, 0xF1F30F10, 0x81050A04, 0x0CFEFF00);
	r1 = D(r1, s[0][1][0], 0x0511F70C, 0xFAFD07FF, 0xF3E00D20, 0x81D2812E);
	r2 = D(r2, s[0][1][0], 0xFFE3EE07, 0x06F5D605, 0xFD03EAFD, 0xF8150F18);
	r3 = D(r3, s[0][1][0], 0xF2020B03, 0xF4E6F505, 0x03FAF508, 0xFD0BF703);
	r4 = D(r4, s[0][1][0], 0xF1ECBA13, 0x03EE0805, 0xE2EDC309, 0xA6FE81FC);
	r5 = D(r5, s[0][1][0], 0xF401EDF2, 0x08DF1800, 0x0CFAEE03, 0x03EEE719);
	r6 = D(r6, s[0][1][0], 0x041E18FC, 0xFBD10745, 0xF201F417, 0xCBD19807);
	r7 = D(r7, s[0][1][0], 0xF1ECE5EB, 0x00F7E209, 0x05F6DBE7, 0x0B1D0A0F);
	r0 = D(r0, s[0][1][1], 0x81F9C208, 0xEFEFE809, 0x120196BF, 0x09FC0801);
	r1 = D(r1, s[0][1][1], 0x09D70902, 0xFE09060A, 0xFAEA090A, 0x12E381AE);
	r2 = D(r2, s[0][1][1], 0x02080DF1, 0xFFEBDA03, 0x0700E6F9, 0x0BBE2DF7);
	r3 = D(r3, s[0][1][1], 0xF7D6FD08, 0xFF16E60E, 0xF2F4F602, 0xF2F2E7E9);
	r4 = D(r4, s[0][1][1], 0xFF019DF0, 0x000AFEFF, 0xF5F6E0E0, 0xDF0B06EE);
	r5 = D(r5, s[0][1][1], 0xFCECC6E9, 0x05E3FCFD, 0x09FA0501, 0x1C19E719);
	r6 = D(r6, s[0][1][1], 0xE8FEB206, 0xE0810CFE, 0x010805DD, 0x04FEF2FA);
	r7 = D(r7, s[0][1][1], 0xF0BF02F6, 0x040BF4F2, 0x10BA030D, 0xF9ECF2E2);
	r0 = D(r0, s[0][1][2], 0x3B04F4D2, 0xFAF4080D, 0xCC08D100, 0x1205010A);
	r1 = D(r1, s[0][1][2], 0xFA06F80E, 0xFFF3FB00, 0xD0F2F411, 0xA5E71BE4);
	r2 = D(r2, s[0][1][2], 0xF40508FE, 0x11EDDF09, 0xF600FA09, 0x07000405);
	r3 = D(r3, s[0][1][2], 0xFBEFEE12, 0x0208DF1D, 0xF805E705, 0xEFFCE6F9);
	r4 = D(r4, s[0][1][2], 0xEA08060C, 0xFFF8FDFF, 0xFD13FCF0, 0x0135FF0D);
	r5 = D(r5, s[0][1][2], 0x0206F4F6, 0x0402F901, 0x10FA0AFE, 0xFCDD1BF8);
	r6 = D(r6, s[0][1][2], 0xE7F8E611, 0xE9E32E22, 0xFFFCF104, 0xFE061600);
	r7 = D(r7, s[0][1][2], 0xECB9F6F2, 0xF00E101B, 0xF3479418, 0x09FFB4F3);
	r0 = D(r0, s[0][2][0], 0x81FFED0F, 0xEF170709, 0x0807F1A9, 0x0EFF0BF9);
	r1 = D(r1, s[0][2][0], 0xFD070205, 0x00FF010F, 0xEAFA050E, 0xADD2811E);
	r2 = D(r2, s[0][2][0], 0xF801FE04, 0xF6F9FF17, 0x030DE7FA, 0x0208FBEC);
	r3 = D(r3, s[0][2][0], 0xFD09F004, 0x1A0FE2F4, 0xF4070D0B, 0xF4F40CFD);
	r4 = D(r4, s[0][2][0], 0x0116DCEC, 0xFFFFFC06, 0xE5F60E0B, 0xADC1B1DC);
	r5 = D(r5, s[0][2][0], 0xF8F4F407, 0xD8EFEE12, 0x0C010BFA, 0xED02F321);
	r6 = D(r6, s[0][2][0], 0xF403F0FF, 0x112810FD, 0xF40AF906, 0x00F7E1FA);
	r7 = D(r7, s[0][2][0], 0xFB0C95F8, 0x0104F2E2, 0xFD31811A, 0x0002FEFB);
	r0 = D(r0, s[0][2][1], 0x3A0D1AEE, 0xF6F9FA02, 0x81F7B313, 0x08FD1609);
	r1 = D(r1, s[0][2][1], 0xF3F301FE, 0xFEF903FE, 0xF406EE07, 0xD281CFD2);
	r2 = D(r2, s[0][2][1], 0xFBF5EAF3, 0x0104F302, 0xFB05FCF8, 0xFB09E50C);
	r3 = D(r3, s[0][2][1], 0x0109E414, 0x07FEECFA, 0xF1F4DF00, 0xF5E9F3FC);
	r4 = D(r4, s[0][2][1], 0xFCF73300, 0x03F50205, 0xDE01DDF5, 0x020FF2FE);
	r5 = D(r5, s[0][2][1], 0xFBE4FF09, 0x08EDF513, 0x07F6FF09, 0x06F00F04);
	r6 = D(r6, s[0][2][1], 0xEFF402EB, 0x1F29CDFD, 0xFA03FE18, 0xF609F117);
	r7 = D(r7, s[0][2][1], 0xEB1881D7, 0xF306F706, 0x0B35D7EB, 0xFEF7FFF3);
	r0 = D(r0, s[0][2][2], 0xEAEFFBF1, 0xE7FD0E14, 0x81F7F10B, 0x0901F7FD);
	r1 = D(r1, s[0][2][2], 0xFF00F712, 0xFAFCF8FE, 0xF4110A09, 0x8104811D);
	r2 = D(r2, s[0][2][2], 0xEE091A05, 0xFA140B06, 0x0103F4FD, 0xFE020112);
	r3 = D(r3, s[0][2][2], 0x090DCC1C, 0x020E0700, 0xFDFF02F6, 0xFCF8ECF6);
	r4 = D(r4, s[0][2][2], 0x0514EEF9, 0x0100FCFE, 0x0B17010A, 0xFD11130E);
	r5 = D(r5, s[0][2][2], 0x0403F810, 0xF8F010F7, 0x0C090004, 0x0001E91E);
	r6 = D(r6, s[0][2][2], 0xD5FCCDFE, 0x0B20E910, 0xFE05180A, 0x0A090906);
	r7 = D(r7, s[0][2][2], 0x081284EB, 0x0F04F501, 0x041DD4EC, 0xF3F7A9CE);
	r0 = D(r0, s[1][0][0], 0x01FB10F5, 0x07F908F7, 0x04FC0C06, 0x0403F607);
	r1 = D(r1, s[1][0][0], 0xF9120604, 0xFFFEFEFC, 0xFCF904FA, 0xE3CE1A05);
	r2 = D(r2, s[1][0][0], 0xF6F1110E, 0x09FCFDF8, 0x08F402FE, 0xFFF513FE);
	r3 = D(r3, s[1][0][0], 0xF9FEFEF9, 0x0BFAFF05, 0xFAFBFF08, 0x0603FE00);
	r4 = D(r4, s[1][0][0], 0x04FA0A0A, 0x03FD02FF, 0x06FF0D09, 0xFEFE09FF);
	r5 = D(r5, s[1][0][0], 0xFFFE0709, 0xFEF603FF, 0x0102F405, 0x04040306);
	r6 = D(r6, s[1][0][0], 0x0602FB07, 0x15E915E1, 0xEFD907F6, 0xFDF701FE);
	r7 = D(r7, s[1][0][0], 0x0316EC0A, 0x0600FA05, 0x0F0C1607, 0x0807FB02);
	r0 = D(r0, s[1][0][1], 0xFB070F02, 0x0200FBF1, 0xF002F4F2, 0x0103F40A);
	r1 = D(r1, s[1][0][1], 0xFBF50001, 0x01FFFC01, 0xFB07F7FA, 0xFBF8FD09);
	r2 = D(r2, s[1][0][1], 0xF4FD19EF, 0xFD0804F7, 0xFAFCFE13, 0xF10216FF);
	r3 = D(r3, s[1][0][1], 0xFEFE0616, 0xF6030E16, 0xFAF307FB, 0xFDF2FBFA);
	r4 = D(r4, s[1][0][1], 0xF902FBFF, 0x01FE0000, 0xFF02FDFE, 0x07EA0BFF);
	r5 = D(r5, s[1][0][1], 0x01F60700, 0x0506FDF9, 0x0303EA05, 0x010009E5);
	r6 = D(r6, s[1][0][1], 0xFA0800FB, 0xFAEA08FE, 0xF407CC03, 0xF3FA0E01);
	r7 = D(r7, s[1][0][1], 0xF2FBF501, 0x03080406, 0x0F1328FC, 0x07FCFE01);
	r0 = D(r0, s[1][0][2], 0xE806FA04, 0x0C060600, 0x07FA15F1, 0x0404EE05);
	r1 = D(r1, s[1][0][2], 0xFE03090A, 0x00FE0800, 0x080EF7FD, 0x0B032101);
	r2 = D(r2, s[1][0][2], 0x02FF09FF, 0x090BF5F3, 0xFE05080D, 0x06060611);
	r3 = D(r3, s[1][0][2], 0x04020B0C, 0x00030E15, 0xFFFA0901, 0x0000FD0C);
	r4 = D(r4, s[1][0][2], 0xFB081009, 0xFEFD0507, 0x05040607, 0x0301091D);
	r5 = D(r5, s[1][0][2], 0xFBFC0A0B, 0xFD02FC00, 0x0608FAFC, 0xFCF91FDE);
	r6 = D(r6, s[1][0][2], 0x00FB14F3, 0x10FFF3EC, 0x0009F807, 0xF005FD08);
	r7 = D(r7, s[1][0][2], 0xE9F6F90C, 0xFE04FAF7, 0xF8141906, 0x01F90103);
	r0 = D(r0, s[1][1][0], 0xD7F50DDD, 0xFEEF0102, 0xC3D2EEE8, 0xFF08F905);
	r1 = D(r1, s[1][1][0], 0x04FCFC04, 0xFCFAFA0C, 0x03DAF9ED, 0xFCF90FFA);
	r2 = D(r2, s[1][1][0], 0xFFEC0300, 0xF5070608, 0xF6EFF309, 0xF9F90FE8);
	r3 = D(r3, s[1][1][0], 0x07FA00F3, 0xF5E5F8F6, 0xFCFF0306, 0xFBFD09FA);
	r4 = D(r4, s[1][1][0], 0xE8E70203, 0x0100F91F, 0xF402FAFB, 0xFD2CFBFD);
	r5 = D(r5, s[1][1][0], 0xFCF80200, 0xF2F50DFE, 0xFD050106, 0xFC180F11);
	r6 = D(r6, s[1][1][0], 0xFF0CFBFA, 0xF4FFFCF6, 0xFF10FC09, 0xF2E0FBFF);
	r7 = D(r7, s[1][1][0], 0x0EFF0F0A, 0x010304FB, 0xF409F103, 0x05070FF8);
	r0 = D(r0, s[1][1][1], 0xFE0B0504, 0xEAF60B08, 0xE1E3FD00, 0x0506F4FD);
	r1 = D(r1, s[1][1][1], 0xF7EE0909, 0xFFFBF70E, 0xED07FA05, 0xB41A1E18);
	r2 = D(r2, s[1][1][1], 0xFFF21206, 0x00D2FB18, 0xF5F8FD08, 0xF500EEF5);
	r3 = D(r3, s[1][1][1], 0xF7E7F7E9, 0xF9FEFCF2, 0xF3E8EA02, 0x00E9FE13);
	r4 = D(r4, s[1][1][1], 0xDCF9001B, 0xF903061F, 0xE7030BF5, 0xDBEE19F1);
	r5 = D(r5, s[1][1][1], 0xF0E80410, 0x08080608, 0xFC06FAFB, 0xF6F5F7FC);
	r6 = D(r6, s[1][1][1], 0xC0D8FD03, 0x0396FB01, 0x030C091C, 0xD10BFE03);
	r7 = D(r7, s[1][1][1], 0x0BD6E41E, 0xF8F7DF0A, 0xE6170C16, 0xEC04F807);
	r0 = D(r0, s[1][1][2], 0xEDF9EFEC, 0xFE0A0A06, 0x08FC2C05, 0x0108F603);
	r1 = D(r1, s[1][1][2], 0xE5040503, 0xF5F70203, 0xEB0E1102, 0xB3D424FF);
	r2 = D(r2, s[1][1][2], 0xFAF90AEF, 0xFD021007, 0xE7030503, 0xFFF82E00);
	r3 = D(r3, s[1][1][2], 0x03FC0804, 0xE1FB0303, 0xFE05F107, 0xF0F910FD);
	r4 = D(r4, s[1][1][2], 0xF60407F5, 0xF9FB080A, 0xF90A17FF, 0xF115E1FF);
	r5 = D(r5, s[1][1][2], 0xF1010C0C, 0xFFF30304, 0x030DEF02, 0xF6FB28F9);
	r6 = D(r6, s[1][1][2], 0xDB0D09FC, 0x1DF414FB, 0x0810F80E, 0xF006FE01);
	r7 = D(r7, s[1][1][2], 0x1BEBFEF2, 0x0303FCFA, 0xF70A15FB, 0xFEE90708);
	r0 = D(r0, s[1][2][0], 0xC8E90502, 0xFDEFFD00, 0xFFE30DEE, 0x0211FA02);
	r1 = D(r1, s[1][2][0], 0x01F0FB05, 0xFAFA0004, 0x050C080B, 0x05A810F1);
	r2 = D(r2, s[1][2][0], 0xF9F5030B, 0xFED5E4EB, 0xF601F800, 0xF3090D06);
	r3 = D(r3, s[1][2][0], 0xF3FA0005, 0xFF0E0107, 0xFB080701, 0xFFF1FA00);
	r4 = D(r4, s[1][2][0], 0xE4FFFA01, 0xFCF80202, 0x02F00307, 0xEDE70403);
	r5 = D(r5, s[1][2][0], 0xF3F3FC06, 0x03F508FE, 0x0011F702, 0x0FF4F408);
	r6 = D(r6, s[1][2][0], 0x03050302, 0xF509E2FE, 0x0116EE04, 0xED03F600);
	r7 = D(r7, s[1][2][0], 0x01E8F702, 0xF704FEFF, 0xF5FD19F9, 0x05FDFCFB);
	r0 = D(r0, s[1][2][1], 0xF1021912, 0x02F6F4F8, 0xC3EA21FB, 0xFF110001);
	r1 = D(r1, s[1][2][1], 0xF5D406F8, 0xFCFCF9FD, 0xF40808FB, 0xF4091515);
	r2 = D(r2, s[1][2][1], 0xFCFDFDFC, 0xF807FEF9, 0xFE05F90A, 0xE506FB03);
	r3 = D(r3, s[1][2][1], 0xFB0D040B, 0xF4090207, 0xFDF80803, 0xF0F7EF01);
	r4 = D(r4, s[1][2][1], 0xFC00000B, 0xF5FBFEFE, 0xF101F607, 0xAAFE071A);
	r5 = D(r5, s[1][2][1], 0xF8FDFD02, 0xFEF8041B, 0x03170201, 0x060D04F9);
	r6 = D(r6, s[1][2][1], 0xAF02F4FF, 0x11FB1013, 0xF111FE00, 0xEE0B010B);
	r7 = D(r7, s[1][2][1], 0xF7DBF2E8, 0xF40BED01, 0xFAFC0E12, 0xEAB9F919);
	r0 = D(r0, s[1][2][2], 0xF4FF1BF7, 0xE6FE0C0A, 0xD10609F6, 0x050CF7FC);
	r1 = D(r1, s[1][2][2], 0xE20207F7, 0xF8F70108, 0xF104FF0D, 0x00061BF8);
	r2 = D(r2, s[1][2][2], 0x03FF070C, 0xFF0504FE, 0xF502FF04, 0x0DFA0D05);
	r3 = D(r3, s[1][2][2], 0xF9070102, 0x00FE00FE, 0xF8F9FD05, 0xE8070605);
	r4 = D(r4, s[1][2][2], 0xF6020707, 0xF6F80600, 0xFD0615FF, 0xF7FFF3FC);
	r5 = D(r5, s[1][2][2], 0xF9FA08FC, 0xFAF007FF, 0x060CF203, 0xFE0F0F01);
	r6 = D(r6, s[1][2][2], 0xD2FC1503, 0xF4F604FB, 0x0714F202, 0x01F9FCFF);
	r7 = D(r7, s[1][2][2], 0xE909170D, 0xFD08E00D, 0xED072F07, 0xE10510F8);
	s[0][0][0] = G[10][xy.y+0][xy.x+0]; s[0][0][1] = G[10][xy.y+0][xy.x+1];
	s[0][0][2] = G[10][xy.y+0][xy.x+2]; s[0][1][0] = G[10][xy.y+1][xy.x+0];
	s[0][1][1] = G[10][xy.y+1][xy.x+1]; s[0][1][2] = G[10][xy.y+1][xy.x+2];
	s[0][2][0] = G[10][xy.y+2][xy.x+0]; s[0][2][1] = G[10][xy.y+2][xy.x+1];
	s[0][2][2] = G[10][xy.y+2][xy.x+2]; s[1][0][0] = G[11][xy.y+0][xy.x+0];
	s[1][0][1] = G[11][xy.y+0][xy.x+1]; s[1][0][2] = G[11][xy.y+0][xy.x+2];
	s[1][1][0] = G[11][xy.y+1][xy.x+0]; s[1][1][1] = G[11][xy.y+1][xy.x+1];
	s[1][1][2] = G[11][xy.y+1][xy.x+2]; s[1][2][0] = G[11][xy.y+2][xy.x+0];
	s[1][2][1] = G[11][xy.y+2][xy.x+1]; s[1][2][2] = G[11][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xF50F0107, 0x0808F70F, 0xFE10E4F0, 0x09040201);
	r1 = D(r1, s[0][0][0], 0xF2F9F802, 0x02FB05FB, 0x030CF906, 0x04E51B0E);
	r2 = D(r2, s[0][0][0], 0xEFFD06F7, 0x1701FC0E, 0x07EEF8FF, 0xFE02FD00);
	r3 = D(r3, s[0][0][0], 0x0B11FA04, 0x0602F1FF, 0x02F6F8FB, 0x0D0101F8);
	r4 = D(r4, s[0][0][0], 0x0AED05ED, 0xFAF90303, 0x0DFB0505, 0x140F02F2);
	r5 = D(r5, s[0][0][0], 0xFEF0FDF5, 0x04FDFA00, 0x14040300, 0x05E1F204);
	r6 = D(r6, s[0][0][0], 0xF711F7FE, 0x2B05FB0D, 0x0608EBFC, 0xFD0000E6);
	r7 = D(r7, s[0][0][0], 0x290C00ED, 0xF9EA0201, 0xE9DD06ED, 0x1D0E0204);
	r0 = D(r0, s[0][0][1], 0xFCECDF01, 0xF9E40103, 0xF204F1EB, 0x120B0402);
	r1 = D(r1, s[0][0][1], 0xF3F8EE0A, 0x0203FBFF, 0x06ECF4FF, 0xF444FE0B);
	r2 = D(r2, s[0][0][1], 0xF9FE01FD, 0x0CF5F0FF, 0x1102F8FC, 0xF80709FA);
	r3 = D(r3, s[0][0][1], 0x110C1100, 0x1204EF02, 0xFEE807FB, 0x07FF0A06);
	r4 = D(r4, s[0][0][1], 0x0E02E408, 0x07FB0203, 0x140E06F8, 0xF3EE1CFD);
	r5 = D(r5, s[0][0][1], 0xF9FC0104, 0xFAF404FD, 0x01040904, 0x310B0EFB);
	r6 = D(r6, s[0][0][1], 0xED0102F8, 0x2CF1D40B, 0x060FFCFB, 0xFF0CFA07);
	r7 = D(r7, s[0][0][1], 0xF6E9FA15, 0x0309FF00, 0xCBEEFC08, 0x06000A07);
	r0 = D(r0, s[0][0][2], 0xFE1E00F1, 0x0AFAFE01, 0xFFD4F1F8, 0x05F70900);
	r1 = D(r1, s[0][0][2], 0x04F80EFD, 0x02FF01FB, 0x0FFCFF04, 0xF8C9F9E5);
	r2 = D(r2, s[0][0][2], 0xF3EAF5FA, 0xFF10FFFD, 0xFBF5F6F9, 0xF1F1FEFA);
	r3 = D(r3, s[0][0][2], 0x09FE0CFF, 0xFBF2F3FF, 0xFD000801, 0xF90BFE03);
	r4 = D(r4, s[0][0][2], 0xF80AF70C, 0xFAFDFFFA, 0xE1EDEE02, 0xF2DAFAF2);
	r5 = D(r5, s[0][0][2], 0xF7FCFCFE, 0x0DFAF3F9, 0x04000AFF, 0xE802F307);
	r6 = D(r6, s[0][0][2], 0xF4F20303, 0x1D34DEFC, 0x03050CFC, 0xF7F901FE);
	r7 = D(r7, s[0][0][2], 0x2118020B, 0x14120501, 0x161EF1FF, 0x08160203);
	r0 = D(r0, s[0][1][0], 0x0CFE2111, 0xF5F000F3, 0xFFF8B8BB, 0xFBFAFCFD);
	r1 = D(r1, s[0][1][0], 0x0106FEE5, 0x0400FDF9, 0xEEE3F809, 0xF6ED0108);
	r2 = D(r2, s[0][1][0], 0x01FE00F4, 0x0016EDF5, 0x04FB00EC, 0xE7E01005);
	r3 = D(r3, s[0][1][0], 0xF4F7FAF9, 0x0FEBF1EB, 0x10F8FB05, 0xF50A1606);
	r4 = D(r4, s[0][1][0], 0xFA0902F2, 0x010001FF, 0x17FA02F6, 0x060C02CF);
	r5 = D(r5, s[0][1][0], 0x00FF05FE, 0xEE04FEFF, 0x03FF0107, 0xFE04EEFB);
	r6 = D(r6, s[0][1][0], 0xF3F1ECF6, 0xF8DCEDE6, 0xFDFB0F03, 0x000AF7F3);
	r7 = D(r7, s[0][1][0], 0xE1101418, 0xFD000801, 0x220F0EC5, 0xFCF302FB);
	r0 = D(r0, s[0][1][1], 0x0219F2EE, 0x08FFFCFA, 0xFDFCBFEE, 0x17FAEE10);
	r1 = D(r1, s[0][1][1], 0x1715F3FA, 0x00FEF1FD, 0x08F5C610, 0xFD1CCCF2);
	r2 = D(r2, s[0][1][1], 0x06050002, 0x0DEB81F2, 0x00EBFAFA, 0x242C1A04);
	r3 = D(r3, s[0][1][1], 0xF7FCDFED, 0xF2F70704, 0x01FCFAF7, 0x1009E0E3);
	r4 = D(r4, s[0][1][1], 0xF3F316E8, 0xFFF9F6FA, 0xF009DBF9, 0xE1D0E819);
	r5 = D(r5, s[0][1][1], 0x01FEFCF7, 0x280BF8EE, 0xFBF9EEF8, 0x09122A03);
	r6 = D(r6, s[0][1][1], 0x050D0FFE, 0x15D1A1C2, 0x11170C15, 0xF3FE0903);
	r7 = D(r7, s[0][1][1], 0x211AEC19, 0xF1E7F103, 0xF8DDF600, 0x3002F7F7);
	r0 = D(r0, s[0][1][2], 0xE9F3EFFE, 0x08EB04FF, 0xFA010CFF, 0xFF07FF00);
	r1 = D(r1, s[0][1][2], 0xFA06FFFB, 0xFDFD00FC, 0xFC06FBF9, 0x04DAD401);
	r2 = D(r2, s[0][1][2], 0xF8080206, 0xFEDBF602, 0x07F806F9, 0xE4F60003);
	r3 = D(r3, s[0][1][2], 0x0201FB03, 0x02050703, 0x0007FEF8, 0xF8FF0102);
	r4 = D(r4, s[0][1][2], 0x06FAFBF8, 0xFEFFFBFC, 0xF3FC0303, 0xF6EEF8FF);
	r5 = D(r5, s[0][1][2], 0xF9F9F5EF, 0xFA09FD05, 0x03090406, 0xF505020F);
	r6 = D(r6, s[0][1][2], 0x070302EB, 0x01E2C1E9, 0x0E0F0409, 0xF6EEF100);
	r7 = D(r7, s[0][1][2], 0xFF0FF718, 0x0907F804, 0xDD81EA07, 0xF7030FF4);
	r0 = D(r0, s[0][2][0], 0x17EE01F7, 0xFAFDFA08, 0xF0F9F205, 0xFF01F701);
	r1 = D(r1, s[0][2][0], 0xF30701F7, 0x0200FDFA, 0x02F90100, 0x080F32FF);
	r2 = D(r2, s[0][2][0], 0xF4F4FC01, 0x02F20BFD, 0x0CEB04FF, 0xFAFFF20E);
	r3 = D(r3, s[0][2][0], 0x04F40106, 0x04EF0CFD, 0x08FEF7FB, 0xF0100B01);
	r4 = D(r4, s[0][2][0], 0xFCE9F4FA, 0xFF0701F9, 0x15050805, 0xF80A1302);
	r5 = D(r5, s[0][2][0], 0xF0FCFD01, 0x05F5030C, 0xFDFFFEFD, 0x08EBE100);
	r6 = D(r6, s[0][2][0], 0xF704FBFC, 0x28F013FD, 0xFB04FCF8, 0xFD010201);
	r7 = D(r7, s[0][2][0], 0x17FC19F9, 0x04F9F7F3, 0xF0A90CF2, 0xE81B11FE);
	r0 = D(r0, s[0][2][1], 0xD40BFCEB, 0x0BFAFEF5, 0xF703E6F2, 0x0106F2F7);
	r1 = D(r1, s[0][2][1], 0x0F02ED07, 0xFFFCFA03, 0x0FFB0FFE, 0x0510F311);
	r2 = D(r2, s[0][2][1], 0xF8F9F7F2, 0x09E81300, 0x00FE0801, 0x15E7090F);
	r3 = D(r3, s[0][2][1], 0x09000409, 0x04FC04F5, 0xF9070102, 0xF3F501FF);
	r4 = D(r4, s[0][2][1], 0x0909FEF6, 0x0302FDFA, 0x04FDFE08, 0x18E6FBFE);
	r5 = D(r5, s[0][2][1], 0x050503FC, 0xF5FF0508, 0x09FFFE06, 0xFAF6F6FA);
	r6 = D(r6, s[0][2][1], 0x0408FBFB, 0xF2F30A08, 0x02FD17FA, 0xFEECF7F9);
	r7 = D(r7, s[0][2][1], 0xFBCA0BFF, 0x110F0C00, 0xF60B1D06, 0x0100F3FC);
	r0 = D(r0, s[0][2][2], 0xF6EF03DB, 0x05070DFA, 0x000A0BF4, 0x0207F8F7);
	r1 = D(r1, s[0][2][2], 0x030707FC, 0x02FB07FE, 0x0CF71008, 0x01D81CEA);
	r2 = D(r2, s[0][2][2], 0xF20008F6, 0x0B0501FC, 0xFD02FBF9, 0x0C08EAEB);
	r3 = D(r3, s[0][2][2], 0x03FCFEFF, 0x020C00FD, 0xFA07FD04, 0x01F405FC);
	r4 = D(r4, s[0][2][2], 0xF9FEF9F8, 0xFA01F701, 0xF0F0F902, 0x0A02F7F6);
	r5 = D(r5, s[0][2][2], 0xF8FEFBF8, 0x0BF8FF08, 0x0502F2F9, 0xF0EF08FA);
	r6 = D(r6, s[0][2][2], 0xFAFEFBFD, 0x12E80501, 0x0221F3F6, 0x030AFBFF);
	r7 = D(r7, s[0][2][2], 0x13280EF5, 0x040FF2FE, 0x09F61105, 0x00EFEEED);
	r0 = D(r0, s[1][0][0], 0x04F2EBEC, 0x04FFFB07, 0x0CF8E403, 0x0602FD02);
	r1 = D(r1, s[1][0][0], 0x19FE03FD, 0x000105FE, 0x0AFEF6FE, 0x0E0E1DBC);
	r2 = D(r2, s[1][0][0], 0x03F90608, 0xF6080210, 0xFEF50615, 0x07070F06);
	r3 = D(r3, s[1][0][0], 0xF4FFF90A, 0x02E90A15, 0x06FAFEF4, 0xFE07FE01);
	r4 = D(r4, s[1][0][0], 0x13FF0C07, 0x06F90400, 0xFDFB0201, 0xFEFA0F07);
	r5 = D(r5, s[1][0][0], 0x0800070B, 0x0C070104, 0x0902F502, 0x0AE301FB);
	r6 = D(r6, s[1][0][0], 0xFDFAFCFB, 0xF90E0026, 0x0AFCFE04, 0x19FE0108);
	r7 = D(r7, s[1][0][0], 0xF7EDEB02, 0x090502FD, 0x03FB05F0, 0xFE00F402);
	r0 = D(r0, s[1][0][1], 0x0CF806E3, 0x01F9FB0D, 0x12F40117, 0x0903FD10);
	r1 = D(r1, s[1][0][1], 0x0BFC0102, 0x01FE0101, 0x00FAFB16, 0x14ED00DF);
	r2 = D(r2, s[1][0][1], 0xFBFC0400, 0xF5010007, 0xFAFC030B, 0x25FA0512);
	r3 = D(r3, s[1][0][1], 0x01FF0310, 0xFAF50508, 0xFC13F6F3, 0xF0FFFF09);
	r4 = D(r4, s[1][0][1], 0x0C020905, 0xF4000205, 0x0305FA03, 0xFFF3071B);
	r5 = D(r5, s[1][0][1], 0xFCF7040A, 0x0A0103FD, 0x0401FE0A, 0xFEDEF708);
	r6 = D(r6, s[1][0][1], 0x0CF8F708, 0xEDEB0F09, 0x180A02FF, 0x0BEC0214);
	r7 = D(r7, s[1][0][1], 0x1103F912, 0x10F5F615, 0xF8FDF217, 0xF5FFEB0C);
	r0 = D(r0, s[1][0][2], 0x110BEFFC, 0x07000901, 0x0E00FFFC, 0x07FDFAF9);
	r1 = D(r1, s[1][0][2], 0x1BF40D09, 0x0BFC0004, 0x0307010B, 0x20FB0018);
	r2 = D(r2, s[1][0][2], 0x00FF060D, 0xF80BF90A, 0x01F503FA, 0x10050A12);
	r3 = D(r3, s[1][0][2], 0x13FEF6FB, 0x13EDFEFE, 0x0A07050B, 0xFFFEF809);
	r4 = D(r4, s[1][0][2], 0xFDFBFC01, 0x0B030201, 0x0AFC06F3, 0x05FCEEF3);
	r5 = D(r5, s[1][0][2], 0x1101FE0C, 0x090D0408, 0x0BFFF7FD, 0x0700180F);
	r6 = D(r6, s[1][0][2], 0x09F5FBFB, 0x21F6E1EF, 0xEC13FD07, 0x06F9F708);
	r7 = D(r7, s[1][0][2], 0x11F3F208, 0x1CFE0404, 0xF4E20C2B, 0x11F9FC0C);
	r0 = D(r0, s[1][1][0], 0xFF06FE1A, 0xFFFFFEF6, 0xFE10E023, 0x00010001);
	r1 = D(r1, s[1][1][0], 0x040701FD, 0x05FFFF00, 0xFB08F9F6, 0x3BFDCC38);
	r2 = D(r2, s[1][1][0], 0x0700FF03, 0xF502FACB, 0xFF07F809, 0x1EE40C0F);
	r3 = D(r3, s[1][1][0], 0xFE0509F3, 0x0206DB0E, 0xFCF10002, 0xFDFCF309);
	r4 = D(r4, s[1][1][0], 0x0303021D, 0x030406F3, 0xFEFCF309, 0x100C1400);
	r5 = D(r5, s[1][1][0], 0xFCF8FE05, 0xF5F9FCE0, 0xFBF5000B, 0x0CE50304);
	r6 = D(r6, s[1][1][0], 0x050607F7, 0x0A05F2EA, 0x0CFEEF0A, 0xF5FBE307);
	r7 = D(r7, s[1][1][0], 0x07F9F207, 0xF3F8FCF2, 0xE3F90AE0, 0xF4EDF402);
	r0 = D(r0, s[1][1][1], 0x1BFCF7F9, 0x0EF1F904, 0xF0F40A1C, 0xFFFF010F);
	r1 = D(r1, s[1][1][1], 0x0AFA04EB, 0x14FE00F5, 0x1703FBE7, 0xDEFF0C0B);
	r2 = D(r2, s[1][1][1], 0xFF0AFB03, 0x11F907F6, 0x11F8F8F7, 0x0AF40117);
	r3 = D(r3, s[1][1][1], 0x0AF902FC, 0x2011E915, 0xF319FAF5, 0xF00E0BFE);
	r4 = D(r4, s[1][1][1], 0x020FFC1F, 0x070905FE, 0x050B0106, 0x04F4FE1D);
	r5 = D(r5, s[1][1][1], 0xFF040109, 0x02F40E01, 0xFDFB030F, 0x0ED7F60C);
	r6 = D(r6, s[1][1][1], 0x0AF7FE04, 0x0613FE16, 0xE9F8FC04, 0x1D00E500);
	r7 = D(r7, s[1][1][1], 0x00E50AFE, 0xFBF7F2F8, 0x0AEAEFE0, 0xCE0AFE02);
	r0 = D(r0, s[1][1][2], 0x08FAEF09, 0x0507FF07, 0x0211F2E5, 0x14F401F4);
	r1 = D(r1, s[1][1][2], 0x00F3FCD0, 0x0DFD05F9, 0x05FEF9F4, 0xF814EDD9);
	r2 = D(r2, s[1][1][2], 0x15FE0302, 0x04EA0708, 0x03FAFD0C, 0x1C011011);
	r3 = D(r3, s[1][1][2], 0xF80F07FE, 0x0C02F5FE, 0x0500FA10, 0x08FCF80B);
	r4 = D(r4, s[1][1][2], 0x05F704E3, 0x0CFB05FE, 0x0808FD0A, 0xEE0EF7F9);
	r5 = D(r5, s[1][1][2], 0x06010404, 0x06FE0709, 0x0608FCFB, 0xFD060916);
	r6 = D(r6, s[1][1][2], 0x000CFC17, 0xFC1522F8, 0x08F7FB18, 0x0505F205);
	r7 = D(r7, s[1][1][2], 0x19040B1A, 0x101104FB, 0x0800F5C5, 0x2009FEFC);
	r0 = D(r0, s[1][2][0], 0x08FE05E3, 0xFE06FBEB, 0x07FADB21, 0x0AFF0105);
	r1 = D(r1, s[1][2][0], 0x0F04E3EB, 0x070502FF, 0xFF05FB19, 0xE61ADEC2);
	r2 = D(r2, s[1][2][0], 0x0B01FA03, 0xFF08F419, 0xFDFEFC11, 0x0A0BFD16);
	r3 = D(r3, s[1][2][0], 0x03030801, 0x01FAFE03, 0x05FC0408, 0xFC03010F);
	r4 = D(r4, s[1][2][0], 0x0FEFFD04, 0x0002FE08, 0xF9F70502, 0xE109D5F8);
	r5 = D(r5, s[1][2][0], 0x0E050401, 0x0106FD1C, 0x08000202, 0x11000900);
	r6 = D(r6, s[1][2][0], 0x0608FCF9, 0xFCF20C23, 0xD602FAF3, 0xF8FED609);
	r7 = D(r7, s[1][2][0], 0xF204F70A, 0x04F30102, 0x1407DCFC, 0x01F70715);
	r0 = D(r0, s[1][2][1], 0x08FDEFFC, 0x1101FCD6, 0x3000000D, 0x0A010F07);
	r1 = D(r1, s[1][2][1], 0x13FE0BFE, 0x0DFDFA07, 0x09FD010B, 0x0FFAEDFD);
	r2 = D(r2, s[1][2][1], 0xFDF4FEF7, 0x1508F305, 0x03F9FE08, 0x13FFFE12);
	r3 = D(r3, s[1][2][1], 0x14ED000E, 0xF6FBF307, 0x0100FF09, 0x06FEF206);
	r4 = D(r4, s[1][2][1], 0x10FFF4FC, 0x0706F902, 0x020BF6FF, 0x0D0EF62C);
	r5 = D(r5, s[1][2][1], 0x100AF700, 0x05FFFB0A, 0x04FC050D, 0x0DFBFF03);
	r6 = D(r6, s[1][2][1], 0x1402F9F8, 0xEBEEFD00, 0xEBF103FB, 0x05FBEB09);
	r7 = D(r7, s[1][2][1], 0x1701E4F0, 0x08E3FA0B, 0xFF032809, 0x060EFE16);
	r0 = D(r0, s[1][2][2], 0x16191725, 0x0908F2F6, 0x0E16FBF0, 0x03010801);
	r1 = D(r1, s[1][2][2], 0x1DF6E9FA, 0x17FE0203, 0x0A03040B, 0x030AF432);
	r2 = D(r2, s[1][2][2], 0x02FD040B, 0xFB030403, 0x0C02F505, 0x1701FF0F);
	r3 = D(r3, s[1][2][2], 0x01F0FC09, 0x0001E413, 0xFD0CEAFF, 0x0A00F30F);
	r4 = D(r4, s[1][2][2], 0x1B08FBF9, 0x0DFC040C, 0x04FC0207, 0xE2F6EF11);
	r5 = D(r5, s[1][2][2], 0x1FF9FBF8, 0x0D0E0203, 0xFEF807FC, 0x2A0003FE);
	r6 = D(r6, s[1][2][2], 0x0502F50F, 0xED07DE05, 0xDDE70AE5, 0x18FEFDFE);
	r7 = D(r7, s[1][2][2], 0xFB08EF17, 0x0203031A, 0x29DBE6D5, 0xFDFCDF0C);
	s[0][0][0] = G[12][xy.y+0][xy.x+0]; s[0][0][1] = G[12][xy.y+0][xy.x+1];
	s[0][0][2] = G[12][xy.y+0][xy.x+2]; s[0][1][0] = G[12][xy.y+1][xy.x+0];
	s[0][1][1] = G[12][xy.y+1][xy.x+1]; s[0][1][2] = G[12][xy.y+1][xy.x+2];
	s[0][2][0] = G[12][xy.y+2][xy.x+0]; s[0][2][1] = G[12][xy.y+2][xy.x+1];
	s[0][2][2] = G[12][xy.y+2][xy.x+2]; s[1][0][0] = G[13][xy.y+0][xy.x+0];
	s[1][0][1] = G[13][xy.y+0][xy.x+1]; s[1][0][2] = G[13][xy.y+0][xy.x+2];
	s[1][1][0] = G[13][xy.y+1][xy.x+0]; s[1][1][1] = G[13][xy.y+1][xy.x+1];
	s[1][1][2] = G[13][xy.y+1][xy.x+2]; s[1][2][0] = G[13][xy.y+2][xy.x+0];
	s[1][2][1] = G[13][xy.y+2][xy.x+1]; s[1][2][2] = G[13][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x13FE040C, 0xFE0317F2, 0x0FFF10FA, 0x0FFF10FE);
	r1 = D(r1, s[0][0][0], 0x06F5FFEC, 0xFA08FEFF, 0xF6FEFBE1, 0xBB08D7FE);
	r2 = D(r2, s[0][0][0], 0xFF041DFC, 0x05FC1201, 0xFEFEF9F1, 0x0F001CF4);
	r3 = D(r3, s[0][0][0], 0x0CF71DFE, 0xE20524F8, 0x00FB0DFD, 0x01F80601);
	r4 = D(r4, s[0][0][0], 0x07FB0FFF, 0xFFFAF3FC, 0xFBFF12F8, 0xF3021AFC);
	r5 = D(r5, s[0][0][0], 0xFF030BFB, 0x0FF3E8F0, 0x10F90CFF, 0xFD0528F6);
	r6 = D(r6, s[0][0][0], 0x14041BF3, 0x1DE64ADE, 0xF9000906, 0xFEF51A00);
	r7 = D(r7, s[0][0][0], 0x06E5FDE9, 0xFC050CF6, 0xFBE92305, 0x1EF00D01);
	r0 = D(r0, s[0][0][1], 0xFAFFF411, 0x0CFA08F2, 0x111A1A08, 0x120012FA);
	r1 = D(r1, s[0][0][1], 0xFFEC1E09, 0xFD020DFD, 0x0AF509E2, 0xD0060A11);
	r2 = D(r2, s[0][0][1], 0xF6070D0C, 0x09FCFBFB, 0xF7FDEFEF, 0x09FE23EE);
	r3 = D(r3, s[0][0][1], 0x06FAF403, 0xF50806F3, 0xFB000202, 0x05F70EFC);
	r4 = D(r4, s[0][0][1], 0x0CFE14F3, 0x01FC09FD, 0xFF031700, 0x14FEF50C);
	r5 = D(r5, s[0][0][1], 0x03000B00, 0x00F008F2, 0x10FA0FFA, 0x08EC22DE);
	r6 = D(r6, s[0][0][1], 0x0BFC10FE, 0x17E11AF2, 0xF302FFEE, 0x05080200);
	r7 = D(r7, s[0][0][1], 0x0DCFE50D, 0x0CFCF8F0, 0xF206F206, 0x02F92AF6);
	r0 = D(r0, s[0][0][2], 0x0CFE19F8, 0x01FC08FA, 0xF1001808, 0x12FD0BFE);
	r1 = D(r1, s[0][0][2], 0xF3F61804, 0xFD0101FF, 0x0CF9FCEE, 0x0EFB0CFD);
	r2 = D(r2, s[0][0][2], 0xFC0AFAFF, 0x0A00F703, 0x060008FB, 0xFF0F23FC);
	r3 = D(r3, s[0][0][2], 0x0BFFFD05, 0xFB0B18F1, 0xF9040F01, 0x03040D03);
	r4 = D(r4, s[0][0][2], 0xFF0818FD, 0xF80106FE, 0xF307F006, 0xEDFD1A1A);
	r5 = D(r5, s[0][0][2], 0x01060D04, 0xFFF8EC02, 0x16FCFCFB, 0xF309270A);
	r6 = D(r6, s[0][0][2], 0xFE0B0108, 0x9FF922F1, 0xFC0509F9, 0x04F81300);
	r7 = D(r7, s[0][0][2], 0xF7F0EBEA, 0x0CFA1BF0, 0xF4F3E3EF, 0xFFF404FE);
	r0 = D(r0, s[0][1][0], 0xFD0324FE, 0xF4000AE8, 0x18FE08F4, 0x09000DFC);
	r1 = D(r1, s[0][1][0], 0x101108ED, 0x03040D04, 0xCEFAF6E4, 0xFF080B09);
	r2 = D(r2, s[0][1][0], 0x05FD0FF2, 0xF20725F3, 0x00F805F5, 0x040818F2);
	r3 = D(r3, s[0][1][0], 0xF00E1FF5, 0x13F409F9, 0x09EE0902, 0x09F00506);
	r4 = D(r4, s[0][1][0], 0x05F010EF, 0x04061201, 0xFCFF17FB, 0xF7FADFE5);
	r5 = D(r5, s[0][1][0], 0xF6011301, 0xF80719E4, 0x01FE0B03, 0xF50D15E9);
	r6 = D(r6, s[0][1][0], 0x120DFCF9, 0xD20DFF07, 0xF5F9FEF2, 0x11F633FC);
	r7 = D(r7, s[0][1][0], 0x0AF622F3, 0xFE0D0601, 0x02FD18E3, 0x0C03081B);
	r0 = D(r0, s[0][1][1], 0xFEFC13FA, 0xF80007F6, 0x08F61707, 0x0FE812FA);
	r1 = D(r1, s[0][1][1], 0x0EF515F3, 0xFD0A06FE, 0xF303F7FF, 0x170CAF04);
	r2 = D(r2, s[0][1][1], 0x01090804, 0x07FF2612, 0x040A00F8, 0xF1F3FEFF);
	r3 = D(r3, s[0][1][1], 0xFFFA1404, 0x02050600, 0x0C161400, 0xF60CFDFE);
	r4 = D(r4, s[0][1][1], 0x09FF2DFA, 0x07FAFC07, 0xEBFFFCFA, 0x080403FF);
	r5 = D(r5, s[0][1][1], 0x06090302, 0x001109FF, 0x0AFD0EF6, 0x05120CD3);
	r6 = D(r6, s[0][1][1], 0x0211130C, 0x0408FE12, 0x0CEE0BEF, 0xFF03FE03);
	r7 = D(r7, s[0][1][1], 0xF3F10AE0, 0x11020EFE, 0x0BE510E9, 0xF6020FE4);
	r0 = D(r0, s[0][1][2], 0x070904FD, 0xF3FE06E8, 0xFCFE090B, 0x110204FB);
	r1 = D(r1, s[0][1][2], 0xFD02FC02, 0xFC020BFF, 0xF4000BE8, 0x09070DFE);
	r2 = D(r2, s[0][1][2], 0x030404FC, 0x040D19F1, 0xFEFD0AFE, 0x18082DF2);
	r3 = D(r3, s[0][1][2], 0x08FF14FA, 0xF5F4FB18, 0xFF020103, 0x050415FF);
	r4 = D(r4, s[0][1][2], 0x02F40D09, 0x00050900, 0x020AFAFC, 0x22FC09F5);
	r5 = D(r5, s[0][1][2], 0xFB0B1200, 0x060506FF, 0x0EFBFAFA, 0x061C1002);
	r6 = D(r6, s[0][1][2], 0x08050914, 0x1701F5F3, 0x0BF507F7, 0x030CFC01);
	r7 = D(r7, s[0][1][2], 0x14021900, 0x09120BFF, 0xF30A0919, 0x0CFA0D00);
	r0 = D(r0, s[0][2][0], 0x21FA0909, 0xFAF7FCFE, 0x03051AEC, 0x0DF209FD);
	r1 = D(r1, s[0][2][0], 0x0CFB1BF5, 0xFF0100FC, 0x030D0B01, 0xE7ED22F2);
	r2 = D(r2, s[0][2][0], 0xF7070EFF, 0x000607F4, 0x0B030801, 0xF2F222EC);
	r3 = D(r3, s[0][2][0], 0xFF070DFC, 0xF7FD1008, 0x0108FB01, 0xFEFE0DF2);
	r4 = D(r4, s[0][2][0], 0x0E051F04, 0x00030703, 0x040B01EE, 0x0A0C11F7);
	r5 = D(r5, s[0][2][0], 0x010404FE, 0xE51414DC, 0x0AF701FA, 0x14062EF1);
	r6 = D(r6, s[0][2][0], 0x06FA11F8, 0x11F40218, 0xFBF9FF01, 0x0C08200F);
	r7 = D(r7, s[0][2][0], 0x17E90DDD, 0x0D051500, 0xF1F8F709, 0x04EEFAE0);
	r0 = D(r0, s[0][2][1], 0x1AFFEF1D, 0xFBF0090D, 0x0AFB8115, 0x1BF7FDF2);
	r1 = D(r1, s[0][2][1], 0x06EC1907, 0xFE0B05FE, 0xF4FAF2F9, 0xFB1625FE);
	r2 = D(r2, s[0][2][1], 0xFF07FA06, 0xE9FC0409, 0xFFFAFD04, 0x07EB1B0F);
	r3 = D(r3, s[0][2][1], 0xEB03FC13, 0xFEF4F2FB, 0xFAFB0E04, 0x02100A02);
	r4 = D(r4, s[0][2][1], 0xF4F61200, 0x0205FFFE, 0xF7060D19, 0xF9EA2E0B);
	r5 = D(r5, s[0][2][1], 0xF70BF5FE, 0xF0FC10F4, 0x13F705F3, 0x12151407);
	r6 = D(r6, s[0][2][1], 0x0AFF1304, 0xFFFD26F9, 0xF9F7F101, 0xFCFC0D09);
	r7 = D(r7, s[0][2][1], 0xFCE20CE4, 0x08EE0EFA, 0xC904E8F9, 0x0502F9FF);
	r0 = D(r0, s[0][2][2], 0xEF09ED0B, 0x08F60606, 0x35F711F9, 0x0EFD02F8);
	r1 = D(r1, s[0][2][2], 0xFFFD0E00, 0xFCFD0703, 0x0BFA0F04, 0x0001E81F);
	r2 = D(r2, s[0][2][2], 0xF90AF5FC, 0xF0F614FF, 0x00FF08FD, 0x00F31BFB);
	r3 = D(r3, s[0][2][2], 0xF5FD120B, 0x02FC0BF9, 0xFD090702, 0xFFF506FE);
	r4 = D(r4, s[0][2][2], 0xFF020107, 0xFFFD0103, 0xF00A06F8, 0xFFFBF4F5);
	r5 = D(r5, s[0][2][2], 0x02050301, 0x03FCFCF1, 0x10FA07F8, 0xFB022911);
	r6 = D(r6, s[0][2][2], 0xFF0A0715, 0x0DEFFE0C, 0x0DF80EF9, 0xFE04F9EF);
	r7 = D(r7, s[0][2][2], 0xF7E8ECF6, 0x15001100, 0x06DB28FB, 0x05FF0EFA);
	r0 = D(r0, s[1][0][0], 0xE9F50DFB, 0xFBF6F909, 0xEBEC2AF0, 0xF806DFF8);
	r1 = D(r1, s[1][0][0], 0xFCFB0307, 0x01FF0402, 0x08F0F00A, 0x13E1F50C);
	r2 = D(r2, s[1][0][0], 0x04F81302, 0xF901FD06, 0xFEF40B0B, 0x06F00301);
	r3 = D(r3, s[1][0][0], 0x02030103, 0x01E1080C, 0xFD02FC05, 0xFD0601FF);
	r4 = D(r4, s[1][0][0], 0xFCF006FD, 0x01FD0B07, 0x04F7F7EF, 0x00001005);
	r5 = D(r5, s[1][0][0], 0x030B0B00, 0x0202F2FF, 0xF707E2F4, 0xFF0AEB07);
	r6 = D(r6, s[1][0][0], 0xF7F6FB06, 0xF3C1080B, 0x0CFEF711, 0x08F00112);
	r7 = D(r7, s[1][0][0], 0x14FEF00B, 0xFA01F300, 0x08E50CF3, 0xF50AFC00);
	r0 = D(r0, s[1][0][1], 0xF9FF01FA, 0xFBF7FA10, 0xEFF31406, 0xF606E4F7);
	r1 = D(r1, s[1][0][1], 0xFB01F704, 0x01FF0803, 0xFFE7F809, 0xFB1209FF);
	r2 = D(r2, s[1][0][1], 0x07FA140D, 0xFCFEF60A, 0x00F1FA0C, 0x0302F10A);
	r3 = D(r3, s[1][0][1], 0xFAFDF303, 0x07E0F500, 0xFCF8F700, 0xFF04FB08);
	r4 = D(r4, s[1][0][1], 0xFFF906FB, 0x01FD00FF, 0xFC11FF07, 0x14E2FA00);
	r5 = D(r5, s[1][0][1], 0x04FF0A01, 0x0005FD11, 0xF407E3FF, 0x07EF0513);
	r6 = D(r6, s[1][0][1], 0xFDF50FF4, 0xF2FC0020, 0x0EF5F304, 0x09F603FF);
	r7 = D(r7, s[1][0][1], 0x000714DB, 0x0209FDFD, 0xF71504EC, 0x0303F2F1);
	r0 = D(r0, s[1][0][2], 0xF71007F9, 0x04FFF306, 0x0101FC1F, 0xF809E6EC);
	r1 = D(r1, s[1][0][2], 0x01F9080D, 0x00FD0506, 0x0403F6F3, 0x08FC0508);
	r2 = D(r2, s[1][0][2], 0x09FE0507, 0xF7FCFC0A, 0xFDF900F9, 0x09FA03FD);
	r3 = D(r3, s[1][0][2], 0xF9FBF5FE, 0x05E301ED, 0x04040C04, 0xFEF3F709);
	r4 = D(r4, s[1][0][2], 0x03E60401, 0x04FC00FD, 0x07F8F9FB, 0xFA00F205);
	r5 = D(r5, s[1][0][2], 0xF9FBFE08, 0x09050000, 0xFA08E4F3, 0xFA02F9DB);
	r6 = D(r6, s[1][0][2], 0x03F70E03, 0x14CDDFE8, 0xFF02EBF5, 0x00020602);
	r7 = D(r7, s[1][0][2], 0x1BEE1219, 0x01F5F406, 0x1FEE0DEE, 0x02FEF700);
	r0 = D(r0, s[1][1][0], 0xFF00F5F4, 0x0AF80004, 0xEF132616, 0xF803E3F7);
	r1 = D(r1, s[1][1][0], 0xFA040301, 0x02030101, 0x04FA0701, 0xEFF9060A);
	r2 = D(r2, s[1][1][0], 0xF7FD0FFC, 0x1FF2F6F9, 0x08F90204, 0xF806FB1A);
	r3 = D(r3, s[1][1][0], 0xF500F8FF, 0x0407F9F5, 0x0404F807, 0x0D04FEFB);
	r4 = D(r4, s[1][1][0], 0x03F0050C, 0xFE0001FB, 0x01FFF7FA, 0xF8FCFD2B);
	r5 = D(r5, s[1][1][0], 0x01FC05FD, 0xF303FB06, 0xFAFEEEF5, 0x03FCF502);
	r6 = D(r6, s[1][1][0], 0xE900070F, 0xFAF6FDF4, 0xFFF1F5F6, 0xF7F8F80A);
	r7 = D(r7, s[1][1][0], 0xF9EC00FD, 0x00FDF9F8, 0x04DE1820, 0xFF0BF5F4);
	r0 = D(r0, s[1][1][1], 0xE5FF05F1, 0x13F5F905, 0xE1F8070B, 0xF1FAF2ED);
	r1 = D(r1, s[1][1][1], 0x02F9E2F4, 0x04FB03FA, 0x04EFFBF4, 0xD7F103EC);
	r2 = D(r2, s[1][1][1], 0xF702F7FD, 0xFEDBEEE9, 0x09F705FF, 0xF5060612);
	r3 = D(r3, s[1][1][1], 0x04EFFEF5, 0x07EC0903, 0xF7FFFA0E, 0xFAF8060D);
	r4 = D(r4, s[1][1][1], 0xF8DDFD11, 0x04010404, 0xECFF1F18, 0x08FB0FFF);
	r5 = D(r5, s[1][1][1], 0x00F90300, 0xF0EFF8E7, 0x0701EEFF, 0x00EEEC0D);
	r6 = D(r6, s[1][1][1], 0xF9F200F4, 0xDDDC1CF1, 0xFCEFE30E, 0x09FAFF11);
	r7 = D(r7, s[1][1][1], 0x01E20B2A, 0x040509ED, 0xF0CE06D4, 0xFF060E07);
	r0 = D(r0, s[1][1][2], 0xF0040C03, 0x0DFDFFF0, 0xF40BF2EC, 0xF902EDF0);
	r1 = D(r1, s[1][1][2], 0x01FEF9F7, 0xFD000806, 0x0FF8FF01, 0x11EE06DA);
	r2 = D(r2, s[1][1][2], 0x02FF05FA, 0x0102F4F1, 0x09FC0303, 0x16F919EC);
	r3 = D(r3, s[1][1][2], 0x04FAFCFF, 0x010500F3, 0xF9020312, 0x04FAFB0E);
	r4 = D(r4, s[1][1][2], 0x0B110A0A, 0x08FD03F9, 0x07FCEBFA, 0xF8F300E9);
	r5 = D(r5, s[1][1][2], 0x04F702EF, 0xF5F4F603, 0xF803F0E2, 0xFD0206C8);
	r6 = D(r6, s[1][1][2], 0xFB040DF1, 0xE0D51510, 0xFAEFEFF3, 0x05FFFEFA);
	r7 = D(r7, s[1][1][2], 0x00DCFE00, 0xF6FCF3FD, 0x07EC08F7, 0x00ECFA01);
	r0 = D(r0, s[1][2][0], 0x250F0402, 0x01FB0209, 0x00080911, 0xF8FFE602);
	r1 = D(r1, s[1][2][0], 0x030B04FF, 0x030208FE, 0xFEFBFB0A, 0x05030BFF);
	r2 = D(r2, s[1][2][0], 0xF4FB0F06, 0x04000D07, 0x0B030A01, 0x00060501);
	r3 = D(r3, s[1][2][0], 0x0BFFFE10, 0xFFFCFE05, 0x02FFF904, 0x03FFFA05);
	r4 = D(r4, s[1][2][0], 0xEF080300, 0x000108FC, 0x0C06F300, 0xF4090DFF);
	r5 = D(r5, s[1][2][0], 0x04FA04FF, 0x08FDF509, 0xFAFFEC03, 0xE614FC00);
	r6 = D(r6, s[1][2][0], 0xF303F9FE, 0x0BE4F30C, 0xFB08FFF0, 0x08080003);
	r7 = D(r7, s[1][2][0], 0xFD1B0B03, 0x0203F806, 0x08F01102, 0x0702F606);
	r0 = D(r0, s[1][2][1], 0xC1010516, 0x01FD020B, 0xD81013E8, 0x00FCEA00);
	r1 = D(r1, s[1][2][1], 0xED02EFEF, 0x0402040A, 0x0501FE09, 0xCB250E0B);
	r2 = D(r2, s[1][2][1], 0x00050711, 0x070616FC, 0xFEFC03FC, 0xE903F1F9);
	r3 = D(r3, s[1][2][1], 0xFCF2F5FF, 0xF4FDF7FF, 0x0105FA02, 0x09010007);
	r4 = D(r4, s[1][2][1], 0x13FEF8FA, 0x01020001, 0xED10F70E, 0x1F19FE0D);
	r5 = D(r5, s[1][2][1], 0x1107050C, 0x09F30615, 0xF4F8F1F6, 0xF70AFA19);
	r6 = D(r6, s[1][2][1], 0xF30BF905, 0x09F4F81F, 0x0402EFF9, 0xF2040105);
	r7 = D(r7, s[1][2][1], 0x09DBFEF4, 0xEFFEF1FA, 0x05F11002, 0x0305FAF6);
	r0 = D(r0, s[1][2][2], 0x0C0C09FD, 0x0106FD04, 0xE00909EF, 0xFFFCE5F7);
	r1 = D(r1, s[1][2][2], 0x08070004, 0x04000AFF, 0x09FC0606, 0xFA0F0904);
	r2 = D(r2, s[1][2][2], 0x04FB00FA, 0x0BFC03FD, 0xFE0302F9, 0x0B0D0001);
	r3 = D(r3, s[1][2][2], 0x0801FEF5, 0xF900F10A, 0x0201F60C, 0xF9040105);
	r4 = D(r4, s[1][2][2], 0xFC0005FC, 0xFE0106FE, 0x0DFEEEFA, 0x1E040501);
	r5 = D(r5, s[1][2][2], 0xFD0206FB, 0x14F701F5, 0xF9FCE8F4, 0x0507110B);
	r6 = D(r6, s[1][2][2], 0xF905100A, 0x12D5E602, 0xF3FDDC03, 0x170705FC);
	r7 = D(r7, s[1][2][2], 0x08FD0FDC, 0x00FBF1F5, 0xF2EBFCEC, 0xF5F40904);
	s[0][0][0] = G[14][xy.y+0][xy.x+0]; s[0][0][1] = G[14][xy.y+0][xy.x+1];
	s[0][0][2] = G[14][xy.y+0][xy.x+2]; s[0][1][0] = G[14][xy.y+1][xy.x+0];
	s[0][1][1] = G[14][xy.y+1][xy.x+1]; s[0][1][2] = G[14][xy.y+1][xy.x+2];
	s[0][2][0] = G[14][xy.y+2][xy.x+0]; s[0][2][1] = G[14][xy.y+2][xy.x+1];
	s[0][2][2] = G[14][xy.y+2][xy.x+2]; s[1][0][0] = G[15][xy.y+0][xy.x+0];
	s[1][0][1] = G[15][xy.y+0][xy.x+1]; s[1][0][2] = G[15][xy.y+0][xy.x+2];
	s[1][1][0] = G[15][xy.y+1][xy.x+0]; s[1][1][1] = G[15][xy.y+1][xy.x+1];
	s[1][1][2] = G[15][xy.y+1][xy.x+2]; s[1][2][0] = G[15][xy.y+2][xy.x+0];
	s[1][2][1] = G[15][xy.y+2][xy.x+1]; s[1][2][2] = G[15][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xFCDC25C3, 0x0204F302, 0x221B81F5, 0x1403FDF9);
	r1 = D(r1, s[0][0][0], 0xED19F2FA, 0xFE04FF0C, 0xFC1517FC, 0x051BEA8A);
	r2 = D(r2, s[0][0][0], 0xF20DFF03, 0x0113E005, 0x060CED0E, 0x110226FF);
	r3 = D(r3, s[0][0][0], 0x04F811FE, 0x0B17F90F, 0x08130104, 0x0307FBF7);
	r4 = D(r4, s[0][0][0], 0xF00AE2EC, 0x00F2FB08, 0xF9080606, 0x121D9DFE);
	r5 = D(r5, s[0][0][0], 0xF001030A, 0x04FAF001, 0x1603EFE3, 0x10300811);
	r6 = D(r6, s[0][0][0], 0x0311090D, 0x171F3D16, 0xFD05F1ED, 0x0719BF19);
	r7 = D(r7, s[0][0][0], 0xFDC74D14, 0x110EF001, 0x16F4E30D, 0x0610130A);
	r0 = D(r0, s[0][0][1], 0x06FAABE0, 0x0E0AFA03, 0x0B1B121E, 0x17080BFF);
	r1 = D(r1, s[0][0][1], 0xFE11F90C, 0xFFFD0001, 0x070DFFEE, 0x0FF90105);
	r2 = D(r2, s[0][0][1], 0xFBFBF9F3, 0xFC14EA0F, 0xFF0A00FA, 0xFE12E614);
	r3 = D(r3, s[0][0][1], 0x00EB03F8, 0xFDE2FEF0, 0xFB14ECFE, 0x050EEE01);
	r4 = D(r4, s[0][0][1], 0xFB0FD108, 0xFEFD01FB, 0x0512E5F3, 0x0016E2FA);
	r5 = D(r5, s[0][0][1], 0xFC0C05FE, 0x060EFEFA, 0x1C0AFBE9, 0x0222322B);
	r6 = D(r6, s[0][0][1], 0x030E98DD, 0xF70BCEF4, 0xFB1308F9, 0xFFF0F5FB);
	r7 = D(r7, s[0][0][1], 0xEB112D0D, 0x0F05F907, 0x1F1BC813, 0x020E0CE3);
	r0 = D(r0, s[0][0][2], 0x0EF0DDF5, 0x0614F80D, 0xFE00EBE0, 0x17FF05E5);
	r1 = D(r1, s[0][0][2], 0xF8050003, 0xFAFE0000, 0x0C1109E9, 0xFA0A9325);
	r2 = D(r2, s[0][0][2], 0xEC0FF9F8, 0xFF12DA1B, 0xFCF903F4, 0xF70F06F9);
	r3 = D(r3, s[0][0][2], 0xF50A14F5, 0xFC001508, 0x07FFF1E9, 0x0204EB02);
	r4 = D(r4, s[0][0][2], 0x040CE204, 0xF4080000, 0xF5040BF8, 0xFF210A18);
	r5 = D(r5, s[0][0][2], 0xF30BE704, 0x001AFB00, 0x1AFC0AEA, 0x0D21290A);
	r6 = D(r6, s[0][0][2], 0xF80AF0E8, 0x05251C2D, 0x14E9E5E6, 0x0306F2FF);
	r7 = D(r7, s[0][0][2], 0xFE022D2C, 0x070107E0, 0x0A02C822, 0x0623BA08);
	r0 = D(r0, s[0][1][0], 0xECFDF410, 0x0A0911F1, 0x27298115, 0x230CF6E6);
	r1 = D(r1, s[0][1][0], 0xF61FFBFB, 0xFFF5FD05, 0x0209F601, 0x890FBD20);
	r2 = D(r2, s[0][1][0], 0xEF22EA02, 0xFA0D20F1, 0x0818F6F8, 0x011CEF0B);
	r3 = D(r3, s[0][1][0], 0x0801E306, 0x0C15F41B, 0x01050BFD, 0x0608FF04);
	r4 = D(r4, s[0][1][0], 0xFB02DF0D, 0xFDFAFAFF, 0xFA04EAFC, 0x280181ED);
	r5 = D(r5, s[0][1][0], 0xF91BFE05, 0x09ED2013, 0x1E01FEE5, 0x202B3501);
	r6 = D(r6, s[0][1][0], 0x070F070A, 0x012DFFC8, 0xFAF500DC, 0x13E7DAF9);
	r7 = D(r7, s[0][1][0], 0xFA28D414, 0x0331D7F5, 0x0DFCB211, 0x0601F10B);
	r0 = D(r0, s[0][1][1], 0x0D5206E4, 0x06CC11DE, 0x13FE0FF4, 0x1FF908E9);
	r1 = D(r1, s[0][1][1], 0x021F05E7, 0xFEFFFF00, 0x1412F81C, 0x26BC0A05);
	r2 = D(r2, s[0][1][1], 0xF9FAF7FA, 0xFE94F9EE, 0x00E6F6FE, 0x0C12C511);
	r3 = D(r3, s[0][1][1], 0x0009F3F7, 0xF803E503, 0x0601F9FD, 0x04E4F8F5);
	r4 = D(r4, s[0][1][1], 0x15002607, 0xFD09FB02, 0x01F5FBFA, 0xEAF20907);
	r5 = D(r5, s[0][1][1], 0xF4F10AF1, 0x03F4FCFB, 0x250309F3, 0x251E1AE8);
	r6 = D(r6, s[0][1][1], 0x03060BEB, 0x0E150228, 0x0CFA07E0, 0x01EDE702);
	r7 = D(r7, s[0][1][1], 0xF9E60001, 0x09FEF9FA, 0x0320C00A, 0x02201305);
	r0 = D(r0, s[0][1][2], 0xFAFFC00C, 0x060E13E7, 0x0F35F21B, 0x17FEF9EC);
	r1 = D(r1, s[0][1][2], 0xF62506FB, 0xFEFC04FF, 0x04211513, 0x0619E606);
	r2 = D(r2, s[0][1][2], 0xF80506FE, 0xF1062A09, 0xFA09F80B, 0x0713DFF5);
	r3 = D(r3, s[0][1][2], 0x00F0F903, 0xF92ECFEA, 0x0503FCF9, 0x02F3EC08);
	r4 = D(r4, s[0][1][2], 0xF70EFF0B, 0xF7070900, 0xF81202E9, 0x02170502);
	r5 = D(r5, s[0][1][2], 0xF403F9FF, 0x02FF150B, 0x1BFFF5F5, 0x16130BDD);
	r6 = D(r6, s[0][1][2], 0x090BD9F9, 0xFF1DD8DB, 0x0FE9FFCE, 0x021107EF);
	r7 = D(r7, s[0][1][2], 0xF02FDC29, 0x0B05AB1B, 0x1DF8F623, 0xFBF0CBC9);
	r0 = D(r0, s[0][2][0], 0xF629100C, 0x0300F805, 0x03BC27FC, 0x2309FBF0);
	r1 = D(r1, s[0][2][0], 0xF31BE0F7, 0xFDF9F504, 0x070305EE, 0xFDEE230F);
	r2 = D(r2, s[0][2][0], 0xFD28E7EF, 0xFF05D8F5, 0xFD0BF606, 0x071A1AF3);
	r3 = D(r3, s[0][2][0], 0x0012F9ED, 0xFA0B00F2, 0xFF04FE04, 0xFE08FF05);
	r4 = D(r4, s[0][2][0], 0x1012D907, 0xF904FA02, 0x011509FF, 0x1FEAB9EE);
	r5 = D(r5, s[0][2][0], 0xF208E4FC, 0x071025FC, 0x1911F6EF, 0x093DEF0B);
	r6 = D(r6, s[0][2][0], 0x0A0DEFE8, 0xFBF116D3, 0x02FCC7DA, 0x0E0F15FF);
	r7 = D(r7, s[0][2][0], 0x02F237FF, 0x020A08F3, 0xFD15EF17, 0x06201615);
	r0 = D(r0, s[0][2][1], 0xFAECC509, 0x02FDE20D, 0x13F0C70B, 0x250A0304);
	r1 = D(r1, s[0][2][1], 0x145718F7, 0x000300F5, 0x08101BE9, 0x1819FBEF);
	r2 = D(r2, s[0][2][1], 0xFAFF02FD, 0xF9FF23F1, 0x0515FCF7, 0x0016F8F4);
	r3 = D(r3, s[0][2][1], 0xFE14EDF0, 0x070D13FD, 0xF50B0008, 0x0616E407);
	r4 = D(r4, s[0][2][1], 0x001FF805, 0xFF050000, 0x01ED07F8, 0xF80D14E8);
	r5 = D(r5, s[0][2][1], 0xFD03DFFD, 0x0A08F8FE, 0x1F0808FC, 0x133FF002);
	r6 = D(r6, s[0][2][1], 0x07FDFF0C, 0x0C03DFEF, 0x12F6DCFE, 0x0107FFEF);
	r7 = D(r7, s[0][2][1], 0x10DB211A, 0x0903FD02, 0xFF17F7F1, 0x0FD4F600);
	r0 = D(r0, s[0][2][2], 0xFC22E923, 0xFF0CEDFE, 0x2323F62D, 0x1B05F3FD);
	r1 = D(r1, s[0][2][2], 0xE628F303, 0xFA02FDFE, 0x031718E6, 0xD0ED3405);
	r2 = D(r2, s[0][2][2], 0xFA01FB11, 0x0510DEE8, 0xFAFD12F7, 0x090317FC);
	r3 = D(r3, s[0][2][2], 0xF826F6F4, 0x01E8F505, 0x01F70CFA, 0x01F4F9F8);
	r4 = D(r4, s[0][2][2], 0xFE0F0906, 0x000CF400, 0xF707FA14, 0x072029FF);
	r5 = D(r5, s[0][2][2], 0xF70ADDFF, 0x090829FC, 0x1C02FFF8, 0x102209F4);
	r6 = D(r6, s[0][2][2], 0x0017F7FF, 0xE6D129F1, 0x12FCCAEC, 0x00101003);
	r7 = D(r7, s[0][2][2], 0x062526F6, 0x0F071DF2, 0xEA0C0F0F, 0x01EFE700);
	r0 = D(r0, s[1][0][0], 0x00200B06, 0x0A0AF000, 0xF719FA06, 0xF800FFFB);
	r1 = D(r1, s[1][0][0], 0xEA25FC0A, 0xFF0902FF, 0x0D19F0FD, 0xF523E6E0);
	r2 = D(r2, s[1][0][0], 0xFE1402FA, 0x030506F6, 0x0217F6FD, 0xF71307F5);
	r3 = D(r3, s[1][0][0], 0x03ECFCFD, 0xFA1DFFF7, 0xFA0703FE, 0x010DF9F7);
	r4 = D(r4, s[1][0][0], 0xEB1208FA, 0xF70AF702, 0x0007FDF4, 0x0B220714);
	r5 = D(r5, s[1][0][0], 0x00060402, 0x030CFBFC, 0xF60600FC, 0x0241FF05);
	r6 = D(r6, s[1][0][0], 0x0208F9F4, 0xEA32ECF2, 0x1A0610EE, 0x0106F4F1);
	r7 = D(r7, s[1][0][0], 0x0B0706EC, 0xF42AF800, 0xF710F406, 0xFE0000FC);
	r0 = D(r0, s[1][0][1], 0x04F2E6E1, 0xFA130707, 0xEC31ED1D, 0xFEFE00FD);
	r1 = D(r1, s[1][0][1], 0x0311FE10, 0x030502FF, 0x06F502EE, 0x1420EE15);
	r2 = D(r2, s[1][0][1], 0x01E304FA, 0xFFF8F903, 0xFF0DFE01, 0xE60E0C06);
	r3 = D(r3, s[1][0][1], 0x020F0505, 0xF61804FC, 0xF8000DFF, 0x050209FF);
	r4 = D(r4, s[1][0][1], 0xFF080F04, 0xFE010901, 0xF5FBFF08, 0xF5FCEEFF);
	r5 = D(r5, s[1][0][1], 0xF30701FF, 0x0502FFFA, 0xFBF004FF, 0xE223EE09);
	r6 = D(r6, s[1][0][1], 0xF01806FA, 0xE71606FC, 0x15DC08FA, 0x0407FDFE);
	r7 = D(r7, s[1][0][1], 0x160B00F7, 0xF40FFF04, 0xF2FAFCF5, 0x060D03F7);
	r0 = D(r0, s[1][0][2], 0xF9091A0D, 0x00070D05, 0x060B0AF4, 0xFDF902F9);
	r1 = D(r1, s[1][0][2], 0xFC0702FF, 0xFD030202, 0x0205FC06, 0x0215FEDF);
	r2 = D(r2, s[1][0][2], 0x03070505, 0x08FBF60A, 0x040BF6FA, 0xFE2007F7);
	r3 = D(r3, s[1][0][2], 0x04FFFE01, 0x0812FDEE, 0xFF000006, 0x060DFAF9);
	r4 = D(r4, s[1][0][2], 0x0AFFF3FB, 0x0008FB03, 0x060BEDFD, 0x05FAF20F);
	r5 = D(r5, s[1][0][2], 0x06130003, 0xFF010501, 0xFDFB0201, 0xF90218F9);
	r6 = D(r6, s[1][0][2], 0xFD0EFDFA, 0xDC0222DA, 0xF101FC0A, 0x00F8FEFB);
	r7 = D(r7, s[1][0][2], 0xF6FEFDE8, 0x000C06FF, 0x051308FC, 0xFA08FFFC);
	r0 = D(r0, s[1][1][0], 0xF714EE00, 0x050302F5, 0xFB221B13, 0xFA0003FE);
	r1 = D(r1, s[1][1][0], 0xFE24F5FB, 0x0209FD05, 0x0603FDFD, 0xC5FBE8FD);
	r2 = D(r2, s[1][1][0], 0x080DFB07, 0xF115EFFB, 0x010AF801, 0x0716F006);
	r3 = D(r3, s[1][1][0], 0xFB27FEFD, 0x0A0FFF07, 0xF818F603, 0xFF0002F9);
	r4 = D(r4, s[1][1][0], 0xED0FE411, 0xFDFEF2FE, 0xF5FBF909, 0xFD20F3FD);
	r5 = D(r5, s[1][1][0], 0xF4FFF4FC, 0x08FA0101, 0xFC0907FC, 0x0716FC0E);
	r6 = D(r6, s[1][1][0], 0x0A120902, 0x0821F702, 0xED110B05, 0x070BFAFF);
	r7 = D(r7, s[1][1][0], 0x0D0B0112, 0xF6120704, 0x0C22E902, 0x03FD0CF9);
	r0 = D(r0, s[1][1][1], 0xF422FCFA, 0xF10B0CED, 0xF715F713, 0xE4E9FA00);
	r1 = D(r1, s[1][1][1], 0x0615F105, 0x0405FDFD, 0x0504020A, 0xD021F433);
	r2 = D(r2, s[1][1][1], 0xF4FB04FC, 0xF60C03F7, 0x1301FF02, 0xD408EB14);
	r3 = D(r3, s[1][1][1], 0xE90E1403, 0x11FF04FC, 0xF104F70D, 0xF807FEF8);
	r4 = D(r4, s[1][1][1], 0x0C1FE5FB, 0x00FFFF03, 0xD00A0606, 0xF7FA17F9);
	r5 = D(r5, s[1][1][1], 0xE505F400, 0x020E1405, 0x12EC0BF5, 0xFD1B0D12);
	r6 = D(r6, s[1][1][1], 0xE80EEFE2, 0xEE160CF1, 0xE4111408, 0xFBFC0A03);
	r7 = D(r7, s[1][1][1], 0xF016E300, 0x260910F2, 0x06120A13, 0xF3FB09F2);
	r0 = D(r0, s[1][1][2], 0xEA0A0DF8, 0xFE13F5FE, 0x111920E0, 0x05FE09FB);
	r1 = D(r1, s[1][1][2], 0xFB05F1F3, 0x02020200, 0x0A09FF04, 0xFF06E1EC);
	r2 = D(r2, s[1][1][2], 0xF50EFAFB, 0x0D04F5FD, 0x05040203, 0x011AF2F7);
	r3 = D(r3, s[1][1][2], 0xFE070303, 0x0709FEFF, 0x05060800, 0x090306F6);
	r4 = D(r4, s[1][1][2], 0x0BFC0405, 0x0306FE01, 0x1605EEFB, 0x0AFBEB0D);
	r5 = D(r5, s[1][1][2], 0x15020000, 0x06F908FE, 0xEFFFFBFE, 0x030C1405);
	r6 = D(r6, s[1][1][2], 0xF4000403, 0x040400F3, 0x05F30BF4, 0x0012E9FB);
	r7 = D(r7, s[1][1][2], 0x0307F4FE, 0xFBF10306, 0xF80002FF, 0x0A08FDFB);
	r0 = D(r0, s[1][2][0], 0xF3FA00FB, 0x0607FFF6, 0x000C02FA, 0xFB0407FC);
	r1 = D(r1, s[1][2][0], 0xF226FAFF, 0x010F01FE, 0xFE1B0DFB, 0xFD0D0325);
	r2 = D(r2, s[1][2][0], 0xFA0EF9FC, 0x0C1BFD02, 0x0205FD05, 0x1707EA15);
	r3 = D(r3, s[1][2][0], 0xFF17FD09, 0xF8FFF801, 0xFA0A0203, 0x0508FAFB);
	r4 = D(r4, s[1][2][0], 0x03F4F2F1, 0x030A00FC, 0xFB070103, 0x01020108);
	r5 = D(r5, s[1][2][0], 0x0311F502, 0xF60EF706, 0xF80C0502, 0x0139F602);
	r6 = D(r6, s[1][2][0], 0x030901FF, 0xF8F0F805, 0xFD14F8FE, 0x0501FFFE);
	r7 = D(r7, s[1][2][0], 0x080EF4EC, 0xF323FC08, 0x05F6030D, 0x000CFE05);
	r0 = D(r0, s[1][2][1], 0xFB0D04F8, 0x0A0200F9, 0xFD08F4D9, 0x000A0902);
	r1 = D(r1, s[1][2][1], 0xF81800FA, 0x0001FFFD, 0xFB1306FD, 0xE90210F3);
	r2 = D(r2, s[1][2][1], 0x05FAF9FB, 0x03F9F8FC, 0x0003F7FE, 0xF6FCE5FB);
	r3 = D(r3, s[1][2][1], 0x060B01F9, 0xF808FF07, 0xFFFC0501, 0x080704F9);
	r4 = D(r4, s[1][2][1], 0x020403F6, 0x0705FEFF, 0xFEF7F2EF, 0xF1C6EDF6);
	r5 = D(r5, s[1][2][1], 0x0C0BFBF3, 0xE3FC0102, 0xF2070B04, 0xFF23FEF4);
	r6 = D(r6, s[1][2][1], 0x070F06EE, 0xF724FE06, 0xF40F04F3, 0x041F00FD);
	r7 = D(r7, s[1][2][1], 0x05F8FDF8, 0xFFEE0B06, 0xE720F206, 0xF81EFFF3);
	r0 = D(r0, s[1][2][2], 0x070EF4F4, 0x010300FE, 0xF501F003, 0xF7FC0303);
	r1 = D(r1, s[1][2][2], 0x010E0006, 0xFF03FD05, 0x0306F4FA, 0x0C0AF702);
	r2 = D(r2, s[1][2][2], 0x0B17FC06, 0x0F01F401, 0xFE05FE03, 0x0623EFFF);
	r3 = D(r3, s[1][2][2], 0x050A04EE, 0x0304FE00, 0x0005FE05, 0xF90BF8FD);
	r4 = D(r4, s[1][2][2], 0xF602F907, 0xFF050304, 0x0F08090A, 0x03150304);
	r5 = D(r5, s[1][2][2], 0x0A0C0B05, 0xF10CFF05, 0xFA0404FD, 0xFF29FC03);
	r6 = D(r6, s[1][2][2], 0xFB0FF1FA, 0xF6FEE100, 0x07150DFE, 0xF9F8FA02);
	r7 = D(r7, s[1][2][2], 0xF20FFBF9, 0xF6E705FD, 0xEF1002F5, 0xF703F703);
	f0 = vec4(r0) * 6.20001240e-05;
	f0 += vec4(-5.757e-03, 2.203e-02, -7.588e-02, -6.835e-03);
	f0 = max(f0, vec4(0.0));
	imageStore(out_image, opos + ivec2(0, 0), f0);
	f1 = vec4(r1) * 6.20001240e-05;
	f1 += vec4(3.737e-03, -4.355e-03, 9.354e-03, -3.357e-02);
	f1 = max(f1, vec4(0.0));
	imageStore(out_image, opos + ivec2(1, 0), f1);
	f2 = vec4(r2) * 6.20001240e-05;
	f2 += vec4(-1.634e-03, -1.034e-02, 1.096e-02, -2.323e-02);
	f2 = max(f2, vec4(0.0));
	imageStore(out_image, opos + ivec2(0, 1), f2);
	f3 = vec4(r3) * 6.20001240e-05;
	f3 += vec4(-1.163e-02, 1.169e-02, -1.085e-02, -1.997e-03);
	f3 = max(f3, vec4(0.0));
	imageStore(out_image, opos + ivec2(1, 1), f3);
	f4 = vec4(r4) * 6.20001240e-05;
	f4 += vec4(-4.079e-03, -5.931e-03, -1.659e-03, -1.551e-02);
	f4 = max(f4, vec4(0.0));
	imageStore(out_image, opos + ivec2(2, 0), f4);
	f5 = vec4(r5) * 6.20001240e-05;
	f5 += vec4(-6.649e-03, 3.379e-03, -3.486e-03, -1.234e-02);
	f5 = max(f5, vec4(0.0));
	imageStore(out_image, opos + ivec2(3, 0), f5);
	f6 = vec4(r6) * 6.20001240e-05;
	f6 += vec4(2.260e-03, -5.872e-03, -8.761e-03, 6.143e-03);
	f6 = max(f6, vec4(0.0));
	imageStore(out_image, opos + ivec2(2, 1), f6);
	f7 = vec4(r7) * 6.20001240e-05;
	f7 += vec4(8.087e-03, 1.849e-02, -4.724e-02, 8.535e-03);
	f7 = max(f7, vec4(0.0));
	imageStore(out_image, opos + ivec2(3, 1), f7);
	r0 = ivec4(0);
	r1 = ivec4(0);
	r2 = ivec4(0);
	r3 = ivec4(0);
	r4 = ivec4(0);
	r5 = ivec4(0);
	r6 = ivec4(0);
	r7 = ivec4(0);
	s[0][0][0] = G[0][xy.y+0][xy.x+0]; s[0][0][1] = G[0][xy.y+0][xy.x+1];
	s[0][0][2] = G[0][xy.y+0][xy.x+2]; s[0][1][0] = G[0][xy.y+1][xy.x+0];
	s[0][1][1] = G[0][xy.y+1][xy.x+1]; s[0][1][2] = G[0][xy.y+1][xy.x+2];
	s[0][2][0] = G[0][xy.y+2][xy.x+0]; s[0][2][1] = G[0][xy.y+2][xy.x+1];
	s[0][2][2] = G[0][xy.y+2][xy.x+2]; s[1][0][0] = G[1][xy.y+0][xy.x+0];
	s[1][0][1] = G[1][xy.y+0][xy.x+1]; s[1][0][2] = G[1][xy.y+0][xy.x+2];
	s[1][1][0] = G[1][xy.y+1][xy.x+0]; s[1][1][1] = G[1][xy.y+1][xy.x+1];
	s[1][1][2] = G[1][xy.y+1][xy.x+2]; s[1][2][0] = G[1][xy.y+2][xy.x+0];
	s[1][2][1] = G[1][xy.y+2][xy.x+1]; s[1][2][2] = G[1][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xF9E0FCF9, 0xFEFF0702, 0x0205FEFE, 0x040402F7);
	r1 = D(r1, s[0][0][0], 0x06F9EEF8, 0xFAFFFFFB, 0x0DFFF5FC, 0x03EF0021);
	r2 = D(r2, s[0][0][0], 0x09F604F7, 0xFDFEFEFC, 0xEC150B0B, 0xFB010101);
	r3 = D(r3, s[0][0][0], 0xFBF7FF0B, 0xFB0201FC, 0xE101EB19, 0xFEF80106);
	r4 = D(r4, s[0][0][0], 0x00F5F3EB, 0xFB030200, 0x01FB00FD, 0xFDF804FF);
	r5 = D(r5, s[0][0][0], 0xFF0305F7, 0xD9030516, 0x010BE8E2, 0xEE02FB05);
	r6 = D(r6, s[0][0][0], 0xE3070110, 0xF6FF04FF, 0xF3010201, 0xFA070608);
	r7 = D(r7, s[0][0][0], 0xFB050501, 0xF410EBFA, 0xFA1701FD, 0xF70CFF09);
	r0 = D(r0, s[0][0][1], 0xE7F3EEFF, 0xF80A07FC, 0xFB0912F8, 0x00F502FA);
	r1 = D(r1, s[0][0][1], 0xF905F703, 0xF5FF07FC, 0xFDFD080A, 0x05FDFAF9);
	r2 = D(r2, s[0][0][1], 0xE60316FF, 0xF1F3050F, 0x03FEDF05, 0xF3040A01);
	r3 = D(r3, s[0][0][1], 0xF6F8FD03, 0x02FCFDFA, 0xE3ECF20E, 0xED080202);
	r4 = D(r4, s[0][0][1], 0xEE0C20F8, 0xFE030403, 0xFDFBFD00, 0x08040302);
	r5 = D(r5, s[0][0][1], 0xEA04FF03, 0x05F6D8FA, 0x0BF5EDEE, 0xFCF5FDFE);
	r6 = D(r6, s[0][0][1], 0x0C0005F9, 0xF60B00FE, 0xF4ED090F, 0xEB090908);
	r7 = D(r7, s[0][0][1], 0x05F80705, 0x03E0FDF0, 0xEEFCF8EC, 0xEFFAFF0F);
	r0 = D(r0, s[0][0][2], 0x03AE20FA, 0x09FF0904, 0xF9FE0A03, 0x01FAFC05);
	r1 = D(r1, s[0][0][2], 0xFFFCF80D, 0xF5D20BF8, 0xE0D5FE10, 0xFFE9F1FF);
	r2 = D(r2, s[0][0][2], 0x03091FF1, 0x01E20201, 0xD6092AFA, 0xEEDE0C0A);
	r3 = D(r3, s[0][0][2], 0x1FFAFEE9, 0xF30A16F8, 0xEEFF0801, 0xFCF7F5FF);
	r4 = D(r4, s[0][0][2], 0x0EEB0DD9, 0xFEFB02FE, 0x0404FD01, 0xFA0801FE);
	r5 = D(r5, s[0][0][2], 0xF8FB0307, 0xEBFC30F2, 0xF6031DF1, 0xFD0D06EE);
	r6 = D(r6, s[0][0][2], 0xF40800EC, 0xF4FD04FB, 0x080301ED, 0x02FC0AFA);
	r7 = D(r7, s[0][0][2], 0xF7FE0603, 0xBB00F807, 0xF70501E9, 0xEDFAFDFB);
	r0 = D(r0, s[0][1][0], 0x06E50A02, 0x0FFE01FE, 0xF40DFC05, 0x05FFF6F5);
	r1 = D(r1, s[0][1][0], 0xFBEEF706, 0x0200FEFB, 0xF8FDDDFA, 0xFAF80A08);
	r2 = D(r2, s[0][1][0], 0xFFF4FE1A, 0x03070005, 0xFC0AE6FB, 0x01FDFC07);
	r3 = D(r3, s[0][1][0], 0x07000801, 0xFF06F6F8, 0xEDE9FAFD, 0x09FDF407);
	r4 = D(r4, s[0][1][0], 0x0814022D, 0xFBFEFE02, 0xF401FEFC, 0xF8EBFE04);
	r5 = D(r5, s[0][1][0], 0x00F6F800, 0xF5FDF321, 0x11FBF1FD, 0xEAF3FB0A);
	r6 = D(r6, s[0][1][0], 0xE6F0EB03, 0xFDFCF9FE, 0x05F2FE0A, 0xFD03F906);
	r7 = D(r7, s[0][1][0], 0xFEFF0200, 0xFCFCE9F6, 0x09F5E804, 0xEEEBE3F5);
	r0 = D(r0, s[0][1][1], 0xEFFFEE10, 0x0A08FD05, 0x15E9F702, 0xF8FD00EE);
	r1 = D(r1, s[0][1][1], 0x08F3A90E, 0x02F80109, 0x22ED0B11, 0x1203F7F8);
	r2 = D(r2, s[0][1][1], 0xFCD50013, 0xFD01FA00, 0xF1F8FEBA, 0x0BFAFCFC);
	r3 = D(r3, s[0][1][1], 0xFB0EFC08, 0x03FEF806, 0xDA0213EE, 0x15FA0104);
	r4 = D(r4, s[0][1][1], 0x05E6E7F6, 0xFDF4FD08, 0x07F4EDFD, 0x0CF40104);
	r5 = D(r5, s[0][1][1], 0x00DF0502, 0xFD9FC3FC, 0xE7FD071D, 0x01D002FF);
	r6 = D(r6, s[0][1][1], 0x14E109FD, 0xF9000506, 0xF0F9F3FD, 0xFEEC02FD);
	r7 = D(r7, s[0][1][1], 0xF6FAFF04, 0x02F12706, 0x14F5F60C, 0x11D4F80C);
	r0 = D(r0, s[0][1][2], 0xFAC0E7F4, 0x0501FC05, 0x040A04FE, 0xFBFE0702);
	r1 = D(r1, s[0][1][2], 0xFF140B04, 0x00FA00FD, 0x08F5D7ED, 0x06F4F706);
	r2 = D(r2, s[0][1][2], 0x0220FCF6, 0x04DE0904, 0x100618CD, 0x01F408FA);
	r3 = D(r3, s[0][1][2], 0xFAF60C14, 0xF8E302F9, 0xE4E129F7, 0xFA030604);
	r4 = D(r4, s[0][1][2], 0xF50C0DF1, 0x03FAFE02, 0x0AEAF40B, 0xF606FE00);
	r5 = D(r5, s[0][1][2], 0xF9F0FDF2, 0x0406C5F7, 0xC9E832FF, 0x0308FEFA);
	r6 = D(r6, s[0][1][2], 0xFB0900F8, 0x02F6FDFB, 0x05BE1507, 0x00FCFD04);
	r7 = D(r7, s[0][1][2], 0xFEF50007, 0xE7E6E605, 0xF6011902, 0xF1D323EB);
	r0 = D(r0, s[0][2][0], 0xF4EAF201, 0xFE020204, 0xFD04F401, 0x06FE01FD);
	r1 = D(r1, s[0][2][0], 0x1609EFFA, 0xFF0406FC, 0xFAF406E5, 0x07FEF1F2);
	r2 = D(r2, s[0][2][0], 0xF4F8F92A, 0xF8010400, 0xF3EEE4FF, 0xFB00F701);
	r3 = D(r3, s[0][2][0], 0x05FA0501, 0xF901F7F7, 0xFDF51806, 0xFF06FC0A);
	r4 = D(r4, s[0][2][0], 0xF9F1E2F8, 0x03FEFDFF, 0xF80000FE, 0xFAFDF0FD);
	r5 = D(r5, s[0][2][0], 0x0001FF00, 0xF418CDE1, 0x0711EFE2, 0x0007F4FC);
	r6 = D(r6, s[0][2][0], 0xFEFDFEF8, 0xFE08FC01, 0xF4080909, 0x0300F700);
	r7 = D(r7, s[0][2][0], 0x02FFFE00, 0xFD0DF7F8, 0xDDE4F1F5, 0xF819F510);
	r0 = D(r0, s[0][2][1], 0x0B04EBFE, 0x07FCFB06, 0x12F3FEFB, 0xF9FF02FC);
	r1 = D(r1, s[0][2][1], 0x01EE0106, 0x04FDFCFE, 0xE3FCFB14, 0xF3FFFF0E);
	r2 = D(r2, s[0][2][1], 0x06E4DBEF, 0x080AFA05, 0x12F41213, 0x07FF0707);
	r3 = D(r3, s[0][2][1], 0x01FB04FE, 0x0404FA04, 0x1005ED0A, 0xF1FFEF04);
	r4 = D(r4, s[0][2][1], 0x0C091407, 0x04FBFFFF, 0xFAF702F9, 0xFDFD0301);
	r5 = D(r5, s[0][2][1], 0x0D02EE04, 0x09D2CBEE, 0xFE0B0700, 0x09FB04FC);
	r6 = D(r6, s[0][2][1], 0x03F507F7, 0x0C01FEFF, 0x0710F70E, 0x0C010807);
	r7 = D(r7, s[0][2][1], 0x04FDFB01, 0xFC01DD03, 0xADE5FEE3, 0xFBF20703);
	r0 = D(r0, s[0][2][2], 0x09B7F0EE, 0xFE05F4FF, 0xFB0904FE, 0xFDF9FE08);
	r1 = D(r1, s[0][2][2], 0xF7EB0610, 0x02FBFCFE, 0x051305F2, 0xFBFEFD0A);
	r2 = D(r2, s[0][2][2], 0x0CF5F9E1, 0xFE01FFF9, 0x07F70E19, 0xFE07FAFB);
	r3 = D(r3, s[0][2][2], 0x03F70607, 0xFCF5FDFC, 0x0411FBFC, 0x0BF50306);
	r4 = D(r4, s[0][2][2], 0x070702F5, 0xFE010004, 0x06F6FFFE, 0x00060307);
	r5 = D(r5, s[0][2][2], 0x05FCFAFD, 0xF90CECF3, 0xFAEFFF07, 0xF80805F8);
	r6 = D(r6, s[0][2][2], 0xFA070BFF, 0x02FC0102, 0xFD0604F7, 0xFBFA0505);
	r7 = D(r7, s[0][2][2], 0x04FCFE06, 0x1D03E1F2, 0xEDF6FBEE, 0xFEF909EA);
	r0 = D(r0, s[1][0][0], 0x18FCFE04, 0x0AFF0309, 0xFF000A01, 0x060603F1);
	r1 = D(r1, s[1][0][0], 0xFEF3FCF4, 0xF9F1FE0F, 0xEC0400FA, 0xEAF6FC01);
	r2 = D(r2, s[1][0][0], 0xF6EAF1EB, 0x03020203, 0x1311D20D, 0x0702020F);
	r3 = D(r3, s[1][0][0], 0xFD0509F5, 0x03000604, 0xFAE0C1E8, 0x0E0201FF);
	r4 = D(r4, s[1][0][0], 0x05FBF8FA, 0xFFFFFF0C, 0x02F90BFE, 0x0DF302F1);
	r5 = D(r5, s[1][0][0], 0x05FBFF05, 0x06CE0706, 0xFA08C619, 0xFCF7FD06);
	r6 = D(r6, s[1][0][0], 0x04F8EAF5, 0x01FD0405, 0xFBFAFD00, 0x01FFFC06);
	r7 = D(r7, s[1][0][0], 0x00020309, 0xF3020CFE, 0x01EB1907, 0x0DFD04FA);
	r0 = D(r0, s[1][0][1], 0x08FB05F2, 0x06FAFB04, 0xF3F9F8FB, 0x0C011407);
	r1 = D(r1, s[1][0][1], 0x101F0000, 0xFF08FEFA, 0xFCF4DA00, 0x19F2F0F8);
	r2 = D(r2, s[1][0][1], 0xF0D4F402, 0x0700F8F3, 0x34019ECF, 0x0101FCFB);
	r3 = D(r3, s[1][0][1], 0xFEE7FD00, 0xFD05F906, 0xEF0CA0E7, 0x0F0305FE);
	r4 = D(r4, s[1][0][1], 0x0A20E10B, 0x0D04FF04, 0x01050BF9, 0x0A0909FE);
	r5 = D(r5, s[1][0][1], 0x05FDF804, 0xF4C802E9, 0xD90EBE0E, 0x0BF0F7FF);
	r6 = D(r6, s[1][0][1], 0x09F0FD00, 0xFF0107FC, 0x050B0300, 0x07030603);
	r7 = D(r7, s[1][0][1], 0x080300F7, 0x05F60CFE, 0x1F05F0EC, 0x06FA00F8);
	r0 = D(r0, s[1][0][2], 0x04EE0407, 0xFEFFFDF6, 0x05FFFB01, 0x00FFFDFF);
	r1 = D(r1, s[1][0][2], 0x2E17021D, 0x060AF401, 0x0CF413DF, 0x0205FAFA);
	r2 = D(r2, s[1][0][2], 0x1716E901, 0x0C06ECFA, 0x1CF6E3EB, 0x0BFF0500);
	r3 = D(r3, s[1][0][2], 0x1309EA13, 0x0701F9FB, 0xF2F1EDE5, 0xF6FF0900);
	r4 = D(r4, s[1][0][2], 0xFC1B05F4, 0xF905FF04, 0x05FDF300, 0x01060108);
	r5 = D(r5, s[1][0][2], 0xFF03FB02, 0x0DFC0901, 0x07F5F101, 0x0C010209);
	r6 = D(r6, s[1][0][2], 0x10F70007, 0xF6030403, 0x05F8E003, 0xF70E0005);
	r7 = D(r7, s[1][0][2], 0x030204FF, 0x06CA0303, 0xFB00EFFE, 0xEE09FAF0);
	r0 = D(r0, s[1][1][0], 0xFAFEFF01, 0x06FC02FF, 0xFCF4FFFE, 0x01EC05EF);
	r1 = D(r1, s[1][1][0], 0x08C4FAFE, 0x0809FC01, 0xF6110A03, 0xF9F508FB);
	r2 = D(r2, s[1][1][0], 0xFACBE707, 0x06010107, 0xED1581F3, 0x0102F908);
	r3 = D(r3, s[1][1][0], 0x0BFFFD04, 0xFDFFF9FA, 0x0D0BF011, 0x00FBF30C);
	r4 = D(r4, s[1][1][0], 0xEEFAEAE2, 0xFB02040A, 0xFBF2FF09, 0xFC01FBFF);
	r5 = D(r5, s[1][1][0], 0x1505070E, 0xF5EDFDF3, 0xF3E7F117, 0xF7F5FCFE);
	r6 = D(r6, s[1][1][0], 0xFAF402D6, 0xF7F9FE00, 0x1BFB0710, 0x02F8FD09);
	r7 = D(r7, s[1][1][0], 0x03010107, 0xDFF1FDFF, 0xFC0CB207, 0xF1F7F600);
	r0 = D(r0, s[1][1][1], 0xF60A0EEB, 0x0501F818, 0x0FF1FDFA, 0x110DEEFF);
	r1 = D(r1, s[1][1][1], 0x051A03F3, 0xF9FE09FB, 0x0CBDF2F3, 0x07F0EEFA);
	r2 = D(r2, s[1][1][1], 0xFAAEFC02, 0x020400F5, 0xF1060AEA, 0x030409FF);
	r3 = D(r3, s[1][1][1], 0x01FC05F6, 0x02040101, 0xC70D10EF, 0x04FAF60A);
	r4 = D(r4, s[1][1][1], 0xFAEB13EF, 0x0304FCED, 0x040CF7FF, 0x09F90AFB);
	r5 = D(r5, s[1][1][1], 0x0602FEF4, 0x0AB10DE5, 0xFFFCDDCB, 0x0A00EDEE);
	r6 = D(r6, s[1][1][1], 0x14F602F6, 0xFE030EFE, 0xF909FEDD, 0xFC0B09F1);
	r7 = D(r7, s[1][1][1], 0xFC010BF1, 0x120BFD03, 0xFCF9E10D, 0x0915D8FB);
	r0 = D(r0, s[1][1][2], 0x0DDF06FE, 0xFBF10A03, 0x050302FF, 0xFBFFF7FC);
	r1 = D(r1, s[1][1][2], 0x18F90A09, 0xFDFEFEFC, 0x03E417E5, 0x1106E816);
	r2 = D(r2, s[1][1][2], 0x15D70101, 0x080FF5F7, 0xE6FAD6FB, 0x070C06FB);
	r3 = D(r3, s[1][1][2], 0xFA05E7F9, 0x1410F9F5, 0xFC2AF7F8, 0x0EF9FE03);
	r4 = D(r4, s[1][1][2], 0x040BF102, 0x0109FEF9, 0x0BF801FC, 0xF903FE00);
	r5 = D(r5, s[1][1][2], 0x110EF2FC, 0xF7FAFA00, 0x0B1A02E9, 0xFDFC10F6);
	r6 = D(r6, s[1][1][2], 0x040106FF, 0xF60003FC, 0x1D09E3EF, 0x0203FE02);
	r7 = D(r7, s[1][1][2], 0x0A000402, 0x11C803F9, 0xFF01DD07, 0x040E0204);
	r0 = D(r0, s[1][2][0], 0x06FDFC07, 0x03F30005, 0xF9FAFDFB, 0xFFFF05F4);
	r1 = D(r1, s[1][2][0], 0x03FDF9FD, 0x0100FDFE, 0x04FD0A0B, 0x0DFE02FE);
	r2 = D(r2, s[1][2][0], 0xF1E6F5E1, 0xFE04F8FB, 0x16EDF414, 0xF4060009);
	r3 = D(r3, s[1][2][0], 0x06FB05FA, 0xF905FF01, 0x0A03E12B, 0xFA09FEFA);
	r4 = D(r4, s[1][2][0], 0x0CEABAE1, 0xFE01FF0D, 0xFDF90605, 0xFC0201F3);
	r5 = D(r5, s[1][2][0], 0xF9FEF8FF, 0x04E4FB06, 0xFAFDFDFB, 0x03080001);
	r6 = D(r6, s[1][2][0], 0x0A0AFFF3, 0x03070203, 0x0009F2F1, 0x010BFC03);
	r7 = D(r7, s[1][2][0], 0xFE02FF04, 0xFE060700, 0xFED7FD04, 0x0EF3E10B);
	r0 = D(r0, s[1][2][1], 0xF7F90AFE, 0x06FFFFF8, 0x02E504E6, 0xFDFFF404);
	r1 = D(r1, s[1][2][1], 0x05090AF7, 0xFDFDF708, 0xFA96E4F0, 0x09FBEA07);
	r2 = D(r2, s[1][2][1], 0x20F8E3BF, 0x02FEF606, 0xF9F3E412, 0xFC0DF2FC);
	r3 = D(r3, s[1][2][1], 0x03F406FE, 0x05050A0A, 0x02FAF70D, 0xF4F502FD);
	r4 = D(r4, s[1][2][1], 0xE6EEFB07, 0x0303FDFD, 0xFCF8FA06, 0xFB0BFAFA);
	r5 = D(r5, s[1][2][1], 0xFEFAF5FE, 0x0FFBEAEC, 0x1900F3F1, 0x0503F6FB);
	r6 = D(r6, s[1][2][1], 0x0803F1FE, 0x06F40BFD, 0x1301FF06, 0x0005FF00);
	r7 = D(r7, s[1][2][1], 0x01030003, 0x0D031406, 0xE9ED02E1, 0x0EFFF803);
	r0 = D(r0, s[1][2][2], 0x04EEEEF6, 0x00FDFEFF, 0x07030704, 0x08FA0CF9);
	r1 = D(r1, s[1][2][2], 0x0CF8EEEF, 0x0003F504, 0x07B1FFFD, 0x05F710F8);
	r2 = D(r2, s[1][2][2], 0x01EB0D09, 0x01040305, 0xFD1AA01F, 0x01FF0601);
	r3 = D(r3, s[1][2][2], 0x00F80D05, 0x04FEF4FA, 0x20F5FA1A, 0xFEFDF9FC);
	r4 = D(r4, s[1][2][2], 0x1705F40F, 0xFB03FE01, 0x0604FE00, 0xFC03FE02);
	r5 = D(r5, s[1][2][2], 0x00FD0BFE, 0x031D1000, 0xE7E4020F, 0x09FD01FA);
	r6 = D(r6, s[1][2][2], 0x02F704FC, 0xFCFCFF03, 0xFD15FEF0, 0x0002FB02);
	r7 = D(r7, s[1][2][2], 0x0204FD00, 0x00DAE404, 0x0AF5D9FB, 0x0605EF0E);
	s[0][0][0] = G[2][xy.y+0][xy.x+0]; s[0][0][1] = G[2][xy.y+0][xy.x+1];
	s[0][0][2] = G[2][xy.y+0][xy.x+2]; s[0][1][0] = G[2][xy.y+1][xy.x+0];
	s[0][1][1] = G[2][xy.y+1][xy.x+1]; s[0][1][2] = G[2][xy.y+1][xy.x+2];
	s[0][2][0] = G[2][xy.y+2][xy.x+0]; s[0][2][1] = G[2][xy.y+2][xy.x+1];
	s[0][2][2] = G[2][xy.y+2][xy.x+2]; s[1][0][0] = G[3][xy.y+0][xy.x+0];
	s[1][0][1] = G[3][xy.y+0][xy.x+1]; s[1][0][2] = G[3][xy.y+0][xy.x+2];
	s[1][1][0] = G[3][xy.y+1][xy.x+0]; s[1][1][1] = G[3][xy.y+1][xy.x+1];
	s[1][1][2] = G[3][xy.y+1][xy.x+2]; s[1][2][0] = G[3][xy.y+2][xy.x+0];
	s[1][2][1] = G[3][xy.y+2][xy.x+1]; s[1][2][2] = G[3][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x072208E1, 0xFA0A00F7, 0x010CFDFE, 0xF111F704);
	r1 = D(r1, s[0][0][0], 0xFFCCF3F4, 0xFC04FDF7, 0xFD1500FD, 0x0AFA06EC);
	r2 = D(r2, s[0][0][0], 0xE530FDF3, 0x06FF0208, 0x08230CF9, 0x0BFBF8FB);
	r3 = D(r3, s[0][0][0], 0xF7F7FDF3, 0x02090306, 0xF9C5FFF7, 0xF8FCF9EC);
	r4 = D(r4, s[0][0][0], 0xDE1AE2F7, 0x0607FBFE, 0x0205FCF8, 0xF902F7EE);
	r5 = D(r5, s[0][0][0], 0x030DE7FC, 0xEE2CFC05, 0xF20CFCD8, 0xFC0AFAF7);
	r6 = D(r6, s[0][0][0], 0xFD15F8EB, 0xFD130001, 0x0201FDFE, 0x00FFFF02);
	r7 = D(r7, s[0][0][0], 0x04F40000, 0x10090207, 0xF914FAFA, 0xFB1AF6FC);
	r0 = D(r0, s[0][0][1], 0xFA1301EB, 0x0211030D, 0x0502FCF8, 0xF6F8FAED);
	r1 = D(r1, s[0][0][1], 0x060B04FE, 0xEF0EEEF5, 0xE934F9FC, 0xE11501FB);
	r2 = D(r2, s[0][0][1], 0x11FE100C, 0xFA03FAF9, 0xFE13D7F4, 0xFFFFF8FC);
	r3 = D(r3, s[0][0][1], 0xF5D40B06, 0x040CFBF0, 0xF2F8E6FF, 0x010008FD);
	r4 = D(r4, s[0][0][1], 0x0F170001, 0x000204FD, 0xFB0AFEFC, 0xEE2BFC09);
	r5 = D(r5, s[0][0][1], 0x0A00EF05, 0x121EFFE1, 0xE810D7FE, 0xFC0F04FC);
	r6 = D(r6, s[0][0][1], 0xF3F202FA, 0x0105F903, 0x0009F5F4, 0xFEF0FAFC);
	r7 = D(r7, s[0][0][1], 0x000AFAF9, 0x04240EF1, 0x0BEBE50A, 0xF711FB02);
	r0 = D(r0, s[0][0][2], 0xF90EFFFE, 0xF3F4FEF1, 0x01FFF9FC, 0x051CFFFF);
	r1 = D(r1, s[0][0][2], 0x09D425F7, 0x0603FCFA, 0xDE3F10E3, 0x1ACFF7FF);
	r2 = D(r2, s[0][0][2], 0xF818EAF2, 0x040AFE00, 0x071E06F8, 0x03F609F5);
	r3 = D(r3, s[0][0][2], 0xFCF7F20C, 0xFFF4FA03, 0x11FAE004, 0x10AE04F4);
	r4 = D(r4, s[0][0][2], 0xE01E08E2, 0xFF0204FD, 0xFB07FB01, 0x00F70BFD);
	r5 = D(r5, s[0][0][2], 0x0B060300, 0xE1330AED, 0xF513EC08, 0xF80805FC);
	r6 = D(r6, s[0][0][2], 0xFA08FF03, 0x07FC02FD, 0x010F0003, 0xFDFE04FD);
	r7 = D(r7, s[0][0][2], 0xFC0300FD, 0xFE1FF905, 0x05EAF20C, 0x15F3F000);
	r0 = D(r0, s[0][1][0], 0x06FBFAFD, 0xF70400FE, 0x04130003, 0x03F40702);
	r1 = D(r1, s[0][1][0], 0x0B090AFD, 0x00FF0203, 0x1C080AE5, 0x03F7F7FB);
	r2 = D(r2, s[0][1][0], 0x0111EEF9, 0x080B0100, 0xEF010D03, 0x0704FFFE);
	r3 = D(r3, s[0][1][0], 0xF603FDEC, 0x060A0402, 0x0428E2FE, 0x0AECFDFF);
	r4 = D(r4, s[0][1][0], 0x210F03FE, 0x06030400, 0xF6010201, 0x00110903);
	r5 = D(r5, s[0][1][0], 0x06FCFCE6, 0x041D06F0, 0xFDEF0DF3, 0x02070CFB);
	r6 = D(r6, s[0][1][0], 0xFC0BF9FF, 0xFF010409, 0x0400F0F2, 0x03F70203);
	r7 = D(r7, s[0][1][0], 0x03FEFD00, 0xF90C0510, 0xFC1408ED, 0xD405FE05);
	r0 = D(r0, s[0][1][1], 0xF81B07F3, 0xF611F202, 0xEE11F4ED, 0x0A0CFBF6);
	r1 = D(r1, s[0][1][1], 0xF105EEEB, 0x02EAE307, 0x02200501, 0xE00F1107);
	r2 = D(r2, s[0][1][1], 0x0A0B04F2, 0xFDF6F605, 0xBE16F906, 0xF600FBF7);
	r3 = D(r3, s[0][1][1], 0xEFF00502, 0xFD0706D7, 0xFA20C2F3, 0xE8FEF8FF);
	r4 = D(r4, s[0][1][1], 0xDD1E07E5, 0x0409FCF8, 0xFA0405F2, 0xF7FAF5FA);
	r5 = D(r5, s[0][1][1], 0xF805E8EF, 0xFE2301C1, 0xFBFEF004, 0x050EFFF0);
	r6 = D(r6, s[0][1][1], 0xF916FCF1, 0xF6FDF3FD, 0x010FF60A, 0xFD09F9FB);
	r7 = D(r7, s[0][1][1], 0xFD050205, 0xFFE3FCEF, 0x0F1EADEC, 0xDE09CEF6);
	r0 = D(r0, s[0][1][2], 0xFD04FEF1, 0xFBF204FB, 0xF30B08F5, 0x18F7FFFC);
	r1 = D(r1, s[0][1][2], 0x072216E6, 0xFD07FF08, 0xF218FFF4, 0x1B0908E8);
	r2 = D(r2, s[0][1][2], 0xDEFFEF08, 0xFF0AFDFA, 0xF9F7F908, 0xFCFFFFFC);
	r3 = D(r3, s[0][1][2], 0x09F409FE, 0xFD0F0103, 0xEDFFF802, 0x1CFFF5F6);
	r4 = D(r4, s[0][1][2], 0x09210910, 0x010203FD, 0x000BF3F4, 0xFF050801);
	r5 = D(r5, s[0][1][2], 0xFC05F803, 0x001C0B1B, 0x0B02CD04, 0xF2FAF90C);
	r6 = D(r6, s[0][1][2], 0xF705030A, 0xFBFAFC02, 0x0209F8FE, 0x060603FA);
	r7 = D(r7, s[0][1][2], 0x020002F9, 0x111E0EF6, 0x1F09F402, 0x020E05F1);
	r0 = D(r0, s[0][2][0], 0x0BF8FC11, 0xFD0A07FC, 0x090AFF01, 0xFA0B04F6);
	r1 = D(r1, s[0][2][0], 0xF9F1F8ED, 0x00FC0205, 0xFA04EEE0, 0xFD0105FC);
	r2 = D(r2, s[0][2][0], 0x06FFECED, 0x00010901, 0xD1ECCFE6, 0x0808FF0B);
	r3 = D(r3, s[0][2][0], 0xFA0C07F3, 0x0A040300, 0xF8D8F514, 0x04F4FAFB);
	r4 = D(r4, s[0][2][0], 0x0E02E7F8, 0x00FDFD06, 0x040406FE, 0x03FEF9FE);
	r5 = D(r5, s[0][2][0], 0x06FD030E, 0xF21AFAFE, 0x0DD1BC0D, 0xF505FFFB);
	r6 = D(r6, s[0][2][0], 0xFA07FDFD, 0x0306F0FE, 0xFE060607, 0x0103F609);
	r7 = D(r7, s[0][2][0], 0x06FC0204, 0xFF07050D, 0xFF02E705, 0x01F3F710);
	r0 = D(r0, s[0][2][1], 0xF012E802, 0xFD06F70A, 0xF5F2F109, 0xF8FB0700);
	r1 = D(r1, s[0][2][1], 0xF60C0102, 0x00F8080A, 0x26080213, 0x030B14EA);
	r2 = D(r2, s[0][2][1], 0xF71FDF1A, 0xFCFFFC0C, 0x08F7E1FC, 0x00F8F80E);
	r3 = D(r3, s[0][2][1], 0x00FCF7F0, 0x0102F808, 0xFBD9EB0C, 0xEF06F6F6);
	r4 = D(r4, s[0][2][1], 0xEA08E40E, 0x01FC0401, 0x04080603, 0x0007F9FB);
	r5 = D(r5, s[0][2][1], 0xFCFDF713, 0x1F0AF6EA, 0x10E9E3F5, 0xFDFEFEF3);
	r6 = D(r6, s[0][2][1], 0xFDFFFEF7, 0xF9F5EF09, 0xF5FBDB0B, 0xF8F9EF0C);
	r7 = D(r7, s[0][2][1], 0x0100FF05, 0x04FAE8EE, 0xF9060201, 0xF800E8F6);
	r0 = D(r0, s[0][2][2], 0x14FC03DF, 0x04F5FD0C, 0xF10A080B, 0x10F9090D);
	r1 = D(r1, s[0][2][2], 0x0AF910F9, 0x010300FF, 0xE706F503, 0x0D0004F7);
	r2 = D(r2, s[0][2][2], 0xDCFE1E09, 0xF401EE0E, 0xFE17D907, 0xF704F8FA);
	r3 = D(r3, s[0][2][2], 0xFF0301FC, 0xFB04FEEC, 0xEB0DF115, 0xFF0301FC);
	r4 = D(r4, s[0][2][2], 0x08FF0902, 0xFCFEFEFE, 0x0004F7FE, 0x03F90BFA);
	r5 = D(r5, s[0][2][2], 0x0007F1F9, 0xCB10FC0B, 0xF80DC213, 0xF9FEFD01);
	r6 = D(r6, s[0][2][2], 0x00FF01FB, 0xFAFDFD00, 0xFB01EF0A, 0xFC0209F7);
	r7 = D(r7, s[0][2][2], 0xFBFCFF00, 0xF816FA02, 0xF317F917, 0x0BF60113);
	r0 = D(r0, s[1][0][0], 0x0C12F3EE, 0xFD0808FA, 0x070008FC, 0xFA021EFD);
	r1 = D(r1, s[1][0][0], 0x0F0F06FF, 0xF5FF12FE, 0xFEF806E9, 0xF10506F6);
	r2 = D(r2, s[1][0][0], 0x1402F9F7, 0x00FE0505, 0xC9F9E7F5, 0x01070402);
	r3 = D(r3, s[1][0][0], 0xF905FF0C, 0xFCFCFDFD, 0xEA011319, 0xF90CFF05);
	r4 = D(r4, s[1][0][0], 0x0FF9E2F2, 0x06FF01FD, 0xFE040401, 0xFC041CFB);
	r5 = D(r5, s[1][0][0], 0x00F708FD, 0xF1F0FCF0, 0xFF1216F9, 0xF1050801);
	r6 = D(r6, s[1][0][0], 0xF70E04FB, 0xFBFD01FA, 0xF700FD02, 0xFBFA07FD);
	r7 = D(r7, s[1][0][0], 0xFCFFFCFC, 0x0BEE1CF1, 0x03F6F8E5, 0x070108FB);
	r0 = D(r0, s[1][0][1], 0xC2090B10, 0xFF05FD02, 0x00010DF4, 0xF50827FE);
	r1 = D(r1, s[1][0][1], 0x0B03EEEF, 0xE70309FC, 0xFAE8080A, 0xF5110AF2);
	r2 = D(r2, s[1][0][1], 0x18E504F2, 0xDC030407, 0xCE00251C, 0xFA080D13);
	r3 = D(r3, s[1][0][1], 0xF9070304, 0x03030FFD, 0xC904EA19, 0xF5141C04);
	r4 = D(r4, s[1][0][1], 0x0DE404EE, 0xFFFA05FE, 0x04FB0CF9, 0x05F60700);
	r5 = D(r5, s[1][0][1], 0xFCF90600, 0x0C041CFE, 0xF51405E9, 0x0FFFF7F8);
	r6 = D(r6, s[1][0][1], 0x10FFF5FB, 0xF6FC08FD, 0xEFF30DF4, 0xF2060F04);
	r7 = D(r7, s[1][0][1], 0xF804F9FF, 0x04F9B002, 0xF9FB11FC, 0xF5FD0BFC);
	r0 = D(r0, s[1][0][2], 0x0709F5F1, 0x02FF07F9, 0x02FCFB02, 0xF7F6FE06);
	r1 = D(r1, s[1][0][2], 0xEC1216FE, 0x05FE06FA, 0xE501FDE1, 0xEFF20F0E);
	r2 = D(r2, s[1][0][2], 0xF5FE0DF2, 0x0400FCF8, 0xE6F4F40B, 0xEE0913F7);
	r3 = D(r3, s[1][0][2], 0x141AF90C, 0xFCFBFBF5, 0xF809FEF3, 0xF0FB11FC);
	r4 = D(r4, s[1][0][2], 0x191C0F02, 0x0501FBFF, 0x0801F8F8, 0x0404FDFD);
	r5 = D(r5, s[1][0][2], 0xFDF608F9, 0xFF0CF5FD, 0xF70D0FF9, 0x0505FA06);
	r6 = D(r6, s[1][0][2], 0x04FA0104, 0xFDFB09F8, 0x060BEDFB, 0x03FE01FF);
	r7 = D(r7, s[1][0][2], 0xFFFDF5FD, 0xCA0CFB00, 0xFFECF8F8, 0x0FF8FC01);
	r0 = D(r0, s[1][1][0], 0x0D1301FD, 0xFDF91300, 0xF001F9FB, 0xFBF235FF);
	r1 = D(r1, s[1][1][0], 0xE20105FA, 0x03FB0907, 0x0DD70E08, 0xDEF50F0A);
	r2 = D(r2, s[1][1][0], 0xFEF0FBFB, 0xFD0DFFFF, 0xB40CFB13, 0xFF0D00F3);
	r3 = D(r3, s[1][1][0], 0xFC0A1B0C, 0x010305F7, 0x0F0709F1, 0xFB0607FE);
	r4 = D(r4, s[1][1][0], 0xA5F90000, 0xFC07FAFE, 0xFFFD04FB, 0xEC001905);
	r5 = D(r5, s[1][1][0], 0x01FFFD03, 0xD0FF0207, 0xD508FA15, 0xDBF9060D);
	r6 = D(r6, s[1][1][0], 0xE3FB060E, 0xFEFBFEF7, 0xF9F90304, 0xFCF50204);
	r7 = D(r7, s[1][1][0], 0xFDF700FC, 0xF903F006, 0x04FD0AFE, 0xFE10FD12);
	r0 = D(r0, s[1][1][1], 0xD90AE505, 0xEC05FF0C, 0xFFF5F807, 0x1A052F01);
	r1 = D(r1, s[1][1][1], 0xF113FC01, 0xF70DFB07, 0x29BCFA0A, 0x0BF10CFA);
	r2 = D(r2, s[1][1][1], 0x0E0F030E, 0xF701FD0E, 0xCCEE8108, 0xF816FD09);
	r3 = D(r3, s[1][1][1], 0x01040CF4, 0xFAF6FD0A, 0x9AEFF8F1, 0xFEFFEAF2);
	r4 = D(r4, s[1][1][1], 0xA203F5FA, 0xF21A0606, 0x0A0B0B0A, 0xFC08F401);
	r5 = D(r5, s[1][1][1], 0x00FDFF0E, 0xECEEDE14, 0xCD0AFE17, 0xE51CFE06);
	r6 = D(r6, s[1][1][1], 0xEDFEFF00, 0xF9F80902, 0xEB08F713, 0xF0090105);
	r7 = D(r7, s[1][1][1], 0xF2001909, 0xF500D7FD, 0x01EDEFEC, 0xCFF6F8FD);
	r0 = D(r0, s[1][1][2], 0xC9FA0FF3, 0xFDF105FC, 0x0400FAFC, 0xE9081200);
	r1 = D(r1, s[1][1][2], 0x0304040A, 0xFDFA0802, 0xF60A10F9, 0xE40F090C);
	r2 = D(r2, s[1][1][2], 0xF6E4FF02, 0xE10EFE07, 0xED02FFF7, 0xFA021008);
	r3 = D(r3, s[1][1][2], 0x14F120F6, 0x0A0504FF, 0xF90707F3, 0xFBFFF30E);
	r4 = D(r4, s[1][1][2], 0xEDE9E6F3, 0xFD060400, 0xFFEDFBFF, 0x03FF02FB);
	r5 = D(r5, s[1][1][2], 0x02130004, 0xFE0400F2, 0xC910CDF5, 0x06FB0005);
	r6 = D(r6, s[1][1][2], 0x060AFF01, 0x02FA09FF, 0xE3FAFFFF, 0x0004FF01);
	r7 = D(r7, s[1][1][2], 0xF50513FF, 0xB5F0D818, 0x0708F2FC, 0x02FF0AF9);
	r0 = D(r0, s[1][2][0], 0x02EE0104, 0x0BF81305, 0xF5F70F00, 0x010928FC);
	r1 = D(r1, s[1][2][0], 0x07F2F205, 0x0302FCFE, 0xFD0AF004, 0xE801080D);
	r2 = D(r2, s[1][2][0], 0xF4D3F90D, 0x02FA0001, 0xE5FF0015, 0x0B00FEFC);
	r3 = D(r3, s[1][2][0], 0xFB05E30B, 0x01FD09FF, 0xFB0A2619, 0xECFB0001);
	r4 = D(r4, s[1][2][0], 0x9ED5EF09, 0x0004FD02, 0x00FF0EF6, 0xF3F00905);
	r5 = D(r5, s[1][2][0], 0xFE0406FE, 0xD7E1FFF2, 0x0AF2F60C, 0xF6F60904);
	r6 = D(r6, s[1][2][0], 0xFBE40102, 0xFBF8FCFE, 0x02020101, 0xFDF90000);
	r7 = D(r7, s[1][2][0], 0x0102FDFC, 0xFCFDF6EE, 0x010F010C, 0xD2000E0D);
	r0 = D(r0, s[1][2][1], 0x011111FE, 0xF8FC1302, 0xEDF8FC09, 0x0EF82208);
	r1 = D(r1, s[1][2][1], 0xB916F4F0, 0xFB0AFA00, 0xABC4ED02, 0x0DFBFC04);
	r2 = D(r2, s[1][2][1], 0xC206E612, 0xFE11F900, 0xEA01FDFB, 0xFC0405FA);
	r3 = D(r3, s[1][2][1], 0xFC07FF06, 0xEB0A090D, 0xFCF7E5F8, 0xF601F0F8);
	r4 = D(r4, s[1][2][1], 0xD907FC0E, 0xF8EB01FE, 0x02EF09FC, 0x000A0201);
	r5 = D(r5, s[1][2][1], 0xEF170A04, 0x9D030D1E, 0xBCFCE7EE, 0xE001FF08);
	r6 = D(r6, s[1][2][1], 0xF300F90B, 0xFA0C1501, 0xF910F108, 0xF80504FE);
	r7 = D(r7, s[1][2][1], 0xFEF101FF, 0xFEFC360A, 0xEF0408F5, 0xED02030B);
	r0 = D(r0, s[1][2][2], 0xD4F7101C, 0x02FCF1FA, 0xF8F3FBFE, 0xFBFC0EFF);
	r1 = D(r1, s[1][2][2], 0x17E9F906, 0x020EFC02, 0xD9120416, 0xF005FF04);
	r2 = D(r2, s[1][2][2], 0x04D40601, 0xFEF7FE08, 0xC516060B, 0xFBF6F8FD);
	r3 = D(r3, s[1][2][2], 0xFBFAF50A, 0xE6F9FD09, 0xF20C150C, 0x0401F6FC);
	r4 = D(r4, s[1][2][2], 0x1AF10607, 0x01FEFA01, 0xFD0D0C08, 0x08FFFAFE);
	r5 = D(r5, s[1][2][2], 0xF8F9FA03, 0x0707FBF9, 0xD1EAEE03, 0x0704FD02);
	r6 = D(r6, s[1][2][2], 0x05010001, 0x02FD07FF, 0xF1F8050E, 0x04FE05FC);
	r7 = D(r7, s[1][2][2], 0x010100FC, 0xAB0B1307, 0xE9040600, 0xFDF3EE11);
	s[0][0][0] = G[4][xy.y+0][xy.x+0]; s[0][0][1] = G[4][xy.y+0][xy.x+1];
	s[0][0][2] = G[4][xy.y+0][xy.x+2]; s[0][1][0] = G[4][xy.y+1][xy.x+0];
	s[0][1][1] = G[4][xy.y+1][xy.x+1]; s[0][1][2] = G[4][xy.y+1][xy.x+2];
	s[0][2][0] = G[4][xy.y+2][xy.x+0]; s[0][2][1] = G[4][xy.y+2][xy.x+1];
	s[0][2][2] = G[4][xy.y+2][xy.x+2]; s[1][0][0] = G[5][xy.y+0][xy.x+0];
	s[1][0][1] = G[5][xy.y+0][xy.x+1]; s[1][0][2] = G[5][xy.y+0][xy.x+2];
	s[1][1][0] = G[5][xy.y+1][xy.x+0]; s[1][1][1] = G[5][xy.y+1][xy.x+1];
	s[1][1][2] = G[5][xy.y+1][xy.x+2]; s[1][2][0] = G[5][xy.y+2][xy.x+0];
	s[1][2][1] = G[5][xy.y+2][xy.x+1]; s[1][2][2] = G[5][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x010C11FB, 0xF6010505, 0xF6FC01F9, 0x05FDF900);
	r1 = D(r1, s[0][0][0], 0xFAE6FAFA, 0xF4FDF803, 0xEEF605FA, 0x000AFE0C);
	r2 = D(r2, s[0][0][0], 0xE4EE23FA, 0x00F00D02, 0xDAFC19F2, 0x09ED0AFC);
	r3 = D(r3, s[0][0][0], 0xFB19F819, 0x06FDF800, 0xD911F2EA, 0xF1050111);
	r4 = D(r4, s[0][0][0], 0xACEE0B01, 0xFEFD0400, 0xF800FDFF, 0xF2F0FDFE);
	r5 = D(r5, s[0][0][0], 0xFE0EF201, 0xB70DF702, 0x0F1607F6, 0xF0FFF5FA);
	r6 = D(r6, s[0][0][0], 0xE902EA04, 0xFEF8FDFC, 0xF6F2FDF7, 0xF6FA0403);
	r7 = D(r7, s[0][0][0], 0xFFF500FA, 0xFAF3E3F8, 0xFEF9FBEF, 0x01FEE6FB);
	r0 = D(r0, s[0][0][1], 0xFBF10604, 0xE507FB0A, 0xFCFF02FE, 0xF9FF0101);
	r1 = D(r1, s[0][0][1], 0xEDFD1917, 0xF2F4F50B, 0x0118FFF8, 0x020EF20F);
	r2 = D(r2, s[0][0][1], 0xD2F8F9F3, 0xFDFFE406, 0xCCFEDEDB, 0xF8E5F308);
	r3 = D(r3, s[0][0][1], 0xF8050116, 0xFEFEFE02, 0xE50FFD00, 0xFD0BF60B);
	r4 = D(r4, s[0][0][1], 0xF40501F1, 0xFAF8FEFB, 0xFFFDF702, 0x0001FD00);
	r5 = D(r5, s[0][0][1], 0xFA00DD05, 0x0119020D, 0x00F61610, 0x08EA0B04);
	r6 = D(r6, s[0][0][1], 0x060F0201, 0xFC00F3FE, 0xFBF2FDF1, 0x01F40600);
	r7 = D(r7, s[0][0][1], 0x00FBF6FB, 0x090810FE, 0xFD10F7EF, 0xFE00EDFF);
	r0 = D(r0, s[0][0][2], 0xDFF81100, 0xEB070208, 0x06FAFAFF, 0x00F7F808);
	r1 = D(r1, s[0][0][2], 0xF3F7D601, 0xFC00090B, 0xCF810716, 0xFD04F822);
	r2 = D(r2, s[0][0][2], 0xFDF00EF9, 0xF3E2FE00, 0x8514DD13, 0x05E0050A);
	r3 = D(r3, s[0][0][2], 0x00FFF21C, 0xF3F1040A, 0xC230D603, 0xF9FBFC08);
	r4 = D(r4, s[0][0][2], 0xA9B503F8, 0xFDF60800, 0x05010004, 0x01E90408);
	r5 = D(r5, s[0][0][2], 0xFFF6FCFD, 0xEFD2ED14, 0x13130A12, 0x03ECF104);
	r6 = D(r6, s[0][0][2], 0xFFEEFD0B, 0xFE02F800, 0x01E9FF04, 0xFCD60AF9);
	r7 = D(r7, s[0][0][2], 0x01F203FF, 0xC103DEFC, 0x0C07FA04, 0xF700F6FC);
	r0 = D(r0, s[0][1][0], 0xF9F1FF04, 0xEE01FA07, 0xF709EAFB, 0x000303FF);
	r1 = D(r1, s[0][1][0], 0x05E5F3FF, 0x05FD02FE, 0x01FDF60E, 0xF506FDFF);
	r2 = D(r2, s[0][1][0], 0xDF00F1F4, 0x06F90200, 0xD114F51C, 0x03F601FE);
	r3 = D(r3, s[0][1][0], 0xFC16ED19, 0xFEFEFCFB, 0xFAE102F4, 0x0E00FFFE);
	r4 = D(r4, s[0][1][0], 0x0D1FF0EC, 0xFAFE0102, 0xFA04F6FF, 0x00DF0400);
	r5 = D(r5, s[0][1][0], 0x08EAF9FD, 0xF5FBEC05, 0xD412E6FE, 0xFFF1F605);
	r6 = D(r6, s[0][1][0], 0xFBECED04, 0xFEFDF704, 0x02E808F5, 0x03F80802);
	r7 = D(r7, s[0][1][0], 0xFEF906FB, 0xEEFD050B, 0xFE02F90A, 0xCDF2FC0C);
	r0 = D(r0, s[0][1][1], 0x0F020AF1, 0xD7E80F06, 0xFAF403FA, 0x01F01203);
	r1 = D(r1, s[0][1][1], 0xC304111B, 0xFBF60509, 0x08FC1AF2, 0xFDF2F812);
	r2 = D(r2, s[0][1][1], 0xCEFBF7FF, 0xFEE7EC00, 0xFAE9E302, 0x02FAF6FE);
	r3 = D(r3, s[0][1][1], 0xFFF4EF09, 0x04021308, 0xE604E8F8, 0xFF0B0F0E);
	r4 = D(r4, s[0][1][1], 0x81C00FEE, 0xFCFC06FB, 0x00FAF607, 0xF4F0F905);
	r5 = D(r5, s[0][1][1], 0xFBFD0003, 0xECEF04F5, 0xA410BA04, 0x03B50DFE);
	r6 = D(r6, s[0][1][1], 0xFFD5F5FD, 0xF7FE0902, 0x0CECE3FE, 0x05DF0605);
	r7 = D(r7, s[0][1][1], 0x02FA0C00, 0xFC0BF30F, 0xF6E7190C, 0xEFF7F809);
	r0 = D(r0, s[0][1][2], 0xEDEE120B, 0xFDFF0803, 0xF3F7F901, 0x04040105);
	r1 = D(r1, s[0][1][2], 0xFC811210, 0xFAFCF700, 0xF59AF5FF, 0xFA0C0D12);
	r2 = D(r2, s[0][1][2], 0xFEF0FD00, 0x05DB010D, 0x090C00FC, 0xFDED01FB);
	r3 = D(r3, s[0][1][2], 0x04FD010D, 0xF3FFFE07, 0xF0F3F4FA, 0x05FAF90B);
	r4 = D(r4, s[0][1][2], 0x99020105, 0xFDF806FA, 0xFBFDFD08, 0x00F50702);
	r5 = D(r5, s[0][1][2], 0x06EFFA06, 0xEFDFDC05, 0xC61AC51C, 0xF4EAEE05);
	r6 = D(r6, s[0][1][2], 0xF8F9F606, 0xFB02F801, 0xED00FF08, 0xFAE601FE);
	r7 = D(r7, s[0][1][2], 0xFAF605FF, 0xE8F5E015, 0x0302FD10, 0xE5FB0D13);
	r0 = D(r0, s[0][2][0], 0x04F6F00E, 0xEDFC0407, 0xF407F204, 0x01F6F7FC);
	r1 = D(r1, s[0][2][0], 0xF7ED0DF7, 0x0201F402, 0xEC0004F9, 0x00060111);
	r2 = D(r2, s[0][2][0], 0xC1FAE1E5, 0x04020505, 0x1A15DFE2, 0x02FE04FF);
	r3 = D(r3, s[0][2][0], 0xFB17F915, 0xFEFEF5FC, 0xFAF7DEE7, 0x02E1F308);
	r4 = D(r4, s[0][2][0], 0xE4DA09FD, 0x0301FDFF, 0x0B01FD00, 0xF9DDFDFE);
	r5 = D(r5, s[0][2][0], 0x02FCFE01, 0xEA15F7F4, 0xEAFCFFF7, 0xFBF6F900);
	r6 = D(r6, s[0][2][0], 0xFFFAF901, 0xFBF0F903, 0x0AF8FF02, 0xFFF90201);
	r7 = D(r7, s[0][2][0], 0x06FB01FC, 0x0C01F9EF, 0xF0DD050F, 0xDFEBFBFE);
	r0 = D(r0, s[0][2][1], 0x01ECD805, 0xF2F70402, 0xF4F40A06, 0x04F402FB);
	r1 = D(r1, s[0][2][1], 0x0818140D, 0xFB050305, 0xF0E9EB10, 0xFAF20910);
	r2 = D(r2, s[0][2][1], 0xFDBC05E0, 0x04F4FDFF, 0xF60311FD, 0x02F2FF01);
	r3 = D(r3, s[0][2][1], 0x0106EF0F, 0xFC0108FA, 0xF0EEBA00, 0xFEF3F20C);
	r4 = D(r4, s[0][2][1], 0xD804F7FB, 0xFB0000FA, 0xFD03FD02, 0xF8F4F605);
	r5 = D(r5, s[0][2][1], 0xFAF6ECFC, 0xDAF501FD, 0x1401FBF6, 0xFBF50204);
	r6 = D(r6, s[0][2][1], 0xFA0AF802, 0xFA03F401, 0xF8CDE9FD, 0xFBF5F701);
	r7 = D(r7, s[0][2][1], 0x01FAFDF9, 0xEDFD06FA, 0x96D0271A, 0xC10AEF09);
	r0 = D(r0, s[0][2][2], 0xE7EB13F4, 0xFFDFFF0C, 0xF7FBF705, 0xF5EFF5FE);
	r1 = D(r1, s[0][2][2], 0xD5AA0A21, 0x01080407, 0xE6F6FF03, 0xEEFBF51F);
	r2 = D(r2, s[0][2][2], 0xD104E50B, 0xFCEBEF05, 0xE418EC04, 0x04E80000);
	r3 = D(r3, s[0][2][2], 0xF703ED0D, 0xECE50C08, 0xF7FFEF01, 0xF3FCF80A);
	r4 = D(r4, s[0][2][2], 0x07DA0AE3, 0xFAFC01FC, 0xF5030105, 0x05EA0104);
	r5 = D(r5, s[0][2][2], 0xEFFDF004, 0xE5F6E723, 0xA208F5E9, 0xF2E9FA0B);
	r6 = D(r6, s[0][2][2], 0xF3F8FB0C, 0xF3F5FE01, 0xF9D1ED00, 0xF9EE0400);
	r7 = D(r7, s[0][2][2], 0xFCF700FC, 0x9FE3F6F6, 0xC8FA0E00, 0xEC0EF3FC);
	r0 = D(r0, s[1][0][0], 0xEDF9FBE9, 0xF20803F1, 0xFF0303F6, 0xFE07F802);
	r1 = D(r1, s[1][0][0], 0x02FE1405, 0xF9090004, 0x08FDFD03, 0xF0FB01EE);
	r2 = D(r2, s[1][0][0], 0xFEFDF40E, 0xF6040BFD, 0xF9FD09F0, 0xF6FD0C00);
	r3 = D(r3, s[1][0][0], 0x02FBF9F0, 0x06000701, 0xF70501F2, 0xFB13FFFE);
	r4 = D(r4, s[1][0][0], 0xFB18F9AD, 0xFA010601, 0xFD060002, 0x0905EC01);
	r5 = D(r5, s[1][0][0], 0xFF080705, 0x09F70DC1, 0x0EF60EDD, 0xFD0603F3);
	r6 = D(r6, s[1][0][0], 0xF50709EA, 0x05060401, 0xF60012FB, 0xFC0009F7);
	r7 = D(r7, s[1][0][0], 0x00FE0304, 0x180208FF, 0x071114FB, 0x0509FF02);
	r0 = D(r0, s[1][0][1], 0xF6FD0401, 0x0311FD08, 0xFE0C0409, 0xFDFF0104);
	r1 = D(r1, s[1][0][1], 0xFBFC0DE8, 0xFC05F8F8, 0xEB130781, 0xF7FAF6FA);
	r2 = D(r2, s[1][0][1], 0x15FA16DE, 0xF7FDFF02, 0xE7DCDF1F, 0xF6040B0B);
	r3 = D(r3, s[1][0][1], 0x01FE04FE, 0x000CFCF6, 0xF30712D8, 0x0A09EEE8);
	r4 = D(r4, s[1][0][1], 0x22D817D0, 0x0503FE01, 0x0409FCF5, 0xF2F7FCF8);
	r5 = D(r5, s[1][0][1], 0x0802F900, 0xF710090A, 0x01F915EE, 0x04FEF4F8);
	r6 = D(r6, s[1][0][1], 0xFBFAF6FE, 0x0C010202, 0xFCFA00F2, 0x000BFC02);
	r7 = D(r7, s[1][0][1], 0xFE010007, 0x0C060EDD, 0x060AFE04, 0x060CFA0C);
	r0 = D(r0, s[1][0][2], 0x08010118, 0x1709F804, 0x00080203, 0x0106FFFA);
	r1 = D(r1, s[1][0][2], 0xEB0FDCD4, 0x0AFFF901, 0xEA1C001B, 0xF4F806F1);
	r2 = D(r2, s[1][0][2], 0x01EE01DD, 0x00FAF905, 0xF4011111, 0x01F3F505);
	r3 = D(r3, s[1][0][2], 0x0B0AF6FD, 0x02FC030A, 0xFEE7FD0B, 0x052001F2);
	r4 = D(r4, s[1][0][2], 0x02F9EB22, 0x01000203, 0x05030600, 0xEDEB0E02);
	r5 = D(r5, s[1][0][2], 0x0B02F804, 0xF2E4FE03, 0x02F6FEF8, 0xF6FF04FE);
	r6 = D(r6, s[1][0][2], 0x00F50CFB, 0x100C0505, 0xFA08040E, 0x0903FCFE);
	r7 = D(r7, s[1][0][2], 0x0D00FF04, 0xED810AD7, 0x081002E8, 0x0A140811);
	r0 = D(r0, s[1][1][0], 0x06FA1008, 0xFF0DFDF1, 0x0AFEFEFA, 0x0309FEF4);
	r1 = D(r1, s[1][1][0], 0xFEF5FD05, 0xFD030700, 0x0A080307, 0xFAFC0802);
	r2 = D(r2, s[1][1][0], 0x0FF2E5C1, 0x05FE0102, 0x110D1816, 0x02020003);
	r3 = D(r3, s[1][1][0], 0xFCFEFBF3, 0x0AFC01FD, 0xEE080420, 0xFA0308FD);
	r4 = D(r4, s[1][1][0], 0xFEECDDBE, 0xFCFC00FE, 0xFF060101, 0x0508FBFE);
	r5 = D(r5, s[1][1][0], 0x030404F7, 0x02FAF6F6, 0xED0B0419, 0xFB0CFDFB);
	r6 = D(r6, s[1][1][0], 0xFF0106F3, 0x0402FE01, 0x04FF00F4, 0xFD0A0200);
	r7 = D(r7, s[1][1][0], 0x03000404, 0x06FAF4FE, 0x17F602D6, 0x040BF6FE);
	r0 = D(r0, s[1][1][1], 0xF6E8FBF1, 0x13FFEEEA, 0x120FF206, 0x0103EA01);
	r1 = D(r1, s[1][1][1], 0xFB2407F7, 0xFFFE1103, 0x02D0E5DB, 0xFE23FD01);
	r2 = D(r2, s[1][1][1], 0xF80F15FD, 0xF3FB0A01, 0xFCB5D5FB, 0xFA0BFD01);
	r3 = D(r3, s[1][1][1], 0xFDEDF7FC, 0x010FFBF6, 0xFF000EF1, 0xF4E407EC);
	r4 = D(r4, s[1][1][1], 0xE5FEF486, 0x05FE0701, 0x120BF9FB, 0xFDF604F8);
	r5 = D(r5, s[1][1][1], 0xF2FD0CFA, 0xFAF81600, 0x0E0BFFF2, 0x0EFC09F2);
	r6 = D(r6, s[1][1][1], 0x04F90709, 0x1603FF05, 0xF2000400, 0x03040305);
	r7 = D(r7, s[1][1][1], 0x06050C04, 0x100AE017, 0x0702FAF1, 0x04FDE1EE);
	r0 = D(r0, s[1][1][2], 0xFCD9FE16, 0xF8E40600, 0x02F805FD, 0x0EFBF6F7);
	r1 = D(r1, s[1][1][2], 0xF1F7D8F2, 0x06F209FE, 0xFDE71BF0, 0xF4E0F6F7);
	r2 = D(r2, s[1][1][2], 0x07F1F6E6, 0xF200FE04, 0x06930EAB, 0xF9E00E08);
	r3 = D(r3, s[1][1][2], 0xF5060AF3, 0xF5DDFA00, 0xEEFEF015, 0xFD04F5F9);
	r4 = D(r4, s[1][1][2], 0x09E2030E, 0x09F8F8FD, 0x0AF0F4FF, 0x02F70607);
	r5 = D(r5, s[1][1][2], 0xF4E9FCFF, 0xFAA8F1FB, 0x15E5EDF4, 0x06F1FB00);
	r6 = D(r6, s[1][1][2], 0xF901FF01, 0x06F90FFD, 0x0CE4F710, 0xF6EF0500);
	r7 = D(r7, s[1][1][2], 0x08FF1809, 0xFDFDE5EF, 0x14C602F8, 0xEEE00208);
	r0 = D(r0, s[1][2][0], 0x10F71806, 0x010703FD, 0x0A02FCF5, 0xFC0507F5);
	r1 = D(r1, s[1][2][0], 0xFC0C0506, 0x05000406, 0xFB1CFAFE, 0x0902F307);
	r2 = D(r2, s[1][2][0], 0x17CF0AA8, 0x08030C01, 0xFA01FCE7, 0x04FE0506);
	r3 = D(r3, s[1][2][0], 0xFD03FFF2, 0x0EFB0600, 0x11000EFE, 0xFAF8FB07);
	r4 = D(r4, s[1][2][0], 0xF2FBFED6, 0xFEFD0005, 0xFB0203FB, 0x03080C01);
	r5 = D(r5, s[1][2][0], 0x0903030A, 0x0BEEF6DA, 0xF1030B00, 0xFE06FFFF);
	r6 = D(r6, s[1][2][0], 0x030102FE, 0x04FC0505, 0x0DFC06FB, 0xFE030401);
	r7 = D(r7, s[1][2][0], 0xFF010504, 0xFFEE03F5, 0xF006F4DD, 0xFB030803);
	r0 = D(r0, s[1][2][1], 0xFCFAF7E2, 0xFCF6060B, 0x0F010BFA, 0x07FB01F3);
	r1 = D(r1, s[1][2][1], 0x060BF1FC, 0x00FDF806, 0x0C060FB9, 0xECEFF4FD);
	r2 = D(r2, s[1][2][1], 0xF3FDF8FE, 0xFF02080C, 0xFEFE15C4, 0xF7010706);
	r3 = D(r3, s[1][2][1], 0xFC06F6F3, 0xF612F9F3, 0x07FB0909, 0x110719FE);
	r4 = D(r4, s[1][2][1], 0x13EEF0BC, 0x02010200, 0xFA0D0804, 0xFC05FE0B);
	r5 = D(r5, s[1][2][1], 0x05F9FC03, 0xF608F817, 0x0016F30B, 0x03040E04);
	r6 = D(r6, s[1][2][1], 0xFD060A0A, 0xFAF803FD, 0xFDEE0809, 0x02FD0102);
	r7 = D(r7, s[1][2][1], 0x03040306, 0x0D18E8D9, 0x0C02F9F4, 0xF6FA0906);
	r0 = D(r0, s[1][2][2], 0xFB01FE0B, 0x06FF000D, 0xF7F20309, 0xFE010DF1);
	r1 = D(r1, s[1][2][2], 0xF9E805F3, 0xFD03FC06, 0x0AE0E6F9, 0x0D0414F1);
	r2 = D(r2, s[1][2][2], 0xF3D5FBFB, 0x0EF6FFFB, 0xF200E1AD, 0x0EFA0C00);
	r3 = D(r3, s[1][2][2], 0xFB0801E6, 0xFBECFD01, 0x00FE070B, 0x02010B00);
	r4 = D(r4, s[1][2][2], 0xF3F4FA06, 0xFFFF0700, 0x0FFFF806, 0x04F90A04);
	r5 = D(r5, s[1][2][2], 0x0DDD0AFA, 0x0EAB010D, 0xE9E1F0EE, 0x01F4F503);
	r6 = D(r6, s[1][2][2], 0x03ECFA04, 0x01F10702, 0x10F7FE00, 0xFFFF0407);
	r7 = D(r7, s[1][2][2], 0x00000608, 0x03CEFFEB, 0xF70BFB08, 0x03F9060E);
	s[0][0][0] = G[6][xy.y+0][xy.x+0]; s[0][0][1] = G[6][xy.y+0][xy.x+1];
	s[0][0][2] = G[6][xy.y+0][xy.x+2]; s[0][1][0] = G[6][xy.y+1][xy.x+0];
	s[0][1][1] = G[6][xy.y+1][xy.x+1]; s[0][1][2] = G[6][xy.y+1][xy.x+2];
	s[0][2][0] = G[6][xy.y+2][xy.x+0]; s[0][2][1] = G[6][xy.y+2][xy.x+1];
	s[0][2][2] = G[6][xy.y+2][xy.x+2]; s[1][0][0] = G[7][xy.y+0][xy.x+0];
	s[1][0][1] = G[7][xy.y+0][xy.x+1]; s[1][0][2] = G[7][xy.y+0][xy.x+2];
	s[1][1][0] = G[7][xy.y+1][xy.x+0]; s[1][1][1] = G[7][xy.y+1][xy.x+1];
	s[1][1][2] = G[7][xy.y+1][xy.x+2]; s[1][2][0] = G[7][xy.y+2][xy.x+0];
	s[1][2][1] = G[7][xy.y+2][xy.x+1]; s[1][2][2] = G[7][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xB40CFBE2, 0xF3F3E8F1, 0x0105F508, 0xF60A03FD);
	r1 = D(r1, s[0][0][0], 0xAB0BD410, 0xF60F0507, 0x170100A5, 0xF10505EC);
	r2 = D(r2, s[0][0][0], 0x02F7EEEF, 0xE4F51203, 0x080EF3CB, 0xFBF9FC01);
	r3 = D(r3, s[0][0][0], 0xFBF1FBEC, 0xFC04F402, 0x84491703, 0x1CFFE8F7);
	r4 = D(r4, s[0][0][0], 0xEAF805DB, 0xFD030208, 0x0004F2FD, 0xFA03FA0C);
	r5 = D(r5, s[0][0][0], 0xF8F30202, 0x180BCC0F, 0x10F4F218, 0xFE09FE11);
	r6 = D(r6, s[0][0][0], 0x170ADF0C, 0xF206F8FB, 0xFCF0120B, 0xFB06FC03);
	r7 = D(r7, s[0][0][0], 0xF603FEFE, 0xD4F6E848, 0x0C11EE04, 0xFDF7ECFF);
	r0 = D(r0, s[0][0][1], 0x0006FCF8, 0x170809FE, 0xF1080608, 0x17F0FB0B);
	r1 = D(r1, s[0][0][1], 0xDDF8FDF2, 0xD41400F9, 0x0004EBF5, 0xED01FCFC);
	r2 = D(r2, s[0][0][1], 0x06010D08, 0xC10403FD, 0x810CFBF4, 0x0A090302);
	r3 = D(r3, s[0][0][1], 0xFAE7F4FB, 0xF401FE01, 0xA000E4F7, 0x27BB06DE);
	r4 = D(r4, s[0][0][1], 0x4C2BE8FF, 0xFAFFF9FE, 0x050303FE, 0xF40001FC);
	r5 = D(r5, s[0][0][1], 0xE708F803, 0xF80B2BDA, 0x02EE080F, 0xF90606EC);
	r6 = D(r6, s[0][0][1], 0xFE0E0A0C, 0xF40AF8FD, 0xF507F9F3, 0xF706FEFC);
	r7 = D(r7, s[0][0][1], 0xEE030105, 0xCEF4F9E6, 0x01F907F1, 0xF70400E8);
	r0 = D(r0, s[0][0][2], 0x01F619F9, 0x0402F70C, 0xFD0DE900, 0xF2ECF6EF);
	r1 = D(r1, s[0][0][2], 0xF62F0FF8, 0xF0FB05F0, 0xC3041381, 0xFCBCB6F6);
	r2 = D(r2, s[0][0][2], 0xF0EC02E1, 0xEA00F80A, 0x021017E8, 0xE5DAF6F4);
	r3 = D(r3, s[0][0][2], 0xF9EAF301, 0x0105FBFC, 0xD2161506, 0x05091103);
	r4 = D(r4, s[0][0][2], 0xD4E3F8D6, 0x0306FC04, 0xF2FCF000, 0xFAFDEBFA);
	r5 = D(r5, s[0][0][2], 0x00FEFF01, 0x1F14E308, 0x10EC0F06, 0xFAEBEB00);
	r6 = D(r6, s[0][0][2], 0xFD05F7FE, 0xFB0301FD, 0x0CEAFEFA, 0xF000F503);
	r7 = D(r7, s[0][0][2], 0xEBF1FF02, 0x201D1709, 0x13DCFA0D, 0xFC150210);
	r0 = D(r0, s[0][1][0], 0x20F4F5FA, 0x02F414FB, 0xF205F90B, 0x0409FB00);
	r1 = D(r1, s[0][1][0], 0x07AAE412, 0x0409FCFE, 0x3AFA07F3, 0x0A18F320);
	r2 = D(r2, s[0][1][0], 0xC2060211, 0x060906F0, 0xD51218FD, 0x0AF2F3F1);
	r3 = D(r3, s[0][1][0], 0x04A7EAF9, 0xFBF8FA0A, 0xE91C1527, 0xF6CBFE05);
	r4 = D(r4, s[0][1][0], 0xD91612E7, 0x00090100, 0xEB07F304, 0x08ECF508);
	r5 = D(r5, s[0][1][0], 0x09F40401, 0xFD05F9F2, 0xCB2502F2, 0xF00AFD05);
	r6 = D(r6, s[0][1][0], 0x1A08F412, 0xF9F70005, 0x030413F4, 0xECFEFFFC);
	r7 = D(r7, s[0][1][0], 0x0801FEF3, 0xED080EFB, 0x07F00A0D, 0xB2100504);
	r0 = D(r0, s[0][1][1], 0xCD0C0EFB, 0xEEE10A0A, 0x170A0CD4, 0x2012F404);
	r1 = D(r1, s[0][1][1], 0x81B411E0, 0xF314F6F6, 0xAC0DDBE9, 0xF0C0FF04);
	r2 = D(r2, s[0][1][1], 0x81E1FADE, 0xF9FF0CF3, 0xAE171381, 0x0EF8FBFA);
	r3 = D(r3, s[0][1][1], 0x010CFE09, 0x0409FDF2, 0x92F918FB, 0xFE810C15);
	r4 = D(r4, s[0][1][1], 0xDFEFEC81, 0x01F9FF04, 0x08F308FB, 0xFB090C03);
	r5 = D(r5, s[0][1][1], 0xF8FCFDF5, 0x20FA0FD7, 0xB71DF8BC, 0xECECFFFA);
	r6 = D(r6, s[0][1][1], 0xFB06FDF6, 0xFFFAF702, 0xBBE91700, 0xE2EC0001);
	r7 = D(r7, s[0][1][1], 0x0C000103, 0xE816FDEC, 0xF8E9F912, 0xD90A17E2);
	r0 = D(r0, s[0][1][2], 0x130D06E8, 0xF617F902, 0xF703FA03, 0x01FAF101);
	r1 = D(r1, s[0][1][2], 0xFB81F30D, 0xFA0D0703, 0x81F71D81, 0xD6F3DDE0);
	r2 = D(r2, s[0][1][2], 0x052508E7, 0xE5E806F1, 0x02F106E1, 0xF9F6FFFB);
	r3 = D(r3, s[0][1][2], 0xFCAE0003, 0x05FEFFF5, 0xF7FC1401, 0x0F17FBFE);
	r4 = D(r4, s[0][1][2], 0x131B16F6, 0xFDFFFB01, 0xFA0BF607, 0xEF09EEF6);
	r5 = D(r5, s[0][1][2], 0xEBF3FEEA, 0x0A08F1F7, 0xF22B1DDF, 0xFD12F200);
	r6 = D(r6, s[0][1][2], 0xF203FCF4, 0xFBF4FCFD, 0x3106FFE2, 0xF504FD02);
	r7 = D(r7, s[0][1][2], 0x0602FBED, 0xDCFD1EEE, 0x05F703E6, 0x151BFAE3);
	r0 = D(r0, s[0][2][0], 0x10FCF902, 0x000B06F7, 0xF0EDF407, 0xFD120709);
	r1 = D(r1, s[0][2][0], 0xF8D1A608, 0x00E4F713, 0x31D6F398, 0x0FBC0FF3);
	r2 = D(r2, s[0][2][0], 0x9521050F, 0xF9ECFA0B, 0xC707E603, 0xF8F2F10C);
	r3 = D(r3, s[0][2][0], 0x08D6FDFC, 0x010EFA10, 0x04240100, 0x0714EC10);
	r4 = D(r4, s[0][2][0], 0x03C1811F, 0xF7FAFFFC, 0x0604F0F5, 0x06F60711);
	r5 = D(r5, s[0][2][0], 0x09FE0308, 0x07D19FF7, 0x041A0B01, 0x01FAF2FF);
	r6 = D(r6, s[0][2][0], 0x24F6E8FC, 0xF7FFFC04, 0xF8DBF807, 0xF700FAFF);
	r7 = D(r7, s[0][2][0], 0x001101FD, 0xFE10FD00, 0x36EF1BF0, 0xF9121BE0);
	r0 = D(r0, s[0][2][1], 0x8CE6070B, 0x0BDE0712, 0x0CFE05F8, 0x0711ED01);
	r1 = D(r1, s[0][2][1], 0xFCB6FFF6, 0xFFFC01FD, 0x8C0AD117, 0xEE0DFDEE);
	r2 = D(r2, s[0][2][1], 0x0D930781, 0xF6EC02EA, 0xF4FE2997, 0x07EB00F3);
	r3 = D(r3, s[0][2][1], 0x05FBEDF3, 0xF9FB0CF6, 0xFEE6B9C8, 0x02FA0E01);
	r4 = D(r4, s[0][2][1], 0xED0DFCDE, 0x0400000B, 0x040509FF, 0xFDF8F40B);
	r5 = D(r5, s[0][2][1], 0x00FB0BEA, 0x42F835B3, 0xF8F41415, 0x05F31108);
	r6 = D(r6, s[0][2][1], 0xF3F90507, 0xFCEFFDEB, 0x02E302EB, 0x0104FD05);
	r7 = D(r7, s[0][2][1], 0x0109FE00, 0xF325F1DE, 0xFCBB0DB7, 0x02F3F9F5);
	r0 = D(r0, s[0][2][2], 0x2C2C2607, 0xFAE6FC04, 0xFB01F700, 0x010DF3EA);
	r1 = D(r1, s[0][2][2], 0xF41D32EA, 0xF9F4FC02, 0x19F80FC6, 0x010CF3E8);
	r2 = D(r2, s[0][2][2], 0x170F0609, 0x0BFFFC03, 0xBB351FEE, 0x04ED010C);
	r3 = D(r3, s[0][2][2], 0x06F6F6FE, 0x08F308F8, 0x10060F15, 0xFC0FF802);
	r4 = D(r4, s[0][2][2], 0xF102F4FB, 0xFF010301, 0x08F2FD08, 0xFE0BF8FE);
	r5 = D(r5, s[0][2][2], 0x02F500F7, 0xDFE4F500, 0x1DFB22B1, 0xEFFCF217);
	r6 = D(r6, s[0][2][2], 0xF1FFE600, 0x03FD02FC, 0x111107FB, 0x060D0608);
	r7 = D(r7, s[0][2][2], 0xFF01FB02, 0xEFEFE101, 0xEF4EF8FF, 0x07070FF8);
	r0 = D(r0, s[1][0][0], 0x12101111, 0xF505FDFE, 0x01050101, 0x020907F1);
	r1 = D(r1, s[1][0][0], 0xF9FB061A, 0xFC0A030E, 0x0709FA01, 0xFD02021E);
	r2 = D(r2, s[1][0][0], 0x15080518, 0x04FBEDE8, 0x3AE1030E, 0x0705EE02);
	r3 = D(r3, s[1][0][0], 0xF9FD0001, 0x00000403, 0x15EFD208, 0xFE08D7E3);
	r4 = D(r4, s[1][0][0], 0xFC010936, 0x0701FBFE, 0x02030307, 0x0005090A);
	r5 = D(r5, s[1][0][0], 0xFC0C0607, 0x0A05F70C, 0x0F170AFB, 0xFE0A0BEE);
	r6 = D(r6, s[1][0][0], 0x071B0FE1, 0xFF0B0106, 0x1201F4FF, 0x06030204);
	r7 = D(r7, s[1][0][0], 0x05FB0202, 0xFAE414DB, 0xFC00EC10, 0x1E0AFE06);
	r0 = D(r0, s[1][0][1], 0x04FAF91E, 0xFDF906ED, 0x0504F404, 0x01F6FEE8);
	r1 = D(r1, s[1][0][1], 0x1A052728, 0xF8F706FF, 0x0013EE19, 0xF4FAF80C);
	r2 = D(r2, s[1][0][1], 0x1205BF0C, 0xF8FFFAEA, 0x0508E927, 0xFB01EDE7);
	r3 = D(r3, s[1][0][1], 0xE81001F7, 0x0D06FF0B, 0xFF0FE804, 0xC0F2FDD2);
	r4 = D(r4, s[1][0][1], 0x0B0EEA0F, 0x000BFEFB, 0xFE010201, 0x0400010D);
	r5 = D(r5, s[1][0][1], 0xF90302FA, 0x2222B70E, 0xF70E1210, 0x0A0EE30C);
	r6 = D(r6, s[1][0][1], 0x0404E10F, 0xF906FE0D, 0xF507E6EF, 0x03FF00F9);
	r7 = D(r7, s[1][0][1], 0xFBFA0400, 0x4408F431, 0xF30C1102, 0x0112E602);
	r0 = D(r0, s[1][0][2], 0x0008111A, 0xFE061802, 0xF3FFF504, 0xF5020F04);
	r1 = D(r1, s[1][0][2], 0xC5BAF3E0, 0xF905FC0B, 0x1D1F81F0, 0xEFE7FD09);
	r2 = D(r2, s[1][0][2], 0xF10526F6, 0xF90FFCFB, 0x24FDFB00, 0xE3FD0AF5);
	r3 = D(r3, s[1][0][2], 0xF40606FF, 0x0D060605, 0x000BE4FB, 0xA202F9D0);
	r4 = D(r4, s[1][0][2], 0xBF0DF80F, 0x0204FC00, 0x0103F1FA, 0xFDF80201);
	r5 = D(r5, s[1][0][2], 0x010B0D00, 0xF9FA3CF3, 0x030D0904, 0xFEF60707);
	r6 = D(r6, s[1][0][2], 0x01F71207, 0xFB02FF04, 0x08FCFB03, 0x0007E8FC);
	r7 = D(r7, s[1][0][2], 0xFD03FD03, 0x0E020027, 0xF9020803, 0xFF0DEC16);
	r0 = D(r0, s[1][1][0], 0x10FF0814, 0xFC05F5F8, 0xFF0E0605, 0xF40B04F6);
	r1 = D(r1, s[1][1][0], 0x000BED24, 0x08F10C04, 0x0F04250F, 0x0B0FEB0D);
	r2 = D(r2, s[1][1][0], 0xE50803F5, 0x07FCF908, 0xD2ECF926, 0x04FDF508);
	r3 = D(r3, s[1][1][0], 0x090AFE06, 0x04040302, 0xE3E90118, 0x13FDFC06);
	r4 = D(r4, s[1][1][0], 0xD90A05F6, 0xFF0E0402, 0xFE01F600, 0xFF0EE405);
	r5 = D(r5, s[1][1][0], 0x07F3F6FB, 0xEE0ED5E9, 0x24DCEA1A, 0xF622E3F7);
	r6 = D(r6, s[1][1][0], 0xFE2BB8FB, 0x03000000, 0x0DF5FCF7, 0xFE07F304);
	r7 = D(r7, s[1][1][0], 0x03FE04FD, 0xE9160C04, 0xE804FD0E, 0xFC0CD0FD);
	r0 = D(r0, s[1][1][1], 0xFEF5D0D8, 0xFC0D0000, 0xFD01E105, 0xF809FEF1);
	r1 = D(r1, s[1][1][1], 0x11F12235, 0x04080D01, 0x02FC0E04, 0xDC03EF0D);
	r2 = D(r2, s[1][1][1], 0x101EC517, 0xFFFBF1D0, 0xDF0D0BEE, 0xF509F803);
	r3 = D(r3, s[1][1][1], 0xE5FD0BF9, 0x0117EE03, 0xECF51A30, 0xF9E601F1);
	r4 = D(r4, s[1][1][1], 0xFD0925F0, 0x04FFF800, 0xFE0200FA, 0xF50D0EF0);
	r5 = D(r5, s[1][1][1], 0xF3FAF803, 0x03401414, 0x1B07F91D, 0x0A1BDCE3);
	r6 = D(r6, s[1][1][1], 0x0017F6E4, 0xFB0C0005, 0xFDF605F5, 0x00FFEAFC);
	r7 = D(r7, s[1][1][1], 0x03000005, 0x0EFE1B1B, 0xEB080B0C, 0xE1ED2010);
	r0 = D(r0, s[1][1][2], 0x0311FADD, 0xF2FDF8F1, 0xE1FF0100, 0xF2FFFBFC);
	r1 = D(r1, s[1][1][2], 0xBCF4271C, 0xFD050DE1, 0xF00BBB23, 0xEB0DEEF8);
	r2 = D(r2, s[1][1][2], 0xF3040ECC, 0xF302EDD1, 0xFE0BE286, 0xF3F1F700);
	r3 = D(r3, s[1][1][2], 0xF8F3FCFE, 0x01FC0EF5, 0xDBF701D8, 0xC801FFED);
	r4 = D(r4, s[1][1][2], 0xEEFCE727, 0x0304FF00, 0x00060A05, 0x08FC0B06);
	r5 = D(r5, s[1][1][2], 0xF0F4F7FA, 0xFA0A1608, 0xEB05F6F7, 0x04091410);
	r6 = D(r6, s[1][1][2], 0xFE042111, 0xF902F602, 0xF521B2EA, 0xF80601F9);
	r7 = D(r7, s[1][1][2], 0x07000601, 0xFC02C80C, 0xE408ECFC, 0xF7FFD8F6);
	r0 = D(r0, s[1][2][0], 0x1000B402, 0xFF0702FA, 0xFB04E404, 0xFFFCF300);
	r1 = D(r1, s[1][2][0], 0xF6F89DF4, 0xF507F307, 0x1EF7EF0C, 0x01FDD00E);
	r2 = D(r2, s[1][2][0], 0x0504EA1A, 0xF8FB0701, 0xF9FCD917, 0xFDF40102);
	r3 = D(r3, s[1][2][0], 0xF0FEEEFD, 0xFDFB0116, 0x1FE6F60E, 0x00F1FB03);
	r4 = D(r4, s[1][2][0], 0xED013015, 0x0409FAFF, 0xFE04FE08, 0x0707EDFA);
	r5 = D(r5, s[1][2][0], 0x01F70500, 0x030DBB01, 0xF1D30EED, 0xFB11F8FC);
	r6 = D(r6, s[1][2][0], 0x0010FAFA, 0xF6F90004, 0x04F7FFFB, 0x0902F5FC);
	r7 = D(r7, s[1][2][0], 0x0603FA08, 0x07E7E902, 0xFC05E4F2, 0x0C09F6D2);
	r0 = D(r0, s[1][2][1], 0xF9025D12, 0x0209F9ED, 0xF119E3FB, 0x0D05FF03);
	r1 = D(r1, s[1][2][1], 0x09F7EC57, 0xFC0405FE, 0xEAFAA7DA, 0xFADDE4EF);
	r2 = D(r2, s[1][2][1], 0x001BED19, 0x0700D9FE, 0x1314D803, 0xF602F403);
	r3 = D(r3, s[1][2][1], 0xFEE9FB03, 0x080DEF01, 0x2029F407, 0x02070A01);
	r4 = D(r4, s[1][2][1], 0xFF21E910, 0x04040401, 0xFA0004F9, 0xF3FB0500);
	r5 = D(r5, s[1][2][1], 0x080AEDFB, 0x0E42CC23, 0xE603DEE4, 0x070AF6D7);
	r6 = D(r6, s[1][2][1], 0x00FFFEDD, 0x020C0A08, 0xFF03E307, 0x0209F4FD);
	r7 = D(r7, s[1][2][1], 0xFE0AFFFA, 0x3DF5DA07, 0xF5E109D4, 0xFAF6F6E8);
	r0 = D(r0, s[1][2][2], 0x0D15C9A0, 0x010BEC00, 0xFA02010F, 0xDDF70205);
	r1 = D(r1, s[1][2][2], 0xF8EB23DE, 0x01050AFE, 0x1A251205, 0xF000240C);
	r2 = D(r2, s[1][2][2], 0x0EF81BF4, 0x02FEE8F6, 0xEDEA2718, 0xF0FFDEF6);
	r3 = D(r3, s[1][2][2], 0x0400EF04, 0xFEF601F5, 0x06110613, 0xF408F7F6);
	r4 = D(r4, s[1][2][2], 0x0703FCFD, 0x010505FC, 0x0600F9FE, 0x02F9F604);
	r5 = D(r5, s[1][2][2], 0xFD080507, 0xF4025AF7, 0xF10A0681, 0xF7F21107);
	r6 = D(r6, s[1][2][2], 0x04FB1917, 0xF7020802, 0x0FFCE2EC, 0xFEF505F8);
	r7 = D(r7, s[1][2][2], 0xFC0200FC, 0xF30CF421, 0xF500F0F8, 0x0E080AF0);
	s[0][0][0] = G[8][xy.y+0][xy.x+0]; s[0][0][1] = G[8][xy.y+0][xy.x+1];
	s[0][0][2] = G[8][xy.y+0][xy.x+2]; s[0][1][0] = G[8][xy.y+1][xy.x+0];
	s[0][1][1] = G[8][xy.y+1][xy.x+1]; s[0][1][2] = G[8][xy.y+1][xy.x+2];
	s[0][2][0] = G[8][xy.y+2][xy.x+0]; s[0][2][1] = G[8][xy.y+2][xy.x+1];
	s[0][2][2] = G[8][xy.y+2][xy.x+2]; s[1][0][0] = G[9][xy.y+0][xy.x+0];
	s[1][0][1] = G[9][xy.y+0][xy.x+1]; s[1][0][2] = G[9][xy.y+0][xy.x+2];
	s[1][1][0] = G[9][xy.y+1][xy.x+0]; s[1][1][1] = G[9][xy.y+1][xy.x+1];
	s[1][1][2] = G[9][xy.y+1][xy.x+2]; s[1][2][0] = G[9][xy.y+2][xy.x+0];
	s[1][2][1] = G[9][xy.y+2][xy.x+1]; s[1][2][2] = G[9][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xEBEAE4FE, 0x01ED0CFC, 0x04F40E06, 0xFBF70703);
	r1 = D(r1, s[0][0][0], 0xACE6F600, 0xFCFD01FA, 0x04EF05EB, 0x0D0A06CD);
	r2 = D(r2, s[0][0][0], 0x0BF316EF, 0xF7E90E18, 0xF1219AF1, 0xFBF30500);
	r3 = D(r3, s[0][0][0], 0x0A06EC0A, 0x09F6F8FB, 0xEE18ACEE, 0x0103FA13);
	r4 = D(r4, s[0][0][0], 0xF7FCEAE5, 0xFDF7FD01, 0x06F7F407, 0xF3F2DD08);
	r5 = D(r5, s[0][0][0], 0xFC000805, 0x18ACF3F7, 0xE819050C, 0x03F5E8FB);
	r6 = D(r6, s[0][0][0], 0x01EBEC07, 0xFFF9F806, 0xF905091E, 0xFBF1F603);
	r7 = D(r7, s[0][0][0], 0xFE08F3FF, 0x26F00BF9, 0x06FBEE16, 0x0CD39015);
	r0 = D(r0, s[0][0][1], 0x0418F527, 0xF8F3FAF6, 0xF80E01FF, 0x00F7E708);
	r1 = D(r1, s[0][0][1], 0xF007ACF0, 0x02DDF0FE, 0xDEF69981, 0xFAEBDAB2);
	r2 = D(r2, s[0][0][1], 0xDCE9ADF8, 0xF9E2FB10, 0x0106CBDF, 0xF6FC01F6);
	r3 = D(r3, s[0][0][1], 0xFD0C0205, 0xFA0AEBFE, 0xF3EFC1FE, 0x05DEDF0D);
	r4 = D(r4, s[0][0][1], 0xF928C50C, 0xFA06F8F8, 0xFA0D0FFB, 0xFFF60FF1);
	r5 = D(r5, s[0][0][1], 0x08EEEDF6, 0x0B13F1D4, 0xEEF42C11, 0x04FF01EE);
	r6 = D(r6, s[0][0][1], 0x0501F8E4, 0x0900FFF1, 0xF7FDF605, 0xF7E7FAFA);
	r7 = D(r7, s[0][0][1], 0xFAF70503, 0xE4EAE724, 0x11E2FA12, 0x100BE603);
	r0 = D(r0, s[0][0][2], 0xC0F7A8EC, 0xF00101F9, 0x02F2F0FC, 0xF6F4F904);
	r1 = D(r1, s[0][0][2], 0xCD900613, 0xFEF900F9, 0x8108950B, 0x12F01A23);
	r2 = D(r2, s[0][0][2], 0x072601ED, 0xE8F9F0F6, 0x12D9B2FE, 0xF20203FC);
	r3 = D(r3, s[0][0][2], 0xFCF70DF6, 0xF90012F9, 0xFDFBC113, 0x0408100A);
	r4 = D(r4, s[0][0][2], 0xF60421F2, 0xF6F7FD00, 0xFA04F805, 0xF41E020E);
	r5 = D(r5, s[0][0][2], 0x05FF06FA, 0xEB130623, 0xD4EAFD02, 0xF9050B02);
	r6 = D(r6, s[0][0][2], 0x030C0709, 0x08FCFDF6, 0x21F20F18, 0xF4FDF3FB);
	r7 = D(r7, s[0][0][2], 0xFE00FE04, 0x04E3C30D, 0xFA080F08, 0x30F11011);
	r0 = D(r0, s[0][1][0], 0x210B1F07, 0x030AF9E5, 0xFDEFEE0A, 0x05100DF6);
	r1 = D(r1, s[0][1][0], 0xE2F30918, 0x0603FE14, 0xE4C9E103, 0xFFF681E1);
	r2 = D(r2, s[0][1][0], 0xA3B5B01B, 0x07F8EFFE, 0xA313F604, 0x01F2EBF7);
	r3 = D(r3, s[0][1][0], 0x0EFD0309, 0x04FBFEFF, 0xC4811221, 0xF9FEF8FA);
	r4 = D(r4, s[0][1][0], 0xE3131933, 0xFFFC02FD, 0x051700FF, 0xFC07F70A);
	r5 = D(r5, s[0][1][0], 0xEBE70812, 0xC6D9DCF3, 0x0C18211A, 0xF7F0D8F6);
	r6 = D(r6, s[0][1][0], 0xDCE5EEE5, 0x040401FF, 0xD9E4F110, 0xF4FAF9F3);
	r7 = D(r7, s[0][1][0], 0xFEF90004, 0x2707F5E0, 0xFB02030E, 0xEEC2DF13);
	r0 = D(r0, s[0][1][1], 0x8207DCED, 0xF10322E5, 0xF6FCD4E3, 0xF502FFE8);
	r1 = D(r1, s[0][1][1], 0x81FC0813, 0x0205F805, 0xFBFCEF81, 0x00FFFEF8);
	r2 = D(r2, s[0][1][1], 0xABD0C6F9, 0xC7E0F8F4, 0xF5131A05, 0x0AFAE7E9);
	r3 = D(r3, s[0][1][1], 0xF80AEB13, 0xE306F4EB, 0x059DE309, 0xE608100C);
	r4 = D(r4, s[0][1][1], 0xA5EE81FE, 0xFEFBF7FF, 0xFAFDFA04, 0x0806F402);
	r5 = D(r5, s[0][1][1], 0xEE0203FF, 0x92EE81D7, 0xFCBAD117, 0xD0FAF108);
	r6 = D(r6, s[0][1][1], 0x18FFDCF6, 0xF9F60404, 0xE8E8FF09, 0xF9F1EAF9);
	r7 = D(r7, s[0][1][1], 0xFDF801F8, 0xCAF9A02B, 0xE301270B, 0xEBC5E806);
	r0 = D(r0, s[0][1][2], 0xD6F4F21C, 0x060705F9, 0xEBEE0109, 0x0E140601);
	r1 = D(r1, s[0][1][2], 0xDCD5E1DE, 0x09FFFE09, 0xA2D6BDF2, 0x11ECFBFE);
	r2 = D(r2, s[0][1][2], 0x91AD04FA, 0xF4FC0B1D, 0xD8E0E91F, 0xF3F003E4);
	r3 = D(r3, s[0][1][2], 0x01FF08F6, 0xEF02EAFB, 0xC7B81C2C, 0x1113051B);
	r4 = D(r4, s[0][1][2], 0xEDF10CB7, 0xFAFDFCF9, 0xEF06F8FE, 0x000400FB);
	r5 = D(r5, s[0][1][2], 0xF0E40000, 0xAEDD1111, 0x1B1CC004, 0x14F90BF7);
	r6 = D(r6, s[0][1][2], 0xF5031AFA, 0xFEFFF2FF, 0xE101F00F, 0xF403FC13);
	r7 = D(r7, s[0][1][2], 0xFF04030D, 0xFCF48102, 0x0402FC09, 0xB703F626);
	r0 = D(r0, s[0][2][0], 0xF8090416, 0xF5F50FF3, 0xE6EEF100, 0xFC04F206);
	r1 = D(r1, s[0][2][0], 0x1E0B0E20, 0x0706F4F9, 0xCE253704, 0xFD0FE2E7);
	r2 = D(r2, s[0][2][0], 0xE5D08BFF, 0xF607FEF4, 0xFE22D5F4, 0xEFFF090E);
	r3 = D(r3, s[0][2][0], 0x0EFE07FE, 0xEFF810F8, 0x151B18F4, 0x00F0FA01);
	r4 = D(r4, s[0][2][0], 0xCBE826B7, 0xFBFB0501, 0xFE00F20A, 0xFCFCEFFC);
	r5 = D(r5, s[0][2][0], 0xE3FF0DFC, 0xFCC1EDF0, 0xC5BCDE1E, 0xE9D9ED02);
	r6 = D(r6, s[0][2][0], 0x9DDBE5F1, 0x0AF8FC00, 0x021417FC, 0x03011006);
	r7 = D(r7, s[0][2][0], 0xFEFF060B, 0xF9F127CF, 0x170A0C19, 0x08F9C724);
	r0 = D(r0, s[0][2][1], 0xF7F90122, 0xF901CE06, 0xF5F8EEEF, 0x05F8FE11);
	r1 = D(r1, s[0][2][1], 0x9107F3F6, 0x050316FE, 0xD4C9C381, 0x0CFCD9EE);
	r2 = D(r2, s[0][2][1], 0x9BB481F2, 0x0FFA14FA, 0x15E4B11B, 0xEFFEFC00);
	r3 = D(r3, s[0][2][1], 0x0B0E0B0B, 0xF8FA06FF, 0x0516EB05, 0x01FD04FC);
	r4 = D(r4, s[0][2][1], 0xFFF9EDF2, 0xFA01FFFE, 0x07F6FDF8, 0xF90BFCF4);
	r5 = D(r5, s[0][2][1], 0xFAEBF803, 0xA9EF9C05, 0xF1CDDE1D, 0xFB06F1E7);
	r6 = D(r6, s[0][2][1], 0xF00FF8F3, 0x02F5FEF1, 0xF1F2D914, 0x0403E502);
	r7 = D(r7, s[0][2][1], 0xFEF7FA06, 0xEB082820, 0xF5FE1BFB, 0x0719D40D);
	r0 = D(r0, s[0][2][2], 0x0004D3DF, 0x06F7EF00, 0xFEF4FA00, 0x04010810);
	r1 = D(r1, s[0][2][2], 0xDEF61224, 0x04180107, 0xC5008142, 0x09ECDFE2);
	r2 = D(r2, s[0][2][2], 0xC2D813DD, 0xF6E3EE0C, 0xF22BA61F, 0x03FCF503);
	r3 = D(r3, s[0][2][2], 0x0C00D7FF, 0xDCEEE6F7, 0x0A409906, 0x030206F7);
	r4 = D(r4, s[0][2][2], 0x030F27D5, 0xFB00F9FD, 0xFEFFE0FE, 0x0201F60B);
	r5 = D(r5, s[0][2][2], 0xF700040D, 0xB408B913, 0xD5E91622, 0x0505FB08);
	r6 = D(r6, s[0][2][2], 0x0803F3FD, 0x01F20C09, 0xDB010716, 0xFE0004FD);
	r7 = D(r7, s[0][2][2], 0xF705F700, 0x819D813A, 0xEE13DA17, 0x100B0A1A);
	r0 = D(r0, s[1][0][0], 0xF90F0DF8, 0x0703FC00, 0x0300FFFE, 0x06FB0003);
	r1 = D(r1, s[1][0][0], 0xFDC8F6F3, 0x030A0106, 0xFA05FF03, 0x00FAFBEE);
	r2 = D(r2, s[1][0][0], 0x05F00307, 0xFCEA0DF3, 0x181100FA, 0xFDF906FB);
	r3 = D(r3, s[1][0][0], 0x0406EFFE, 0xFE0AFD01, 0xF7E21401, 0x0603EF06);
	r4 = D(r4, s[1][0][0], 0xD9F50BFA, 0xFFFE0603, 0x0502FD08, 0xFDFDFF04);
	r5 = D(r5, s[1][0][0], 0xFEFA0EFD, 0x03EE0B05, 0x1D10F9E5, 0x040001F5);
	r6 = D(r6, s[1][0][0], 0x01F7F2F3, 0x02070302, 0x000210F4, 0x00FC0C03);
	r7 = D(r7, s[1][0][0], 0x00FC0100, 0x0D0EF600, 0x01FF0518, 0xFD0409FC);
	r0 = D(r0, s[1][0][1], 0xF4EBF500, 0x0D07FE00, 0xFCF70D05, 0x03F8050C);
	r1 = D(r1, s[1][0][1], 0x08FB00FC, 0x01DC040A, 0xF0EEEC02, 0xF8FFD305);
	r2 = D(r2, s[1][0][1], 0x16030C04, 0xF6F615FF, 0x0BF4E2FF, 0xF9FDFDF4);
	r3 = D(r3, s[1][0][1], 0x0102EC09, 0x07F70508, 0x00D80C05, 0x0A070606);
	r4 = D(r4, s[1][0][1], 0xF0E3E91A, 0xF8FC0409, 0x04FA050E, 0xFBFA03FA);
	r5 = D(r5, s[1][0][1], 0x030A0509, 0x12D91EFF, 0x01EEECFC, 0xF50109FD);
	r6 = D(r6, s[1][0][1], 0xEC0504FA, 0xFFFF0702, 0xFFEC0F08, 0x00FE12FE);
	r7 = D(r7, s[1][0][1], 0x00FEFD03, 0xFFF807FC, 0xFC090603, 0x02000805);
	r0 = D(r0, s[1][0][2], 0xFBFA0903, 0x0309F004, 0xFF07FD08, 0x0400F210);
	r1 = D(r1, s[1][0][2], 0x280EE00C, 0xFEFA0904, 0xA9F735F1, 0x0E01EE10);
	r2 = D(r2, s[1][0][2], 0x0110FC00, 0xFEFE08F9, 0xD11D0D0D, 0xFDFD0105);
	r3 = D(r3, s[1][0][2], 0x0606FDF3, 0xFE040B04, 0xF01F10FA, 0x07080309);
	r4 = D(r4, s[1][0][2], 0xF2070CF8, 0xFE00FF00, 0xF905F8FE, 0xFF010406);
	r5 = D(r5, s[1][0][2], 0x07FDFD02, 0x0511EA09, 0x121615EF, 0x030CF302);
	r6 = D(r6, s[1][0][2], 0x0605FE08, 0x04FDFE03, 0xF909F2FE, 0x01040901);
	r7 = D(r7, s[1][0][2], 0xFBFF0702, 0xEE0902FB, 0xF909FC16, 0xF3FBF5FE);
	r0 = D(r0, s[1][1][0], 0xD604F6EE, 0x0B0C020A, 0xFC01F3FC, 0xF7F90B06);
	r1 = D(r1, s[1][1][0], 0xDAF4F9F3, 0xF9F6FDFD, 0xF1071803, 0xF00CFE19);
	r2 = D(r2, s[1][1][0], 0xD6001103, 0xE400FA06, 0xE5F20F09, 0xF90000FE);
	r3 = D(r3, s[1][1][0], 0xFD0AFBFE, 0x0408FB01, 0x08D10B04, 0xFDFA0308);
	r4 = D(r4, s[1][1][0], 0xDD11F5F9, 0xFFF801FD, 0x010AFCFF, 0x00FBFDF0);
	r5 = D(r5, s[1][1][0], 0xFDF80BF7, 0xFB1F13E3, 0x12E70204, 0xF4E8F5F9);
	r6 = D(r6, s[1][1][0], 0xF3ECEEFB, 0x01FCFA03, 0xFDED0BF5, 0xFFFCFEFC);
	r7 = D(r7, s[1][1][0], 0xFCFEFE00, 0x010FF9FF, 0x21E009F1, 0x04FA090C);
	r0 = D(r0, s[1][1][1], 0xD20904ED, 0xFE02F8FC, 0xF6F11006, 0x060A12EA);
	r1 = D(r1, s[1][1][1], 0xCAF30BFE, 0xFAFBF5F5, 0xEBDE1F06, 0xFC01F402);
	r2 = D(r2, s[1][1][1], 0xE6CB15F8, 0xECE611FB, 0x110211F9, 0x00F4FE08);
	r3 = D(r3, s[1][1][1], 0x05F6EE0C, 0xE0ED08F4, 0x00020D20, 0xFBF3F608);
	r4 = D(r4, s[1][1][1], 0xF5E016EC, 0xF6EC0208, 0xFEF50A08, 0xF8FF0703);
	r5 = D(r5, s[1][1][1], 0x01E80F09, 0xBFE10FFD, 0xFEB80CF9, 0xF2FB0EFC);
	r6 = D(r6, s[1][1][1], 0xCEF911FE, 0x04FAF30A, 0xF3DD0BF8, 0xF6F80C06);
	r7 = D(r7, s[1][1][1], 0x00FAF7F9, 0xEEEB02E1, 0x0B1CFAE6, 0x04111516);
	r0 = D(r0, s[1][1][2], 0xE5E7190A, 0xEE0C0501, 0xF602F8FE, 0x0103FAFE);
	r1 = D(r1, s[1][1][2], 0x02F8BEFB, 0xF802FB04, 0xE3E10EFF, 0x0A0F05FF);
	r2 = D(r2, s[1][1][2], 0xE9080C15, 0xF2F61802, 0xFD071A1F, 0xEFFCF705);
	r3 = D(r3, s[1][1][2], 0x06EDF50A, 0xF105120B, 0xFB0C000B, 0x04010CFD);
	r4 = D(r4, s[1][1][2], 0xCF0AE21B, 0xF5FF0AFD, 0xF1FC0A03, 0xFD040806);
	r5 = D(r5, s[1][1][2], 0x02090AFE, 0xDD1405F1, 0x191F19F5, 0xEDFEF3FF);
	r6 = D(r6, s[1][1][2], 0xF602FCFA, 0x0206050C, 0xE9CE1700, 0xEE0302FF);
	r7 = D(r7, s[1][1][2], 0xF9FA080B, 0x9309F90E, 0x172615FD, 0x07F90E08);
	r0 = D(r0, s[1][2][0], 0xEA06F2F9, 0xF4EDF3FD, 0x0902FA01, 0x0204FC02);
	r1 = D(r1, s[1][2][0], 0x0EFB0D0A, 0x030701FD, 0xF4F7E50E, 0xF5080F0D);
	r2 = D(r2, s[1][2][0], 0x08F81609, 0xFC050200, 0x2CD414FC, 0xF807FC01);
	r3 = D(r3, s[1][2][0], 0xFB10F6FD, 0xFDFCFC05, 0xF213F6F9, 0xFAEF1104);
	r4 = D(r4, s[1][2][0], 0x24031A02, 0xFBFC0308, 0xFF050A04, 0xF101FD04);
	r5 = D(r5, s[1][2][0], 0xFA130601, 0x06E411FF, 0xF3F60903, 0x00F90F08);
	r6 = D(r6, s[1][2][0], 0xF500F708, 0x010002FC, 0xF20DF607, 0xF1FAFE04);
	r7 = D(r7, s[1][2][0], 0xFE000104, 0x0B0EFBFA, 0x02F903FE, 0xFDD202FC);
	r0 = D(r0, s[1][2][1], 0xE20DF703, 0xF404FBFA, 0xE1F4FD08, 0xF7F6F8FE);
	r1 = D(r1, s[1][2][1], 0x810CEB07, 0xF70DFC07, 0x01F1F90A, 0xFFFFF801);
	r2 = D(r2, s[1][2][1], 0xF0E513FC, 0xEE0C02FF, 0x098D1BF9, 0xF50C02FE);
	r3 = D(r3, s[1][2][1], 0xFA0FEB02, 0xE8FFFB02, 0xF4F612FF, 0xF4F1F6FE);
	r4 = D(r4, s[1][2][1], 0xD906FA12, 0xFAFD0202, 0xFB06F900, 0xF7060702);
	r5 = D(r5, s[1][2][1], 0xEF04F90B, 0xF7D21009, 0x09FF1FFB, 0xEF0BFB07);
	r6 = D(r6, s[1][2][1], 0xDB060108, 0x0300010E, 0xE1FC16FB, 0xF80A0408);
	r7 = D(r7, s[1][2][1], 0xFA01FC04, 0xCEE10D0C, 0xDA2101EE, 0x11EB0215);
	r0 = D(r0, s[1][2][2], 0xD6E24AFD, 0xF80AFF03, 0xF90D0001, 0x04000304);
	r1 = D(r1, s[1][2][2], 0x13E012FF, 0xFE040200, 0xBE0917F5, 0xF50AED0B);
	r2 = D(r2, s[1][2][2], 0xDCFF1208, 0xE6030906, 0xF6291800, 0xECFC0B09);
	r3 = D(r3, s[1][2][2], 0x0713EF05, 0xEA040501, 0xF013F20B, 0x0901DFF9);
	r4 = D(r4, s[1][2][2], 0x0EF421FB, 0xF9FF0306, 0xDD01FE08, 0xF7F60C09);
	r5 = D(r5, s[1][2][2], 0xEAF61405, 0xFE0DFAFC, 0xFFF51100, 0xF8FFFC06);
	r6 = D(r6, s[1][2][2], 0x0505FB03, 0xFA011203, 0xD3020E06, 0xF80006FE);
	r7 = D(r7, s[1][2][2], 0xF8FDFE05, 0xBD03220E, 0xD80E14F3, 0xD2F80CF5);
	s[0][0][0] = G[10][xy.y+0][xy.x+0]; s[0][0][1] = G[10][xy.y+0][xy.x+1];
	s[0][0][2] = G[10][xy.y+0][xy.x+2]; s[0][1][0] = G[10][xy.y+1][xy.x+0];
	s[0][1][1] = G[10][xy.y+1][xy.x+1]; s[0][1][2] = G[10][xy.y+1][xy.x+2];
	s[0][2][0] = G[10][xy.y+2][xy.x+0]; s[0][2][1] = G[10][xy.y+2][xy.x+1];
	s[0][2][2] = G[10][xy.y+2][xy.x+2]; s[1][0][0] = G[11][xy.y+0][xy.x+0];
	s[1][0][1] = G[11][xy.y+0][xy.x+1]; s[1][0][2] = G[11][xy.y+0][xy.x+2];
	s[1][1][0] = G[11][xy.y+1][xy.x+0]; s[1][1][1] = G[11][xy.y+1][xy.x+1];
	s[1][1][2] = G[11][xy.y+1][xy.x+2]; s[1][2][0] = G[11][xy.y+2][xy.x+0];
	s[1][2][1] = G[11][xy.y+2][xy.x+1]; s[1][2][2] = G[11][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x0104F701, 0x00ED03FF, 0x0009FAFA, 0x02050A0C);
	r1 = D(r1, s[0][0][0], 0x03FF0AF1, 0xE5F3F8FD, 0x01FBF2E9, 0x08F8F3EC);
	r2 = D(r2, s[0][0][0], 0x00151F00, 0xEFFFFF0E, 0x150EFEF4, 0xFBF10108);
	r3 = D(r3, s[0][0][0], 0x0E040707, 0xFD02FCFD, 0x06042B1C, 0x13031002);
	r4 = D(r4, s[0][0][0], 0xEDF104F7, 0xFCFD04FB, 0xF203FEFE, 0x04F807F0);
	r5 = D(r5, s[0][0][0], 0x03FAFD00, 0x081014E9, 0xF20EF80D, 0x08FE07F9);
	r6 = D(r6, s[0][0][0], 0x14FBEEF1, 0xF5FAF3F8, 0xF301ED01, 0xF9FFFCF4);
	r7 = D(r7, s[0][0][0], 0xF0FC00FF, 0xF10CFFFD, 0x0605F3F2, 0x1017FC20);
	r0 = D(r0, s[0][0][1], 0xFA05DB00, 0x08FD1B0B, 0x04F2FD09, 0x060001FD);
	r1 = D(r1, s[0][0][1], 0x02F11805, 0x120BEFF9, 0xFB221306, 0x15F70E05);
	r2 = D(r2, s[0][0][1], 0xFB18F915, 0xFE07DFEE, 0x1C33002C, 0x03FFFAEC);
	r3 = D(r3, s[0][0][1], 0xFF20FDFE, 0x13040A03, 0x1E12B500, 0x0DFA2505);
	r4 = D(r4, s[0][0][1], 0x012303FC, 0xFEFFF300, 0x11FDFA07, 0xF6FA0710);
	r5 = D(r5, s[0][0][1], 0x110007FB, 0x00F5180D, 0xF0F4F8F7, 0xFEF8FB0D);
	r6 = D(r6, s[0][0][1], 0xF4EF0301, 0x04FE01FF, 0x0705F80F, 0xFEFDE6E9);
	r7 = D(r7, s[0][0][1], 0x04F7F7F3, 0x2AD7FD03, 0x1D060B03, 0x2EFEC903);
	r0 = D(r0, s[0][0][2], 0xFEE9E0F7, 0xFA0EF901, 0xFA05FAFD, 0xFA02FCF9);
	r1 = D(r1, s[0][0][2], 0xFC281311, 0xFEFFF205, 0xFCFED813, 0x0408EEFD);
	r2 = D(r2, s[0][0][2], 0xFA080EEF, 0x04F9D912, 0x0FEFFC0E, 0xF2F5FDE8);
	r3 = D(r3, s[0][0][2], 0x08FC3810, 0x02F2F2F9, 0x11EB110B, 0xFC0701FB);
	r4 = D(r4, s[0][0][2], 0xF40FDE16, 0xF9F9FC01, 0xFD00FDFA, 0xF5EB01F1);
	r5 = D(r5, s[0][0][2], 0x05FC0107, 0xF50EF6FE, 0xF613FE03, 0x08010CEF);
	r6 = D(r6, s[0][0][2], 0x01FCF5F8, 0xF7F3FA01, 0x0902E2F8, 0xFCFDFE00);
	r7 = D(r7, s[0][0][2], 0xF7010501, 0x1937F0F9, 0x16EBF2F9, 0x0901FC14);
	r0 = D(r0, s[0][1][0], 0x04E6FE00, 0xF00609FE, 0x0C00E6EA, 0x0B02E612);
	r1 = D(r1, s[0][1][0], 0x0806F8F6, 0x05FB040E, 0xF4FAF3FF, 0xEE04E4EF);
	r2 = D(r2, s[0][1][0], 0xDB05E4D8, 0x0AF502FD, 0x1FDDD3FE, 0x00FBFBF4);
	r3 = D(r3, s[0][1][0], 0x0800010A, 0x03FBF9FB, 0xDBE80005, 0xFC0704F1);
	r4 = D(r4, s[0][1][0], 0x0E13DDD2, 0xF9FF01FC, 0xF5FDFFF5, 0x0BFD0AF8);
	r5 = D(r5, s[0][1][0], 0x01F10C14, 0x0BEDFF06, 0x32F6E11F, 0x110AF4FC);
	r6 = D(r6, s[0][1][0], 0x09FAEEE7, 0xF402FEFF, 0xFF050303, 0xF60507F4);
	r7 = D(r7, s[0][1][0], 0xF4F4FF07, 0xFD1404F9, 0x2400E201, 0xE20DE8F9);
	r0 = D(r0, s[0][1][1], 0xF3F70400, 0x0106FBEA, 0x0003A907, 0x07071106);
	r1 = D(r1, s[0][1][1], 0xFFF2EAF4, 0xF1FF0B07, 0xFCF0D0F1, 0x0815EE08);
	r2 = D(r2, s[0][1][1], 0xFBEACC0B, 0x01FD0C04, 0xD417D2FF, 0x0CFDFD18);
	r3 = D(r3, s[0][1][1], 0x0305FBFA, 0xFEFF10F9, 0xDDB0EDFE, 0x120D0F06);
	r4 = D(r4, s[0][1][1], 0xEFB4EF05, 0x01F9FDF8, 0x13020101, 0x020AFA0A);
	r5 = D(r5, s[0][1][1], 0x09FFF101, 0xFFF481FF, 0x3B08CEF0, 0xFAFDDA11);
	r6 = D(r6, s[0][1][1], 0xEA04080B, 0x04F8FB05, 0x0FD7E905, 0x030AF610);
	r7 = D(r7, s[0][1][1], 0x10F9FCF7, 0x43F90EF8, 0xE608CEFB, 0xFAF6E902);
	r0 = D(r0, s[0][1][2], 0xF9F80FFF, 0xFB04F606, 0xFB16FD02, 0xFBFFEFFE);
	r1 = D(r1, s[0][1][2], 0x0B2619FC, 0x00FD0102, 0x03B01CED, 0xF302E0F5);
	r2 = D(r2, s[0][1][2], 0x060304FC, 0xFE0301FB, 0x082F1BFB, 0x00F804F6);
	r3 = D(r3, s[0][1][2], 0x0D0AF2EF, 0xFD06F9F2, 0x13000617, 0x0708EA0B);
	r4 = D(r4, s[0][1][2], 0xEF2B03E8, 0xFEF804FF, 0xF5F90109, 0xFCF8FFF1);
	r5 = D(r5, s[0][1][2], 0x07020DF3, 0xEF31EE0C, 0x2E158107, 0x0FF507FB);
	r6 = D(r6, s[0][1][2], 0x080CFA09, 0x01FB02F6, 0xFBFD34FF, 0xFAFF0DF6);
	r7 = D(r7, s[0][1][2], 0xF6FEFD03, 0x13F8B9E1, 0xF1F4DFFA, 0xE70AF20F);
	r0 = D(r0, s[0][2][0], 0x06E6FD00, 0xFB10FF01, 0x010307FA, 0x06FFF607);
	r1 = D(r1, s[0][2][0], 0x0AED0908, 0x0FFEF900, 0xFADE100C, 0x01ED1412);
	r2 = D(r2, s[0][2][0], 0x082608D4, 0x06FB0BF9, 0xEAFC0A2F, 0xFFFFF6F7);
	r3 = D(r3, s[0][2][0], 0x07000004, 0xFEFCF4F7, 0x19CF0801, 0xFD050DF4);
	r4 = D(r4, s[0][2][0], 0xFC28EA03, 0xF7FE0100, 0xFF04F7FF, 0x0705000D);
	r5 = D(r5, s[0][2][0], 0x08F402F9, 0x00131100, 0xFE0B0104, 0x0C100606);
	r6 = D(r6, s[0][2][0], 0x001A0A01, 0xF605F505, 0x11EE03F9, 0x02FAFDF9);
	r7 = D(r7, s[0][2][0], 0xFEF6FBF8, 0xFD1D07FC, 0xD706E915, 0x0FF71508);
	r0 = D(r0, s[0][2][1], 0x081D10FC, 0xF705F300, 0xF6FA0D0E, 0x09F8FCF5);
	r1 = D(r1, s[0][2][1], 0x04E90501, 0x0805FDFE, 0x0E16F900, 0x0A12D407);
	r2 = D(r2, s[0][2][1], 0x08F60DF4, 0x01FA06FB, 0x3923FCF2, 0x06ECFCEF);
	r3 = D(r3, s[0][2][1], 0x0707FE00, 0x00FF0F08, 0x22240BF6, 0xF703FBF4);
	r4 = D(r4, s[0][2][1], 0xEB0402E8, 0x02FC06FF, 0x05FD0001, 0xFAFDF9FB);
	r5 = D(r5, s[0][2][1], 0x02F5070B, 0x03062FF6, 0xF61A100E, 0x0906FE09);
	r6 = D(r6, s[0][2][1], 0xF6FD06F8, 0xFC05080C, 0xFD011D04, 0xFFFB03FA);
	r7 = D(r7, s[0][2][1], 0x06FEFB04, 0xF9ECF5F6, 0x19040506, 0x27EE1806);
	r0 = D(r0, s[0][2][2], 0x0204F915, 0xFDEFFEFC, 0x0DFD04FB, 0x0303F202);
	r1 = D(r1, s[0][2][2], 0x161323DA, 0x0304FBFC, 0xFDF40A09, 0x0116E8F9);
	r2 = D(r2, s[0][2][2], 0x05FC0BEF, 0x05FE0604, 0x17AF0B05, 0xFD0106FD);
	r3 = D(r3, s[0][2][2], 0x010CFF01, 0xFD03F7FD, 0x0AFBF900, 0x061602FD);
	r4 = D(r4, s[0][2][2], 0xF8EA02FD, 0x00FC03FE, 0x0203FC07, 0xFC03F6FA);
	r5 = D(r5, s[0][2][2], 0x0109FF0F, 0xF4EAFA02, 0x26FB09F1, 0xFC0703F3);
	r6 = D(r6, s[0][2][2], 0xFEFDFAFD, 0xFD05FD07, 0x07FB0B04, 0xF9FEFBF7);
	r7 = D(r7, s[0][2][2], 0xFDF70C03, 0x1CF8F2FC, 0xFB0715F8, 0x06F106F8);
	r0 = D(r0, s[1][0][0], 0x0BF204FC, 0x04080AF2, 0xFC02050B, 0xFF0DF3EA);
	r1 = D(r1, s[1][0][0], 0x070202F2, 0x040002F1, 0xB6103009, 0x00FAF105);
	r2 = D(r2, s[1][0][0], 0x23F2FFEB, 0xFEFBF6FE, 0x0AEF03FF, 0x04FCFE03);
	r3 = D(r3, s[1][0][0], 0xED02F1F5, 0x05FE06F4, 0x0BEBFDF6, 0xECFAEF15);
	r4 = D(r4, s[1][0][0], 0x2711CE04, 0xFCFC0307, 0xFFFD03FB, 0x07FB0602);
	r5 = D(r5, s[1][0][0], 0x06FFFC06, 0xE4EE0413, 0x0A10050E, 0xFBFC05F5);
	r6 = D(r6, s[1][0][0], 0xF8F60AFD, 0x00020006, 0xFBEAF6F7, 0x020203FC);
	r7 = D(r7, s[1][0][0], 0x000003FD, 0x090BE9EA, 0x07FE000A, 0xF4021013);
	r0 = D(r0, s[1][0][1], 0xFD0ADB1C, 0x03F4F9FD, 0xFBFDFC0A, 0xEE04FBE7);
	r1 = D(r1, s[1][0][1], 0xE409101D, 0xFCF00301, 0x25E80E10, 0x0E17FB1E);
	r2 = D(r2, s[1][0][1], 0xEE030104, 0x04F1FE04, 0xF00E010E, 0x0300F6FF);
	r3 = D(r3, s[1][0][1], 0xFE15F905, 0xE8FF0107, 0xF5F61348, 0xD1E5E207);
	r4 = D(r4, s[1][0][1], 0xF5F1F507, 0x06080204, 0x05FBFB0A, 0x0703FF10);
	r5 = D(r5, s[1][0][1], 0x04FA01F7, 0x06F2F70A, 0x09DA080F, 0xFEF70207);
	r6 = D(r6, s[1][0][1], 0x0BFB0404, 0x0A0303F8, 0x09F7F805, 0x0FFFFFFF);
	r7 = D(r7, s[1][0][1], 0x06F9030C, 0x3BE72FF3, 0xFE09EF0C, 0x06F504DF);
	r0 = D(r0, s[1][0][2], 0x270605FE, 0x07FDF9F9, 0x09FA0002, 0x07EEFBF7);
	r1 = D(r1, s[1][0][2], 0xDAF8F4D3, 0x0204F8F1, 0xEA03DAEB, 0x01F4F0EB);
	r2 = D(r2, s[1][0][2], 0x03F20B1A, 0x0BFF060F, 0x01FD092E, 0xF9F70000);
	r3 = D(r3, s[1][0][2], 0xEA05F900, 0x03FF0206, 0x1B0FF7C5, 0x18EDE7E2);
	r4 = D(r4, s[1][0][2], 0x280C0330, 0x00FF030B, 0x0FFC0503, 0x070106FE);
	r5 = D(r5, s[1][0][2], 0x070702EF, 0x0DFA1507, 0xFC03F909, 0xFE11050D);
	r6 = D(r6, s[1][0][2], 0x03070BFA, 0x0005020A, 0x0709F80D, 0xFBFB0200);
	r7 = D(r7, s[1][0][2], 0xFEF90006, 0xDBFEF711, 0x03050B12, 0xDCF901F6);
	r0 = D(r0, s[1][1][0], 0x09FE0923, 0xFE00F2F6, 0xFA050FF7, 0x0606FC04);
	r1 = D(r1, s[1][1][0], 0x16F1F0EB, 0x0102FBFB, 0x1408F2F6, 0x07020AFA);
	r2 = D(r2, s[1][1][0], 0x01030B03, 0x00FCF911, 0x1FF4E0E5, 0x06FB0509);
	r3 = D(r3, s[1][1][0], 0xF7F5F60D, 0x0403FFF6, 0xFDFADFCD, 0x05FA03E5);
	r4 = D(r4, s[1][1][0], 0xC8090EF5, 0xFF030105, 0x060804FD, 0x0406F6FA);
	r5 = D(r5, s[1][1][0], 0x06FEF906, 0xE90803F9, 0x0CF2F403, 0xFD05F8F3);
	r6 = D(r6, s[1][1][0], 0xFA0CECF7, 0x0202FA0B, 0xF4F8E90A, 0xFCFD01F4);
	r7 = D(r7, s[1][1][0], 0x070306F0, 0x11100FE8, 0x0201ECFD, 0x01F5FBE3);
	r0 = D(r0, s[1][1][1], 0xDBFEF10B, 0xF4FCFDFE, 0x0705FA0E, 0x03F7FF03);
	r1 = D(r1, s[1][1][1], 0x060FF7EC, 0x0EFF0003, 0x0306F617, 0xD7FC010E);
	r2 = D(r2, s[1][1][1], 0x091DDF05, 0xF3FEF4E8, 0x0CF6ECF1, 0x11FBF622);
	r3 = D(r3, s[1][1][1], 0xF9FAFFF1, 0x17F0FD03, 0x29F7F6C8, 0x0D0E0FF0);
	r4 = D(r4, s[1][1][1], 0x20169B1E, 0x130BFCFC, 0x08F9010E, 0x04FDF206);
	r5 = D(r5, s[1][1][1], 0x090106F9, 0x15FCE0F6, 0x05FEFA1B, 0x32FBFB06);
	r6 = D(r6, s[1][1][1], 0x17F9FA16, 0x04FCFF0D, 0xFC08F1F1, 0x1204F5F5);
	r7 = D(r7, s[1][1][1], 0x0A0EFEF9, 0x9A09FA0E, 0x05F9FFF7, 0x27000081);
	r0 = D(r0, s[1][1][2], 0x13FDDF0D, 0x1302F9F8, 0xFFFE0405, 0x09EFF400);
	r1 = D(r1, s[1][1][2], 0xDA04FB08, 0x01FFFE00, 0x020E00E2, 0xFFEEF513);
	r2 = D(r2, s[1][1][2], 0x04FBEA0A, 0x14FEF9FA, 0x250316EE, 0x090C0709);
	r3 = D(r3, s[1][1][2], 0x031007DF, 0xFF13011A, 0xFCFD160A, 0xEBEB0205);
	r4 = D(r4, s[1][1][2], 0x0AF1B50D, 0x02FA03FE, 0x030DFD04, 0x0EFE0908);
	r5 = D(r5, s[1][1][2], 0x09FE0B05, 0xFAFAFDFE, 0x072AE228, 0x0403010D);
	r6 = D(r6, s[1][1][2], 0xFF03F209, 0xFEF2030A, 0x26F4F207, 0x08F80009);
	r7 = D(r7, s[1][1][2], 0x1106FFF9, 0x81081B08, 0x07130515, 0x22F812DB);
	r0 = D(r0, s[1][2][0], 0x04F100F4, 0x0C00FFEC, 0x040504FB, 0xFA0300EB);
	r1 = D(r1, s[1][2][0], 0xF7F510F8, 0x0C08FCFA, 0x3EFB20F1, 0x0206FF03);
	r2 = D(r2, s[1][2][0], 0xFF1004F4, 0x02FAFBFE, 0xF1150328, 0x0E01F9FD);
	r3 = D(r3, s[1][2][0], 0xFCF9FDF9, 0x04FF0200, 0x16F70D13, 0x0BFAFEE8);
	r4 = D(r4, s[1][2][0], 0xFFFAD11D, 0xFEFE0402, 0x0301FFF5, 0x0300F8F5);
	r5 = D(r5, s[1][2][0], 0x00FDF403, 0xFC0B10F3, 0xF10FE400, 0xEFF8FD08);
	r6 = D(r6, s[1][2][0], 0xEDF7FC0C, 0x0B010906, 0x02FCF903, 0x01F9020C);
	r7 = D(r7, s[1][2][0], 0x0BFC0208, 0x0E0EEBE9, 0x0310F4EE, 0x020D0EF6);
	r0 = D(r0, s[1][2][1], 0xD619F103, 0x07F20301, 0xFD01FB16, 0xF2FD0909);
	r1 = D(r1, s[1][2][1], 0x13F7021A, 0x0BFCF504, 0xE612D805, 0xFFEAFF0B);
	r2 = D(r2, s[1][2][1], 0x1105070B, 0x0202F806, 0xEFEAF51F, 0x0D00F502);
	r3 = D(r3, s[1][2][1], 0xFEF60809, 0xF4FD0113, 0x0A04F80A, 0x18FBFFF5);
	r4 = D(r4, s[1][2][1], 0xFBED8103, 0x0B07FD03, 0x09FD030F, 0x07F9FA04);
	r5 = D(r5, s[1][2][1], 0xFDF6F4F2, 0x10FDC01E, 0x07F60F03, 0xFFFAEA0D);
	r6 = D(r6, s[1][2][1], 0x0CF6ED12, 0x08FDF70A, 0x0401E022, 0x09FCFC10);
	r7 = D(r7, s[1][2][1], 0x05FEFA01, 0xD3F911FA, 0x18080417, 0x0008EA0A);
	r0 = D(r0, s[1][2][2], 0xFB08D5F9, 0x23FA0002, 0xFB050108, 0x1CF8F3EB);
	r1 = D(r1, s[1][2][2], 0xEF04F6EF, 0x01FFFB14, 0x0212F610, 0x27F1FD18);
	r2 = D(r2, s[1][2][2], 0xE82BCF05, 0x0B08EE08, 0x01E51207, 0x08070303);
	r3 = D(r3, s[1][2][2], 0xEDEF080C, 0xFD0CD205, 0xFBDBE504, 0x0E0EFDF7);
	r4 = D(r4, s[1][2][2], 0x3904FB00, 0xF804FF01, 0x0107FDFF, 0x15FE0600);
	r5 = D(r5, s[1][2][2], 0xFD01FDFF, 0x0A02FF15, 0x06F604E8, 0x00FCF906);
	r6 = D(r6, s[1][2][2], 0xFBF9FEFD, 0x1105F8F9, 0x1AF9F1E7, 0x1206FF06);
	r7 = D(r7, s[1][2][2], 0x1601FCFF, 0xB302C721, 0x1EDE0EE8, 0x03F8F2FD);
	s[0][0][0] = G[12][xy.y+0][xy.x+0]; s[0][0][1] = G[12][xy.y+0][xy.x+1];
	s[0][0][2] = G[12][xy.y+0][xy.x+2]; s[0][1][0] = G[12][xy.y+1][xy.x+0];
	s[0][1][1] = G[12][xy.y+1][xy.x+1]; s[0][1][2] = G[12][xy.y+1][xy.x+2];
	s[0][2][0] = G[12][xy.y+2][xy.x+0]; s[0][2][1] = G[12][xy.y+2][xy.x+1];
	s[0][2][2] = G[12][xy.y+2][xy.x+2]; s[1][0][0] = G[13][xy.y+0][xy.x+0];
	s[1][0][1] = G[13][xy.y+0][xy.x+1]; s[1][0][2] = G[13][xy.y+0][xy.x+2];
	s[1][1][0] = G[13][xy.y+1][xy.x+0]; s[1][1][1] = G[13][xy.y+1][xy.x+1];
	s[1][1][2] = G[13][xy.y+1][xy.x+2]; s[1][2][0] = G[13][xy.y+2][xy.x+0];
	s[1][2][1] = G[13][xy.y+2][xy.x+1]; s[1][2][2] = G[13][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x25F716FF, 0x02FC05FF, 0x040111F1, 0x04FC11FA);
	r1 = D(r1, s[0][0][0], 0x0A04ECE7, 0x02060BF5, 0xF30CE2FE, 0x0802E30B);
	r2 = D(r2, s[0][0][0], 0x08073418, 0xFDFB15EA, 0xFFDFB1DA, 0xF6F50C00);
	r3 = D(r3, s[0][0][0], 0x11FB0D00, 0x08FE0AF6, 0x14FCFADB, 0x0B012401);
	r4 = D(r4, s[0][0][0], 0x0DD3EA1E, 0xFD000CFC, 0x080211FD, 0x02110906);
	r5 = D(r5, s[0][0][0], 0x03FB09FB, 0xD8F809EF, 0x1FF431F9, 0x04FDF9F0);
	r6 = D(r6, s[0][0][0], 0x0204ECF9, 0xFEFB0904, 0x0CFF1AD1, 0xFCFD0BF2);
	r7 = D(r7, s[0][0][0], 0xFE00FEFF, 0xFE0B1FFC, 0x0DF5FF02, 0x00F91803);
	r0 = D(r0, s[0][0][1], 0x0404DD0B, 0x09FAFF02, 0xF909050A, 0x03FB08F8);
	r1 = D(r1, s[0][0][1], 0xE9F916FF, 0xFCFF14FA, 0xE3070609, 0x12F70400);
	r2 = D(r2, s[0][0][1], 0x0FFEDF06, 0x09011DFA, 0xC1F7061F, 0x020A00F5);
	r3 = D(r3, s[0][0][1], 0x0A050101, 0x05F71A04, 0xB7F0D2F6, 0x0FE10905);
	r4 = D(r4, s[0][0][1], 0x0BDAECEE, 0xFE020AFD, 0x02070EFF, 0xF2F21904);
	r5 = D(r5, s[0][0][1], 0x15F9E9F9, 0xFB03FF09, 0xFAFDE2D8, 0xFD04F6FF);
	r6 = D(r6, s[0][0][1], 0xF60305FD, 0xFEFD0900, 0xE5FA0AFD, 0xFB0314FF);
	r7 = D(r7, s[0][0][1], 0x010303FC, 0x13DE3AF1, 0x04FDFF04, 0xE2FDF4EA);
	r0 = D(r0, s[0][0][2], 0xFAFF3A0C, 0x08FEFDF6, 0x020809FD, 0x08FC1801);
	r1 = D(r1, s[0][0][2], 0x31EB08FB, 0x00010FFF, 0x170D3015, 0x1111F5ED);
	r2 = D(r2, s[0][0][2], 0x00FF2308, 0x02FA1606, 0xD5E01AF6, 0xFE050809);
	r3 = D(r3, s[0][0][2], 0xFEF1FAFC, 0xF0FFFE0F, 0xDF031003, 0xFD0D2914);
	r4 = D(r4, s[0][0][2], 0x0EFB0B0A, 0x0103FEFC, 0x07060900, 0x0607FDFB);
	r5 = D(r5, s[0][0][2], 0xFAFD1803, 0x10FD02E3, 0x11F6B0DB, 0x03000FF8);
	r6 = D(r6, s[0][0][2], 0x06FFFFF1, 0xFA020300, 0x1CF401F8, 0x060008FD);
	r7 = D(r7, s[0][0][2], 0xF6020903, 0xFE0C0DF9, 0x12F10DFF, 0xFE060D04);
	r0 = D(r0, s[0][1][0], 0x150C0B02, 0x05F20E06, 0x040302F4, 0x060A0EF7);
	r1 = D(r1, s[0][1][0], 0xF6070FF8, 0xFF0616F7, 0x180918FB, 0xFF17010A);
	r2 = D(r2, s[0][1][0], 0xF70EEA09, 0x0DFD14EE, 0xF2FCEED9, 0x0B0D02F9);
	r3 = D(r3, s[0][1][0], 0x0FF708F5, 0x03031FFC, 0xC50917DD, 0xF6040BF9);
	r4 = D(r4, s[0][1][0], 0x0FF4D8FD, 0xFA04FFFD, 0x07F807FA, 0xFE110408);
	r5 = D(r5, s[0][1][0], 0x0AFB12DB, 0xFD07F9FE, 0xF7FC32C8, 0xFBFA13EE);
	r6 = D(r6, s[0][1][0], 0xF40EFBFF, 0xFE0110F3, 0xFDED1DD4, 0x000AFDF6);
	r7 = D(r7, s[0][1][0], 0xFDFF02FE, 0xEC041A0A, 0x020E10F3, 0xE20808D4);
	r0 = D(r0, s[0][1][1], 0xE61D0BEE, 0x0914F40B, 0xFC0F07FB, 0xF5040409);
	r1 = D(r1, s[0][1][1], 0x010EE503, 0x02FD0208, 0xD0F5C40E, 0xFEEF2001);
	r2 = D(r2, s[0][1][1], 0x0304E308, 0xFC0203FB, 0x3C0681D7, 0x01FC0DF2);
	r3 = D(r3, s[0][1][1], 0x0A0BFE02, 0xFBFA0001, 0xFA2011D9, 0x0206EAF7);
	r4 = D(r4, s[0][1][1], 0x12FD1409, 0xFB070103, 0xF911FBF6, 0xF60109F8);
	r5 = D(r5, s[0][1][1], 0xF20305F9, 0x090CF8FA, 0xCFEEE8F5, 0xFA0A080B);
	r6 = D(r6, s[0][1][1], 0xF50915F3, 0xF8020605, 0x12FA1BD5, 0x040608FC);
	r7 = D(r7, s[0][1][1], 0xFE090801, 0x0ABD10DE, 0x1F06080B, 0x100C1AE7);
	r0 = D(r0, s[0][1][2], 0x0F020A0D, 0x030202F9, 0x0A040002, 0x07042106);
	r1 = D(r1, s[0][1][2], 0x19FA0DA5, 0xFBFB1305, 0x0DFB09F8, 0x0A06F6F5);
	r2 = D(r2, s[0][1][2], 0xDD02FDFE, 0x12050C04, 0xF71281F7, 0x0406FBFB);
	r3 = D(r3, s[0][1][2], 0x070CF9FA, 0xF5040005, 0x13040D06, 0x11FC0EEA);
	r4 = D(r4, s[0][1][2], 0xFDF1300A, 0xFEFE0BFC, 0x0404F90C, 0x03030FF9);
	r5 = D(r5, s[0][1][2], 0x08000404, 0xFE04EFED, 0xD2FD0DDA, 0x0D0108F8);
	r6 = D(r6, s[0][1][2], 0x0AFCFEF1, 0x020010F7, 0xFEFD1C0B, 0xFDFF0AFF);
	r7 = D(r7, s[0][1][2], 0x01010901, 0xED0300F8, 0xFC17D9F4, 0x031A030E);
	r0 = D(r0, s[0][2][0], 0xFF0A1FED, 0x0707FFF3, 0xED04FFEC, 0xF8F3FF0E);
	r1 = D(r1, s[0][2][0], 0xF1F5E5F8, 0x01000A02, 0x06051618, 0x06F220F9);
	r2 = D(r2, s[0][2][0], 0xFAF403E8, 0x0E000FFB, 0xC809EA81, 0xFF0C00F0);
	r3 = D(r3, s[0][2][0], 0x0EF6FB01, 0x070516FC, 0x13FE2A26, 0x01FDFEF6);
	r4 = D(r4, s[0][2][0], 0x0F120908, 0xFE010406, 0xFEFD14F7, 0xFC0E0E0B);
	r5 = D(r5, s[0][2][0], 0x02FDF3FF, 0x000B1CE6, 0x0FFB0C05, 0xFEFA0FF9);
	r6 = D(r6, s[0][2][0], 0x03090509, 0x020AFE05, 0x0EFB1AF4, 0x04060A01);
	r7 = D(r7, s[0][2][0], 0xFE010AFE, 0x170502F2, 0xF1E11CFB, 0xEDFD23E8);
	r0 = D(r0, s[0][2][1], 0xF9FA1701, 0x060708FD, 0x030E0803, 0xFBF3130C);
	r1 = D(r1, s[0][2][1], 0x0907E217, 0xF9000202, 0x0D0C1EF8, 0x170505F4);
	r2 = D(r2, s[0][2][1], 0xF9041A0F, 0x0DFD16FF, 0xA6D5F081, 0x19020CF2);
	r3 = D(r3, s[0][2][1], 0x1BF7F1F8, 0x0C051CF8, 0xEBD90700, 0x00F709F7);
	r4 = D(r4, s[0][2][1], 0xEEEF1D10, 0xFE07FE02, 0x0400FDFA, 0x08070C08);
	r5 = D(r5, s[0][2][1], 0x08E4FEFF, 0x1D061B09, 0xDD04FEFB, 0xFB0FFC13);
	r6 = D(r6, s[0][2][1], 0x01091309, 0xF7F4FF05, 0x14F3F2EF, 0x02FE020D);
	r7 = D(r7, s[0][2][1], 0x010E0703, 0x27ED3007, 0xBBF0F5ED, 0xD1EFF1ED);
	r0 = D(r0, s[0][2][2], 0x0B013513, 0x00F205FE, 0x01FBFFF9, 0x07FD0106);
	r1 = D(r1, s[0][2][2], 0x0F06F8B7, 0x03FAF804, 0xFE011CFD, 0x11FBE0F8);
	r2 = D(r2, s[0][2][2], 0x1B0BF0F1, 0x0EF8FC07, 0x0DF72AD1, 0xFE001AFC);
	r3 = D(r3, s[0][2][2], 0x0EF8F3F6, 0x010DF4FD, 0x02ED360C, 0xFEF4F7F5);
	r4 = D(r4, s[0][2][2], 0xF60FFCF4, 0xFF02FFFF, 0xFCFC0107, 0xFCFB0FF6);
	r5 = D(r5, s[0][2][2], 0x07F81801, 0x050D1D03, 0x17E4C405, 0x0BFD0AFE);
	r6 = D(r6, s[0][2][2], 0x03040CFC, 0xFE011203, 0x19F22BF5, 0x03051AFF);
	r7 = D(r7, s[0][2][2], 0xFA040803, 0xE7E80DFE, 0xE5FFFE02, 0xFEFC0105);
	r0 = D(r0, s[1][0][0], 0x0506E8F5, 0xF805FCFD, 0xF906FE07, 0x050102FC);
	r1 = D(r1, s[1][0][0], 0xF6010812, 0xFCFBFB05, 0x02FAF401, 0xF80AF516);
	r2 = D(r2, s[1][0][0], 0x040406EC, 0xFDF90201, 0x11B0020C, 0xFC040803);
	r3 = D(r3, s[1][0][0], 0xF10AD5F4, 0xFE03FDFE, 0x19CCDC13, 0xF1FFE9F6);
	r4 = D(r4, s[1][0][0], 0xFBFB1FE3, 0x05030B07, 0x0104F8FD, 0xFCF5FEF9);
	r5 = D(r5, s[1][0][0], 0x08F9FBFF, 0xE7FFF506, 0xDBE9070F, 0xFD00070C);
	r6 = D(r6, s[1][0][0], 0xE6FA0D1F, 0x04070507, 0x0DEA0601, 0xFFFB0708);
	r7 = D(r7, s[1][0][0], 0x08FD0800, 0xFFFC1909, 0x07F80E00, 0x1705DF18);
	r0 = D(r0, s[1][0][1], 0xEBF2F9FA, 0xF4FCE303, 0x0CF7FAFB, 0xF0FFF708);
	r1 = D(r1, s[1][0][1], 0x07FFFEED, 0xF8EFF5F2, 0x090804EE, 0xFE02EFEC);
	r2 = D(r2, s[1][0][1], 0xF50BFDF0, 0xFDE70409, 0xFF8ACF04, 0xEDF20A0A);
	r3 = D(r3, s[1][0][1], 0xF400F2F3, 0x0300F1FC, 0x0DB2FC23, 0xF706F4EE);
	r4 = D(r4, s[1][0][1], 0x04EFE823, 0x0400060A, 0x01F6F8FE, 0xFB030806);
	r5 = D(r5, s[1][0][1], 0x07FDF903, 0x21D205EB, 0xEEF20A07, 0x05FA06FA);
	r6 = D(r6, s[1][0][1], 0x08FD0E0F, 0x04FD02FC, 0x0EE90203, 0xFEEE08FF);
	r7 = D(r7, s[1][0][1], 0xFDF10600, 0x040101E1, 0xFC02EF0A, 0x0AFEEDFC);
	r0 = D(r0, s[1][0][2], 0x01EF150C, 0xFCF6F1FE, 0xFD02F70A, 0x000BFCF6);
	r1 = D(r1, s[1][0][2], 0xF1E8F109, 0x00FAF8FE, 0x0BE608F8, 0xEFF9D6E3);
	r2 = D(r2, s[1][0][2], 0x0BFE0AFC, 0x03F9030B, 0x0E04F801, 0x0404FFFC);
	r3 = D(r3, s[1][0][2], 0xF9FCFBFF, 0xFA04FF08, 0x21CB09EF, 0xF4FBF009);
	r4 = D(r4, s[1][0][2], 0x00E0110D, 0x00FE0809, 0x040B00F6, 0x07FBEFF4);
	r5 = D(r5, s[1][0][2], 0x0C00FDFE, 0xEB0FFF08, 0xEEEFF7FC, 0xF907F500);
	r6 = D(r6, s[1][0][2], 0xF80301F0, 0x03000205, 0xF4FD12FF, 0x07FF05FF);
	r7 = D(r7, s[1][0][2], 0xFE000503, 0xE1FA0432, 0x0205E8FC, 0x03FBF612);
	r0 = D(r0, s[1][1][0], 0x0FFC0103, 0xF4FEFBEE, 0xF403041C, 0x03F906F8);
	r1 = D(r1, s[1][1][0], 0xF90107F3, 0x0902F6FC, 0x0109F7FB, 0x05110113);
	r2 = D(r2, s[1][1][0], 0x03F20BF3, 0x07FDF902, 0x0EA81BF5, 0x07030606);
	r3 = D(r3, s[1][1][0], 0xF4FFDCF3, 0xFB02F7FE, 0xFFFCFC0A, 0xFCFE00FF);
	r4 = D(r4, s[1][1][0], 0x0AFB092C, 0xFE05030A, 0xFC05F602, 0xFC00FEFC);
	r5 = D(r5, s[1][1][0], 0x01F9F603, 0xE8F8FAFE, 0xF2EC02DA, 0xE300000C);
	r6 = D(r6, s[1][1][0], 0xE3FE0926, 0xF603FF00, 0x0CFFEDF8, 0x04F60601);
	r7 = D(r7, s[1][1][0], 0x02FFFFFF, 0xFFFD10FB, 0xECE8FFFE, 0x1BD1FEE5);
	r0 = D(r0, s[1][1][1], 0xDCF20113, 0xFDF9FAFB, 0xFEF10AF9, 0xF7FC03F7);
	r1 = D(r1, s[1][1][1], 0xF4FCF907, 0x05E6FD07, 0xFDFF1B03, 0x02FAF203);
	r2 = D(r2, s[1][1][1], 0xEDF40314, 0xF9EB080E, 0x14ECF9F4, 0xFFF3FE07);
	r3 = D(r3, s[1][1][1], 0xF60800FA, 0x05FFFBFF, 0x03D81009, 0xFC040E05);
	r4 = D(r4, s[1][1][1], 0xF6C50EE1, 0x000003FD, 0xFEFAFCE7, 0xEFFAFD0B);
	r5 = D(r5, s[1][1][1], 0xE4FB0410, 0x1213FDDC, 0x30B10A0B, 0xFDFC070B);
	r6 = D(r6, s[1][1][1], 0xFB020D0F, 0xF6EEFDFF, 0xD2D21523, 0x0DF404FF);
	r7 = D(r7, s[1][1][1], 0x02FB05FC, 0x080EF2FC, 0xF7EE0F0E, 0xEFCC10FC);
	r0 = D(r0, s[1][1][2], 0xFC04F900, 0xFFFBFEFD, 0xF9020708, 0xF5FD0A04);
	r1 = D(r1, s[1][1][2], 0xDB04FB22, 0x0AF8FDF6, 0xFC0CFBEF, 0xF2FBE306);
	r2 = D(r2, s[1][1][2], 0xFE1C0A05, 0xFDF7FFFC, 0x04030FF7, 0x03F90AE4);
	r3 = D(r3, s[1][1][2], 0x060D01EE, 0xF8FB0708, 0x09E4EA1E, 0xE5F3F8FB);
	r4 = D(r4, s[1][1][2], 0xFEFB07F1, 0x03040906, 0xFF040504, 0x100106F9);
	r5 = D(r5, s[1][1][2], 0xFCFBF001, 0xE2000AE8, 0x3CCFEBFF, 0xECFF08FF);
	r6 = D(r6, s[1][1][2], 0xF4FF02FC, 0x06FB00FC, 0x02F2FC03, 0x060304F2);
	r7 = D(r7, s[1][1][2], 0x0C00050C, 0xE7F0F004, 0x05F105D5, 0x0600F2E4);
	r0 = D(r0, s[1][2][0], 0xF20EED03, 0x0303F900, 0xF505F905, 0xF8FB070A);
	r1 = D(r1, s[1][2][0], 0x0FFEF8F6, 0xFDFEFC04, 0x25FD04E7, 0xFD00F7FC);
	r2 = D(r2, s[1][2][0], 0x06051414, 0xFBFE0801, 0x06C4071C, 0x04FF13FF);
	r3 = D(r3, s[1][2][0], 0xFCFAD8F7, 0x010200F8, 0xF7FBF222, 0x0304FF0F);
	r4 = D(r4, s[1][2][0], 0xEEFA1E0B, 0xF9010307, 0xFC01FAFF, 0x02060706);
	r5 = D(r5, s[1][2][0], 0xFDF8FE04, 0xDEF4FD02, 0x0906F616, 0xF001FA08);
	r6 = D(r6, s[1][2][0], 0xF405F915, 0x0403F804, 0x06F7020E, 0x07000A04);
	r7 = D(r7, s[1][2][0], 0x00FE0701, 0xF3FA0B0F, 0xD5F306EE, 0x09FF0611);
	r0 = D(r0, s[1][2][1], 0x98050C14, 0x00FCFBFF, 0x0E07FB04, 0x070C0502);
	r1 = D(r1, s[1][2][1], 0xEB0EF90C, 0xF1F8F3F8, 0xF11A1D0A, 0xFDFDED08);
	r2 = D(r2, s[1][2][1], 0x0CFD1FFC, 0xF701F608, 0xD1FEF62B, 0xFC030105);
	r3 = D(r3, s[1][2][1], 0x03FDE002, 0x07FDF700, 0xFBFAFDF6, 0xF7060CF2);
	r4 = D(r4, s[1][2][1], 0xFF0408F4, 0x03050300, 0xFBFFE9FC, 0xFC0C0509);
	r5 = D(r5, s[1][2][1], 0xFDFBF50E, 0xFC2218F2, 0x07E90602, 0xFF0FFB07);
	r6 = D(r6, s[1][2][1], 0xFF0D090C, 0xFBFA0608, 0xF9FEF106, 0x01FD050C);
	r7 = D(r7, s[1][2][1], 0x07FF020D, 0x19F5FEF0, 0xE80DE701, 0x06E5151F);
	r0 = D(r0, s[1][2][2], 0xEE220CE8, 0xFDFDFAF2, 0xFD08FE07, 0xFDFC0706);
	r1 = D(r1, s[1][2][2], 0x0DFDF9FC, 0xFD01FF09, 0xFB111DFB, 0xF4FDCE08);
	r2 = D(r2, s[1][2][2], 0x01050EF1, 0x07010D07, 0xFDD00005, 0x04F90DF2);
	r3 = D(r3, s[1][2][2], 0xFCFDE303, 0x0413F706, 0x1CF00003, 0xFDFAF5E6);
	r4 = D(r4, s[1][2][2], 0x1401170B, 0xF9020400, 0xF009F8FE, 0x090003F3);
	r5 = D(r5, s[1][2][2], 0x14010702, 0xF8030A11, 0x0500E7F6, 0x020207FA);
	r6 = D(r6, s[1][2][2], 0x03FF07FE, 0xFAFCFCF4, 0x02F50D05, 0xFDFE0CF7);
	r7 = D(r7, s[1][2][2], 0xFF0207FE, 0xE52104FE, 0x061005EB, 0x1006FAED);
	s[0][0][0] = G[14][xy.y+0][xy.x+0]; s[0][0][1] = G[14][xy.y+0][xy.x+1];
	s[0][0][2] = G[14][xy.y+0][xy.x+2]; s[0][1][0] = G[14][xy.y+1][xy.x+0];
	s[0][1][1] = G[14][xy.y+1][xy.x+1]; s[0][1][2] = G[14][xy.y+1][xy.x+2];
	s[0][2][0] = G[14][xy.y+2][xy.x+0]; s[0][2][1] = G[14][xy.y+2][xy.x+1];
	s[0][2][2] = G[14][xy.y+2][xy.x+2]; s[1][0][0] = G[15][xy.y+0][xy.x+0];
	s[1][0][1] = G[15][xy.y+0][xy.x+1]; s[1][0][2] = G[15][xy.y+0][xy.x+2];
	s[1][1][0] = G[15][xy.y+1][xy.x+0]; s[1][1][1] = G[15][xy.y+1][xy.x+1];
	s[1][1][2] = G[15][xy.y+1][xy.x+2]; s[1][2][0] = G[15][xy.y+2][xy.x+0];
	s[1][2][1] = G[15][xy.y+2][xy.x+1]; s[1][2][2] = G[15][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x102095BA, 0x01F807F8, 0x040EF402, 0x0A2200FC);
	r1 = D(r1, s[0][0][0], 0x060E16CD, 0x070E0B0A, 0xEF08F204, 0x011D8104);
	r2 = D(r2, s[0][0][0], 0xFCFAF501, 0x0516ECEF, 0x313FE002, 0xFA06E1F7);
	r3 = D(r3, s[0][0][0], 0x1314F2D8, 0xFE0DF8FF, 0x2E1814FB, 0x07AF08DD);
	r4 = D(r4, s[0][0][0], 0x060D81FC, 0xFAF90200, 0x030CFC03, 0xFFFAD4F8);
	r5 = D(r5, s[0][0][0], 0x02FC17F1, 0xF5F2050C, 0x1313F613, 0xFE0BE3EA);
	r6 = D(r6, s[0][0][0], 0xFB21C3E3, 0xFFF615FA, 0x1925FAEF, 0xF9F8F803);
	r7 = D(r7, s[0][0][0], 0x000BF308, 0xFF1F1E17, 0xF9073FFD, 0xF71317FC);
	r0 = D(r0, s[0][0][1], 0xFFA38116, 0xFDF30BED, 0xFF07E906, 0xFF1A0E02);
	r1 = D(r1, s[0][0][1], 0x07DFFEFA, 0xFBFB0CFC, 0x16062731, 0x032004E2);
	r2 = D(r2, s[0][0][1], 0x1F1BADE0, 0x021DFC0A, 0x0CD03FEA, 0xFD13E3FA);
	r3 = D(r3, s[0][0][1], 0x02FFFE0D, 0x031009EA, 0x06FDF3EF, 0x0BFA1AF1);
	r4 = D(r4, s[0][0][1], 0x20E82814, 0xFF05FDF8, 0x041EF90C, 0x120BFDFA);
	r5 = D(r5, s[0][0][1], 0x03F208E2, 0x0837ACF2, 0x000FE60F, 0xFA26E9ED);
	r6 = D(r6, s[0][0][1], 0x0719CAF2, 0xFBFE0711, 0x05F406E4, 0xFD06FAE2);
	r7 = D(r7, s[0][0][1], 0xFC03FEFC, 0x131CB295, 0xFE14FAFC, 0xFBEB03EB);
	r0 = D(r0, s[0][0][2], 0x0CB8CBD5, 0xFD030008, 0xF9FFF9F4, 0x060F0310);
	r1 = D(r1, s[0][0][2], 0xEBD61901, 0xFD0010EA, 0x042E2303, 0x0DFDFECD);
	r2 = D(r2, s[0][0][2], 0x23E62908, 0x072401C9, 0x0701F608, 0xF512F6FD);
	r3 = D(r3, s[0][0][2], 0x121FF2F7, 0xFE0DF0FE, 0x20FE1FD8, 0x07CCF6E5);
	r4 = D(r4, s[0][0][2], 0xF600E20B, 0xFE0CFBF6, 0xFD01E9F1, 0xFA05EDFD);
	r5 = D(r5, s[0][0][2], 0xFEFEF4EE, 0x050FEA38, 0x10F7071F, 0x08FEF120);
	r6 = D(r6, s[0][0][2], 0x0604FC11, 0xFC06FAF7, 0x172CE0D3, 0xF90BF509);
	r7 = D(r7, s[0][0][2], 0xFC08FB00, 0x13102EE3, 0xFD072918, 0xFFFC1CDA);
	r0 = D(r0, s[0][1][0], 0x042800D7, 0x07F6EEEB, 0x09FD0400, 0x06FC0204);
	r1 = D(r1, s[0][1][0], 0xF0DEC0F0, 0x041407FD, 0xFF00F2DA, 0xF804F0F1);
	r2 = D(r2, s[0][1][0], 0x10F4E203, 0xFA1803F1, 0xFF08F5FF, 0xF619F601);
	r3 = D(r3, s[0][1][0], 0x1C06EFD6, 0x021AFA02, 0xE747D417, 0x0016F908);
	r4 = D(r4, s[0][1][0], 0x0905061C, 0xFFFD09FF, 0x040C02FE, 0x01BDCDF8);
	r5 = D(r5, s[0][1][0], 0x030E13FF, 0x051DE8F5, 0x12003D17, 0x0901E9FB);
	r6 = D(r6, s[0][1][0], 0x02BAEEF6, 0xF90801FF, 0xFA2F03EF, 0xF411F100);
	r7 = D(r7, s[0][1][0], 0xF903F504, 0x0A03262F, 0x00FD1707, 0x0F0D201C);
	r0 = D(r0, s[0][1][1], 0x02DBE50C, 0x02F996FF, 0xFDE7F7FE, 0x010A06FE);
	r1 = D(r1, s[0][1][1], 0xEC8181F1, 0x09FE01FC, 0x17F133E2, 0xFB2D14E2);
	r2 = D(r2, s[0][1][1], 0x100E22D4, 0x12F005F6, 0x0CEA1703, 0x0A1AFDFB);
	r3 = D(r3, s[0][1][1], 0x00ECFDFE, 0x040CFFF9, 0x03FB1F04, 0xF5F303D6);
	r4 = D(r4, s[0][1][1], 0x171D8124, 0xFEFD0A00, 0x0607F9ED, 0xFE13F8F5);
	r5 = D(r5, s[0][1][1], 0x0908EE0D, 0x02B5DCDE, 0x1FF2EBD4, 0xFBD1EFEA);
	r6 = D(r6, s[0][1][1], 0xF906DBFB, 0xFCF40508, 0x12F9BC03, 0xFA0BFA02);
	r7 = D(r7, s[0][1][1], 0xFDFD09F8, 0xD519E9DE, 0xF50F0C18, 0xEEE40606);
	r0 = D(r0, s[0][1][2], 0xFE2E0FF9, 0xFD03F30E, 0x0201DC09, 0x000613FA);
	r1 = D(r1, s[0][1][2], 0xFED434F8, 0x030008EF, 0xFBD3F616, 0x09E7EDD5);
	r2 = D(r2, s[0][1][2], 0x2313C609, 0xFC11D903, 0x0610CFF4, 0xFC16FC05);
	r3 = D(r3, s[0][1][2], 0xFCF2D6F5, 0x07F5FCDE, 0xD13DF2F7, 0xF7FEF0EC);
	r4 = D(r4, s[0][1][2], 0x0BF1FFF8, 0xFFFA0A01, 0x020BF7F3, 0xF9110BF6);
	r5 = D(r5, s[0][1][2], 0xFE11EE0E, 0x0925C207, 0x13CE14F9, 0x06150501);
	r6 = D(r6, s[0][1][2], 0x06120AFF, 0xFD031006, 0x021304ED, 0xF104FA01);
	r7 = D(r7, s[0][1][2], 0xF802FC00, 0x0EF418E3, 0xF3040827, 0xF6341911);
	r0 = D(r0, s[0][2][0], 0xFB2107F5, 0xFEF80202, 0x071301FA, 0x14250806);
	r1 = D(r1, s[0][2][0], 0xFC0D3AF8, 0x0102F3FE, 0xEC1FEB12, 0x022209C9);
	r2 = D(r2, s[0][2][0], 0x202BF1FA, 0x0012FAFB, 0xBF3F10DD, 0xFA17F502);
	r3 = D(r3, s[0][2][0], 0x1601F9E9, 0xFD1B0703, 0x0E0522F0, 0x0307F80B);
	r4 = D(r4, s[0][2][0], 0x1D16E21A, 0xFC01FEFD, 0x06170407, 0x041D04FD);
	r5 = D(r5, s[0][2][0], 0x0512FAFF, 0x23D93C03, 0x05F914E8, 0x040716F9);
	r6 = D(r6, s[0][2][0], 0x080D0B01, 0xF90414FF, 0x020DE9F4, 0xFB1104FD);
	r7 = D(r7, s[0][2][0], 0xF90303FF, 0xF71B18FA, 0xED32FA00, 0xF30932E6);
	r0 = D(r0, s[0][2][1], 0x03EC1E03, 0x0402F501, 0x030AF606, 0x061614EB);
	r1 = D(r1, s[0][2][1], 0x0881F414, 0xFB0F0105, 0x05D332CF, 0xF8DECBFE);
	r2 = D(r2, s[0][2][1], 0x0981CB00, 0xFA1AE803, 0x0481EEE0, 0xF307EE04);
	r3 = D(r3, s[0][2][1], 0x1AFA1200, 0xFE0A09FE, 0xF9FC01CA, 0x081DFE0B);
	r4 = D(r4, s[0][2][1], 0x13171C04, 0xFEFCFFFE, 0x020DFEFC, 0xFE0C07F5);
	r5 = D(r5, s[0][2][1], 0x02140DF1, 0x0DDF030C, 0x130CF1F2, 0x040CDCF9);
	r6 = D(r6, s[0][2][1], 0x001C01F9, 0x0906FD00, 0x0C1606E9, 0xED1108F6);
	r7 = D(r7, s[0][2][1], 0x0207FDF7, 0x12290805, 0x0C18032A, 0xF1EF18FA);
	r0 = D(r0, s[0][2][2], 0x1A381112, 0xF31A18FE, 0xFB0113F8, 0x062A0BDB);
	r1 = D(r1, s[0][2][2], 0xF4DAFD08, 0x000AEF05, 0x32FC0E0F, 0x1915F508);
	r2 = D(r2, s[0][2][2], 0x110610DD, 0x080BFFF9, 0xC106270B, 0xFE12F7FB);
	r3 = D(r3, s[0][2][2], 0x1E000EF1, 0xF817EFF8, 0x24E32FCE, 0x05FEDF01);
	r4 = D(r4, s[0][2][2], 0xF1130128, 0xFE040201, 0x030BF402, 0xF50DF804);
	r5 = D(r5, s[0][2][2], 0x0107FDF2, 0xF50614EF, 0xCE3FD7F5, 0x000008FD);
	r6 = D(r6, s[0][2][2], 0xFC031006, 0xFB080EFA, 0xFFB912EE, 0xF10911F5);
	r7 = D(r7, s[0][2][2], 0xFB05FDFB, 0x0F3DE4F1, 0x0131FEED, 0xEB022ADB);
	r0 = D(r0, s[1][0][0], 0xE718F301, 0xFE0EFCF4, 0x01100507, 0xF6140DFD);
	r1 = D(r1, s[1][0][0], 0xFEE6F3F4, 0xFD1502FC, 0xF52CF800, 0x110101EF);
	r2 = D(r2, s[1][0][0], 0x0C18F1EB, 0x0010F7F8, 0x0E23EFED, 0xFA03FCF9);
	r3 = D(r3, s[1][0][0], 0x03070CF9, 0xFDFD0002, 0x080EFE06, 0xF111F010);
	r4 = D(r4, s[1][0][0], 0x0018FC02, 0xFC02FE03, 0xFF17FF02, 0x05FE00FB);
	r5 = D(r5, s[1][0][0], 0x0B1002FC, 0x0421F619, 0x0D19F8EE, 0x02F80507);
	r6 = D(r6, s[1][0][0], 0x0AFD0002, 0x06050000, 0xFE1A00F7, 0xFC10FCF9);
	r7 = D(r7, s[1][0][0], 0xFD00FD03, 0x08E81203, 0x0B10FEF3, 0x0D0CF7FF);
	r0 = D(r0, s[1][0][1], 0xF71408EE, 0xF6F7EE0D, 0xFC0BF8F6, 0xF9F30D04);
	r1 = D(r1, s[1][0][1], 0xECC70E09, 0x03180F01, 0xFAD804FB, 0xE3FB100A);
	r2 = D(r2, s[1][0][1], 0x010C05E6, 0xF90D0CFC, 0x100D1BED, 0xF10B0D02);
	r3 = D(r3, s[1][0][1], 0xF6FAF8FA, 0xF80D06FB, 0xF2FA12D6, 0xED09F510);
	r4 = D(r4, s[1][0][1], 0xF618E6B2, 0x040202FF, 0xF51104FA, 0xEFE30000);
	r5 = D(r5, s[1][0][1], 0x06060BFE, 0xF907D7D2, 0xF31BFC00, 0x0C03F1FE);
	r6 = D(r6, s[1][0][1], 0x0207FDFF, 0xFE02FFF9, 0x0B05FCCC, 0xFF0500FD);
	r7 = D(r7, s[1][0][1], 0x07020900, 0xC70AEFF7, 0x010EF406, 0x050C03FC);
	r0 = D(r0, s[1][0][2], 0xEF15F4F5, 0x090EFE06, 0x04100304, 0x011802FC);
	r1 = D(r1, s[1][0][2], 0x05ED001F, 0x090209FB, 0xEE0BE5DE, 0xFFF3F8EF);
	r2 = D(r2, s[1][0][2], 0x0DFF0100, 0x0803F6ED, 0x11270105, 0x090905F4);
	r3 = D(r3, s[1][0][2], 0xC6071C04, 0x0208F5FD, 0xFE110B03, 0x0216E9EF);
	r4 = D(r4, s[1][0][2], 0xFA0702F1, 0x000700FC, 0xF60B0409, 0x050F0306);
	r5 = D(r5, s[1][0][2], 0x0304FEEC, 0x00FC0F16, 0xF4060BF7, 0x06FE0D0C);
	r6 = D(r6, s[1][0][2], 0x07FEFD06, 0x0305F8F9, 0xF2F106FC, 0xFF0E0502);
	r7 = D(r7, s[1][0][2], 0x030304FF, 0xF816161C, 0x14FE0205, 0x0500F7F9);
	r0 = D(r0, s[1][1][0], 0xF412F50D, 0xF80DFDFB, 0xFC0A0A01, 0x0405FB02);
	r1 = D(r1, s[1][1][0], 0x12F0FE15, 0xF211FBFF, 0xEF1C09F2, 0x092107FD);
	r2 = D(r2, s[1][1][0], 0xFE0F0105, 0x000BFEFD, 0xEC33F90D, 0x030109FD);
	r3 = D(r3, s[1][1][0], 0xF60C02FD, 0xF41103FC, 0x2123F80F, 0x02F600F6);
	r4 = D(r4, s[1][1][0], 0x0A1503DE, 0x00FFFCFE, 0xF81801FF, 0xFF1707FB);
	r5 = D(r5, s[1][1][0], 0x0515FC02, 0x0220E60A, 0x000CEEEA, 0xF60B0007);
	r6 = D(r6, s[1][1][0], 0x0603FEFC, 0xFCE80D04, 0x112405FC, 0x02100205);
	r7 = D(r7, s[1][1][0], 0xFC09FC06, 0x04181806, 0xECF6FAFA, 0xFB09FA0C);
	r0 = D(r0, s[1][1][1], 0xE715DD02, 0xF3F80C02, 0xFA08EFF9, 0xF5F1F606);
	r1 = D(r1, s[1][1][1], 0xE4E7F008, 0xE6FDFD05, 0xF80E0912, 0xD1FB0B0E);
	r2 = D(r2, s[1][1][1], 0xEC080ACE, 0x0218F6FE, 0xDE2EBEED, 0xF1DDEFFA);
	r3 = D(r3, s[1][1][1], 0x0DF011FC, 0xD80FFC0B, 0xF62BFEF7, 0xF1051C0F);
	r4 = D(r4, s[1][1][1], 0xFFF9FAFC, 0x040207FF, 0xFDFFF0FC, 0xF901F0FA);
	r5 = D(r5, s[1][1][1], 0xE80C12FA, 0xDEF60B0C, 0xE60D09F1, 0x04FA01F2);
	r6 = D(r6, s[1][1][1], 0xFCFBF6F5, 0xEAFA1407, 0x01160501, 0xF8040502);
	r7 = D(r7, s[1][1][1], 0xFF0E0306, 0xC323F403, 0xD51A1814, 0xE11F020B);
	r0 = D(r0, s[1][1][2], 0x001DF1F9, 0x0C01F3FF, 0x02000109, 0x0604FDF6);
	r1 = D(r1, s[1][1][2], 0xED082311, 0xF908F302, 0xF2F4F108, 0x060C0807);
	r2 = D(r2, s[1][1][2], 0xFE110825, 0x0B09FF01, 0xF91929F7, 0x05FD0D0B);
	r3 = D(r3, s[1][1][2], 0x0AF203FE, 0x06FBF7FC, 0x0315F8FA, 0xF3F6FC09);
	r4 = D(r4, s[1][1][2], 0xEF150600, 0x0303FFFD, 0xF8FD09FC, 0x0109F902);
	r5 = D(r5, s[1][1][2], 0x0A050AFD, 0xE8DE05F6, 0xFF220DC9, 0xF308F900);
	r6 = D(r6, s[1][1][2], 0xF8FAFCFF, 0x00021009, 0x020EF4F8, 0x05F9FA07);
	r7 = D(r7, s[1][1][2], 0x0002090A, 0xCB01F6F8, 0x1325FBFD, 0x16120EFC);
	r0 = D(r0, s[1][2][0], 0x08020D09, 0xFE0DFBFD, 0x04F409F3, 0xFC2AFAFE);
	r1 = D(r1, s[1][2][0], 0x01E5F5FA, 0x020CF903, 0xF129E01F, 0xF1090307);
	r2 = D(r2, s[1][2][0], 0x0506F5FA, 0x000EF3F9, 0xF413001F, 0x0610FEF6);
	r3 = D(r3, s[1][2][0], 0xF6C90004, 0xFD050508, 0xEBFAF705, 0x0A030C08);
	r4 = D(r4, s[1][2][0], 0x052504F7, 0x03FF00FD, 0xFF1700FC, 0x051AFBFB);
	r5 = D(r5, s[1][2][0], 0x05FF00FF, 0x0B23060C, 0x0316F3FC, 0x0A07FBF5);
	r6 = D(r6, s[1][2][0], 0x0E05FAF8, 0x030EFF0A, 0x070BECF7, 0x0606FD03);
	r7 = D(r7, s[1][2][0], 0xFC0EFE01, 0x07090DEF, 0x0CF6FCA0, 0xE321F302);
	r0 = D(r0, s[1][2][1], 0xF513E3F9, 0x02F5FC05, 0xF5F3F7F7, 0xFE06FF05);
	r1 = D(r1, s[1][2][1], 0x14FBF9FD, 0x010600FC, 0x0816FDE1, 0x0FFF0CFE);
	r2 = D(r2, s[1][2][1], 0xFDFFED0F, 0x0905FDF8, 0xF41FFCE1, 0x0212FBFB);
	r3 = D(r3, s[1][2][1], 0xF2090401, 0xEF09F1F9, 0xF02DFF15, 0x14FCF9FC);
	r4 = D(r4, s[1][2][1], 0x000FF915, 0x07F9FAFF, 0xFCFC06FF, 0x01FFF100);
	r5 = D(r5, s[1][2][1], 0xF40FFCFE, 0xFBDCF6F9, 0x0E1F0D02, 0x0A07F8FF);
	r6 = D(r6, s[1][2][1], 0x05FCFD0D, 0xED01F905, 0x0026FFF3, 0xFEFEF1F9);
	r7 = D(r7, s[1][2][1], 0xFD0801FE, 0xE7EFF615, 0x090A06DA, 0xD80DEE04);
	r0 = D(r0, s[1][2][2], 0x02F500FC, 0x0106FD07, 0xF107F4FF, 0xFA16FD06);
	r1 = D(r1, s[1][2][2], 0x01FB0500, 0x04FD06FF, 0xF3ECE513, 0xF70401FF);
	r2 = D(r2, s[1][2][2], 0xDF140B00, 0x0107FDF5, 0xF8FD0AFF, 0x050CF4F9);
	r3 = D(r3, s[1][2][2], 0xFAF10605, 0x1100FBFB, 0xEFFCEC04, 0xF502F008);
	r4 = D(r4, s[1][2][2], 0x041607F1, 0x0201FE03, 0xF80DEFFF, 0xFF0F0303);
	r5 = D(r5, s[1][2][2], 0xFF03F2FA, 0x010000FC, 0xEF0DF601, 0x03000103);
	r6 = D(r6, s[1][2][2], 0x0005FC00, 0x0603FF01, 0x020CF4F5, 0x0704FE04);
	r7 = D(r7, s[1][2][2], 0xF908F802, 0xF010060D, 0x07F6E5F2, 0x060CF9FE);
	f0 = vec4(r0) * 6.20001240e-05;
	f0 += vec4(2.206e-02, 5.973e-04, 4.092e-03, -9.162e-03);
	f0 = max(f0, vec4(0.0));
	imageStore(out_image, opos + ivec2(4, 0), f0);
	f1 = vec4(r1) * 6.20001240e-05;
	f1 += vec4(-9.672e-02, 8.134e-03, -4.472e-02, 2.013e-02);
	f1 = max(f1, vec4(0.0));
	imageStore(out_image, opos + ivec2(5, 0), f1);
	f2 = vec4(r2) * 6.20001240e-05;
	f2 += vec4(-4.676e-02, -1.530e-02, -3.030e-03, -6.370e-03);
	f2 = max(f2, vec4(0.0));
	imageStore(out_image, opos + ivec2(4, 1), f2);
	f3 = vec4(r3) * 6.20001240e-05;
	f3 += vec4(-4.289e-03, 2.797e-03, 3.583e-02, 7.033e-03);
	f3 = max(f3, vec4(0.0));
	imageStore(out_image, opos + ivec2(5, 1), f3);
	f4 = vec4(r4) * 6.20001240e-05;
	f4 += vec4(-2.434e-02, -6.140e-03, 1.341e-02, 1.190e-02);
	f4 = max(f4, vec4(0.0));
	imageStore(out_image, opos + ivec2(6, 0), f4);
	f5 = vec4(r5) * 6.20001240e-05;
	f5 += vec4(3.338e-03, -3.293e-03, 1.898e-02, -8.040e-04);
	f5 = max(f5, vec4(0.0));
	imageStore(out_image, opos + ivec2(7, 0), f5);
	f6 = vec4(r6) * 6.20001240e-05;
	f6 += vec4(1.318e-03, 1.699e-03, -1.300e-02, 8.421e-03);
	f6 = max(f6, vec4(0.0));
	imageStore(out_image, opos + ivec2(6, 1), f6);
	f7 = vec4(r7) * 6.20001240e-05;
	f7 += vec4(-9.887e-03, -2.627e-02, -1.244e-02, -7.045e-05);
	f7 = max(f7, vec4(0.0));
	imageStore(out_image, opos + ivec2(7, 1), f7);
}

//!DESC CuNNy-4x64-BILINEAR-TEST-out-shuffle
//!HOOK LUMA
//!COMPUTE 16 16 8 8
//!BIND conv4
//!BIND LUMA
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 1
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#extension GL_EXT_spirv_intrinsics : require
#extension GL_EXT_control_flow_attributes : require
spirv_instruction (extensions = ["SPV_KHR_integer_dot_product"], capabilities = [6019, 6018], id = 4450)
int dp4(int a, int b, spirv_literal int fmt);
#define D(r, s, a, b, c, d) ivec4(r.x + dp4(s, a, 0), r.y + dp4(s, b, 0), r.z + dp4(s, c, 0), r.w + dp4(s, d, 0))
shared int G[16][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(2, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			vec4 r, g, b, a;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(8, 2) + ivec2(1, 1)) * conv4_pt;
			r = conv4_gather(p, 0);
			g = conv4_gather(p, 1);
			b = conv4_gather(p, 2);
			a = conv4_gather(p, 3);
			vec4 v0 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v1 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v2 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v3 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(8, 2) + ivec2(3, 1)) * conv4_pt;
			r = conv4_gather(p, 0);
			g = conv4_gather(p, 1);
			b = conv4_gather(p, 2);
			a = conv4_gather(p, 3);
			vec4 v4 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v5 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v6 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v7 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(8, 2) + ivec2(5, 1)) * conv4_pt;
			r = conv4_gather(p, 0);
			g = conv4_gather(p, 1);
			b = conv4_gather(p, 2);
			a = conv4_gather(p, 3);
			vec4 v8 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v9 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v10 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v11 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(8, 2) + ivec2(7, 1)) * conv4_pt;
			r = conv4_gather(p, 0);
			g = conv4_gather(p, 1);
			b = conv4_gather(p, 2);
			a = conv4_gather(p, 3);
			vec4 v12 = vec4(r.w, g.w, b.w, a.w) * 1.00000000e+00;
			vec4 v13 = vec4(r.z, g.z, b.z, a.z) * 1.00000000e+00;
			vec4 v14 = vec4(r.x, g.x, b.x, a.x) * 1.00000000e+00;
			vec4 v15 = vec4(r.y, g.y, b.y, a.y) * 1.00000000e+00;
			G[0][ay][ax] = int(packSnorm4x8(v0));
			G[1][ay][ax] = int(packSnorm4x8(v1));
			G[2][ay][ax] = int(packSnorm4x8(v2));
			G[3][ay][ax] = int(packSnorm4x8(v3));
			G[4][ay][ax] = int(packSnorm4x8(v4));
			G[5][ay][ax] = int(packSnorm4x8(v5));
			G[6][ay][ax] = int(packSnorm4x8(v6));
			G[7][ay][ax] = int(packSnorm4x8(v7));
			G[8][ay][ax] = int(packSnorm4x8(v8));
			G[9][ay][ax] = int(packSnorm4x8(v9));
			G[10][ay][ax] = int(packSnorm4x8(v10));
			G[11][ay][ax] = int(packSnorm4x8(v11));
			G[12][ay][ax] = int(packSnorm4x8(v12));
			G[13][ay][ax] = int(packSnorm4x8(v13));
			G[14][ay][ax] = int(packSnorm4x8(v14));
			G[15][ay][ax] = int(packSnorm4x8(v15));
		}
	}
	barrier();
	int s[2][3][3];
	ivec4 r0;
	vec4 f0;
	r0 = ivec4(0);
	s[0][0][0] = G[0][xy.y+0][xy.x+0]; s[0][0][1] = G[0][xy.y+0][xy.x+1];
	s[0][0][2] = G[0][xy.y+0][xy.x+2]; s[0][1][0] = G[0][xy.y+1][xy.x+0];
	s[0][1][1] = G[0][xy.y+1][xy.x+1]; s[0][1][2] = G[0][xy.y+1][xy.x+2];
	s[0][2][0] = G[0][xy.y+2][xy.x+0]; s[0][2][1] = G[0][xy.y+2][xy.x+1];
	s[0][2][2] = G[0][xy.y+2][xy.x+2]; s[1][0][0] = G[1][xy.y+0][xy.x+0];
	s[1][0][1] = G[1][xy.y+0][xy.x+1]; s[1][0][2] = G[1][xy.y+0][xy.x+2];
	s[1][1][0] = G[1][xy.y+1][xy.x+0]; s[1][1][1] = G[1][xy.y+1][xy.x+1];
	s[1][1][2] = G[1][xy.y+1][xy.x+2]; s[1][2][0] = G[1][xy.y+2][xy.x+0];
	s[1][2][1] = G[1][xy.y+2][xy.x+1]; s[1][2][2] = G[1][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x00FFFCFD, 0x01FDFF03, 0x010400FB, 0x00FD0002);
	r0 = D(r0, s[0][0][1], 0xFFF4FB08, 0xFF0DF9F6, 0x02F50407, 0x020602FC);
	r0 = D(r0, s[0][0][2], 0x010702FE, 0x01FD0105, 0x010200FE, 0x01040200);
	r0 = D(r0, s[0][1][0], 0xFFFA0602, 0x02050000, 0xFFF80302, 0x02020202);
	r0 = D(r0, s[0][1][1], 0xF91209FC, 0xFAFA0FFF, 0xF903F100, 0xF909FBF7);
	r0 = D(r0, s[0][1][2], 0x01FEFF01, 0xFEF40002, 0x0108FE00, 0xFFF1F507);
	r0 = D(r0, s[0][2][0], 0x0102FF00, 0x01000000, 0x01FFFD00, 0x0103FF00);
	r0 = D(r0, s[0][2][1], 0x0203FD00, 0x02F9FD01, 0xFF0D06FE, 0xFFF50102);
	r0 = D(r0, s[0][2][2], 0x00F70000, 0x010AFF00, 0x01F50100, 0x00030500);
	r0 = D(r0, s[1][0][0], 0xF60102F8, 0x140000FE, 0xFCFF0100, 0x0D000000);
	r0 = D(r0, s[1][0][1], 0x3403FEFD, 0xCA0301F8, 0x22FF01FF, 0xDEFF01FF);
	r0 = D(r0, s[1][0][2], 0xD000FF00, 0x2201FDFF, 0xE0FF0001, 0x16FE0000);
	r0 = D(r0, s[1][1][0], 0xF60203FD, 0x170200FE, 0xF5FD02F6, 0x17FF00FC);
	r0 = D(r0, s[1][1][1], 0x34F2FAFF, 0xC9FB03FD, 0x3904F9FD, 0xC4FE01F5);
	r0 = D(r0, s[1][1][2], 0xD3FEFD01, 0x22F5F800, 0xCC05FD00, 0x2409F700);
	r0 = D(r0, s[1][2][0], 0xFBFE0201, 0x09FF0101, 0xF7030401, 0x11010100);
	r0 = D(r0, s[1][2][1], 0x19020201, 0xE7FE0401, 0x28070101, 0xD5080602);
	r0 = D(r0, s[1][2][2], 0xE9020100, 0x0D040100, 0xDEFD0000, 0x19FEFE00);
	s[0][0][0] = G[2][xy.y+0][xy.x+0]; s[0][0][1] = G[2][xy.y+0][xy.x+1];
	s[0][0][2] = G[2][xy.y+0][xy.x+2]; s[0][1][0] = G[2][xy.y+1][xy.x+0];
	s[0][1][1] = G[2][xy.y+1][xy.x+1]; s[0][1][2] = G[2][xy.y+1][xy.x+2];
	s[0][2][0] = G[2][xy.y+2][xy.x+0]; s[0][2][1] = G[2][xy.y+2][xy.x+1];
	s[0][2][2] = G[2][xy.y+2][xy.x+2]; s[1][0][0] = G[3][xy.y+0][xy.x+0];
	s[1][0][1] = G[3][xy.y+0][xy.x+1]; s[1][0][2] = G[3][xy.y+0][xy.x+2];
	s[1][1][0] = G[3][xy.y+1][xy.x+0]; s[1][1][1] = G[3][xy.y+1][xy.x+1];
	s[1][1][2] = G[3][xy.y+1][xy.x+2]; s[1][2][0] = G[3][xy.y+2][xy.x+0];
	s[1][2][1] = G[3][xy.y+2][xy.x+1]; s[1][2][2] = G[3][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xFF010002, 0x00000001, 0xFF000000, 0x00000000);
	r0 = D(r0, s[0][0][1], 0x040503FE, 0x000402FF, 0x000100FF, 0xFF00FFFF);
	r0 = D(r0, s[0][0][2], 0x03FF0001, 0x06020100, 0x00000100, 0x01010100);
	r0 = D(r0, s[0][1][0], 0x01000105, 0x01000001, 0x0003FF05, 0x00000002);
	r0 = D(r0, s[0][1][1], 0x0AF209FF, 0x05F90405, 0x09FCF6FC, 0x0405FC02);
	r0 = D(r0, s[0][1][2], 0x06020501, 0x0BFB0BFF, 0x06FCFC01, 0x0BF7F6FE);
	r0 = D(r0, s[0][2][0], 0x00FF00FF, 0x00FF00FF, 0x01FD0002, 0x00FF0000);
	r0 = D(r0, s[0][2][1], 0x0106FFFF, 0x0003FF00, 0x05030201, 0x02FC0103);
	r0 = D(r0, s[0][2][2], 0xFE00FF00, 0x0004FF00, 0x01040000, 0x05090000);
	r0 = D(r0, s[1][0][0], 0x07FF00FD, 0x00FF00FF, 0x020000FF, 0xFE000000);
	r0 = D(r0, s[1][0][1], 0xF902FE00, 0x0001FEFE, 0x0000FFFF, 0x050000FE);
	r0 = D(r0, s[1][0][2], 0x01000200, 0x02010100, 0x00000000, 0xFF00FF00);
	r0 = D(r0, s[1][1][0], 0xFCF90100, 0x03FE0001, 0x03FC0004, 0x04FF0000);
	r0 = D(r0, s[1][1][1], 0x0C07FFF8, 0xF8FD03FB, 0xFF050708, 0xF000010A);
	r0 = D(r0, s[1][1][2], 0xFDFFFAFF, 0x0404F7FB, 0xFFFF0302, 0x08020803);
	r0 = D(r0, s[1][2][0], 0x00FF0100, 0x00000100, 0xFFFBFEFF, 0x01FFFF00);
	r0 = D(r0, s[1][2][1], 0x00010601, 0x01FF0201, 0x0604F700, 0x03FCFBFE);
	r0 = D(r0, s[1][2][2], 0x00000300, 0xFF020700, 0xFE000000, 0xFE03FB00);
	s[0][0][0] = G[4][xy.y+0][xy.x+0]; s[0][0][1] = G[4][xy.y+0][xy.x+1];
	s[0][0][2] = G[4][xy.y+0][xy.x+2]; s[0][1][0] = G[4][xy.y+1][xy.x+0];
	s[0][1][1] = G[4][xy.y+1][xy.x+1]; s[0][1][2] = G[4][xy.y+1][xy.x+2];
	s[0][2][0] = G[4][xy.y+2][xy.x+0]; s[0][2][1] = G[4][xy.y+2][xy.x+1];
	s[0][2][2] = G[4][xy.y+2][xy.x+2]; s[1][0][0] = G[5][xy.y+0][xy.x+0];
	s[1][0][1] = G[5][xy.y+0][xy.x+1]; s[1][0][2] = G[5][xy.y+0][xy.x+2];
	s[1][1][0] = G[5][xy.y+1][xy.x+0]; s[1][1][1] = G[5][xy.y+1][xy.x+1];
	s[1][1][2] = G[5][xy.y+1][xy.x+2]; s[1][2][0] = G[5][xy.y+2][xy.x+0];
	s[1][2][1] = G[5][xy.y+2][xy.x+1]; s[1][2][2] = G[5][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xFEFFFF02, 0x01010000, 0x00000000, 0x00010000);
	r0 = D(r0, s[0][0][1], 0x0D06FBFF, 0xF7FBFC03, 0x0501FF03, 0xFBFFFF01);
	r0 = D(r0, s[0][0][2], 0xFBFFFFFD, 0x0201FCFB, 0xFC000000, 0x03000003);
	r0 = D(r0, s[0][1][0], 0xFEFFFFFE, 0x01010000, 0xFCFEFE02, 0x02010001);
	r0 = D(r0, s[0][1][1], 0x03070703, 0xFFF900FC, 0x0D09FDF5, 0xFAF8FCFE);
	r0 = D(r0, s[0][1][2], 0x01FF0204, 0xFE01080B, 0xFEFEFE01, 0xFD02FDFA);
	r0 = D(r0, s[0][2][0], 0x0100FF00, 0xFF000000, 0x00FFFFFF, 0x000000FF);
	r0 = D(r0, s[0][2][1], 0x000001FE, 0x0000FF00, 0xFF020706, 0x00FE0002);
	r0 = D(r0, s[0][2][2], 0xFF0001FE, 0x00FF02FD, 0x000003FE, 0x01000903);
	r0 = D(r0, s[1][0][0], 0x02FFFDFB, 0x01FFFF00, 0x01FF0500, 0x01000202);
	r0 = D(r0, s[1][0][1], 0x02000200, 0x0300FEF9, 0x00FE03FF, 0x01FE05FD);
	r0 = D(r0, s[1][0][2], 0x00FF0101, 0x00FF0202, 0x00000000, 0x00FF0000);
	r0 = D(r0, s[1][1][0], 0x040205FE, 0x01FF02FF, 0x0401F7F9, 0x01FEFEFF);
	r0 = D(r0, s[1][1][1], 0x05070208, 0x06070405, 0x0506F708, 0x0606F2FE);
	r0 = D(r0, s[1][1][2], 0x01FE00FE, 0x03010101, 0x00FF0001, 0x0201FF05);
	r0 = D(r0, s[1][2][0], 0x00000000, 0x00000000, 0x02010200, 0x01000000);
	r0 = D(r0, s[1][2][1], 0x02FE01FE, 0x02FF0000, 0x04020200, 0x04020302);
	r0 = D(r0, s[1][2][2], 0x01FF0000, 0x01FF00FF, 0x01FF00FE, 0x020000FC);
	s[0][0][0] = G[6][xy.y+0][xy.x+0]; s[0][0][1] = G[6][xy.y+0][xy.x+1];
	s[0][0][2] = G[6][xy.y+0][xy.x+2]; s[0][1][0] = G[6][xy.y+1][xy.x+0];
	s[0][1][1] = G[6][xy.y+1][xy.x+1]; s[0][1][2] = G[6][xy.y+1][xy.x+2];
	s[0][2][0] = G[6][xy.y+2][xy.x+0]; s[0][2][1] = G[6][xy.y+2][xy.x+1];
	s[0][2][2] = G[6][xy.y+2][xy.x+2]; s[1][0][0] = G[7][xy.y+0][xy.x+0];
	s[1][0][1] = G[7][xy.y+0][xy.x+1]; s[1][0][2] = G[7][xy.y+0][xy.x+2];
	s[1][1][0] = G[7][xy.y+1][xy.x+0]; s[1][1][1] = G[7][xy.y+1][xy.x+1];
	s[1][1][2] = G[7][xy.y+1][xy.x+2]; s[1][2][0] = G[7][xy.y+2][xy.x+0];
	s[1][2][1] = G[7][xy.y+2][xy.x+1]; s[1][2][2] = G[7][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x01FF0205, 0x01000100, 0x00FFFE00, 0x0000FF01);
	r0 = D(r0, s[0][0][1], 0xFFFE00FD, 0xFEFE02FD, 0xFEFFFF01, 0x01FFFEFD);
	r0 = D(r0, s[0][0][2], 0xFFFF0000, 0x03FE0002, 0x00FF0000, 0x00FF0001);
	r0 = D(r0, s[0][1][0], 0xFD01EE00, 0xFE00F8FB, 0xFE000D07, 0x010008FC);
	r0 = D(r0, s[0][1][1], 0x0300F6FA, 0x0700EE0C, 0x07FD08F7, 0xFDFE0B06);
	r0 = D(r0, s[0][1][2], 0x0000FD01, 0xF500FBFD, 0xFEFF0102, 0x01FD0402);
	r0 = D(r0, s[0][2][0], 0x030003FF, 0xFF000200, 0x030101FD, 0xFE0002FE);
	r0 = D(r0, s[0][2][1], 0xF7040102, 0x010202FF, 0xF4050301, 0x0A030106);
	r0 = D(r0, s[0][2][2], 0x03020000, 0x03040000, 0x05020200, 0xF90504FC);
	r0 = D(r0, s[1][0][0], 0xFB04010A, 0x02FE0000, 0x02FB01F8, 0x01FF00FB);
	r0 = D(r0, s[1][0][1], 0x070B02F9, 0xF50D020B, 0xFE000103, 0xFBF901FD);
	r0 = D(r0, s[1][0][2], 0x00F80008, 0x04FF01FC, 0x010800F6, 0x020700FA);
	r0 = D(r0, s[1][1][0], 0x01EF01ED, 0xFFF900F4, 0xF70F0108, 0x000C000E);
	r0 = D(r0, s[1][1][1], 0xFF010206, 0x07F002FF, 0x0AF10302, 0x000303F9);
	r0 = D(r0, s[1][1][2], 0x010A00F8, 0xFE0C01F9, 0xFFF80006, 0x00EF010C);
	r0 = D(r0, s[1][2][0], 0x01070003, 0x00070006, 0x02FE0106, 0x00F700F9);
	r0 = D(r0, s[1][2][1], 0x00FA00FF, 0x000000FC, 0xFD0C00F9, 0x010A0009);
	r0 = D(r0, s[1][2][2], 0x00FE0002, 0x00FA0003, 0x01FF0002, 0x000300FC);
	s[0][0][0] = G[8][xy.y+0][xy.x+0]; s[0][0][1] = G[8][xy.y+0][xy.x+1];
	s[0][0][2] = G[8][xy.y+0][xy.x+2]; s[0][1][0] = G[8][xy.y+1][xy.x+0];
	s[0][1][1] = G[8][xy.y+1][xy.x+1]; s[0][1][2] = G[8][xy.y+1][xy.x+2];
	s[0][2][0] = G[8][xy.y+2][xy.x+0]; s[0][2][1] = G[8][xy.y+2][xy.x+1];
	s[0][2][2] = G[8][xy.y+2][xy.x+2]; s[1][0][0] = G[9][xy.y+0][xy.x+0];
	s[1][0][1] = G[9][xy.y+0][xy.x+1]; s[1][0][2] = G[9][xy.y+0][xy.x+2];
	s[1][1][0] = G[9][xy.y+1][xy.x+0]; s[1][1][1] = G[9][xy.y+1][xy.x+1];
	s[1][1][2] = G[9][xy.y+1][xy.x+2]; s[1][2][0] = G[9][xy.y+2][xy.x+0];
	s[1][2][1] = G[9][xy.y+2][xy.x+1]; s[1][2][2] = G[9][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xFF0401FE, 0x00FE0001, 0x000100FF, 0x00FF0001);
	r0 = D(r0, s[0][0][1], 0xFFFB0201, 0xFE0A0401, 0xFF000001, 0xFF040000);
	r0 = D(r0, s[0][0][2], 0xFF01FF00, 0xFFFBFFFF, 0x00000000, 0xFFFE0000);
	r0 = D(r0, s[0][1][0], 0xFE0105FA, 0xFFFF0204, 0xFE0506FC, 0x00FF0102);
	r0 = D(r0, s[0][1][1], 0xFEFCF70A, 0xFD02FEFC, 0xFEF7FD02, 0xFE090500);
	r0 = D(r0, s[0][1][2], 0xFF0200FE, 0xFFFFFDFF, 0xFF01FF00, 0xFFFAFCFE);
	r0 = D(r0, s[0][2][0], 0x0000FF00, 0x00000003, 0xFF0000FD, 0x00000105);
	r0 = D(r0, s[0][2][1], 0xFF000005, 0xFF00FEF6, 0xFE00FC0B, 0xFEFFFBF3);
	r0 = D(r0, s[0][2][2], 0x000000FE, 0xFF000004, 0xFF0100FD, 0xFF01FF04);
	r0 = D(r0, s[1][0][0], 0x00FFFFFD, 0x000900FF, 0x000100FF, 0x000400FF);
	r0 = D(r0, s[1][0][1], 0xFF0DFE05, 0x00EEFEFF, 0x00060003, 0x01F600FF);
	r0 = D(r0, s[1][0][2], 0xFFFC0001, 0xFE05FF05, 0xFEFD0001, 0xFE050002);
	r0 = D(r0, s[1][1][0], 0xFFF508FC, 0x000D0200, 0xFFFAFFFB, 0x000CFFFF);
	r0 = D(r0, s[1][1][1], 0xFE110903, 0xFCF20EF9, 0xFE110005, 0xFEEE00FC);
	r0 = D(r0, s[1][1][2], 0x04FD0004, 0x03FE0207, 0x02FC0003, 0x01010007);
	r0 = D(r0, s[1][2][0], 0x00F5FAFF, 0x0009FFFF, 0xFFF1FFFE, 0x000E00FF);
	r0 = D(r0, s[1][2][1], 0x0007FB00, 0xFFFFF6FD, 0xFF0CFE00, 0xFDFAFDFA);
	r0 = D(r0, s[1][2][2], 0x02000002, 0x02FE0002, 0x03FF0004, 0x03FD0005);
	s[0][0][0] = G[10][xy.y+0][xy.x+0]; s[0][0][1] = G[10][xy.y+0][xy.x+1];
	s[0][0][2] = G[10][xy.y+0][xy.x+2]; s[0][1][0] = G[10][xy.y+1][xy.x+0];
	s[0][1][1] = G[10][xy.y+1][xy.x+1]; s[0][1][2] = G[10][xy.y+1][xy.x+2];
	s[0][2][0] = G[10][xy.y+2][xy.x+0]; s[0][2][1] = G[10][xy.y+2][xy.x+1];
	s[0][2][2] = G[10][xy.y+2][xy.x+2]; s[1][0][0] = G[11][xy.y+0][xy.x+0];
	s[1][0][1] = G[11][xy.y+0][xy.x+1]; s[1][0][2] = G[11][xy.y+0][xy.x+2];
	s[1][1][0] = G[11][xy.y+1][xy.x+0]; s[1][1][1] = G[11][xy.y+1][xy.x+1];
	s[1][1][2] = G[11][xy.y+1][xy.x+2]; s[1][2][0] = G[11][xy.y+2][xy.x+0];
	s[1][2][1] = G[11][xy.y+2][xy.x+1]; s[1][2][2] = G[11][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x01210202, 0x001500F7, 0x00CC01FF, 0x00E101FC);
	r0 = D(r0, s[0][0][1], 0xFF30FDE8, 0x002AFF1A, 0xFFB900F4, 0x00BD000F);
	r0 = D(r0, s[0][0][2], 0x001E0112, 0xFF2F00F3, 0x00D6000B, 0x00C001F5);
	r0 = D(r0, s[0][1][0], 0xFEBCF506, 0xFDD6FEF9, 0x02440406, 0xFF2DFFF5);
	r0 = D(r0, s[0][1][1], 0x07A10EF3, 0x05A80205, 0x0160FBE8, 0x04570616);
	r0 = D(r0, s[0][1][2], 0xFFC2FD05, 0x00A80102, 0x003AFF0E, 0xFE59FAFB);
	r0 = D(r0, s[0][2][0], 0xFB2F0901, 0x001E0202, 0xF8DEFC03, 0xFDE906FE);
	r0 = D(r0, s[0][2][1], 0x003CFA04, 0xFA3900FC, 0x05D904FF, 0xFED9F0FC);
	r0 = D(r0, s[0][2][2], 0x002500FF, 0x01360001, 0x00EA0200, 0x02DD0803);
	r0 = D(r0, s[1][0][0], 0x0001F900, 0xFF00FE00, 0x01FEFD00, 0x00FE0000);
	r0 = D(r0, s[1][0][1], 0x06000000, 0x03010A00, 0x04FF0000, 0x04FF0200);
	r0 = D(r0, s[1][0][2], 0x03FF0000, 0x0600FE00, 0x01000000, 0x03000000);
	r0 = D(r0, s[1][1][0], 0xFEF9FDFF, 0xFFFAFCFF, 0xFE0AF901, 0xFF05FC01);
	r0 = D(r0, s[1][1][1], 0xFDF6FC00, 0xFDF80B00, 0x0109FE00, 0xFF0B1000);
	r0 = D(r0, s[1][1][2], 0x00FD0000, 0xFFF9FF00, 0x02070000, 0x0409FD00);
	r0 = D(r0, s[1][2][0], 0xFF0B00FC, 0x000500FD, 0xFFF901FC, 0xFFFCFEFD);
	r0 = D(r0, s[1][2][1], 0xFE0D0000, 0xFF0E01FF, 0xFDF4FE00, 0xFEF604FF);
	r0 = D(r0, s[1][2][2], 0xFF070000, 0xFE0B0001, 0xFFFA0000, 0xFEF60001);
	s[0][0][0] = G[12][xy.y+0][xy.x+0]; s[0][0][1] = G[12][xy.y+0][xy.x+1];
	s[0][0][2] = G[12][xy.y+0][xy.x+2]; s[0][1][0] = G[12][xy.y+1][xy.x+0];
	s[0][1][1] = G[12][xy.y+1][xy.x+1]; s[0][1][2] = G[12][xy.y+1][xy.x+2];
	s[0][2][0] = G[12][xy.y+2][xy.x+0]; s[0][2][1] = G[12][xy.y+2][xy.x+1];
	s[0][2][2] = G[12][xy.y+2][xy.x+2]; s[1][0][0] = G[13][xy.y+0][xy.x+0];
	s[1][0][1] = G[13][xy.y+0][xy.x+1]; s[1][0][2] = G[13][xy.y+0][xy.x+2];
	s[1][1][0] = G[13][xy.y+1][xy.x+0]; s[1][1][1] = G[13][xy.y+1][xy.x+1];
	s[1][1][2] = G[13][xy.y+1][xy.x+2]; s[1][2][0] = G[13][xy.y+2][xy.x+0];
	s[1][2][1] = G[13][xy.y+2][xy.x+1]; s[1][2][2] = G[13][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0x000000F8, 0x00030004, 0x00000002, 0x00000002);
	r0 = D(r0, s[0][0][1], 0x00FE0116, 0xFFFB00FD, 0x01000002, 0x00FF00F7);
	r0 = D(r0, s[0][0][2], 0x000001F1, 0x000003FB, 0x000000FA, 0x0000000F);
	r0 = D(r0, s[0][1][0], 0xFF08FF10, 0xFF0501FC, 0x0004FEFA, 0xFF0601FC);
	r0 = D(r0, s[0][1][1], 0x07FCF7E1, 0x02FDF209, 0x01FCFE00, 0x00F8F815);
	r0 = D(r0, s[0][1][2], 0xF800040F, 0xFDFE0503, 0xFE000406, 0xFEFF06E5);
	r0 = D(r0, s[0][2][0], 0xFF0001F7, 0x00FF0004, 0xFF040108, 0x00010005);
	r0 = D(r0, s[0][2][1], 0x05000211, 0xFF0002F7, 0x0AFEFEFC, 0x0101FDEB);
	r0 = D(r0, s[0][2][2], 0xFD0001F9, 0x02000201, 0xF90002FA, 0x01FE0413);
	r0 = D(r0, s[1][0][0], 0xFF000205, 0x00FFFE01, 0x000602FF, 0x0006FE00);
	r0 = D(r0, s[1][0][1], 0xFF05F2FE, 0x01030F04, 0x0101F6FD, 0x010209FD);
	r0 = D(r0, s[1][0][2], 0x010102FF, 0x010300FD, 0x00000200, 0x010000FF);
	r0 = D(r0, s[1][1][0], 0x0216FEF8, 0xFF0FFFFE, 0x01E8FF01, 0x00F1FFFF);
	r0 = D(r0, s[1][1][1], 0xF50BF600, 0x09120AF6, 0xF8F3F50B, 0x04EB0D09);
	r0 = D(r0, s[1][1][2], 0x03030101, 0xFF060204, 0x03FB01FF, 0x00F80103);
	r0 = D(r0, s[1][2][0], 0xFFF90002, 0x00FCFF01, 0xFF02FF01, 0xFFFEFE01);
	r0 = D(r0, s[1][2][1], 0x00FCF900, 0x02FA0702, 0xFB03F6FB, 0x08050AFC);
	r0 = D(r0, s[1][2][2], 0x00FE0100, 0x00FD0000, 0x01010100, 0xFE0201FF);
	s[0][0][0] = G[14][xy.y+0][xy.x+0]; s[0][0][1] = G[14][xy.y+0][xy.x+1];
	s[0][0][2] = G[14][xy.y+0][xy.x+2]; s[0][1][0] = G[14][xy.y+1][xy.x+0];
	s[0][1][1] = G[14][xy.y+1][xy.x+1]; s[0][1][2] = G[14][xy.y+1][xy.x+2];
	s[0][2][0] = G[14][xy.y+2][xy.x+0]; s[0][2][1] = G[14][xy.y+2][xy.x+1];
	s[0][2][2] = G[14][xy.y+2][xy.x+2]; s[1][0][0] = G[15][xy.y+0][xy.x+0];
	s[1][0][1] = G[15][xy.y+0][xy.x+1]; s[1][0][2] = G[15][xy.y+0][xy.x+2];
	s[1][1][0] = G[15][xy.y+1][xy.x+0]; s[1][1][1] = G[15][xy.y+1][xy.x+1];
	s[1][1][2] = G[15][xy.y+1][xy.x+2]; s[1][2][0] = G[15][xy.y+2][xy.x+0];
	s[1][2][1] = G[15][xy.y+2][xy.x+1]; s[1][2][2] = G[15][xy.y+2][xy.x+2];
	r0 = D(r0, s[0][0][0], 0xFD040301, 0xFFFC0000, 0xFF020000, 0x0001FF00);
	r0 = D(r0, s[0][0][1], 0x02FD06FE, 0xFF080700, 0x00FE0200, 0xFFFE0100);
	r0 = D(r0, s[0][0][2], 0x00010001, 0x00FC01FE, 0x00010000, 0x000101FF);
	r0 = D(r0, s[0][1][0], 0x0300FE00, 0x0008FF00, 0xFEF30401, 0xFEFD0000);
	r0 = D(r0, s[0][1][1], 0x00FCFA06, 0x05EFFCFF, 0x080D0200, 0x05030602);
	r0 = D(r0, s[0][1][2], 0xFF02FF07, 0xFE07FBF7, 0xFFFDFF05, 0x0101FFFB);
	r0 = D(r0, s[0][2][0], 0x01FD0000, 0x00FD0000, 0x0409FD00, 0x02FFFF01);
	r0 = D(r0, s[0][2][1], 0xFD030103, 0xFE0501FF, 0xF8F5FD07, 0xFD05FCFD);
	r0 = D(r0, s[0][2][2], 0x02000002, 0x00FE00FD, 0x0101FF05, 0xFDFCFEF8);
	r0 = D(r0, s[1][0][0], 0x00FA0C04, 0x01FEF502, 0xFD010700, 0xFF00F800);
	r0 = D(r0, s[1][0][1], 0x07F8FD02, 0x01F80204, 0xFA02FE00, 0xFB030100);
	r0 = D(r0, s[1][0][2], 0x01FE0000, 0x06FA0001, 0xFC000000, 0xFA000000);
	r0 = D(r0, s[1][1][0], 0xFD0009FC, 0xFF00F402, 0x02010C03, 0x01FFF402);
	r0 = D(r0, s[1][1][1], 0xFAFEFE01, 0xFAFE01F9, 0x0A0FFE05, 0x050A0203);
	r0 = D(r0, s[1][1][2], 0xFBFF0001, 0xF9FEFF03, 0x01010000, 0x07080002);
	r0 = D(r0, s[1][2][0], 0x000005FF, 0x0000F900, 0x000008FB, 0x0000F601);
	r0 = D(r0, s[1][2][1], 0x0100FFFE, 0x010002FD, 0xFFFEFEFD, 0xFFFF02F6);
	r0 = D(r0, s[1][2][2], 0x01000000, 0x01010000, 0x01000000, 0x00FEFF01);
	f0 = vec4(r0) * 6.20001240e-05;
	f0 += vec4(5.340e-10, -1.037e-08, 3.277e-09, -8.916e-09);
	f0 = tanh(f0);
	vec2 opt = 0.5 * LUMA_pt;
	vec2 fpos = (vec2(opos) + vec2(0.5)) * opt;
	imageStore(out_image, opos + ivec2(0, 0), vec4(f0.x + LUMA_tex(fpos + vec2(0.0, 0.0) * opt).r, 0.0, 0.0, 1.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(f0.y + LUMA_tex(fpos + vec2(1.0, 0.0) * opt).r, 0.0, 0.0, 1.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(f0.z + LUMA_tex(fpos + vec2(0.0, 1.0) * opt).r, 0.0, 0.0, 1.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(f0.w + LUMA_tex(fpos + vec2(1.0, 1.0) * opt).r, 0.0, 0.0, 1.0));
}
