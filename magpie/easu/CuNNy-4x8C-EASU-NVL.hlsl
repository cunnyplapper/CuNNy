// CuNNy 4x8C EASU NVL
// Copyright (c) 2024 cunnyplapper

// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public
// License along with this program.  If not, see <https://www.gnu.org/licenses/>.
/* ------------------------------------------------------------------- */

//!MAGPIE EFFECT
//!VERSION 3
//!OUTPUT_WIDTH INPUT_WIDTH * 2
//!OUTPUT_HEIGHT INPUT_HEIGHT * 2

//!TEXTURE
Texture2D INPUT;

//!TEXTURE
//!WIDTH INPUT_WIDTH * 2
//!HEIGHT INPUT_HEIGHT * 2
//!FORMAT R8_UNORM
Texture2D easu;

//!SAMPLER
//!FILTER POINT
SamplerState SP;

//!SAMPLER
//!FILTER LINEAR
SamplerState SL;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t1;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t2;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t3;

// FSR mpv | modified
// Copyright (c) 2021 Advanced Micro Devices, Inc. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// FidelityFX FSR v1.0.2 by AMD
// ported to mpv by agyild

//!PASS 1
//!DESC CuNNy-EASU
//!STYLE PS
//!IN INPUT
//!OUT easu

float GetLuma(float3 rgb) {
	return dot(float3(0.299, 0.587, 0.114), rgb);
}

float APrxLoRcpF1(float a) {
	return asfloat(uint(0x7ef07ebb) - asuint(a));
}

float APrxLoRsqF1(float a) {
	return asfloat(uint(0x5f347d74) - (asuint(a) >> uint(1)));
}

float AMin3F1(float x, float y, float z) {

	return min(x, min(y, z));
}

float AMax3F1(float x, float y, float z) {
	return max(x, max(y, z));
}

void tap(inout float aC, inout float aW, float2 off, float2 dir, float2 len,
         float lob, float clp, float c){
	float2 v;
	v.x = (off.x * ( dir.x)) + (off.y * dir.y);
	v.y = (off.x * (-dir.y)) + (off.y * dir.x);
	v *= len;
	float d2 = v.x * v.x + v.y * v.y;
	d2 = min(d2, clp);
	float wB = float(2.0 / 5.0) * d2 + -1.0;

	float wA = lob * d2 + -1.0;
	wB *= wB;
	wA *= wA;
	wB = float(25.0 / 16.0) * wB + float(-(25.0 / 16.0 - 1.0));
	float w = wB * wA;
	aC += c * w;
	aW += w;
}

void set(inout float2 dir, inout float len, float2 pp, bool biS, bool biT,
         bool biU, bool biV, float lA, float lB, float lC, float lD, float lE){

	float w = 0.0;
	if (biS)
		w = (1.0 - pp.x) * (1.0 - pp.y);
	if (biT)
		w =        pp.x  * (1.0 - pp.y);
	if (biU)
		w = (1.0 - pp.x) *        pp.y;

	if (biV)
		w =        pp.x  *        pp.y;
	float dc = lD - lC;
	float cb = lC - lB;
	float lenX = max(abs(dc), abs(cb));
	lenX = APrxLoRcpF1(lenX);
	float dirX = lD - lB;
	lenX = clamp(abs(dirX) * lenX, 0.0, 1.0);
	lenX *= lenX;
	float ec = lE - lC;

	float ca = lC - lA;
	float lenY = max(abs(ec), abs(ca));
	lenY = APrxLoRcpF1(lenY);
	float dirY = lE - lA;
	lenY = clamp(abs(dirY) * lenY, 0.0, 1.0);
	lenY *= lenY;
	dir += float2(dirX, dirY) * w;
	len += dot(float2(w, w), float2(lenX, lenY));
}

float4 Pass1(float2 pos) {
	float2 pt = float2(GetInputPt());
	float2 size = float2(GetInputSize());
	float4 pix = float4(0.0, 0.0, 0.0, 1.0);
	float2 pp = pos * size - float2(0.5, 0.5);
	float2 fp = floor(pp);
	pp -= fp;
	float b = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(0.5, -0.5)) * pt), 0).rgb);
	float c = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(1.5, -0.5)) * pt), 0).rgb);
	float e = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(-0.5, 0.5)) * pt), 0).rgb);
	float f = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 0.5, 0.5)) * pt), 0).rgb);
	float g = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 1.5, 0.5)) * pt), 0).rgb);
	float h = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 2.5, 0.5)) * pt), 0).rgb);
	float i = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(-0.5, 1.5)) * pt), 0).rgb);
	float j = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 0.5, 1.5)) * pt), 0).rgb);
	float k = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 1.5, 1.5)) * pt), 0).rgb);
	float l = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 2.5, 1.5)) * pt), 0).rgb);
	float n = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(0.5, 2.5) ) * pt), 0).rgb);
	float o = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(1.5, 2.5) ) * pt), 0).rgb);
	float4 bczzL = float4(b, c, 0.0, 0.0);
	float4 ijfeL = float4(i, j, f, e);
	float4 klhgL = float4(k, l, h, g);
	float4 zzonL = float4(0.0, 0.0, o, n);
	float bL = bczzL.x;
	float cL = bczzL.y;
	float iL = ijfeL.x;
	float jL = ijfeL.y;
	float fL = ijfeL.z;
	float eL = ijfeL.w;
	float kL = klhgL.x;
	float lL = klhgL.y;
	float hL = klhgL.z;
	float gL = klhgL.w;
	float oL = zzonL.z;
	float nL = zzonL.w;
	float2 dir = float2(0.0, 0.0);
	float len = 0.0;
	set(dir, len, pp, true, false, false, false, bL, eL, fL, gL, jL);
	set(dir, len, pp, false, true, false, false, cL, fL, gL, hL, kL);
	set(dir, len, pp, false, false, true, false, fL, iL, jL, kL, nL);
	set(dir, len, pp, false, false, false, true, gL, jL, kL, lL, oL);
	float2 dir2 = dir * dir;
	float dirR = dir2.x + dir2.y;
	bool zro = dirR < float(1.0 / 32768.0);
	dirR = APrxLoRsqF1(dirR);
	dirR = zro ? 1.0 : dirR;
	dir.x = zro ? 1.0 : dir.x;
	dir *= float2(dirR, dirR);
	len = len * 0.5;
	len *= len;
	float stretch = (dir.x * dir.x + dir.y * dir.y) * APrxLoRcpF1(max(abs(dir.x), abs(dir.y)));
	float2 len2 = float2(1.0 + (stretch - 1.0) * len, 1.0 + -0.5 * len);
	float lob = 0.5 + float((1.0 / 4.0 - 0.04) - 0.5) * len;
	float clp = APrxLoRcpF1(lob);
	float aC = 0.0;
	float aW = 0.0;
	tap(aC, aW, float2( 0.0,-1.0) - pp, dir, len2, lob, clp, bL);
	tap(aC, aW, float2( 1.0,-1.0) - pp, dir, len2, lob, clp, cL);
	tap(aC, aW, float2(-1.0, 1.0) - pp, dir, len2, lob, clp, iL);
	tap(aC, aW, float2( 0.0, 1.0) - pp, dir, len2, lob, clp, jL);
	tap(aC, aW, float2( 0.0, 0.0) - pp, dir, len2, lob, clp, fL);
	tap(aC, aW, float2(-1.0, 0.0) - pp, dir, len2, lob, clp, eL);
	tap(aC, aW, float2( 1.0, 1.0) - pp, dir, len2, lob, clp, kL);
	tap(aC, aW, float2( 2.0, 1.0) - pp, dir, len2, lob, clp, lL);
	tap(aC, aW, float2( 2.0, 0.0) - pp, dir, len2, lob, clp, hL);
	tap(aC, aW, float2( 1.0, 0.0) - pp, dir, len2, lob, clp, gL);
	tap(aC, aW, float2( 1.0, 2.0) - pp, dir, len2, lob, clp, oL);
	tap(aC, aW, float2( 0.0, 2.0) - pp, dir, len2, lob, clp, nL);
	pix.r = aC / aW;
	float min1 = min(AMin3F1(fL, gL, jL), kL);
	float max1 = max(AMax3F1(fL, gL, jL), kL);
	pix.r = clamp(pix.r, min1, max1);
	pix.r = clamp(pix.r, 0.0, 1.0);
	return pix;
}

//!PASS 2
//!DESC CuNNy-4x8C-EASU-NVL-in
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN INPUT
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) (dot(float3(1.714e-01, 3.292e-01, 7.689e-02), O(INPUT, float2(x, y)).rgb) + -3.301e-01)
float4 f0(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	V4 r = 0.0;
	r += V4(6.714e-02, 9.784e-02, 6.007e-02, 1.416e-02) * s0_0;
	r += V4(6.503e-02, -8.037e-02, -5.050e-01, 1.675e-01) * s0_1;
	r += V4(-2.504e-02, -4.074e-02, -1.722e-01, 1.792e-01) * s0_2;
	r += V4(-4.465e-01, -2.114e-01, -2.923e-02, -5.128e-01) * s0_3;
	r += V4(6.372e-02, -1.518e-01, -2.895e-02, -8.666e-02) * s0_4;
	r += V4(3.123e-02, 1.375e-01, 6.465e-01, 2.512e-01) * s0_5;
	r += V4(7.894e-02, -1.997e-01, 4.304e-03, 1.127e-01) * s0_6;
	r += V4(-8.758e-03, 2.032e-02, -2.215e-02, -2.170e-01) * s0_7;
	r += V4(-1.104e-03, 4.299e-01, 3.950e-02, 8.939e-02) * s0_8;
	r += V4(-5.459e-02, 1.516e-03, -8.651e-03, 1.204e-04);
	return r;
}
float4 f1(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	V4 r = 0.0;
	r += V4(6.214e-03, 4.454e-03, -4.481e-02, 3.952e-01) * s0_0;
	r += V4(1.273e-02, 1.035e-03, -1.531e-01, 2.953e-01) * s0_1;
	r += V4(-2.855e-02, -9.854e-03, 5.125e-03, -1.481e-01) * s0_2;
	r += V4(-3.601e-02, -1.966e-02, 1.445e-02, -4.403e-02) * s0_3;
	r += V4(-4.131e-01, 8.399e-02, 8.519e-01, -4.057e-01) * s0_4;
	r += V4(4.812e-01, 7.090e-01, -1.725e-02, -4.894e-02) * s0_5;
	r += V4(2.694e-02, 1.449e-02, -2.056e-01, -1.246e-01) * s0_6;
	r += V4(2.741e-01, -3.852e-01, -3.387e-01, -1.210e-01) * s0_7;
	r += V4(-3.232e-01, -3.998e-01, -1.071e-01, 2.056e-01) * s0_8;
	r += V4(9.988e-03, -6.096e-04, -1.497e-04, -2.997e-03);
	return r;
}
void Pass2(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	min16float s0_0 = l0(-1.0, -1.0);
	min16float s0_1 = l0(0.0, -1.0);
	min16float s0_2 = l0(1.0, -1.0);
	min16float s0_3 = l0(-1.0, 0.0);
	min16float s0_4 = l0(0.0, 0.0);
	min16float s0_5 = l0(1.0, 0.0);
	min16float s0_6 = l0(-1.0, 1.0);
	min16float s0_7 = l0(0.0, 1.0);
	min16float s0_8 = l0(1.0, 1.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
}
//!PASS 3
//!DESC CuNNy-4x8C-EASU-NVL-conv1
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2, t3
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-8.917e-02, -1.500e-01, -1.409e-01, 7.479e-03, 1.137e-02, -9.250e-03, -3.871e-01, -9.630e-02, -5.842e-02, -7.010e-02, 4.586e-02, 1.124e-01, -2.176e-01, -4.190e-01, 1.910e-01, 7.244e-02));
	r += mul(s0_1, M4(-1.171e-01, 1.897e-01, 7.054e-02, 3.493e-02, 1.223e-01, 8.308e-02, -3.467e-01, 1.313e-02, -1.496e-01, -1.286e-01, 1.308e-02, 4.042e-02, 1.527e-01, 8.034e-02, -4.690e-02, 5.012e-02));
	r += mul(s0_2, M4(2.176e-01, -1.301e-01, -4.143e-02, 1.642e-01, -2.822e-01, -5.187e-02, 1.705e-01, 9.732e-02, 4.165e-02, 3.283e-02, -3.164e-02, 3.664e-04, 1.700e-02, -1.623e-02, 1.047e-01, -1.026e-02));
	r += mul(s0_3, M4(-9.891e-02, -5.627e-02, -1.063e-02, 1.923e-01, -1.832e-02, -1.628e-01, -2.654e-01, 1.401e-01, -2.056e-01, -5.680e-01, -2.249e-01, 2.154e-01, 2.873e-01, -7.538e-03, 3.321e-01, -1.228e-02));
	r += mul(s0_4, M4(4.286e-01, -3.536e-01, -5.685e-01, 2.632e-01, -2.982e-01, -1.859e-01, 1.128e-01, -3.328e-01, -1.162e-01, 1.794e-01, 4.196e-02, 1.587e-01, -1.456e-01, -3.443e-01, 2.095e-01, -3.946e-02));
	r += mul(s0_5, M4(1.047e+00, -1.255e-01, -4.138e-01, -4.270e-01, -1.767e-01, 3.118e-02, -1.181e-01, -2.939e-01, 1.704e-01, -8.169e-02, -2.167e-02, 1.382e-01, 1.909e-01, 2.668e-01, -1.626e-01, -1.976e-02));
	r += mul(s0_6, M4(1.866e-01, -1.763e-01, -5.632e-02, 2.336e-01, 1.515e-01, 3.764e-02, 1.311e-01, 9.309e-04, -9.455e-02, 6.397e-01, 1.392e-01, 5.059e-03, -3.545e-01, -2.035e-01, 2.259e-01, -5.659e-02));
	r += mul(s0_7, M4(-5.292e-01, 1.709e-02, 2.891e-01, -1.373e-01, 1.312e-01, 1.987e-01, 1.283e-01, 1.397e-02, -3.529e-02, -2.051e-01, -6.153e-01, -5.872e-01, 2.202e-01, 6.453e-02, 4.476e-01, 1.093e-01));
	r += mul(s0_8, M4(-4.107e-01, -2.741e-01, 4.889e-01, -3.834e+00, 5.487e-02, 4.036e-02, -2.830e-02, -1.368e-01, -4.283e-02, -6.202e-02, -1.548e-01, 3.568e-01, 4.451e-02, -1.339e-01, 1.800e-01, -2.015e-01));
	r += mul(s1_0, M4(-1.045e-01, -1.558e-01, -5.270e-02, -7.620e-03, -2.218e-01, -7.126e-02, 8.562e-02, 6.734e-02, 3.930e-02, 8.315e-02, -6.204e-02, 6.762e-02, -2.683e-01, -4.619e-01, 1.998e-01, 1.130e-01));
	r += mul(s1_1, M4(-5.686e-02, 2.247e-01, 1.684e-01, -8.767e-02, 1.368e-01, -1.931e-01, 1.361e-01, 1.074e-02, -8.426e-02, -7.547e-02, -2.372e-03, -8.498e-02, 1.802e-01, 2.318e-01, -2.519e-01, 2.830e-02));
	r += mul(s1_2, M4(-9.640e-02, -1.453e-01, -8.855e-02, 9.125e-02, -8.787e-02, -4.291e-02, 2.056e-01, 1.333e-02, 7.055e-02, 2.689e-02, -8.253e-02, -3.725e-03, 6.965e-03, -9.056e-02, 1.759e-02, 7.961e-03));
	r += mul(s1_3, M4(-7.428e-02, -1.007e-01, -7.427e-02, 3.944e-02, -1.261e-01, -4.620e-01, 4.046e-01, 2.319e-01, -2.387e-01, -6.777e-01, 2.695e-01, 1.952e-02, 2.380e-01, 1.238e-01, -2.284e-01, 1.382e-02));
	r += mul(s1_4, M4(1.212e-01, 9.404e-02, -1.720e-03, 2.414e-03, -4.860e-02, -4.069e-01, 4.877e-01, 3.440e-01, -1.761e-01, 2.723e-01, -2.601e-01, 1.276e-01, -2.614e-01, -5.622e-01, -9.078e-02, -1.090e-01));
	r += mul(s1_5, M4(1.324e-01, 1.037e-01, 8.832e-02, 1.887e-01, -6.971e-03, -2.612e-03, 1.962e-02, -1.275e-01, 7.037e-02, -1.329e-01, 4.255e-02, 7.811e-02, 1.723e-01, 3.965e-01, -2.422e-01, 3.639e-02));
	r += mul(s1_6, M4(1.549e-01, 1.085e-01, -3.031e-01, 3.056e-02, 5.702e-03, -3.043e-02, 3.128e-01, 3.904e-03, -3.352e-01, -4.723e-01, 5.577e-01, 1.490e-01, -3.417e-01, -8.247e-02, 4.773e-02, -3.171e-01));
	r += mul(s1_7, M4(-1.320e-02, -1.123e-01, 3.133e-01, -3.865e-01, 1.930e-01, 1.024e-01, 2.529e-01, 1.049e-01, -9.303e-02, 2.437e-01, -4.359e-01, -1.647e-01, -1.302e-01, 1.635e-01, 3.656e-03, 1.978e-01));
	r += mul(s1_8, M4(-1.264e-02, 3.563e-02, -7.353e-02, -5.048e-03, 4.927e-02, -4.669e-03, -8.090e-02, -3.115e-01, -2.086e-02, -4.055e-02, -5.799e-04, 2.900e-01, -1.860e-01, -5.661e-02, 8.381e-02, -1.449e-01));
	r += mul(s2_0, M4(-1.196e-01, 1.523e-01, -2.107e-01, 8.571e-02, -6.730e-01, -1.528e-01, 3.330e-01, 4.110e-02, -8.477e-02, 3.303e-02, 2.283e-01, 3.917e-02, 1.399e-01, 1.213e-01, -3.514e-02, -1.595e-02));
	r += mul(s2_1, M4(1.504e-01, -9.844e-02, 1.471e-02, -3.478e-02, -9.890e-03, 9.029e-02, -2.153e-01, 1.952e-01, 5.488e-01, -1.340e-02, -8.315e-02, -1.005e-01, 1.278e-01, 1.636e-01, -1.845e-01, 5.403e-02));
	r += mul(s2_2, M4(-2.748e-02, 5.417e-02, -4.333e-02, 8.962e-02, -6.779e-03, -1.273e-01, 4.379e-03, 5.357e-02, 7.836e-02, -1.541e-02, 2.330e-02, -1.415e-01, -7.110e-02, 1.827e-02, -9.879e-02, -1.266e-01));
	r += mul(s2_3, M4(-1.978e-01, -6.049e-01, 2.240e-01, -1.040e-01, -4.033e-01, -5.796e-01, 2.699e-01, 1.340e-01, 2.857e-01, 7.832e-01, -3.908e-01, 1.574e-01, -5.197e-01, -5.872e-01, -1.332e-01, 4.663e-02));
	r += mul(s2_4, M4(-1.264e-01, 2.946e-01, -2.484e-01, 1.757e-01, -1.464e-01, -3.773e-01, 2.069e-01, -4.590e-02, 6.894e-01, -3.251e-01, 4.834e-01, -9.592e-02, -5.800e-02, 2.054e-01, -1.682e-01, -2.008e-02));
	r += mul(s2_5, M4(2.716e-02, -5.933e-02, 1.528e-01, -2.549e-01, -1.755e-02, -5.335e-02, -1.143e-01, 2.248e-01, 1.141e-02, 7.254e-02, -2.837e-02, -4.725e-01, 3.367e-02, -1.165e-01, -5.361e-02, 1.417e-01));
	r += mul(s2_6, M4(2.498e-01, -1.764e-01, 4.307e-02, 1.878e-01, 3.623e-01, -6.221e-02, -3.080e-02, -2.667e-01, -1.834e-01, -1.156e-01, -2.568e-01, -9.007e-02, 9.310e-02, -1.058e-01, -3.917e-01, 2.114e-01));
	r += mul(s2_7, M4(4.206e-02, 2.253e-01, 1.884e-01, -7.211e-02, 2.786e-01, 1.442e-01, 1.745e-01, -2.139e-02, -5.327e-01, -1.140e-01, -1.361e-01, 7.627e-01, 3.343e-01, 2.771e-01, 2.173e-01, -4.118e-01));
	r += mul(s2_8, M4(-1.273e-01, -1.982e-02, -7.233e-02, -5.330e-03, 1.469e-01, 5.204e-02, 7.349e-02, -1.733e-01, -9.478e-02, -5.002e-02, 1.013e-01, -1.810e-01, 2.934e-02, 3.422e-02, -1.721e-01, -1.878e-01));
	r += mul(s3_0, M4(-1.915e-01, 1.173e-01, 1.973e-01, -6.729e-02, -1.068e-01, -7.538e-02, -6.811e-02, 2.448e-02, 1.448e-01, 3.564e-01, -5.055e-02, 1.106e-02, -2.138e-02, 3.834e-02, 7.332e-02, -8.061e-03));
	r += mul(s3_1, M4(1.870e-01, -1.715e-01, 1.412e-01, -2.826e-01, 3.253e-03, 1.268e-01, -1.532e-01, 5.289e-02, 2.905e-01, -1.669e-01, 5.850e-02, -1.621e-01, 2.054e-01, 1.138e-01, 2.881e-02, 8.135e-02));
	r += mul(s3_2, M4(1.519e-01, 2.972e-02, 4.936e-02, -1.260e-01, -5.067e-02, -7.219e-02, 6.089e-02, -3.679e-03, 1.583e-02, 1.017e-01, -6.226e-02, -9.266e-02, -4.979e-02, -5.597e-02, -4.162e-02, -1.070e-01));
	r += mul(s3_3, M4(-1.116e+00, 1.894e-01, -4.599e-01, -1.962e-01, 3.102e-01, 2.355e-01, -2.296e-01, 1.264e-01, 2.813e-01, 5.782e-01, -3.848e-01, -1.190e-04, -3.389e-01, -4.170e-01, 9.360e-02, 8.879e-03));
	r += mul(s3_4, M4(2.158e-01, 4.025e-01, -9.829e-02, 5.863e-01, -4.005e-02, -1.981e-01, -4.234e-02, -2.138e-01, -8.253e-01, -2.398e-01, 4.498e-01, -6.292e-02, -7.748e-02, -1.779e-02, -4.434e-02, 1.910e-01));
	r += mul(s3_5, M4(-9.619e-02, -5.528e-02, 3.693e-02, -2.853e-01, -7.001e-02, 5.360e-03, -6.739e-03, 2.270e-01, -8.767e-02, -1.318e-01, -3.754e-02, -1.963e-01, -5.563e-02, -5.830e-02, 2.647e-01, 1.595e-01));
	r += mul(s3_6, M4(-2.959e-01, -3.018e-01, -9.757e-02, 7.880e-02, -7.349e-02, -7.760e-02, 1.587e-01, 2.739e-01, -1.542e-01, 4.164e-02, -1.629e-01, -1.330e-01, 2.179e-01, -1.395e-01, -1.822e-01, 1.064e-01));
	r += mul(s3_7, M4(-5.058e-02, 1.662e-01, 2.733e-01, -5.565e-02, 2.447e-02, 1.028e-01, 2.406e-01, 4.209e-01, 1.061e-01, -1.767e-02, -1.436e-01, 2.944e-02, 1.263e-01, 2.329e-01, 8.579e-01, -2.646e-01));
	r += mul(s3_8, M4(-1.444e-01, -8.962e-02, -5.983e-02, -2.601e-01, 5.759e-02, 1.136e-01, 4.624e-02, -2.373e-01, 3.481e-02, -6.092e-02, -8.909e-02, -2.503e-01, 7.668e-03, 4.274e-02, 2.786e-01, -1.242e-02));
	r += V4(2.314e-03, -1.024e-03, -4.848e-03, -5.748e-03);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(2.649e-02, -6.386e-02, -9.337e-02, 1.698e-01, 1.097e-01, -5.852e-03, 2.427e-01, -2.068e-02, -1.052e-04, -5.749e-02, 6.488e-02, -3.512e-02, -2.609e-03, 6.144e-02, -8.122e-02, 6.307e-04));
	r += mul(s0_1, M4(-1.846e-01, 6.780e-02, 4.977e-03, -1.627e-01, -1.332e-01, -1.723e-01, -1.818e-01, 1.898e-01, 6.664e-02, 3.137e-02, 8.762e-02, -2.160e-01, -8.577e-02, -2.456e-02, 3.169e-01, 4.565e-03));
	r += mul(s0_2, M4(9.219e-02, -2.952e-02, 2.926e-02, 2.823e-02, 4.935e-02, -2.885e-01, -5.029e-02, 2.474e-01, 4.325e-02, 1.073e-01, -8.432e-02, -2.021e-02, 1.509e-04, 1.039e-01, 5.960e-02, -1.916e-01));
	r += mul(s0_3, M4(1.031e-01, -2.747e-01, -8.733e-02, 1.720e-01, 1.941e-02, -1.309e-02, -5.744e-01, -1.058e-01, -2.207e-01, 4.562e-02, 2.600e-01, 2.696e-01, -3.140e-01, -5.971e-02, 1.697e-01, -6.172e-02));
	r += mul(s0_4, M4(-1.109e-01, -2.185e-01, -2.004e-01, -2.678e-01, -1.530e-01, 1.824e-01, -3.724e-01, -1.005e-03, -4.595e-01, -6.074e-01, -1.439e-01, 1.645e-01, 4.531e-01, -1.689e-01, 1.597e-01, -1.385e-01));
	r += mul(s0_5, M4(-1.965e-01, 3.462e-01, -7.147e-01, 6.144e-01, -1.431e-01, -1.909e-01, -2.798e-01, 4.773e-01, 1.792e-01, 3.917e-01, 1.542e-01, -1.773e-01, -1.078e-01, -3.574e-01, -2.947e-02, 1.152e-03));
	r += mul(s0_6, M4(2.166e-02, -1.176e-01, -2.262e-01, 3.551e-01, -4.156e-02, -6.064e-02, -1.198e-01, 8.823e-02, 3.383e-01, 5.199e-03, -6.056e-01, 3.341e-01, 7.400e-02, 9.085e-03, 3.991e-01, 6.252e-02));
	r += mul(s0_7, M4(6.860e-01, 2.213e-02, -3.642e-01, -6.366e-01, -1.750e-01, -2.645e-01, -4.827e-02, 5.509e-02, -5.245e-01, 8.950e-02, -2.282e-01, 1.561e-03, 1.801e-01, -7.051e-02, 3.608e-01, 2.314e-01));
	r += mul(s0_8, M4(2.909e-01, -7.407e-02, 5.990e-01, 3.395e-01, 7.146e-02, -1.014e-01, 2.025e-02, 2.173e-01, 8.348e-02, 2.486e-01, -1.735e-01, -1.018e-01, -1.418e-01, -1.196e-01, 2.607e-01, -3.261e-01));
	r += mul(s1_0, M4(-2.414e-02, 3.988e-02, 1.414e-01, 3.246e-02, -4.988e-03, 1.722e-02, 3.011e-01, -1.304e-01, 1.714e-02, 3.971e-02, 8.125e-02, 1.647e-01, -2.622e-02, 7.082e-02, -1.096e-01, -9.667e-03));
	r += mul(s1_1, M4(1.773e-02, 1.300e-01, 3.358e-02, 3.529e-02, -1.694e-01, -1.010e-01, 1.674e-01, -4.863e-02, -1.057e-02, 1.415e-02, 2.270e-01, -3.838e-01, -1.087e-01, 5.933e-02, 1.667e-01, 1.204e-01));
	r += mul(s1_2, M4(1.255e-01, 3.023e-02, 4.490e-02, -5.052e-02, 8.718e-02, -1.217e-01, 1.854e-01, -1.017e-01, -2.780e-02, 9.010e-02, -1.054e-01, 3.625e-02, 6.004e-02, 9.409e-02, -9.506e-02, -1.719e-01));
	r += mul(s1_3, M4(-2.741e-02, -2.532e-02, -5.491e-02, 7.593e-02, 7.487e-02, 2.865e-02, 2.575e-01, -1.615e-01, 4.017e-02, -4.155e-02, -2.737e-02, 1.155e-01, -1.723e-01, -5.145e-02, -2.667e-01, -2.632e-02));
	r += mul(s1_4, M4(-1.549e-01, -1.658e-01, -4.139e-02, -3.174e-01, 4.533e-01, 1.606e-01, 2.825e-03, -2.095e-01, -5.574e-01, -2.512e-01, -1.106e-01, 1.170e-03, 9.941e-02, -4.039e-02, -1.910e-01, 5.485e-01));
	r += mul(s1_5, M4(-2.355e-01, 1.967e-01, 2.998e-01, 3.178e-02, -4.627e-02, -1.719e-01, 1.210e-01, -1.097e-01, 1.007e-01, 2.166e-01, 9.057e-02, -1.095e-01, -1.455e-01, -3.805e-01, -2.095e-01, 1.354e-01));
	r += mul(s1_6, M4(1.894e-02, -3.038e-02, 1.578e-02, 2.844e-02, -1.343e-02, -1.583e-02, 2.048e-03, 3.350e-02, 2.585e-02, 1.443e-01, -1.695e-02, 3.317e-03, 5.424e-03, -3.904e-02, -2.423e-01, 1.732e-01));
	r += mul(s1_7, M4(1.742e-01, -6.265e-02, -2.982e-01, 2.992e-02, -1.428e-02, -1.529e-01, 3.152e-01, -2.037e-01, 8.677e-01, -2.746e-01, 1.382e-01, -3.863e-01, -8.719e-02, 5.963e-02, -4.520e-01, 3.057e-01));
	r += mul(s1_8, M4(8.965e-02, -6.421e-02, -1.343e-01, 1.175e-01, 2.758e-02, -7.728e-03, 1.549e-01, -1.308e-02, 5.812e-02, 2.017e-01, -1.538e-01, -2.036e-01, -1.470e-01, -1.056e-01, -2.233e-01, 4.741e-01));
	r += mul(s2_0, M4(3.790e-02, -4.677e-02, -1.787e-01, 1.885e-02, 8.259e-02, 1.428e-01, 2.955e-01, -2.677e-01, 7.921e-02, 1.204e-01, 3.577e-02, -1.865e-01, -3.330e-03, -3.059e-02, -6.455e-02, 1.125e-02));
	r += mul(s2_1, M4(-6.404e-04, 7.588e-02, 3.540e-01, -2.134e-01, 1.791e-01, 1.520e+00, 9.618e-02, 1.028e-01, -1.642e-02, 1.950e-01, 3.128e-02, 3.899e-01, 5.931e-02, 3.293e-02, 1.846e-01, 1.152e-01));
	r += mul(s2_2, M4(1.069e-01, -1.218e-01, -7.911e-02, 1.899e-01, 5.828e-02, 2.003e-01, 8.011e-02, -2.260e-02, -2.912e-01, 8.484e-02, 2.288e-01, -1.408e-01, -8.213e-02, -5.115e-02, -4.641e-02, -5.165e-02));
	r += mul(s2_3, M4(2.763e-01, 9.303e-02, 6.633e-02, 1.140e-02, 2.500e-02, 5.137e-02, 2.451e-01, -2.794e-01, 3.408e-02, 2.037e-02, -3.596e-02, -1.601e-01, -1.126e-01, 1.448e-01, 8.388e-02, 8.593e-02));
	r += mul(s2_4, M4(-4.552e-01, -2.039e-01, -8.974e-02, -2.643e-01, 9.753e-01, 2.174e-01, 5.288e-01, -1.241e-01, 5.042e-01, 2.932e-01, -6.424e-01, 1.509e-01, -1.114e-02, -6.849e-02, -8.670e-02, 3.016e-01));
	r += mul(s2_5, M4(2.492e-01, 1.316e-01, -8.396e-02, 3.247e-02, -2.104e-01, -2.276e-02, -1.069e-02, -4.746e-02, -5.044e-01, -6.206e-01, -2.309e-01, -1.312e-01, -2.085e-01, 1.677e-01, -1.838e-01, 2.648e-01));
	r += mul(s2_6, M4(-1.970e-01, 2.106e-02, -3.699e-01, 2.281e-01, 4.216e-02, -2.556e-02, 4.567e-02, 1.532e-01, 4.010e-02, 7.542e-02, -4.196e-02, 5.223e-02, -1.422e-01, -4.520e-02, -1.489e-01, 9.961e-02));
	r += mul(s2_7, M4(-6.815e-02, 6.837e-02, 7.963e-02, -1.043e-02, 2.753e-01, 6.417e-02, 1.072e-01, 9.286e-03, -4.543e-01, 8.078e-02, -3.942e-02, -7.426e-01, 1.450e-01, 2.639e-01, -4.912e-01, 9.395e-01));
	r += mul(s2_8, M4(9.149e-02, -1.323e-01, 2.228e-01, -1.779e-02, -7.218e-02, -3.126e-02, 1.111e-01, -4.347e-02, 2.432e-01, -2.783e-01, -1.955e-01, 4.815e-01, -2.461e-01, -2.549e-01, -1.809e-01, 4.175e-01));
	r += mul(s3_0, M4(-2.889e-02, 8.449e-02, -2.982e-01, -4.794e-01, 2.180e-01, -1.255e-01, -4.507e-01, 2.197e-01, -2.585e-02, 1.062e-01, -1.030e-01, 1.032e-02, 1.577e-02, 5.208e-02, -5.884e-03, 3.238e-02));
	r += mul(s3_1, M4(6.447e-02, 2.050e-01, -7.819e-02, -1.815e-01, -1.816e-01, -4.583e-01, -1.958e-01, -1.665e-01, -8.857e-02, -9.548e-02, 7.793e-02, 3.147e-02, 7.640e-02, -3.801e-02, 8.376e-02, -8.947e-02));
	r += mul(s3_2, M4(-3.076e-01, 3.282e-01, -3.218e-02, -7.233e-02, 5.730e-02, 2.131e-01, 1.136e-01, -1.273e-01, -4.782e-02, 1.192e-01, -3.542e-03, 2.016e-01, -2.204e-02, 5.974e-02, -8.700e-03, -2.008e-01));
	r += mul(s3_3, M4(3.330e-03, 2.967e-01, 1.598e-01, 4.720e-01, 5.185e-02, -1.664e-01, -2.348e-01, -2.638e-01, 2.936e-02, 7.694e-02, 1.763e-01, 2.062e-02, 3.607e-02, 8.419e-02, 2.189e-01, -1.014e-01));
	r += mul(s3_4, M4(1.701e-01, -2.705e-01, 1.996e-01, 4.910e-01, -7.322e-01, -2.309e-01, -6.116e-01, 3.659e-01, 3.685e-01, 4.452e-01, 4.650e-01, -4.242e-02, -2.608e-01, 1.528e-02, 3.592e-02, 6.035e-02));
	r += mul(s3_5, M4(-2.955e-02, 3.244e-01, 2.918e-01, 1.168e-01, -1.899e-01, 2.081e-02, 8.369e-02, -3.033e-01, -8.677e-02, -8.730e-02, -1.095e-01, 4.873e-01, 1.745e-02, 1.534e-01, 2.666e-01, -1.863e-01));
	r += mul(s3_6, M4(-3.466e-01, 1.207e-01, 1.571e-01, -7.947e-02, -1.439e-01, 2.119e-02, -1.593e-01, -1.764e-01, 6.773e-02, 6.896e-02, -2.499e-03, 7.596e-02, -1.645e-01, -1.427e-02, 2.357e-02, -2.475e-01));
	r += mul(s3_7, M4(-2.188e-01, 1.606e-01, 2.556e-02, 2.452e-01, 1.702e-01, 1.314e-01, -2.300e-01, 5.018e-01, -2.219e-01, 4.101e-02, 3.799e-01, -4.561e-01, 4.602e-01, -1.061e-02, -4.421e-02, 3.479e-01));
	r += mul(s3_8, M4(-8.493e-02, 4.580e-02, 2.159e-01, -1.684e-01, -6.035e-02, -9.907e-03, -1.966e-02, 1.244e-01, 1.832e-01, -4.100e-01, 6.299e-02, 1.330e-02, 2.421e-02, -5.841e-02, 3.211e-01, -3.228e-01));
	r += V4(2.447e-03, -1.989e-04, -7.936e-03, -6.890e-03);
	return r;
}
void Pass3(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t3[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 4
//!DESC CuNNy-4x8C-EASU-NVL-conv2
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t2, t3
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t2, float2(x, y))
#define l1(x, y) O(t3, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(1.277e-02, 3.974e-02, 7.152e-03, -1.035e-02, -8.241e-02, -7.204e-02, -3.042e-02, -7.296e-02, 1.137e-01, 5.179e-03, 6.022e-02, -9.427e-02, -1.197e-01, 5.851e-01, 1.652e-01, -1.714e-02));
	r += mul(s0_1, M4(5.863e-02, 1.029e-01, -2.958e-02, -3.301e-02, -2.549e-01, -3.869e-02, -2.863e-03, 4.733e-03, -1.543e-02, 7.311e-02, -4.701e-02, -2.483e-01, -6.997e-01, -2.317e-01, 1.571e-01, 1.378e-01));
	r += mul(s0_2, M4(1.191e-01, 1.047e-01, -4.357e-02, -8.247e-02, -2.021e-01, -2.060e-02, -5.116e-02, -1.171e-01, -2.639e-02, -6.320e-03, 1.460e-01, -1.126e-01, 1.244e-01, 4.813e-02, -5.871e-02, -1.491e-01));
	r += mul(s0_3, M4(9.679e-02, 6.270e-04, -7.969e-02, -5.378e-02, 8.522e-02, -6.469e-02, 6.175e-02, -6.244e-02, 1.427e-01, 4.957e-02, 1.059e-01, -4.268e-02, 7.987e-02, -3.717e-02, -1.388e-01, -1.897e-01));
	r += mul(s0_4, M4(-5.683e-01, 3.971e-01, 7.108e-02, -3.662e-02, 2.836e-01, -1.321e-02, 8.966e-02, 3.516e-01, -2.942e-02, -6.421e-02, 9.135e-01, 1.757e-02, 3.201e-01, -2.163e-01, -2.885e-01, -9.529e-01));
	r += mul(s0_5, M4(1.929e-01, -2.102e-01, 2.939e-01, 2.425e-01, -2.629e-01, 3.157e-01, 5.182e-02, 2.426e-01, -4.697e-03, -7.055e-02, 4.027e-01, -3.899e-02, 1.282e-01, -8.672e-02, 3.305e-02, -3.074e-02));
	r += mul(s0_6, M4(-7.007e-03, 5.568e-02, 1.019e-01, 4.467e-02, 2.056e-01, -9.102e-02, -8.396e-02, 1.307e-01, 1.146e-01, -1.571e-02, 4.827e-03, -1.551e-02, -2.458e-02, -2.248e-02, -4.486e-02, -4.910e-02));
	r += mul(s0_7, M4(1.161e-01, 1.250e-01, 1.997e-01, 1.678e-01, -1.998e-01, -1.948e-01, -1.460e-01, 2.961e-02, -1.160e-01, -7.539e-02, -1.665e-01, 6.349e-03, 2.063e-01, -5.916e-02, -7.071e-02, 2.761e-02));
	r += mul(s0_8, M4(-8.311e-03, -5.913e-02, 2.509e-02, 3.676e-02, -2.027e-01, -1.238e-01, 2.295e-02, -6.992e-02, 1.333e-01, -1.061e-01, -7.167e-03, -1.724e-01, 1.353e-01, -9.892e-03, 3.394e-02, -5.523e-02));
	r += mul(s1_0, M4(-2.776e-01, 6.487e-02, 3.451e-02, 4.165e-02, 8.141e-03, -7.104e-02, -2.073e-02, -3.479e-02, -1.345e-02, -6.960e-02, -3.279e-02, -1.530e-01, 1.822e-01, -1.377e-01, -2.042e-01, -9.447e-02));
	r += mul(s1_1, M4(-5.530e-01, 8.717e-02, 3.163e-02, -2.052e-02, 1.361e-01, 2.811e-02, -1.745e-01, -2.916e-02, -2.503e-02, 1.597e-01, -1.007e-01, -2.374e-02, 3.239e-01, 1.291e-01, -4.674e-02, 2.174e-01));
	r += mul(s1_2, M4(-2.448e-02, -5.555e-02, -2.159e-02, 2.726e-02, 1.427e-01, 5.507e-02, 5.037e-02, -9.056e-03, 2.053e-01, 4.307e-02, -2.437e-02, -1.641e-01, -3.525e-02, -4.609e-02, 4.586e-02, 1.084e-01));
	r += mul(s1_3, M4(1.035e-01, 3.026e-02, -7.362e-02, 6.907e-02, 1.530e-02, 1.389e-01, 1.077e-01, -4.714e-02, 2.623e-01, 3.301e-02, 3.290e-02, 3.345e-02, 5.793e-02, 7.296e-02, 1.782e-01, 6.714e-02));
	r += mul(s1_4, M4(-5.814e-02, 1.304e-01, 3.773e-01, -1.977e-01, -4.485e-01, 6.948e-01, 3.684e-01, -5.272e-02, 1.948e-01, -3.046e-01, 7.297e-01, 5.852e-01, -1.154e-01, 2.014e-02, -6.209e-03, 5.370e-02));
	r += mul(s1_5, M4(4.460e-01, -3.716e-01, 3.413e-01, -1.072e-02, -4.387e-01, 6.501e-02, 2.083e-01, 1.667e-02, 1.741e-01, -5.652e-02, 1.222e-01, 4.652e-02, -1.187e-03, 5.750e-02, 1.413e-02, -1.142e-01));
	r += mul(s1_6, M4(7.936e-02, 6.068e-02, 8.928e-02, -2.294e-01, 1.686e-01, -4.112e-02, -1.248e-01, -2.950e-02, 5.899e-02, 4.665e-02, -5.481e-03, 4.767e-02, -7.616e-02, -1.834e-02, -3.337e-02, -8.951e-03));
	r += mul(s1_7, M4(-2.137e-02, 2.358e-01, -1.136e-01, -6.795e-02, -2.398e-02, -2.803e-02, 1.191e-01, -9.113e-02, -8.603e-02, -4.961e-03, -3.933e-01, -5.548e-02, 3.746e-02, 2.739e-03, 5.269e-02, 5.790e-02));
	r += mul(s1_8, M4(-2.717e-01, 5.076e-02, -1.007e-02, -2.183e-01, 1.235e-01, -1.360e-01, 4.671e-02, -8.661e-02, -7.384e-02, -8.947e-03, 1.310e-01, 1.377e-01, -2.779e-02, 6.839e-03, 2.571e-02, -2.349e-02));
	r += mul(s2_0, M4(3.096e-01, 9.755e-02, -1.715e-01, -5.954e-02, 1.017e-02, 3.735e-02, 2.393e-03, -1.472e-02, 3.093e-02, -2.831e-02, -9.756e-02, -3.118e-02, 5.560e-02, -2.481e-02, -3.742e-02, -9.036e-02));
	r += mul(s2_1, M4(5.475e-02, 2.509e-01, -1.333e-01, -3.570e-03, 1.297e-02, -3.916e-02, -1.438e-02, 5.310e-02, 6.673e-02, 1.353e-01, 1.415e-01, 9.610e-02, -1.255e-01, 3.966e-02, 1.368e-03, -9.910e-03));
	r += mul(s2_2, M4(6.018e-02, 7.707e-03, -7.007e-02, -9.408e-03, -5.279e-02, 1.340e-02, -1.993e-04, -2.783e-02, 5.007e-02, -5.142e-02, 5.025e-02, -4.605e-02, -7.711e-02, 6.079e-03, -1.111e-02, -1.009e-01));
	r += mul(s2_3, M4(-6.479e-02, 5.075e-01, -3.796e-02, -3.862e-02, 5.311e-02, -9.891e-02, -1.194e-01, 9.952e-02, -2.289e-01, -2.100e-02, 3.538e-04, -9.432e-02, -2.493e-02, -3.952e-02, 3.370e-01, 8.061e-02));
	r += mul(s2_4, M4(-1.062e-01, 5.922e-02, 1.106e-02, 2.212e-01, 2.644e-01, -1.896e-01, 7.082e-02, 2.121e-01, -2.688e-01, 3.349e-01, -9.057e-02, 4.259e-01, 4.884e-01, -6.931e-02, 4.243e-01, 5.411e-01));
	r += mul(s2_5, M4(-2.312e-02, 1.775e-02, 2.295e-02, 1.960e-01, -6.373e-02, 6.702e-02, -1.028e-01, -2.432e-02, -1.086e-01, 4.141e-03, 1.258e-01, -1.972e-01, -1.590e-01, -3.530e-02, 1.302e-01, 1.501e-01));
	r += mul(s2_6, M4(-8.137e-02, -3.104e-02, 2.026e-01, -9.650e-03, 1.097e-01, 8.221e-02, 5.645e-02, 1.057e-01, 4.233e-02, -1.224e-01, 8.893e-02, -1.629e-01, -1.053e-01, -7.057e-02, -8.633e-02, -1.452e-01));
	r += mul(s2_7, M4(1.686e-01, -1.062e-01, 1.802e-01, -6.097e-02, -4.897e-02, 1.597e-01, 1.996e-02, -4.062e-02, 2.613e-01, -3.879e-02, -1.832e-02, -8.571e-02, 9.489e-02, 5.196e-02, 9.740e-02, 9.431e-03));
	r += mul(s2_8, M4(8.334e-02, 3.847e-02, -4.213e-03, -1.092e-01, -7.982e-02, 1.303e-02, 1.811e-02, 9.836e-02, -5.234e-02, 3.287e-02, 3.753e-02, -5.907e-02, -5.712e-02, 3.043e-02, 4.244e-02, -8.256e-02));
	r += mul(s3_0, M4(-5.640e-02, -1.498e-01, -9.010e-02, 1.263e-01, -1.349e-01, -4.409e-02, 8.839e-02, 4.843e-02, 1.932e-02, 1.034e-02, 1.226e-02, -9.106e-02, 1.584e-01, -5.902e-02, -3.798e-01, -6.886e-02));
	r += mul(s3_1, M4(1.403e-01, 1.269e-01, 1.012e-03, -6.728e-02, 3.111e-02, 1.431e-02, -1.830e-01, 5.339e-02, -6.916e-02, -4.940e-02, 7.783e-02, 3.448e-02, -2.232e-02, 1.178e-01, 7.477e-02, 1.663e-01));
	r += mul(s3_2, M4(1.395e-01, -5.607e-02, -1.543e-02, -6.601e-03, -1.161e-01, -5.292e-03, 1.529e-03, -1.392e-01, -1.430e-01, -1.212e-02, 1.149e-01, -1.545e-02, 7.309e-02, 1.365e-02, -1.637e-02, -1.566e-02));
	r += mul(s3_3, M4(-4.873e-01, -2.893e-02, -2.307e-01, 7.609e-02, 6.632e-01, 1.104e+00, -3.289e-01, 6.266e-03, 8.474e-02, -1.430e-01, 1.596e-01, -1.920e-01, -1.522e-01, 2.242e-01, -1.168e-01, 3.973e-01));
	r += mul(s3_4, M4(-4.481e-01, -1.975e-01, 7.480e-03, 2.315e-02, 2.938e-01, -4.698e-02, 7.959e-02, 2.607e-01, 3.800e-01, 4.146e-01, -4.519e-01, 1.618e-01, -1.531e-02, 1.989e-01, 1.228e-01, 6.465e-01));
	r += mul(s3_5, M4(-1.630e-01, -4.633e-02, 1.270e-02, 1.491e-01, -9.877e-04, 3.188e-02, -7.181e-02, -5.840e-02, -3.549e-02, -4.161e-02, 7.044e-02, 3.884e-02, -2.319e-01, -6.791e-02, 1.752e-01, 2.565e-01));
	r += mul(s3_6, M4(-7.350e-02, -3.856e-02, 3.502e-01, 2.705e-02, 6.074e-01, -1.826e-02, 5.290e-01, 3.379e-01, 2.892e-02, -8.161e-02, 1.065e-01, -9.987e-02, 5.516e-02, -8.828e-02, 4.989e-02, 4.021e-03));
	r += mul(s3_7, M4(-1.230e-01, -7.650e-02, 1.682e-01, 9.358e-02, 2.628e-01, 5.251e-02, 2.443e-01, 1.777e-01, 2.665e-01, 1.630e-02, 8.745e-02, -1.511e-01, 1.501e-02, 6.420e-02, -5.233e-02, -5.903e-03));
	r += mul(s3_8, M4(-5.432e-02, -1.141e-02, -4.760e-02, 9.037e-02, 4.139e-02, -3.615e-02, -1.651e-02, 1.029e-01, -5.025e-02, 9.142e-03, 6.781e-02, -7.349e-02, -1.518e-01, 1.083e-02, 2.737e-02, 5.104e-02));
	r += V4(1.009e-03, -3.208e-03, 8.461e-03, 2.082e-03);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-3.371e-03, 1.744e-02, 5.655e-02, 5.958e-02, 6.718e-02, 1.736e-03, -8.558e-02, -1.728e-02, -1.034e-02, -1.922e-02, -1.188e-01, -2.258e-03, 1.499e-01, 1.497e-01, 3.436e-02, -2.475e-02));
	r += mul(s0_1, M4(5.750e-02, 1.847e-01, -7.640e-02, 3.354e-02, -5.642e-02, -1.264e-01, 6.850e-02, -1.303e-03, 1.662e-02, -7.805e-03, -1.221e-01, 1.294e-01, 6.353e-02, 1.022e-01, -7.099e-02, -1.389e-01));
	r += mul(s0_2, M4(2.633e-02, 1.140e-01, -2.731e-03, -8.929e-02, -1.412e-01, -1.575e-01, 1.617e-01, 4.989e-02, 3.165e-01, -8.601e-02, -3.612e-01, 1.214e-01, -1.795e-01, 2.843e-01, 1.887e-01, 6.649e-02));
	r += mul(s0_3, M4(-1.028e-01, 1.369e-01, 5.698e-02, -2.799e-02, 1.995e-02, -2.705e-01, -2.680e-03, 9.342e-02, 2.450e-02, 6.411e-02, -1.426e-01, -2.830e-02, 6.004e-03, 2.164e-01, -1.427e-01, -1.331e-01));
	r += mul(s0_4, M4(-1.528e-01, 4.267e-01, 1.744e-01, 7.427e-02, 1.237e-01, -5.451e-01, 1.139e-01, -1.837e-01, 9.501e-02, -3.804e-02, -4.679e-01, -2.752e-01, 2.218e-01, -1.407e-03, 4.159e-01, -1.770e-02));
	r += mul(s0_5, M4(1.258e-01, 2.451e-01, -1.177e-01, 2.722e-02, 2.244e-01, -5.881e-01, 4.087e-01, 1.653e-01, 4.996e-01, -2.421e-02, -6.781e-01, -9.587e-02, 7.892e-02, 2.626e-01, 2.833e-01, 8.051e-02));
	r += mul(s0_6, M4(-5.606e-02, 6.663e-02, -6.856e-02, 1.272e-01, -3.607e-03, -9.358e-02, 5.696e-02, -9.774e-02, 2.401e-02, 3.032e-02, -5.235e-02, -1.208e-01, -7.731e-02, -5.520e-02, -4.488e-02, -5.369e-02));
	r += mul(s0_7, M4(-1.937e-01, 2.379e-01, 2.659e-02, -2.240e-01, 9.745e-03, -1.420e-01, 5.729e-02, 1.789e-02, 1.373e-02, 7.875e-02, 4.235e-02, 1.365e-01, -8.406e-02, 9.664e-02, -2.520e-01, -1.973e-01));
	r += mul(s0_8, M4(7.726e-03, 7.986e-02, 2.287e-02, 3.235e-01, 2.005e-01, -4.707e-02, -3.002e-01, 3.690e-03, 2.575e-01, 3.469e-02, -5.879e-01, -9.324e-02, 7.420e-03, -4.966e-02, -6.065e-02, -6.071e-02));
	r += mul(s1_0, M4(7.850e-02, -1.009e-01, 1.342e-02, -8.361e-02, -8.742e-03, 4.602e-02, 1.885e-02, 2.947e-02, 1.006e-01, -6.323e-02, -8.081e-02, 7.141e-03, -1.373e-01, 1.646e-01, 9.672e-02, 7.390e-02));
	r += mul(s1_1, M4(3.341e-01, -2.562e-01, 2.126e-01, 7.688e-02, -3.198e-01, 2.912e-01, 2.643e-02, 7.131e-02, -1.342e-01, 1.773e-01, 1.842e-02, 4.618e-02, 1.363e-01, -1.547e-01, 3.022e-02, 1.137e-01));
	r += mul(s1_2, M4(2.686e-01, -5.127e-01, 1.943e-02, -3.146e-01, 1.288e-01, 8.732e-02, -8.560e-02, 1.528e-01, -8.421e-02, -5.095e-02, 9.931e-02, -2.274e-02, 1.062e-01, 2.035e-02, -1.153e-01, 6.470e-02));
	r += mul(s1_3, M4(-6.436e-02, -2.158e-02, -1.770e-01, -2.525e-01, 4.716e-02, -8.877e-02, -3.125e-02, 6.987e-02, -8.013e-03, -1.284e-01, 5.016e-02, 1.562e-01, 2.608e-02, 5.672e-02, 3.881e-02, 9.009e-02));
	r += mul(s1_4, M4(-2.588e-01, -3.897e-01, -1.245e-01, -1.288e-01, 1.775e-01, 3.732e-01, -4.457e-01, -2.079e-02, -1.400e-02, -2.868e-01, 1.893e-02, -2.749e-01, 5.552e-02, -9.083e-02, 2.024e-01, 4.272e-01));
	r += mul(s1_5, M4(-3.290e-01, -2.687e-01, -6.505e-01, -6.497e-01, 8.690e-01, -2.006e-02, 3.352e-02, 3.594e-01, -4.382e-01, -1.385e-01, 8.065e-02, -1.369e-01, -8.012e-02, -9.335e-03, -1.020e-01, 1.247e-01));
	r += mul(s1_6, M4(3.042e-02, -5.494e-02, -6.975e-02, -1.162e-01, 4.533e-02, 3.774e-02, 2.297e-04, -2.484e-02, 2.766e-02, -9.998e-03, -5.347e-02, 2.594e-02, -6.273e-02, -3.119e-02, 1.206e-01, 5.417e-02));
	r += mul(s1_7, M4(4.680e-02, 1.807e-01, 2.667e-03, -3.781e-01, 5.181e-02, 1.762e-02, 1.494e-01, 5.530e-02, -1.423e-02, -1.091e-01, 2.904e-01, 1.568e-01, 9.774e-03, -1.251e-02, -4.022e-02, 6.140e-03));
	r += mul(s1_8, M4(6.112e-01, -1.111e-01, -7.072e-02, -8.768e-02, 6.121e-02, -6.323e-02, -4.687e-01, -1.194e-02, 1.191e-01, -3.896e-02, 7.587e-02, 2.872e-02, 1.354e-03, 3.839e-03, -3.912e-02, 1.238e-02));
	r += mul(s2_0, M4(-3.378e-02, -2.219e-01, 1.749e-01, 1.102e-01, -2.311e-02, 5.719e-02, -5.528e-02, -6.811e-02, -6.589e-03, 1.480e-01, -1.021e-02, 1.115e-01, -6.779e-02, 8.844e-02, -4.627e-02, 6.393e-02));
	r += mul(s2_1, M4(-1.400e-01, 8.698e-02, 7.535e-02, 5.708e-02, 8.187e-02, 5.341e-02, -2.464e-02, -1.557e-02, -2.029e-01, 2.184e-01, 1.703e-02, -3.329e-02, -3.668e-02, 2.644e-02, 9.883e-03, -3.345e-02));
	r += mul(s2_2, M4(-1.750e-02, -3.369e-02, -2.839e-02, -1.084e-01, -5.520e-02, -1.291e-02, -1.085e-04, 6.498e-02, 1.286e-01, -4.621e-02, -8.438e-02, -6.483e-03, -5.260e-02, 3.333e-02, -8.862e-02, -3.103e-02));
	r += mul(s2_3, M4(1.460e-01, 1.166e-01, 1.216e-01, 2.030e-01, -1.110e-01, 2.848e-01, 6.657e-02, 2.973e-02, 1.688e-01, -5.374e-02, 4.214e-02, 6.170e-02, 8.482e-02, -2.647e-02, -1.601e-01, -2.755e-02));
	r += mul(s2_4, M4(2.767e-01, -7.601e-02, -5.039e-02, 1.091e-02, 4.258e-02, -1.625e-02, -1.942e-02, -5.281e-02, 2.096e-01, 2.127e-01, -2.855e-01, 3.224e-01, -2.920e-01, 1.118e-01, -2.529e-01, -2.078e-01));
	r += mul(s2_5, M4(7.072e-02, 1.067e-01, 1.045e-01, 1.861e-01, -6.762e-02, 1.005e-02, 7.878e-02, 5.710e-02, -1.691e-01, 2.058e-02, -1.935e-01, -1.308e-01, -3.162e-02, -7.426e-02, -2.349e-01, -4.978e-02));
	r += mul(s2_6, M4(3.688e-02, -1.157e-01, -4.303e-02, 9.779e-02, 1.665e-01, 2.838e-01, 3.882e-01, -1.493e-01, -2.844e-02, -1.346e-01, -5.771e-02, 1.321e-01, 8.600e-02, -2.066e-01, 5.105e-03, 1.942e-01));
	r += mul(s2_7, M4(1.044e-02, -1.548e-01, -1.905e-01, 2.867e-01, 1.446e-02, -1.632e-01, 2.144e-01, 5.227e-02, -1.311e-02, -1.349e-01, -2.520e-01, 4.307e-01, 6.238e-02, -5.691e-02, -1.091e-01, 6.519e-02));
	r += mul(s2_8, M4(-3.849e-02, -7.240e-02, 4.283e-02, 6.126e-02, 2.893e-02, 6.364e-02, 1.443e-02, -5.138e-03, -4.736e-02, -5.634e-02, 8.386e-02, 2.774e-01, -2.197e-02, -3.829e-02, 1.548e-02, 1.548e-01));
	r += mul(s3_0, M4(-8.619e-02, -8.018e-03, -9.969e-02, -8.716e-02, 2.971e-01, -1.721e-01, 4.148e-02, -4.726e-02, 3.976e-02, 1.074e-01, -7.625e-02, 3.295e-02, -4.281e-02, 9.851e-02, 1.354e-01, 2.090e-01));
	r += mul(s3_1, M4(-6.238e-02, 2.737e-01, -6.187e-02, -1.749e-01, 1.580e-02, -1.117e-01, -3.133e-02, 1.519e-02, -1.349e-02, -1.025e-01, -3.366e-04, -6.342e-03, -1.483e-01, 1.808e-02, 4.055e-01, 2.124e-02));
	r += mul(s3_2, M4(7.504e-02, 4.263e-02, -5.257e-02, -2.285e-02, -1.461e-01, 3.667e-02, -4.511e-02, 1.129e-02, 1.042e-01, -4.696e-03, -1.073e-01, -1.495e-02, -1.121e-01, 3.091e-02, -2.106e-02, -2.612e-02));
	r += mul(s3_3, M4(2.027e-01, 3.112e-01, -1.456e-01, -1.193e-01, -2.981e-01, 5.527e-01, 1.401e-01, -2.805e-02, 3.730e-02, -5.903e-02, -3.592e-03, 5.321e-02, -2.861e-02, 3.946e-01, 4.992e-01, -6.176e-02));
	r += mul(s3_4, M4(-1.269e-03, 1.248e-01, -5.795e-01, -4.698e-01, 4.522e-01, -1.957e-01, 4.393e-02, -9.856e-02, 6.494e-02, 1.530e-01, 2.880e-02, -4.602e-02, 1.144e-01, 5.206e-02, 2.009e-01, 9.745e-02));
	r += mul(s3_5, M4(4.377e-02, 1.865e-01, 7.998e-02, -2.769e-02, -1.959e-01, -2.315e-04, 1.755e-01, 8.639e-02, 2.427e-01, -8.903e-02, -2.710e-01, -3.881e-02, 1.206e-01, 1.932e-02, 1.606e-01, 1.935e-02));
	r += mul(s3_6, M4(4.622e-02, 2.858e-01, 2.710e-02, -4.163e-01, -2.815e-01, 3.805e-02, -1.600e-01, 1.363e-01, -6.983e-02, -5.066e-02, -1.348e-01, -7.687e-02, -1.405e-01, -1.440e-01, 2.243e-01, 3.644e-01));
	r += mul(s3_7, M4(4.639e-03, 7.059e-02, -3.040e-01, -1.038e-02, 8.223e-02, 1.544e-01, -3.350e-01, 2.420e-01, 5.359e-02, 1.991e-02, -2.261e-01, 7.198e-02, -6.877e-02, -1.323e-01, 1.688e-01, 3.342e-01));
	r += mul(s3_8, M4(-6.088e-02, 2.979e-02, 3.533e-02, -6.256e-02, -5.027e-02, 1.264e-02, 2.236e-02, -4.116e-02, 4.871e-02, -4.020e-02, -5.998e-03, 2.220e-01, -2.697e-02, -4.459e-02, 1.716e-01, 2.774e-01));
	r += V4(6.310e-04, 9.022e-03, -7.090e-03, 1.491e-02);
	return r;
}
void Pass4(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 5
//!DESC CuNNy-4x8C-EASU-NVL-conv3
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2, t3
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-2.434e-01, -4.744e-03, -5.880e-02, 1.558e-01, -4.467e-02, -2.707e-01, -2.385e-01, 1.761e-01, -8.533e-02, 8.812e-02, 2.456e-01, -4.327e-02, 5.177e-02, -1.683e-01, -2.007e-01, 8.813e-02));
	r += mul(s0_1, M4(-1.938e-01, -8.138e-02, 3.329e-02, 2.303e-01, -1.097e-01, 1.346e-01, -1.859e-02, 4.458e-02, 3.252e-01, 1.033e-01, -3.545e-01, 1.627e-01, -2.803e-01, 4.146e-01, 3.381e-01, -3.996e-02));
	r += mul(s0_2, M4(2.834e-03, 7.064e-02, -2.127e-02, 6.903e-02, 4.680e-02, 1.775e-02, 7.150e-02, -5.504e-02, -1.095e-01, 7.589e-02, -1.266e-02, -5.935e-02, -4.156e-02, 2.620e-01, 1.705e-01, -1.082e-02));
	r += mul(s0_3, M4(-1.179e-01, -2.568e-01, 2.302e-01, 2.588e-01, 2.584e-03, -4.015e-01, -2.083e-01, 6.716e-02, -6.730e-02, 1.824e-01, -1.441e-02, 3.822e-02, -2.494e-01, -3.326e-01, 6.348e-01, -1.928e-01));
	r += mul(s0_4, M4(1.397e-01, -1.121e+00, -2.892e-01, 1.688e-01, -3.844e-01, 2.028e-01, -1.689e-01, -3.757e-01, -5.323e-02, -2.172e-01, -2.841e-01, 2.302e-01, -2.726e-01, 2.453e-01, 1.292e-01, -2.560e-01));
	r += mul(s0_5, M4(-2.801e-01, 5.460e-02, 1.230e-01, 1.679e-01, 4.321e-02, 1.029e-01, -4.674e-02, -3.458e-01, 2.179e-01, 2.097e-02, 1.768e-01, -5.476e-03, -1.842e-01, 6.045e-02, 6.343e-04, -1.421e-01));
	r += mul(s0_6, M4(3.463e-03, 4.429e-02, 5.108e-03, 1.237e-01, -1.656e-01, -3.624e-02, 3.057e-01, -1.704e-01, 6.075e-02, -1.937e-02, -6.605e-02, 5.310e-02, -9.592e-02, 6.305e-02, 1.752e-01, -1.105e-01));
	r += mul(s0_7, M4(-1.103e-01, -1.052e-01, 3.541e-02, -1.816e-02, 4.911e-02, 5.675e-02, -4.320e-01, -1.125e-01, 5.086e-02, -1.103e-01, -9.388e-02, 1.831e-01, -1.315e-01, 2.479e-01, 4.696e-02, -2.763e-01));
	r += mul(s0_8, M4(-2.165e-01, 3.558e-02, -1.750e-03, 4.119e-01, 2.198e-01, -1.472e-01, -3.416e-02, 1.039e-02, -3.195e-02, 5.315e-02, 3.101e-02, -2.135e-02, 1.188e-01, -3.148e-03, -5.063e-02, -5.124e-02));
	r += mul(s1_0, M4(6.814e-02, -2.274e-02, -7.349e-02, 4.590e-02, 1.526e-02, -9.822e-02, -6.860e-02, 2.014e-02, -4.508e-02, 1.488e-02, -7.544e-02, -1.254e-02, 1.402e-01, -4.915e-02, 5.552e-02, -1.626e-01));
	r += mul(s1_1, M4(-3.949e-02, -1.205e-01, -1.908e-02, -4.076e-02, 3.402e-02, 2.874e-02, -1.980e-02, 1.670e-02, -2.945e-01, -5.997e-02, 2.383e-01, 5.524e-02, 1.635e-01, 1.608e-01, -9.623e-02, -3.107e-02));
	r += mul(s1_2, M4(-4.791e-02, 1.601e-01, 4.088e-02, -3.095e-02, 9.718e-03, -1.366e-01, -5.542e-02, 4.880e-03, -1.029e-01, -2.073e-01, 1.748e-02, 3.990e-02, 1.297e-02, 8.312e-02, -1.139e-03, -1.458e-02));
	r += mul(s1_3, M4(-4.205e-02, -1.912e-01, -1.508e-01, 7.961e-02, 9.417e-03, 5.293e-02, 1.354e-01, -1.202e-01, 4.242e-01, 1.417e-02, -4.560e-02, 8.748e-03, -6.000e-02, 6.249e-02, 8.569e-02, -1.426e-01));
	r += mul(s1_4, M4(-2.222e-02, 1.774e-02, -4.446e-02, 6.517e-02, 4.700e-01, 1.769e-01, -2.236e-01, -1.868e-01, 8.925e-01, -2.014e-01, 1.933e-01, 1.695e-01, 8.062e-02, 7.307e-02, -3.071e-01, 1.624e-01));
	r += mul(s1_5, M4(-1.530e-02, 8.085e-02, 1.876e-02, -9.515e-02, -9.151e-02, -3.414e-01, 9.639e-02, 7.228e-02, 3.848e-01, -4.294e-01, 3.124e-03, 1.370e-01, -1.606e-01, 1.453e-01, 1.410e-01, -4.141e-02));
	r += mul(s1_6, M4(-7.945e-02, -1.098e-03, 2.019e-01, -1.314e-01, -7.321e-02, 1.033e-01, -5.115e-02, 4.282e-02, 7.500e-02, 5.127e-03, -2.276e-01, 1.318e-01, 2.515e-02, 2.290e-02, -1.600e-02, 2.212e-02));
	r += mul(s1_7, M4(3.828e-03, -2.818e-03, -2.374e-01, -1.597e-01, 1.832e-02, -1.687e-02, -8.766e-02, -1.280e-01, -4.228e-03, -2.998e-02, -1.422e-01, 3.049e-01, -5.619e-02, 4.118e-02, 1.142e-01, 2.483e-02));
	r += mul(s1_8, M4(-2.735e-02, -3.144e-02, 4.757e-02, 7.250e-02, 2.415e-02, 4.055e-02, 9.610e-02, 2.524e-02, 1.080e-02, -1.492e-01, 7.393e-02, 4.961e-02, 4.164e-02, 2.848e-02, 1.117e-02, -1.015e-01));
	r += mul(s2_0, M4(-7.990e-02, 2.977e-01, 7.198e-02, 1.819e-01, -8.733e-03, 1.683e-01, 1.868e-01, -5.067e-02, -4.779e-03, 2.678e-01, 1.828e-01, -1.986e-01, 1.650e-01, -2.947e-02, -6.578e-02, -2.464e-02));
	r += mul(s2_1, M4(-4.051e-02, 1.823e-01, -3.209e-02, -6.853e-03, -5.248e-02, -4.115e-02, -1.568e-02, -4.978e-02, 3.490e-02, -1.646e-01, -4.531e-02, -2.779e-02, 1.633e-01, -1.330e-02, 1.367e-01, 6.287e-02));
	r += mul(s2_2, M4(-1.057e-01, -2.328e-03, 3.493e-02, -1.931e-02, -1.258e-01, -1.126e-01, -4.488e-02, 8.043e-02, -9.495e-02, 9.973e-03, 8.903e-02, -4.652e-02, 1.337e-01, 5.438e-02, -7.820e-02, 7.009e-02));
	r += mul(s2_3, M4(-3.729e-01, 1.150e-01, -3.232e-01, 3.481e-01, 1.773e-01, -8.485e-02, -1.102e-01, 1.418e-01, 2.810e-01, 3.034e-01, 2.204e-01, -1.644e-01, 1.280e-01, -2.445e-01, 9.383e-02, 4.645e-03));
	r += mul(s2_4, M4(-6.546e-01, 3.551e-01, 1.595e-01, 3.174e-01, -1.075e-01, 1.055e-01, 3.158e-01, -3.654e-02, 3.290e-01, -2.254e-01, 3.242e-01, -1.013e-01, 3.404e-02, 4.641e-02, 3.779e-01, 1.437e-03));
	r += mul(s2_5, M4(-2.067e-02, 2.030e-01, -1.346e-02, 1.065e-02, -6.306e-03, -1.233e-01, 9.455e-02, -1.644e-01, 9.398e-02, -1.817e-02, 2.064e-02, -1.546e-02, -3.845e-02, -1.115e-01, 4.758e-02, 1.015e-01));
	r += mul(s2_6, M4(-4.543e-02, 3.904e-02, 1.477e-01, -7.078e-02, 4.041e-03, 1.523e-02, 2.228e-01, -1.831e-01, 8.377e-02, 4.711e-02, -4.426e-02, -2.253e-02, 5.043e-02, -2.759e-02, 8.253e-02, -2.393e-02));
	r += mul(s2_7, M4(1.826e-01, 2.214e-01, -3.003e-01, -1.988e-01, -1.185e-01, 1.773e-01, 1.499e-01, 1.656e-01, 1.129e-01, -5.285e-02, 2.088e-01, -1.364e-01, -6.068e-02, 8.073e-02, -3.257e-02, 6.646e-02));
	r += mul(s2_8, M4(5.437e-02, -5.315e-02, -5.281e-02, 6.784e-02, 3.267e-02, -1.150e-01, 5.247e-03, 1.398e-01, -7.075e-02, 1.806e-03, 7.156e-02, 1.991e-03, -2.656e-02, 5.085e-03, 1.855e-02, 3.050e-02));
	r += mul(s3_0, M4(-4.328e-02, 1.407e-01, -2.108e-02, -5.262e-02, -9.887e-02, 1.986e-01, 6.751e-02, -6.667e-02, -1.301e-01, -7.717e-02, -3.325e-02, 6.502e-02, 1.063e-01, -7.616e-02, -2.266e-01, 2.075e-02));
	r += mul(s3_1, M4(-3.543e-02, 1.608e-01, 3.117e-02, 1.023e-02, -1.672e-01, -3.905e-02, 1.095e-01, 3.410e-02, -7.356e-02, 2.647e-01, -2.005e-02, -4.419e-02, -4.557e-01, -2.080e-02, 4.311e-02, 1.373e-01));
	r += mul(s3_2, M4(-5.636e-02, -9.508e-02, -4.023e-02, 8.936e-02, -1.660e-01, -1.551e-01, 1.013e-01, 1.747e-02, -6.165e-02, -1.255e-01, 3.914e-02, -3.821e-02, 9.871e-02, 1.756e-01, 3.043e-02, -1.094e-01));
	r += mul(s3_3, M4(1.800e-02, 3.326e-01, 1.053e-01, -1.017e-01, -1.175e-02, -3.624e-02, -1.862e-01, 2.156e-01, -3.602e-02, 1.741e-02, -2.869e-02, 1.698e-02, 4.567e-02, -1.322e-01, 1.363e-01, -1.664e-02));
	r += mul(s3_4, M4(-1.241e-01, -2.463e-01, 1.450e-01, -6.870e-02, -4.333e-01, -2.006e-01, 2.861e-01, 1.070e-01, -6.947e-02, -1.608e-01, -2.062e-02, -6.126e-02, -1.018e-01, 1.936e-01, 6.486e-03, -4.188e-01));
	r += mul(s3_5, M4(-5.348e-02, -5.883e-02, -2.119e-02, -6.352e-02, 5.950e-02, 1.830e-02, -1.701e-01, 1.370e-01, 1.948e-02, -1.370e-02, -2.228e-02, -5.468e-02, 1.379e-02, -4.353e-02, 4.077e-02, 4.753e-02));
	r += mul(s3_6, M4(4.688e-02, 1.623e-01, -1.268e-01, 2.306e-01, -1.018e-01, 8.012e-03, -1.827e-02, -3.967e-02, 2.570e-02, 1.248e-02, 7.635e-03, 7.527e-02, 4.641e-02, -1.474e-02, 7.787e-02, -9.383e-02));
	r += mul(s3_7, M4(-8.581e-03, -4.540e-02, -7.838e-02, 1.971e-02, -3.897e-01, 1.191e-01, 1.927e-01, 3.658e-02, 5.650e-02, -2.386e-02, -5.128e-02, -5.004e-02, -8.242e-02, 1.186e-01, 5.033e-02, -1.172e-03));
	r += mul(s3_8, M4(6.002e-03, -1.219e-01, -4.082e-02, 1.107e-01, 1.523e-02, -1.294e-01, -4.112e-02, -2.164e-02, -4.643e-02, -8.178e-02, -1.393e-02, 4.698e-02, 1.825e-03, -2.832e-02, 7.963e-03, 1.538e-02));
	r += V4(-2.004e-03, 2.154e-03, -3.184e-03, -2.480e-03);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(7.487e-02, -8.736e-03, 2.144e-01, 2.608e-02, 2.443e-01, 1.033e-01, 4.579e-02, 7.631e-02, 1.650e-02, -2.590e-02, -9.196e-02, 1.788e-02, 1.909e-01, 3.291e-02, -2.939e-01, 3.988e-01));
	r += mul(s0_1, M4(-1.799e-01, 1.443e-01, 1.557e-01, 4.998e-01, 1.531e-01, -7.628e-02, -1.081e-01, -1.176e-01, 2.160e-01, -3.096e-03, 1.657e-01, 8.375e-02, 1.438e-01, -6.064e-02, 9.107e-02, 2.763e-03));
	r += mul(s0_2, M4(4.922e-02, 2.234e-02, 1.388e-01, 1.138e-02, 1.147e-03, 1.876e-02, 2.194e-04, -4.476e-02, -5.605e-02, 7.884e-02, -2.060e-02, -5.326e-02, 2.359e-01, -8.961e-02, -6.519e-02, -7.419e-02));
	r += mul(s0_3, M4(-9.404e-02, 3.832e-02, 6.637e-02, -1.974e-01, 4.944e-02, 1.212e-01, -3.526e-01, 1.771e-01, -8.398e-02, -1.307e-01, -1.150e-02, -4.068e-02, 8.657e-02, 2.776e-01, -6.237e-01, 3.288e-02));
	r += mul(s0_4, M4(-2.510e-01, 1.877e-01, -3.099e-01, -1.704e-01, 3.977e-01, 1.349e-01, -6.121e-01, -5.996e-01, -4.023e-01, 3.206e-01, 1.386e-01, 1.587e-01, -5.234e-01, -3.105e-01, 2.903e-01, -1.493e-01));
	r += mul(s0_5, M4(-1.980e-02, -1.587e-01, 1.314e-01, 3.889e-02, -2.345e-01, -1.087e-01, 1.921e-02, 3.554e-02, 3.403e-02, -1.597e-01, 7.996e-02, 3.233e-02, -1.265e-01, 1.484e-01, -1.393e-01, -1.898e-01));
	r += mul(s0_6, M4(-6.240e-02, -1.234e-01, 1.985e-01, -6.272e-02, -3.127e-02, 1.127e-01, -3.006e-01, 2.663e-02, 1.529e-02, 7.826e-02, 6.159e-02, 3.831e-02, 1.728e-02, -4.247e-02, -5.165e-02, -2.765e-04));
	r += mul(s0_7, M4(2.045e-02, 1.757e-01, 3.138e-01, -1.319e-01, -7.382e-01, 2.536e-01, -2.166e-02, -2.750e-01, 9.266e-02, -1.760e-02, 6.609e-02, 1.057e-01, -3.227e-01, -1.309e-01, -4.365e-02, -2.065e-01));
	r += mul(s0_8, M4(1.668e-01, -3.038e-02, 5.788e-02, -1.616e-01, 1.999e-02, 9.130e-02, 7.707e-02, -8.343e-02, 1.052e-01, -1.094e-01, -7.307e-02, 1.416e-03, -1.017e-01, 3.662e-02, 6.577e-02, -2.134e-02));
	r += mul(s1_0, M4(4.223e-02, -5.928e-02, 8.590e-02, -6.035e-02, 4.426e-02, 6.376e-02, -8.039e-02, 5.112e-02, -3.122e-01, -2.897e-02, 2.407e-01, -9.888e-02, 1.094e-01, 3.751e-02, -1.792e-01, -1.418e-01));
	r += mul(s1_1, M4(6.521e-03, 2.498e-02, -9.471e-02, 1.320e-02, 2.177e-02, -1.215e-02, 4.298e-02, -4.702e-02, -3.354e-01, 2.031e-02, 4.969e-01, -2.746e-01, 1.441e-01, -7.085e-02, -1.470e-01, -1.352e-01));
	r += mul(s1_2, M4(4.707e-02, 3.567e-03, 2.095e-03, -2.147e-02, -3.286e-02, -1.587e-02, -7.402e-02, 5.294e-02, -1.134e-02, 1.043e-01, -2.050e-01, -1.067e-01, 7.324e-03, -3.397e-02, -3.264e-02, -2.361e-02));
	r += mul(s1_3, M4(6.487e-02, -3.800e-02, -1.294e-01, 1.441e-01, -8.435e-02, 4.197e-02, -1.199e-01, 5.478e-02, -2.024e-02, 2.243e-01, 5.059e-01, -1.460e-01, 6.221e-02, -8.722e-02, -4.771e-01, 6.005e-03));
	r += mul(s1_4, M4(1.321e-01, 2.500e-01, 9.888e-02, 4.838e-02, -9.692e-02, 3.869e-02, 1.076e-03, -2.822e-01, 1.071e-01, -7.832e-01, 2.038e-01, 2.608e-01, -1.948e-01, 4.280e-01, -1.546e-02, 1.178e-01));
	r += mul(s1_5, M4(-6.815e-02, -4.654e-02, 1.292e-02, -4.607e-02, 1.356e-02, -7.988e-02, -9.720e-02, 1.996e-01, 1.850e-01, 3.195e-01, -7.736e-02, 2.296e-01, -1.420e-02, -2.314e-02, -4.968e-02, -3.551e-02));
	r += mul(s1_6, M4(-4.656e-02, 2.031e-02, -2.065e-01, -3.340e-02, -2.178e-02, -4.106e-02, 8.962e-02, 3.576e-03, 1.528e-01, 3.230e-03, 1.547e-01, 3.757e-02, 2.394e-02, -8.159e-02, -1.108e-01, 1.837e-02));
	r += mul(s1_7, M4(-4.383e-01, 3.017e-01, 1.776e-01, -9.433e-02, 2.325e-02, 1.757e-01, 9.507e-02, 9.728e-02, 3.778e-01, -3.529e-01, -1.127e-01, 1.547e-01, -2.142e-02, 4.969e-02, 7.498e-03, -3.840e-02));
	r += mul(s1_8, M4(6.714e-02, 2.742e-02, -1.531e-02, -1.781e-02, 1.174e-01, -4.003e-01, -4.626e-02, 6.519e-02, 1.919e-01, 9.230e-02, -8.015e-02, 1.086e-01, -1.095e-01, 6.236e-03, 3.127e-02, -6.973e-02));
	r += mul(s2_0, M4(7.690e-02, 5.577e-02, 1.520e-01, 1.533e-01, -1.515e-01, -1.867e-02, 1.491e-01, -1.581e-03, -3.037e-01, -1.774e-01, -8.128e-03, -3.227e-01, -3.751e-02, 5.852e-02, 1.193e-01, -1.944e-02));
	r += mul(s2_1, M4(6.923e-02, -4.332e-02, -7.472e-02, -9.038e-02, -7.820e-02, -4.101e-02, -8.704e-02, -7.553e-02, -3.779e-01, 8.400e-02, -1.806e-01, 1.762e-01, -5.750e-02, -7.494e-02, 1.967e-01, 1.007e-01));
	r += mul(s2_2, M4(2.338e-03, 2.814e-02, 4.456e-02, -9.703e-03, 2.750e-03, 1.557e-01, 2.114e-02, 4.362e-02, -1.257e-01, -1.547e-01, -5.088e-02, 4.841e-02, 7.115e-03, 8.319e-02, 7.016e-02, -4.456e-02));
	r += mul(s2_3, M4(-3.665e-02, -1.915e-01, 5.318e-02, 6.024e-02, 5.136e-02, 1.535e-01, 4.189e-01, -5.664e-02, 5.228e-02, -3.264e-01, 1.505e-01, 5.541e-02, 6.361e-02, 2.458e-01, 1.532e-02, -3.698e-02));
	r += mul(s2_4, M4(2.581e-01, 2.427e-01, 4.297e-01, -1.876e-02, 3.891e-01, -3.853e-01, -2.454e-01, -1.005e-01, -1.176e-01, -2.036e-01, -2.088e-01, 2.946e-01, 2.555e-01, -3.026e-01, -2.448e-02, -1.130e-01));
	r += mul(s2_5, M4(1.023e-01, -9.369e-02, -5.263e-02, -5.237e-02, -8.459e-02, -2.030e-01, -6.227e-03, 8.534e-02, -1.204e-02, -4.913e-02, 1.062e-02, 6.732e-02, 3.490e-03, 6.082e-02, -1.177e-02, 3.649e-02));
	r += mul(s2_6, M4(-4.984e-02, 1.011e-01, -2.516e-01, 2.382e-02, -6.620e-03, 1.043e-01, 2.088e-02, -1.885e-02, -6.029e-02, -2.246e-01, 5.635e-02, 3.188e-02, 3.534e-02, 5.374e-02, -2.165e-02, 1.569e-02));
	r += mul(s2_7, M4(-4.980e-01, 1.297e-01, 2.176e-01, -6.103e-02, -4.384e-02, -6.153e-01, -1.790e-02, 4.285e-04, 1.075e-01, -2.645e-03, -8.131e-02, 7.056e-02, -4.846e-02, -8.653e-02, 9.498e-02, -5.156e-02));
	r += mul(s2_8, M4(3.911e-02, 1.733e-01, 4.488e-02, -2.622e-02, -1.000e-02, -7.630e-02, -3.284e-02, 8.193e-02, -1.154e-02, 6.160e-02, -5.234e-02, 3.410e-02, 4.962e-02, -1.210e-02, -3.212e-02, 1.761e-02));
	r += mul(s3_0, M4(-1.499e-01, 3.793e-03, 3.079e-01, -1.763e-01, -1.552e-01, -1.575e-01, 2.125e-01, -1.704e-01, 1.440e-02, 4.518e-02, -1.059e-01, 1.416e-01, 1.976e-01, 1.167e-02, -3.579e-01, 2.261e-01));
	r += mul(s3_1, M4(-1.322e-01, -4.731e-02, -4.650e-02, -6.735e-02, -1.498e-01, -4.163e-03, -6.103e-02, 9.866e-02, 8.907e-03, -4.130e-02, 9.990e-03, -1.265e-01, -4.060e-02, -3.627e-02, 1.854e-01, 3.760e-01));
	r += mul(s3_2, M4(3.770e-02, 1.090e-01, 2.253e-02, -2.286e-03, 2.783e-02, 2.679e-02, 7.275e-03, 6.539e-02, -4.730e-02, 2.118e-02, -7.887e-02, 5.474e-02, -7.089e-02, -1.033e-01, 1.122e-01, 3.980e-02));
	r += mul(s3_3, M4(-5.501e-02, -2.334e-01, -1.924e-01, -7.900e-02, 2.344e-01, -4.016e-02, 1.685e-01, 2.198e-02, -1.631e-01, 5.601e-02, 2.448e-01, -1.894e-02, 7.103e-02, 1.777e-01, 1.528e-01, -1.395e-02));
	r += mul(s3_4, M4(-1.538e-01, -3.984e-02, 2.404e-02, 1.158e-01, 1.611e-01, 9.100e-02, 3.408e-01, -2.765e-01, 1.862e-02, 2.247e-01, 1.547e-01, -4.622e-02, -2.221e-01, 1.238e-01, 2.718e-02, -1.228e-01));
	r += mul(s3_5, M4(-7.767e-02, 3.650e-03, -6.431e-02, 7.573e-02, 2.637e-01, 4.773e-03, -1.254e-01, -9.107e-02, 9.252e-02, 4.433e-02, 5.411e-02, -3.047e-02, -3.739e-02, -4.287e-02, -3.218e-02, 7.172e-02));
	r += mul(s3_6, M4(1.457e-01, -2.709e-01, -8.257e-02, 3.274e-02, -8.779e-02, -7.983e-02, -9.170e-02, -5.061e-02, 5.402e-02, -5.778e-02, -7.875e-02, 3.787e-02, 2.328e-02, 2.239e-02, -2.041e-02, 3.594e-03));
	r += mul(s3_7, M4(4.623e-02, -1.623e-02, -8.754e-02, 7.943e-03, -2.446e-01, -1.259e-01, 1.973e-01, -2.800e-01, -5.698e-02, 1.343e-01, 2.334e-02, -3.992e-02, -8.589e-02, -2.520e-01, 8.811e-02, 1.134e-02));
	r += mul(s3_8, M4(7.378e-02, 7.466e-02, -7.291e-03, 6.729e-02, -9.631e-02, 2.443e-01, 9.191e-02, 6.691e-03, -8.956e-03, -6.665e-02, 2.606e-02, 1.191e-02, -4.029e-02, -9.440e-02, -5.499e-02, 1.475e-02));
	r += V4(-3.870e-03, -6.811e-03, -6.467e-03, -2.012e-03);
	return r;
}
void Pass5(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t3[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 6
//!DESC CuNNy-4x8C-EASU-NVL-conv4
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t2, t3
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t2, float2(x, y))
#define l1(x, y) O(t3, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-1.756e-02, 1.346e-02, -7.354e-02, 9.060e-02, -4.470e-03, -2.422e-02, 7.638e-03, 1.593e-02, -1.384e-02, 2.778e-02, -1.559e-02, 3.007e-02, 7.135e-02, 5.635e-02, 1.390e-02, -5.481e-02));
	r += mul(s0_1, M4(1.919e-01, 7.487e-03, -8.234e-03, -6.022e-02, -2.268e-01, 8.297e-03, 1.690e-02, 8.428e-02, 1.724e-01, -2.039e-02, 3.119e-02, -2.344e-02, 6.234e-02, -1.102e-01, -1.431e-01, 8.740e-02));
	r += mul(s0_2, M4(-5.193e-03, -2.590e-02, 2.691e-02, -5.752e-02, -1.124e-01, -1.167e-02, -1.717e-02, -3.185e-02, -1.997e-01, -3.604e-02, -1.706e-01, -5.530e-02, -1.833e-01, 3.537e-03, -1.048e-02, -8.807e-02));
	r += mul(s0_3, M4(-2.400e-02, 9.592e-02, 3.493e-02, 9.422e-02, 1.842e-01, 8.855e-02, -3.619e-02, 1.150e-02, 9.784e-03, -8.668e-02, 2.274e-02, 1.308e-02, -5.232e-02, -9.726e-02, -1.541e-03, 9.065e-02));
	r += mul(s0_4, M4(1.008e-01, -9.692e-02, 5.731e-02, -2.166e-01, 7.135e-01, 6.517e-02, 2.496e-01, 1.355e-01, 6.545e-02, 3.494e-02, -2.654e-03, -2.620e-01, -9.665e-02, 1.577e-01, 9.458e-02, -3.021e-01));
	r += mul(s0_5, M4(3.433e-02, 4.603e-02, -1.048e-01, -1.576e-02, 7.512e-02, 5.150e-03, -1.742e-02, -1.079e-02, -3.589e-02, 6.083e-02, -1.135e-01, -8.809e-02, -9.754e-02, -1.164e-01, -1.108e-01, 1.581e-01));
	r += mul(s0_6, M4(1.428e-01, 1.641e-02, 3.316e-02, -1.478e-01, -4.567e-02, 1.048e-01, -9.725e-03, -4.698e-02, -5.277e-03, 2.519e-02, 1.133e-02, 1.388e-02, 1.998e-02, 2.887e-02, 1.114e-02, -9.658e-02));
	r += mul(s0_7, M4(-5.825e-02, 2.978e-01, -2.751e-02, 3.968e-02, -8.919e-02, 1.501e-01, -5.136e-02, 1.767e-01, -7.204e-02, 2.647e-01, -9.544e-02, 9.714e-02, 1.678e-02, 2.038e-01, -9.549e-02, -1.269e-02));
	r += mul(s0_8, M4(-1.204e-02, 2.887e-02, 5.005e-03, 4.769e-02, -2.300e-02, -1.510e-03, 4.845e-02, -4.419e-02, 3.889e-02, -1.113e-01, 5.990e-02, -1.262e-01, 5.653e-02, -1.111e-01, 3.272e-03, -1.360e-02));
	r += mul(s1_0, M4(8.423e-02, 5.720e-02, -5.802e-03, 8.358e-02, 4.365e-02, -2.991e-03, 2.621e-03, 8.176e-02, 2.981e-01, -2.566e-02, 5.122e-02, -1.889e-01, 1.146e-01, 9.839e-02, 6.858e-02, -6.103e-02));
	r += mul(s1_1, M4(2.686e-01, 3.841e-02, 9.562e-02, -2.958e-03, -2.107e-01, -1.967e-02, 2.007e-01, 1.733e-02, -3.741e-01, 1.314e-02, 1.354e-01, -1.934e-01, -2.823e-01, -2.369e-01, -1.476e-01, 1.882e-01));
	r += mul(s1_2, M4(-8.036e-02, -6.389e-03, 2.055e-02, 3.916e-02, -1.639e-01, 1.100e-02, 7.985e-02, -3.080e-02, 4.664e-03, 4.398e-02, 1.805e-03, 9.063e-03, -4.654e-01, -1.881e-01, -1.601e-01, -5.688e-02));
	r += mul(s1_3, M4(2.785e-02, -8.980e-03, 1.368e-02, 5.359e-02, -8.821e-02, 2.867e-02, -3.863e-02, 1.056e-01, -1.076e-01, -4.877e-02, 1.027e-01, -4.053e-01, 1.016e-01, -1.145e-01, 8.038e-02, -2.029e-01));
	r += mul(s1_4, M4(3.104e-02, -1.929e-01, 1.392e-01, -2.290e-01, 2.676e-01, 1.308e-01, 1.392e-01, 2.224e-01, 2.166e-01, 3.714e-02, -3.687e-01, -1.605e-01, 1.470e-01, 6.052e-01, 9.913e-02, 1.214e-01));
	r += mul(s1_5, M4(1.449e-01, 5.328e-03, 1.220e-01, 1.233e-01, 3.018e-01, -7.054e-02, 5.391e-01, -8.192e-02, -6.206e-01, -3.682e-02, -7.613e-01, 1.238e-01, 7.707e-02, 2.568e-01, -9.905e-02, -9.416e-03));
	r += mul(s1_6, M4(-5.036e-03, 5.857e-02, 4.310e-02, 1.169e-01, -5.277e-03, 4.209e-04, 7.188e-03, -1.272e-01, 3.512e-02, -8.715e-02, 2.422e-02, 9.888e-02, -4.240e-02, 1.519e-01, -4.579e-02, -1.199e-01));
	r += mul(s1_7, M4(5.555e-02, 5.303e-01, -7.475e-02, -1.689e-01, -7.235e-02, 6.389e-02, -1.022e-01, 2.934e-01, -2.600e-01, -1.299e-01, -1.014e-02, 2.398e-01, -6.275e-02, -1.922e-02, -4.402e-02, 7.122e-02));
	r += mul(s1_8, M4(6.678e-02, 1.167e-01, 2.263e-02, 1.576e-01, -1.737e-01, 1.244e-01, 1.870e-01, -4.158e-02, 2.529e-01, 2.649e-02, -3.574e-02, -4.424e-01, 1.035e-03, -1.285e-01, 4.065e-02, -8.398e-03));
	r += mul(s2_0, M4(1.046e-02, -1.723e-02, -6.022e-02, 4.580e-02, 2.341e-01, -3.100e-02, 2.629e-02, -1.951e-02, -6.876e-02, 2.663e-02, -1.502e-02, 7.886e-02, -3.625e-02, -5.115e-02, -5.619e-03, 2.533e-02));
	r += mul(s2_1, M4(2.535e-01, 7.210e-02, 1.304e-01, -1.353e-01, -1.257e-01, 1.010e-01, -5.489e-01, 2.354e-01, 1.097e-01, 3.387e-02, 7.936e-02, -2.762e-02, -4.490e-02, 2.764e-02, 2.941e-02, -4.597e-02));
	r += mul(s2_2, M4(1.841e-01, -1.993e-03, -5.945e-02, 6.511e-02, -6.380e-02, -7.104e-02, 6.322e-01, 5.197e-02, 3.747e-02, 1.763e-02, -1.675e-03, 6.847e-02, 7.927e-02, 1.353e-03, -3.906e-02, 5.025e-03));
	r += mul(s2_3, M4(-7.627e-02, -3.971e-02, -8.080e-02, 1.532e-02, 3.101e-02, 8.347e-02, 9.957e-03, 1.550e-01, 5.504e-02, -1.054e-02, -5.087e-02, 1.071e-01, 2.978e-02, 6.423e-02, 4.492e-03, 4.234e-03));
	r += mul(s2_4, M4(2.285e-01, 1.372e-01, 2.997e-02, -2.389e-01, 3.390e-01, -7.094e-02, -2.133e-02, -6.982e-02, 3.650e-02, -1.270e-01, 1.490e-01, -3.228e-01, 1.592e-01, 3.703e-02, 1.548e-01, 1.429e-01));
	r += mul(s2_5, M4(5.162e-02, 9.629e-03, -1.053e-02, 4.132e-02, -1.489e-01, 5.065e-02, 6.105e-01, -1.355e-01, -6.452e-02, -2.007e-02, -6.960e-02, 3.134e-02, 1.606e-02, 5.686e-02, -1.156e-02, -5.245e-02));
	r += mul(s2_6, M4(-4.578e-02, -1.249e-01, -3.538e-02, 6.418e-02, -6.389e-02, 1.185e-01, -5.717e-02, -8.056e-03, -4.487e-02, -5.261e-02, -7.102e-03, 1.529e-01, 2.339e-02, 1.509e-01, -2.340e-02, 2.306e-02));
	r += mul(s2_7, M4(-8.959e-02, -3.114e-01, 6.761e-02, -2.698e-01, -1.081e-01, 4.573e-02, -1.675e-01, 1.153e-01, 3.499e-02, 1.901e-01, -6.887e-03, -1.621e-01, 4.056e-02, 2.459e-01, -1.679e-02, 1.917e-01));
	r += mul(s2_8, M4(-1.627e-01, 1.105e-01, -3.459e-02, 1.051e-01, -3.521e-02, 1.698e-02, 1.895e-01, 7.432e-02, 7.202e-02, 3.513e-02, -3.250e-02, -7.259e-03, 1.483e-01, -2.556e-02, 1.151e-01, -6.094e-02));
	r += mul(s3_0, M4(1.072e-01, 5.070e-02, 5.511e-03, 5.527e-03, 1.235e-01, 2.008e-03, 1.162e-02, -1.744e-02, 4.596e-03, -1.494e-02, -4.382e-02, 4.964e-02, -2.511e-02, -2.009e-02, -1.961e-02, 6.009e-02));
	r += mul(s3_1, M4(3.822e-01, 1.210e-01, 1.541e-01, -1.609e-01, -6.624e-02, 1.840e-03, -4.557e-03, -7.137e-02, 1.280e-02, 4.798e-02, 9.277e-02, -1.005e-02, -2.281e-02, 8.523e-02, 7.015e-02, -2.509e-02));
	r += mul(s3_2, M4(3.252e-01, 2.009e-03, 1.140e-01, 1.034e-01, -1.477e-01, -1.486e-02, -7.747e-02, -4.646e-02, -3.676e-02, 7.774e-03, 4.136e-02, 2.482e-02, 1.280e-01, -2.081e-02, -2.892e-02, 2.198e-02));
	r += mul(s3_3, M4(-5.473e-02, -1.144e-01, -1.008e-01, 1.998e-01, -8.749e-02, -5.707e-02, 1.282e-02, 1.508e-01, -4.399e-02, -4.579e-02, -1.180e-02, 3.356e-02, 2.186e-02, 1.319e-01, -6.425e-02, 5.893e-02));
	r += mul(s3_4, M4(-1.568e-01, 1.304e-01, 4.525e-02, -2.290e-01, 7.805e-02, -1.357e-01, 7.545e-02, 1.858e-01, 9.497e-02, -9.328e-02, -4.749e-03, 8.207e-02, 2.080e-01, 5.018e-02, 9.622e-02, -5.404e-02));
	r += mul(s3_5, M4(-9.325e-03, -3.813e-02, 1.045e-01, 1.088e-02, -3.971e-02, -3.291e-02, -4.291e-02, -6.406e-02, 2.744e-01, 1.453e-01, -3.037e-01, -2.138e-01, -1.838e-01, -2.242e-03, 4.630e-02, 3.242e-02));
	r += mul(s3_6, M4(-8.508e-02, -1.089e-02, -3.632e-02, 1.266e-01, 1.440e-02, 8.888e-02, -2.096e-02, -6.768e-02, -3.869e-02, -1.667e-02, -3.592e-03, -3.488e-03, -1.104e-02, -6.271e-02, -3.275e-02, 1.522e-01));
	r += mul(s3_7, M4(8.175e-02, 1.314e-01, 5.691e-02, -1.503e-01, -2.312e-02, 9.558e-02, -1.800e-02, 4.993e-02, -1.635e-01, -1.665e-01, 9.120e-02, 1.394e-01, -5.091e-02, -4.730e-01, -8.875e-03, -8.962e-02));
	r += mul(s3_8, M4(-9.133e-03, 1.101e-01, -4.275e-02, 3.161e-02, 2.238e-02, -6.514e-02, 5.009e-02, -3.863e-02, -2.026e-01, -1.470e-01, -1.200e-01, -7.352e-02, 9.468e-03, 8.975e-03, 3.762e-02, -5.630e-02));
	r += V4(5.064e-03, 3.105e-03, -5.788e-04, -2.637e-03);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-1.205e-02, -1.751e-01, -6.855e-02, 4.066e-02, -2.263e-03, -3.568e-02, -2.510e-02, -1.100e-02, -3.639e-03, 7.386e-03, 3.113e-02, 2.143e-02, 1.314e-01, -8.862e-02, 3.912e-02, 1.576e-01));
	r += mul(s0_1, M4(1.333e-01, -5.424e-02, -3.968e-02, 3.969e-02, -1.615e-01, -1.259e-02, -2.710e-02, 4.139e-02, 1.111e-01, -1.116e-01, 7.007e-02, -7.343e-02, 4.047e-03, -9.314e-02, -6.625e-02, -1.125e-01));
	r += mul(s0_2, M4(-9.780e-03, 1.342e-02, -4.141e-02, 2.412e-02, -1.290e-01, 4.356e-02, 2.377e-03, -2.106e-02, -1.421e-01, -3.337e-03, -1.239e-01, 3.584e-02, -1.907e-01, 1.260e-02, 5.851e-02, -1.284e-03));
	r += mul(s0_3, M4(6.930e-02, 6.441e-02, -1.206e-02, 2.384e-02, 1.529e-01, -4.286e-02, -7.098e-02, 2.996e-02, 1.294e-02, 6.029e-03, -2.972e-02, -1.020e-01, -2.749e-02, -4.059e-02, -7.589e-02, -1.688e-01));
	r += mul(s0_4, M4(1.785e-01, -2.198e-01, -2.284e-01, -1.646e-01, 7.090e-01, 8.822e-03, -6.725e-02, -2.361e-02, 2.161e-02, -1.041e-02, -3.538e-02, -2.270e-01, 1.248e-02, -1.305e-02, 7.159e-02, -1.064e-01));
	r += mul(s0_5, M4(7.350e-02, -5.872e-02, -2.148e-02, 7.490e-03, 7.631e-02, -5.210e-02, -1.371e-02, 2.542e-02, 1.292e-01, 4.793e-02, 1.035e-01, 6.931e-02, -2.749e-02, 2.075e-02, -1.283e-02, 1.929e-02));
	r += mul(s0_6, M4(6.791e-02, -6.736e-02, -1.729e-02, 1.081e-01, 2.990e-02, -5.517e-02, -2.418e-02, 1.787e-01, 2.149e-03, 6.202e-03, -1.473e-02, 1.524e-02, -5.082e-03, 1.052e-03, 1.102e-02, -4.270e-02));
	r += mul(s0_7, M4(6.302e-02, -8.707e-03, 4.819e-02, 4.147e-02, -4.671e-02, 3.419e-03, -7.806e-02, 1.025e-02, -8.589e-02, 2.879e-03, -1.667e-02, 5.531e-02, -2.209e-02, -1.668e-02, -6.502e-04, 3.898e-03));
	r += mul(s0_8, M4(3.007e-02, 3.277e-03, -3.434e-03, -9.305e-03, -7.205e-02, 5.493e-03, -3.379e-02, -2.283e-02, -5.291e-02, -1.280e-02, -2.685e-02, -5.941e-02, 1.506e-02, -9.216e-03, -3.754e-02, -7.445e-02));
	r += mul(s1_0, M4(8.766e-02, 1.128e-01, 2.675e-02, -3.363e-03, 5.729e-02, 3.546e-02, -4.825e-02, 6.222e-03, 1.635e-01, -6.704e-02, 2.399e-01, 1.923e-01, 1.607e-01, 2.848e-02, 4.360e-02, 1.668e-01));
	r += mul(s1_1, M4(2.550e-01, 2.567e-02, 1.493e-01, -1.996e-03, -1.489e-01, 5.492e-02, 8.725e-02, 4.259e-02, 8.992e-02, 1.972e+00, -5.488e-02, 5.223e-02, -2.823e-01, -3.195e-01, -2.389e-01, -7.934e-02));
	r += mul(s1_2, M4(-5.837e-02, 3.137e-02, -1.206e-02, 8.523e-03, -2.075e-01, 9.340e-03, 8.911e-02, -2.196e-02, -5.008e-02, -1.102e-01, -1.076e-01, 7.253e-03, -4.580e-01, 4.554e-02, -1.308e-01, -6.028e-02));
	r += mul(s1_3, M4(3.032e-02, -4.430e-02, 3.934e-02, 1.581e-01, -5.633e-02, -6.763e-02, -5.452e-02, 5.018e-02, 1.387e-02, -1.606e-01, 2.337e-01, 6.070e-01, 8.254e-02, -1.190e-01, -1.108e-01, 9.478e-02));
	r += mul(s1_4, M4(7.124e-02, 1.286e-01, -1.001e-02, 4.820e-02, 1.511e-01, 3.196e-01, 1.925e-01, 1.271e-01, -1.898e-01, -4.403e-01, 2.006e-01, -1.120e-01, 3.892e-01, 1.062e-01, -1.442e-01, -4.232e-01));
	r += mul(s1_5, M4(7.690e-02, -2.195e-02, 1.237e-01, -2.045e-02, 1.655e-01, -1.323e-01, -4.847e-02, -5.227e-02, 3.272e-01, 8.441e-02, 4.382e-01, 1.486e-01, 1.212e-01, -6.801e-02, 1.149e-01, 8.702e-02));
	r += mul(s1_6, M4(4.901e-02, 7.303e-02, -4.268e-02, -1.978e-02, -2.729e-02, -4.066e-03, -3.870e-02, -1.387e-01, -3.226e-02, 1.429e-02, -6.580e-02, -2.343e-01, -5.725e-02, -4.650e-02, -2.671e-03, 4.077e-02));
	r += mul(s1_7, M4(-1.162e-01, -2.696e-03, 1.438e-01, 1.483e-01, -9.297e-02, -4.538e-02, -6.589e-02, 2.258e-01, -8.520e-02, 1.402e-01, -3.327e-02, -3.067e-01, -3.564e-02, -4.486e-02, -4.065e-02, 1.944e-02));
	r += mul(s1_8, M4(9.296e-02, 1.045e-02, 2.609e-02, 1.836e-02, -6.607e-02, 3.207e-03, 7.940e-02, 1.977e-02, -2.831e-01, 3.609e-02, -1.532e-02, -1.163e-03, 2.931e-02, 1.602e-03, -6.493e-02, -6.785e-02));
	r += mul(s2_0, M4(-4.215e-02, -1.201e-02, -3.153e-02, -9.057e-02, 1.909e-01, -4.921e-01, 1.096e-01, -3.674e-02, -9.547e-02, 1.508e-01, 5.601e-02, -8.498e-02, -6.163e-02, -4.327e-02, -6.903e-04, -3.654e-02));
	r += mul(s2_1, M4(2.816e-01, 3.080e-02, -1.039e-02, 5.756e-02, -1.618e-01, -2.607e-01, -3.221e-01, 1.297e-01, 7.107e-02, 1.795e-03, 3.057e-02, -2.948e-02, 1.109e-02, 5.776e-02, -7.235e-02, 7.620e-02));
	r += mul(s2_2, M4(1.669e-01, -5.853e-02, -2.298e-02, -2.253e-03, -1.057e-01, -7.407e-02, -2.017e-01, -3.922e-02, 9.412e-02, -5.042e-02, -6.425e-02, 2.651e-02, 5.801e-02, 1.311e-02, 2.898e-02, 6.244e-03));
	r += mul(s2_3, M4(-9.019e-02, 7.193e-02, 5.085e-02, -1.016e-01, 6.762e-02, -1.727e-01, -1.430e-01, 8.191e-02, -1.313e-02, -5.105e-02, 5.305e-03, -2.030e-02, 3.528e-02, 6.861e-02, -2.188e-02, 8.312e-02));
	r += mul(s2_4, M4(5.565e-02, 7.156e-02, 1.108e-01, 6.832e-02, 2.193e-01, -8.399e-02, -3.315e-01, 8.212e-01, 5.041e-02, -1.174e-01, -1.371e-01, 2.417e-01, 2.803e-01, 8.819e-04, -5.215e-01, 6.027e-02));
	r += mul(s2_5, M4(1.274e-01, -5.596e-02, -8.195e-02, 3.386e-03, 1.316e-01, -1.661e-01, 7.197e-02, 5.144e-02, -1.233e-01, 4.056e-02, -1.339e-01, -6.853e-03, -2.755e-02, 6.909e-02, 1.365e-01, -1.815e-02));
	r += mul(s2_6, M4(-9.637e-02, 1.226e-02, -6.710e-02, -2.366e-01, -2.669e-03, -5.263e-02, -4.097e-02, 9.374e-02, 3.710e-02, 1.741e-02, -4.643e-02, -2.918e-04, 8.739e-02, -5.969e-02, 7.072e-03, 4.182e-01));
	r += mul(s2_7, M4(-8.001e-02, -3.747e-02, -4.595e-02, -1.062e-01, 9.504e-03, -6.727e-02, -1.312e-01, 2.649e-01, -1.976e-02, 2.609e-03, -4.902e-03, 5.013e-02, -1.027e-02, 1.387e-01, 4.079e-02, 1.702e-01));
	r += mul(s2_8, M4(-6.144e-02, 1.697e-02, 9.858e-02, 6.418e-02, -4.870e-02, 8.330e-02, -4.672e-02, -8.978e-04, 9.898e-02, 2.011e-02, 3.255e-02, -1.283e-02, -5.455e-02, 9.573e-03, -3.314e-02, 3.616e-02));
	r += mul(s3_0, M4(2.754e-02, -6.211e-02, 1.685e-01, -9.617e-03, 1.274e-01, -1.203e-02, 5.994e-02, -1.939e-02, -4.259e-02, -4.849e-02, 9.805e-04, -4.748e-02, -2.718e-02, 9.323e-02, -1.058e-01, -9.676e-02));
	r += mul(s3_1, M4(3.406e-01, 1.538e-01, -2.264e-01, 7.596e-02, -2.802e-02, -5.567e-02, 1.253e-01, 5.710e-02, 3.599e-02, 1.616e-01, 1.668e-02, 2.229e-02, 6.109e-02, -1.048e-02, 2.805e-02, 1.022e-01));
	r += mul(s3_2, M4(3.271e-01, -8.460e-02, 6.720e-02, 2.700e-02, -1.951e-01, 3.523e-02, -4.962e-02, -1.438e-02, -5.019e-03, -1.519e-01, -1.368e-02, 5.748e-02, 1.089e-01, -2.456e-02, -1.792e-02, -2.708e-04));
	r += mul(s3_3, M4(-1.132e-01, 9.937e-02, -5.840e-02, -7.551e-03, -5.855e-02, 5.529e-02, -2.785e-02, -8.811e-03, -2.463e-02, 5.178e-02, 1.441e-02, -2.858e-02, 1.303e-02, -2.230e-01, -5.613e-02, 3.666e-02));
	r += mul(s3_4, M4(-2.004e-01, -6.243e-02, 3.688e-01, 3.190e-01, 1.255e-01, 5.383e-02, 2.555e-02, -4.482e-02, -2.284e-02, -3.270e-01, -1.691e-01, -2.281e-01, 2.378e-01, 1.548e-01, -2.706e-01, 2.026e-01));
	r += mul(s3_5, M4(-6.351e-02, 2.275e-02, -4.727e-02, -3.448e-02, 7.007e-02, -5.578e-03, 9.776e-03, 2.626e-02, 3.189e-01, 1.155e-01, -1.260e-01, 6.986e-02, -1.489e-01, 4.163e-02, 9.822e-04, -9.289e-03));
	r += mul(s3_6, M4(-8.406e-03, 3.837e-02, -3.434e-03, -3.992e-02, 1.097e-03, -2.453e-02, -1.122e-02, 9.448e-02, -3.479e-02, -3.307e-02, 1.189e-03, 1.066e-01, -2.081e-03, -4.895e-02, -4.922e-02, -3.807e-02));
	r += mul(s3_7, M4(-6.075e-02, -1.274e-02, 2.978e-02, 1.140e-01, -6.517e-02, 7.419e-03, -1.070e-02, 3.404e-02, -1.278e-01, 4.145e-02, -5.214e-02, -9.351e-02, 4.060e-02, 2.590e-02, -3.625e-02, -2.820e-02));
	r += mul(s3_8, M4(-1.976e-02, 5.797e-03, 5.329e-02, 2.947e-02, -1.303e-02, -3.671e-03, -6.049e-03, -3.804e-02, -5.695e-02, -4.706e-04, 1.637e-02, -3.022e-02, -7.457e-02, -1.380e-02, -3.668e-02, 1.358e-02));
	r += V4(5.536e-03, -3.512e-03, -7.020e-03, 3.012e-03);
	return r;
}
void Pass6(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 7
//!DESC CuNNy-4x8C-EASU-NVL-out
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(6.325e-02, -5.602e-02, 8.816e-02, 2.535e-03, -2.048e-02, 2.975e-02, 1.552e-03, 1.602e-02, -1.370e-01, 1.122e-03, 3.306e-02, 4.843e-03, -4.437e-02, -4.982e-03, -4.252e-02, 1.038e-02));
	r += mul(s0_1, M4(1.202e-01, 3.013e-01, 4.773e-02, 9.295e-02, -3.211e-02, -8.514e-02, -1.558e-01, -1.470e-01, -2.229e-02, -1.454e-03, 6.593e-03, -1.505e-02, 6.662e-01, -5.066e-01, 2.301e-01, -1.087e-01));
	r += mul(s0_2, M4(-2.300e-02, -2.101e-02, -2.165e-02, -3.045e-02, 3.233e-02, 4.680e-02, 3.920e-02, 3.514e-02, 1.813e-03, -6.835e-03, -4.207e-03, 1.113e-03, -4.457e-02, 4.679e-02, -2.076e-02, -2.860e-03));
	r += mul(s0_3, M4(1.995e-02, 1.895e-02, -1.471e-02, -3.575e-02, -3.617e-02, -2.985e-03, -4.598e-02, -6.718e-04, -4.404e-01, 2.881e-01, -5.063e-01, 2.803e-01, -4.281e-02, 3.552e-02, -1.875e-02, -7.443e-03));
	r += mul(s0_4, M4(-1.368e-01, -1.057e-01, -7.840e-02, 1.008e-01, 5.167e-02, 1.241e-02, 1.001e-01, -2.081e-02, -9.805e-02, 4.795e-01, -1.261e-01, 4.619e-01, -2.591e-02, -5.635e-02, 4.638e-01, -4.795e-01));
	r += mul(s0_5, M4(3.831e-03, -6.048e-02, -1.885e-02, -5.240e-02, 1.703e-02, 3.645e-02, -8.426e-03, 6.714e-02, 5.866e-03, -7.905e-03, 1.039e-02, -4.796e-03, -1.216e-02, 7.494e-02, -4.931e-02, 1.145e-01));
	r += mul(s0_6, M4(-4.725e-03, -9.053e-03, -1.378e-02, -4.923e-03, -2.678e-03, -4.644e-04, -1.911e-02, 7.585e-05, 5.507e-02, -1.399e-02, -1.512e-02, 3.170e-02, 3.529e-03, 5.487e-03, -2.256e-02, 1.770e-02));
	r += mul(s0_7, M4(-1.222e-02, -1.249e-02, -4.114e-02, -4.187e-02, -3.455e-03, -1.092e-02, 1.059e-02, -3.045e-03, -5.303e-03, -7.251e-02, -5.229e-03, -2.324e-02, 1.957e-02, -3.317e-02, -4.103e-02, -9.321e-03));
	r += mul(s0_8, M4(-6.978e-03, -1.567e-02, 7.299e-03, -2.320e-02, -3.307e-03, -7.777e-03, 5.557e-03, -3.553e-03, -1.734e-04, 1.520e-03, 7.165e-04, -8.820e-03, -1.632e-02, -1.411e-02, 5.463e-03, -1.660e-02));
	r += mul(s1_0, M4(3.115e-01, -9.451e-02, 1.342e-02, -2.071e-02, 5.311e-02, 1.746e-02, -5.454e-02, 2.613e-02, -8.521e-02, -8.187e-02, 2.041e-02, -5.176e-03, -4.131e-03, -2.776e-02, 5.749e-03, -1.209e-02));
	r += mul(s1_1, M4(1.420e-01, 6.803e-01, -1.768e-02, -7.641e-02, 4.033e-01, 2.906e-01, -6.312e-01, -5.265e-01, -2.213e-02, 4.233e-04, 1.755e-02, 1.169e-02, 1.109e-01, 1.069e-01, 5.107e-02, 5.946e-02));
	r += mul(s1_2, M4(1.137e-02, -4.001e-02, -3.291e-02, -2.204e-02, 1.852e-02, 1.646e-01, 9.878e-02, -8.426e-02, -8.156e-03, -1.590e-02, 1.223e-02, 1.062e-02, -2.685e-02, 1.236e-02, -6.131e-03, -1.378e-02));
	r += mul(s1_3, M4(4.332e-02, 2.825e-02, -1.493e-01, 6.150e-03, -5.203e-02, -1.927e-02, 1.395e-02, -4.719e-04, -7.921e-02, -1.405e-02, -1.841e-01, -7.828e-02, -6.729e-03, 1.119e-02, -1.815e-02, -2.992e-03));
	r += mul(s1_4, M4(-4.296e-01, -3.174e-01, 3.742e-01, 7.036e-02, 5.307e-02, 1.449e-02, 7.300e-02, 3.090e-02, 2.183e-01, 4.840e-02, 1.710e-01, 7.153e-02, -6.017e-02, -5.739e-02, 2.716e-02, -2.593e-02));
	r += mul(s1_5, M4(3.269e-02, -4.649e-02, -1.001e-01, -5.076e-04, 1.462e-02, 1.559e-02, 1.083e-02, 8.275e-02, -1.094e-02, 4.432e-02, -6.282e-03, 9.710e-03, 1.552e-02, 1.350e-02, -1.682e-02, 5.289e-02));
	r += mul(s1_6, M4(-2.250e-03, -4.063e-04, -1.007e-02, -6.272e-03, -2.438e-03, 3.824e-03, -9.486e-03, -2.304e-03, -8.711e-03, -1.944e-03, 9.051e-05, -8.682e-03, 1.968e-03, -7.320e-03, 5.614e-03, 9.751e-03));
	r += mul(s1_7, M4(3.394e-03, -2.655e-02, -9.427e-02, 1.329e-02, -7.208e-03, -1.089e-02, 1.883e-02, 1.478e-03, -2.706e-02, -3.456e-02, -1.119e-02, -1.388e-02, -7.643e-04, -5.838e-03, -2.850e-02, 4.462e-03));
	r += mul(s1_8, M4(-6.881e-03, -1.149e-02, 2.313e-02, -8.725e-02, 2.609e-03, -3.513e-03, -5.638e-03, 5.549e-03, 3.979e-03, -1.385e-02, -1.545e-02, 9.521e-03, -9.322e-03, -1.531e-02, 3.802e-03, -2.444e-02));
	r += mul(s2_0, M4(-6.330e-02, 4.174e-02, -8.967e-02, 1.040e-03, 2.977e-03, 6.170e-04, 5.440e-03, 2.280e-03, -7.105e-02, 4.258e-02, 1.837e-02, 2.106e-02, -5.229e-03, -2.754e-02, 7.459e-03, 2.401e-03));
	r += mul(s2_1, M4(-7.915e-02, -2.864e-01, -2.129e-02, -5.970e-02, 1.896e-01, 6.804e-04, -1.974e-02, 5.219e-03, 8.764e-02, -2.555e-05, -4.646e-02, -9.741e-02, 4.386e-02, 1.869e-01, 9.450e-02, 5.163e-02));
	r += mul(s2_2, M4(6.682e-03, 3.232e-02, 1.843e-02, 2.590e-02, -1.164e-01, 7.903e-02, -4.097e-03, 1.254e-01, 1.153e-02, -7.617e-02, 7.437e-02, 1.492e-02, 1.324e-01, -3.779e-01, 8.465e-02, -2.847e-01));
	r += mul(s2_3, M4(3.185e-02, -1.335e-02, 8.112e-02, 4.063e-02, 7.505e-02, -1.366e-02, -5.782e-02, -1.151e-02, 9.448e-02, 6.066e-03, 1.406e-04, -2.556e-02, 1.131e-02, -1.200e-03, -7.269e-03, -1.727e-02));
	r += mul(s2_4, M4(2.757e-02, 5.271e-02, 6.382e-02, -8.543e-02, -8.858e-01, 1.601e-01, 3.525e-01, 2.124e-01, 1.294e-01, -5.176e-01, -5.654e-01, 2.238e-01, 6.679e-03, 8.186e-03, -5.649e-02, 1.633e-01));
	r += mul(s2_5, M4(6.605e-03, 4.759e-02, 1.654e-02, 6.136e-02, 2.260e-01, 2.488e-01, 1.265e-01, -6.582e-01, -7.298e-02, 4.976e-02, 1.569e-03, 5.851e-02, 9.703e-03, -1.067e-01, 9.742e-02, -2.244e-01));
	r += mul(s2_6, M4(1.536e-02, 2.485e-03, 1.096e-02, -4.628e-03, -1.823e-02, -3.832e-02, -1.410e-02, 5.759e-02, 1.655e-02, 8.716e-02, 2.241e-02, 7.392e-03, -2.053e-03, -1.016e-02, 1.343e-02, -7.458e-03));
	r += mul(s2_7, M4(1.180e-02, 1.633e-02, 2.076e-02, 3.795e-02, 1.934e-01, 7.063e-02, 2.566e-01, -4.385e-01, -3.278e-02, -3.290e-02, 3.176e-02, 2.230e-02, 4.858e-03, -8.434e-03, 1.449e-02, -1.313e-02));
	r += mul(s2_8, M4(-2.142e-03, 2.947e-02, -1.127e-02, 1.473e-02, -7.131e-03, -1.859e-02, -1.147e-01, 3.819e-01, 2.735e-02, 2.679e-02, 3.866e-02, -5.383e-02, 6.732e-03, 2.776e-02, -1.834e-02, 3.255e-02));
	r += mul(s3_0, M4(-3.057e-01, 1.156e-01, -1.588e-02, 1.635e-02, 1.496e-02, -1.856e-02, 2.569e-03, -5.105e-03, 1.247e-03, 1.723e-02, -1.303e-02, -2.443e-03, 1.756e-02, -2.447e-02, 2.061e-02, -7.364e-03));
	r += mul(s3_1, M4(-1.174e-01, -7.601e-01, 7.316e-02, 1.404e-01, 6.910e-02, 7.741e-02, 3.802e-02, 3.408e-02, -2.308e-02, -4.675e-02, -7.630e-03, -2.754e-03, 9.888e-02, 2.286e-01, 3.873e-02, 5.919e-02));
	r += mul(s3_2, M4(-4.532e-03, 1.135e-01, 9.483e-03, 2.500e-03, -1.011e-02, 1.719e-02, 1.120e-03, -8.897e-03, 2.506e-04, -2.168e-03, -7.846e-03, -8.151e-03, -4.094e-02, -1.438e-01, -1.003e-01, -4.604e-02));
	r += mul(s3_3, M4(-1.578e-01, 1.210e-02, 3.487e-01, -3.262e-02, 3.742e-04, 9.616e-03, 1.303e-02, 5.110e-03, 1.707e-03, 4.907e-02, 6.342e-03, 1.963e-02, 4.629e-03, 1.505e-03, -4.951e-03, -8.595e-03));
	r += mul(s3_4, M4(-1.763e-01, -3.350e-01, 1.018e-01, 5.692e-01, -7.217e-03, -8.536e-02, -1.690e-02, 8.226e-02, -2.483e-01, -2.192e-01, -2.012e-01, -2.261e-01, 4.578e-02, 4.049e-03, 2.079e-02, 8.715e-02));
	r += mul(s3_5, M4(-1.079e-02, -3.009e-02, 9.071e-02, 7.741e-02, 5.323e-02, 1.092e-02, 1.081e-02, 4.503e-02, 2.606e-02, 8.399e-03, 2.326e-02, -7.789e-03, -4.273e-02, 1.784e-02, -1.063e-03, -1.401e-01));
	r += mul(s3_6, M4(2.717e-02, 1.352e-02, 2.031e-02, -3.549e-02, -6.438e-03, 8.637e-05, -1.948e-03, -8.112e-04, 2.598e-02, 2.268e-03, 2.072e-02, 3.520e-02, -2.661e-03, -6.068e-04, -8.194e-04, -7.309e-03));
	r += mul(s3_7, M4(2.399e-02, 3.650e-02, 1.175e-02, 4.690e-03, 3.204e-02, 2.390e-02, 1.057e-01, -6.462e-02, 1.578e-02, 1.539e-02, -3.680e-02, -2.382e-02, 7.023e-03, 4.780e-03, 2.130e-02, -2.726e-03));
	r += mul(s3_8, M4(8.314e-03, 3.137e-02, -2.222e-02, 2.002e-02, -2.681e-03, 8.851e-02, 1.471e-02, 1.126e-01, 8.447e-03, 7.405e-03, 3.043e-02, 6.330e-03, 7.405e-03, 2.350e-02, -1.157e-02, 3.236e-02));
	r += V4(6.193e-05, 1.022e-04, -9.682e-06, 2.041e-04);
	return tanh(r);
}
void Pass7(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 8
//!DESC CuNNy-4x8C-EASU-NVL-shuffle
//!STYLE PS
//!IN t2, INPUT, easu
float4 Pass8(float2 pos) {
	float2 pt = float2(GetInputPt());
	static const float3x3 rgb2yuv = {0.299, 0.587, 0.114, -0.169, -0.331, 0.5, 0.5, -0.419, -0.081};
	static const float3x3 yuv2rgb = {1, -0.00093, 1.401687, 1, -0.3437, -0.71417, 1, 1.77216, 0.00099};
	float4 r = 0.0;
	float2 size = float2(GetInputSize());
	float2 f = frac(pos * size);
	float3 yuv = mul(rgb2yuv, INPUT.SampleLevel(SL, pos, 0).rgb);
	int2 i = int2(f * 2.0);
	r.r = t2.SampleLevel(SP, (float2(0.5, 0.5) - f) * pt + pos, 0)[2*i.y + i.x];
	r.r += easu.SampleLevel(SP, pos, 0).r;
	r.a = 1.0;
	r.r = clamp(r, 0.0, 1.0);
	float3 px = mul(yuv2rgb, float3(r.r, yuv.yz));
	return float4(px, 1.0);
}
