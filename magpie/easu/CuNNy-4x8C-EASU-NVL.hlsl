// CuNNy 4x8C CHROMA NVL
// Copyright (c) 2024 cunnyplapper

// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public
// License along with this program.  If not, see <https://www.gnu.org/licenses/>.
/* ------------------------------------------------------------------- */

//!MAGPIE EFFECT
//!VERSION 3
//!OUTPUT_WIDTH INPUT_WIDTH * 2
//!OUTPUT_HEIGHT INPUT_HEIGHT * 2

//!TEXTURE
Texture2D INPUT;

//!TEXTURE
//!WIDTH INPUT_WIDTH * 2
//!HEIGHT INPUT_HEIGHT * 2
//!FORMAT R8_UNORM
Texture2D easu;

//!SAMPLER
//!FILTER POINT
SamplerState SP;

//!SAMPLER
//!FILTER LINEAR
SamplerState SL;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t1;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t2;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t3;

// FSR mpv | modified
// Copyright (c) 2021 Advanced Micro Devices, Inc. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// FidelityFX FSR v1.0.2 by AMD
// ported to mpv by agyild

//!PASS 1
//!DESC CuNNy-EASU
//!STYLE PS
//!IN INPUT
//!OUT easu

float GetLuma(float3 rgb) {
	return dot(float3(0.299, 0.587, 0.114), rgb);
}

float APrxLoRcpF1(float a) {
	return asfloat(uint(0x7ef07ebb) - asuint(a));
}

float APrxLoRsqF1(float a) {
	return asfloat(uint(0x5f347d74) - (asuint(a) >> uint(1)));
}

float AMin3F1(float x, float y, float z) {

	return min(x, min(y, z));
}

float AMax3F1(float x, float y, float z) {
	return max(x, max(y, z));
}

void tap(inout float aC, inout float aW, float2 off, float2 dir, float2 len,
         float lob, float clp, float c){
	float2 v;
	v.x = (off.x * ( dir.x)) + (off.y * dir.y);
	v.y = (off.x * (-dir.y)) + (off.y * dir.x);
	v *= len;
	float d2 = v.x * v.x + v.y * v.y;
	d2 = min(d2, clp);
	float wB = float(2.0 / 5.0) * d2 + -1.0;

	float wA = lob * d2 + -1.0;
	wB *= wB;
	wA *= wA;
	wB = float(25.0 / 16.0) * wB + float(-(25.0 / 16.0 - 1.0));
	float w = wB * wA;
	aC += c * w;
	aW += w;
}

void set(inout float2 dir, inout float len, float2 pp, bool biS, bool biT,
         bool biU, bool biV, float lA, float lB, float lC, float lD, float lE){

	float w = 0.0;
	if (biS)
		w = (1.0 - pp.x) * (1.0 - pp.y);
	if (biT)
		w =        pp.x  * (1.0 - pp.y);
	if (biU)
		w = (1.0 - pp.x) *        pp.y;

	if (biV)
		w =        pp.x  *        pp.y;
	float dc = lD - lC;
	float cb = lC - lB;
	float lenX = max(abs(dc), abs(cb));
	lenX = APrxLoRcpF1(lenX);
	float dirX = lD - lB;
	lenX = clamp(abs(dirX) * lenX, 0.0, 1.0);
	lenX *= lenX;
	float ec = lE - lC;

	float ca = lC - lA;
	float lenY = max(abs(ec), abs(ca));
	lenY = APrxLoRcpF1(lenY);
	float dirY = lE - lA;
	lenY = clamp(abs(dirY) * lenY, 0.0, 1.0);
	lenY *= lenY;
	dir += float2(dirX, dirY) * w;
	len += dot(float2(w, w), float2(lenX, lenY));
}

float4 Pass1(float2 pos) {
	float2 pt = float2(GetInputPt());
	float2 size = float2(GetInputSize());
	float4 pix = float4(0.0, 0.0, 0.0, 1.0);
	float2 pp = pos * size - float2(0.5, 0.5);
	float2 fp = floor(pp);
	pp -= fp;
	float b = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(0.5, -0.5)) * pt), 0).rgb);
	float c = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(1.5, -0.5)) * pt), 0).rgb);
	float e = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(-0.5, 0.5)) * pt), 0).rgb);
	float f = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 0.5, 0.5)) * pt), 0).rgb);
	float g = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 1.5, 0.5)) * pt), 0).rgb);
	float h = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 2.5, 0.5)) * pt), 0).rgb);
	float i = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(-0.5, 1.5)) * pt), 0).rgb);
	float j = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 0.5, 1.5)) * pt), 0).rgb);
	float k = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 1.5, 1.5)) * pt), 0).rgb);
	float l = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 2.5, 1.5)) * pt), 0).rgb);
	float n = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(0.5, 2.5) ) * pt), 0).rgb);
	float o = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(1.5, 2.5) ) * pt), 0).rgb);
	float4 bczzL = float4(b, c, 0.0, 0.0);
	float4 ijfeL = float4(i, j, f, e);
	float4 klhgL = float4(k, l, h, g);
	float4 zzonL = float4(0.0, 0.0, o, n);
	float bL = bczzL.x;
	float cL = bczzL.y;
	float iL = ijfeL.x;
	float jL = ijfeL.y;
	float fL = ijfeL.z;
	float eL = ijfeL.w;
	float kL = klhgL.x;
	float lL = klhgL.y;
	float hL = klhgL.z;
	float gL = klhgL.w;
	float oL = zzonL.z;
	float nL = zzonL.w;
	float2 dir = float2(0.0, 0.0);
	float len = 0.0;
	set(dir, len, pp, true, false, false, false, bL, eL, fL, gL, jL);
	set(dir, len, pp, false, true, false, false, cL, fL, gL, hL, kL);
	set(dir, len, pp, false, false, true, false, fL, iL, jL, kL, nL);
	set(dir, len, pp, false, false, false, true, gL, jL, kL, lL, oL);
	float2 dir2 = dir * dir;
	float dirR = dir2.x + dir2.y;
	bool zro = dirR < float(1.0 / 32768.0);
	dirR = APrxLoRsqF1(dirR);
	dirR = zro ? 1.0 : dirR;
	dir.x = zro ? 1.0 : dir.x;
	dir *= float2(dirR, dirR);
	len = len * 0.5;
	len *= len;
	float stretch = (dir.x * dir.x + dir.y * dir.y) * APrxLoRcpF1(max(abs(dir.x), abs(dir.y)));
	float2 len2 = float2(1.0 + (stretch - 1.0) * len, 1.0 + -0.5 * len);
	float lob = 0.5 + float((1.0 / 4.0 - 0.04) - 0.5) * len;
	float clp = APrxLoRcpF1(lob);
	float aC = 0.0;
	float aW = 0.0;
	tap(aC, aW, float2( 0.0,-1.0) - pp, dir, len2, lob, clp, bL);
	tap(aC, aW, float2( 1.0,-1.0) - pp, dir, len2, lob, clp, cL);
	tap(aC, aW, float2(-1.0, 1.0) - pp, dir, len2, lob, clp, iL);
	tap(aC, aW, float2( 0.0, 1.0) - pp, dir, len2, lob, clp, jL);
	tap(aC, aW, float2( 0.0, 0.0) - pp, dir, len2, lob, clp, fL);
	tap(aC, aW, float2(-1.0, 0.0) - pp, dir, len2, lob, clp, eL);
	tap(aC, aW, float2( 1.0, 1.0) - pp, dir, len2, lob, clp, kL);
	tap(aC, aW, float2( 2.0, 1.0) - pp, dir, len2, lob, clp, lL);
	tap(aC, aW, float2( 2.0, 0.0) - pp, dir, len2, lob, clp, hL);
	tap(aC, aW, float2( 1.0, 0.0) - pp, dir, len2, lob, clp, gL);
	tap(aC, aW, float2( 1.0, 2.0) - pp, dir, len2, lob, clp, oL);
	tap(aC, aW, float2( 0.0, 2.0) - pp, dir, len2, lob, clp, nL);
	pix.r = aC / aW;
	float min1 = min(AMin3F1(fL, gL, jL), kL);
	float max1 = max(AMax3F1(fL, gL, jL), kL);
	pix.r = clamp(pix.r, min1, max1);
	pix.r = clamp(pix.r, 0.0, 1.0);
	return pix;
}

//!PASS 2
//!DESC CuNNy-4x8C-CHROMA-NVL-in
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN INPUT
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) (dot(float3(-2.085e-01, -3.952e-01, -9.107e-02), O(INPUT, float2(x, y)).rgb) + 4.244e-01)
float4 f0(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	V4 r = 0.0;
	r += V4(-6.168e-03, 3.380e-02, 4.951e-01, 6.975e-03) * s0_0;
	r += V4(-1.292e-02, 5.254e-01, 2.643e-02, -5.218e-01) * s0_1;
	r += V4(1.763e-02, 6.030e-02, -5.969e-02, 1.056e-02) * s0_2;
	r += V4(7.680e-03, -3.057e-01, 1.735e-01, 6.447e-02) * s0_3;
	r += V4(6.852e-01, -3.584e-01, -6.191e-01, 4.583e-01) * s0_4;
	r += V4(-4.168e-02, 2.590e-02, -2.393e-02, -7.850e-02) * s0_5;
	r += V4(1.708e-02, 8.233e-02, -5.976e-02, -1.347e-02) * s0_6;
	r += V4(-6.660e-01, -3.557e-02, -2.757e-02, 4.529e-02) * s0_7;
	r += V4(2.767e-03, -2.917e-02, 9.395e-02, 2.506e-02) * s0_8;
	r += V4(1.620e-04, 3.538e-03, 1.110e-03, 1.138e-02);
	return r;
}
float4 f1(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	V4 r = 0.0;
	r += V4(3.386e-02, 2.571e-02, -5.898e-02, 1.152e-02) * s0_0;
	r += V4(-4.287e-01, 2.710e-02, -3.861e-03, 3.721e-01) * s0_1;
	r += V4(4.151e-01, -3.191e-01, 4.461e-03, -1.314e-01) * s0_2;
	r += V4(1.242e-01, -1.571e-02, 5.601e-01, -6.754e-02) * s0_3;
	r += V4(2.979e-01, 6.348e-01, -1.974e-02, -3.401e-02) * s0_4;
	r += V4(-4.308e-01, -3.740e-01, -1.461e-02, 7.147e-03) * s0_5;
	r += V4(-1.255e-01, -3.772e-02, -3.406e-02, 1.571e-02) * s0_6;
	r += V4(1.223e-01, 5.508e-02, -7.273e-04, -1.109e-02) * s0_7;
	r += V4(-8.295e-03, 5.360e-03, 3.144e-04, -7.312e-03) * s0_8;
	r += V4(3.817e-04, 1.152e-04, 1.141e-01, -6.421e-02);
	return r;
}
void Pass2(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	min16float s0_0 = l0(-1.0, -1.0);
	min16float s0_1 = l0(0.0, -1.0);
	min16float s0_2 = l0(1.0, -1.0);
	min16float s0_3 = l0(-1.0, 0.0);
	min16float s0_4 = l0(0.0, 0.0);
	min16float s0_5 = l0(1.0, 0.0);
	min16float s0_6 = l0(-1.0, 1.0);
	min16float s0_7 = l0(0.0, 1.0);
	min16float s0_8 = l0(1.0, 1.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
}
//!PASS 3
//!DESC CuNNy-4x8C-CHROMA-NVL-conv1
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2, t3
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(5.087e-01, -7.567e-01, 7.934e-02, -1.000e-01, -2.163e-02, 1.865e-01, 3.679e-02, -3.764e-02, 8.116e-02, -6.938e-02, 3.019e-02, -2.657e-02, -3.279e-01, 2.560e-01, -1.001e-01, 2.528e-01));
	r += mul(s0_1, M4(-4.623e-02, 2.818e-01, -2.152e-01, 6.918e-03, -2.399e-01, 5.251e-02, 1.045e-01, 8.483e-02, -1.041e-01, -1.254e-01, -9.253e-02, 2.859e-01, 8.548e-02, -4.232e-02, 3.824e-02, -1.619e-01));
	r += mul(s0_2, M4(-9.220e-02, 8.462e-02, -1.304e-01, -2.270e-01, -5.615e-02, -3.354e-02, 7.149e-02, -1.135e-01, -1.536e-01, 9.033e-02, -3.251e-02, 6.287e-02, -5.199e-02, -1.412e-01, -5.957e-02, -2.998e-02));
	r += mul(s0_3, M4(2.988e-01, -4.307e-01, 1.345e-01, 2.826e-02, 2.086e-01, 3.315e-01, -7.882e-02, -1.498e-01, -1.939e-01, 1.629e-01, -4.389e-02, 1.111e-01, 2.046e-01, 1.217e-01, -5.137e-02, 7.939e-02));
	r += mul(s0_4, M4(-4.946e-01, -2.549e-01, -1.353e+00, -1.185e-01, -4.696e-03, 6.599e-02, 2.120e-01, -5.750e-02, 1.957e-01, -7.090e-01, -2.406e-02, 4.483e-02, -1.115e-02, -6.371e-02, 7.136e-02, 7.536e-02));
	r += mul(s0_5, M4(-8.441e-03, -2.645e-02, -2.873e-01, -2.137e-01, -5.897e-02, 2.902e-02, 1.562e-01, -2.458e-01, -4.978e-01, -4.664e-01, -2.340e-01, 1.352e-02, 2.093e-01, -3.402e-02, 6.918e-02, 2.376e-01));
	r += mul(s0_6, M4(-2.394e-02, -4.122e-02, 6.117e-02, -2.991e-02, 1.178e-01, -1.479e-01, 2.153e-01, -5.354e-02, 1.128e-01, -6.518e-02, -8.055e-02, -2.617e-02, -1.981e-02, -2.165e-01, -2.438e-01, 2.280e-01));
	r += mul(s0_7, M4(1.283e-01, 5.534e-02, -1.098e-02, -1.549e-02, 3.278e-01, 2.529e-01, -4.502e-01, -1.787e-01, 3.212e-01, -7.475e-01, -7.997e-01, -1.595e-01, 5.636e-02, 6.235e-02, 3.583e-01, -4.865e-01));
	r += mul(s0_8, M4(1.973e-02, -1.335e-02, 6.336e-03, -3.787e-02, 4.788e-02, 2.223e-01, -1.873e-01, 1.656e-01, -6.636e-02, -5.963e-01, -4.894e-02, 1.386e-01, -2.107e-01, 9.180e-02, 7.954e-02, -5.900e-05));
	r += mul(s1_0, M4(-6.422e-02, 4.977e-01, -2.227e-03, 1.945e-01, -9.956e-02, 3.125e-01, -6.934e-02, 2.317e-01, 7.541e-03, 9.283e-03, 5.000e-02, -1.352e-01, -2.566e-01, 8.487e-02, 4.100e-02, 1.648e-01));
	r += mul(s1_1, M4(1.082e+00, 1.416e-01, 5.216e-01, 8.861e-02, 8.115e-02, -1.878e-01, 4.676e-03, 1.309e-01, -6.128e-02, 1.499e-01, 1.148e-01, 1.144e-01, -3.362e-01, 3.252e-02, 4.989e-02, 4.644e-02));
	r += mul(s1_2, M4(1.005e-01, -1.810e-01, 1.760e-01, -3.067e-02, -4.661e-04, -1.620e-01, -5.129e-02, 2.830e-01, -1.406e-01, 1.268e-01, 1.605e-01, -1.460e-01, -2.545e-01, -6.012e-02, 1.449e-02, -1.916e-01));
	r += mul(s1_3, M4(-1.178e-02, 3.369e-01, 5.297e-05, -9.023e-03, 3.390e-02, -2.743e-01, -2.111e-01, 2.053e-01, -4.561e-02, 1.061e-01, 2.145e-02, 1.133e-01, 2.282e-01, -1.038e-01, 1.450e-01, -3.683e-01));
	r += mul(s1_4, M4(-3.188e-01, -2.438e-01, -3.295e-01, -9.030e-02, -8.398e-02, 2.197e-02, -7.589e-02, 5.236e-01, 2.107e-01, 4.657e-01, 5.554e-01, -7.207e-02, -3.819e-01, 2.211e-02, -2.441e-01, -1.120e-02));
	r += mul(s1_5, M4(-2.628e-01, 1.204e-01, -1.954e-02, -2.642e-02, 2.406e-01, -1.609e-01, -1.812e-01, 5.586e-01, -1.045e-01, 4.385e-02, 1.608e-01, -4.710e-01, -3.160e-01, -9.107e-02, 1.675e-01, -2.147e-01));
	r += mul(s1_6, M4(-2.532e-02, -2.644e-01, 7.353e-02, -6.855e-02, -5.528e-02, -5.754e-01, -2.377e-01, 8.915e-02, 4.207e-02, 3.297e-01, 7.079e-02, 4.698e-02, 3.505e-01, -5.587e-01, -1.989e-01, -1.072e-01));
	r += mul(s1_7, M4(2.822e-02, 7.158e-02, -7.514e-03, 1.057e-01, -2.570e-01, -9.997e-01, 1.540e-01, -1.049e-01, -4.272e-02, 5.621e-01, -9.290e-02, -1.234e-01, 1.844e-01, -1.987e-01, -4.693e-02, 5.090e-01));
	r += mul(s1_8, M4(-5.591e-02, -5.064e-02, -7.737e-02, -9.806e-02, -3.947e-01, -2.030e-01, 2.283e-02, -1.946e-02, -1.418e-01, 4.974e-01, -4.920e-03, -1.377e-01, -3.977e-02, -1.195e-01, -8.616e-02, 1.180e-01));
	r += mul(s2_0, M4(-3.010e-02, -2.977e-01, -1.725e-01, 3.236e-01, -5.513e-02, 1.273e-02, 1.046e-01, 2.741e-01, 9.125e-03, 7.816e-02, -6.902e-02, -7.842e-02, -7.881e-02, -4.299e-01, -2.462e-01, 1.194e-01));
	r += mul(s2_1, M4(1.292e-02, -1.589e-01, -2.674e-02, 8.259e-03, 7.605e-02, -1.343e-02, -7.462e-03, 8.626e-02, 2.324e-02, -1.380e-02, 5.618e-02, -1.054e-01, 5.616e-02, 6.805e-03, -8.331e-02, -7.442e-02));
	r += mul(s2_2, M4(2.178e-01, 6.787e-02, -9.143e-02, -7.057e-02, -2.730e-02, -1.279e-02, 2.823e-02, 1.326e-01, 4.473e-02, 7.635e-02, 4.553e-02, -1.832e-01, 2.198e-01, -1.728e-01, -3.073e-01, -2.047e-01));
	r += mul(s2_3, M4(-1.476e-02, -4.155e-01, -8.459e-03, 1.376e-01, -6.677e-02, 5.607e-01, 3.934e-01, 7.363e-01, -9.283e-02, -2.543e-04, -6.680e-04, 3.746e-02, 4.349e-02, -1.169e-01, -4.045e-02, 3.882e-01));
	r += mul(s2_4, M4(-2.803e-01, 3.468e-01, 2.297e-01, -8.360e-02, -5.736e-01, 1.938e-01, -2.391e-01, 3.914e-02, -3.191e-01, -6.824e-02, -1.866e-01, 6.940e-02, -1.277e-01, -8.570e-02, 1.034e-01, -1.940e-01));
	r += mul(s2_5, M4(-1.743e-01, 9.232e-03, -7.694e-02, -3.458e-02, -1.054e-01, 1.024e-01, -1.161e-02, -1.500e-02, 2.999e-01, 1.747e-01, 1.925e-01, -1.052e-01, 4.638e-01, 5.799e-02, 1.943e-01, -1.157e-01));
	r += mul(s2_6, M4(2.407e-01, 1.495e-01, -1.683e-01, -2.707e-01, -1.664e-01, 7.988e-01, 3.334e-01, 2.083e-01, 7.001e-02, -2.745e-01, 1.851e-02, 1.613e-02, -4.732e-01, -2.834e-02, 4.209e-01, -4.586e-01));
	r += mul(s2_7, M4(-7.635e-02, 4.165e-01, 1.190e-01, 1.853e-01, 9.137e-02, 5.469e-01, 4.425e-01, 8.568e-02, -3.486e-02, -4.434e-02, 7.483e-02, 1.044e-03, -6.052e-01, -3.383e-01, 7.731e-02, -1.555e+00));
	r += mul(s2_8, M4(1.182e-01, -8.508e-02, -1.252e-01, 1.834e-02, -4.417e-02, 4.301e-03, 2.862e-02, 9.545e-02, -1.930e-01, 8.291e-02, -1.239e-01, 7.739e-02, -3.719e-01, -4.546e-01, -9.375e-02, -9.719e-01));
	r += mul(s3_0, M4(-1.592e-02, 2.287e-01, -5.787e-02, 5.803e-02, 6.863e-02, 2.769e-02, -1.337e-01, 1.430e-02, -2.814e-01, 1.146e+00, -2.254e-01, 6.412e-01, -1.874e-01, -1.072e-01, -1.221e-01, 1.172e-01));
	r += mul(s3_1, M4(7.398e-02, 1.679e-02, 9.912e-02, -3.000e-01, 6.055e-02, -1.406e-01, -8.971e-02, -3.208e-01, 1.415e-02, -5.036e-01, -5.647e-02, -1.846e-01, 7.256e-02, -1.080e-01, -1.528e-01, -2.196e-01));
	r += mul(s3_2, M4(-9.855e-02, 4.743e-02, -4.256e-02, 5.572e-02, 5.164e-02, 2.901e-02, 5.042e-02, 8.808e-02, -1.947e+00, 5.999e-01, -5.983e-01, 2.465e+00, -4.456e-02, -9.398e-03, -1.741e-01, -5.980e-02));
	r += mul(s3_3, M4(5.218e-01, -3.647e-02, -1.413e-01, 3.779e-01, 6.231e-01, -2.503e-01, -1.373e-01, 2.287e-01, 5.338e-02, 4.191e-01, -1.630e-01, 1.090e+00, 3.543e-02, 1.541e-01, -1.761e-02, -1.008e-01));
	r += mul(s3_4, M4(7.144e-02, -2.586e-01, 3.453e-02, -2.744e-02, -2.626e-02, -3.998e-01, -3.919e-01, -3.233e-01, -3.296e-01, -1.687e+00, -3.218e-01, -1.091e+00, 1.593e-01, -2.812e-02, 2.133e-02, 1.353e-01));
	r += mul(s3_5, M4(1.138e-01, -1.770e-01, 6.553e-02, -1.076e-01, -1.864e-01, -2.113e-02, 1.317e-02, -8.678e-02, -3.891e+00, -1.161e+00, -1.518e+00, 4.018e-01, 2.065e-03, -8.532e-04, -6.111e-02, 4.389e-02));
	r += mul(s3_6, M4(-2.007e-01, 2.266e-01, 2.565e-01, -8.531e-02, 1.677e-01, -8.108e-01, -7.898e-02, 1.489e-01, 8.136e-02, 1.163e+00, 7.474e-02, 3.259e-01, 4.955e-02, 3.506e-02, 3.721e-01, 1.842e-01));
	r += mul(s3_7, M4(-8.667e-02, -1.370e-01, 1.994e-01, -6.120e-02, 8.631e-02, -3.428e-01, 2.085e-01, -4.111e-01, -5.178e-01, -1.320e+00, 1.763e-01, 7.233e-01, 1.172e-02, 1.034e-01, 1.138e-01, 2.597e-01));
	r += mul(s3_8, M4(-1.300e-01, -1.219e-01, 5.112e-03, -1.753e-01, -7.690e-02, -5.097e-02, -5.658e-02, 5.318e-02, -6.200e-01, -1.840e+00, 1.853e+00, 7.056e-01, 2.251e-01, -6.731e-02, -1.277e-02, 3.759e-02));
	r += V4(6.372e-02, -4.557e-03, -4.308e-03, 7.742e-02);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-2.689e-01, -1.453e-01, -3.577e-01, 3.529e-02, -1.680e-01, -8.862e-02, 3.728e-02, -2.220e-01, -1.231e-03, 2.713e-02, 4.881e-02, 1.775e-02, -9.362e-02, 9.448e-02, 2.247e-01, -3.922e-01));
	r += mul(s0_1, M4(-1.877e-02, 3.019e-03, -9.104e-01, 3.449e-01, 2.066e-03, -1.884e-02, -4.307e-02, -3.353e-02, -9.339e-02, 3.991e-02, 2.248e-01, 1.847e-01, 7.237e-03, -2.056e-02, -1.725e-04, 3.171e-02));
	r += mul(s0_2, M4(3.375e-01, 3.406e-01, -2.275e-01, 6.921e-02, -5.500e-02, 8.999e-02, 2.514e-02, -2.448e-01, 1.971e-02, 9.405e-02, 1.453e-01, 9.963e-02, -1.351e-01, 1.008e-01, 4.107e-02, -1.716e-01));
	r += mul(s0_3, M4(-2.361e-01, -4.857e-01, -4.814e-01, 6.764e-01, 8.906e-02, -1.804e-01, 2.480e-03, 5.530e-03, -2.398e-02, -2.079e-02, 3.015e-03, -7.094e-02, 2.630e-01, -3.029e-01, -1.710e-01, 4.744e-01));
	r += mul(s0_4, M4(3.490e-01, -6.474e-01, 3.350e-01, -2.913e-02, 3.079e-01, 1.525e-01, -3.382e-01, -1.702e-01, 3.524e-01, -2.103e-01, -4.036e-01, 4.411e-01, -1.947e-01, -8.768e-02, 3.119e-01, 7.516e-02));
	r += mul(s0_5, M4(2.889e-01, 7.214e-02, 6.070e-02, 5.259e-03, 1.357e-01, -1.592e-01, -4.165e-02, 1.767e-01, 9.318e-02, -1.831e-02, -5.108e-02, 6.269e-01, 8.035e-03, 1.401e-01, -2.299e-01, 1.877e-02));
	r += mul(s0_6, M4(9.130e-02, -5.172e-02, 6.895e-02, 4.799e-02, -2.202e-01, 3.573e-01, 1.033e-01, 2.279e-02, -2.440e-01, -1.556e-01, 7.128e-02, 8.521e-02, 9.040e-02, 1.730e-01, -2.058e-02, -5.187e-01));
	r += mul(s0_7, M4(3.925e-02, -4.147e-01, -5.325e-02, 3.669e-02, -2.623e-01, 7.058e-01, -2.003e-01, -2.431e-01, -1.682e-01, -8.846e-01, -3.322e-01, -1.529e-02, 1.727e-01, -1.134e-01, -1.610e-01, 6.250e-01));
	r += mul(s0_8, M4(3.200e-02, -1.220e-01, 1.181e-01, 8.167e-02, -4.971e-02, -1.713e-01, 1.982e-02, -2.605e-01, 1.657e-01, -4.017e-01, 2.887e-01, 1.564e-01, -1.294e-01, 1.517e-02, 2.447e-01, 9.328e-03));
	r += mul(s1_0, M4(5.696e-01, -7.979e-02, 9.917e-02, -1.641e-01, 1.326e-02, -1.216e-02, 2.549e-01, -1.639e-01, 5.128e-02, 2.638e-02, 7.180e-03, 1.337e-02, -4.829e-01, -3.707e-02, 1.292e-01, -1.552e-01));
	r += mul(s1_1, M4(1.219e+00, -4.250e-02, -1.965e-01, -3.527e-01, 5.894e-02, -1.111e-01, -1.918e-01, -1.370e-01, -1.197e-01, 7.729e-02, 8.481e-02, -1.308e-01, -5.209e-04, 4.340e-02, 2.178e-01, 5.263e-03));
	r += mul(s1_2, M4(3.824e-03, -3.264e-02, -4.087e-01, -5.268e-02, -6.840e-02, 2.477e-02, 4.378e-02, -2.002e-01, 2.067e-02, -1.293e-01, -7.755e-02, -1.714e-01, -3.772e-02, 2.867e-01, 1.307e-01, -1.427e-02));
	r += mul(s1_3, M4(4.632e-01, 9.456e-01, -4.943e-02, 2.081e-02, -1.901e-01, -4.439e-01, 1.972e-01, 7.698e-01, -8.644e-02, -4.956e-02, -2.398e-01, -2.360e-01, 3.474e-01, -3.534e-01, -2.881e-01, -1.034e-02));
	r += mul(s1_4, M4(-5.071e-01, 9.206e-01, -7.563e-04, -6.972e-01, -1.029e-01, -7.286e-02, -1.151e-01, 3.594e-01, 2.789e-01, 4.225e-01, -3.950e-01, -2.127e-01, 8.082e-02, -2.038e-01, 1.664e-01, 7.731e-02));
	r += mul(s1_5, M4(-7.197e-02, 2.647e-01, -1.768e-01, -3.460e-01, 4.450e-02, 2.192e-01, 7.861e-02, 2.646e-01, 1.356e-01, 2.623e-01, 1.511e-03, 1.470e-01, 2.336e-01, 2.268e-01, -3.505e-01, 6.281e-01));
	r += mul(s1_6, M4(-4.074e-02, 5.768e-02, -5.110e-03, 1.384e-03, -1.891e-03, -4.443e-01, -1.195e-01, -1.712e-01, -9.235e-02, 3.719e-02, 1.251e-01, 3.353e-02, -3.627e-01, -5.154e-01, -9.781e-02, 7.535e-02));
	r += mul(s1_7, M4(-6.408e-03, 8.541e-02, -1.452e-01, -5.436e-02, 2.082e-01, -5.322e-01, -1.522e-01, 5.478e-01, 1.619e-01, 1.353e+00, -5.915e-02, -3.467e-01, -1.238e-01, 1.339e-02, -8.655e-03, -1.419e-01));
	r += mul(s1_8, M4(-1.612e-02, -7.564e-02, 3.260e-02, 4.604e-02, 7.332e-02, -2.753e-01, 3.374e-01, 3.979e-01, -6.692e-02, 2.207e-01, -1.934e-02, -5.349e-01, 1.116e-01, -5.879e-01, -3.453e-02, -9.441e-02));
	r += mul(s2_0, M4(1.567e-01, 4.831e-01, -2.057e-01, 1.210e-01, 1.858e-01, 1.728e-01, -2.632e-01, -3.642e-01, -6.939e-03, -9.193e-03, -1.571e-02, -2.176e-02, -1.554e-02, 3.549e-01, -3.854e-01, -8.639e-02));
	r += mul(s2_1, M4(2.972e-02, 3.083e-02, -2.254e-01, 1.104e-01, 5.007e-02, -2.183e-03, 1.339e-02, -2.773e-01, 2.202e-01, -1.350e-01, 8.957e-02, -1.589e-01, 8.758e-02, -1.449e-01, -4.054e-01, 7.490e-02));
	r += mul(s2_2, M4(2.776e-02, -6.747e-02, 6.733e-02, -7.783e-02, 4.823e-02, -1.925e-01, -2.186e-02, -5.468e-02, -1.902e-01, -3.401e-02, 2.310e-02, -2.017e-01, 6.879e-02, 6.341e-01, -4.728e-02, 1.083e-01));
	r += mul(s2_3, M4(2.589e-01, -3.037e-03, -4.999e-01, 6.618e-01, -3.699e-01, 1.035e-01, -6.582e-01, 3.842e-01, 9.183e-02, 5.021e-02, 2.424e-01, 1.462e-01, 5.842e-01, -1.028e-01, -2.382e-02, 1.052e+00));
	r += mul(s2_4, M4(-2.874e-01, 1.345e-01, 1.128e-01, -8.053e-02, 1.298e-02, 3.269e-01, 1.328e-01, -2.270e-01, -1.178e-01, -1.016e-01, 6.237e-02, -7.513e-02, -9.920e-02, -1.574e-01, -1.077e-01, 2.940e-01));
	r += mul(s2_5, M4(1.111e-01, -1.207e-01, -9.414e-02, 5.375e-02, 1.728e-01, 1.002e-01, 8.297e-02, 8.007e-02, 7.943e-04, 9.699e-02, 2.512e-02, 8.092e-02, -4.517e-01, 1.486e-01, -4.288e-01, -1.043e-01));
	r += mul(s2_6, M4(-9.088e-02, 1.564e-01, -1.459e-01, -3.915e-02, 3.097e-01, 3.214e-01, -5.823e-02, 2.049e-01, 8.077e-02, -1.065e-01, -1.287e-01, 9.057e-02, 8.676e-01, -4.328e-01, -9.241e-02, -4.629e-01));
	r += mul(s2_7, M4(-9.005e-02, -2.702e-01, -1.336e-01, -1.289e-01, -9.793e-02, -4.574e-02, 9.263e-02, 3.178e-01, -1.046e-01, 1.393e-01, -1.372e-01, 1.194e-01, 6.271e-02, 1.287e-01, 7.234e-01, -2.007e-01));
	r += mul(s2_8, M4(1.519e-01, 2.303e-02, 9.324e-02, 3.679e-02, 2.138e-02, 1.043e-02, -1.103e-02, 1.922e-02, -4.161e-02, 1.216e-01, 2.048e-02, 4.529e-03, -4.592e-01, -1.280e-01, 4.504e-01, 1.621e-01));
	r += mul(s3_0, M4(-7.831e-02, 1.771e-01, 2.740e-01, 1.175e-02, 2.672e-01, 2.751e-02, 3.412e-02, -1.527e-01, 7.052e-01, -8.528e-01, 7.017e-01, -1.327e-01, 5.930e-02, 2.125e-01, -4.700e-02, -1.880e-01));
	r += mul(s3_1, M4(-2.676e-02, -3.452e-01, 2.066e-01, -6.300e-02, 6.744e-02, -1.436e-03, -4.424e-02, -2.539e-01, 8.031e-01, -2.700e-01, -1.226e+00, -1.642e+00, -4.389e-03, -1.418e-01, -1.070e-01, -1.719e-05));
	r += mul(s3_2, M4(-1.223e-01, -5.636e-02, 7.784e-03, 2.634e-02, -1.316e-01, -1.666e-01, -7.449e-02, -5.624e-02, -1.901e+00, -2.996e-01, -1.460e+00, -2.214e+00, 5.324e-02, 2.409e-01, 5.433e-02, 4.668e-03));
	r += mul(s3_3, M4(2.706e-01, -2.398e-01, -1.566e-02, 9.973e-02, 9.566e-01, -6.793e-01, 2.051e-01, 6.699e-01, -2.849e-02, 2.532e-01, 7.623e-01, -5.685e-01, 1.204e-01, -8.834e-02, -2.294e-01, 1.346e-01));
	r += mul(s3_4, M4(-6.761e-02, -1.828e-01, 3.985e-01, -2.467e-01, -3.115e-01, 2.065e-01, 5.779e-01, 9.449e-02, -8.771e-02, 1.001e+00, -1.142e+00, 2.000e+00, -1.910e-02, 6.376e-02, 1.279e-01, -2.824e-01));
	r += mul(s3_5, M4(-5.250e-02, -2.006e-01, 1.080e-01, -2.618e-02, 1.348e-01, 7.766e-03, -5.918e-03, -4.086e-02, -9.203e-01, 1.076e+00, -3.948e-01, -4.305e-01, -5.282e-02, 2.991e-02, 1.409e-01, -1.424e-01));
	r += mul(s3_6, M4(1.118e-01, -1.534e-02, 2.116e-01, 8.260e-02, 3.257e-01, -5.397e-01, -3.509e-01, 1.527e-01, -1.865e-01, -7.394e-01, 7.864e-01, 2.742e-01, -2.614e-02, -4.564e-02, -4.601e-02, 2.309e-01));
	r += mul(s3_7, M4(-4.617e-02, 2.573e-01, -5.048e-02, -1.714e-01, 1.142e-01, -1.999e-01, -6.790e-02, 4.664e-01, 2.724e-02, 1.076e+00, -9.763e-01, 9.164e-02, -6.765e-02, -1.417e-01, -1.615e-01, 9.012e-02));
	r += mul(s3_8, M4(-3.183e-02, 5.657e-04, -5.183e-02, 8.413e-03, -8.497e-02, 5.459e-02, -4.399e-02, -4.260e-02, -1.896e-01, -5.148e-01, -5.157e-02, 3.233e-01, 5.821e-02, -1.714e-01, -5.245e-02, 1.924e-01));
	r += V4(2.141e-02, 8.938e-03, -2.828e-02, 8.012e-04);
	return r;
}
void Pass3(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t3[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 4
//!DESC CuNNy-4x8C-CHROMA-NVL-conv2
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t2, t3
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t2, float2(x, y))
#define l1(x, y) O(t3, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(9.383e-02, 1.563e-01, 8.549e-02, 1.191e-01, -1.489e-01, -1.791e-01, 5.701e-02, 3.319e-01, -1.129e-01, 2.010e-01, 2.049e-01, -4.856e-01, -3.352e-02, -4.643e-02, -4.005e-02, -8.572e-02));
	r += mul(s0_1, M4(-1.195e-02, 2.220e-02, -7.404e-02, 6.480e-02, -6.458e-02, -2.979e-03, 1.549e-02, 2.634e-01, -7.890e-01, 2.540e-02, 1.597e-01, 1.501e-02, 4.126e-02, -4.356e-02, 2.081e-02, -1.655e-01));
	r += mul(s0_2, M4(5.044e-03, 4.402e-02, 2.920e-02, -6.726e-02, 1.438e-01, 6.421e-02, 7.941e-02, 1.369e-02, -4.604e-01, 1.592e-01, -2.595e-01, -2.993e-01, -7.555e-03, 2.017e-02, -5.515e-02, 1.349e-01));
	r += mul(s0_3, M4(9.078e-02, -1.323e-01, 8.377e-01, -3.485e-02, -1.222e-01, -1.101e-02, 1.032e-01, -1.860e-01, -6.465e-01, 4.874e-01, 5.036e-01, -5.701e-02, 1.796e-01, -1.282e-01, 1.172e-01, 1.007e-01));
	r += mul(s0_4, M4(1.785e-01, -7.826e-03, -4.603e-01, 4.161e-01, 1.588e-01, -2.598e-02, 4.242e-02, -6.581e-02, -4.279e-01, -7.387e-01, -1.382e-01, 1.795e-01, -1.171e-01, 2.785e-01, 1.308e-02, 1.841e-01));
	r += mul(s0_5, M4(-1.086e-01, -1.967e-01, -7.740e-02, -9.875e-03, -2.398e-01, 6.426e-02, 1.749e-01, -1.479e-01, -3.460e-01, -1.899e-01, -1.572e-01, 1.192e-01, 8.927e-02, -4.054e-02, 1.184e-01, -2.779e-01));
	r += mul(s0_6, M4(-1.479e-01, 3.135e-02, 4.611e-01, 2.990e-01, -4.060e-03, -7.922e-02, -9.033e-02, -7.272e-02, -1.656e-01, 2.672e-01, 4.224e-02, 1.129e-01, 1.873e-01, 1.089e-01, 6.817e-02, -1.890e-01));
	r += mul(s0_7, M4(1.986e-01, 2.117e-01, -3.196e-02, 1.352e-01, -8.379e-02, -3.072e-02, -8.399e-02, -1.770e-01, -1.459e-01, -2.884e-01, -2.347e-01, -1.026e-01, 7.514e-02, 2.084e-01, -7.191e-02, -1.128e-01));
	r += mul(s0_8, M4(5.682e-02, -1.906e-01, -1.023e-01, -6.425e-03, -8.690e-02, 6.769e-02, 3.240e-02, -1.038e-01, -7.421e-02, -3.800e-01, -2.218e-01, -9.111e-02, -3.040e-02, 1.186e-01, 3.049e-02, 5.425e-02));
	r += mul(s1_0, M4(-1.861e-02, 2.106e-01, 6.863e-02, 5.419e-03, -5.143e-02, -1.479e-02, -1.629e-02, 2.172e-01, 1.211e-01, -3.430e-03, 2.402e-02, -2.028e-01, 3.510e-02, -1.146e-02, -3.557e-02, 4.344e-02));
	r += mul(s1_1, M4(-1.551e-01, -6.263e-02, -1.432e-01, 7.295e-02, -9.721e-02, -7.766e-02, -1.421e-01, 1.709e-01, -2.010e-03, -5.243e-03, 5.871e-02, 7.432e-03, 4.958e-02, -7.554e-02, 1.703e-02, -2.068e-01));
	r += mul(s1_2, M4(-4.249e-02, 5.080e-02, -1.484e-02, 8.182e-03, -7.091e-03, 2.296e-01, 2.979e-02, -1.179e-01, -2.494e-01, -3.159e-02, -1.602e-02, 3.795e-02, 6.699e-02, 8.587e-02, -3.884e-02, 2.702e-01));
	r += mul(s1_3, M4(-9.975e-02, -4.659e-02, 1.665e-01, 8.330e-02, -4.071e-02, 5.579e-02, 8.619e-02, 3.418e-02, -4.761e-02, 1.765e-01, -1.085e-01, -1.162e-01, -1.762e-02, -4.886e-02, 2.112e-02, -5.085e-02));
	r += mul(s1_4, M4(1.961e-01, -2.176e-01, -6.283e-02, 3.238e-01, 1.531e-01, -5.556e-01, -1.881e-01, -4.537e-01, 3.429e-01, 4.762e-01, -1.723e-01, 3.905e-01, -8.279e-02, 3.428e-01, -8.882e-02, -1.964e-01));
	r += mul(s1_5, M4(1.040e-01, 5.960e-02, -6.289e-02, -2.979e-02, -4.544e-01, 8.022e-02, 4.834e-01, 7.792e-02, -9.008e-02, -2.602e-01, -1.322e-01, 2.228e-01, 1.163e-01, 8.959e-02, 2.898e-01, -1.002e-01));
	r += mul(s1_6, M4(-2.423e-01, -4.410e-02, 3.314e-01, -7.927e-02, -1.092e-01, -1.703e-01, 1.603e-02, -8.177e-02, -8.048e-02, -1.064e-02, 8.667e-02, -2.299e-02, 2.339e-01, 5.548e-02, 5.931e-02, -2.174e-01));
	r += mul(s1_7, M4(-1.634e-02, 1.528e-01, 8.718e-02, -3.239e-01, -4.768e-01, -1.809e-01, -6.320e-02, -3.145e-01, 1.626e-01, 1.192e-01, -3.295e-02, -7.715e-02, -1.936e-01, -2.889e-01, -1.792e-01, -7.346e-01));
	r += mul(s1_8, M4(-5.149e-02, -7.343e-02, 1.509e-02, -5.973e-02, -1.492e-01, 7.197e-02, 6.832e-03, 1.363e-01, 1.774e-01, -6.681e-02, -9.984e-02, -1.384e-01, -3.794e-01, 3.273e-01, 2.490e-01, 2.306e-01));
	r += mul(s2_0, M4(-1.495e-01, 1.594e-02, 2.002e-02, 9.071e-02, 2.754e-02, 4.258e-02, 9.362e-03, -1.525e-03, 1.266e-01, -6.981e-02, -9.155e-02, 5.082e-02, 2.773e-02, 5.788e-02, -1.418e-02, 1.709e-01));
	r += mul(s2_1, M4(-6.442e-02, -2.269e-01, 1.073e-01, 3.691e-01, 1.355e-01, 1.389e-01, 1.014e-01, -5.270e-02, 8.208e-02, 2.132e-01, 8.788e-02, 4.556e-02, -5.033e-02, -7.635e-03, -1.117e-01, -1.211e-01));
	r += mul(s2_2, M4(-9.677e-02, 7.079e-02, 3.922e-02, 1.615e-01, -3.602e-02, 2.085e-01, 8.452e-02, -1.538e-01, 8.026e-02, 2.917e-02, -1.295e-01, 1.102e-01, 5.528e-02, 4.610e-02, 1.159e-02, 2.386e-02));
	r += mul(s2_3, M4(-3.819e-01, 5.442e-02, 4.215e-01, 8.901e-02, 1.585e-01, -2.024e-01, 1.263e-01, 6.018e-02, -7.488e-03, -2.977e-01, 1.532e-02, 1.751e-01, 1.488e-01, -2.956e-02, 1.261e-01, -6.659e-02));
	r += mul(s2_4, M4(-6.016e-01, 2.879e-01, -7.900e-01, 2.882e-01, -1.284e-01, 6.861e-01, 2.336e-01, 1.871e-01, -2.626e-01, 1.754e-01, 5.293e-01, 3.812e-01, 1.836e-01, -2.161e-01, -6.950e-01, -5.190e-02));
	r += mul(s2_5, M4(-6.983e-02, 3.569e-01, -8.229e-04, -8.139e-02, 1.113e-01, -7.002e-02, -1.862e-01, 7.618e-02, 1.422e-01, 7.404e-02, -1.814e-03, -4.335e-01, -2.510e-01, 9.975e-02, 9.588e-02, 3.993e-02));
	r += mul(s2_6, M4(-3.122e-01, 7.034e-02, 3.058e-01, 7.824e-02, -2.286e-01, 6.533e-02, 6.257e-02, -1.048e-01, 1.953e-01, 1.394e-01, 2.277e-01, 2.375e-02, 1.979e-01, 7.837e-02, 7.889e-02, 1.661e-01));
	r += mul(s2_7, M4(3.175e-01, 3.762e-01, -7.438e-02, 4.551e-02, -1.857e-01, 3.579e-01, 4.293e-01, 2.186e-01, 1.685e-01, 6.433e-01, 5.007e-02, 1.239e-01, 4.333e-02, -5.332e-01, 1.333e-01, 8.766e-02));
	r += mul(s2_8, M4(-1.489e-01, -2.751e-03, -3.160e-02, 9.622e-02, 3.868e-01, 3.676e-01, -7.989e-02, -4.200e-02, 7.491e-02, -5.924e-02, -4.186e-02, -2.044e-01, 3.436e-02, 1.730e-01, 6.543e-02, 3.492e-02));
	r += mul(s3_0, M4(8.546e-02, 5.147e-03, -4.437e-02, -1.196e-01, 4.448e-02, 1.182e-02, 8.964e-02, -1.392e-01, 5.682e-02, 1.875e-03, -2.869e-02, 2.475e-02, 4.530e-02, -4.666e-02, 2.037e-02, 1.055e-01));
	r += mul(s3_1, M4(2.097e-01, -1.179e-01, -9.432e-03, 3.724e-02, -1.381e-01, -9.103e-02, -1.022e-01, -1.959e-01, -8.215e-04, 1.061e-02, 2.846e-02, 5.327e-02, 2.602e-01, 1.837e-02, 6.205e-02, 1.228e-01));
	r += mul(s3_2, M4(2.654e-02, -5.870e-02, -1.743e-02, 1.547e-01, -2.437e-01, 3.182e-01, 4.499e-03, -2.423e-01, -5.423e-02, -7.280e-03, -4.982e-03, 6.006e-02, 1.914e-01, 9.543e-02, 7.038e-02, 9.106e-02));
	r += mul(s3_3, M4(-3.960e-02, -5.805e-02, -6.897e-02, 2.732e-01, 1.050e-01, 3.082e-02, 1.173e-01, 2.446e-01, 6.737e-02, -1.075e-02, 1.942e-02, 1.101e-01, 4.908e-02, -6.015e-02, 1.388e-01, 5.462e-02));
	r += mul(s3_4, M4(-1.949e-01, -8.944e-03, -6.577e-02, 5.632e-02, 2.593e-02, 1.623e-01, -1.397e-01, 7.448e-02, -2.312e-01, 1.313e-02, 1.272e-02, 3.694e-01, 6.342e-01, 8.940e-01, -1.938e-01, 5.214e-02));
	r += mul(s3_5, M4(3.029e-02, -2.544e-01, 2.120e-02, -8.584e-02, -1.912e-01, 7.424e-02, -1.498e-01, -1.069e-01, 1.383e-01, 9.829e-03, -4.276e-02, -9.288e-02, 7.508e-03, 4.374e-03, 2.488e-01, -9.318e-02));
	r += mul(s3_6, M4(-3.068e-02, -4.140e-02, 1.116e-01, -8.705e-02, -3.349e-03, 9.311e-02, -2.236e-02, 4.349e-02, 5.766e-02, 5.518e-02, 3.153e-01, 1.100e-01, 5.010e-02, -1.065e-01, -1.145e-01, 1.023e-01));
	r += mul(s3_7, M4(2.062e-02, 2.400e-01, 4.009e-02, 1.833e-01, 6.364e-02, -1.343e-01, 2.101e-01, 1.755e-01, 1.567e-01, 2.806e-01, 2.036e-01, 3.856e-01, 2.863e-01, 3.870e-01, 3.468e-01, -2.632e-01));
	r += mul(s3_8, M4(-6.284e-03, -1.030e-02, -7.299e-02, -4.954e-02, 7.548e-02, -1.064e-01, 2.778e-02, 2.303e-02, -5.472e-02, 2.358e-02, 4.737e-02, -2.006e-01, 1.482e-01, 5.962e-01, 2.292e-01, 1.921e-01));
	r += V4(-1.553e-02, -3.036e-02, -1.859e-02, -8.003e-03);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-1.443e-02, -2.042e-01, 2.666e-01, 2.652e-01, 2.898e-02, -9.842e-02, 5.567e-02, 1.579e-01, 9.785e-02, 1.250e-01, 5.354e-01, -4.305e-01, 1.121e-01, 9.425e-02, 6.288e-02, -1.072e-01));
	r += mul(s0_1, M4(1.107e-01, 1.708e-01, 1.794e-01, -1.003e-01, 9.924e-02, 3.173e-01, 1.124e-01, 1.451e-01, -3.391e-01, -9.324e-01, -6.293e-02, -9.827e-01, 2.976e-01, 6.135e-02, 2.016e-01, -3.971e-03));
	r += mul(s0_2, M4(4.822e-02, 2.407e-01, 6.266e-02, -9.189e-02, -5.312e-02, 1.624e-02, -3.548e-02, 4.721e-03, 2.924e-02, -4.223e-01, -2.498e-01, -4.327e-01, 3.195e-02, -7.294e-02, -6.671e-03, 3.474e-02));
	r += mul(s0_3, M4(9.789e-02, -2.155e-01, -3.673e-03, 5.722e-02, -3.654e-02, -1.483e-01, -1.183e-01, 4.399e-04, 7.141e-02, -1.835e-01, -3.041e-02, -7.875e-01, -7.903e-02, -2.354e-01, 3.099e-01, 2.221e-01));
	r += mul(s0_4, M4(8.455e-02, 1.001e+00, -3.627e-01, 3.366e-01, 1.954e-01, 2.850e-02, -3.380e-02, -1.500e-01, 3.455e-01, 3.193e-01, -3.093e-01, -5.646e-01, -2.755e-01, -4.337e-02, -2.604e-01, 5.974e-03));
	r += mul(s0_5, M4(-6.011e-02, 5.397e-02, -7.286e-02, 1.286e-02, -2.151e-02, -7.078e-02, -2.122e-02, -2.196e-02, 4.955e-02, 4.549e-02, 3.077e-01, -2.223e-01, 1.937e-01, -3.063e-02, 2.004e-01, -4.498e-02));
	r += mul(s0_6, M4(-6.310e-04, -1.033e-01, -2.820e-01, -1.382e-01, 1.424e-02, 1.111e-01, 3.187e-02, 4.677e-02, 1.056e-01, -1.480e-01, -1.097e-01, -1.764e-01, 9.057e-03, 5.908e-03, -2.838e-01, -2.388e-01));
	r += mul(s0_7, M4(-6.086e-01, -1.591e-02, -8.723e-02, 3.491e-01, 9.033e-02, 1.899e-01, 1.131e-01, -7.684e-02, -1.883e-01, -1.667e-02, 8.730e-03, -1.526e-01, -3.408e-01, -1.282e-01, -1.295e-01, -7.355e-03));
	r += mul(s0_8, M4(1.310e-01, -5.571e-02, -9.107e-02, 6.523e-02, -3.163e-02, 9.101e-02, 6.906e-02, -1.575e-02, 1.509e-01, -1.566e-01, 1.071e-01, -5.074e-02, -5.911e-02, 7.508e-02, -1.262e-01, 4.191e-02));
	r += mul(s1_0, M4(-6.079e-04, -8.396e-02, 7.345e-02, -1.792e-01, -9.602e-02, -9.064e-02, -2.200e-01, 1.753e-01, 7.334e-02, 2.044e-01, 2.728e-01, 3.466e-02, 3.577e-02, 1.356e-01, 3.655e-02, -1.149e-01));
	r += mul(s1_1, M4(-3.845e-02, -9.472e-02, -1.600e-01, -1.553e-01, -9.642e-02, -2.229e-01, -2.626e-01, 1.530e-01, 2.336e-02, 3.799e-01, 4.033e-01, -4.173e-01, 1.254e-01, 6.152e-02, 1.347e-01, -3.390e-02));
	r += mul(s1_2, M4(1.049e-02, -3.787e-02, -3.255e-02, -8.374e-04, -9.033e-02, -4.087e-01, -1.662e-01, -1.584e-01, -8.028e-03, -2.086e-01, 1.614e-02, 3.583e-02, -1.248e-01, 5.511e-02, -1.476e-02, 1.237e-01));
	r += mul(s1_3, M4(1.710e-01, -2.669e-01, 9.292e-02, -1.109e-01, 1.179e-01, -1.607e-01, -7.486e-02, -3.999e-03, -5.143e-02, 1.571e-01, -6.008e-02, -3.629e-03, -1.189e-02, 3.064e-02, -1.867e-02, -3.269e-02));
	r += mul(s1_4, M4(2.418e-01, 3.017e-01, -1.862e-01, 2.549e-01, 6.361e-01, 8.004e-02, 1.438e-01, -2.252e-02, 3.704e-02, 1.914e-01, -1.326e-01, 3.443e-02, -2.083e-01, -3.830e-01, -4.936e-01, 2.845e-01));
	r += mul(s1_5, M4(2.411e-02, -3.559e-02, 1.544e-02, -2.284e-02, 4.874e-01, -2.026e-01, 2.588e-01, -2.257e-01, -1.657e-01, 1.784e-01, -1.148e-02, 1.353e-01, 1.121e-01, 1.430e-01, 2.770e-01, 8.177e-02));
	r += mul(s1_6, M4(2.280e-01, -1.302e-01, -4.152e-02, 1.050e-01, 1.520e-01, 1.121e-01, 2.927e-01, -8.147e-02, -8.725e-02, -3.460e-02, -7.852e-02, 7.680e-02, 1.467e-01, 1.367e-01, -4.233e-02, -1.480e-01));
	r += mul(s1_7, M4(-3.310e-01, 1.177e-01, -1.151e-01, 4.630e-02, 8.457e-02, 8.262e-02, 2.882e-01, -1.358e-01, -2.205e-01, -3.479e-02, -2.255e-03, 8.382e-02, 6.143e-01, -4.662e-03, 6.205e-03, 9.502e-03));
	r += mul(s1_8, M4(1.578e-01, -6.408e-03, 1.560e-01, 6.863e-02, -9.611e-02, 9.770e-02, -2.185e-02, -3.868e-01, -8.911e-03, -1.198e-01, -1.433e-02, 3.060e-02, 4.929e-03, 2.281e-01, -1.484e-01, -9.839e-02));
	r += mul(s2_0, M4(-1.274e-02, -1.024e-01, 2.502e-01, 7.788e-02, -1.316e-01, -1.920e-01, -1.313e-01, -6.873e-02, 2.099e-01, 1.687e-01, 2.160e-01, -2.403e-01, -6.800e-02, 1.572e-01, -3.265e-02, 1.984e-01));
	r += mul(s2_1, M4(1.156e-01, -1.218e-01, 4.860e-01, 5.928e-02, 8.202e-02, 4.932e-01, 1.397e-01, -5.604e-03, 1.943e-01, 1.919e-01, 1.303e-01, 3.681e-01, -2.287e-01, -1.313e-01, -1.376e-01, 6.750e-02));
	r += mul(s2_2, M4(-2.597e-02, 1.628e-01, 5.612e-02, -4.822e-02, 2.310e-01, 1.152e-01, 2.438e-01, -2.088e-01, 5.357e-02, 1.829e-01, 1.126e-01, 9.011e-02, -1.204e-01, -2.870e-01, -8.234e-02, -3.872e-02));
	r += mul(s2_3, M4(1.888e-01, 3.056e-02, -5.638e-02, -2.580e-01, 3.917e-02, -2.921e-02, 1.847e-02, -1.982e-01, 2.058e-02, -2.298e-01, 2.914e-01, 7.156e-01, -2.269e-02, -9.099e-02, -1.687e-01, 4.103e-01));
	r += mul(s2_4, M4(1.884e-01, 4.301e-01, -2.777e-01, 8.178e-02, -5.182e-01, -3.391e-01, -2.669e-01, 2.532e-01, -9.042e-01, 2.088e-02, -1.113e-01, -2.899e-01, 4.057e-01, 1.280e-01, 1.378e-01, -1.551e-01));
	r += mul(s2_5, M4(-2.398e-01, 4.279e-02, -3.891e-01, 1.866e-01, -1.791e-01, 5.814e-01, -8.270e-02, -3.272e-02, 1.511e-01, 2.308e-01, 1.477e-01, -5.475e-03, 1.014e-01, -4.608e-01, 8.157e-02, 6.706e-02));
	r += mul(s2_6, M4(-9.987e-02, -2.802e-01, -1.233e-01, -7.810e-02, -1.403e-02, -5.654e-02, -1.112e-01, -2.309e-01, -9.304e-02, -1.038e-01, -4.110e-01, 4.432e-02, -9.699e-04, -7.291e-02, 8.565e-02, 2.390e-01));
	r += mul(s2_7, M4(-6.008e-01, -2.889e-01, 5.342e-02, -2.418e-02, -1.415e-01, -2.608e-01, -3.247e-01, -1.003e-01, 8.085e-02, -1.548e-01, -6.762e-01, -6.015e-02, 4.170e-01, -6.648e-02, -1.132e-02, 6.828e-02));
	r += mul(s2_8, M4(-3.368e-01, -2.268e-01, 1.460e-01, -1.514e-02, -5.384e-01, -1.833e-01, -4.085e-01, -9.372e-02, 3.436e-02, 6.726e-02, -7.251e-02, 1.568e-02, 9.294e-02, 6.966e-02, 1.354e-01, 5.654e-02));
	r += mul(s3_0, M4(-5.408e-02, 4.893e-03, -7.917e-02, 8.437e-02, -1.561e-02, 2.081e-02, 3.264e-02, -1.604e-02, -1.357e-02, 8.375e-02, 9.638e-02, 5.371e-02, -4.987e-03, 5.175e-02, -6.068e-02, 8.105e-02));
	r += mul(s3_1, M4(9.912e-02, 7.803e-02, 1.800e-01, 2.278e-01, -1.491e-01, 1.934e-01, 2.242e-02, 2.551e-02, 8.510e-02, -1.292e-01, 7.931e-02, 4.469e-02, 2.089e-01, 7.741e-02, 9.589e-02, 3.246e-01));
	r += mul(s3_2, M4(5.260e-02, 3.213e-01, 5.141e-02, 7.083e-02, -2.099e-01, -3.518e-01, -6.547e-02, -1.790e-01, 9.398e-02, 8.665e-02, 9.122e-02, -1.779e-02, 2.335e-01, 1.216e-01, 9.715e-02, -9.649e-02));
	r += mul(s3_3, M4(-7.293e-02, 2.236e-02, -8.373e-02, -3.418e-02, -7.026e-05, 4.515e-03, -2.242e-02, 6.125e-02, -9.193e-02, -2.423e-01, 5.163e-02, 2.714e-01, 1.056e-02, -2.783e-01, -9.038e-02, 3.518e-02));
	r += mul(s3_4, M4(5.286e-02, -3.598e-02, -1.214e-01, -1.255e-01, -5.499e-02, -1.444e-02, -1.037e-01, -2.579e-02, -3.196e-01, 1.830e-01, -4.141e-02, 4.040e-02, 5.567e-01, 2.520e-01, 2.560e-01, 1.089e-01));
	r += mul(s3_5, M4(-8.303e-02, -2.565e-02, -1.896e-02, -4.035e-02, 1.829e-02, 8.442e-02, -7.314e-02, -8.134e-02, 1.910e-01, 4.113e-01, -1.236e-01, 4.866e-02, 7.652e-02, 1.872e-01, 2.717e-02, 2.292e-01));
	r += mul(s3_6, M4(-9.611e-02, -7.569e-02, -9.707e-02, 8.295e-02, -7.100e-02, -2.659e-02, -5.502e-02, -4.342e-04, 2.621e-02, -2.115e-01, -2.835e-01, -3.499e-03, 9.614e-02, -6.633e-02, 2.426e-01, 1.455e-01));
	r += mul(s3_7, M4(-1.630e-02, -7.232e-02, -1.062e-01, -2.478e-01, 3.625e-02, -1.097e-01, -1.224e-01, 7.990e-02, 7.205e-02, -3.173e-01, -2.530e-01, 5.804e-02, -4.364e-01, -2.525e-01, -1.945e-01, 1.877e-02));
	r += mul(s3_8, M4(-2.221e-01, -4.437e-05, 3.109e-03, -5.071e-02, 6.443e-02, -1.155e-01, -2.296e-02, 1.248e-01, 2.876e-02, -1.072e-01, -3.769e-02, -6.193e-02, -3.964e-01, 1.419e-01, 8.243e-03, 1.850e-01));
	r += V4(1.480e-02, -1.672e-02, 2.570e-02, -9.717e-03);
	return r;
}
void Pass4(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 5
//!DESC CuNNy-4x8C-CHROMA-NVL-conv3
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2, t3
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-1.039e-01, -4.749e-02, 8.730e-03, 1.119e-02, 5.834e-03, 1.250e-02, -2.091e-01, 7.224e-02, 1.416e-01, 1.765e-02, 7.371e-02, -3.894e-02, 1.412e-01, -6.421e-02, -1.159e-01, -8.345e-03));
	r += mul(s0_1, M4(-1.175e-01, -4.023e-02, -3.047e-02, -2.237e-02, -9.670e-02, 4.179e-01, -1.290e-01, -5.474e-02, -9.015e-03, 1.044e-01, -8.040e-02, -6.118e-02, -1.929e-01, 5.657e-02, -4.851e-02, -8.996e-03));
	r += mul(s0_2, M4(1.049e-01, -3.273e-03, -9.795e-03, 1.214e-02, 1.275e-01, -6.070e-03, 5.314e-02, 1.123e-02, 1.121e-02, -1.239e-01, -1.037e-01, 5.776e-02, -8.375e-02, 5.176e-02, 1.105e-01, -3.375e-02));
	r += mul(s0_3, M4(2.822e-01, -5.937e-02, -8.653e-02, 9.339e-02, 7.261e-02, -7.677e-02, -1.703e-01, -4.615e-02, -1.440e-02, -3.749e-02, -2.396e-02, -1.635e-01, -9.608e-04, -9.366e-03, 2.595e-03, 2.723e-02));
	r += mul(s0_4, M4(-6.229e-02, 1.941e-01, -1.587e-01, -3.341e-01, -4.307e-01, 1.772e-01, -2.766e-01, -1.391e-01, -4.673e-01, 1.042e-02, 2.254e-01, 2.275e-01, -1.900e-01, 2.200e-01, 7.140e-02, -3.461e-01));
	r += mul(s0_5, M4(2.844e-01, -3.490e-01, 1.772e-02, 3.853e-02, -3.578e-02, -3.117e-03, -3.824e-02, -1.193e-01, -3.283e-01, 2.307e-01, -4.765e-02, -1.091e-01, -2.331e-02, 7.623e-02, 8.306e-02, 5.513e-03));
	r += mul(s0_6, M4(6.128e-02, -1.118e-01, 8.884e-02, 1.126e-01, 3.168e-02, 3.760e-02, 2.601e-02, -1.125e-01, -3.097e-03, 1.917e-02, -5.270e-02, 1.756e-01, 2.139e-02, -3.574e-03, -4.046e-02, -1.174e-01));
	r += mul(s0_7, M4(-1.713e-01, 2.311e-02, 2.588e-01, -2.579e-01, -1.051e-01, 9.141e-02, -1.062e-01, -4.576e-01, 1.675e-01, -1.573e-01, -9.463e-02, -4.278e-02, 7.700e-03, 4.103e-02, -2.002e-03, 1.733e-01));
	r += mul(s0_8, M4(7.435e-02, 2.220e-03, 3.001e-02, 5.200e-02, -1.455e-02, 6.522e-02, -1.323e-01, 3.019e-02, 4.267e-02, -8.573e-02, 1.064e-01, 1.752e-01, -3.900e-02, 2.250e-02, -2.552e-02, -4.722e-02));
	r += mul(s1_0, M4(-9.145e-02, -7.777e-02, -1.791e-01, 4.411e-02, 3.228e-02, 3.663e-02, -9.301e-02, 3.239e-02, 5.532e-02, 3.191e-02, 1.094e-01, -2.074e-02, -1.435e-02, 3.067e-02, -9.119e-02, 1.141e-01));
	r += mul(s1_1, M4(3.151e-02, 4.825e-02, -3.498e-02, 7.849e-02, 2.124e-01, 2.209e-02, -1.075e-01, 8.074e-02, 1.299e-02, 2.255e-01, 7.106e-02, -4.721e-02, 9.585e-02, -1.103e-01, 1.520e-01, 2.294e-03));
	r += mul(s1_2, M4(-1.595e-01, -6.711e-02, -1.402e-01, 9.448e-02, 7.688e-02, -1.051e-01, 2.189e-03, 5.716e-02, 8.073e-02, 4.171e-01, 7.070e-02, -4.464e-02, -9.535e-02, 2.469e-01, -3.029e-02, -1.271e-02));
	r += mul(s1_3, M4(-8.595e-02, 6.662e-02, 7.096e-02, -1.069e-01, -8.870e-03, 6.347e-03, -1.752e-02, 3.644e-02, -2.134e-01, -2.421e-02, -2.895e-02, 1.392e-01, -5.006e-02, -5.516e-02, -2.686e-02, 1.736e-01));
	r += mul(s1_4, M4(1.451e-01, 2.982e-02, -5.316e-02, -1.146e-02, 9.169e-02, -1.494e-01, 2.350e-01, 5.282e-02, -4.994e-01, 8.902e-02, -1.724e-01, 2.405e-02, -2.710e-04, 2.628e-01, -3.233e-01, -6.800e-02));
	r += mul(s1_5, M4(-8.807e-02, -1.890e-02, 2.613e-02, -1.143e-02, 5.044e-02, -8.985e-03, 4.698e-02, 4.180e-02, -3.573e-01, 3.974e-01, 3.685e-02, -2.654e-01, -1.125e-01, 9.067e-02, -5.266e-02, 2.263e-01));
	r += mul(s1_6, M4(8.703e-02, -2.293e-02, -9.507e-02, 6.360e-02, -9.152e-02, 3.625e-02, -6.375e-02, -1.501e-02, 7.947e-02, -3.426e-02, -1.842e-02, -5.785e-02, 3.532e-02, -3.563e-02, 6.597e-02, -7.149e-02));
	r += mul(s1_7, M4(-1.586e-02, -4.821e-03, 6.171e-02, -2.228e-01, -6.746e-03, 2.830e-03, -9.386e-02, 1.240e-03, 9.058e-02, -7.446e-02, -4.941e-02, -1.791e-01, -3.607e-02, 3.585e-02, 1.677e-01, 1.527e-01));
	r += mul(s1_8, M4(8.882e-03, -9.021e-03, -1.150e-01, 1.693e-01, 3.400e-02, 1.385e-03, -2.294e-02, -6.723e-02, -5.589e-02, 4.521e-02, 8.460e-02, -4.252e-02, -1.477e-01, 1.277e-01, 7.252e-02, 3.438e-02));
	r += mul(s2_0, M4(1.105e-01, 3.270e-02, 2.823e-02, -1.548e-01, 9.084e-02, 1.071e-02, -4.599e-02, -1.909e-02, -2.091e-02, 2.574e-02, -7.220e-03, 4.457e-03, -4.495e-02, 6.347e-02, 4.379e-02, -1.253e-02));
	r += mul(s2_1, M4(2.530e-01, 1.364e-01, 8.074e-02, 1.539e-01, 2.822e-01, 5.479e-01, -4.011e-02, 7.608e-02, -3.472e-01, -3.527e-02, 1.016e-01, -4.966e-02, 1.203e-01, 9.697e-02, 2.068e-02, 6.089e-02));
	r += mul(s2_2, M4(7.481e-02, -6.862e-02, 6.040e-02, -3.789e-02, 2.924e-02, -1.774e-02, 4.363e-02, 5.820e-02, 7.849e-02, 1.409e-01, -2.335e-02, -5.766e-02, -5.371e-03, -1.744e-02, -1.970e-02, 6.766e-02));
	r += mul(s2_3, M4(-6.069e-02, -7.314e-03, 1.352e-01, 1.689e-01, -8.601e-02, -7.534e-02, -1.656e-01, 2.669e-01, 7.837e-02, 3.664e-02, -8.402e-02, -1.167e-01, -2.848e-01, 1.008e-01, 5.020e-02, 1.761e-01));
	r += mul(s2_4, M4(1.248e-01, -8.485e-02, 1.460e-01, -1.152e-01, -1.000e+00, 5.434e-01, -3.315e-01, -4.112e-01, 4.228e-02, -1.665e-01, 1.699e-01, 1.518e-01, -2.688e-01, -8.666e-02, -1.863e-02, -7.477e-03));
	r += mul(s2_5, M4(3.403e-02, 6.813e-02, -5.412e-02, -1.460e-01, 3.032e-01, -1.770e-02, 6.228e-02, 9.339e-02, 1.625e-01, 1.974e-01, 4.160e-02, -1.489e-01, -5.818e-01, 2.893e-01, -1.272e-01, 4.289e-02));
	r += mul(s2_6, M4(-5.267e-02, 3.536e-02, -1.983e-02, 1.430e-01, 4.860e-02, 5.430e-02, 4.581e-02, -1.965e-01, 1.481e-02, -2.712e-02, -6.911e-02, -1.048e-02, -1.466e-01, 6.995e-02, -7.181e-03, -1.517e-01));
	r += mul(s2_7, M4(-1.387e-02, -3.807e-02, -4.646e-02, -1.633e-01, -1.339e-01, 2.348e-01, -3.495e-01, -4.226e-01, 6.227e-02, -1.899e-03, -2.290e-01, -3.041e-01, 7.221e-02, 1.158e-02, -2.030e-01, 3.752e-01));
	r += mul(s2_8, M4(3.381e-02, 6.155e-03, 1.904e-02, -5.348e-02, -4.486e-03, 2.058e-02, -1.033e-01, 1.892e-01, 6.182e-02, 3.349e-02, -1.343e-01, 4.017e-03, 2.886e-02, -1.098e-01, -1.106e-02, -2.123e-03));
	r += mul(s3_0, M4(-2.824e-02, 4.768e-02, -1.220e-01, 2.066e-02, 2.166e-02, -5.590e-02, 2.014e-02, 4.199e-02, 6.740e-02, -9.334e-03, -1.863e-02, -2.157e-02, 3.946e-02, 1.336e-02, 1.678e-01, -9.513e-02));
	r += mul(s3_1, M4(4.842e-02, -8.884e-03, -4.555e-02, 1.572e-01, -1.551e-02, 1.963e-02, -9.050e-04, -3.778e-02, -1.161e-01, -7.229e-02, -2.048e-02, -3.567e-02, -2.939e-02, 1.032e-01, 1.236e-01, -6.851e-02));
	r += mul(s3_2, M4(8.330e-02, 6.858e-02, 3.943e-02, -6.210e-02, 1.855e-02, -1.776e-02, 3.625e-02, -5.776e-02, -2.842e-03, -1.404e-01, -3.701e-02, 7.544e-02, 1.587e-01, -5.697e-02, 6.337e-02, -1.201e-01));
	r += mul(s3_3, M4(-1.322e-01, 1.649e-02, -1.156e-01, 6.161e-02, -5.031e-02, -2.011e-02, 1.314e-01, -9.001e-02, -2.172e-01, -4.895e-02, -8.862e-02, 1.663e-02, 1.133e-01, -1.088e-01, -2.304e-02, 9.520e-02));
	r += mul(s3_4, M4(4.482e-01, 3.215e-01, 4.283e-02, 3.018e-01, -2.031e-01, 1.685e-01, -2.884e-02, -2.517e-02, 1.860e-02, -3.369e-01, 4.554e-01, -1.001e-01, -9.116e-02, -2.051e-03, -1.607e-01, 8.358e-02));
	r += mul(s3_5, M4(2.054e-01, -2.783e-01, -5.261e-02, -6.470e-02, 4.940e-02, -5.785e-02, 7.878e-02, 1.580e-03, -1.943e-01, -6.021e-02, -1.954e-02, 8.771e-02, 5.958e-02, 3.428e-02, 1.628e-01, -7.213e-02));
	r += mul(s3_6, M4(-1.680e-02, 4.375e-02, -2.264e-02, 1.489e-01, 4.440e-02, -4.027e-02, 4.871e-02, -6.499e-02, -1.256e-03, -3.815e-02, -1.514e-01, -4.108e-02, -7.582e-02, 3.782e-02, -4.525e-02, 5.949e-02));
	r += mul(s3_7, M4(-2.589e-01, -9.637e-03, 2.942e-01, -2.677e-01, 1.488e-01, -5.000e-02, -5.947e-02, 1.107e-01, -7.041e-02, -9.472e-03, -3.081e-01, 1.181e-01, 4.911e-02, 3.191e-02, 2.990e-01, 1.899e-02));
	r += mul(s3_8, M4(-4.364e-02, 3.540e-02, -1.038e-02, 4.784e-02, -8.971e-02, 5.526e-02, -3.489e-02, -1.083e-01, 1.654e-01, -7.214e-02, -2.764e-01, -6.695e-02, 1.678e-01, -1.222e-01, -1.223e-01, 5.177e-02));
	r += V4(-4.017e-03, -4.325e-04, -6.419e-03, -1.145e-02);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(4.722e-02, -3.370e-02, 2.502e-02, 7.567e-02, 9.450e-02, -1.673e-02, 1.298e-01, 1.025e-01, -5.611e-02, 4.589e-02, 1.945e-01, 3.819e-02, 4.018e-02, 9.273e-02, -3.339e-02, 1.233e-01));
	r += mul(s0_1, M4(1.422e-02, 7.670e-02, 1.251e-01, -8.708e-02, 9.864e-03, -3.193e-01, 1.792e-01, -8.531e-02, -3.359e-02, 8.362e-02, -1.058e-01, -5.503e-02, 8.422e-03, -1.672e-01, 1.885e-01, -8.863e-02));
	r += mul(s0_2, M4(-1.867e-01, -3.051e-02, 6.834e-02, -1.837e-02, -5.164e-02, -3.223e-02, 4.748e-02, -8.348e-02, -3.581e-02, 5.780e-02, -2.981e-02, 1.223e-01, -3.927e-02, -1.712e-01, -4.707e-02, -2.529e-01));
	r += mul(s0_3, M4(7.390e-02, 1.951e-02, -3.240e-01, 1.864e-01, 2.974e-01, 5.515e-02, 1.480e-01, 9.510e-03, -2.255e-01, 3.104e-02, -1.970e-01, 1.257e-01, 3.358e-03, 3.080e-02, 2.860e-01, 1.315e-01));
	r += mul(s0_4, M4(1.300e-01, -5.566e-01, 1.841e-01, -5.520e-03, 2.284e-01, -9.294e-02, 3.178e-01, 1.397e-01, -1.862e-01, -2.798e-01, -1.096e-01, -2.122e-01, 2.077e-02, 6.471e-02, -8.446e-02, 3.198e-04));
	r += mul(s0_5, M4(-1.019e-01, -1.040e-01, -9.850e-02, -1.224e-01, -5.031e-02, -5.744e-02, 2.616e-02, -1.240e-01, 3.663e-01, -4.187e-02, -3.235e-02, 4.350e-01, 2.335e-02, 7.872e-02, 6.088e-02, -9.063e-02));
	r += mul(s0_6, M4(3.821e-02, 1.274e-01, 2.143e-01, 8.192e-02, -6.311e-02, -2.122e-02, 1.756e-01, -2.397e-02, -2.139e-01, 2.623e-02, -1.920e-01, -2.065e-02, 9.074e-02, -1.794e-04, -6.826e-02, 5.452e-02));
	r += mul(s0_7, M4(-2.741e-02, 1.850e-02, -2.034e-01, -8.275e-02, 2.143e-01, -7.752e-02, 1.228e-01, 1.643e-01, -2.646e-01, 4.603e-02, -7.051e-02, 1.369e-01, 3.870e-02, -2.135e-02, 4.725e-02, -7.845e-02));
	r += mul(s0_8, M4(3.342e-03, -8.522e-02, 1.091e-02, -6.309e-03, -7.227e-02, 5.724e-02, -7.793e-02, -1.934e-02, 7.641e-02, 1.441e-01, 1.178e-01, 9.795e-02, -5.259e-02, -3.051e-02, -7.253e-05, -8.356e-03));
	r += mul(s1_0, M4(2.908e-01, 9.780e-02, -2.506e-01, -7.554e-02, 1.411e-04, -6.932e-02, 3.218e-02, 7.318e-02, 1.134e-01, 9.497e-02, -4.082e-02, 4.803e-02, 1.048e-01, 3.269e-02, -3.682e-01, 3.799e-02));
	r += mul(s1_1, M4(-3.768e-01, -1.309e-01, 3.083e-03, -3.350e-01, -3.650e-02, -9.466e-02, -7.168e-02, 1.781e-02, -5.765e-02, 9.698e-02, -2.767e-02, 5.165e-02, 5.772e-02, -2.708e-02, 5.412e-02, -8.365e-02));
	r += mul(s1_2, M4(-1.717e-02, 9.429e-03, 3.380e-02, 1.036e-01, -2.574e-02, 2.016e-02, -4.645e-02, -9.917e-02, -3.068e-02, -1.931e-02, -5.976e-03, -1.067e-01, -5.987e-03, -2.097e-02, -6.043e-02, -1.824e-01));
	r += mul(s1_3, M4(-2.149e-01, 3.840e-02, -4.742e-01, 7.291e-02, -2.510e-01, 3.602e-02, -5.572e-02, 9.310e-02, 1.597e-01, -3.231e-02, 1.199e-01, 5.283e-02, 2.573e-01, 1.479e-02, -1.204e-01, -2.178e-02));
	r += mul(s1_4, M4(-2.194e-01, 4.295e-03, -2.462e-02, -3.439e-02, 1.248e-01, 2.427e-01, 1.255e-01, 1.101e-01, 3.553e-01, 8.599e-04, 6.428e-02, 3.967e-02, 2.663e-02, -3.047e-01, -2.309e-01, 1.275e-01));
	r += mul(s1_5, M4(7.988e-02, 1.331e-01, -1.699e-01, 2.392e-02, -7.839e-02, 1.431e-01, -3.069e-02, 3.534e-02, 1.491e-01, -6.504e-01, 1.882e-01, -2.067e-01, 6.722e-02, -2.586e-01, 1.287e-01, -1.944e-01));
	r += mul(s1_6, M4(-3.705e-02, 6.878e-02, 4.753e-02, 8.526e-02, -6.112e-03, -4.135e-02, -4.093e-02, -6.656e-03, 2.957e-02, -2.525e-02, -1.306e-02, -4.988e-02, 9.086e-03, -3.758e-02, 1.593e-01, 1.708e-02));
	r += mul(s1_7, M4(-2.001e-02, 1.581e-02, -7.155e-02, -5.551e-02, 1.017e-01, -9.005e-02, 1.120e-01, 6.594e-02, -3.934e-02, 2.227e-02, -7.593e-02, 1.174e-01, 5.291e-02, 1.475e-02, 1.105e-01, -7.015e-02));
	r += mul(s1_8, M4(-5.784e-02, 1.154e-01, -7.522e-02, 1.971e-02, -2.255e-02, -1.100e-01, -2.429e-02, -8.861e-02, 7.790e-02, 4.368e-02, -6.468e-02, 5.250e-03, 1.374e-02, -2.803e-02, 1.798e-02, -4.398e-02));
	r += mul(s2_0, M4(-8.229e-02, -1.247e-01, -1.166e-02, -7.694e-02, 6.452e-02, 4.257e-02, -2.020e-01, 5.819e-02, -1.038e-02, 8.884e-03, 1.738e-01, 3.422e-02, -1.664e-02, 4.074e-02, -1.385e-01, -4.954e-02));
	r += mul(s2_1, M4(1.528e-01, -3.178e-02, -1.847e-01, 9.953e-02, -8.707e-02, -1.121e-01, -1.949e-01, -2.592e-02, -2.343e-02, 2.637e-02, 4.110e-02, -1.209e-01, -7.047e-02, -4.360e-02, -8.008e-02, 6.978e-02));
	r += mul(s2_2, M4(-5.001e-02, 6.773e-02, -1.509e-02, -2.190e-02, 2.529e-02, -9.388e-02, 1.806e-02, -6.089e-02, -3.308e-02, 1.979e-01, 2.206e-02, 7.647e-02, 1.455e-01, -5.507e-02, -1.813e-01, -2.434e-03));
	r += mul(s2_3, M4(-6.301e-01, 5.676e-02, -4.660e-01, -1.065e-01, 4.442e-01, -5.959e-02, 5.899e-01, 2.212e-02, 1.424e-01, 2.608e-02, 2.940e-02, 1.996e-02, 3.955e-02, 2.460e-02, 2.364e-01, -1.997e-01));
	r += mul(s2_4, M4(3.232e-01, 1.432e-01, 2.918e-01, 4.170e-01, 2.482e-01, -2.835e-01, 2.883e-01, -2.055e-01, 7.837e-02, 1.905e-01, -6.760e-02, -3.466e-01, 6.763e-02, 2.773e-01, 1.716e-01, 1.442e-01));
	r += mul(s2_5, M4(-7.238e-02, 4.245e-02, 2.381e-02, -1.143e-01, -8.646e-02, 1.435e-02, 2.835e-02, -2.471e-01, -1.354e-01, -1.152e-01, -2.022e-02, -4.823e-02, 1.321e-01, 1.796e-01, 8.416e-02, 5.537e-02));
	r += mul(s2_6, M4(-6.209e-02, 2.265e-03, 2.786e-02, 3.214e-03, 2.493e-01, -1.635e-01, 1.797e-02, -1.824e-01, 1.611e-01, 5.829e-02, 3.081e-02, -1.725e-02, 9.089e-02, -1.054e-01, -1.107e-01, -1.755e-01));
	r += mul(s2_7, M4(1.288e-01, -9.510e-03, 8.189e-02, 3.488e-03, 1.949e-01, -1.430e-01, 2.160e-01, 2.705e-01, 2.619e-01, -1.736e-01, 1.302e-01, -7.296e-02, -1.710e-01, -2.646e-02, -4.302e-02, 7.701e-02));
	r += mul(s2_8, M4(-3.069e-03, -1.956e-02, -5.242e-02, -5.597e-02, -4.478e-02, -5.879e-02, -4.719e-03, -1.969e-01, -9.825e-02, -1.486e-01, -1.104e-01, -5.187e-02, 3.114e-02, 6.117e-02, -3.332e-02, 4.069e-02));
	r += mul(s3_0, M4(-1.547e-01, -7.334e-02, -1.341e-01, -2.640e-02, 6.867e-03, 6.952e-02, 2.838e-03, 5.559e-02, 3.721e-02, 3.817e-02, 8.901e-02, 4.699e-02, -1.417e-01, -4.402e-02, 1.976e-01, 7.591e-02));
	r += mul(s3_1, M4(2.322e-01, -9.109e-02, -1.331e-02, 1.044e-01, 2.754e-02, 7.560e-02, 5.511e-02, 4.445e-02, 1.389e-02, -6.613e-02, -1.682e-02, -1.255e-01, -5.440e-03, 1.558e-01, 1.151e-01, 1.636e-01));
	r += mul(s3_2, M4(-1.018e-01, -1.751e-02, 5.252e-02, -7.513e-02, 2.897e-02, -3.555e-02, 3.598e-03, -3.077e-02, -1.061e-03, -1.916e-02, -3.915e-02, 5.375e-02, 1.214e-01, 1.260e-01, -4.050e-02, 3.239e-02));
	r += mul(s3_3, M4(-3.690e-01, -1.115e-01, -7.097e-01, -1.335e-01, 7.817e-02, -4.056e-02, 2.997e-01, -6.247e-02, -6.738e-02, -1.868e-02, 1.068e-01, 4.225e-02, -1.199e-01, 8.385e-02, 1.797e-01, 6.104e-03));
	r += mul(s3_4, M4(1.951e-01, -2.259e-01, 2.998e-01, 6.194e-01, -7.842e-02, 2.978e-02, -1.145e-01, -1.278e-01, -5.843e-01, 3.101e-01, -5.722e-02, -2.689e-01, 4.482e-01, 9.207e-02, -2.329e-02, 7.800e-02));
	r += mul(s3_5, M4(-9.242e-02, -3.231e-02, 2.687e-02, -6.004e-02, 1.457e-02, 1.734e-01, 6.827e-03, -6.737e-02, -4.645e-02, 1.299e-01, 8.947e-02, 3.431e-01, -1.159e-01, -4.019e-02, 7.685e-02, -1.293e-01));
	r += mul(s3_6, M4(-2.770e-01, -3.760e-02, 3.565e-01, 1.036e-01, -9.586e-02, -1.449e-03, -2.128e-01, -1.570e-01, 1.394e-01, -3.251e-02, -9.350e-02, -2.164e-02, -9.732e-02, -1.088e-01, -1.104e-01, -6.567e-02));
	r += mul(s3_7, M4(1.836e-01, 1.920e-01, 6.322e-03, 1.234e-01, 6.953e-02, 2.793e-01, 7.077e-02, 2.509e-01, 3.859e-02, -2.394e-01, 2.143e-01, -1.395e-01, 2.442e-01, 3.432e-02, 2.040e-01, -3.502e-02));
	r += mul(s3_8, M4(-2.038e-02, 4.137e-02, -2.816e-02, -3.799e-02, -3.787e-02, -3.173e-03, 6.161e-02, -9.869e-02, -2.154e-01, -2.367e-01, -6.636e-02, 9.323e-02, -7.557e-02, 1.952e-01, -1.248e-02, 8.437e-02));
	r += V4(8.506e-03, -4.546e-03, 8.085e-03, -1.175e-02);
	return r;
}
void Pass5(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t3[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 6
//!DESC CuNNy-4x8C-CHROMA-NVL-conv4
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t2, t3
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t2, float2(x, y))
#define l1(x, y) O(t3, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(6.746e-02, 5.604e-02, 2.273e-02, 9.076e-02, 3.894e-02, 8.855e-03, 2.904e-03, -2.919e-03, -2.898e-02, 1.436e-02, 8.666e-02, 1.189e-01, -1.638e-01, 3.898e-01, -3.525e-02, -1.081e-01));
	r += mul(s0_1, M4(7.557e-03, -4.430e-02, 4.060e-03, 1.752e-01, 1.036e-02, -8.557e-03, -1.275e-02, -4.630e-02, -1.362e-02, -1.135e-01, 9.449e-02, -3.689e-02, -4.321e-01, 3.447e-01, 1.059e-01, -6.347e-01));
	r += mul(s0_2, M4(-2.070e-03, -4.755e-02, -8.312e-02, -1.408e-01, 8.779e-03, 1.580e-02, -7.356e-03, 8.131e-03, -1.119e-02, 2.320e-03, 8.475e-02, 1.091e-01, -1.190e-01, -9.427e-02, -1.421e-01, -3.330e-01));
	r += mul(s0_3, M4(-1.750e-02, -1.501e-01, -2.084e-02, -4.351e-02, -6.292e-02, -7.466e-03, -7.678e-02, -9.838e-02, 2.553e-01, 3.769e-04, 1.027e-01, 7.845e-02, 1.058e-01, 6.245e-02, -7.730e-02, 4.573e-02));
	r += mul(s0_4, M4(-2.813e-01, 1.129e-01, 2.557e-01, -3.835e-02, -1.290e-01, -4.273e-02, 5.358e-02, -1.379e-01, 2.105e-01, -1.063e-01, -2.626e-01, 1.999e-02, -3.378e-01, -9.082e-01, 1.860e-01, -3.856e-01));
	r += mul(s0_5, M4(1.269e-01, -4.875e-02, 1.645e-01, 2.646e-01, -5.605e-02, 5.515e-02, -3.235e-02, -8.658e-02, -1.306e-02, 1.058e-01, 1.186e-01, 4.362e-01, -2.703e-01, 3.691e-02, -1.209e-01, -2.196e-01));
	r += mul(s0_6, M4(-3.924e-02, -2.886e-02, 9.915e-02, -1.717e-02, -1.126e-02, -6.065e-02, 4.968e-02, -1.924e-02, -4.857e-02, -1.498e-02, -4.508e-02, 4.646e-03, -6.114e-02, 3.511e-02, 7.251e-02, 5.877e-02));
	r += mul(s0_7, M4(-3.579e-02, 2.583e-02, -1.462e-01, 1.086e-02, -1.326e-01, 8.022e-02, -5.471e-02, 4.343e-02, -3.843e-03, 1.539e-02, 1.087e-01, 1.035e-01, -3.603e-02, 4.961e-02, 3.792e-02, 2.962e-02));
	r += mul(s0_8, M4(-8.437e-02, 9.065e-03, 4.441e-02, -6.158e-03, -5.881e-02, -3.393e-03, 1.558e-02, -3.650e-02, -3.282e-02, -7.389e-03, 2.921e-02, -3.957e-02, -9.585e-03, 8.629e-03, 1.066e-01, 6.993e-02));
	r += mul(s1_0, M4(-3.343e-02, -5.290e-04, -9.308e-03, 8.995e-03, 7.189e-02, -6.494e-02, 1.043e-02, 5.823e-02, -5.146e-02, 6.589e-02, -1.031e-02, 4.334e-02, -8.026e-02, -9.679e-03, -6.327e-02, 3.899e-03));
	r += mul(s1_1, M4(-8.022e-03, -2.134e-02, 2.263e-02, 6.513e-02, 7.104e-02, 3.821e-02, -6.730e-03, 2.096e-01, -4.222e-02, 9.673e-02, -8.143e-02, -5.454e-02, -2.170e-01, 1.670e-03, -2.619e-02, 8.351e-02));
	r += mul(s1_2, M4(-9.210e-03, -1.400e-02, -3.980e-03, -2.791e-02, -5.718e-03, -7.771e-03, 2.150e-03, -1.709e-02, 1.137e-02, 5.161e-02, -1.122e-02, 4.200e-02, -7.487e-02, 1.776e-02, -4.256e-03, 7.189e-02));
	r += mul(s1_3, M4(5.056e-02, 3.396e-02, 2.063e-02, -1.654e-02, -1.460e-01, 1.597e-01, -2.529e-01, -4.531e-03, 2.027e-01, 4.549e-02, -2.431e-03, -3.065e-02, -4.874e-04, -8.083e-03, -6.192e-02, -4.915e-03));
	r += mul(s1_4, M4(-1.455e-03, 8.046e-03, -1.455e-02, -5.538e-02, -3.897e-02, -1.237e-02, 8.930e-03, 1.457e-01, 1.550e-01, 6.806e-03, 1.622e-01, 7.007e-02, -9.309e-02, -7.886e-02, 7.075e-03, 3.467e-04));
	r += mul(s1_5, M4(5.230e-02, -1.232e-02, -6.581e-03, -4.924e-02, -4.493e-02, 3.303e-02, -4.503e-02, -7.926e-03, 4.465e-03, 4.987e-02, -1.470e-02, 1.464e-01, -5.628e-02, -3.842e-02, 5.501e-02, 5.974e-03));
	r += mul(s1_6, M4(-6.169e-04, 9.691e-03, 6.583e-03, -2.177e-02, 9.155e-02, -1.395e-01, 1.832e-01, 2.473e-04, -7.739e-02, -6.372e-02, -9.294e-02, -2.826e-02, -2.869e-02, -1.685e-02, 3.959e-03, 1.342e-02));
	r += mul(s1_7, M4(-4.670e-02, -4.952e-03, -4.573e-02, 5.141e-02, 1.381e-01, 7.301e-02, -5.724e-01, 1.588e-02, -5.878e-02, -3.958e-02, -9.605e-02, -4.528e-02, 8.166e-03, 9.083e-02, -3.276e-02, -1.978e-02));
	r += mul(s1_8, M4(-4.909e-02, -2.779e-02, -1.766e-02, -3.173e-02, -3.075e-02, -2.095e-02, 2.911e-02, 1.979e-02, 4.080e-03, 4.809e-02, 3.845e-03, -4.259e-02, 1.836e-02, 4.349e-02, 1.555e-02, 2.762e-02));
	r += mul(s2_0, M4(-2.237e-03, -1.678e-03, 2.018e-02, 7.373e-04, 3.455e-02, 1.088e-01, -7.546e-02, -7.292e-02, -9.906e-03, -1.259e-02, -2.142e-02, -2.036e-02, -7.397e-02, -8.635e-02, -2.906e-02, -1.247e-01));
	r += mul(s2_1, M4(-1.946e-02, 4.042e-02, 1.325e-03, 3.350e-02, -4.101e-02, 1.583e-02, -6.592e-02, -2.094e-01, -1.215e-01, -6.345e-03, -2.758e-02, 1.837e-03, 5.323e-02, 1.348e-02, 2.058e-02, 1.165e-01));
	r += mul(s2_2, M4(-1.022e-01, -1.109e-02, -1.198e-03, 1.127e-02, -1.115e-02, 2.503e-02, -2.200e-02, -6.408e-02, -9.410e-02, -1.995e-02, 7.016e-02, 1.119e-01, 6.943e-02, 4.572e-02, -1.319e-02, -1.483e-02));
	r += mul(s2_3, M4(6.420e-02, -3.241e-02, 3.664e-02, 2.093e-02, -1.032e-01, -2.365e-01, 1.533e-02, 2.266e-02, -6.763e-02, -2.627e-02, -3.363e-02, 4.841e-03, 2.001e-01, -8.972e-01, 3.435e-01, 1.207e-01));
	r += mul(s2_4, M4(5.898e-02, -1.008e-01, 9.499e-02, -7.201e-03, 3.818e-01, 1.399e-01, -4.130e-01, -8.228e-02, -2.285e-02, 3.023e-02, -2.847e-02, 5.121e-03, -6.035e-01, 1.713e-01, 1.779e-02, -2.547e-01));
	r += mul(s2_5, M4(1.243e-01, 4.037e-03, 4.161e-02, -2.052e-01, 7.388e-02, -3.603e-02, -5.043e-02, 6.205e-02, -7.503e-02, -2.221e-02, 9.362e-02, 3.500e-02, -9.308e-02, -4.147e-02, 1.789e-02, 5.597e-02));
	r += mul(s2_6, M4(-1.130e-02, 2.412e-03, -3.385e-02, 2.986e-03, -1.209e-01, -1.242e-02, -3.311e-02, -1.109e-01, -8.138e-03, 2.018e-02, -2.847e-02, 4.345e-04, -1.959e-01, -2.035e-01, -2.085e-01, -1.431e-01));
	r += mul(s2_7, M4(-8.423e-02, 2.215e-02, -1.567e-01, -6.479e-02, -7.971e-02, -1.319e-01, -1.629e-01, -5.005e-02, 1.371e-02, 3.646e-03, 5.784e-02, -4.933e-03, -1.085e-01, -9.352e-02, 4.188e-02, -1.008e-01));
	r += mul(s2_8, M4(-1.754e-02, -4.286e-02, -7.836e-02, 2.967e-03, -1.072e-01, -4.553e-04, -5.008e-02, -5.313e-02, 3.329e-02, 7.595e-02, 1.343e-01, 6.558e-02, -4.731e-03, -1.769e-02, 6.668e-02, -5.001e-02));
	r += mul(s3_0, M4(3.026e-02, 3.169e-03, 1.214e-02, 6.627e-02, 8.124e-02, -1.613e-02, 1.697e-02, 3.438e-02, -2.290e-02, -2.850e-02, 2.021e-02, -1.459e-02, -8.325e-02, 3.406e-02, -7.497e-02, -1.950e-02));
	r += mul(s3_1, M4(1.583e-01, -3.359e-01, 3.399e-02, 3.691e-02, -3.766e-02, 1.478e-03, 3.326e-04, 8.603e-03, -1.637e-01, 2.909e-02, -1.255e-01, -3.419e-02, 3.054e-02, -2.877e-02, 2.995e-02, -3.616e-02));
	r += mul(s3_2, M4(-4.940e-02, 9.532e-02, -1.220e-02, 3.135e-01, -9.063e-02, -1.235e-02, 1.684e-02, -3.518e-02, -2.081e-01, -1.081e-01, 1.330e-03, -1.092e-01, 1.218e-01, 5.502e-02, 3.197e-02, 4.724e-02));
	r += mul(s3_3, M4(1.216e-01, 6.150e-02, -1.114e-01, 5.361e-05, -1.543e-01, -4.487e-02, -1.093e-01, -9.320e-03, -1.938e-01, 4.865e-02, -2.775e-02, -5.258e-02, 2.510e-01, -3.904e-02, 2.328e-01, 1.283e-01));
	r += mul(s3_4, M4(1.084e-01, -1.005e+00, -9.430e-02, 2.323e-01, 1.147e-01, 1.751e-02, -5.957e-03, -1.538e-01, -1.421e-01, -2.112e-01, 3.936e-01, 1.932e-01, -6.364e-02, -4.813e-02, 6.730e-02, 8.325e-02));
	r += mul(s3_5, M4(1.907e-01, -4.931e-02, -1.959e-02, -2.940e-01, 4.329e-02, 3.423e-02, 3.931e-02, -1.522e-03, 3.288e-01, 3.294e-01, -7.196e-03, 3.559e-01, -1.428e-01, -1.911e-02, -8.011e-02, 4.171e-03));
	r += mul(s3_6, M4(-3.380e-02, -1.973e-02, -3.070e-02, -1.531e-02, 4.209e-02, 6.372e-02, -3.960e-02, -3.473e-02, 3.107e-02, -2.000e-02, 1.402e-01, 6.426e-02, -1.221e-01, -7.591e-02, -1.263e-01, -4.021e-02));
	r += mul(s3_7, M4(-1.477e-01, -2.362e-02, -2.408e-01, -7.459e-02, 2.740e-02, 9.253e-03, 3.376e-02, 8.358e-02, 6.170e-02, 1.370e-01, 4.287e-01, 1.882e-01, -5.586e-02, 3.765e-02, -5.654e-02, -5.926e-02));
	r += mul(s3_8, M4(-8.437e-02, -7.423e-03, -9.895e-02, 6.110e-03, -1.140e-02, -3.104e-02, -1.990e-02, -8.771e-03, -8.003e-03, 3.333e-02, -4.337e-02, -4.209e-02, 2.450e-03, 4.146e-03, 5.678e-02, -1.433e-02));
	r += V4(-9.128e-03, -6.529e-04, 2.432e-03, -1.897e-03);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(1.522e-02, 1.332e-01, -1.370e-02, 8.961e-02, -8.745e-03, 1.870e-02, 2.077e-03, -4.289e-04, -1.209e-02, -2.764e-02, -1.018e-01, 2.208e-02, 4.315e-02, -4.795e-02, -7.151e-02, -2.160e-01));
	r += mul(s0_1, M4(-1.620e-03, 3.272e-02, 5.059e-02, -6.227e-03, 3.680e-04, -2.626e-03, 7.341e-03, 2.716e-02, 1.527e-02, -2.719e-01, -4.645e-02, -1.533e-01, 1.250e-01, 9.245e-01, -6.110e-02, 3.071e-02));
	r += mul(s0_2, M4(-1.397e-02, 6.638e-03, -2.670e-02, -5.236e-03, 1.159e-02, 1.329e-02, 1.673e-02, 3.774e-02, 6.295e-02, 3.739e-02, -1.134e-02, 1.190e-01, -1.613e-01, 1.699e-01, 6.084e-02, 9.514e-02));
	r += mul(s0_3, M4(-1.115e-01, -1.832e-01, -2.948e-02, 8.906e-02, 3.138e-02, -1.076e-01, 4.173e-02, 1.760e-02, 9.609e-02, -9.469e-02, 1.674e-01, 2.065e-01, -1.434e-01, 3.252e-01, 1.782e-01, 1.430e-01));
	r += mul(s0_4, M4(3.173e-02, -5.059e-01, 9.275e-02, -4.406e-02, 7.591e-02, 1.777e-03, -3.707e-02, -3.382e-02, -3.157e-01, -2.744e-01, -3.275e-01, 3.626e-01, 4.890e-02, -1.209e-01, 3.622e-01, -9.680e-01));
	r += mul(s0_5, M4(9.294e-02, -1.219e-01, -1.007e-01, -1.499e-01, 1.243e-01, 3.310e-02, -5.601e-04, 3.858e-02, 1.284e-01, -1.155e-02, 6.752e-02, 1.959e-01, 1.140e-01, 1.408e-01, -4.041e-01, -6.863e-02));
	r += mul(s0_6, M4(-4.129e-02, -1.930e-02, -1.093e-01, -3.101e-02, -1.419e-01, 3.356e-02, -3.193e-01, -1.912e-02, -3.719e-02, -3.021e-02, -1.156e-01, 2.147e-02, 6.477e-02, 9.847e-02, -2.705e-01, -2.885e-02));
	r += mul(s0_7, M4(3.506e-01, 2.661e-01, 4.836e-01, 1.497e-01, 4.364e-01, 1.449e-01, -2.917e-01, 2.029e-01, 1.247e-01, 1.391e-01, 9.205e-02, 1.106e-01, -2.206e-01, 2.701e-02, 1.929e-01, 1.424e-01));
	r += mul(s0_8, M4(-1.772e-01, 7.222e-02, -2.647e-01, 5.755e-02, 1.194e-01, 8.890e-03, 2.696e-03, -1.558e-02, -5.087e-02, -1.575e-02, -2.122e-02, -4.925e-02, 3.681e-02, 8.536e-02, 8.014e-02, 2.234e-02));
	r += mul(s1_0, M4(1.092e-02, 6.942e-03, -2.292e-04, 1.097e-02, 1.687e-02, -3.873e-02, 1.031e-02, 1.619e-02, -1.352e-02, -1.042e-02, -2.368e-02, 6.291e-03, 1.462e-02, -1.918e-02, -7.562e-02, 5.319e-02));
	r += mul(s1_1, M4(-2.691e-02, 9.276e-04, -1.137e-02, 8.633e-03, -2.673e-02, -3.010e-02, -3.910e-02, 4.111e-02, 4.394e-02, -2.128e-02, 2.068e-02, 3.198e-02, 8.469e-02, -4.228e-02, -7.085e-02, 9.193e-02));
	r += mul(s1_2, M4(-3.686e-02, -1.554e-02, 1.392e-02, -2.106e-02, 1.798e-02, 2.007e-02, 2.103e-02, 1.163e-02, 6.760e-02, 2.930e-02, -1.673e-02, 9.417e-02, 4.415e-02, 5.980e-04, -1.707e-02, 6.132e-02));
	r += mul(s1_3, M4(-1.848e-02, 1.355e-02, -7.033e-02, -2.143e-02, -2.363e-02, 5.194e-02, 4.201e-02, 1.181e-01, 3.639e-02, -6.268e-02, 1.314e-01, 1.043e-01, 1.243e-02, 1.947e-02, 1.390e-02, 4.193e-02));
	r += mul(s1_4, M4(6.969e-02, -1.578e-02, 1.190e-01, 9.579e-02, 2.033e-02, -3.115e-01, -8.862e-02, -2.074e-01, -1.363e-01, 1.256e-03, -1.677e-01, -2.560e-02, -2.493e-03, -1.141e-01, 7.297e-02, -9.485e-02));
	r += mul(s1_5, M4(-2.350e-02, -3.903e-02, 2.975e-02, -8.854e-02, 6.115e-02, 2.079e-03, 1.706e-02, 2.409e-02, 1.538e-01, -5.980e-02, 4.387e-03, 1.207e-01, -1.193e-01, -5.449e-02, 3.098e-02, -7.054e-02));
	r += mul(s1_6, M4(-4.119e-02, -4.166e-02, -1.202e-01, -1.300e-02, -1.008e-01, -2.782e-01, 1.708e-02, 5.854e-02, -2.178e-02, -1.046e-01, -5.567e-02, -3.958e-02, -1.784e-02, 5.101e-02, -2.786e-02, 1.147e-02));
	r += mul(s1_7, M4(9.741e-02, 7.178e-02, 7.364e-02, 9.770e-02, 5.630e-01, 2.897e-02, -3.891e-02, 3.993e-01, -7.691e-02, -5.213e-02, 1.312e-01, -4.224e-02, 5.263e-02, 6.813e-02, 3.747e-02, 8.618e-02));
	r += mul(s1_8, M4(-1.736e-02, 4.590e-04, -9.142e-02, -3.531e-03, -8.462e-02, 3.041e-02, -1.730e-01, -1.335e-02, 4.283e-02, -4.035e-02, 4.851e-03, -3.871e-02, -1.078e-02, 6.057e-02, 8.096e-02, 7.610e-02));
	r += mul(s2_0, M4(-3.101e-03, -3.325e-03, -3.010e-02, 1.164e-02, 2.044e-02, 4.129e-03, -7.056e-03, -2.319e-02, -1.133e-02, -1.727e-02, 3.727e-03, -9.079e-03, -4.788e-02, -8.151e-02, -9.153e-02, -6.582e-02));
	r += mul(s2_1, M4(-7.713e-03, 3.692e-02, 3.258e-03, 5.919e-02, 5.958e-03, -1.365e-01, -4.432e-02, -1.092e-01, 4.584e-02, 9.016e-04, -3.841e-02, 2.103e-02, 2.912e-02, -5.937e-02, -3.855e-02, -3.984e-02));
	r += mul(s2_2, M4(9.790e-03, -3.719e-02, -2.334e-02, -2.849e-02, 6.002e-02, -4.218e-04, 6.183e-03, 1.018e-02, -9.927e-03, -1.466e-02, -4.518e-02, -3.607e-02, 4.375e-02, 4.741e-02, -1.014e-02, 6.528e-02));
	r += mul(s2_3, M4(3.990e-02, 4.106e-02, 9.205e-02, -3.451e-02, -1.172e-01, 2.700e-01, -1.532e-01, 1.899e-01, -3.687e-02, -1.710e-02, -9.738e-02, -1.406e-02, -2.007e-01, 1.812e-01, 1.191e-01, 2.146e-01));
	r += mul(s2_4, M4(4.218e-03, 7.028e-02, -7.775e-02, -1.294e-01, 6.655e-03, -8.684e-03, 9.329e-02, 5.176e-01, 1.304e-01, 5.483e-02, 1.174e-01, -2.562e-03, 1.294e-01, 6.144e-02, 1.264e-02, -3.770e-03));
	r += mul(s2_5, M4(-4.987e-03, 6.890e-02, 2.878e-02, -1.266e-01, 3.804e-02, -1.083e-03, -6.412e-02, 8.630e-02, -1.930e-02, -3.793e-02, -1.037e-01, -8.304e-02, -5.077e-02, -6.976e-02, -2.801e-02, -8.130e-02));
	r += mul(s2_6, M4(-2.541e-02, 1.541e-02, -2.051e-04, 3.158e-02, -2.827e-02, -1.502e-01, -1.199e-01, -1.870e-01, -9.663e-03, -1.334e-02, -2.379e-03, 1.495e-02, -1.490e-01, -9.294e-02, 1.429e-01, -1.799e-01));
	r += mul(s2_7, M4(2.760e-02, -1.532e-01, -1.755e-01, -4.790e-03, -9.647e-02, -3.136e-02, 3.253e-01, 4.237e-02, 2.120e-02, 1.153e-02, 4.684e-02, 9.591e-03, 1.285e-01, 1.589e-03, 2.851e-01, -8.932e-02));
	r += mul(s2_8, M4(-7.054e-02, -7.100e-02, 5.799e-02, -2.696e-02, -4.633e-02, 2.716e-03, -1.767e-01, -2.399e-02, 1.062e-01, 1.179e-01, -3.951e-02, 5.781e-02, -2.265e-02, 5.184e-02, -1.120e-01, -5.495e-02));
	r += mul(s3_0, M4(-5.230e-03, 2.429e-03, -2.882e-02, -9.525e-04, -8.374e-03, 5.051e-02, -2.113e-04, 3.381e-02, -1.957e-02, 6.562e-02, -2.117e-02, -5.166e-03, 1.138e-02, -1.174e-01, -3.604e-02, -1.057e-01));
	r += mul(s3_1, M4(-5.803e-04, -1.457e-01, -6.551e-02, 2.911e-02, 5.359e-03, -1.767e-02, -3.476e-02, -3.163e-02, 2.483e-02, -3.519e-02, -6.246e-03, -3.317e-02, -4.102e-02, -1.135e-01, -4.224e-02, -1.169e-01));
	r += mul(s3_2, M4(1.385e-01, -1.803e-03, 1.384e-02, 1.654e-01, 9.299e-03, -1.255e-02, -2.115e-02, -4.276e-02, -8.563e-02, -1.929e-01, 4.760e-02, -1.530e-01, 4.017e-02, 9.586e-02, -1.077e-03, 9.078e-02));
	r += mul(s3_3, M4(1.002e-01, -3.070e-02, 1.246e-01, 1.635e-01, 6.703e-02, -7.847e-02, 3.675e-02, -9.179e-02, -8.737e-03, -1.256e-03, -4.148e-02, -1.586e-01, -5.562e-02, 1.461e-01, 1.082e-01, 2.240e-01));
	r += mul(s3_4, M4(-3.701e-01, -4.054e-03, -1.537e-01, 3.150e-01, -1.021e-01, -8.016e-02, -6.910e-02, -1.861e-01, -1.112e-01, 4.209e-01, 1.019e-01, 5.125e-02, 3.196e-02, 1.333e-01, 4.240e-04, 1.882e-01));
	r += mul(s3_5, M4(3.602e-01, -4.680e-02, 1.842e-02, -1.797e-01, 1.237e-01, 7.426e-02, -3.283e-02, 5.074e-02, 9.888e-02, 3.995e-01, -2.657e-02, 6.738e-01, -3.638e-02, -5.749e-02, 6.229e-02, 7.223e-02));
	r += mul(s3_6, M4(2.218e-02, -1.025e-02, -1.412e-02, -2.861e-02, -3.709e-02, -6.591e-02, 3.953e-02, 2.918e-02, -3.211e-02, -7.562e-03, 9.791e-02, -4.967e-02, -6.174e-02, -9.034e-02, -1.057e-01, -3.211e-02));
	r += mul(s3_7, M4(-1.200e-01, -1.665e-01, -2.507e-02, 2.587e-02, 3.163e-02, -1.572e-02, -7.263e-02, 8.118e-02, 3.478e-02, 1.941e-03, -2.193e-01, -1.246e-02, 2.897e-02, 2.311e-02, 2.875e-02, -4.203e-02));
	r += mul(s3_8, M4(1.174e-01, -1.034e-01, 6.835e-03, 6.596e-02, 1.273e-02, -3.237e-02, 2.304e-02, -2.405e-02, 1.199e-02, -2.383e-02, 1.895e-01, 3.729e-03, -9.807e-03, 2.523e-02, 6.897e-02, -1.656e-02));
	r += V4(5.802e-03, 4.137e-03, -8.207e-03, -2.772e-03);
	return r;
}
void Pass6(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 7
//!DESC CuNNy-4x8C-CHROMA-NVL-out
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(2.350e-02, 2.374e-02, -1.126e-02, 7.107e-03, 2.166e-02, -4.843e-04, 4.739e-03, 6.982e-03, 4.601e-02, -3.668e-03, 8.897e-03, 2.021e-02, 1.088e-01, 8.630e-03, -4.255e-02, -4.011e-02));
	r += mul(s0_1, M4(-2.863e-02, -3.603e-02, -7.372e-03, -3.837e-02, -1.825e-02, 3.651e-03, 1.198e-02, -4.675e-02, -1.372e-01, -3.334e-02, 1.292e-02, -6.616e-02, -2.044e-02, 2.692e-02, -2.225e-02, -2.523e-02));
	r += mul(s0_2, M4(-1.733e-03, 9.807e-03, -1.474e-02, 3.346e-03, -6.664e-04, 7.460e-02, 1.177e-02, 3.566e-02, 5.555e-02, 1.221e-03, 1.488e-02, 5.658e-02, -4.062e-02, -1.358e-02, 4.923e-03, -2.655e-02));
	r += mul(s0_3, M4(-2.128e-02, 4.120e-02, 6.157e-02, 8.255e-02, -2.703e-03, -4.084e-03, 2.379e-02, -1.498e-02, 2.289e-02, -3.357e-02, 3.357e-02, -4.095e-03, -2.435e-01, 1.684e-01, -7.113e-02, -1.565e-01));
	r += mul(s0_4, M4(-4.913e-01, -4.923e-01, -4.475e-02, -1.087e-01, -9.887e-02, 5.998e-02, -8.519e-02, 1.036e-01, 6.287e-02, 1.248e-01, -1.560e-01, 8.681e-02, 1.039e-01, -6.426e-01, 2.171e-01, 4.326e-01));
	r += mul(s0_5, M4(1.740e-02, -3.137e-02, 2.076e-02, 4.558e-02, 2.626e-01, -2.192e-01, 1.879e-01, -1.664e-01, -2.009e-02, 4.946e-02, 2.480e-02, -9.254e-02, -3.045e-02, 1.133e-01, -5.573e-02, 1.311e-02));
	r += mul(s0_6, M4(1.706e-02, 8.850e-04, 2.164e-02, 8.866e-03, 2.826e-03, -7.556e-03, -9.952e-03, -8.118e-03, 1.128e-02, 1.486e-02, 1.394e-02, -1.293e-02, -9.307e-02, -2.653e-02, 9.702e-02, -1.917e-02));
	r += mul(s0_7, M4(2.233e-02, -1.590e-02, 1.423e-01, 8.480e-02, 1.901e-02, 1.381e-02, -9.919e-03, 4.740e-03, -5.592e-02, -4.771e-02, -5.189e-02, 4.162e-02, 1.963e-01, 1.330e-01, -7.955e-02, -3.595e-03));
	r += mul(s0_8, M4(-2.026e-02, -1.539e-03, -2.761e-03, 4.558e-02, 8.808e-03, 4.483e-02, 3.709e-04, 9.112e-02, -1.889e-02, -4.322e-02, -1.450e-03, 8.891e-03, -2.591e-02, 1.042e-01, 4.186e-02, -1.479e-01));
	r += mul(s1_0, M4(-9.017e-03, 4.358e-02, -4.707e-03, 6.172e-03, 3.831e-02, -1.177e-02, 5.332e-03, 2.034e-03, 9.024e-02, -6.908e-03, 9.215e-03, 1.056e-02, -2.887e-02, -2.521e-02, -2.953e-03, -9.972e-03));
	r += mul(s1_1, M4(-8.930e-03, -6.830e-02, 2.771e-02, -2.106e-02, -4.087e-02, -6.808e-03, 2.156e-02, -2.362e-02, -4.218e-01, 5.842e-02, 1.214e-01, -3.122e-02, 3.061e-02, 8.496e-03, -1.800e-02, -1.223e-03));
	r += mul(s1_2, M4(-5.924e-03, 2.056e-03, -3.743e-03, 1.580e-02, 2.926e-02, 1.739e-02, -6.409e-03, 1.752e-02, 1.534e-01, -2.244e-01, -2.762e-02, 8.728e-02, -3.445e-02, 7.967e-03, -1.175e-02, -3.899e-02));
	r += mul(s1_3, M4(9.786e-03, 5.418e-02, 1.072e-02, 7.132e-02, 1.109e-02, -1.850e-02, 4.834e-02, -2.482e-02, 3.196e-02, -3.917e-02, 4.826e-02, 5.383e-02, -6.092e-02, 4.729e-02, -6.238e-02, -2.651e-02));
	r += mul(s1_4, M4(-1.624e-01, -2.882e-01, -1.799e-01, -3.012e-01, -1.193e-01, 2.970e-04, -2.261e-01, 1.154e-01, 1.909e-01, 2.886e-01, -1.281e-01, -2.584e-01, 9.036e-02, -1.634e-01, 1.099e-01, 7.213e-02));
	r += mul(s1_5, M4(-1.765e-02, 2.223e-02, -1.794e-02, -2.045e-02, 2.301e-02, 2.719e-02, 1.069e-01, 2.003e-02, -5.710e-02, 3.573e-03, 4.223e-02, 1.480e-01, -9.790e-03, -3.966e-02, -3.623e-02, 6.045e-02));
	r += mul(s1_6, M4(8.204e-03, -6.015e-03, 3.633e-03, 1.333e-02, -2.319e-03, -2.187e-03, 7.348e-03, -2.149e-03, 1.018e-02, -3.180e-03, 3.061e-02, 5.870e-03, -5.565e-02, -1.478e-02, -5.335e-02, 2.393e-02));
	r += mul(s1_7, M4(3.867e-02, 4.698e-03, -1.732e-02, -2.059e-02, 8.651e-03, 1.990e-02, 5.905e-02, -2.160e-02, -5.832e-02, -5.799e-02, -1.147e-01, 9.397e-02, 7.864e-02, 1.239e-01, 1.901e-01, -1.627e-01));
	r += mul(s1_8, M4(-7.304e-03, -2.404e-03, -9.438e-03, 7.623e-03, 2.735e-02, 2.360e-02, -2.378e-02, 7.564e-02, -1.971e-02, -2.580e-02, 5.306e-03, -4.162e-02, 1.273e-02, 1.878e-02, -1.877e-03, 1.854e-02));
	r += mul(s2_0, M4(-1.787e-02, -2.906e-02, -9.925e-03, 1.142e-02, -2.114e-02, 2.194e-02, -1.602e-02, 2.857e-03, -1.024e-03, -2.318e-02, 1.434e-02, -1.606e-02, 4.301e-02, -5.189e-02, 6.858e-03, -9.668e-03));
	r += mul(s2_1, M4(-1.007e-02, -4.373e-02, -6.525e-03, -3.169e-02, 6.372e-02, -6.508e-02, -1.288e-02, 4.628e-03, -6.016e-01, 4.020e-01, -3.474e-01, 2.842e-01, -1.169e-01, 1.470e-01, 4.487e-02, -3.171e-04));
	r += mul(s2_2, M4(-1.570e-02, -1.614e-03, -1.470e-02, -5.721e-03, -6.558e-02, 2.241e-02, -5.421e-03, -5.434e-02, -5.871e-02, 6.116e-02, -3.226e-02, 5.206e-02, 9.106e-02, -7.392e-02, -2.589e-03, 5.061e-02));
	r += mul(s2_3, M4(4.705e-03, -2.869e-02, -6.195e-03, -5.399e-03, 6.668e-03, -1.171e-02, 1.508e-02, -3.031e-03, 7.035e-03, -9.504e-03, 2.951e-02, -3.487e-02, 2.179e-02, -5.115e-02, 1.790e-02, -1.895e-02));
	r += mul(s2_4, M4(1.390e-01, -3.364e-03, 1.141e-01, 2.649e-02, -6.077e-02, 7.111e-02, 1.053e-01, -5.598e-02, 9.334e-02, -7.635e-03, -1.094e-01, 9.309e-02, -2.705e-01, -1.975e-02, 4.613e-01, 3.096e-01));
	r += mul(s2_5, M4(-2.126e-02, 3.014e-03, -2.186e-02, -2.769e-03, 6.483e-02, -1.093e-01, -6.343e-02, 1.189e-01, 1.976e-02, -5.659e-02, -1.752e-02, -1.367e-02, 1.404e-02, -9.349e-02, 2.192e-03, 1.335e-01));
	r += mul(s2_6, M4(3.907e-03, 1.449e-02, 1.745e-02, -9.841e-03, 1.029e-02, 6.687e-03, 4.358e-03, -1.061e-02, -3.567e-04, 6.359e-03, -2.855e-03, 4.189e-03, 4.311e-02, 2.069e-02, 1.483e-02, -1.878e-02));
	r += mul(s2_7, M4(1.335e-02, 1.835e-02, 1.006e-02, 3.469e-04, -6.103e-04, -3.457e-02, -5.310e-02, 3.438e-02, -5.450e-04, 1.377e-02, -1.958e-03, -2.235e-03, -2.540e-02, -2.838e-02, -9.546e-02, 3.484e-02));
	r += mul(s2_8, M4(-4.892e-04, -6.361e-03, 4.817e-03, -7.269e-03, 2.373e-02, 6.421e-02, 6.149e-02, -3.982e-02, 1.317e-02, 8.775e-03, 8.262e-03, -8.962e-03, -2.066e-02, -4.111e-02, -5.071e-02, -3.443e-02));
	r += mul(s3_0, M4(-1.218e-01, 1.533e-02, 3.605e-03, 1.090e-02, 8.088e-03, 3.069e-02, -4.014e-02, -1.272e-02, 2.923e-02, -9.353e-03, 7.850e-03, 1.156e-02, 4.267e-02, -3.142e-02, 1.304e-02, -1.684e-03));
	r += mul(s3_1, M4(-2.647e-01, 3.664e-01, -3.319e-02, -7.445e-02, -4.575e-02, -1.726e-01, 2.672e-02, 3.991e-02, -1.009e-01, -5.702e-02, -2.890e-02, -1.802e-02, 1.913e-02, 1.416e-01, 7.006e-03, 2.289e-03));
	r += mul(s3_2, M4(1.082e-02, -5.596e-03, -3.176e-03, 9.442e-04, -4.468e-02, 2.778e-02, -1.055e-02, -4.894e-02, -3.137e-02, -6.637e-03, -1.122e-02, -2.775e-02, 6.927e-02, -3.050e-02, 2.301e-02, 5.110e-02));
	r += mul(s3_3, M4(-2.992e-02, -1.190e-02, -1.821e-01, 2.706e-02, -6.969e-02, -4.068e-02, 8.131e-02, 2.200e-02, 5.418e-03, -1.782e-03, 1.902e-02, -2.222e-02, 3.652e-02, -2.680e-02, 4.002e-02, -3.234e-02));
	r += mul(s3_4, M4(5.556e-02, 4.455e-02, -2.397e-01, 5.643e-01, -4.407e-01, -2.549e-01, 5.177e-01, 3.487e-01, 7.981e-02, 1.136e-02, -2.948e-02, 2.692e-02, 5.599e-02, 8.522e-02, 7.965e-02, 1.783e-01));
	r += mul(s3_5, M4(3.930e-02, -1.225e-02, 2.190e-02, -3.580e-02, 2.727e-02, -1.973e-01, -5.430e-02, 1.632e-01, 3.000e-02, -2.668e-02, -7.234e-03, 2.975e-02, -1.834e-02, 8.312e-02, 3.389e-02, -1.029e-01));
	r += mul(s3_6, M4(8.261e-03, 9.948e-03, 2.634e-02, -1.374e-02, 3.216e-02, 5.500e-03, -1.071e-03, -3.740e-03, -3.377e-03, -3.162e-03, -6.166e-03, 2.648e-03, 1.872e-02, 5.537e-03, 3.455e-02, -1.581e-02));
	r += mul(s3_7, M4(-1.276e-02, 3.450e-02, -3.653e-02, 9.141e-03, 1.599e-02, -2.358e-02, -2.549e-02, 2.266e-02, -4.561e-03, 1.435e-02, 3.070e-02, -3.417e-03, -3.336e-02, -4.748e-02, -1.180e-01, 5.368e-02));
	r += mul(s3_8, M4(-3.002e-03, -7.023e-03, 2.856e-02, -1.235e-03, 4.414e-02, 8.195e-02, 5.460e-02, -4.413e-02, 8.137e-03, 9.566e-03, 1.114e-02, 3.093e-03, -3.103e-02, -5.350e-02, -1.724e-02, -1.960e-02));
	r += V4(1.490e-03, 7.862e-04, 1.194e-03, 8.393e-04);
	return tanh(r);
}
void Pass7(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 8
//!DESC CuNNy-4x8C-CHROMA-NVL-shuffle
//!STYLE PS
//!IN t2, INPUT, easu
float4 Pass8(float2 pos) {
	float2 pt = float2(GetInputPt());
	static const float3x3 rgb2yuv = {0.299, 0.587, 0.114, -0.169, -0.331, 0.5, 0.5, -0.419, -0.081};
	static const float3x3 yuv2rgb = {1, -0.00093, 1.401687, 1, -0.3437, -0.71417, 1, 1.77216, 0.00099};
	float4 r = 0.0;
	float2 size = float2(GetInputSize());
	float2 f = frac(pos * size);
	float3 yuv = mul(rgb2yuv, INPUT.SampleLevel(SL, pos, 0).rgb);
	int2 i = int2(f * 2.0);
	r.r = t2.SampleLevel(SP, (float2(0.5, 0.5) - f) * pt + pos, 0)[2*i.y + i.x];
	r.r += easu.SampleLevel(SP, pos, 0).r;
	r.a = 1.0;
	r.r = clamp(r, 0.0, 1.0);
	float3 px = mul(yuv2rgb, float3(r.r, yuv.yz));
	return float4(px, 1.0);
}
