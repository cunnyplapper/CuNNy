// CuNNy 4x8C CHROMA NVL
// Copyright (c) 2024 cunnyplapper

// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public
// License along with this program.  If not, see <https://www.gnu.org/licenses/>.
/* ------------------------------------------------------------------- */

//!MAGPIE EFFECT
//!VERSION 3
//!OUTPUT_WIDTH INPUT_WIDTH * 2
//!OUTPUT_HEIGHT INPUT_HEIGHT * 2

//!TEXTURE
Texture2D INPUT;

//!TEXTURE
//!WIDTH INPUT_WIDTH * 2
//!HEIGHT INPUT_HEIGHT * 2
//!FORMAT R8_UNORM
Texture2D easu;

//!SAMPLER
//!FILTER POINT
SamplerState SP;

//!SAMPLER
//!FILTER LINEAR
SamplerState SL;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t1;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t2;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t3;

// FSR mpv | modified
// Copyright (c) 2021 Advanced Micro Devices, Inc. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// FidelityFX FSR v1.0.2 by AMD
// ported to mpv by agyild

//!PASS 1
//!DESC CuNNy-EASU
//!STYLE PS
//!IN INPUT
//!OUT easu

float GetLuma(float3 rgb) {
	return dot(float3(0.299, 0.587, 0.114), rgb);
}

float APrxLoRcpF1(float a) {
	return asfloat(uint(0x7ef07ebb) - asuint(a));
}

float APrxLoRsqF1(float a) {
	return asfloat(uint(0x5f347d74) - (asuint(a) >> uint(1)));
}

float AMin3F1(float x, float y, float z) {

	return min(x, min(y, z));
}

float AMax3F1(float x, float y, float z) {
	return max(x, max(y, z));
}

void tap(inout float aC, inout float aW, float2 off, float2 dir, float2 len,
         float lob, float clp, float c){
	float2 v;
	v.x = (off.x * ( dir.x)) + (off.y * dir.y);
	v.y = (off.x * (-dir.y)) + (off.y * dir.x);
	v *= len;
	float d2 = v.x * v.x + v.y * v.y;
	d2 = min(d2, clp);
	float wB = float(2.0 / 5.0) * d2 + -1.0;

	float wA = lob * d2 + -1.0;
	wB *= wB;
	wA *= wA;
	wB = float(25.0 / 16.0) * wB + float(-(25.0 / 16.0 - 1.0));
	float w = wB * wA;
	aC += c * w;
	aW += w;
}

void set(inout float2 dir, inout float len, float2 pp, bool biS, bool biT,
         bool biU, bool biV, float lA, float lB, float lC, float lD, float lE){

	float w = 0.0;
	if (biS)
		w = (1.0 - pp.x) * (1.0 - pp.y);
	if (biT)
		w =        pp.x  * (1.0 - pp.y);
	if (biU)
		w = (1.0 - pp.x) *        pp.y;

	if (biV)
		w =        pp.x  *        pp.y;
	float dc = lD - lC;
	float cb = lC - lB;
	float lenX = max(abs(dc), abs(cb));
	lenX = APrxLoRcpF1(lenX);
	float dirX = lD - lB;
	lenX = clamp(abs(dirX) * lenX, 0.0, 1.0);
	lenX *= lenX;
	float ec = lE - lC;

	float ca = lC - lA;
	float lenY = max(abs(ec), abs(ca));
	lenY = APrxLoRcpF1(lenY);
	float dirY = lE - lA;
	lenY = clamp(abs(dirY) * lenY, 0.0, 1.0);
	lenY *= lenY;
	dir += float2(dirX, dirY) * w;
	len += dot(float2(w, w), float2(lenX, lenY));
}

float4 Pass1(float2 pos) {
	float2 pt = float2(GetInputPt());
	float2 size = float2(GetInputSize());
	float4 pix = float4(0.0, 0.0, 0.0, 1.0);
	float2 pp = pos * size - float2(0.5, 0.5);
	float2 fp = floor(pp);
	pp -= fp;
	float b = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(0.5, -0.5)) * pt), 0).rgb);
	float c = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(1.5, -0.5)) * pt), 0).rgb);
	float e = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(-0.5, 0.5)) * pt), 0).rgb);
	float f = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 0.5, 0.5)) * pt), 0).rgb);
	float g = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 1.5, 0.5)) * pt), 0).rgb);
	float h = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 2.5, 0.5)) * pt), 0).rgb);
	float i = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(-0.5, 1.5)) * pt), 0).rgb);
	float j = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 0.5, 1.5)) * pt), 0).rgb);
	float k = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 1.5, 1.5)) * pt), 0).rgb);
	float l = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 2.5, 1.5)) * pt), 0).rgb);
	float n = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(0.5, 2.5) ) * pt), 0).rgb);
	float o = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(1.5, 2.5) ) * pt), 0).rgb);
	float4 bczzL = float4(b, c, 0.0, 0.0);
	float4 ijfeL = float4(i, j, f, e);
	float4 klhgL = float4(k, l, h, g);
	float4 zzonL = float4(0.0, 0.0, o, n);
	float bL = bczzL.x;
	float cL = bczzL.y;
	float iL = ijfeL.x;
	float jL = ijfeL.y;
	float fL = ijfeL.z;
	float eL = ijfeL.w;
	float kL = klhgL.x;
	float lL = klhgL.y;
	float hL = klhgL.z;
	float gL = klhgL.w;
	float oL = zzonL.z;
	float nL = zzonL.w;
	float2 dir = float2(0.0, 0.0);
	float len = 0.0;
	set(dir, len, pp, true, false, false, false, bL, eL, fL, gL, jL);
	set(dir, len, pp, false, true, false, false, cL, fL, gL, hL, kL);
	set(dir, len, pp, false, false, true, false, fL, iL, jL, kL, nL);
	set(dir, len, pp, false, false, false, true, gL, jL, kL, lL, oL);
	float2 dir2 = dir * dir;
	float dirR = dir2.x + dir2.y;
	bool zro = dirR < float(1.0 / 32768.0);
	dirR = APrxLoRsqF1(dirR);
	dirR = zro ? 1.0 : dirR;
	dir.x = zro ? 1.0 : dir.x;
	dir *= float2(dirR, dirR);
	len = len * 0.5;
	len *= len;
	float stretch = (dir.x * dir.x + dir.y * dir.y) * APrxLoRcpF1(max(abs(dir.x), abs(dir.y)));
	float2 len2 = float2(1.0 + (stretch - 1.0) * len, 1.0 + -0.5 * len);
	float lob = 0.5 + float((1.0 / 4.0 - 0.04) - 0.5) * len;
	float clp = APrxLoRcpF1(lob);
	float aC = 0.0;
	float aW = 0.0;
	tap(aC, aW, float2( 0.0,-1.0) - pp, dir, len2, lob, clp, bL);
	tap(aC, aW, float2( 1.0,-1.0) - pp, dir, len2, lob, clp, cL);
	tap(aC, aW, float2(-1.0, 1.0) - pp, dir, len2, lob, clp, iL);
	tap(aC, aW, float2( 0.0, 1.0) - pp, dir, len2, lob, clp, jL);
	tap(aC, aW, float2( 0.0, 0.0) - pp, dir, len2, lob, clp, fL);
	tap(aC, aW, float2(-1.0, 0.0) - pp, dir, len2, lob, clp, eL);
	tap(aC, aW, float2( 1.0, 1.0) - pp, dir, len2, lob, clp, kL);
	tap(aC, aW, float2( 2.0, 1.0) - pp, dir, len2, lob, clp, lL);
	tap(aC, aW, float2( 2.0, 0.0) - pp, dir, len2, lob, clp, hL);
	tap(aC, aW, float2( 1.0, 0.0) - pp, dir, len2, lob, clp, gL);
	tap(aC, aW, float2( 1.0, 2.0) - pp, dir, len2, lob, clp, oL);
	tap(aC, aW, float2( 0.0, 2.0) - pp, dir, len2, lob, clp, nL);
	pix.r = aC / aW;
	float min1 = min(AMin3F1(fL, gL, jL), kL);
	float max1 = max(AMax3F1(fL, gL, jL), kL);
	pix.r = clamp(pix.r, min1, max1);
	pix.r = clamp(pix.r, 0.0, 1.0);
	return pix;
}

//!PASS 2
//!DESC CuNNy-4x8C-CHROMA-NVL-in
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN INPUT
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) (dot(float3(1.813e-01, 3.391e-01, 7.796e-02), O(INPUT, float2(x, y)).rgb) + -3.989e-01)
float4 f0(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	V4 r = 0.0;
	r += V4(1.769e-02, -8.323e-02, -4.281e-01, 1.271e-02) * s0_0;
	r += V4(8.713e-02, 1.013e-01, 3.875e-01, 1.020e-02) * s0_1;
	r += V4(5.653e-02, -1.755e-02, -5.317e-03, 5.224e-03) * s0_2;
	r += V4(-1.207e-01, -6.309e-01, 4.461e-01, -3.335e-02) * s0_3;
	r += V4(5.326e-01, 5.508e-01, -4.189e-01, -5.736e-02) * s0_4;
	r += V4(-7.182e-03, 1.039e-01, 1.219e-02, -6.727e-02) * s0_5;
	r += V4(8.400e-03, -4.529e-02, 1.033e-01, -1.634e-02) * s0_6;
	r += V4(-8.722e-02, 3.092e-02, -1.032e-01, 3.699e-01) * s0_7;
	r += V4(1.070e-02, -1.513e-02, 7.736e-03, -5.502e-02) * s0_8;
	r += V4(-1.629e-02, -1.044e-02, -8.911e-04, 6.385e-02);
	return r;
}
float4 f1(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	V4 r = 0.0;
	r += V4(-1.612e-02, 2.447e-02, 2.569e-02, 4.209e-01) * s0_0;
	r += V4(4.323e-02, -4.826e-03, 6.543e-01, -4.135e-01) * s0_1;
	r += V4(-2.189e-02, -2.884e-02, -7.432e-02, 4.010e-02) * s0_2;
	r += V4(2.717e-02, 6.087e-03, -3.408e-02, 7.446e-02) * s0_3;
	r += V4(6.192e-01, 4.972e-01, -5.981e-01, -1.194e-01) * s0_4;
	r += V4(-6.479e-01, 3.528e-02, 2.768e-02, 1.063e-03) * s0_5;
	r += V4(5.829e-03, -1.147e-02, 6.260e-03, -3.570e-03) * s0_6;
	r += V4(2.963e-02, -6.290e-01, -1.033e-02, -7.831e-04) * s0_7;
	r += V4(-4.829e-02, 1.078e-01, 1.194e-03, 5.403e-03) * s0_8;
	r += V4(-1.284e-02, 7.132e-03, 4.951e-05, 8.264e-03);
	return r;
}
void Pass2(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	min16float s0_0 = l0(-1.0, -1.0);
	min16float s0_1 = l0(0.0, -1.0);
	min16float s0_2 = l0(1.0, -1.0);
	min16float s0_3 = l0(-1.0, 0.0);
	min16float s0_4 = l0(0.0, 0.0);
	min16float s0_5 = l0(1.0, 0.0);
	min16float s0_6 = l0(-1.0, 1.0);
	min16float s0_7 = l0(0.0, 1.0);
	min16float s0_8 = l0(1.0, 1.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
}
//!PASS 3
//!DESC CuNNy-4x8C-CHROMA-NVL-conv1
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2, t3
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-1.163e-01, -6.665e-02, 9.927e-02, -8.919e-02, 7.131e-02, -1.508e-01, -2.021e-01, -1.621e-01, 3.031e-02, 1.978e-01, 1.659e-01, 1.268e-01, 1.285e-01, 4.892e-02, -1.454e-01, 1.573e-02));
	r += mul(s0_1, M4(1.051e-01, -4.450e-01, 1.379e-02, -4.033e-01, 1.260e-01, -2.509e-02, 2.275e-01, -2.346e-01, -4.111e-01, -6.198e-02, 1.752e-01, 3.302e-02, -4.204e-02, 5.295e-01, -2.477e-01, 1.313e-01));
	r += mul(s0_2, M4(1.830e-02, -7.660e-02, 3.994e-02, -1.499e-01, -1.078e-01, 9.642e-02, -3.188e-02, -3.057e-01, -3.831e-01, -6.792e-03, -8.889e-02, 6.036e-01, 5.420e-02, -1.018e-01, -9.401e-02, -9.648e-05));
	r += mul(s0_3, M4(4.324e-02, 5.225e-02, -3.622e-02, 5.236e-02, 1.335e-01, -5.217e-02, -3.414e-01, 1.634e-01, -2.967e-01, 1.632e-01, 3.684e-01, 2.322e-02, -3.236e-01, -1.170e-01, 2.334e-02, -3.890e-02));
	r += mul(s0_4, M4(2.050e-02, 9.882e-02, -1.403e-01, 2.276e-01, 3.319e-02, 3.769e-01, -6.174e-02, 5.894e-01, 4.105e-01, -4.743e-01, 2.577e-01, -4.618e-01, -1.755e-02, -9.656e-03, 2.185e-01, 6.116e-02));
	r += mul(s0_5, M4(4.510e-02, 1.407e-01, 3.627e-01, -2.657e-01, 3.308e-01, -3.155e-01, -5.089e-02, 2.624e-01, -3.282e-01, 5.100e-01, -5.195e-02, -3.255e-01, 1.082e-01, -7.481e-01, -9.642e-02, 3.837e-03));
	r += mul(s0_6, M4(-1.094e-01, 2.498e-01, 2.552e-02, 2.416e-01, 8.358e-02, -5.636e-02, 1.206e-01, -7.631e-02, -3.753e-02, 1.762e-01, 3.544e-02, -2.250e-02, 6.668e-02, -2.990e-03, -4.996e-02, 2.256e-01));
	r += mul(s0_7, M4(-6.578e-02, -1.444e-01, 9.329e-02, 1.525e-01, -1.448e-01, -6.914e-02, 5.691e-02, -1.991e-01, -4.944e-02, 3.848e-02, -2.161e-01, -3.330e-01, 1.512e-02, 2.248e-01, -7.897e-03, 1.581e-01));
	r += mul(s0_8, M4(1.587e-01, 1.788e-01, -3.682e-01, 1.421e-01, 6.179e-02, 1.314e-01, 1.876e-01, -1.298e-01, 3.686e-01, 1.895e-01, -3.721e-01, -2.573e-01, -1.600e-01, 1.439e-01, 1.922e-01, -2.549e-01));
	r += mul(s1_0, M4(5.875e-02, -6.366e-02, 3.123e-02, -1.957e-01, 7.012e-02, -9.887e-02, 9.049e-02, -1.414e-01, 7.230e-02, 5.402e-02, 1.744e-01, 8.752e-02, 1.684e-02, -3.984e-01, 9.682e-02, 2.272e-01));
	r += mul(s1_1, M4(1.418e-02, -1.707e-01, -1.956e-01, -3.124e-01, 1.214e-01, -8.685e-02, 5.645e-03, -2.173e-01, -2.405e-01, -2.196e-02, -1.913e-01, 2.939e-01, 9.055e-01, 8.782e-01, -3.210e-01, 5.503e-01));
	r += mul(s1_2, M4(9.372e-02, -6.154e-02, 1.077e-01, -1.292e-01, 1.645e-01, -2.783e-01, -2.300e-01, -4.658e-01, -5.280e-01, 7.975e-02, 4.268e-02, 2.220e-01, 1.121e-01, -2.506e-01, -2.626e-01, 7.649e-01));
	r += mul(s1_3, M4(-3.402e-01, -1.472e-01, 1.304e-01, -6.774e-03, 1.929e-01, -7.772e-02, -8.902e-02, -4.355e-02, 2.395e-01, 4.988e-02, 2.148e-01, 9.128e-02, 5.908e-02, 8.442e-02, 2.561e-01, 2.250e-01));
	r += mul(s1_4, M4(-7.682e-02, 1.025e-01, 1.012e-01, 2.026e-01, 2.073e-01, 1.362e-01, -1.254e-01, 3.103e-02, -6.511e-02, -4.981e-01, 1.027e-01, -1.976e-01, 8.063e-01, -5.711e-02, -6.012e-01, -3.050e-01));
	r += mul(s1_5, M4(1.464e-02, -2.394e-03, 2.900e-01, 4.924e-02, 7.740e-02, 1.981e-01, 6.010e-02, -3.848e-01, 4.346e-01, -8.073e-02, -2.414e-01, 1.114e-01, 5.771e-01, -4.318e-01, 3.090e-01, -1.220e-01));
	r += mul(s1_6, M4(7.441e-02, 2.516e-01, 1.992e-03, 2.362e-01, -7.351e-02, -3.099e-03, 1.870e-01, -8.826e-02, -1.567e-02, -8.773e-02, 1.558e-01, -6.158e-02, -6.837e-04, -2.986e-01, -3.311e-01, 3.219e-01));
	r += mul(s1_7, M4(1.169e-01, 7.566e-03, -1.782e-01, 5.415e-02, -2.476e-01, -1.263e-01, 1.499e-01, 2.417e-01, 5.430e-02, -1.238e-01, -3.381e-01, 1.194e-02, -3.522e-01, -1.838e-01, 7.104e-02, 3.109e-01));
	r += mul(s1_8, M4(9.899e-02, 1.218e-01, -2.351e-01, -2.248e-02, 6.049e-02, 7.362e-03, -1.623e-01, 1.511e-01, 1.170e-01, 2.835e-01, -2.702e-02, -1.810e-01, -3.862e-01, -5.661e-02, 1.963e-01, -1.352e-01));
	r += mul(s2_0, M4(1.252e-01, -1.299e-01, -4.573e-01, -2.018e-01, -8.012e-02, -3.541e-01, 1.155e-01, -2.378e-01, -1.246e-01, -1.004e-01, -5.169e-02, -5.188e-02, 1.054e-01, 3.551e-02, 1.830e-01, -7.335e-02));
	r += mul(s2_1, M4(2.198e-01, -5.046e-01, 7.443e-02, -4.279e-01, -1.253e-02, -7.292e-01, 5.130e-01, -2.087e-01, -6.383e-03, 5.900e-02, 2.041e-02, 2.055e-02, 2.509e-01, 3.100e-02, -4.748e-02, 1.327e-01));
	r += mul(s2_2, M4(-6.222e-03, 7.100e-02, -5.831e-03, -1.479e-01, 1.307e-01, -3.739e-01, -1.520e-01, -3.778e-02, 1.298e-01, 2.095e-02, 9.137e-02, 1.761e-01, -8.817e-02, 2.285e-01, -2.994e-02, 2.410e-01));
	r += mul(s2_3, M4(-4.003e-01, 2.352e-01, 1.266e-01, -3.998e-02, 2.851e-02, 1.526e-01, 3.497e-02, 2.463e-01, -5.541e-01, -1.505e-01, 4.950e-01, -9.285e-02, -7.052e-02, -1.991e-01, 2.047e-01, -1.765e-01));
	r += mul(s2_4, M4(5.838e-01, 5.170e-01, -2.443e-01, -2.865e-01, -1.624e-01, 3.074e-01, -2.607e-01, 1.565e-01, 1.322e-01, -5.135e-01, -4.527e-02, -1.127e-01, -1.270e-01, 2.277e-01, -1.791e-01, 2.637e-01));
	r += mul(s2_5, M4(6.104e-02, 5.699e-02, 5.935e-03, -1.973e-01, 8.853e-02, -1.762e-01, 2.603e-01, 5.030e-02, 2.935e-01, -4.482e-01, -1.670e-01, 4.714e-01, 6.772e-02, 2.010e-01, -1.553e-01, 3.806e-01));
	r += mul(s2_6, M4(-6.624e-02, 1.604e-02, -8.123e-02, 2.406e-01, 1.142e-01, 7.843e-02, -1.523e-01, 6.028e-02, -3.629e-01, 7.791e-02, -1.909e-01, 8.903e-02, 3.989e-02, -1.076e-01, -5.144e-02, -1.656e-01));
	r += mul(s2_7, M4(9.116e-02, 2.152e-02, -1.794e-02, 1.191e-02, -7.392e-02, 7.422e-02, -4.969e-02, -1.005e-01, 6.682e-01, -2.023e-01, -1.125e+00, -4.185e-01, -1.534e-02, -1.638e-01, -4.335e-02, -2.607e-01));
	r += mul(s2_8, M4(-9.769e-03, 9.789e-02, 4.588e-02, 2.113e-01, -1.203e-01, 7.255e-02, 2.394e-01, -5.085e-02, 2.483e-01, -2.822e-01, -1.759e-01, -1.396e-01, -1.691e-01, 8.883e-02, 4.077e-01, 5.940e-02));
	r += mul(s3_0, M4(-5.767e-01, -3.482e-02, -1.452e-01, 1.892e-01, 5.957e-01, -2.555e-02, 9.358e-02, -4.268e-01, -1.986e-01, -3.165e-02, -2.013e-01, 1.425e-01, 2.042e-02, 4.741e-02, 6.580e-02, 1.317e-01));
	r += mul(s3_1, M4(-3.802e-02, 9.696e-02, 4.885e-02, -1.121e-01, 2.633e-01, 2.293e-01, -3.140e-01, -1.226e+00, -1.557e-03, 1.542e-01, -5.863e-02, -2.235e-01, -2.271e-01, -3.916e-02, 3.997e-01, -4.458e-02));
	r += mul(s3_2, M4(-6.034e-02, -1.063e-01, 6.357e-02, -3.074e-01, -1.854e-01, -6.573e-02, 5.093e-01, -1.471e-01, -4.585e-02, 1.634e-01, 7.972e-02, -3.615e-02, -1.811e-01, -1.268e-01, 5.780e-02, 4.120e-01));
	r += mul(s3_3, M4(-5.657e-01, -6.009e-02, -3.800e-01, 2.955e-01, -1.086e-01, -2.131e-02, -1.929e-01, 5.631e-02, 2.637e-01, -1.145e-01, -3.283e-01, 3.936e-01, 2.126e-01, -3.978e-01, -2.668e-01, -2.475e-01));
	r += mul(s3_4, M4(2.662e-01, -1.182e-01, 1.222e-02, -2.934e-02, 4.384e-01, -1.248e-02, -3.956e-01, 2.033e-02, -2.231e-01, 1.813e-01, 7.232e-01, -3.070e-01, 6.810e-02, 1.565e-02, -3.122e-02, -2.637e-01));
	r += mul(s3_5, M4(-1.315e-02, -2.414e-01, -2.128e-04, 2.061e-01, -1.966e-01, -2.766e-01, 2.791e-01, 2.549e-01, -4.625e-01, 9.902e-02, -1.155e-01, -2.367e-01, -3.601e-01, -7.034e-03, 3.001e-01, -3.534e-01));
	r += mul(s3_6, M4(-1.471e-01, -8.083e-04, -8.940e-02, -3.019e-01, -2.700e-02, -5.306e-02, -9.363e-02, 2.597e-02, 3.434e-01, 1.261e-01, -3.349e-01, 4.459e-02, 3.525e-01, -1.585e-01, -3.658e-01, 1.013e-01));
	r += mul(s3_7, M4(1.032e-02, -6.316e-02, 3.737e-03, 4.124e-02, 1.421e-01, 1.098e-02, 8.840e-02, 1.132e-01, -3.106e-01, 3.329e-01, 2.017e-01, -1.852e-01, 1.121e-01, -1.360e-01, 1.490e-01, 2.476e-01));
	r += mul(s3_8, M4(-2.061e-03, 2.809e-02, -6.457e-02, 1.273e-01, -1.023e-01, 5.719e-02, 2.076e-01, -1.174e-02, 1.637e-01, 6.246e-02, -1.083e-02, -1.827e-01, 4.806e-01, -5.328e-01, -5.056e-01, -1.945e-01));
	r += V4(7.507e-03, 1.724e-02, 2.526e-03, -3.503e-02);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-2.526e-01, 2.796e-01, -1.704e-01, -2.315e-02, -1.820e-01, -1.296e-01, -1.859e-01, 7.000e-02, -1.373e-01, 6.603e-02, -7.188e-02, -9.837e-02, -7.012e-02, -4.847e-03, 7.956e-02, -3.087e-01));
	r += mul(s0_1, M4(-4.124e-01, 1.019e-01, 1.652e-02, -3.757e-02, -1.797e-01, 4.005e-02, -1.764e-01, -9.578e-03, 1.029e-01, 1.708e-02, 8.588e-02, 5.864e-02, 2.723e-01, 1.194e-01, -2.380e-02, -2.998e-01));
	r += mul(s0_2, M4(-2.686e-01, 1.019e-02, 1.597e-01, -5.206e-03, -3.306e-01, -9.224e-02, 2.490e-01, 3.955e-02, -6.713e-01, -2.306e-02, -4.110e-02, -5.417e-02, 1.541e-01, -8.918e-02, 1.380e-01, -6.134e-02));
	r += mul(s0_3, M4(-1.080e-01, 3.355e-01, -3.458e-01, 8.311e-02, 1.597e-01, 1.308e-02, 2.760e-01, -4.268e-01, 2.951e-01, 7.547e-02, 7.944e-02, -3.171e-01, -1.838e-01, -6.762e-03, -4.754e-02, -1.187e-01));
	r += mul(s0_4, M4(-1.314e-01, 3.552e-01, -2.467e-02, -3.125e-02, -2.713e-01, 2.424e-01, -2.922e-01, 7.251e-02, 9.952e-02, -2.700e-02, 2.294e-01, -5.047e-02, -1.789e-01, 1.227e-01, -3.115e-01, -1.777e-01));
	r += mul(s0_5, M4(5.293e-01, 2.383e-01, 2.595e-01, 1.485e-01, 5.437e-02, -5.530e-01, -2.829e-01, -1.283e-02, 2.208e-01, 1.211e-01, -4.073e-01, -2.191e-01, -3.658e-02, 3.675e-02, 1.570e-01, 7.760e-03));
	r += mul(s0_6, M4(-6.870e-02, 2.128e-01, -2.188e-01, 2.154e-01, -3.979e-02, -2.790e-02, 1.214e-01, 1.244e-01, 2.269e-02, 8.335e-03, 6.741e-02, -7.320e-02, 3.181e-02, -1.025e-01, -8.684e-02, 1.766e-01));
	r += mul(s0_7, M4(4.102e-01, 2.766e-01, 1.369e-01, 1.390e-02, -4.546e-02, -7.069e-02, 1.929e-01, 4.017e-02, 1.592e-01, 1.651e-01, 7.526e-02, -2.236e-01, 9.428e-02, 5.770e-02, 7.378e-02, 4.215e-02));
	r += mul(s0_8, M4(1.864e-01, 1.530e-01, 1.829e-01, -2.344e-02, 3.136e-01, -5.016e-02, 3.357e-01, -5.735e-02, -1.780e-01, 1.068e-01, -1.888e-01, -1.597e-01, 1.917e-01, 8.362e-03, 4.618e-02, 1.066e-01));
	r += mul(s1_0, M4(-3.158e-01, 2.704e-01, -1.900e-01, -9.852e-02, 1.070e-02, -1.379e-01, -7.443e-02, -4.570e-03, 7.634e-02, 3.491e-03, -5.329e-02, -1.258e-01, -5.136e-01, 2.289e-01, 5.321e-01, 1.613e+00));
	r += mul(s1_1, M4(-3.272e-01, 5.165e-02, 9.302e-02, 1.341e-01, -2.920e-01, 8.834e-02, -1.820e-01, 7.611e-02, 3.290e-01, 4.806e-02, 5.365e-02, -1.882e-02, 1.218e+00, 9.677e-01, -5.259e-01, 1.148e+00));
	r += mul(s1_2, M4(-2.625e-01, -1.643e-02, 9.308e-02, 1.038e-02, -7.737e-02, -4.795e-02, 1.601e-01, -1.327e-01, -2.849e-01, -1.629e-03, 3.373e-02, -3.176e-02, 2.065e-01, -1.543e-02, 8.800e-02, -1.200e-01));
	r += mul(s1_3, M4(-5.881e-02, 3.069e-01, -3.192e-01, 1.926e-01, 1.632e-01, 1.539e-01, 9.670e-02, 2.191e-01, 1.860e-01, 8.064e-02, 8.365e-02, -3.488e-02, -3.139e-01, -1.661e-01, 1.671e-01, -3.827e-01));
	r += mul(s1_4, M4(8.545e-02, -7.969e-01, -9.374e-02, 2.722e-02, 2.387e-01, 5.522e-02, -1.619e-01, -2.979e-01, -3.418e-01, -2.705e-01, 2.979e-01, 3.618e-01, -6.157e-01, 5.797e-01, -3.081e-01, -1.953e-01));
	r += mul(s1_5, M4(3.156e-01, 1.821e-01, 2.901e-01, 1.892e-02, 1.164e+00, -5.020e-02, 1.095e+00, 6.853e-02, -2.322e-01, -9.992e-02, -7.208e-01, -1.291e-01, -2.225e-01, -2.448e-01, -8.918e-02, 1.638e-01));
	r += mul(s1_6, M4(2.680e-02, 2.884e-01, -1.926e-01, 3.279e-02, -2.855e-02, -1.125e-02, 8.587e-02, 2.618e-02, -9.699e-02, -3.362e-02, 5.582e-02, 2.149e-01, 2.198e-01, -6.283e-02, 5.361e-03, -6.807e-02));
	r += mul(s1_7, M4(2.222e-01, 2.393e-01, 1.657e-01, 1.576e-01, 3.956e-02, -4.270e-02, 2.747e-02, 8.689e-02, 5.441e-02, 8.088e-02, 8.744e-02, 1.256e-01, -6.563e-02, -1.256e-01, -6.409e-02, 3.342e-02));
	r += mul(s1_8, M4(2.153e-01, 2.013e-01, 1.472e-01, -7.638e-03, -1.577e-01, -5.647e-03, -1.473e-01, -1.188e-01, -2.193e-02, -1.841e-02, 4.407e-02, -2.577e-02, 1.030e-01, -1.311e-01, 9.828e-02, -1.876e-01));
	r += mul(s2_0, M4(-8.417e-02, -2.719e-04, -1.710e-01, 2.156e-01, 7.509e-03, -4.283e-02, -8.795e-02, 1.995e-01, 2.303e-01, 1.728e-02, -5.669e-03, -6.941e-02, 5.250e-02, 8.320e-03, -8.387e-02, -1.089e-01));
	r += mul(s2_1, M4(1.301e-01, -5.776e-02, -8.465e-04, -1.646e-01, -1.039e+00, -4.110e-01, -1.812e-01, -7.015e-02, 1.198e-01, -5.819e-02, 9.443e-02, -1.308e-02, 2.321e-01, -5.270e-03, 8.136e-02, 2.555e-02));
	r += mul(s2_2, M4(-1.525e-01, 3.626e-02, 1.032e-02, 3.269e-03, -3.026e-01, 1.608e-03, 4.228e-01, -1.112e-01, -1.115e-01, 5.702e-02, -1.077e-01, 5.217e-02, -1.963e-01, 2.875e-02, -4.307e-03, 5.973e-03));
	r += mul(s2_3, M4(1.572e-01, -2.251e-01, 2.010e-01, 7.247e-01, 3.833e-02, 4.137e-02, -1.851e-01, 1.161e-01, -6.556e-02, -2.636e-01, 2.686e-01, -7.590e-02, 3.028e-02, -5.228e-02, 1.134e-01, -8.244e-02));
	r += mul(s2_4, M4(3.129e-01, 1.519e-01, 6.231e-01, 3.249e-01, -8.176e-02, 3.429e-01, -2.452e-01, -1.883e-01, -1.434e-01, 8.569e-02, 1.474e-01, -5.451e-02, -1.599e-02, -1.332e-01, -1.399e-02, -2.310e-01));
	r += mul(s2_5, M4(2.046e-01, 2.245e-02, 2.092e-01, -3.075e-02, 5.214e-01, 2.724e-02, 3.913e-01, -1.370e-02, -1.894e-02, -9.643e-02, -3.442e-01, 4.240e-02, -1.393e-01, 8.131e-02, -1.474e-01, -4.218e-03));
	r += mul(s2_6, M4(-2.493e-02, 2.914e-02, -1.751e-01, 4.861e-01, 1.080e-01, -4.283e-02, -4.354e-03, -3.490e-02, -1.588e-02, 7.667e-02, -3.830e-03, 4.969e-01, 1.780e-02, 1.974e-01, 1.055e-02, 2.571e-01));
	r += mul(s2_7, M4(1.791e-01, 1.566e-01, 1.442e-02, -2.027e-03, 3.052e-02, -8.628e-03, -1.315e-02, -1.104e-01, -1.204e-01, 5.406e-02, 1.260e-02, -3.802e-02, 1.032e-01, -6.182e-02, 2.133e-01, 2.078e-02));
	r += mul(s2_8, M4(4.292e-02, -9.619e-03, -6.129e-02, -2.933e-02, 7.847e-04, -2.578e-02, 1.830e-02, 4.704e-02, -3.643e-01, -9.443e-02, 5.482e-02, 1.586e-01, -1.932e-01, -6.497e-02, -4.712e-01, 1.196e-02));
	r += mul(s3_0, M4(-8.654e-02, 1.912e-02, -1.294e-01, -1.307e-01, -2.377e-01, 1.321e-01, -1.690e-01, 7.791e-02, 2.442e-01, 1.620e-04, -1.279e-02, -1.959e-01, -1.191e-01, -7.859e-03, -9.460e-02, -1.533e-01));
	r += mul(s3_1, M4(-1.878e-01, -1.309e-02, 5.022e-01, -1.125e-03, -4.343e-02, -2.053e-01, 1.017e-01, 4.003e-02, -3.725e-02, -1.267e-01, 9.154e-02, 2.042e-02, -9.985e-02, -1.683e-02, 1.149e-01, 1.198e-01));
	r += mul(s3_2, M4(-2.861e-01, 9.077e-03, 6.088e-02, 3.361e-02, -1.686e-01, -1.659e-03, 3.360e-01, 4.573e-02, -1.242e-01, -1.307e-02, -1.038e-01, 7.554e-02, -5.585e-01, 3.984e-02, -1.097e-01, 8.605e-02));
	r += mul(s3_3, M4(-2.045e-01, -1.734e-01, 5.591e-02, 3.721e-01, 1.847e-02, -1.272e-01, 1.783e-04, 3.170e-01, 1.261e-01, -2.900e-01, 3.328e-01, -4.381e-01, -1.734e-02, -6.410e-02, -5.812e-02, -3.394e-01));
	r += mul(s3_4, M4(-3.395e-01, 2.057e-01, -1.213e+00, -1.550e-01, 2.345e-02, 3.549e-01, -1.648e-01, -1.747e-01, -1.319e-01, -2.129e-01, -9.909e-02, -5.984e-01, 2.235e-01, -1.019e-01, -9.185e-02, 1.177e-01));
	r += mul(s3_5, M4(1.524e-01, -6.028e-02, 1.429e-01, -3.035e-02, 4.472e-02, -4.096e-02, 1.592e-01, -1.079e-01, 2.212e-01, -1.760e-02, -3.064e-01, -2.215e-01, 1.993e-01, 2.110e-02, -4.659e-01, -6.517e-02));
	r += mul(s3_6, M4(3.531e-02, 3.364e-02, -1.025e-03, 1.424e-01, 1.749e-02, -1.081e-01, -3.684e-02, 1.043e-01, -1.614e-01, 2.303e-01, -1.421e-01, 2.233e-01, -2.323e-02, -5.969e-02, 3.288e-01, -5.757e-01));
	r += mul(s3_7, M4(4.914e-01, 1.334e-01, 1.994e-01, 3.034e-02, 7.177e-02, -1.434e-01, 1.134e-02, -1.916e-03, -4.852e-02, 9.352e-01, -7.330e-02, 1.832e-01, -2.558e-01, 5.866e-03, 1.978e-01, -3.561e-02));
	r += mul(s3_8, M4(1.870e-01, 9.573e-03, -2.301e-02, -2.048e-03, 1.446e-02, -4.310e-02, 1.226e-02, 1.300e-01, 3.369e-02, 2.788e-02, 3.136e-01, 6.947e-02, 7.889e-02, 2.208e-01, 3.681e-01, 2.884e-01));
	r += V4(-6.654e-03, -1.718e-01, 4.253e-03, 1.033e-01);
	return r;
}
void Pass3(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t3[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 4
//!DESC CuNNy-4x8C-CHROMA-NVL-conv2
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t2, t3
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t2, float2(x, y))
#define l1(x, y) O(t3, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(4.053e-02, 9.977e-02, -4.965e-02, 2.214e-02, -3.414e-02, -2.480e-02, 1.335e-01, 8.162e-02, 8.554e-02, 1.527e-01, -1.117e-01, -2.796e-03, 5.291e-02, 1.169e-01, 7.397e-02, 2.253e-01));
	r += mul(s0_1, M4(-7.723e-02, 1.120e-01, -5.813e-03, 9.216e-02, -6.466e-02, -3.129e-01, 1.820e-02, 2.272e-01, -5.011e-02, 3.603e-02, -2.343e-02, -5.709e-03, -8.619e-02, -6.366e-02, 4.370e-02, 1.288e-01));
	r += mul(s0_2, M4(4.432e-02, -1.987e-01, -9.728e-02, 1.217e-01, -2.967e-02, -3.193e-01, -7.081e-02, -1.288e-02, 6.784e-02, -1.314e-01, -2.854e-01, -1.248e-01, 2.605e-02, -2.864e-02, 2.278e-02, -6.349e-02));
	r += mul(s0_3, M4(4.027e-02, -8.569e-02, -1.162e-01, -8.517e-02, 1.273e-01, -3.257e-01, 3.107e-01, 2.151e-01, -1.995e-02, -1.121e-01, 2.296e-02, 2.764e-02, -1.102e-01, -2.606e-01, 1.046e-01, 1.923e-02));
	r += mul(s0_4, M4(5.818e-02, -1.061e-01, -1.772e-01, 3.694e-01, -3.565e-01, -3.318e-01, 4.261e-01, -1.436e-01, 5.352e-01, 1.852e-01, -3.145e-01, 3.157e-01, 1.498e-01, -2.677e-02, 1.047e-01, 2.543e-01));
	r += mul(s0_5, M4(1.842e-01, -9.888e-02, -8.956e-02, 1.206e-01, 5.450e-02, 3.258e-01, 1.169e-01, 3.287e-02, 1.500e-01, 3.203e-01, 4.277e-02, 3.185e-02, 4.164e-02, -2.907e-02, 2.207e-02, 1.567e-01));
	r += mul(s0_6, M4(8.149e-03, -6.572e-02, 5.065e-03, 1.560e-02, -2.375e-01, 1.086e-01, -3.742e-02, -5.811e-02, -2.208e-02, 3.194e-01, -4.438e-02, 3.601e-02, 5.412e-02, -9.985e-02, 1.636e-01, 5.962e-02));
	r += mul(s0_7, M4(-2.774e-01, -3.480e-01, -2.003e-01, -9.172e-03, 7.125e-01, 5.121e-01, -1.998e-01, -8.279e-02, -2.198e-01, -3.884e-01, 5.103e-02, -1.048e-01, 5.160e-01, -2.073e-01, 2.810e-02, 2.015e-01));
	r += mul(s0_8, M4(-2.182e-01, -3.111e-02, -3.241e-02, 1.011e-02, -3.569e-02, -7.340e-02, -1.139e-01, 7.998e-02, -4.131e-01, -2.484e-01, 7.327e-02, 2.451e-01, 1.311e-01, -5.621e-02, -6.458e-04, 1.076e-01));
	r += mul(s1_0, M4(3.955e-02, 4.659e-02, 2.212e-02, -5.477e-02, 3.452e-02, -4.558e-02, 4.606e-03, -3.263e-02, 5.972e-02, 3.492e-02, 2.394e-02, 9.102e-02, 4.021e-02, 1.059e-01, -1.721e-01, -1.146e-01));
	r += mul(s1_1, M4(-1.803e-01, 2.881e-01, 4.423e-01, -3.029e-01, 6.908e-03, 1.154e-01, -6.112e-02, -1.771e-01, -5.858e-02, -1.093e-01, 1.628e-01, -1.680e-01, -6.994e-02, 3.241e-01, 8.913e-02, -1.477e-01));
	r += mul(s1_2, M4(3.507e-02, 1.685e-01, -6.763e-02, -1.220e-01, 7.065e-03, -1.152e-01, -2.525e-02, -2.472e-02, 5.627e-02, -1.001e-01, 7.390e-02, -1.232e-01, 2.028e-02, 6.905e-02, -1.007e-01, -1.704e-01));
	r += mul(s1_3, M4(-9.256e-02, -7.625e-02, 9.640e-02, -7.033e-02, 1.200e-01, -1.584e-01, -2.163e-01, 2.350e-01, -8.356e-02, -3.741e-01, -8.614e-02, 1.692e-01, -1.552e-01, -1.474e-01, -1.950e-01, -3.617e-01));
	r += mul(s1_4, M4(3.249e-01, -2.859e-02, 1.587e-01, 3.508e-01, -1.892e-01, 3.035e-02, -2.065e-01, -3.449e-01, 3.115e-01, -2.111e-01, -5.995e-02, 1.952e-01, 1.852e-01, 1.168e-01, -1.231e-01, -3.010e-01));
	r += mul(s1_5, M4(2.020e-01, 8.149e-02, 3.761e-02, -1.295e-02, 1.221e-01, -1.311e-02, 5.693e-02, -1.116e-01, 1.703e-01, -1.488e-01, -1.411e-01, -1.616e-01, 6.745e-02, -5.508e-02, -1.871e-01, -7.351e-02));
	r += mul(s1_6, M4(3.162e-02, 2.114e-01, 1.166e-01, 3.084e-02, -3.315e-01, 3.697e-03, -1.107e-01, -6.607e-02, 1.139e-01, 1.259e-01, -6.227e-02, -1.077e-01, 3.430e-01, 3.721e-01, -1.684e-01, -1.836e-01));
	r += mul(s1_7, M4(-2.353e-02, 9.523e-02, 1.491e-01, 2.251e-01, 5.733e-03, -7.581e-02, -2.362e-01, -1.212e-01, -4.053e-01, -6.951e-02, -1.099e-02, -5.941e-02, 5.451e-01, 1.811e-01, -4.997e-01, -2.191e-01));
	r += mul(s1_8, M4(-3.877e-01, -2.087e-01, 3.382e-01, 2.866e-01, 3.437e-03, 9.956e-02, -1.516e-01, 8.698e-02, -1.906e-01, -1.185e-01, 1.517e-02, -8.561e-03, -9.253e-02, 6.351e-02, -8.653e-02, -1.018e-01));
	r += mul(s2_0, M4(3.542e-02, 1.384e-01, -1.352e-01, -9.812e-02, 1.248e-01, 3.251e-01, -5.460e-01, 4.222e-02, 8.442e-02, -1.112e-01, 1.655e-01, -3.779e-01, 4.378e-02, 1.082e-01, -7.109e-02, -6.787e-02));
	r += mul(s2_1, M4(-3.027e-02, -8.640e-02, -8.827e-02, -2.068e-01, 3.794e-01, -5.975e-01, -5.000e-01, -6.469e-01, 8.323e-02, -1.962e-01, 2.441e-01, -2.753e-01, -1.706e-01, -1.664e-01, 1.540e-01, -6.495e-02));
	r += mul(s2_2, M4(-2.737e-03, 1.139e-01, -5.960e-02, -1.939e-01, -2.805e-01, 2.519e-02, 1.238e-01, -2.640e-01, -5.075e-02, 1.848e-01, -4.392e-02, 1.441e-01, 1.751e-02, -1.065e-01, 8.618e-02, 1.131e-01));
	r += mul(s2_3, M4(-1.257e-01, 4.654e-02, -5.488e-01, -1.962e-01, 2.452e-01, 7.500e-02, -9.809e-02, 2.844e-01, -1.393e-02, 3.958e-01, 4.385e-01, -5.527e-01, 5.589e-03, 7.002e-02, -4.686e-03, -3.536e-02));
	r += mul(s2_4, M4(3.010e-01, 3.510e-01, -3.613e-01, -5.965e-01, -1.693e+00, -4.536e-01, 1.162e+00, -1.581e+00, 3.021e-01, 3.033e-01, -1.755e-01, 2.074e-02, -3.016e-02, -1.026e-02, -1.287e-01, 2.228e-01));
	r += mul(s2_5, M4(-1.161e-01, -6.239e-03, -1.057e-01, -2.464e-01, 9.979e-02, 3.911e-01, -8.143e-01, -4.740e-01, -4.064e-02, -6.707e-02, -3.192e-02, 8.438e-02, -5.031e-02, -2.509e-02, 4.079e-02, -1.177e-01));
	r += mul(s2_6, M4(3.441e-02, 1.362e-01, -4.382e-01, -1.418e-01, 1.752e-02, 5.830e-01, 4.505e-01, 1.777e-01, 5.713e-02, 1.729e-01, 2.910e-01, 5.940e-02, -1.681e-02, 6.145e-02, 5.900e-02, -2.238e-02));
	r += mul(s2_7, M4(5.606e-01, 1.589e-01, -2.408e-01, -1.929e-01, 7.160e-01, 6.882e-01, 2.434e-01, 2.605e-01, -2.783e-01, -7.051e-01, 2.017e-01, 1.229e-01, 2.915e-01, 1.376e-01, -7.314e-02, -1.043e-01));
	r += mul(s2_8, M4(1.063e-01, 2.072e-01, -1.460e-01, -9.765e-02, 5.092e-02, 9.979e-02, -3.735e-02, 1.454e-01, 1.569e-02, -5.149e-02, -4.326e-02, 3.865e-02, -1.032e-01, 1.433e-01, -1.304e-01, -4.700e-02));
	r += mul(s3_0, M4(6.472e-02, 3.044e-02, -2.534e-02, 6.200e-02, 4.811e-02, -3.223e-02, -3.774e-02, 1.757e-02, -1.116e-01, -2.293e-01, -1.182e-02, 1.534e-01, 2.564e-02, -7.230e-02, -4.130e-02, -5.099e-02));
	r += mul(s3_1, M4(-6.664e-02, -1.997e-01, 1.782e-01, 1.752e-01, 1.236e-02, -1.806e-01, 5.357e-02, 7.100e-04, 5.080e-03, -3.586e-01, 7.342e-02, 4.974e-02, -1.784e-01, -3.749e-01, -1.649e-02, -2.268e-02));
	r += mul(s3_2, M4(3.894e-02, -1.976e-02, -6.467e-04, -1.467e-02, -8.521e-02, 1.751e-01, -2.396e-02, 7.582e-02, -1.089e-02, -2.192e-01, -1.525e-02, -3.046e-02, 1.737e-01, 2.804e-01, 1.958e-01, -2.514e-01));
	r += mul(s3_3, M4(-1.690e-01, -4.810e-02, 3.338e-01, 1.148e-03, -1.120e-01, 7.693e-02, 2.870e-03, 9.895e-03, 1.851e-01, -3.606e-02, -2.691e-02, -4.055e-01, -2.103e-02, -1.469e-01, 2.383e-02, 4.202e-02));
	r += mul(s3_4, M4(2.587e-01, 6.805e-01, 3.923e-01, 1.269e-01, -4.623e-03, -9.428e-03, 1.821e-01, -1.358e-01, 2.517e-01, 1.363e-01, -2.960e-01, -2.762e-01, -1.013e-01, 1.771e-01, 2.593e-01, 2.597e-02));
	r += mul(s3_5, M4(-7.882e-02, -2.457e-01, -5.623e-02, 1.768e-01, 9.912e-02, -1.053e-01, -1.311e-01, -1.141e-02, 7.823e-02, 2.279e-01, 1.349e-01, -1.173e-01, -2.733e-01, 6.310e-01, 9.595e-02, -4.694e-01));
	r += mul(s3_6, M4(-9.055e-02, 4.656e-01, 2.690e-01, 1.574e-01, 2.891e-02, 1.480e-01, 4.778e-02, 9.870e-03, 1.161e-01, -1.419e-02, -2.361e-01, -1.822e-01, -1.382e-01, 2.817e-02, -8.306e-02, 4.704e-02));
	r += mul(s3_7, M4(3.627e-01, -2.316e-01, 2.561e-01, 2.170e-01, 1.296e-01, -1.125e-01, -1.156e-01, -2.302e-02, -2.365e-01, 2.999e-01, -3.214e-01, -2.271e-01, 2.824e-01, 1.694e-01, -6.508e-02, -1.818e-01));
	r += mul(s3_8, M4(7.123e-02, -7.777e-02, 2.455e-01, -9.312e-03, -1.071e-01, 2.174e-02, 3.093e-02, 5.408e-02, -5.801e-02, 1.165e-01, -1.082e-01, -4.085e-02, 5.367e-02, 1.432e+00, 2.874e-01, -2.269e-01));
	r += V4(2.150e-03, -3.787e-02, -9.447e-03, 1.642e-02);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(7.877e-02, -1.174e-02, -3.590e-02, -1.065e-02, 2.223e-01, 1.457e-01, -5.275e-02, 2.585e-01, -1.494e-01, 5.206e-02, -1.006e-01, 7.917e-02, -7.623e-02, -1.322e-01, 1.900e-01, -5.080e-02));
	r += mul(s0_1, M4(-1.352e-01, -1.257e-01, 8.765e-02, -8.918e-02, 1.029e-01, 1.533e-01, 1.296e-01, -5.883e-01, -1.094e-01, 3.255e-01, 4.501e-01, 2.809e-01, -1.860e-01, 1.617e-01, 2.700e-01, 2.399e-02));
	r += mul(s0_2, M4(6.060e-02, 5.622e-03, 4.089e-02, -1.066e-01, 1.546e-01, -6.574e-03, -2.830e-02, -1.747e-01, 1.370e-01, 1.934e-01, -2.700e-02, -2.214e-01, 1.030e-01, -9.694e-03, 1.732e-02, 4.628e-02));
	r += mul(s0_3, M4(-1.059e-02, -4.702e-02, -4.179e-02, -1.670e-02, 1.979e-01, 7.731e-02, 4.581e-01, 5.675e-03, 1.242e-01, 2.025e-01, 1.552e-01, -1.238e-01, -4.543e-02, 3.602e-02, 2.046e-01, -7.352e-02));
	r += mul(s0_4, M4(3.858e-01, 1.901e-03, 2.651e-01, 2.712e-02, -3.601e-01, 2.384e-01, 1.557e-01, 3.267e-01, 1.147e-01, 4.988e-03, -3.508e-02, -3.355e-01, -2.560e-01, 3.194e-01, 2.216e-01, 2.590e-01));
	r += mul(s0_5, M4(1.118e-02, -1.159e-01, -1.046e-01, -1.489e-01, -1.623e-01, -1.023e-01, 1.061e-02, 2.810e-01, 3.709e-02, 6.716e-03, -2.808e-02, -6.074e-02, 2.289e-01, 5.307e-02, 7.833e-02, 1.466e-01));
	r += mul(s0_6, M4(4.232e-02, -7.150e-02, 5.291e-02, 2.542e-02, -2.831e-02, 1.220e-01, 1.839e-01, -2.692e-02, -8.781e-02, 7.162e-02, -2.830e-02, 1.362e-02, -6.021e-02, -9.929e-02, 2.703e-01, -3.291e-02));
	r += mul(s0_7, M4(-2.996e-01, -6.320e-02, 1.916e-01, 4.360e-02, 3.389e-03, -3.894e-01, -3.006e-01, -3.731e-02, -7.975e-02, -6.637e-02, -1.203e-01, 1.622e-01, 9.635e-02, 6.366e-02, 3.157e-01, -4.946e-02));
	r += mul(s0_8, M4(-4.929e-02, -4.100e-02, 1.174e-01, -2.447e-02, 2.328e-02, 1.072e-01, -2.234e-02, -5.640e-02, -4.020e-01, -2.378e-02, 6.763e-02, -8.056e-02, -1.323e-02, 6.048e-02, -2.519e-02, 3.425e-02));
	r += mul(s1_0, M4(9.574e-03, 3.433e-02, -4.528e-02, -9.179e-02, 2.026e-01, 2.332e-01, -3.508e-02, 3.906e-01, -1.261e-02, -2.541e-02, 1.517e-03, 1.389e-01, -7.930e-02, -9.566e-02, -8.960e-02, -1.811e-01));
	r += mul(s1_1, M4(-3.138e-02, 4.813e-02, -1.119e-01, 3.166e-01, -9.155e-02, -6.320e-02, -1.227e-01, -1.897e-01, 1.106e-01, 2.252e-01, 4.027e-01, 5.628e-02, 3.100e-02, 2.940e-02, 4.478e-02, 4.713e-01));
	r += mul(s1_2, M4(1.412e-03, 1.207e-01, 3.268e-03, 5.454e-02, 2.220e-01, 5.994e-02, -1.423e-02, -1.154e-01, 2.654e-01, -6.851e-02, 4.180e-04, -1.155e-01, 8.040e-02, -6.112e-02, -1.938e-01, 9.022e-02));
	r += mul(s1_3, M4(-1.196e-01, 6.682e-02, -1.831e-01, 5.492e-02, 2.210e-01, 6.242e-02, -6.498e-02, -5.333e-02, 1.269e-01, -1.130e-01, -9.926e-02, -1.417e-01, 1.547e-02, -6.614e-02, -8.681e-01, 3.306e-01));
	r += mul(s1_4, M4(4.554e-02, -2.553e-02, -5.334e-02, 4.858e-02, -4.443e-01, 2.593e-01, -1.514e-01, -1.148e-01, 1.357e-01, -1.848e-01, -1.650e-01, -3.968e-01, -1.621e-01, 2.971e-02, -2.134e-01, 4.291e-01));
	r += mul(s1_5, M4(-1.258e-02, 1.362e-01, 5.012e-02, -2.341e-01, 1.065e-02, 5.261e-02, 6.290e-02, 1.327e-01, 1.975e-01, -2.625e-01, -2.183e-01, -2.802e-01, 3.916e-01, -3.757e-02, -1.275e-01, -7.134e-02));
	r += mul(s1_6, M4(7.207e-02, 2.842e-02, 8.246e-03, 8.821e-02, -2.902e-01, 1.431e-01, -1.068e-01, 7.307e-02, -6.133e-03, -1.301e-01, -7.293e-02, 1.513e-02, 1.120e-01, -1.433e-01, -2.470e-01, -5.035e-02));
	r += mul(s1_7, M4(-2.415e-01, 1.587e-01, 4.431e-03, 4.362e-03, -3.701e-01, -2.353e-02, -7.271e-02, -1.909e-01, -2.348e-01, -1.555e-01, 7.680e-02, 1.189e-02, 1.498e-01, -9.185e-02, -1.449e-01, 3.767e-03));
	r += mul(s1_8, M4(-3.045e-01, 1.824e-01, 1.592e-01, -9.589e-02, 1.955e-03, 1.051e-01, 1.593e-01, 1.523e-01, -8.865e-02, -9.576e-02, 1.026e-01, 1.158e-02, 3.328e-02, -2.682e-02, -6.462e-02, -5.580e-02));
	r += mul(s2_0, M4(-5.316e-02, -4.438e-02, -2.846e-01, 1.276e-01, -5.971e-01, -5.453e-01, -2.977e-01, -4.921e-01, -4.011e-01, -1.578e-01, 1.478e-01, -2.751e-01, -1.545e-02, -6.484e-02, -1.338e-01, -3.059e-02));
	r += mul(s2_1, M4(1.417e-01, 2.329e-01, -6.539e-03, 1.502e-02, -4.656e-01, -1.670e-01, -3.566e-01, -2.826e+00, -2.300e-01, -2.033e-01, -7.434e-02, -9.547e-02, -1.450e-01, 2.564e-02, 2.115e-01, 1.265e-01));
	r += mul(s2_2, M4(-1.583e-01, -6.554e-02, 1.248e-02, 8.886e-02, -2.435e-01, 1.177e-02, -1.282e-01, -5.791e-01, 2.670e-02, -5.655e-02, 8.178e-02, 1.509e-01, 1.722e-01, 4.032e-02, 5.994e-03, -1.132e-01));
	r += mul(s2_3, M4(1.763e-01, -3.257e-02, -1.035e-01, 3.383e-01, -1.606e-01, -2.322e-01, 7.952e-01, -7.612e-01, -4.318e-02, 1.149e-01, -9.902e-01, 1.836e-01, -1.815e-01, 3.344e-02, 8.866e-02, -3.072e-02));
	r += mul(s2_4, M4(2.608e-01, -2.524e-01, -1.198e+00, 4.948e-01, -1.550e+00, 4.981e+00, 1.729e+00, -4.575e-01, 4.064e-02, -3.858e-01, -4.154e-01, -5.332e-03, 2.655e-02, -1.380e-01, -1.820e-01, 5.935e-02));
	r += mul(s2_5, M4(-8.570e-02, 2.629e-02, -8.845e-02, -7.314e-02, 3.187e-01, 1.141e+00, 1.165e-01, -5.716e-01, -3.079e-02, 4.070e-02, -4.947e-03, 9.929e-02, 4.261e-02, 2.905e-01, 1.921e-01, 3.423e-03));
	r += mul(s2_6, M4(2.380e-01, 2.458e-01, -4.251e-01, -2.552e-02, 4.995e-01, -4.479e-01, -2.909e-01, -2.280e-01, 4.405e-01, 8.166e-02, -6.640e-02, -6.502e-02, 1.413e-01, 6.533e-03, -3.944e-02, 5.997e-02));
	r += mul(s2_7, M4(3.623e-01, -2.127e-01, -3.075e-01, -1.058e-02, 8.503e-01, 4.061e-01, -3.233e-01, -5.932e-01, -5.920e-02, -1.733e-01, 3.534e-02, -6.030e-04, -1.802e-01, -1.072e-01, -1.652e-01, -3.086e-02));
	r += mul(s2_8, M4(4.146e-02, 9.423e-02, -8.862e-02, 6.012e-02, 3.024e-01, 1.551e-01, -1.105e-01, -3.240e-01, 6.864e-02, -1.128e-01, 1.384e-02, 4.617e-03, 9.684e-02, -1.192e-01, -1.207e-01, 5.942e-02));
	r += mul(s3_0, M4(-8.292e-02, -1.392e-01, 5.464e-02, -1.503e-01, -3.011e-02, -8.886e-02, 1.095e-02, 2.858e-02, 6.212e-02, 1.819e-01, 2.323e-01, 3.283e-01, -3.348e-02, -6.837e-02, -1.209e-01, 1.293e-02));
	r += mul(s3_1, M4(-4.711e-02, 1.011e-01, 1.557e-01, -7.099e-02, -4.847e-02, -1.778e-03, 2.067e-02, -1.408e-02, 2.946e-01, 2.180e-01, 1.559e-01, 2.370e-01, -2.960e-01, 4.623e-02, 1.197e-01, -1.937e-01));
	r += mul(s3_2, M4(-1.169e-01, -3.678e-02, 3.829e-02, -1.727e-02, -1.354e-01, 1.006e-01, 9.949e-02, 8.003e-02, 2.211e-01, -6.949e-02, -1.368e-01, -3.537e-03, -3.479e-01, -5.935e-02, -4.414e-02, -8.366e-01));
	r += mul(s3_3, M4(-2.774e-02, 1.542e-01, 7.372e-01, -2.280e-01, 1.188e-01, 8.461e-03, 6.233e-02, -4.225e-02, -7.269e-01, 8.000e-01, 1.125e-01, 3.147e-01, 1.370e-01, 3.493e-02, 1.647e-01, 3.559e-02));
	r += mul(s3_4, M4(9.448e-02, -1.869e-01, -2.075e-01, 2.435e-01, -5.694e-02, 1.215e-01, -1.241e-01, -4.246e-02, 4.973e-01, 4.971e-01, 2.080e-01, -1.735e-01, 2.836e-01, -3.348e-02, -1.152e-01, -5.122e-02));
	r += mul(s3_5, M4(-1.537e-01, 9.536e-03, 1.365e-01, -1.165e-01, 1.276e-01, -8.512e-02, -2.683e-02, 3.042e-03, 2.218e-01, 4.971e-02, 3.973e-02, 1.867e-01, -4.884e-01, -1.802e-01, 4.077e-02, -1.336e-01));
	r += mul(s3_6, M4(8.426e-02, 1.158e-04, 2.879e-01, 4.907e-02, 2.128e-02, -1.172e-02, 3.630e-02, 4.441e-02, -3.099e-01, 2.166e-02, 4.273e-02, -5.486e-02, 1.524e-01, 1.320e-01, 7.089e-02, 3.584e-02));
	r += mul(s3_7, M4(2.322e-01, -1.164e-01, -6.221e-02, 6.958e-02, 8.522e-02, -5.750e-02, -9.873e-02, -2.178e-02, -4.850e-02, -9.907e-03, 7.344e-02, -4.169e-02, 6.060e-02, -2.059e-01, 1.660e-01, -1.683e-02));
	r += mul(s3_8, M4(-1.396e-02, 8.582e-02, 3.768e-02, -4.012e-02, -7.678e-02, 7.900e-03, 3.349e-02, -3.357e-02, 6.468e-04, -1.238e-01, -1.422e-01, 1.479e-02, 2.017e-01, 3.917e-01, 9.934e-02, 2.064e-01));
	r += V4(2.393e-03, -7.820e-03, 1.382e-02, 6.585e-03);
	return r;
}
void Pass4(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 5
//!DESC CuNNy-4x8C-CHROMA-NVL-conv3
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2, t3
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-7.931e-02, -1.315e-01, -9.917e-02, 1.739e-01, 4.083e-02, -4.917e-02, -5.120e-02, -2.851e-02, 1.994e-01, 3.622e-02, 7.126e-02, -1.566e-01, -1.141e-01, 1.309e-04, -8.818e-02, 9.229e-02));
	r += mul(s0_1, M4(-7.822e-02, 7.857e-02, -2.005e-01, 2.874e-01, -5.313e-02, 1.737e-02, 3.686e-01, -2.268e-01, 3.506e-01, -2.551e-01, -9.805e-02, -5.314e-02, 5.243e-02, -1.474e-02, -2.029e-01, 6.462e-02));
	r += mul(s0_2, M4(4.610e-02, 1.597e-01, -3.122e-02, 2.062e-02, -5.641e-02, 1.154e-01, 3.849e-01, 2.336e-01, -6.921e-03, -2.946e-02, -1.265e-01, -1.194e-01, -5.673e-02, -3.174e-02, 7.630e-02, -4.134e-02));
	r += mul(s0_3, M4(-3.761e-02, -1.868e-02, 4.531e-02, 1.710e-01, -3.388e-01, 2.156e-01, -2.961e-01, -2.792e-01, -7.596e-02, -7.851e-02, -6.648e-02, -3.291e-01, 2.168e-02, -1.217e-01, 9.157e-02, 2.393e-01));
	r += mul(s0_4, M4(-8.900e-02, -1.991e-01, -1.621e-01, 4.065e-01, -5.781e-01, -1.059e-01, -6.866e-01, 3.642e-01, -3.822e-01, -7.104e-01, 3.166e-01, -3.439e-01, -1.437e-01, 1.128e-01, 3.464e-01, -9.226e-02));
	r += mul(s0_5, M4(-4.916e-02, -2.263e-01, -4.286e-02, 1.415e-02, -3.369e-01, 7.005e-01, -1.703e-01, -2.207e-01, 8.109e-02, -1.683e-02, 9.502e-02, -1.909e-01, -1.083e-01, 2.136e-01, -2.459e-01, -6.681e-02));
	r += mul(s0_6, M4(1.698e-02, -3.281e-02, -8.536e-02, 3.128e-04, 1.333e-01, 2.494e-01, 3.486e-01, 1.468e-01, 2.742e-02, -1.880e-02, -3.607e-02, -5.356e-02, -3.763e-02, -8.861e-02, 6.213e-02, -2.641e-02));
	r += mul(s0_7, M4(8.918e-02, 3.551e-02, -1.665e-01, 9.842e-02, 2.529e-01, 5.833e-01, 1.597e-01, -2.274e-02, 1.031e-01, 1.873e-02, -1.655e-02, 5.497e-02, 7.055e-02, 1.771e-01, 3.235e-01, -1.145e-01));
	r += mul(s0_8, M4(7.209e-02, -3.733e-03, -1.994e-01, -2.123e-02, 6.380e-02, -2.759e-01, 5.884e-02, -2.916e-02, -9.557e-02, -5.265e-01, -3.443e-02, -6.399e-03, 5.604e-02, -7.537e-02, -3.690e-03, -6.864e-02));
	r += mul(s1_0, M4(1.906e-01, 1.063e-01, 2.351e-01, 1.271e-01, -4.937e-02, -1.511e-02, -4.148e-02, 5.832e-03, -3.319e-02, -9.455e-02, -9.024e-02, 1.104e-01, -1.356e-01, -3.731e-03, 3.261e-02, -6.333e-02));
	r += mul(s1_1, M4(4.368e-01, -1.193e-01, -6.208e-02, 2.628e-02, -1.324e-01, 5.906e-02, -2.153e-01, 1.100e-01, -5.479e-02, 3.924e-02, 7.091e-02, -3.815e-02, -1.015e-01, 7.251e-02, -2.085e-01, 3.193e-01));
	r += mul(s1_2, M4(2.397e-01, -2.077e-03, 1.159e-01, -1.371e-01, 7.039e-03, 8.990e-02, 3.679e-02, 3.308e-02, 3.334e-02, 9.746e-04, -3.095e-02, 8.492e-02, -8.183e-02, 1.325e-01, -1.596e-01, -5.871e-02));
	r += mul(s1_3, M4(-7.666e-02, 8.142e-02, -1.001e-01, -7.965e-03, -2.579e-02, -4.959e-02, 5.451e-03, 6.849e-02, -7.596e-05, 9.119e-03, -8.790e-02, -2.570e-01, -2.362e-02, 1.039e-01, -1.758e-01, 2.744e-01));
	r += mul(s1_4, M4(-1.962e-01, -5.241e-01, 2.860e-01, -3.798e-01, -5.408e-03, -5.955e-03, -2.012e-02, -7.076e-03, -1.000e-01, -1.323e-02, 4.549e-02, 3.456e-01, -6.866e-01, 7.202e-02, -5.769e-01, -5.920e-03));
	r += mul(s1_5, M4(7.376e-02, -1.240e-01, 1.655e-01, -1.042e-01, -3.597e-02, 4.646e-02, -4.155e-02, -9.562e-04, -6.494e-02, -2.439e-02, -1.057e-01, 6.967e-02, 1.051e-02, 8.233e-03, 2.637e-01, 1.075e-01));
	r += mul(s1_6, M4(1.554e-02, -7.681e-02, 6.599e-03, -1.781e-01, 3.198e-02, 3.268e-03, 4.777e-02, 3.089e-02, 4.428e-02, 6.334e-02, -2.750e-02, -6.604e-02, 7.457e-02, -1.642e-02, -2.810e-02, -9.728e-03));
	r += mul(s1_7, M4(3.738e-02, -1.677e-01, 6.861e-02, -8.322e-02, 2.725e-02, 1.317e-01, -2.327e-02, -4.199e-02, 1.420e-01, 1.540e-01, -3.131e-01, 2.925e-01, 8.064e-02, 1.206e-03, -3.104e-01, -7.349e-02));
	r += mul(s1_8, M4(-2.956e-02, 1.005e-01, 7.051e-02, 1.798e-02, 1.124e-02, -7.692e-02, -3.538e-04, -9.609e-04, 4.751e-02, -4.239e-02, -1.616e-01, -2.722e-01, -2.086e-02, -4.091e-03, -4.465e-01, -1.218e-01));
	r += mul(s2_0, M4(7.059e-03, 7.299e-02, -4.228e-02, -1.402e-02, 2.106e-02, -3.024e-02, 5.481e-02, 9.807e-02, 1.219e-01, 4.308e-02, 1.734e-01, -2.195e-02, 1.657e-03, -3.024e-02, 2.504e-02, 1.857e-03));
	r += mul(s2_1, M4(-1.523e-01, 8.302e-02, -6.179e-02, 6.618e-02, 1.826e-01, 1.402e-01, -1.149e-02, -7.020e-03, 7.839e-02, 6.129e-02, 7.942e-02, -9.011e-02, -8.662e-02, 2.636e-02, 5.850e-02, -4.917e-02));
	r += mul(s2_2, M4(-2.623e-02, -3.321e-02, 1.197e-01, -6.270e-02, 1.020e-01, -2.960e-02, -1.156e-01, 5.693e-02, 1.690e-02, -4.302e-02, -6.968e-02, -2.368e-02, -3.761e-02, 8.732e-03, 5.992e-02, -2.136e-02));
	r += mul(s2_3, M4(7.782e-02, -5.465e-02, -7.019e-02, 2.335e-02, 2.404e-01, 1.813e-01, 1.051e-01, -5.072e-02, 1.132e-02, 1.290e-01, -2.004e-01, -1.504e-01, -1.752e-02, 2.234e-01, 1.401e-02, -3.281e-01));
	r += mul(s2_4, M4(3.452e-01, -1.131e-01, 8.454e-02, -4.619e-01, 7.681e-01, -3.045e-01, 7.423e-01, -4.507e-01, 1.772e-02, -2.183e-01, -2.270e-01, -4.391e-01, -2.391e-01, -3.006e-01, -1.195e-01, -1.079e-01));
	r += mul(s2_5, M4(3.137e-01, 2.507e-01, -2.144e-01, -9.609e-02, 2.923e-01, -1.522e-01, 1.649e-01, 1.815e-01, 2.231e-01, -2.405e-01, 4.617e-02, -4.478e-02, -9.372e-02, -1.576e-01, -4.705e-03, -1.828e-02));
	r += mul(s2_6, M4(-2.969e-02, 7.150e-02, 2.992e-02, 2.241e-02, 6.344e-02, -1.069e-02, 4.798e-02, 1.038e-02, 3.351e-02, -5.877e-02, -3.823e-03, -2.394e-01, 4.727e-02, 2.007e-01, 1.043e-01, -3.027e-01));
	r += mul(s2_7, M4(-1.537e-01, -1.850e-01, 2.073e-01, 6.866e-04, -1.588e-02, -3.527e-02, -8.028e-02, 1.374e-01, -1.841e-01, -2.944e-01, 3.406e-02, -6.509e-02, -1.037e-01, 7.955e-02, -7.015e-03, -3.099e-01));
	r += mul(s2_8, M4(-1.130e-01, 1.543e-01, 2.191e-01, -6.073e-02, 5.698e-02, 1.817e-01, -1.351e-01, 5.889e-03, -6.600e-02, -2.619e-01, 1.744e-01, 5.129e-02, -1.039e-01, 1.418e-01, -1.010e-01, 6.875e-02));
	r += mul(s3_0, M4(-1.282e-02, 7.320e-02, -7.152e-02, 6.339e-02, -1.453e-01, 7.207e-02, -1.087e-01, -5.798e-02, 7.222e-02, 8.500e-04, 1.001e-03, -5.383e-02, 1.139e-01, 6.323e-02, 1.035e-01, 1.765e-01));
	r += mul(s3_1, M4(-2.164e-02, 1.051e-02, 1.465e-02, -1.648e-01, -2.880e-01, 2.515e-02, -3.094e-01, 1.493e-01, 1.444e-01, -1.319e-02, -4.901e-03, -2.787e-01, 1.522e-01, 8.654e-02, 1.052e-01, -3.051e-02));
	r += mul(s3_2, M4(-1.391e-01, -1.192e-02, -1.067e-01, -5.812e-02, -1.144e-01, -1.302e-02, 1.022e-02, -8.125e-02, -3.782e-02, -1.831e-01, 5.590e-02, 4.646e-03, 5.231e-02, -3.045e-02, 2.811e-02, 5.975e-03));
	r += mul(s3_3, M4(7.728e-02, -2.251e-01, 3.050e-01, 1.746e-01, 6.956e-02, -5.566e-02, 5.684e-02, 1.461e-01, -1.902e-02, -6.909e-02, -2.468e-02, 1.205e-01, 3.274e-02, -3.093e-02, -6.915e-02, -9.011e-02));
	r += mul(s3_4, M4(1.852e-02, -9.922e-03, -3.929e-01, 6.117e-02, 3.700e-01, 1.486e-01, 2.063e-01, -8.894e-03, -2.450e-02, 5.742e-03, 3.049e-02, -3.950e-01, 1.942e-02, -4.667e-02, 1.154e-01, -2.123e-01));
	r += mul(s3_5, M4(1.181e-01, 6.040e-02, -2.193e-01, -9.504e-02, 8.229e-02, -6.418e-02, 1.170e-01, -2.017e-01, 3.050e-02, -1.536e-01, -3.232e-01, 3.143e-02, 1.453e-01, -1.654e-01, -1.442e-01, 1.290e-02));
	r += mul(s3_6, M4(2.623e-02, 2.354e-02, -1.108e-01, 8.805e-02, -8.375e-02, -4.605e-04, -7.146e-02, 4.764e-02, 3.853e-02, -1.086e-01, -2.850e-02, -2.562e-02, 1.508e-01, 1.241e-02, 2.737e-02, -2.350e-01));
	r += mul(s3_7, M4(-1.942e-01, 1.226e-01, 1.889e-01, -1.397e-02, -1.643e-01, -9.234e-02, 1.112e-01, -8.178e-02, -8.705e-02, -1.700e-01, -1.460e-01, -1.744e-01, -1.323e-01, -3.803e-01, 1.405e-01, -1.484e-01));
	r += mul(s3_8, M4(-1.568e-01, 3.790e-02, 2.327e-01, -1.140e-01, -1.194e-01, 1.129e-01, -7.092e-02, 3.474e-02, -5.219e-02, 1.043e-01, 1.263e-01, 8.075e-02, -1.782e-01, 2.471e-01, 1.382e-01, 5.012e-02));
	r += V4(8.666e-03, 1.217e-04, -5.789e-04, 2.905e-03);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(1.874e-02, 8.054e-02, 2.226e-04, 1.919e-01, -1.215e-01, 2.701e-02, -1.284e-01, -1.796e-01, 1.276e-01, 3.725e-02, 9.439e-02, 6.431e-02, -7.761e-02, -9.161e-02, -6.279e-02, -6.100e-02));
	r += mul(s0_1, M4(-2.842e-01, -5.840e-01, 3.896e-01, 8.195e-02, 1.388e-01, 3.041e-01, -2.722e-01, 7.862e-02, 2.871e-01, 4.533e-01, 1.000e-01, 2.148e-01, 2.901e-02, -8.202e-02, 1.101e-01, -6.831e-03));
	r += mul(s0_2, M4(-1.793e-01, -1.983e-02, 1.451e-01, -7.863e-02, -3.075e-01, 2.021e-01, -1.850e-01, -6.370e-03, -6.564e-02, -3.700e-01, 5.603e-03, -6.279e-04, -9.022e-02, -1.175e-01, 7.118e-03, 1.744e-04));
	r += mul(s0_3, M4(3.164e-02, 2.227e-02, -1.934e-01, 6.647e-02, -4.139e-01, -1.262e-01, 5.967e-02, 1.320e-01, 4.047e-02, 5.280e-02, 2.822e-01, -1.783e-01, -1.361e-02, 7.934e-02, -1.724e-01, -1.143e-01));
	r += mul(s0_4, M4(4.954e-01, -3.559e-02, 2.540e-01, 8.320e-02, -5.445e-01, -2.196e-01, -4.783e-01, 2.774e-01, -1.387e-01, -3.037e-01, -3.481e-01, 5.513e-01, 2.048e-01, 5.139e-01, 2.899e-01, 1.514e-01));
	r += mul(s0_5, M4(4.842e-03, -8.903e-02, 1.606e-01, 1.687e-01, -2.720e-01, 1.214e-01, -2.945e-01, -3.291e-01, 5.334e-02, 4.428e-02, -8.777e-02, 8.988e-02, -2.468e-02, -2.937e-01, 4.082e-02, -1.909e-01));
	r += mul(s0_6, M4(1.155e-01, 6.716e-03, -2.869e-02, 6.076e-02, 7.761e-02, 1.716e-01, -3.504e-01, -2.552e-01, -3.121e-02, -2.105e-01, -1.479e-02, 6.260e-02, -1.029e-01, 2.203e-02, -9.096e-03, -1.563e-01));
	r += mul(s0_7, M4(1.629e-02, -5.708e-02, -3.630e-02, -5.338e-02, 1.645e-01, -2.507e-01, -3.383e-01, -4.894e-01, -4.719e-02, 7.368e-02, 1.125e-01, 3.800e-03, 2.816e-02, 6.913e-02, -1.833e-01, -2.033e-01));
	r += mul(s0_8, M4(4.408e-02, -1.072e-01, 1.188e-01, -4.732e-02, 1.840e-01, 2.156e-02, -5.708e-02, 3.562e-02, 5.038e-02, -4.226e-02, 2.012e-01, 3.599e-01, 6.555e-02, -5.250e-02, -1.156e-01, 1.461e-02));
	r += mul(s1_0, M4(7.617e-02, -1.127e-02, 6.099e-02, 3.894e-02, -5.025e-02, 4.300e-04, -3.224e-02, 1.032e-02, -5.587e-02, -1.545e-01, 7.600e-03, 1.807e-02, -5.367e-02, -5.290e-03, -1.595e-01, -5.663e-02));
	r += mul(s1_1, M4(2.008e-01, -9.757e-03, 6.688e-02, -4.346e-01, -8.421e-02, -1.343e-01, -1.120e-02, 1.051e-01, 8.376e-02, -3.073e-02, -3.061e-03, 8.114e-02, 1.838e-02, -1.707e-01, 2.242e-01, 9.761e-02));
	r += mul(s1_2, M4(-3.210e-02, 1.580e-01, -1.065e-01, 7.022e-02, -2.574e-02, -6.360e-02, 3.312e-02, -7.194e-02, -5.646e-03, -3.284e-02, 1.508e-01, -5.425e-02, -1.304e-01, -2.995e-01, 1.091e-01, -1.548e-01));
	r += mul(s1_3, M4(-9.752e-02, -1.983e-01, 2.222e-01, -1.359e-01, -2.702e-02, 5.073e-02, -5.860e-02, -1.974e-02, 1.165e-02, -2.954e-02, 1.126e-01, -3.612e-02, 1.294e-02, -3.202e-02, -9.193e-02, 1.148e-01));
	r += mul(s1_4, M4(-1.224e-01, -1.685e-02, 3.445e-01, 3.931e-01, 3.915e-02, -8.033e-02, -1.223e-01, 2.423e-02, -1.336e-01, -1.200e-01, 3.153e-02, 1.086e-01, -5.563e-02, 1.611e-01, 1.598e-01, 1.327e-01));
	r += mul(s1_5, M4(-2.330e-02, 2.177e-01, -2.036e-01, 1.907e-01, 6.660e-03, 1.115e-03, -3.931e-02, 1.261e-02, 2.678e-02, -1.509e-01, 9.887e-02, -1.695e-02, 7.758e-02, -3.582e-02, 2.023e-01, -7.981e-02));
	r += mul(s1_6, M4(-2.769e-02, -6.883e-02, 9.930e-02, -5.373e-02, -2.040e-02, -6.376e-03, -4.560e-02, -1.274e-02, 1.100e-01, 4.076e-02, -3.436e-02, 1.186e-01, 1.262e-01, 9.406e-02, -2.958e-01, -1.197e-01));
	r += mul(s1_7, M4(-2.494e-01, -1.460e-01, 5.689e-02, 1.007e-01, 5.109e-02, 1.497e-02, -2.793e-02, -2.440e-02, 7.586e-02, -2.355e-02, 1.101e-01, -1.161e-01, 3.057e-01, 6.424e-02, -2.075e-01, -1.692e-01));
	r += mul(s1_8, M4(-1.002e-01, 9.201e-02, -6.220e-03, -5.484e-02, 1.562e-02, -2.837e-02, 1.598e-02, 1.629e-02, 5.022e-02, -2.331e-01, 1.124e-01, -6.398e-02, 2.281e-01, -6.823e-02, -3.930e-02, 8.719e-02));
	r += mul(s2_0, M4(1.106e-02, 1.637e-01, -4.368e-02, 5.995e-02, -6.210e-02, -7.057e-02, -1.835e-01, -1.179e-01, 1.881e-02, 4.840e-02, 4.034e-02, 3.635e-02, -3.056e-02, -6.728e-02, 7.370e-02, 1.643e-02));
	r += mul(s2_1, M4(-1.588e-01, 3.952e-02, -3.354e-01, -5.359e-02, 2.019e-01, 1.299e-01, -1.916e-01, -1.042e-02, 2.188e-02, 2.711e-01, -1.106e-01, -1.149e-01, 2.731e-02, 2.762e-02, -5.734e-03, 8.398e-02));
	r += mul(s2_2, M4(-1.371e-02, -2.031e-01, -1.607e-01, 7.068e-02, -7.795e-02, -1.600e-01, 2.925e-01, -4.141e-03, 1.143e-01, 1.056e-01, -1.494e-01, 1.434e-02, -6.638e-03, 9.608e-02, 7.093e-02, 5.778e-02));
	r += mul(s2_3, M4(1.520e-01, 1.047e-01, -1.973e-02, 1.156e-01, -6.047e-02, -1.244e-01, -9.626e-04, -1.489e-01, 7.114e-02, -7.245e-02, 1.521e-01, -4.200e-02, -5.578e-03, -2.706e-02, 7.677e-02, -9.186e-02));
	r += mul(s2_4, M4(4.014e-01, 2.313e-01, -1.839e-01, 1.629e-01, -1.940e-01, 2.695e-01, -4.322e-01, -2.546e-01, -1.005e-01, -1.663e-01, -9.666e-02, 9.745e-02, -2.045e-01, 1.681e-01, -3.134e-01, 1.583e-01));
	r += mul(s2_5, M4(2.220e-01, -1.794e-01, -1.409e-01, -1.688e-01, 1.960e-02, 4.209e-01, 8.128e-02, 9.111e-02, -3.468e-02, 3.121e-01, -3.383e-01, 2.020e-01, 8.167e-02, 3.819e-02, 3.870e-02, 1.390e-01));
	r += mul(s2_6, M4(-1.759e-02, 8.645e-02, 4.288e-02, 5.740e-02, 5.361e-02, 1.929e-01, 4.312e-02, -1.468e-01, -2.139e-02, -4.716e-03, -1.338e-02, 1.194e-02, 1.200e-01, 3.636e-02, 1.937e-01, -2.046e-01));
	r += mul(s2_7, M4(-7.938e-02, 8.623e-02, 6.573e-03, 2.192e-01, -4.831e-02, -1.422e-01, -8.281e-02, 2.182e-02, -2.666e-01, -1.899e-01, 5.530e-02, 2.523e-01, -9.204e-02, -2.159e-01, -2.061e-01, -9.458e-03));
	r += mul(s2_8, M4(4.007e-02, 1.311e-01, -1.333e-01, 2.969e-02, -6.057e-02, -3.379e-02, 8.992e-02, -9.248e-02, -1.058e-01, 2.708e-01, -4.663e-02, 2.840e-01, -7.287e-02, 1.407e-02, -7.978e-02, -8.912e-02));
	r += mul(s3_0, M4(5.207e-03, 1.815e-01, -2.377e-02, 1.145e-02, -4.600e-02, 7.543e-02, -6.525e-02, -5.628e-02, 5.771e-02, 6.571e-02, 1.054e-01, 1.220e-01, 6.120e-03, -1.072e-04, 7.880e-02, -1.251e-01));
	r += mul(s3_1, M4(-7.329e-02, 2.197e-02, -1.060e-01, -1.027e-01, -1.245e-01, -2.635e-01, 2.346e-02, -5.474e-02, -4.337e-02, 8.122e-02, -1.472e-01, -1.899e-01, 1.803e-01, 9.026e-02, 1.167e-02, -2.292e-01));
	r += mul(s3_2, M4(-5.156e-02, -1.289e-01, -1.078e-01, -2.837e-02, -1.382e-01, -9.645e-02, -1.612e-02, 1.059e-02, 7.213e-02, 6.524e-02, -1.620e-01, 2.309e-01, 6.008e-02, 1.229e-01, -2.082e-02, -3.174e-02));
	r += mul(s3_3, M4(6.033e-02, 2.842e-01, -2.686e-01, -9.204e-02, 7.943e-02, 1.362e-01, -1.633e-01, -2.798e-02, -6.774e-03, -1.437e-01, 2.053e-02, 3.732e-03, -8.591e-02, -1.307e-01, 1.077e-01, -3.370e-01));
	r += mul(s3_4, M4(3.890e-01, -5.231e-02, -2.155e-01, 1.777e-01, 1.545e-01, 2.637e-01, -2.602e-01, -4.585e-01, 3.954e-02, -1.263e-01, 7.042e-02, 1.316e-01, 8.749e-02, 9.565e-02, -3.109e-01, 1.136e-01));
	r += mul(s3_5, M4(4.248e-02, -1.195e-01, 7.322e-03, -9.472e-02, 2.175e-01, 4.017e-02, 6.518e-02, -1.140e-02, -2.009e-01, -7.312e-02, -1.028e-01, 1.431e-01, 6.991e-02, 1.052e-01, 9.112e-02, 6.530e-02));
	r += mul(s3_6, M4(4.556e-03, 1.073e-01, 1.683e-01, 1.116e-01, -2.129e-02, 1.417e-01, 4.962e-02, 1.645e-02, 4.780e-02, -4.704e-02, 5.273e-02, 3.825e-02, -1.536e-02, -5.494e-02, 2.203e-01, -2.407e-01));
	r += mul(s3_7, M4(-3.490e-02, 1.115e-01, -9.343e-02, 2.938e-02, -7.721e-02, 4.238e-02, 2.707e-02, 1.155e-01, -4.017e-02, -2.343e-01, 8.468e-02, 2.206e-01, 6.667e-03, -6.307e-02, -9.531e-02, -2.335e-01));
	r += mul(s3_8, M4(2.161e-02, 7.736e-02, -9.333e-02, 4.478e-02, -1.521e-03, -6.692e-02, -3.164e-02, -1.852e-02, -3.184e-02, 9.789e-02, -1.824e-02, -1.118e-02, -1.256e-01, 1.192e-01, -6.768e-02, -1.223e-01));
	r += V4(-4.347e-03, 1.583e-03, -7.728e-03, 1.127e-02);
	return r;
}
void Pass5(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t3[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 6
//!DESC CuNNy-4x8C-CHROMA-NVL-conv4
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t2, t3
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t2, float2(x, y))
#define l1(x, y) O(t3, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(3.672e-02, -4.837e-02, 2.753e-02, 3.258e-02, -5.611e-02, -9.925e-02, -3.357e-02, 1.242e-02, -1.972e-02, 3.272e-02, 2.994e-02, -5.011e-02, -5.427e-03, 3.455e-02, -3.838e-02, -1.988e-03));
	r += mul(s0_1, M4(-6.725e-02, 9.419e-02, -1.334e-01, -9.340e-02, 1.685e-01, 2.541e-01, 2.907e-01, 1.582e-01, 1.089e-02, -9.097e-03, 5.531e-03, -1.285e-02, 1.623e-01, -1.091e-01, 5.013e-02, 8.677e-03));
	r += mul(s0_2, M4(2.159e-02, -6.422e-03, -9.348e-03, -2.539e-02, 1.581e-02, -4.774e-02, 5.896e-02, 5.101e-02, -3.215e-02, 1.533e-02, 3.545e-02, -4.676e-02, -4.776e-02, 2.913e-02, -2.117e-02, 1.471e-02));
	r += mul(s0_3, M4(-1.095e-01, -3.198e-03, 3.354e-02, 1.289e-01, 4.697e-01, -2.017e-01, 4.116e-01, -6.915e-02, 2.721e-02, 6.178e-02, 7.504e-02, -3.673e-02, -7.548e-02, 8.328e-02, 8.140e-02, -2.149e-02));
	r += mul(s0_4, M4(2.105e-01, 8.576e-02, -1.330e-01, 4.792e-01, -1.450e-01, 6.528e-01, -3.018e-01, -4.386e-01, -3.199e-02, -1.634e-01, -3.614e-03, 4.247e-02, 3.527e-01, 2.947e-02, 2.600e-01, -1.283e-01));
	r += mul(s0_5, M4(-8.284e-02, -8.882e-02, -6.277e-03, 5.351e-02, -6.029e-02, -2.388e-01, -1.811e-02, -1.149e-01, 2.099e-03, 7.598e-02, 1.094e-01, 5.811e-02, -4.929e-02, 1.819e-02, -5.186e-02, -7.159e-02));
	r += mul(s0_6, M4(-1.312e-03, 3.330e-02, 2.212e-02, 9.992e-02, 7.860e-02, -1.091e-01, 5.677e-02, 1.167e-01, -1.886e-02, 6.493e-02, -2.092e-03, 1.699e-02, -4.603e-03, 4.679e-02, 1.441e-02, 5.414e-02));
	r += mul(s0_7, M4(8.275e-02, -8.274e-02, -4.588e-02, 2.016e-01, 1.785e-01, 2.047e-01, 7.868e-02, 1.076e-01, 1.316e-03, -1.126e-01, -5.376e-02, -4.178e-02, -1.006e-01, -9.203e-02, -1.091e-02, -1.082e-01));
	r += mul(s0_8, M4(-6.447e-02, 4.202e-03, -7.127e-03, -1.142e-03, -6.745e-02, -2.371e-03, -3.160e-02, 1.479e-02, -1.193e-02, 9.713e-02, 2.727e-02, -4.967e-02, 2.142e-02, 9.389e-02, -1.579e-02, -1.460e-02));
	r += mul(s1_0, M4(3.059e-02, -6.922e-02, 6.373e-02, 8.008e-02, 4.481e-02, 9.369e-02, 1.110e-01, 1.405e-02, 5.529e-02, 8.533e-03, 5.736e-02, 2.204e-01, 3.212e-02, -1.133e-02, 3.729e-02, 7.483e-02));
	r += mul(s1_1, M4(4.983e-03, 1.484e-01, 5.490e-02, 8.463e-02, -4.496e-02, 1.092e-01, 1.014e-01, -1.160e-01, 1.430e-01, 6.035e-03, 3.069e-01, 2.339e-01, -2.543e-03, -5.610e-02, -9.258e-02, 1.353e-01));
	r += mul(s1_2, M4(1.196e-02, -3.509e-02, 7.639e-03, -2.579e-02, 5.273e-02, 1.517e-02, -3.356e-02, -1.647e-02, -1.452e-01, 9.237e-03, -9.106e-02, -3.182e-05, -2.929e-02, -3.523e-02, -3.562e-02, 9.241e-02));
	r += mul(s1_3, M4(2.043e-01, 2.549e-01, 1.767e-01, -1.159e-01, -1.654e-02, 3.916e-02, 1.520e-02, 1.003e-01, -4.793e-02, 1.364e-01, 4.325e-01, 1.221e-01, 2.571e-02, -1.780e-02, -4.479e-02, -7.837e-02));
	r += mul(s1_4, M4(2.954e-01, 1.752e-01, 5.093e-02, 3.664e-02, -3.368e-02, 6.127e-02, 4.504e-02, 9.086e-02, -2.298e-01, -2.152e-01, -1.531e-01, -2.532e-01, -8.210e-03, 4.654e-02, -4.406e-02, -2.938e-01));
	r += mul(s1_5, M4(-5.958e-03, -4.544e-02, -1.782e-02, -4.831e-02, 4.557e-02, -1.203e-01, -8.664e-02, 3.910e-02, 1.699e-01, 2.687e-01, 2.044e-01, -1.251e-01, -6.085e-02, -1.500e-01, 3.879e-02, 1.149e-03));
	r += mul(s1_6, M4(-2.600e-02, -2.644e-02, 2.937e-01, 2.496e-01, -3.411e-02, -2.530e-03, -5.314e-02, 3.350e-02, 9.823e-02, 1.247e-01, 8.619e-02, 2.216e-02, 2.594e-02, -3.968e-02, -1.027e-02, 2.524e-02));
	r += mul(s1_7, M4(1.978e-01, 1.824e-01, 2.221e-01, 5.346e-01, 1.097e-01, 1.411e-01, 1.304e-01, 7.594e-03, 1.490e-01, 1.528e-01, 1.869e-01, -8.374e-02, 1.366e-01, 1.039e-02, 1.825e-02, 1.563e-02));
	r += mul(s1_8, M4(-4.153e-03, 1.193e-01, 3.552e-02, 1.142e-01, -3.880e-02, 3.709e-02, -2.794e-02, 5.017e-02, 4.130e-02, 1.529e-01, 6.198e-02, 1.905e-01, -1.111e-01, 1.012e-02, -1.815e-02, -6.749e-02));
	r += mul(s2_0, M4(-7.905e-02, 8.749e-03, -8.033e-02, -9.176e-02, 5.204e-02, -3.349e-02, -9.736e-02, 8.611e-02, 8.490e-02, -7.785e-02, -5.356e-02, 5.674e-02, -1.163e-02, -5.137e-02, 1.695e-02, 7.596e-02));
	r += mul(s2_1, M4(-1.023e-02, 1.111e-01, 7.429e-02, 9.781e-02, -2.396e-02, -1.137e-01, 5.287e-03, 1.117e-01, -7.132e-02, 5.166e-02, 6.559e-03, 8.668e-02, -1.826e-02, 1.697e-01, 9.879e-02, 7.920e-03));
	r += mul(s2_2, M4(-2.642e-03, -6.765e-02, -3.332e-02, 4.327e-02, 1.314e-02, 2.418e-02, -3.011e-02, 4.897e-02, 5.623e-03, -2.852e-02, -2.148e-02, 4.960e-02, 2.680e-02, -1.036e-02, 2.484e-03, -4.032e-02));
	r += mul(s2_3, M4(-4.505e-03, -1.748e-02, -5.550e-02, 4.310e-02, 3.223e-02, -6.037e-02, -3.580e-02, -8.430e-02, 2.846e-01, -2.113e-02, 7.843e-02, -8.114e-02, 3.334e-03, -1.626e-03, -1.300e-01, -9.074e-02));
	r += mul(s2_4, M4(-3.506e-01, 8.025e-02, 4.673e-02, 4.157e-02, -1.323e-01, -3.457e-01, -6.275e-02, -2.151e-01, -7.634e-01, 1.962e-01, -5.057e-02, 9.937e-02, 5.366e-02, 9.389e-02, 1.414e-01, 1.515e-01));
	r += mul(s2_5, M4(-6.887e-03, -1.303e-01, -8.507e-03, 1.464e-01, 7.458e-02, 5.507e-02, -7.056e-02, -3.855e-02, 2.621e-02, -1.066e-02, -1.362e-02, 1.055e-01, -2.104e-02, -1.550e-01, -8.408e-02, 5.178e-03));
	r += mul(s2_6, M4(-4.121e-03, -4.761e-02, -2.848e-02, -1.254e-02, -1.977e-02, -2.622e-02, -2.144e-02, 1.144e-01, 6.543e-02, 8.816e-02, 5.773e-02, 1.360e-01, 1.854e-02, 2.472e-02, -2.744e-02, 6.090e-02));
	r += mul(s2_7, M4(-6.575e-02, 1.199e-01, 2.576e-03, -3.420e-02, -5.456e-03, 4.551e-02, 3.144e-02, 2.285e-01, -1.052e-01, -8.129e-02, 4.995e-02, -4.818e-02, 6.539e-02, 2.553e-02, 1.111e-01, 1.359e-02));
	r += mul(s2_8, M4(-1.217e-02, -5.581e-02, -6.862e-03, 7.170e-03, 3.571e-02, -4.582e-02, 2.595e-02, 2.093e-02, -8.037e-02, 1.131e-02, -3.843e-02, -7.996e-02, 1.181e-02, 7.012e-02, -7.071e-04, 6.531e-02));
	r += mul(s3_0, M4(1.681e-03, 3.839e-02, 1.715e-01, -9.652e-02, -7.770e-02, -8.002e-02, -3.213e-01, 7.534e-02, 5.774e-02, -3.398e-02, -1.145e-02, 5.388e-02, -1.440e-01, -1.103e-01, -1.329e-01, -1.570e-01));
	r += mul(s3_1, M4(3.873e-02, -2.897e-03, 3.559e-02, -6.454e-02, 4.676e-02, -8.112e-02, 4.131e-02, 6.797e-02, 5.815e-02, 9.911e-02, 1.605e-01, 1.111e-01, 2.481e-01, 9.666e-02, 5.050e-01, -1.164e-01));
	r += mul(s3_2, M4(-8.049e-03, 1.706e-02, -1.454e-02, -2.239e-02, 3.375e-03, 3.733e-02, 4.658e-02, 2.451e-02, -2.063e-02, -1.798e-02, -9.459e-02, 7.780e-02, 5.984e-02, -6.443e-03, 1.045e-01, 5.675e-02));
	r += mul(s3_3, M4(9.662e-02, -3.107e-02, 3.237e-03, 1.285e-02, -1.805e-01, 1.133e-01, -4.014e-01, -6.244e-02, 1.112e-01, 2.688e-02, 5.719e-02, 1.059e-01, 3.043e-01, -1.236e-01, 1.678e-02, 7.837e-02));
	r += mul(s3_4, M4(5.077e-02, 3.156e-01, 1.299e-01, -1.768e-02, 1.038e-02, -1.214e-01, 2.530e-01, -5.355e-02, -1.005e-01, 7.206e-02, 1.314e-01, -3.490e-01, 6.931e-02, 7.285e-01, -1.452e-01, -7.132e-01));
	r += mul(s3_5, M4(5.017e-02, -5.232e-02, 5.587e-02, -7.654e-03, 1.535e-03, -6.814e-02, -1.343e-01, 4.506e-02, 4.746e-02, 1.111e-01, -3.752e-02, -7.263e-02, -1.165e-01, -1.254e-01, 3.342e-02, -2.375e-01));
	r += mul(s3_6, M4(2.095e-01, -5.344e-02, 1.336e-01, -3.007e-02, -3.889e-01, 8.361e-02, 1.530e-02, 5.924e-02, -3.103e-02, 3.675e-02, 2.242e-02, 5.448e-03, 2.086e-01, -1.985e-01, -1.995e-02, 3.313e-02));
	r += mul(s3_7, M4(-1.178e-01, 1.745e-01, 3.642e-02, 1.200e-01, -2.254e-02, -4.062e-01, -1.512e-01, 2.557e-01, 1.652e-01, -2.258e-03, 1.041e-01, 1.773e-01, 1.606e-01, 1.889e-01, 7.597e-02, 1.327e-01));
	r += mul(s3_8, M4(-1.894e-02, 1.815e-02, 2.720e-02, 9.268e-02, 9.085e-02, -6.075e-02, -7.603e-02, 5.100e-02, -8.964e-02, 4.086e-02, -4.640e-02, 7.914e-02, -8.555e-02, 4.406e-02, -2.382e-03, -1.457e-02));
	r += V4(-7.736e-03, -4.780e-03, -7.965e-03, 2.602e-04);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(8.069e-03, -3.139e-02, -4.298e-03, -1.143e-02, 9.687e-02, -8.117e-02, 2.915e-02, -8.630e-02, -1.863e-02, 3.244e-02, 3.449e-02, 1.789e-03, -4.301e-03, 7.277e-02, -1.138e-02, -1.514e-02));
	r += mul(s0_1, M4(1.223e-01, -1.028e-02, 9.440e-02, 3.593e-02, -1.335e-01, 5.526e-02, -6.243e-02, -1.578e-02, 1.029e-01, 1.116e-06, -7.017e-02, 2.366e-02, 5.549e-03, -2.225e-01, 7.409e-02, -5.948e-02));
	r += mul(s0_2, M4(1.380e-01, -2.154e-02, -5.609e-02, -1.351e-02, 4.340e-02, -1.381e-03, 9.223e-02, -3.984e-02, 1.147e-01, 4.481e-02, 6.622e-02, 2.398e-02, -1.549e-01, 7.837e-02, -1.724e-01, -2.765e-03));
	r += mul(s0_3, M4(5.572e-02, 8.814e-02, 7.340e-02, -1.855e-01, -3.723e-02, -3.526e-01, 1.000e-01, 2.292e-01, -1.473e-03, 3.798e-03, 4.168e-02, 1.150e-01, -6.055e-03, 6.763e-02, -1.122e-01, -2.850e-02));
	r += mul(s0_4, M4(-4.058e-02, -1.682e-01, -1.527e-01, -1.454e-01, -1.286e-01, -1.154e-01, -2.053e-02, 1.204e-01, -4.372e-02, -7.433e-03, -2.881e-01, -6.378e-02, -1.310e-01, -7.639e-02, 5.905e-01, 1.278e-01));
	r += mul(s0_5, M4(-6.394e-02, 1.042e-01, 3.003e-02, 1.818e-03, -1.710e-01, 9.659e-02, 1.203e-01, 1.626e-01, -1.181e-01, 4.724e-02, 4.282e-02, 1.484e-02, -6.109e-02, 2.715e-02, -2.075e-01, 5.680e-02));
	r += mul(s0_6, M4(7.586e-03, 9.412e-03, 1.252e-02, 3.256e-02, 7.347e-02, 2.322e-02, 2.116e-02, -1.381e-02, -1.281e-03, -9.669e-03, 3.441e-02, -7.165e-02, -1.533e-02, -6.716e-02, -1.721e-01, 7.435e-02));
	r += mul(s0_7, M4(1.014e-01, 2.377e-02, -6.162e-02, -5.228e-04, 1.118e-01, -3.261e-02, 3.772e-02, 6.827e-02, -5.391e-04, 2.977e-02, -2.117e-02, 8.215e-02, 5.426e-02, 4.638e-02, 1.690e-01, 9.264e-03));
	r += mul(s0_8, M4(-8.733e-03, 3.455e-03, 1.616e-02, 7.385e-03, 2.309e-02, -1.182e-02, 3.230e-02, -5.473e-03, -2.719e-03, -3.380e-02, 3.843e-02, 1.444e-02, -2.871e-02, 3.100e-03, -8.543e-02, -3.030e-02));
	r += mul(s1_0, M4(-3.671e-02, -9.898e-02, 3.367e-02, -8.472e-02, -1.886e-02, -1.274e-02, 3.665e-02, 2.973e-02, 1.263e-01, 4.071e-03, 7.047e-02, -1.844e-01, -1.958e-04, -3.696e-02, 4.062e-03, -6.363e-02));
	r += mul(s1_1, M4(2.603e-01, 4.484e-02, 6.564e-02, 4.659e-03, -6.307e-03, 8.520e-02, 1.782e-01, 2.133e-02, 3.467e-01, -3.830e-02, -7.835e-03, -8.856e-02, -6.233e-02, -1.762e-02, 1.375e-02, -6.087e-02));
	r += mul(s1_2, M4(6.001e-03, -2.681e-02, -3.409e-02, -3.039e-02, -1.083e-01, -8.279e-02, -1.195e-01, -5.017e-02, 2.953e-01, 8.962e-02, 1.442e-01, 2.382e-02, -1.652e-02, 3.621e-02, -9.768e-02, -2.691e-02));
	r += mul(s1_3, M4(1.044e-02, 4.862e-02, 1.010e-01, 1.353e-01, 3.514e-02, -1.782e-02, -1.715e-02, -4.749e-02, -5.666e-02, 1.053e-01, 3.987e-02, -2.548e-01, 1.803e-02, -3.137e-02, 2.500e-03, 5.474e-02));
	r += mul(s1_4, M4(-1.257e-01, -9.209e-01, 4.426e-01, -8.674e-02, 1.449e-01, -6.027e-02, 1.397e-01, -3.721e-02, -4.623e-01, -7.969e-01, -8.828e-02, 1.870e-01, 3.790e-02, -4.599e-02, 1.382e-01, 5.994e-02));
	r += mul(s1_5, M4(1.376e-01, 1.984e-02, 9.768e-02, 1.154e-02, -1.316e-01, 4.402e-02, -6.643e-02, 4.936e-02, -5.645e-01, 7.629e-02, -7.372e-02, -1.103e-02, -2.783e-01, 1.027e-01, 6.540e-02, 6.093e-02));
	r += mul(s1_6, M4(-1.546e-03, -1.627e-01, 1.412e-01, -2.759e-01, 2.620e-02, 3.557e-02, -1.921e-02, -8.373e-02, 3.667e-02, -7.863e-02, 5.574e-02, 1.039e-01, -5.812e-03, 9.951e-03, -6.935e-02, 1.397e-02));
	r += mul(s1_7, M4(-6.461e-02, -1.072e-01, -1.094e-01, -7.812e-02, 4.231e-03, -5.643e-02, 5.515e-02, 3.933e-02, 9.720e-04, 1.053e-01, -6.815e-02, -1.415e-01, 1.187e-02, -4.102e-02, -3.332e-02, 1.995e-01));
	r += mul(s1_8, M4(1.096e-01, 4.066e-03, 1.454e-01, -4.846e-02, -4.774e-03, 1.209e-02, -2.603e-02, -1.019e-02, 9.569e-02, 4.886e-03, 9.157e-02, -2.632e-02, -2.167e-02, -4.851e-03, -4.190e-02, 4.847e-02));
	r += mul(s2_0, M4(1.359e-02, 5.180e-02, 3.118e-02, 3.145e-02, 1.230e-02, -9.157e-02, -1.181e-02, -3.919e-02, 6.991e-02, -1.886e-01, 8.393e-02, -4.579e-02, -1.066e-02, 8.398e-03, 4.388e-02, -6.783e-02));
	r += mul(s2_1, M4(2.056e-01, 1.320e-01, -8.869e-02, -7.426e-02, -1.408e-01, 5.813e-02, -7.792e-02, -6.038e-02, 4.056e-02, 2.163e-01, -1.137e-02, -1.459e-02, 2.691e-02, 8.136e-02, 1.268e-02, -1.930e-02));
	r += mul(s2_2, M4(3.794e-01, -3.773e-02, 3.163e-02, 2.621e-02, 7.318e-03, -3.762e-02, -1.339e-02, -9.608e-03, 2.612e-02, -4.005e-02, -4.255e-02, -4.894e-02, -1.054e-01, -6.177e-02, -6.420e-02, -1.403e-02));
	r += mul(s2_3, M4(3.400e-02, -2.799e-03, 8.620e-02, 3.553e-02, -2.665e-03, -1.591e-02, -4.816e-02, -1.129e-02, -2.330e-02, -1.295e-01, 2.253e-02, 3.096e-02, 2.839e-02, -4.282e-02, 5.428e-02, 4.109e-02));
	r += mul(s2_4, M4(-1.032e-02, 8.128e-02, -2.468e-01, -3.733e-02, 1.820e-01, 2.009e-02, 3.096e-01, 1.547e-01, 1.543e-01, 5.056e-01, 1.963e-02, -2.952e-01, 6.194e-02, -1.235e-01, 6.929e-02, 1.130e-01));
	r += mul(s2_5, M4(-1.066e-02, 2.979e-02, -4.019e-02, 4.161e-03, 1.196e-01, -9.709e-02, -1.922e-01, -5.664e-02, 2.402e-01, 4.099e-02, 1.132e-02, 9.864e-03, -2.122e-01, 9.985e-02, 1.688e-02, 8.045e-02));
	r += mul(s2_6, M4(-1.156e-02, 1.709e-02, 9.783e-03, -8.092e-02, 6.070e-03, 5.162e-02, -7.206e-02, -6.134e-02, 2.713e-02, -1.776e-02, 4.059e-02, -1.359e-01, 3.884e-02, 2.445e-02, -7.565e-02, -6.074e-02));
	r += mul(s2_7, M4(8.982e-03, 5.454e-03, -3.389e-02, -4.423e-02, 6.274e-02, 6.502e-03, -2.012e-02, -1.358e-01, -3.109e-02, -7.481e-02, 2.179e-01, 1.223e-01, 1.604e-03, -3.735e-02, 2.472e-02, 7.250e-02));
	r += mul(s2_8, M4(4.741e-03, 1.048e-02, -1.020e-02, -1.689e-02, -2.739e-02, 2.886e-02, -2.964e-02, -7.606e-03, -9.433e-02, 2.488e-02, -1.284e-01, -1.299e-02, 2.071e-02, -4.100e-02, 2.893e-02, 2.567e-02));
	r += mul(s3_0, M4(-8.245e-02, 5.751e-02, 3.938e-02, 5.969e-02, -4.022e-02, -2.160e-02, -7.098e-02, -6.417e-02, 4.000e-02, -1.232e-01, 2.493e-02, -6.175e-02, 1.230e-01, 8.163e-02, -4.965e-02, -2.003e-02));
	r += mul(s3_1, M4(-1.736e-01, -6.135e-02, 1.838e-02, 1.158e-03, 2.116e-01, -7.740e-02, -1.067e-01, -3.410e-02, 1.329e-01, 4.480e-02, 1.164e-01, -3.930e-02, -7.083e-01, -8.813e-02, 3.293e-01, 2.159e-02));
	r += mul(s3_2, M4(-2.918e-02, 1.421e-03, -2.920e-02, 1.476e-02, -1.313e-01, 3.640e-03, 2.464e-02, -8.776e-03, 9.785e-02, -2.388e-02, -7.293e-02, -5.025e-02, -2.194e-01, 1.477e-02, 1.460e-02, -1.334e-02));
	r += mul(s3_3, M4(8.906e-02, -2.730e-01, 2.512e-01, 1.421e-01, -5.413e-02, 5.059e-01, -4.035e-01, 1.129e-01, 2.592e-02, 4.211e-02, -3.458e-02, 2.609e-02, 2.493e-02, -4.385e-01, -5.024e-02, 3.641e-02));
	r += mul(s3_4, M4(3.767e-01, 2.715e-01, -7.939e-02, 1.138e-01, -9.357e-02, 7.921e-03, 1.443e-01, 1.695e-01, 3.272e-02, -1.548e-01, 3.155e-01, 6.115e-02, -5.992e-02, -1.935e-01, 5.330e-03, 7.366e-01));
	r += mul(s3_5, M4(1.771e-01, -9.275e-02, 1.261e-01, 5.863e-02, 3.608e-01, -1.149e-01, -1.558e-03, -3.521e-02, -4.190e-02, 3.285e-02, -2.068e-01, 2.996e-02, -2.654e-01, 1.243e-01, 1.684e-01, 2.007e-01));
	r += mul(s3_6, M4(-5.548e-02, -1.742e-02, 3.575e-02, -1.606e-01, 1.636e-02, -6.041e-02, 2.529e-02, -5.757e-02, 4.217e-04, -3.350e-03, 5.333e-02, -2.537e-02, 3.807e-02, 4.259e-02, 2.334e-02, 1.721e-01));
	r += mul(s3_7, M4(-9.023e-02, -2.528e-02, 3.140e-02, -2.199e-01, 1.997e-02, 7.127e-02, -9.407e-02, -2.720e-01, 8.423e-02, -1.400e-02, 5.596e-02, -4.921e-02, 9.737e-02, -1.066e-02, 7.849e-02, 8.792e-02));
	r += mul(s3_8, M4(-1.085e-02, 5.979e-02, 1.145e-01, 1.530e-02, 4.141e-02, -1.647e-02, -1.460e-01, -2.806e-02, -8.305e-03, 4.577e-02, -8.859e-02, -4.358e-02, 6.568e-02, -1.494e-02, 1.158e-01, -2.844e-02));
	r += V4(4.195e-03, 5.297e-03, -2.867e-03, -6.201e-03);
	return r;
}
void Pass6(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 7
//!DESC CuNNy-4x8C-CHROMA-NVL-out
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(2.864e-03, 3.019e-02, -2.063e-02, 9.005e-03, -5.435e-02, -1.619e-03, 4.382e-02, 2.412e-02, 7.710e-03, -1.524e-02, 1.230e-03, -1.202e-02, -3.410e-03, -1.099e-02, 1.184e-03, -1.046e-02));
	r += mul(s0_1, M4(-8.537e-02, -1.382e-01, 3.600e-03, -7.837e-02, 1.880e-01, -1.298e-01, -2.853e-02, 2.833e-02, -2.334e-03, 4.334e-02, -3.166e-02, 4.021e-03, 1.067e-01, 9.234e-02, 4.292e-02, 5.843e-02));
	r += mul(s0_2, M4(3.082e-02, 5.646e-02, -5.171e-02, 2.037e-02, -1.554e-02, 2.958e-02, -1.508e-02, -2.325e-04, -1.574e-02, -4.132e-02, -1.040e-02, 7.657e-03, -2.623e-03, 2.388e-02, 2.500e-03, 9.083e-03));
	r += mul(s0_3, M4(-3.046e-02, -9.197e-03, 2.349e-02, 3.509e-02, -1.201e-02, 4.519e-02, -1.035e-01, -6.820e-03, -2.972e-02, -2.258e-02, -2.839e-02, -1.162e-02, 8.132e-02, 6.656e-03, 2.344e-02, 4.963e-03));
	r += mul(s0_4, M4(4.100e-02, -4.717e-03, 5.908e-01, 1.626e-01, 4.621e-01, -4.743e-01, 6.365e-01, -5.445e-01, -5.194e-01, -5.788e-02, -2.529e-01, -4.207e-02, 4.586e-03, 9.456e-02, 7.914e-02, 5.861e-02));
	r += mul(s0_5, M4(8.291e-02, -1.630e-02, 1.481e-01, -3.785e-01, -2.786e-02, 6.396e-02, -9.415e-03, 3.723e-02, -4.125e-02, 2.783e-01, -5.263e-02, 4.175e-02, 1.060e-02, -4.563e-03, 8.897e-03, 5.060e-02));
	r += mul(s0_6, M4(-1.715e-02, 4.479e-03, -1.479e-02, 6.243e-04, -5.043e-03, -8.787e-03, 1.007e-02, 1.697e-02, -3.519e-03, 1.291e-02, 1.993e-03, 6.422e-04, -2.325e-02, -1.046e-02, 4.056e-03, -3.604e-03));
	r += mul(s0_7, M4(1.913e-02, -2.180e-02, -6.011e-02, -2.337e-02, -1.923e-02, -1.300e-02, 3.809e-02, -1.046e-01, 9.284e-02, -1.625e-02, -1.480e-01, 4.281e-02, 2.492e-03, -1.035e-02, 1.213e-02, 3.076e-02));
	r += mul(s0_8, M4(1.102e-02, -1.312e-02, -4.438e-03, -1.147e-02, -9.448e-03, -4.068e-04, -4.160e-02, 4.309e-02, -5.426e-03, 3.259e-02, -1.822e-02, 2.013e-01, 7.234e-04, 4.521e-03, -1.039e-02, -1.976e-02));
	r += mul(s1_0, M4(2.104e-02, 3.260e-02, -2.143e-02, -2.257e-03, -7.550e-03, 2.254e-03, 4.554e-02, 1.854e-02, 7.825e-03, -6.618e-03, -4.530e-03, -6.154e-03, 6.509e-02, 3.872e-02, -1.715e-02, -3.930e-02));
	r += mul(s1_1, M4(-1.155e-01, -1.101e-01, -1.579e-02, -4.782e-02, 3.650e-02, 1.046e-02, -1.872e-02, 3.896e-02, 3.823e-02, 4.867e-02, -9.444e-03, -6.822e-03, 1.107e-01, 4.995e-02, 2.155e-02, 6.431e-02));
	r += mul(s1_2, M4(5.437e-03, 1.638e-02, -1.355e-02, 4.604e-04, -4.553e-04, 3.120e-02, -5.809e-03, -2.553e-02, -2.649e-02, -2.948e-02, 1.132e-02, 1.024e-02, 8.514e-03, 1.151e-01, -4.120e-03, -1.241e-02));
	r += mul(s1_3, M4(-4.513e-02, -8.379e-03, 9.108e-02, -1.132e-02, -1.603e-02, 1.009e-02, -1.116e-01, -2.876e-02, -2.113e-02, 1.274e-02, -2.131e-02, 3.492e-03, -7.446e-02, 4.899e-03, 1.188e-01, -1.611e-03));
	r += mul(s1_4, M4(4.113e-02, -5.089e-02, 1.672e-01, 3.508e-01, 1.910e-02, 1.434e-02, 9.566e-02, -8.458e-02, -1.523e-01, -1.993e-01, -1.843e-01, -1.861e-01, -3.701e-01, -3.571e-01, 4.281e-01, 5.495e-01));
	r += mul(s1_5, M4(-2.440e-02, 1.636e-02, 3.214e-02, -2.307e-02, -8.879e-04, -8.420e-03, 7.049e-03, 7.058e-02, 5.110e-02, 3.700e-02, -3.045e-02, -1.330e-02, 1.223e-02, -6.128e-02, 2.169e-02, 1.848e-02));
	r += mul(s1_6, M4(-1.365e-02, -3.075e-03, -8.335e-03, 1.201e-03, -6.767e-03, -1.315e-02, 2.319e-02, 1.291e-02, 6.733e-03, 1.440e-02, 1.119e-02, 1.751e-02, 3.373e-04, -4.177e-03, -2.930e-02, 1.821e-02));
	r += mul(s1_7, M4(-3.174e-03, -7.736e-03, -5.278e-02, -4.063e-02, -8.325e-03, -1.463e-02, -4.162e-02, 2.413e-02, 2.020e-02, 1.578e-02, 6.752e-02, 2.480e-02, 3.518e-02, 2.521e-02, 6.393e-03, -1.490e-02));
	r += mul(s1_8, M4(6.711e-03, -4.749e-03, -5.423e-03, -1.647e-02, -1.510e-03, 1.528e-03, -7.397e-03, -1.762e-02, 1.283e-02, 2.465e-02, 3.700e-02, 3.111e-02, 6.867e-03, 1.995e-02, -2.233e-02, -2.051e-02));
	r += mul(s2_0, M4(2.695e-03, -9.762e-04, -1.034e-03, -4.453e-03, -1.036e-02, -1.943e-03, -3.724e-02, -1.137e-02, 1.314e-02, -2.463e-02, -1.809e-02, -1.393e-02, -4.070e-02, -1.661e-02, -3.820e-02, -4.161e-02));
	r += mul(s2_1, M4(-1.224e-02, -8.703e-03, -6.112e-03, -3.154e-03, -7.822e-02, -7.300e-02, -1.592e-02, -4.822e-02, -4.728e-02, 3.143e-02, 1.784e-02, -4.540e-02, 3.118e-01, 1.352e-01, 6.550e-02, 3.054e-02));
	r += mul(s2_2, M4(2.713e-03, -1.053e-03, 4.562e-03, 4.469e-03, 5.647e-03, 3.344e-03, -7.791e-03, -2.810e-03, 1.955e-02, 2.859e-03, -2.896e-03, -3.245e-03, 2.902e-02, 2.045e-01, 1.098e-02, 5.456e-02));
	r += mul(s2_3, M4(-1.421e-01, -6.520e-02, -1.929e-02, -3.083e-02, -4.847e-02, 1.583e-02, 1.139e-02, -1.877e-02, 8.627e-02, -5.054e-02, 6.850e-02, -4.910e-02, 5.627e-03, -8.429e-03, 2.123e-02, -2.558e-02));
	r += mul(s2_4, M4(-2.385e-02, -9.990e-02, -9.432e-03, -1.359e-02, -8.774e-02, -2.157e-01, 1.066e-01, 1.782e-01, -3.584e-01, 6.141e-01, -3.476e-01, 4.952e-01, 4.401e-02, -1.201e-02, -3.098e-01, -2.647e-03));
	r += mul(s2_5, M4(7.740e-03, 1.083e-02, 1.648e-03, 4.595e-03, -6.152e-03, 4.681e-02, 1.914e-02, -2.384e-02, 5.157e-02, -1.129e-01, 6.420e-02, -1.206e-02, -1.922e-03, 9.131e-02, 1.460e-01, -1.402e-01));
	r += mul(s2_6, M4(3.624e-02, 1.295e-02, -6.266e-02, -5.206e-02, -5.286e-02, 1.329e-03, 6.812e-02, 1.433e-02, -2.212e-02, -6.361e-03, 1.670e-02, -1.272e-02, -2.057e-02, 5.819e-03, 9.886e-03, 9.017e-03));
	r += mul(s2_7, M4(2.326e-03, 3.919e-02, 2.258e-02, -2.411e-02, 1.776e-02, -6.018e-02, 1.924e-02, 1.125e-01, -8.175e-03, -6.614e-02, -7.740e-02, 1.079e-01, 1.067e-02, -1.187e-02, 3.752e-02, 3.390e-02));
	r += mul(s2_8, M4(9.428e-04, -8.118e-04, 5.517e-03, 8.707e-03, 2.219e-03, 1.914e-02, 2.470e-02, 1.517e-02, 1.341e-03, 1.884e-02, 1.929e-02, -8.122e-02, 4.538e-03, -7.559e-04, 1.113e-02, 3.137e-02));
	r += mul(s3_0, M4(-2.133e-02, -4.193e-03, -1.693e-03, -6.023e-03, -2.655e-02, 2.727e-03, -2.813e-02, -1.437e-02, -1.942e-02, -4.472e-03, 1.760e-03, 3.660e-04, -3.370e-02, -3.616e-02, -2.567e-02, -3.406e-02));
	r += mul(s3_1, M4(-3.052e-03, -2.101e-02, 4.312e-04, -2.182e-03, -5.383e-02, -8.099e-02, -3.022e-02, -5.993e-02, 4.817e-03, -2.809e-02, 1.157e-03, -1.065e-02, 4.807e-02, 6.764e-02, 1.104e-01, 7.314e-02));
	r += mul(s3_2, M4(1.591e-04, 3.948e-03, -2.450e-03, 2.036e-03, 6.523e-02, -3.768e-02, -1.176e-02, 5.048e-02, 1.033e-02, 9.301e-03, -9.173e-03, -8.516e-03, 2.941e-02, 3.058e-02, 1.835e-02, 6.121e-02));
	r += mul(s3_3, M4(-8.645e-02, -1.702e-02, -7.529e-03, -2.882e-02, 4.348e-02, -2.487e-02, 6.610e-03, 8.058e-03, 9.136e-02, -2.682e-03, 1.354e-02, -2.401e-02, 1.850e-02, -2.069e-02, -1.888e-02, 9.632e-03));
	r += mul(s3_4, M4(-2.540e-02, -1.106e-01, 3.505e-03, 1.680e-02, -5.216e-01, -6.918e-03, 1.900e-01, 1.353e-01, 4.533e-03, 1.294e-01, 5.797e-02, 1.184e-01, 2.894e-02, 4.195e-02, 1.963e-02, -8.879e-02));
	r += mul(s3_5, M4(4.772e-03, 3.454e-02, 1.205e-03, 8.449e-03, -5.165e-03, 3.857e-01, 7.746e-02, -2.392e-01, -1.833e-02, -4.499e-02, 1.901e-02, -1.816e-02, 8.383e-03, 3.474e-02, 4.799e-02, 1.060e-01));
	r += mul(s3_6, M4(3.881e-01, 5.084e-02, -4.443e-01, -1.517e-01, -3.491e-02, -2.715e-03, 4.602e-02, 1.447e-02, -4.093e-02, -5.401e-03, 2.196e-02, 1.156e-02, -1.740e-02, -2.437e-03, 2.215e-02, -8.277e-03));
	r += mul(s3_7, M4(3.517e-02, 3.570e-01, -2.701e-02, -3.115e-01, 2.908e-02, -4.378e-02, 9.571e-02, 1.353e-01, -7.462e-03, -4.570e-02, -2.109e-02, -2.120e-02, 2.242e-02, -3.420e-03, 4.104e-03, 4.533e-02));
	r += mul(s3_8, M4(1.502e-02, 1.179e-02, 3.828e-03, -3.336e-02, 3.577e-02, -4.820e-03, 4.883e-03, -6.012e-02, -4.111e-03, 3.962e-03, -7.236e-03, -7.362e-03, 5.783e-03, 2.113e-02, -2.066e-03, -1.025e-02));
	r += V4(1.987e-03, 2.159e-03, 1.492e-03, 1.848e-03);
	return tanh(r);
}
void Pass7(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 8
//!DESC CuNNy-4x8C-CHROMA-NVL-shuffle
//!STYLE PS
//!IN t2, INPUT, easu
float4 Pass8(float2 pos) {
	float2 pt = float2(GetInputPt());
	static const float3x3 rgb2yuv = {0.299, 0.587, 0.114, -0.169, -0.331, 0.5, 0.5, -0.419, -0.081};
	static const float3x3 yuv2rgb = {1, -0.00093, 1.401687, 1, -0.3437, -0.71417, 1, 1.77216, 0.00099};
	float4 r = 0.0;
	float2 size = float2(GetInputSize());
	float2 f = frac(pos * size);
	float3 yuv = mul(rgb2yuv, INPUT.SampleLevel(SL, pos, 0).rgb);
	int2 i = int2(f * 2.0);
	r.r = t2.SampleLevel(SP, (float2(0.5, 0.5) - f) * pt + pos, 0)[2*i.y + i.x];
	r.r += easu.SampleLevel(SP, pos, 0).r;
	r.a = 1.0;
	r.r = clamp(r, 0.0, 1.0);
	float3 px = mul(yuv2rgb, float3(r.r, yuv.yz));
	return float4(px, 1.0);
}
