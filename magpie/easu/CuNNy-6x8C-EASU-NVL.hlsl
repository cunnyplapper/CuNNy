// CuNNy 6x8C CHROMA NVL
// Copyright (c) 2024 cunnyplapper

// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public
// License along with this program.  If not, see <https://www.gnu.org/licenses/>.
/* ------------------------------------------------------------------- */

//!MAGPIE EFFECT
//!VERSION 3
//!OUTPUT_WIDTH INPUT_WIDTH * 2
//!OUTPUT_HEIGHT INPUT_HEIGHT * 2

//!TEXTURE
Texture2D INPUT;

//!TEXTURE
//!WIDTH INPUT_WIDTH * 2
//!HEIGHT INPUT_HEIGHT * 2
//!FORMAT R8_UNORM
Texture2D easu;

//!SAMPLER
//!FILTER POINT
SamplerState SP;

//!SAMPLER
//!FILTER LINEAR
SamplerState SL;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t1;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t2;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t3;

// FSR mpv | modified
// Copyright (c) 2021 Advanced Micro Devices, Inc. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// FidelityFX FSR v1.0.2 by AMD
// ported to mpv by agyild

//!PASS 1
//!DESC CuNNy-EASU
//!STYLE PS
//!IN INPUT
//!OUT easu

float GetLuma(float3 rgb) {
	return dot(float3(0.299, 0.587, 0.114), rgb);
}

float APrxLoRcpF1(float a) {
	return asfloat(uint(0x7ef07ebb) - asuint(a));
}

float APrxLoRsqF1(float a) {
	return asfloat(uint(0x5f347d74) - (asuint(a) >> uint(1)));
}

float AMin3F1(float x, float y, float z) {

	return min(x, min(y, z));
}

float AMax3F1(float x, float y, float z) {
	return max(x, max(y, z));
}

void tap(inout float aC, inout float aW, float2 off, float2 dir, float2 len,
         float lob, float clp, float c){
	float2 v;
	v.x = (off.x * ( dir.x)) + (off.y * dir.y);
	v.y = (off.x * (-dir.y)) + (off.y * dir.x);
	v *= len;
	float d2 = v.x * v.x + v.y * v.y;
	d2 = min(d2, clp);
	float wB = float(2.0 / 5.0) * d2 + -1.0;

	float wA = lob * d2 + -1.0;
	wB *= wB;
	wA *= wA;
	wB = float(25.0 / 16.0) * wB + float(-(25.0 / 16.0 - 1.0));
	float w = wB * wA;
	aC += c * w;
	aW += w;
}

void set(inout float2 dir, inout float len, float2 pp, bool biS, bool biT,
         bool biU, bool biV, float lA, float lB, float lC, float lD, float lE){

	float w = 0.0;
	if (biS)
		w = (1.0 - pp.x) * (1.0 - pp.y);
	if (biT)
		w =        pp.x  * (1.0 - pp.y);
	if (biU)
		w = (1.0 - pp.x) *        pp.y;

	if (biV)
		w =        pp.x  *        pp.y;
	float dc = lD - lC;
	float cb = lC - lB;
	float lenX = max(abs(dc), abs(cb));
	lenX = APrxLoRcpF1(lenX);
	float dirX = lD - lB;
	lenX = clamp(abs(dirX) * lenX, 0.0, 1.0);
	lenX *= lenX;
	float ec = lE - lC;

	float ca = lC - lA;
	float lenY = max(abs(ec), abs(ca));
	lenY = APrxLoRcpF1(lenY);
	float dirY = lE - lA;
	lenY = clamp(abs(dirY) * lenY, 0.0, 1.0);
	lenY *= lenY;
	dir += float2(dirX, dirY) * w;
	len += dot(float2(w, w), float2(lenX, lenY));
}

float4 Pass1(float2 pos) {
	float2 pt = float2(GetInputPt());
	float2 size = float2(GetInputSize());
	float4 pix = float4(0.0, 0.0, 0.0, 1.0);
	float2 pp = pos * size - float2(0.5, 0.5);
	float2 fp = floor(pp);
	pp -= fp;
	float b = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(0.5, -0.5)) * pt), 0).rgb);
	float c = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(1.5, -0.5)) * pt), 0).rgb);
	float e = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(-0.5, 0.5)) * pt), 0).rgb);
	float f = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 0.5, 0.5)) * pt), 0).rgb);
	float g = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 1.5, 0.5)) * pt), 0).rgb);
	float h = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 2.5, 0.5)) * pt), 0).rgb);
	float i = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(-0.5, 1.5)) * pt), 0).rgb);
	float j = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 0.5, 1.5)) * pt), 0).rgb);
	float k = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 1.5, 1.5)) * pt), 0).rgb);
	float l = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 2.5, 1.5)) * pt), 0).rgb);
	float n = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(0.5, 2.5) ) * pt), 0).rgb);
	float o = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(1.5, 2.5) ) * pt), 0).rgb);
	float4 bczzL = float4(b, c, 0.0, 0.0);
	float4 ijfeL = float4(i, j, f, e);
	float4 klhgL = float4(k, l, h, g);
	float4 zzonL = float4(0.0, 0.0, o, n);
	float bL = bczzL.x;
	float cL = bczzL.y;
	float iL = ijfeL.x;
	float jL = ijfeL.y;
	float fL = ijfeL.z;
	float eL = ijfeL.w;
	float kL = klhgL.x;
	float lL = klhgL.y;
	float hL = klhgL.z;
	float gL = klhgL.w;
	float oL = zzonL.z;
	float nL = zzonL.w;
	float2 dir = float2(0.0, 0.0);
	float len = 0.0;
	set(dir, len, pp, true, false, false, false, bL, eL, fL, gL, jL);
	set(dir, len, pp, false, true, false, false, cL, fL, gL, hL, kL);
	set(dir, len, pp, false, false, true, false, fL, iL, jL, kL, nL);
	set(dir, len, pp, false, false, false, true, gL, jL, kL, lL, oL);
	float2 dir2 = dir * dir;
	float dirR = dir2.x + dir2.y;
	bool zro = dirR < float(1.0 / 32768.0);
	dirR = APrxLoRsqF1(dirR);
	dirR = zro ? 1.0 : dirR;
	dir.x = zro ? 1.0 : dir.x;
	dir *= float2(dirR, dirR);
	len = len * 0.5;
	len *= len;
	float stretch = (dir.x * dir.x + dir.y * dir.y) * APrxLoRcpF1(max(abs(dir.x), abs(dir.y)));
	float2 len2 = float2(1.0 + (stretch - 1.0) * len, 1.0 + -0.5 * len);
	float lob = 0.5 + float((1.0 / 4.0 - 0.04) - 0.5) * len;
	float clp = APrxLoRcpF1(lob);
	float aC = 0.0;
	float aW = 0.0;
	tap(aC, aW, float2( 0.0,-1.0) - pp, dir, len2, lob, clp, bL);
	tap(aC, aW, float2( 1.0,-1.0) - pp, dir, len2, lob, clp, cL);
	tap(aC, aW, float2(-1.0, 1.0) - pp, dir, len2, lob, clp, iL);
	tap(aC, aW, float2( 0.0, 1.0) - pp, dir, len2, lob, clp, jL);
	tap(aC, aW, float2( 0.0, 0.0) - pp, dir, len2, lob, clp, fL);
	tap(aC, aW, float2(-1.0, 0.0) - pp, dir, len2, lob, clp, eL);
	tap(aC, aW, float2( 1.0, 1.0) - pp, dir, len2, lob, clp, kL);
	tap(aC, aW, float2( 2.0, 1.0) - pp, dir, len2, lob, clp, lL);
	tap(aC, aW, float2( 2.0, 0.0) - pp, dir, len2, lob, clp, hL);
	tap(aC, aW, float2( 1.0, 0.0) - pp, dir, len2, lob, clp, gL);
	tap(aC, aW, float2( 1.0, 2.0) - pp, dir, len2, lob, clp, oL);
	tap(aC, aW, float2( 0.0, 2.0) - pp, dir, len2, lob, clp, nL);
	pix.r = aC / aW;
	float min1 = min(AMin3F1(fL, gL, jL), kL);
	float max1 = max(AMax3F1(fL, gL, jL), kL);
	pix.r = clamp(pix.r, min1, max1);
	pix.r = clamp(pix.r, 0.0, 1.0);
	return pix;
}

//!PASS 2
//!DESC CuNNy-6x8C-CHROMA-NVL-in
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN INPUT
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) (dot(float3(1.731e-01, 3.236e-01, 7.153e-02), O(INPUT, float2(x, y)).rgb) + -4.482e-01)
float4 f0(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	V4 r = 0.0;
	r += V4(-2.673e-02, 2.866e-03, 2.480e-03, 2.637e-03) * s0_0;
	r += V4(6.781e-03, -6.186e-02, -7.815e-01, 1.348e-02) * s0_1;
	r += V4(4.130e-02, 3.024e-02, -3.000e-06, -4.033e-03) * s0_2;
	r += V4(2.479e-02, 8.142e-02, -3.431e-03, -5.400e-04) * s0_3;
	r += V4(7.285e-01, 2.997e-02, 7.793e-01, -6.948e-02) * s0_4;
	r += V4(-2.915e-01, -5.953e-01, -2.243e-03, 6.624e-03) * s0_5;
	r += V4(5.515e-03, -5.547e-02, 2.081e-03, -5.255e-01) * s0_6;
	r += V4(8.319e-04, 5.883e-01, 3.038e-03, 5.564e-01) * s0_7;
	r += V4(-4.885e-01, -2.302e-02, 1.582e-03, 2.753e-02) * s0_8;
	r += V4(3.704e-04, 5.071e-04, 1.969e-04, 9.918e-03);
	return r;
}
float4 f1(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	V4 r = 0.0;
	r += V4(6.289e-03, -6.278e-02, 3.238e-01, 4.666e-02) * s0_0;
	r += V4(-1.072e-02, -5.156e-03, -1.655e-01, -1.518e-01) * s0_1;
	r += V4(2.247e-01, -5.154e-03, -2.457e-02, -2.059e-02) * s0_2;
	r += V4(5.156e-03, 5.215e-01, 1.418e-02, -6.472e-02) * s0_3;
	r += V4(1.059e-02, -1.081e-01, -2.605e-02, -3.406e-01) * s0_4;
	r += V4(-3.871e-02, 7.562e-03, -1.540e-02, 6.681e-03) * s0_5;
	r += V4(-1.228e-02, -9.612e-02, -2.134e-02, -2.957e-02) * s0_6;
	r += V4(8.992e-04, -2.103e-02, 4.413e-03, 3.749e-02) * s0_7;
	r += V4(-3.910e-03, 5.323e-04, 9.730e-03, -8.069e-02) * s0_8;
	r += V4(2.044e-02, 9.904e-02, -1.090e-02, 2.717e-02);
	return r;
}
void Pass2(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	min16float s0_0 = l0(-1.0, -1.0);
	min16float s0_1 = l0(0.0, -1.0);
	min16float s0_2 = l0(1.0, -1.0);
	min16float s0_3 = l0(-1.0, 0.0);
	min16float s0_4 = l0(0.0, 0.0);
	min16float s0_5 = l0(1.0, 0.0);
	min16float s0_6 = l0(-1.0, 1.0);
	min16float s0_7 = l0(0.0, 1.0);
	min16float s0_8 = l0(1.0, 1.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
}
//!PASS 3
//!DESC CuNNy-6x8C-CHROMA-NVL-conv1
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2, t3
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-1.566e-01, 1.426e-03, -2.657e-02, 3.258e-02, -1.329e-02, 3.160e-01, -6.736e-02, 5.478e-01, -1.359e-02, -4.750e-02, -5.932e-02, 5.189e-02, 3.585e-02, 2.108e-01, 5.602e-02, 1.513e-01));
	r += mul(s0_1, M4(1.918e-01, -9.828e-02, 5.822e-02, -2.987e-01, -3.564e-01, -1.292e-02, -7.645e-02, 1.459e-01, 1.897e-02, 3.059e-02, -6.266e-02, 1.031e-01, -8.578e-02, -9.355e-02, -6.649e-02, 9.867e-02));
	r += mul(s0_2, M4(1.113e-01, 5.544e-02, 5.381e-04, 6.027e-02, -2.707e-02, -9.158e-02, 1.210e-02, 3.234e-02, 3.688e-02, -4.163e-02, 8.189e-02, -1.016e-01, 8.256e-01, -2.238e-02, -2.073e-01, -1.666e-01));
	r += mul(s0_3, M4(-3.313e-01, 4.292e-01, 6.687e-01, -1.026e-02, 4.389e-01, 3.153e-01, 2.029e-01, -1.087e-01, 3.798e-02, 1.966e-01, 9.524e-02, -1.431e-01, 3.763e-03, -1.238e-01, -9.684e-02, 2.388e-02));
	r += mul(s0_4, M4(-1.227e+00, -3.507e-01, 1.519e-01, 4.733e-02, 3.277e-01, -1.038e-01, -1.386e-01, 4.311e-02, -2.712e-01, -6.921e-01, 5.718e-02, 1.036e+00, 1.528e-01, 2.390e-01, -7.736e-02, 1.468e-01));
	r += mul(s0_5, M4(1.562e-01, -5.631e-03, -3.810e-02, -1.527e-02, -3.875e-01, -8.215e-02, 1.103e-01, -5.105e-03, 6.270e-01, -1.019e-01, -7.690e-02, -4.462e-02, -5.220e-01, -2.276e-01, 3.538e-01, -1.060e-02));
	r += mul(s0_6, M4(-9.138e-03, 7.914e-02, 3.007e-01, -2.636e-02, 6.199e-02, -2.771e-02, -1.654e-01, 1.293e-01, -6.312e-02, 4.414e-01, -2.938e-02, 1.888e-02, 3.085e-04, 6.770e-02, 4.546e-02, -2.897e-02));
	r += mul(s0_7, M4(-2.390e-02, 3.041e-02, -1.614e-01, 1.770e-01, 5.707e-01, 4.120e-02, -1.466e-01, -2.530e-02, -2.200e-01, -3.311e-01, 6.876e-01, 6.370e-02, -1.171e-01, -9.255e-02, 1.043e-01, 9.077e-02));
	r += mul(s0_8, M4(9.301e-02, -8.389e-02, -1.649e-02, -2.193e-02, -1.157e-01, 7.360e-03, 1.240e-02, -1.871e-02, -7.719e-02, -4.801e-02, -1.798e-01, 4.743e-02, 1.223e-01, -7.023e-03, -5.434e-02, 2.506e-02));
	r += mul(s1_0, M4(-9.193e-02, 3.563e-01, 9.145e-02, -3.066e-01, -2.875e-01, 2.207e-01, 1.348e-01, 2.228e-01, -5.093e-02, -4.300e-02, 4.363e-02, -3.914e-02, 3.395e-03, 2.680e-02, 1.402e-01, 2.427e-03));
	r += mul(s1_1, M4(-1.584e-01, 6.865e-02, 1.277e-01, -2.741e-01, 3.937e-01, -1.810e-01, 6.234e-02, 4.050e-02, -1.520e-02, 5.517e-02, -2.973e-02, -2.447e-02, -4.922e-01, 6.582e-01, 6.045e-01, 5.625e-01));
	r += mul(s1_2, M4(2.127e-01, 6.669e-02, -5.780e-02, 2.213e-02, -3.358e-02, -1.047e-01, 1.204e-01, 5.654e-02, 8.247e-02, -4.945e-02, 6.329e-02, -4.658e-02, -6.179e-01, -4.108e-02, 3.054e-01, 1.482e-02));
	r += mul(s1_3, M4(2.075e-01, 5.058e-01, -1.474e-01, -4.244e-02, -1.405e-01, 4.137e-01, 5.002e-02, -1.175e-01, -9.155e-02, 4.492e-02, 2.347e-01, -1.573e-01, -4.447e-02, -1.071e-01, -1.798e-01, -6.785e-02));
	r += mul(s1_4, M4(1.480e-01, -4.016e-01, -1.990e-01, 1.949e-01, -7.144e-01, -7.136e-02, -3.308e-02, -1.158e-01, -2.113e-01, 3.581e-02, -3.683e-01, -3.418e-01, 4.117e-01, 2.691e-01, -4.955e-01, -2.700e-02));
	r += mul(s1_5, M4(1.512e-01, -2.624e-02, -6.243e-02, -1.401e-02, -4.150e-01, -2.538e-02, 6.259e-02, -8.115e-03, 5.666e-01, -4.923e-02, 4.686e-02, -8.742e-02, 2.001e-01, -1.790e-01, -1.477e-02, 1.431e-01));
	r += mul(s1_6, M4(2.742e-01, -2.792e-02, -1.098e-01, 1.443e-01, 2.904e-02, -7.436e-02, 8.414e-02, 1.161e-01, 8.787e-02, 6.823e-03, 7.788e-02, 6.916e-03, 2.981e-02, 1.431e-01, 9.688e-02, 3.356e-02));
	r += mul(s1_7, M4(1.943e-01, -3.131e-02, -3.018e-02, 8.074e-02, 1.868e-01, 9.443e-02, -1.205e-01, 6.976e-03, 3.533e-01, 1.214e+00, -2.168e+00, -1.642e-01, 1.170e-01, -1.079e-02, 1.223e-01, 1.321e-01));
	r += mul(s1_8, M4(8.047e-02, -4.580e-02, 4.660e-02, 9.840e-03, -1.391e-01, -2.926e-02, -2.536e-02, 7.127e-04, -5.608e-01, 2.658e-01, -2.192e-01, 1.043e-01, 2.606e-01, 3.329e-02, -4.676e-02, 1.804e-01));
	r += mul(s2_0, M4(-3.535e-02, -2.259e-01, 1.730e-02, -2.503e-01, 3.242e-02, -4.610e-02, 5.535e-02, -1.504e-01, -1.093e-01, -2.600e-02, -4.021e-02, -2.070e-01, 4.715e-02, -3.336e-02, -3.091e-03, -6.981e-02));
	r += mul(s2_1, M4(-6.253e-02, 1.499e-01, 5.038e-03, 1.363e-01, 1.132e-01, 1.468e-01, 1.557e-01, 1.782e-02, -1.009e-02, 1.139e-02, -1.578e-01, 5.095e-02, -1.652e-01, 5.768e-02, -4.392e-02, 1.657e-01));
	r += mul(s2_2, M4(2.272e-02, -1.095e-01, 8.586e-02, -6.223e-02, -5.401e-02, 4.681e-02, 1.206e-01, 5.535e-02, -1.862e-01, -3.536e-01, -3.656e-01, 1.471e-01, -1.499e-01, 2.464e-01, 7.589e-02, 4.177e-02));
	r += mul(s2_3, M4(7.695e-02, -5.861e-02, 1.327e-01, 1.868e-01, -1.227e-02, 1.945e-02, 1.141e-01, 2.265e-01, 2.258e-01, 1.489e-03, -4.992e-02, 4.785e-03, 9.390e-02, -2.790e-01, -1.485e-02, 1.285e-01));
	r += mul(s2_4, M4(2.339e-01, 1.893e-01, -6.580e-03, -4.188e-02, -5.752e-02, 4.925e-02, -9.571e-02, 1.314e-01, 8.392e-02, 2.241e-01, 3.043e-01, 1.331e-01, 1.628e-01, -1.465e-01, -1.001e-02, 1.162e-01));
	r += mul(s2_5, M4(1.507e-02, -3.743e-02, 7.101e-03, -9.647e-03, -3.653e-01, -2.429e-01, 5.910e-02, 3.482e-02, -6.264e-02, 7.355e-02, 1.448e-01, -1.360e-01, 2.798e-02, 1.465e-01, 7.035e-02, 1.131e-01));
	r += mul(s2_6, M4(2.187e-02, 2.654e-01, -1.666e-01, 1.766e-01, -4.041e-02, -1.662e-02, -8.573e-02, -2.656e-02, -8.341e-02, 2.147e-02, -2.484e-02, 5.584e-02, -2.233e-02, -2.218e-02, -1.553e-01, -1.422e-01));
	r += mul(s2_7, M4(-8.483e-02, 2.343e-02, 2.455e-01, 2.185e-02, 6.841e-02, 2.027e-01, -3.096e-01, -4.208e-02, 1.646e-01, 2.876e-01, 2.615e-01, 4.922e-01, -1.090e-01, -6.475e-02, -3.017e-02, -1.332e-01));
	r += mul(s2_8, M4(2.548e-02, -7.642e-02, -1.259e-01, 1.233e-01, 1.953e-02, 1.305e-01, -1.359e-01, 1.113e-01, 4.748e-02, 2.611e-01, 1.991e-01, 4.062e-01, 9.548e-03, 2.389e-01, 1.131e-01, -1.534e-02));
	r += mul(s3_0, M4(-1.120e-03, -3.553e-02, -8.716e-03, -1.787e-01, -3.705e-02, -3.323e-01, 2.334e-01, -4.239e-01, -6.605e-02, 3.983e-02, 1.144e-01, -3.454e-02, 1.057e-01, -2.360e-02, -1.103e-02, -5.319e-02));
	r += mul(s3_1, M4(1.836e-02, 3.741e-02, 1.384e-01, 1.804e-02, 7.551e-02, 3.665e-01, 4.592e-01, -7.353e-01, 2.477e-02, -8.160e-02, -2.685e-03, 1.370e-01, -3.812e-01, 9.914e-02, -6.914e-02, -4.251e-02));
	r += mul(s3_2, M4(4.775e-02, -1.230e-02, 7.048e-02, 8.935e-02, 4.437e-01, 4.641e-01, 7.221e-02, -8.271e-01, -9.955e-02, 4.927e-02, 6.683e-02, 2.482e-03, -8.842e-02, 4.363e-02, -1.922e-02, 6.297e-02));
	r += mul(s3_3, M4(-8.846e-02, -1.587e-01, -1.627e-01, -2.228e-01, 1.808e-01, -3.621e-01, 1.104e-01, 2.096e-01, 1.302e-01, 1.962e-01, -1.150e-01, -9.769e-02, 7.640e-02, -1.529e-01, 1.069e-01, 1.187e-01));
	r += mul(s3_4, M4(2.280e-01, 2.978e-01, -2.057e-01, 2.822e-03, 4.104e-01, 5.356e-01, 5.403e-02, -9.240e-02, 1.451e-01, 1.205e-01, 4.745e-03, 2.476e-01, 5.766e-01, -1.402e-01, 1.488e-01, 2.388e-01));
	r += mul(s3_5, M4(6.243e-02, -7.172e-02, 6.699e-02, 1.315e-01, -6.184e-01, -1.051e+00, 7.043e-01, -2.605e-01, -2.750e-01, 3.208e-02, -2.975e-01, 1.479e-01, -1.900e-01, 2.667e-01, 6.547e-02, 1.063e-01));
	r += mul(s3_6, M4(-5.164e-02, -5.028e-03, 7.326e-02, 1.765e-01, 1.647e-01, -3.653e-01, 2.754e-01, 3.598e-03, -2.897e-02, -2.875e-02, -6.116e-02, 4.278e-02, 1.474e-01, -2.356e-01, -2.602e-01, -1.476e-01));
	r += mul(s3_7, M4(-1.140e-02, 1.061e-01, -4.488e-02, -3.810e-02, 5.184e-01, 9.825e-01, -5.677e-01, -5.945e-02, 1.678e-02, -8.484e-02, 4.495e-02, -1.139e-01, -3.549e-01, 1.968e-01, 4.659e-02, 1.409e-01));
	r += mul(s3_8, M4(-1.097e-01, -9.423e-02, 1.695e-01, 1.409e-01, -6.007e-02, 2.036e-01, 3.001e-01, -7.017e-02, -6.017e-03, -2.383e-01, 2.288e-01, -2.285e-01, 4.173e-02, 1.293e-01, 1.490e-02, -1.528e-01));
	r += V4(2.471e-02, -3.552e-02, -1.312e-02, -8.732e-02);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(1.570e-01, -6.801e-02, 3.512e-01, -2.266e-01, 1.970e-01, 8.764e-02, -2.873e-01, 3.851e-01, -3.365e-03, 7.191e-03, 8.719e-02, -6.139e-02, 2.385e-01, 4.810e-03, 8.780e-02, 1.304e-01));
	r += mul(s0_1, M4(-1.722e-01, -1.106e-01, 5.560e-02, -7.565e-01, 1.032e-01, 1.642e-01, -1.752e-01, 3.350e-01, 3.312e-02, 8.571e-02, 9.277e-02, -1.999e-01, -2.261e-01, 1.212e-01, -2.913e-01, -2.063e-01));
	r += mul(s0_2, M4(-2.851e-02, -4.623e-02, 2.556e-02, -1.058e-01, -4.900e-02, 1.524e-02, -2.025e-01, 1.765e-02, -2.740e-03, 5.663e-02, -8.012e-03, 1.643e-01, -4.422e-01, -6.661e-02, -3.745e-01, -5.087e-01));
	r += mul(s0_3, M4(1.098e-01, -1.636e-01, 2.924e-01, -4.722e-01, 3.919e-01, -1.271e-01, 4.790e-01, 5.108e-01, 3.380e-01, 3.109e-02, 8.853e-02, 1.881e-01, -2.818e-01, 1.893e-02, 1.414e-01, -1.084e-01));
	r += mul(s0_4, M4(-2.893e-01, 5.219e-01, -3.015e-01, -2.875e-01, 1.646e-01, 4.179e-02, -2.899e-01, 5.641e-01, -6.528e-01, 2.918e-01, 3.169e-01, -1.767e-01, 2.961e-01, -1.771e-01, 2.010e-01, 4.532e-02));
	r += mul(s0_5, M4(-1.527e-01, -4.719e-02, 4.990e-02, -1.864e-01, 1.232e-01, 7.393e-02, 2.087e-01, -1.255e-01, 1.066e-01, 5.750e-02, 1.176e-01, -1.403e-01, 1.629e-01, -5.597e-02, -2.265e-02, -3.820e-01));
	r += mul(s0_6, M4(-2.627e-01, 5.948e-02, -1.660e-01, -1.983e-02, -4.131e-02, 1.266e-01, -2.029e-01, -1.017e-01, -4.015e-02, 1.230e-02, -1.477e-01, 1.656e-01, 3.421e-02, 2.053e-02, -4.523e-02, 4.670e-02));
	r += mul(s0_7, M4(-1.650e-01, -7.357e-02, 2.568e-01, -6.349e-03, 4.700e-03, -2.776e-01, 3.054e-01, 2.921e-01, -1.117e-01, -1.663e+00, 7.084e-01, 4.602e-01, -8.567e-02, 1.968e-01, -8.953e-02, 7.693e-02));
	r += mul(s0_8, M4(2.473e-02, 4.170e-02, 7.471e-03, -2.850e-02, 1.874e-02, 6.198e-02, -1.381e-01, 2.389e-01, 3.338e-02, 4.944e-03, 1.881e-01, -5.884e-02, 1.488e-02, -1.505e-01, 1.634e-01, 1.829e-01));
	r += mul(s1_0, M4(6.453e-01, -3.553e-02, -6.120e-01, 1.267e-01, 8.411e-02, 7.505e-02, 5.027e-01, -2.628e-01, -1.601e-01, -2.353e-02, 1.355e-02, 5.022e-03, 8.479e-02, 3.032e-02, 3.517e-01, -4.116e-03));
	r += mul(s1_1, M4(4.583e-01, -2.030e-02, -5.818e-01, 7.654e-01, -4.561e-01, 2.328e-01, 1.432e-01, -6.148e-01, 7.229e-02, 6.378e-02, -1.557e-01, 6.325e-02, 4.538e-01, -7.760e-02, 5.356e-02, 4.106e-01));
	r += mul(s1_2, M4(-1.655e-02, -8.031e-02, 4.572e-03, -1.497e-01, -1.435e-01, 3.628e-02, -9.860e-02, -1.596e-01, 6.664e-03, -1.886e-05, -4.383e-02, -5.109e-02, -7.031e-03, -4.093e-02, -3.104e-01, -5.732e-02));
	r += mul(s1_3, M4(8.266e-01, -5.066e-02, 7.475e-01, 5.546e-01, 2.162e-01, -2.746e-01, -1.441e-01, -3.663e-01, 1.788e-01, 1.727e-02, 5.004e-01, 2.289e-01, -1.557e-01, 2.450e-02, -5.861e-02, 1.785e-02));
	r += mul(s1_4, M4(-2.927e-01, 3.385e-01, -3.215e-01, 3.597e-01, -2.147e-02, 4.083e-02, 7.904e-03, -4.665e-01, 3.556e-02, 6.733e-01, -5.521e-01, -1.072e-01, 4.579e-02, -2.049e-01, 8.491e-01, -1.816e-01));
	r += mul(s1_5, M4(2.163e-02, -5.861e-02, 1.144e-02, -2.099e-02, 5.582e-02, 5.562e-02, 6.481e-02, -2.088e-02, -1.625e-01, -5.504e-02, -2.474e-01, -3.618e-02, -3.273e-01, -1.468e-01, 1.430e-02, -1.241e-01));
	r += mul(s1_6, M4(8.752e-02, -1.898e-02, 1.430e-01, -2.272e-02, -1.849e-01, 1.326e-01, -7.873e-02, -3.277e-01, -1.464e-01, -1.206e-02, 5.644e-01, 1.268e-01, 7.970e-02, -2.508e-02, 6.550e-02, -5.667e-02));
	r += mul(s1_7, M4(4.611e-03, -8.566e-02, -2.574e-02, 1.622e-01, -4.536e-02, -3.271e-01, 2.960e-01, -2.809e-01, 1.666e-01, -9.114e-02, 8.950e-02, -3.339e-01, -2.893e-01, 1.971e-01, -1.954e-01, -3.961e-02));
	r += mul(s1_8, M4(-3.394e-02, 1.157e-02, -5.926e-02, 1.388e-01, -2.039e-02, 6.101e-02, -9.515e-02, 1.291e-01, -2.757e-01, -7.785e-02, -1.360e-01, 5.541e-02, -1.543e-01, -1.850e-01, 1.109e-01, 1.200e-01));
	r += mul(s2_0, M4(-2.143e-01, 4.018e-02, 1.490e-02, -8.216e-02, -1.046e-02, -2.697e-02, -4.569e-02, -6.424e-02, 3.668e-02, 9.584e-02, 1.382e-01, 1.154e-01, -2.899e-03, -2.435e-01, -2.660e-01, -9.470e-02));
	r += mul(s2_1, M4(-9.438e-03, -3.382e-03, -3.576e-03, -5.239e-02, 3.618e-02, -8.465e-02, -5.217e-02, 5.554e-02, 1.779e-01, -5.307e-02, 2.936e-01, -3.575e-02, 2.420e-02, -3.052e-01, 2.859e-02, 8.850e-02));
	r += mul(s2_2, M4(9.090e-02, 1.892e-03, -7.936e-02, 1.173e-01, -2.947e-02, 3.084e-02, -1.833e-01, 1.900e-02, 2.606e-01, 8.297e-02, 3.093e-01, -1.796e-01, -9.388e-05, -1.698e-01, 1.832e-01, -7.314e-03));
	r += mul(s2_3, M4(2.100e-03, 9.631e-02, -3.246e-01, 9.989e-02, 2.120e-01, 4.709e-02, 1.497e-01, 1.654e-01, 1.092e-01, 1.525e-02, 4.884e-01, 8.018e-02, -1.643e-02, -1.162e-01, -1.823e-01, -1.479e-01));
	r += mul(s2_4, M4(3.535e-02, 4.061e-02, 1.774e-01, -1.080e-01, 2.896e-01, -6.766e-02, 3.135e-01, -7.641e-02, -1.386e-01, -5.253e-02, 2.441e-01, 1.628e-01, -4.499e-02, 7.486e-01, 1.987e-01, 1.649e-01));
	r += mul(s2_5, M4(4.628e-02, -6.056e-02, 8.062e-03, 9.845e-02, 1.168e-01, 3.803e-01, 8.554e-02, 3.439e-02, 3.157e-01, 2.413e-01, -1.791e-01, 3.047e-01, 1.466e-01, -2.360e-01, 1.639e-01, -1.259e-02));
	r += mul(s2_6, M4(1.462e-01, 6.555e-02, 1.851e-01, -1.567e-01, 1.107e-03, -6.042e-02, -1.235e-01, -4.342e-02, -2.012e-01, 1.311e-01, -6.762e-02, -4.128e-01, -1.284e-01, -3.066e-01, -1.738e-01, -1.738e-01));
	r += mul(s2_7, M4(-5.913e-02, 4.410e-02, -3.969e-02, -2.412e-01, -2.696e-02, -1.342e-01, -1.195e-02, -1.869e-03, -5.129e-01, 4.642e-02, -4.055e-01, -4.187e-01, 5.066e-02, -1.439e-01, 2.161e-02, 7.785e-02));
	r += mul(s2_8, M4(-2.024e-01, -1.010e-01, -1.064e-02, 3.378e-02, -1.592e-01, 1.065e-01, 7.700e-02, 8.140e-02, 1.918e-01, 5.048e-02, -3.417e-01, 5.129e-02, 1.170e-01, -3.444e-01, 8.727e-02, 1.338e-01));
	r += mul(s3_0, M4(-1.084e-01, 6.321e-02, -4.966e-02, -1.778e-01, -1.955e-01, -6.445e-02, 2.184e-01, 1.991e-02, -8.165e-02, 2.525e-02, 8.814e-02, -4.924e-03, 1.984e-01, -2.797e-01, -2.945e-01, 1.919e-01));
	r += mul(s3_1, M4(-4.536e-02, -1.318e-02, 2.075e-02, 8.985e-03, -1.930e-02, -2.605e-01, -1.097e-02, 5.183e-01, -1.152e-01, -1.111e-01, -1.981e-02, -6.954e-02, -1.637e-01, -2.816e-01, -1.844e-01, -9.662e-02));
	r += mul(s3_2, M4(4.845e-04, 6.678e-03, -2.201e-01, 1.662e-01, -4.088e-02, 2.749e-01, -5.723e-01, -3.154e-01, -1.403e-01, -5.037e-03, -5.165e-01, 1.493e-01, -6.096e-02, -1.999e-01, 2.190e-01, -2.866e-02));
	r += mul(s3_3, M4(-1.691e-01, 7.333e-01, 1.253e-01, -1.142e-01, 1.345e-01, -2.619e-02, 4.652e-01, 1.531e-01, 4.666e-02, -5.155e-02, 2.199e-01, 6.405e-02, -1.109e-01, -1.494e-01, -1.133e-01, -1.620e-01));
	r += mul(s3_4, M4(4.250e-01, 1.045e-01, -1.110e-01, 1.349e-01, 5.919e-01, -2.393e-01, 4.274e-02, 3.982e-02, 7.919e-02, -1.313e-01, -7.631e-02, -1.702e-01, -1.217e-01, -3.173e-01, 3.846e-01, -1.292e-01));
	r += mul(s3_5, M4(-1.707e-01, -2.741e-02, -2.053e-03, -1.369e-01, -1.438e+00, -1.889e+00, 4.485e-01, 8.942e-01, 5.996e-01, -6.726e-02, 9.739e-02, 3.631e-01, 1.457e-01, -3.700e-01, 1.692e-01, 2.736e-01));
	r += mul(s3_6, M4(-1.260e-01, -2.609e+00, 1.182e-01, 1.735e-01, -2.987e-02, -9.912e-02, 2.743e-01, -2.263e-01, -1.040e-01, 3.977e-04, 7.190e-03, -1.758e-01, 3.534e-02, -1.813e-01, -3.188e-02, -3.563e-01));
	r += mul(s3_7, M4(2.248e-01, 2.824e-01, 1.504e-01, -5.871e-02, -2.231e-01, -1.886e-01, -9.146e-03, -2.093e-01, 1.753e-01, -1.826e-01, -4.168e-02, -2.192e-01, 9.038e-02, -3.270e-01, -1.561e-01, 5.558e-02));
	r += mul(s3_8, M4(-1.195e-01, -1.105e-01, 3.137e-03, -1.572e-01, -1.059e+00, 3.231e-01, -6.817e-02, 5.141e-01, -4.267e-01, -6.815e-01, 1.015e-01, 2.630e-01, 1.666e-01, -2.603e-01, 1.536e-02, 2.156e-01));
	r += V4(-2.364e-02, -1.310e-01, -1.995e-02, 4.807e-04);
	return r;
}
void Pass3(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t3[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 4
//!DESC CuNNy-6x8C-CHROMA-NVL-conv2
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t2, t3
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t2, float2(x, y))
#define l1(x, y) O(t3, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-2.130e-01, -3.962e-04, -2.539e-01, 1.154e-01, 1.530e-01, -3.196e-01, -1.352e-01, 3.622e-02, 3.488e-02, 1.020e-02, -1.810e-02, -2.058e-02, 2.827e-02, 5.129e-02, 6.516e-02, -1.051e-02));
	r += mul(s0_1, M4(-6.097e-01, -8.171e-02, -1.895e-01, -9.862e-02, -2.723e-01, -4.708e-01, -2.332e-01, 6.072e-02, -4.234e-02, 1.687e-01, -1.591e-01, 2.018e-02, -5.288e-02, -9.978e-02, 5.957e-02, 8.457e-02));
	r += mul(s0_2, M4(1.734e-01, 4.895e-02, 2.701e-02, -1.390e-01, 3.469e-01, -3.103e-01, 2.497e-01, -5.226e-01, 1.614e-01, -3.133e-02, 2.580e-01, 1.541e-02, -5.981e-02, -1.776e-02, -3.401e-02, -4.691e-02));
	r += mul(s0_3, M4(-2.502e-01, -1.431e-01, -1.393e-01, -6.675e-02, 5.155e-02, 6.024e-02, -3.326e-04, -2.051e-03, -8.264e-02, 4.231e-02, -5.481e-04, 3.222e-02, -3.353e-01, 3.568e-02, 1.415e-02, 3.679e-02));
	r += mul(s0_4, M4(-1.304e-01, -5.621e-02, 1.569e-01, -3.107e-01, 5.841e-01, 1.288e-01, -6.469e-01, -2.014e-01, 2.476e-03, -4.472e-02, 2.037e-01, -1.821e-01, -2.825e-04, -6.240e-02, -2.941e-02, -1.754e-01));
	r += mul(s0_5, M4(-2.485e-02, -7.550e-02, 7.234e-02, 2.926e-01, -5.255e-01, -4.634e-02, -5.160e-02, 3.776e-01, 1.141e-01, 1.180e-01, -2.183e-01, 4.550e-01, -1.425e-01, -9.415e-02, -4.236e-01, 1.525e-01));
	r += mul(s0_6, M4(1.872e-01, -1.083e-01, 7.712e-02, -7.056e-02, 1.062e-02, 1.268e-01, 6.675e-02, 2.900e-02, 4.874e-02, -5.039e-03, 4.214e-02, -6.173e-02, -2.931e-01, -1.369e-01, 5.813e-02, -3.793e-02));
	r += mul(s0_7, M4(-8.495e-03, 2.419e-01, -1.170e-01, 8.049e-02, 6.209e-02, 5.217e-01, 1.596e-01, 4.901e-03, 1.071e-01, 1.855e-01, 5.654e-02, 7.723e-02, 6.065e-02, 5.533e-02, 1.100e-01, 1.148e-01));
	r += mul(s0_8, M4(-1.668e-02, 1.021e-01, -1.316e-01, 1.106e-02, -2.484e-01, -6.548e-02, -2.276e-01, -3.241e-02, -1.067e-01, 4.091e-02, -7.780e-02, 5.738e-02, -4.500e-02, 1.829e-01, -2.349e-01, -2.739e-01));
	r += mul(s1_0, M4(7.505e-02, 2.039e-04, -8.721e-02, -8.884e-02, 2.841e-01, -1.640e-01, -1.168e-01, 1.954e-02, -4.844e-01, -4.357e-02, -1.386e-01, -5.760e-02, 1.689e-01, 6.317e-02, 3.192e-02, -4.140e-02));
	r += mul(s1_1, M4(-2.743e-01, -9.627e-02, -3.614e-01, -2.648e-02, -1.237e-01, -3.642e-02, -9.442e-02, 2.467e-02, 4.589e-01, 2.610e-01, 2.380e-01, -2.171e-01, -2.725e-01, 1.429e-01, -1.522e-01, -3.762e-02));
	r += mul(s1_2, M4(1.604e-01, 5.196e-02, 1.021e-01, -4.659e-02, 5.995e-02, 7.784e-02, 1.733e-01, 4.458e-02, -1.017e-01, -2.917e-02, 1.230e-01, 1.089e-01, -7.841e-02, 7.882e-02, 1.926e-01, -8.434e-02));
	r += mul(s1_3, M4(3.071e-01, 1.938e-03, -1.004e-01, 2.646e-02, -2.284e-02, -1.013e-01, -1.538e-01, 3.350e-02, -2.002e-01, -1.414e-01, 2.663e-02, -4.179e-02, 1.044e-03, 1.034e-01, 3.341e-02, 3.628e-02));
	r += mul(s1_4, M4(6.110e-02, -5.239e-02, -3.080e-01, -3.094e-01, 4.917e-02, 2.312e-01, 1.010e-01, -3.235e-01, 3.204e-01, -2.347e-01, 8.288e-01, -1.932e-01, -5.568e-01, -2.007e-01, -4.546e-02, 6.537e-02));
	r += mul(s1_5, M4(-6.067e-02, 9.211e-02, 1.381e-01, 2.153e-01, -7.252e-02, -1.948e-03, -8.519e-02, 7.852e-01, -2.645e-01, 2.007e-01, 4.405e-02, 6.703e-01, 4.561e-01, -4.110e-02, 1.064e-01, 2.261e-01));
	r += mul(s1_6, M4(1.111e-01, -5.450e-03, -9.668e-02, -4.039e-02, -4.622e-02, -7.132e-02, -3.547e-03, -3.534e-02, -9.165e-02, 2.072e-01, 8.748e-02, -7.861e-02, 4.393e-02, -2.803e-01, -8.270e-02, 7.798e-02));
	r += mul(s1_7, M4(-1.621e-01, -9.325e-03, -1.448e-01, 1.509e-01, 4.062e-01, 9.022e-02, 9.140e-02, -2.591e-02, 3.440e-01, 6.689e-03, -2.478e-02, -2.769e-02, -1.349e-01, 2.501e-02, 4.090e-02, -7.717e-02));
	r += mul(s1_8, M4(-4.988e-02, -9.109e-02, -2.670e-02, 4.623e-02, -2.979e-01, 4.312e-02, -1.797e-01, 1.548e-01, -2.839e-01, -1.998e-01, -3.925e-01, 2.195e-02, 1.496e-01, 3.629e-02, -6.338e-03, -1.333e-01));
	r += mul(s2_0, M4(-3.632e-02, 4.866e-02, 7.135e-02, -2.827e-03, -4.192e-01, 4.411e-01, -1.529e-01, 8.949e-02, 2.117e-01, -3.267e-02, -7.570e-02, -5.068e-03, -1.119e-01, -6.703e-02, -4.931e-02, -6.744e-02));
	r += mul(s2_1, M4(-1.407e-01, 5.155e-02, 3.809e-01, -9.162e-02, 4.926e-01, 5.280e-01, 9.456e-01, -6.152e-01, -5.865e-01, -2.003e-01, -2.359e-01, 6.767e-02, -4.359e-02, -1.868e-01, -3.758e-01, -4.000e-02));
	r += mul(s2_2, M4(1.707e-01, 5.882e-02, 4.796e-03, 1.866e-01, -5.527e-01, -2.265e-02, -1.824e-01, 1.896e-01, 3.464e-01, -1.448e-01, 5.484e-02, -6.339e-02, -1.440e-01, 5.751e-02, -1.175e-01, -1.475e-01));
	r += mul(s2_3, M4(-1.528e-01, -4.657e-03, 1.100e-01, 2.182e-03, -1.003e+00, 2.516e-01, 2.225e-01, -4.124e-01, -7.324e-02, 3.098e-02, -7.462e-02, 3.837e-02, -1.148e-01, -2.158e-01, -1.777e-01, -7.428e-03));
	r += mul(s2_4, M4(3.438e-01, 1.967e-01, 2.138e-01, -4.266e-02, -6.731e-01, -1.061e+00, -3.626e+00, 1.067e+00, -8.980e-02, -1.229e-01, 8.900e-02, -2.090e-03, 3.757e-01, 4.194e-02, 7.657e-03, 1.991e-01));
	r += mul(s2_5, M4(-1.308e-01, -9.167e-02, -1.137e-01, 7.729e-01, 2.167e-01, 1.673e-02, -9.955e-01, -1.711e+00, 1.327e-01, -2.705e-01, 8.766e-02, 5.848e-01, -3.804e-02, -4.806e-01, -3.272e-01, 9.309e-02));
	r += mul(s2_6, M4(8.880e-02, 4.745e-02, -7.814e-02, -7.102e-02, 1.137e-01, -2.592e-01, -1.130e-01, -1.529e-01, -6.288e-02, 6.853e-02, 4.730e-02, 1.079e-02, -6.051e-02, -3.706e-02, -7.569e-02, -1.133e-02));
	r += mul(s2_7, M4(-8.097e-02, -4.745e-02, -2.563e-02, 1.689e-01, -3.047e-01, -2.191e-01, -1.983e+00, -8.747e-03, 7.452e-02, 3.235e-01, 1.900e-01, -6.712e-02, 8.497e-02, -1.764e-01, 2.346e-02, 5.180e-02));
	r += mul(s2_8, M4(-1.416e-01, 1.713e-01, -4.578e-01, -6.383e-02, 3.185e-01, 2.683e-01, 5.398e-01, 4.531e-01, -7.876e-03, -3.405e-02, -1.609e-02, 1.205e-02, -4.907e-02, 1.714e-02, -1.018e-01, -5.539e-02));
	r += mul(s3_0, M4(-5.994e-02, 9.280e-02, 9.193e-02, -1.450e-02, 6.456e-02, 4.528e-02, 4.051e-02, -5.017e-02, -4.699e-02, -4.521e-03, -2.879e-02, 6.015e-03, -3.877e-02, -6.027e-02, -1.432e-01, 8.420e-02));
	r += mul(s3_1, M4(-2.593e-02, -1.519e-01, 3.871e-02, 9.644e-02, 1.681e-01, -4.602e-02, 3.742e-02, 9.504e-02, -2.686e-01, 6.763e-02, -1.127e-01, 1.606e-01, -1.889e-01, 3.478e-02, -1.600e-01, 3.638e-02));
	r += mul(s3_2, M4(-1.559e-02, -2.355e-01, -1.350e-01, 1.460e-01, -6.862e-02, -2.726e-02, -1.048e-01, -7.792e-02, 1.414e-01, 2.805e-01, 3.529e-01, -1.025e-01, 1.739e-01, 1.569e-01, 8.300e-02, -1.889e-01));
	r += mul(s3_3, M4(-1.662e-01, 1.101e-02, 9.616e-02, -5.818e-03, -1.537e-01, 5.795e-02, 1.356e-01, -5.536e-02, -3.678e-02, 7.200e-02, 9.326e-02, -2.275e-02, 1.409e-01, 6.602e-02, -2.087e-03, 4.587e-02));
	r += mul(s3_4, M4(1.058e-01, -1.781e-01, -6.869e-02, -5.147e-02, -3.397e-02, -6.702e-02, -1.422e-01, 2.823e-01, -3.181e-03, 7.271e-01, 3.033e-01, 3.607e-02, 1.133e-01, -9.543e-02, 4.099e-01, 1.265e-01));
	r += mul(s3_5, M4(-6.498e-02, -2.200e-01, -1.767e-01, -1.752e-02, 3.331e-02, -1.686e-02, -8.659e-02, -1.371e-01, -1.595e-01, 2.848e-01, 1.099e-01, 3.567e-01, -1.087e-01, -4.546e-02, 7.016e-02, 3.655e-01));
	r += mul(s3_6, M4(1.015e-01, 1.218e-01, -1.432e-02, 2.648e-02, 7.165e-02, -3.820e-02, -8.513e-02, -1.793e-02, -9.867e-02, -1.547e-02, 8.973e-02, 4.954e-03, -9.679e-02, -1.879e-01, 2.873e-02, -5.140e-02));
	r += mul(s3_7, M4(-1.807e-01, -3.955e-01, -1.170e-01, 1.583e-01, -1.226e-01, 1.764e-01, -1.989e-02, 1.137e-02, -5.284e-02, 4.860e-01, 2.083e-01, 1.191e-02, 1.388e-01, -2.316e-01, 6.699e-02, -7.069e-02));
	r += mul(s3_8, M4(2.002e-01, -2.592e-01, -2.837e-01, -2.241e-02, 3.574e-02, -8.632e-02, 2.445e-01, -3.482e-02, -1.730e-01, 4.053e-01, 3.057e-01, 8.675e-02, -3.698e-02, -7.554e-02, -1.747e-01, -5.791e-02));
	r += V4(-1.355e-02, 6.354e-03, 2.509e-02, -4.503e-03);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-1.138e-01, -2.144e-01, 6.599e-03, -9.648e-03, 2.029e-01, 1.220e-01, -7.549e-02, -5.361e-02, 1.518e-02, 4.603e-02, 7.274e-02, -4.407e-02, -2.255e-02, -5.242e-02, -2.063e-02, -3.911e-02));
	r += mul(s0_1, M4(9.654e-02, -6.520e-02, -2.259e-01, 2.643e-01, 1.391e-01, 3.803e-01, 4.818e-02, 1.487e-01, -3.535e-01, -9.861e-02, -4.249e-02, 9.604e-02, 1.479e-01, -1.775e-01, -1.962e-01, 1.117e-01));
	r += mul(s0_2, M4(2.732e-03, -2.720e-02, 7.750e-03, -2.212e-03, 1.526e-01, 3.499e-01, -1.181e-01, 7.256e-02, 1.692e-01, 1.459e-01, 2.740e-02, -2.138e-01, 1.033e-01, -1.517e-01, 5.283e-02, 3.179e-02));
	r += mul(s0_3, M4(-7.934e-02, 1.992e-01, -1.389e-01, 1.176e-01, -1.089e-02, -1.636e-01, -5.156e-02, 3.986e-01, -5.616e-02, -1.572e-01, -1.024e-01, 5.312e-03, -3.209e-02, -1.595e-01, 1.005e-01, 5.183e-02));
	r += mul(s0_4, M4(-3.528e-01, 7.317e-01, -6.017e-01, -5.727e-02, 9.582e-02, -1.419e-01, -4.552e-01, 6.053e-01, -9.761e-02, 4.229e-01, 8.903e-02, -1.121e-01, 1.761e-01, 1.386e-01, 1.236e-01, -2.387e-01));
	r += mul(s0_5, M4(-2.158e-03, -1.167e-01, -3.464e-04, 5.239e-02, -3.799e-03, -2.713e-03, -2.032e-01, -9.599e-03, -1.984e-02, -2.873e-01, 3.348e-01, -1.775e-01, -1.552e-01, 2.645e-01, -8.420e-02, 2.374e-01));
	r += mul(s0_6, M4(8.937e-03, 7.738e-02, -4.897e-02, 3.279e-04, -9.633e-02, 6.758e-02, 3.652e-02, 3.377e-02, 8.172e-02, -1.478e-02, 1.634e-02, 3.362e-02, -9.664e-02, 1.909e-01, 2.548e-02, -1.529e-01));
	r += mul(s0_7, M4(1.152e-02, -2.495e-01, 4.574e-02, -1.327e-01, 3.748e-03, -7.454e-03, -2.978e-01, -7.037e-02, 1.168e-01, -1.119e-01, 2.078e-02, -1.747e-01, 2.113e-01, -1.956e-01, -3.818e-01, 4.992e-01));
	r += mul(s0_8, M4(2.259e-02, -1.163e-01, 1.544e-02, -1.561e-02, -2.231e-02, 2.981e-01, -1.037e-01, -2.580e-01, 6.398e-02, -2.535e-02, 5.036e-02, -2.250e-01, -6.954e-02, 2.861e-01, -2.679e-01, 2.325e-01));
	r += mul(s1_0, M4(2.502e-02, 3.353e-03, -9.641e-02, -9.554e-02, 2.538e-01, -1.186e-01, -5.266e-03, -1.124e-01, -5.096e-02, -1.212e-01, 5.402e-02, 1.939e-01, -4.322e-02, -4.534e-02, 3.433e-02, -2.662e-02));
	r += mul(s1_1, M4(4.017e-02, -1.203e-01, -9.633e-02, 8.003e-02, 3.577e-01, -1.684e-01, 2.857e-01, -1.345e-01, -7.331e-01, 2.804e-01, -1.516e-02, -6.185e-02, -5.174e-02, -9.134e-02, 2.556e-02, 2.216e-01));
	r += mul(s1_2, M4(1.888e-02, 6.921e-03, 5.467e-02, 1.174e-02, 2.607e-01, -1.792e-02, 2.831e-01, 1.160e-01, -1.006e-01, 1.403e-01, -4.073e-01, -1.237e-01, 1.434e-01, -1.901e-01, -1.495e-01, 4.507e-02));
	r += mul(s1_3, M4(2.509e-01, -4.802e-01, -7.793e-03, -7.808e-02, -5.841e-02, -2.974e-01, -9.248e-02, -1.300e-01, 1.333e-02, 3.306e-02, -1.098e-01, 4.058e-02, 8.165e-02, -2.774e-02, 3.147e-02, -4.121e-02));
	r += mul(s1_4, M4(1.805e-02, 4.234e-03, -2.085e-01, 3.038e-01, -1.545e-01, -2.208e-02, -7.558e-02, 1.510e-01, 4.637e-03, 7.744e-01, 6.388e-02, -4.393e-01, 2.821e-01, 1.378e-02, 5.262e-01, -2.691e-01));
	r += mul(s1_5, M4(3.567e-02, 3.762e-02, -1.618e-02, -2.882e-02, 1.184e-02, -3.539e-02, 1.264e-01, -1.919e-01, -2.923e-02, -1.341e-01, 1.432e-01, -2.002e-02, -5.108e-04, 6.611e-02, -2.317e-01, -1.093e-02));
	r += mul(s1_6, M4(9.825e-02, -6.980e-02, -1.050e-01, -1.615e-02, 5.869e-02, 7.498e-02, 1.661e-01, 4.743e-02, 1.015e-01, -2.650e-01, 1.587e-01, -9.953e-03, -2.529e-01, 2.489e-01, 1.056e-01, -3.707e-01));
	r += mul(s1_7, M4(-3.236e-02, -1.361e-01, -1.390e-01, -2.265e-01, 1.571e-01, -1.495e-02, -5.972e-03, -1.815e-01, -2.648e-02, 1.180e-01, 2.035e-01, -3.024e-02, -4.634e-01, 3.141e-01, 2.950e-01, 2.416e-01));
	r += mul(s1_8, M4(5.248e-03, 4.607e-02, -1.711e-01, -7.816e-02, 8.505e-02, -2.190e-01, -3.378e-02, -4.388e-01, 8.617e-02, -1.620e-01, -7.747e-02, -2.104e-01, -7.361e-02, 5.386e-02, 1.063e-01, 5.212e-01));
	r += mul(s2_0, M4(-1.007e-01, -5.851e-02, 1.965e-02, -1.135e-02, -2.586e-01, 3.681e-01, -3.837e-01, -2.724e-01, 7.522e-02, -2.233e-02, 1.353e-01, -1.379e-01, 1.294e-01, 1.295e-02, -7.165e-04, 1.142e-01));
	r += mul(s2_1, M4(-1.200e-03, -1.965e-01, -1.920e-01, 2.067e-01, 2.449e-02, 6.089e-01, -5.513e-01, -3.375e-01, -2.772e-02, -3.050e-02, 1.929e-01, -2.421e-03, -5.301e-02, -2.770e-02, 4.779e-02, 8.692e-02));
	r += mul(s2_2, M4(-1.275e-01, -7.586e-02, -7.173e-02, 5.197e-02, 1.431e-02, 9.739e-01, -1.920e-01, 3.620e-01, 5.279e-02, 7.767e-02, 2.779e-02, -4.249e-02, 2.177e-02, -5.138e-02, -5.534e-02, 3.672e-02));
	r += mul(s2_3, M4(-2.093e-02, 2.722e-02, 3.364e-02, 4.066e-02, 5.781e-01, 5.662e-01, 4.062e-01, 1.745e-01, -1.049e-01, -2.493e-02, 4.617e-02, -1.063e-01, 1.196e-01, 2.179e-01, 6.020e-02, -6.487e-03));
	r += mul(s2_4, M4(-1.830e-02, 1.707e-01, 9.461e-03, 3.820e-01, 2.804e+00, 1.028e+00, -1.199e+00, -2.445e+00, -1.741e-02, 2.531e-01, -6.866e-02, 1.503e-01, -3.791e-01, 4.440e-01, 3.351e-01, -7.959e-02));
	r += mul(s2_5, M4(7.290e-02, 1.382e-01, 5.607e-02, 2.703e-01, -5.561e-01, 4.901e-02, -9.272e-02, -5.123e-01, 8.875e-02, -2.936e-01, 3.080e-01, -1.730e-01, -9.478e-02, -9.019e-02, 9.050e-03, -1.440e-01));
	r += mul(s2_6, M4(1.460e-01, -8.596e-02, -2.091e-02, 6.076e-03, 2.484e-01, 1.071e+00, -1.641e-01, 4.763e-01, -8.595e-02, 8.301e-02, 2.840e-02, -4.159e-02, -3.384e-02, -1.212e-01, 7.854e-03, 3.818e-02));
	r += mul(s2_7, M4(1.833e-01, -1.465e-01, -1.143e-01, -2.775e-01, 5.314e-02, 9.303e-01, -1.388e+00, -2.591e-01, 4.821e-02, -6.000e-02, 8.696e-02, -1.234e-02, 8.417e-02, 1.988e-01, 1.909e-01, 1.477e-01));
	r += mul(s2_8, M4(-1.319e-01, -1.129e-01, -1.063e-01, -8.856e-02, -1.553e-01, 7.669e-01, -8.310e-02, 2.388e-01, 8.983e-02, -1.389e-01, 3.085e-01, -3.336e-02, 3.151e-02, -5.395e-02, 3.851e-04, 6.411e-02));
	r += mul(s3_0, M4(-1.347e-01, 1.232e-01, 3.372e-03, 6.238e-02, 3.625e-02, -2.892e-02, 5.103e-02, 5.619e-02, -4.781e-02, 2.168e-01, 3.850e-02, 6.550e-03, -1.588e-02, 3.347e-02, 4.963e-02, -2.689e-02));
	r += mul(s3_1, M4(-1.333e-01, 7.440e-02, -1.753e-01, 1.022e-01, -1.987e-01, 8.579e-02, -5.817e-02, 2.696e-02, -3.482e-02, 1.500e-01, 6.019e-02, 1.961e-01, 1.446e-01, 2.328e-02, -1.744e-02, -2.351e-03));
	r += mul(s3_2, M4(2.487e-02, -1.783e-01, -1.708e-01, 4.858e-02, 4.928e-03, 7.909e-02, -4.078e-02, -1.479e-01, -1.307e-02, 8.705e-02, 2.217e-02, -1.116e-01, -2.559e-02, 1.655e-01, 8.117e-02, -5.379e-02));
	r += mul(s3_3, M4(-8.318e-02, 2.167e-01, 2.840e-03, 1.518e-01, -7.696e-02, -3.469e-03, 2.843e-02, -1.434e-02, -1.947e-02, 1.422e-01, -9.864e-03, 5.333e-02, -7.522e-02, 1.246e-01, 1.045e-01, -9.384e-02));
	r += mul(s3_4, M4(9.596e-02, 6.845e-02, -2.290e-01, 5.458e-01, 4.763e-01, -1.943e-01, -2.596e-01, 7.367e-02, -1.364e-01, 2.668e-01, 1.034e-01, -4.224e-01, -2.762e-01, 2.581e-01, 1.310e-02, 1.717e-01));
	r += mul(s3_5, M4(2.183e-01, 1.518e-01, -2.166e-01, 3.283e-01, -1.117e-01, -2.941e-02, 1.654e-02, 5.631e-02, -1.810e-02, -2.083e-02, 1.983e-01, -2.788e-01, 3.489e-02, -7.741e-02, -1.013e-01, -1.821e-01));
	r += mul(s3_6, M4(3.920e-02, -1.696e-01, -1.061e-01, -1.051e-01, -3.179e-02, 2.989e-02, 1.644e-02, -8.433e-02, -1.069e-01, 3.296e-01, 3.747e-03, 2.467e-02, -1.342e-02, 1.363e-01, 4.435e-02, 1.732e-01));
	r += mul(s3_7, M4(9.467e-03, -1.161e-01, -8.300e-02, -2.034e-01, -1.294e-01, 3.048e-02, 8.982e-02, 1.941e-02, -1.463e-01, 8.356e-02, 6.222e-02, 1.213e-01, 2.045e-02, 1.311e-01, 1.150e-01, 1.305e-02));
	r += mul(s3_8, M4(-5.316e-02, 2.015e-01, -1.848e-02, 1.684e-01, 3.290e-02, 1.237e-02, 1.597e-01, 1.398e-02, -2.117e-02, -2.031e-03, 1.954e-02, -2.242e-01, 3.035e-02, -1.590e-01, 1.205e-01, 1.051e-02));
	r += V4(-1.816e-02, 6.204e-03, 4.218e-02, -1.874e-02);
	return r;
}
void Pass4(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 5
//!DESC CuNNy-6x8C-CHROMA-NVL-conv3
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2, t3
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(1.291e-01, 2.217e-02, -1.043e-01, 5.480e-02, 1.852e-02, -4.471e-02, -1.175e-01, 3.206e-02, -7.433e-02, 3.685e-02, 2.220e-01, 1.018e-02, 1.001e-01, 3.375e-02, 9.203e-02, -5.749e-02));
	r += mul(s0_1, M4(-8.469e-02, 2.330e-02, 6.124e-02, 4.805e-02, -3.904e-02, 1.218e-01, -2.976e-01, -8.214e-02, 1.449e-01, 2.682e-02, 1.865e-01, -1.666e-01, 3.411e-01, 3.104e-02, 6.045e-02, -7.773e-02));
	r += mul(s0_2, M4(1.218e-01, 5.524e-02, -7.062e-02, -1.101e-01, -1.978e-01, -4.971e-04, 1.020e-01, 8.553e-02, 1.095e-02, 1.378e-01, 5.551e-02, -8.677e-02, 5.521e-02, 4.353e-02, 5.322e-02, -8.756e-02));
	r += mul(s0_3, M4(6.536e-02, -8.572e-02, 1.566e-01, -8.878e-02, 1.478e-01, -1.772e-02, -7.048e-02, -1.461e-01, -1.132e-01, -6.863e-02, 1.481e-01, -1.957e-01, -7.168e-01, -2.435e-01, 2.061e-01, 2.491e-01));
	r += mul(s0_4, M4(3.826e-02, -6.094e-01, 4.079e-01, 1.831e-01, 3.177e-01, 9.275e-02, 2.815e-01, 5.449e-01, -2.253e-01, -7.816e-02, -1.429e-01, -1.996e-01, 4.638e-02, -2.242e-02, 3.317e-01, -2.920e-01));
	r += mul(s0_5, M4(2.425e-01, -2.038e-01, -4.569e-02, -4.738e-03, 3.179e-02, -1.100e-03, 9.149e-02, -7.733e-02, 1.089e-01, -1.281e-01, -6.948e-02, -1.184e-01, 4.303e-02, 6.206e-02, -1.665e-01, -4.683e-03));
	r += mul(s0_6, M4(1.752e-01, -1.592e-02, 9.495e-02, -5.210e-02, -1.096e-01, 3.354e-02, -1.146e-01, 2.766e-02, -4.507e-03, 4.536e-02, 4.906e-02, -1.374e-01, -7.519e-02, 6.369e-02, -1.760e-01, -7.390e-02));
	r += mul(s0_7, M4(1.301e-01, 2.421e-02, -1.876e-03, -2.285e-01, 1.228e-02, -9.660e-02, -5.001e-02, 4.708e-02, 9.450e-02, 2.354e-02, 2.417e-01, -2.610e-01, -8.379e-02, -2.349e-01, -1.424e-01, -1.328e-01));
	r += mul(s0_8, M4(1.324e-01, 1.422e-02, 1.959e-01, -1.308e-01, -5.607e-02, 3.762e-02, -1.359e-02, -7.403e-02, 3.063e-02, -1.531e-02, 1.774e-02, 1.655e-01, 1.343e-01, -5.948e-02, -2.672e-02, -1.554e-01));
	r += mul(s1_0, M4(7.238e-03, -2.533e-03, -1.162e-01, -1.141e-02, -1.184e-01, 1.538e-01, 1.697e-01, -6.839e-02, -2.044e-02, -9.243e-03, 1.629e-01, 1.043e-01, 7.747e-03, -1.329e-01, 8.000e-02, 2.899e-03));
	r += mul(s1_1, M4(-9.270e-02, 7.090e-02, -4.941e-02, 5.075e-02, -7.525e-02, 7.266e-02, 7.749e-02, -1.013e-01, 1.650e-01, -1.362e-02, -1.447e-01, 1.042e-02, 2.374e-01, -1.451e-01, -1.091e-01, -8.312e-02));
	r += mul(s1_2, M4(-4.920e-02, 7.219e-03, -3.670e-02, 3.892e-02, -6.457e-02, 1.085e-02, -1.594e-02, -8.271e-02, -1.078e-04, 7.383e-02, -6.182e-03, 1.096e-01, 1.146e-02, 3.237e-02, 5.387e-02, 1.216e-02));
	r += mul(s1_3, M4(4.862e-02, -6.303e-02, -1.548e-02, 1.904e-02, 2.133e-01, 1.062e-01, -4.518e-02, 7.402e-02, -8.830e-02, 7.172e-02, -1.166e-01, 1.532e-01, 6.679e-02, 8.181e-02, -2.547e-01, 8.204e-02));
	r += mul(s1_4, M4(1.100e-01, -4.327e-01, 8.146e-02, 1.904e-01, -7.624e-02, 5.106e-02, 4.524e-01, 4.832e-01, -3.044e-01, -3.318e-01, -4.802e-01, -1.591e-01, 2.764e-01, 1.517e-01, 5.475e-01, 3.096e-01));
	r += mul(s1_5, M4(-1.920e-02, -1.599e-01, 2.156e-02, 1.658e-02, 1.795e-02, 6.491e-02, 1.071e-02, 3.027e-02, 5.549e-02, -1.013e-01, -6.945e-02, 5.049e-02, -1.788e-01, 6.145e-02, -4.713e-02, 1.901e-01));
	r += mul(s1_6, M4(4.117e-02, 1.096e-01, -3.503e-02, -7.554e-02, 5.550e-02, -5.334e-02, -3.716e-02, -8.494e-02, -2.960e-02, -2.145e-02, 2.775e-02, 5.810e-02, -4.827e-02, 7.358e-02, 6.613e-02, 1.078e-01));
	r += mul(s1_7, M4(5.039e-02, 2.141e-02, -8.880e-02, -6.720e-02, -2.475e-02, -3.084e-02, 4.491e-04, -8.493e-02, 4.132e-02, 1.248e-01, -5.644e-03, -9.097e-02, 4.652e-02, -1.479e-01, -6.726e-02, -8.953e-02));
	r += mul(s1_8, M4(4.987e-02, -1.843e-02, 1.547e-01, -2.816e-01, -4.251e-02, -1.331e-02, 6.650e-03, -2.893e-01, -1.402e-02, 9.810e-03, -2.791e-02, 4.756e-02, 2.750e-02, -9.077e-03, -4.301e-03, -9.679e-02));
	r += mul(s2_0, M4(-1.063e-01, 5.814e-02, 2.754e-01, 8.830e-03, -1.646e-01, -2.757e-03, -3.036e-02, 7.479e-03, 1.020e-01, -2.623e-02, -1.247e-01, -2.771e-02, -3.006e-02, 1.173e-01, -2.340e-02, -4.332e-02));
	r += mul(s2_1, M4(-2.049e-01, -3.220e-02, 9.182e-02, -9.976e-02, 8.014e-02, 5.142e-02, 2.141e-02, 3.717e-03, -1.394e-01, 1.664e-01, 3.634e-02, 1.515e-01, -1.205e-01, 1.680e-01, 8.689e-02, 9.327e-02));
	r += mul(s2_2, M4(3.675e-02, -1.992e-02, -1.284e-01, -5.769e-02, -3.322e-02, -6.493e-02, 6.926e-03, -3.194e-02, 8.887e-03, 4.797e-02, -4.399e-02, -8.029e-03, 4.904e-02, 5.168e-02, -4.642e-02, 1.569e-02));
	r += mul(s2_3, M4(2.921e-01, -2.094e-01, -3.776e-02, 8.096e-02, 1.533e-01, -8.013e-02, 2.908e-02, -1.553e-01, 1.136e-01, 4.554e-02, -1.918e-01, 7.588e-02, 5.636e-02, 2.424e-02, -8.468e-02, 9.642e-02));
	r += mul(s2_4, M4(6.138e-01, 8.032e-01, 3.431e-01, -1.381e-01, -3.534e-02, 2.898e-01, 2.647e-01, -1.353e-02, -1.082e-01, 8.329e-02, 5.602e-02, -2.779e-02, -2.941e-01, -2.458e-01, -4.902e-01, 3.843e-01));
	r += mul(s2_5, M4(6.079e-02, -2.105e-02, 3.515e-02, 2.896e-02, 9.324e-02, 4.137e-02, 5.233e-02, -6.198e-02, -6.573e-02, 5.350e-03, -8.461e-02, 8.995e-02, -1.386e-01, -3.415e-02, -1.007e-01, 3.372e-02));
	r += mul(s2_6, M4(-1.891e-01, -1.249e-01, 1.027e-01, 1.404e-02, -1.265e-02, 6.585e-02, -1.181e-02, -2.993e-02, -5.300e-03, 2.920e-02, -9.351e-02, 1.794e-02, -4.553e-02, -6.694e-03, 5.600e-02, 1.321e-02));
	r += mul(s2_7, M4(-1.958e-01, -7.288e-02, 1.420e-01, -4.555e-01, -8.851e-02, -5.992e-02, 1.516e-02, -7.289e-02, -6.266e-02, -3.090e-02, -7.473e-02, -1.081e-01, 4.103e-02, -6.995e-02, 3.988e-02, 7.029e-02));
	r += mul(s2_8, M4(-1.991e-02, 2.244e-02, 5.792e-02, 2.858e-01, -1.484e-02, 5.612e-03, 2.928e-02, -1.111e-01, -4.898e-02, -3.215e-02, -3.605e-03, 3.599e-02, 1.353e-02, 4.400e-03, -8.369e-02, -8.393e-03));
	r += mul(s3_0, M4(-1.080e-02, 1.475e-01, -5.039e-02, 6.064e-02, -7.151e-02, -1.617e-02, 1.008e-01, 6.044e-02, 1.495e-01, -1.274e-01, -4.830e-02, 5.987e-02, 1.575e-02, 2.211e-02, -9.029e-02, -3.630e-02));
	r += mul(s3_1, M4(-1.853e-01, -4.310e-02, 3.118e-02, -8.089e-02, -1.039e-02, -2.468e-02, 1.090e-01, -2.891e-03, -1.939e-01, 2.560e-01, 1.818e-01, 1.869e-01, -8.217e-02, 1.422e-01, 6.073e-02, 8.490e-02));
	r += mul(s3_2, M4(6.544e-04, -1.394e-01, -5.950e-02, -6.246e-02, -8.029e-02, -1.039e-01, -1.383e-01, -2.642e-01, 3.302e-02, -1.063e-01, 9.456e-02, -5.846e-02, -9.890e-03, 6.997e-02, -8.617e-03, -5.791e-02));
	r += mul(s3_3, M4(2.836e-02, 2.588e-02, -1.586e-01, -1.911e-01, 1.238e-01, -2.043e-02, -7.791e-02, -6.843e-02, -6.112e-02, -1.034e-01, 2.465e-01, 1.741e-01, 2.271e-01, -1.102e-02, -1.434e-01, -2.597e-02));
	r += mul(s3_4, M4(5.293e-01, 4.950e-01, 2.289e-01, 1.135e-01, -2.374e-01, -6.001e-03, 5.915e-03, -3.200e-03, -8.650e-01, -7.666e-02, -1.003e-01, -4.424e-02, -1.014e-01, -2.503e-02, -2.323e-01, 4.347e-01));
	r += mul(s3_5, M4(-1.016e-01, 5.580e-02, 1.764e-01, -9.824e-02, -1.461e-01, 5.420e-04, -1.509e-02, -3.552e-01, 1.783e-01, 9.788e-02, -2.568e-01, -2.350e-01, 1.532e-02, 3.380e-02, -1.495e-01, -1.257e-01));
	r += mul(s3_6, M4(-6.447e-02, 2.240e-02, -1.990e-01, -6.289e-02, -3.967e-02, 3.359e-02, -2.501e-01, -8.947e-02, -3.363e-03, -3.578e-02, -6.952e-03, 4.705e-02, 2.601e-02, 8.445e-02, -1.131e-01, -7.799e-02));
	r += mul(s3_7, M4(5.847e-02, 7.496e-02, 1.365e-01, -1.338e-01, -8.977e-02, -2.491e-02, -2.264e-01, -1.382e-01, -6.485e-02, -2.174e-01, 1.661e-01, 1.375e-02, 6.418e-02, -3.258e-02, 1.400e-01, -1.863e-02));
	r += mul(s3_8, M4(1.087e-01, 1.118e-02, 1.908e-01, -3.604e-02, -1.567e-01, -7.567e-02, -2.885e-02, -4.472e-01, -4.130e-02, -1.191e-01, 2.918e-02, -4.602e-02, -7.780e-03, -3.794e-02, 6.236e-02, -8.278e-02));
	r += V4(-1.449e-02, -3.548e-03, -2.018e-02, 3.455e-02);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-4.637e-02, -2.663e-02, 1.112e-01, -5.220e-02, -3.143e-03, -1.135e-01, 1.012e-02, -4.200e-03, -1.135e-01, 1.316e-01, -6.156e-02, 1.795e-04, -6.772e-02, -6.560e-02, -4.811e-02, -3.914e-02));
	r += mul(s0_1, M4(-8.627e-03, 1.187e-01, 1.122e-01, 1.666e-02, 4.646e-01, 3.992e-01, -4.821e-02, 1.130e-01, -2.027e-01, -5.124e-02, -1.248e-01, -1.234e-02, -2.300e-01, -3.561e-02, -6.636e-02, 4.900e-02));
	r += mul(s0_2, M4(-1.621e-01, 3.887e-02, -4.576e-02, 1.755e-02, 1.501e-01, 1.900e-01, 1.121e-02, 4.780e-02, -2.005e-01, 1.095e-01, -1.084e-01, 4.771e-02, -8.273e-02, 1.177e-02, -2.838e-02, -7.829e-02));
	r += mul(s0_3, M4(-8.856e-02, 2.183e-01, -6.337e-02, -3.589e-02, -1.491e-01, -1.219e-01, 1.731e-02, 1.118e-02, 3.838e-02, 3.558e-01, -2.268e-01, 6.894e-02, -3.880e-01, -9.161e-02, 2.279e-01, -2.698e-01));
	r += mul(s0_4, M4(-1.492e-01, 3.552e-02, 1.616e-01, -1.398e-01, -1.715e-02, 1.633e-01, 3.978e-02, -2.659e-02, 8.724e-02, -1.210e-01, -4.622e-02, -1.205e-01, -4.405e-02, 2.267e-01, -8.792e-02, 1.332e-01));
	r += mul(s0_5, M4(-1.139e-01, 7.073e-02, -6.662e-02, 3.661e-02, -3.975e-02, -1.153e-02, 1.343e-01, 1.673e-01, -1.562e-01, -3.219e-02, -2.823e-01, 7.230e-02, -2.367e-01, -2.379e-03, -2.854e-01, -1.836e-02));
	r += mul(s0_6, M4(-7.042e-02, 1.510e-02, -2.261e-03, 8.956e-02, 4.708e-02, -2.352e-01, 7.653e-02, -3.870e-02, -7.668e-02, 2.662e-01, -2.818e-01, 4.940e-02, -4.302e-02, 2.794e-02, 3.223e-02, -1.334e-01));
	r += mul(s0_7, M4(-7.385e-02, 1.100e-01, -2.188e-01, -1.677e-01, 3.226e-02, -1.488e-01, -2.714e-02, -1.087e-01, -2.173e-01, 4.592e-01, 6.005e-02, -2.156e-02, 2.593e-02, -7.386e-02, 3.944e-01, -1.516e-01));
	r += mul(s0_8, M4(2.799e-02, 6.476e-04, 4.836e-01, -3.160e-01, -5.321e-02, 4.831e-02, -5.184e-02, 1.362e-01, 5.819e-02, 7.035e-02, -2.124e-01, -7.571e-02, -2.054e-03, -2.220e-02, 1.626e-01, -4.851e-02));
	r += mul(s1_0, M4(6.961e-02, 2.712e-02, -2.413e-02, -3.747e-02, 1.951e-02, 1.097e-01, -1.186e-01, -1.439e-02, -2.697e-02, -3.014e-02, 4.631e-02, 4.465e-02, 8.683e-02, -1.576e-01, 2.785e-02, 1.624e-03));
	r += mul(s1_1, M4(1.195e-01, 8.457e-02, 7.672e-03, 1.936e-02, 1.688e-01, 1.651e-01, -1.648e-01, -8.304e-03, -1.799e-01, -2.512e-01, 1.789e-02, 3.327e-02, 1.387e-01, -2.145e-01, -1.609e-02, 5.979e-02));
	r += mul(s1_2, M4(6.573e-02, -2.452e-02, 6.171e-02, 2.431e-02, -1.898e-02, 7.649e-03, 3.698e-03, 1.503e-01, -5.180e-03, 2.783e-02, 5.067e-02, 4.039e-03, -9.564e-04, -5.522e-02, 9.395e-02, -1.214e-02));
	r += mul(s1_3, M4(9.813e-02, 6.114e-02, -4.186e-02, 6.367e-03, 6.254e-02, -1.309e-01, -2.972e-02, 7.227e-02, -1.049e-01, 8.744e-02, 1.076e-01, -9.719e-02, -7.554e-02, 4.015e-01, -1.707e-01, 7.073e-02));
	r += mul(s1_4, M4(1.479e-01, 1.611e-01, -1.529e-01, 7.830e-02, -2.938e-01, -5.482e-02, 3.957e-02, -2.082e-01, -9.891e-02, -3.237e-01, 2.080e-01, -6.313e-02, 6.007e-01, 5.149e-01, -2.473e-01, 6.812e-01));
	r += mul(s1_5, M4(-1.521e-02, 3.464e-02, -8.392e-04, 2.419e-01, -2.610e-02, 9.924e-02, -1.397e-01, 2.786e-03, 3.543e-02, 7.008e-02, 3.845e-02, 1.178e-02, -8.203e-02, -3.902e-02, -1.139e-01, 1.659e-01));
	r += mul(s1_6, M4(-7.545e-02, 7.235e-02, -7.630e-02, 1.606e-01, -9.682e-03, 8.445e-02, 8.436e-03, 2.421e-02, -2.627e-03, 1.856e-02, -2.593e-02, -8.673e-02, -4.143e-02, -3.991e-02, 9.252e-02, -3.676e-02));
	r += mul(s1_7, M4(1.418e-01, -1.200e-01, -1.746e-01, -2.361e-02, 6.666e-02, 1.640e-01, 5.347e-02, 2.366e-02, -3.127e-03, 1.887e-01, -1.217e-01, 6.748e-02, -6.615e-02, 3.344e-02, 1.976e-01, 1.973e-01));
	r += mul(s1_8, M4(-1.292e-01, 3.428e-02, 1.634e-01, 5.183e-02, -1.148e-01, 6.730e-02, -1.614e-01, -1.060e-02, 8.275e-02, -1.382e-01, 1.635e-01, -1.148e-02, 3.534e-02, 7.511e-02, 1.194e-02, 2.222e-01));
	r += mul(s2_0, M4(-1.017e-01, -7.480e-02, 9.368e-02, -1.059e-01, 1.977e-02, -9.422e-02, 2.686e-02, -7.789e-02, 1.294e-01, 5.766e-02, -1.023e-01, -1.009e-02, 4.069e-02, 1.376e-01, -7.591e-02, -3.302e-02));
	r += mul(s2_1, M4(3.456e-02, -3.703e-01, 1.766e-01, 1.228e-01, 1.580e-01, 1.213e-01, 5.308e-03, 1.924e-01, -1.032e-01, -2.779e-02, 2.374e-02, 1.649e-01, -9.005e-02, 1.125e-01, -5.284e-03, 3.543e-02));
	r += mul(s2_2, M4(1.168e-01, -2.486e-01, 1.268e-01, 2.601e-01, -1.337e-02, -1.073e-01, 4.551e-02, -4.642e-02, 4.288e-02, -1.061e-02, -4.123e-02, 3.365e-02, -8.607e-02, -7.638e-02, -2.385e-02, 1.301e-01));
	r += mul(s2_3, M4(-8.571e-04, 8.596e-02, 2.649e-02, 6.226e-02, 6.380e-03, 6.725e-02, -7.265e-03, 7.674e-02, -9.903e-03, 1.116e-01, 4.732e-02, 1.189e-01, 2.981e-02, 1.527e-01, 1.380e-03, 1.457e-01));
	r += mul(s2_4, M4(5.732e-01, 6.768e-01, -6.457e-01, 2.173e-01, 6.225e-02, -6.518e-02, -1.498e-01, 5.693e-02, 5.254e-02, -4.787e-02, 1.722e-01, -1.075e-02, -1.553e-01, 4.412e-01, 2.926e-01, -5.965e-02));
	r += mul(s2_5, M4(3.877e-01, -9.616e-02, -6.154e-02, 4.772e-01, -1.037e-01, -8.367e-02, 2.777e-03, -1.243e-01, 1.382e-01, 8.878e-02, -1.971e-01, -1.162e-01, 1.195e-01, 2.051e-01, -9.558e-02, 2.272e-01));
	r += mul(s2_6, M4(2.898e-01, -1.146e-01, 2.164e-01, -9.084e-02, 3.133e-02, 7.317e-02, -1.817e-02, 2.753e-02, -3.553e-03, -1.316e-02, -1.596e-02, -4.009e-02, -5.602e-02, -1.913e-02, 7.906e-02, -6.118e-04));
	r += mul(s2_7, M4(-1.949e-01, -6.858e-02, 6.020e-02, 1.129e-01, -3.728e-02, 9.405e-02, 5.654e-02, 5.137e-02, -6.475e-02, -4.100e-02, 1.415e-02, 7.352e-02, -1.689e-01, -1.862e-02, -1.694e-01, -3.668e-02));
	r += mul(s2_8, M4(5.654e-02, 2.699e-01, -7.503e-02, 2.068e-01, -5.593e-02, 1.570e-01, -4.932e-02, 1.471e-02, 3.409e-02, 2.746e-02, 4.886e-02, 3.156e-02, 2.887e-02, -1.256e-01, 3.252e-02, 1.334e-01));
	r += mul(s3_0, M4(-1.453e-01, -2.483e-02, -2.284e-02, -6.451e-02, 5.103e-02, -6.826e-02, 9.235e-02, -1.011e-01, 1.665e-01, 1.030e-01, -1.957e-02, 1.333e-01, 6.787e-02, -7.905e-02, 4.351e-02, -3.712e-02));
	r += mul(s3_1, M4(1.058e-01, 2.445e-01, -1.013e-02, 7.784e-02, -8.776e-02, -2.108e-01, 1.267e-01, 1.447e-01, -2.425e-01, -1.283e-01, 4.379e-02, 3.154e-02, 5.554e-02, -2.011e-02, 2.536e-02, 3.209e-02));
	r += mul(s3_2, M4(3.823e-02, -7.084e-02, 4.038e-02, -7.815e-02, -7.667e-02, -2.085e-01, 1.008e-03, -2.139e-01, -1.413e-03, 3.037e-02, -5.847e-02, -8.558e-02, 8.839e-02, -6.385e-02, 5.199e-04, 1.489e-03));
	r += mul(s3_3, M4(-1.275e-01, -2.947e-02, 5.777e-03, 6.198e-03, 9.593e-02, -4.734e-02, -8.597e-02, 7.513e-02, -1.390e-01, 2.486e-01, 2.134e-01, 1.303e-01, 2.476e-02, -1.991e-02, 1.813e-02, 1.264e-01));
	r += mul(s3_4, M4(-1.371e-02, 3.029e-02, -1.477e-01, -8.739e-02, 1.802e-01, -4.318e-01, 1.738e-01, -1.323e-01, 2.961e-02, -5.595e-01, 5.646e-01, -1.882e-01, 1.489e-01, 8.667e-02, 1.898e-01, -2.275e-01));
	r += mul(s3_5, M4(1.310e-01, 7.048e-02, 4.981e-02, -3.633e-01, 1.223e-02, 7.195e-03, 2.208e-01, -1.922e-01, 1.244e-02, 7.164e-02, -1.400e-01, -4.429e-02, 1.562e-01, 6.452e-02, 1.182e-01, 1.650e-01));
	r += mul(s3_6, M4(-4.024e-02, 1.509e-02, 5.647e-02, 8.011e-03, 3.926e-02, -3.797e-02, -5.009e-02, -7.546e-03, 5.194e-02, 3.601e-02, -5.873e-02, 1.795e-01, 1.021e-01, -1.610e-01, -2.511e-03, 6.398e-02));
	r += mul(s3_7, M4(-4.023e-01, 2.425e-01, -1.004e-02, 6.729e-03, 1.853e-01, -1.966e-01, 9.059e-02, -2.203e-01, 5.926e-02, 2.426e-02, 4.121e-01, 1.399e-01, -1.154e-01, -1.820e-01, 2.524e-01, -1.206e-01));
	r += mul(s3_8, M4(-2.190e-01, 2.773e-01, -1.222e-01, -6.328e-02, -3.608e-02, -5.650e-02, 2.187e-01, -5.433e-03, 7.377e-02, 6.317e-02, 2.192e-01, 2.679e-02, 1.174e-02, 3.708e-02, 5.499e-02, 6.026e-02));
	r += V4(1.290e-02, -5.773e-03, 5.515e-03, 1.302e-02);
	return r;
}
void Pass5(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t3[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 6
//!DESC CuNNy-6x8C-CHROMA-NVL-conv4
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t2, t3
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t2, float2(x, y))
#define l1(x, y) O(t3, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(4.524e-02, 7.194e-02, -4.769e-02, 1.453e-02, -4.007e-02, -5.038e-02, 2.739e-02, 3.324e-02, -6.612e-02, -1.794e-03, -3.315e-02, -3.916e-02, -4.591e-02, 8.179e-03, -4.229e-02, -1.006e-02));
	r += mul(s0_1, M4(-1.564e-01, 1.867e-01, -1.162e-02, -5.437e-02, 9.320e-03, -8.998e-02, -4.978e-02, 6.964e-02, 4.650e-03, 1.123e-01, 2.661e-02, 4.132e-02, 8.635e-02, 1.764e-02, -2.209e-02, 1.163e-02));
	r += mul(s0_2, M4(4.095e-02, 4.030e-02, 1.231e-02, 2.371e-02, 4.700e-02, -6.509e-02, 2.895e-02, 7.869e-02, 1.128e-01, 4.937e-02, -1.508e-01, -1.484e-01, -9.630e-03, -2.983e-02, 3.821e-02, 3.325e-02));
	r += mul(s0_3, M4(-2.090e-01, 4.261e-02, 4.395e-02, -1.304e-02, -6.952e-02, 3.384e-02, -4.689e-02, 2.345e-03, 2.573e-02, -1.125e-01, -3.206e-02, -3.941e-02, -1.276e-01, 2.004e-02, 1.695e-01, 4.968e-02));
	r += mul(s0_4, M4(-4.245e-01, -1.288e-02, 2.662e-01, -4.133e-01, 8.737e-02, -2.804e-02, -1.524e-01, 1.166e-01, -4.814e-01, -1.565e-01, -2.003e-01, -1.391e-01, 1.001e-01, -2.822e-01, 6.117e-02, 2.216e-02));
	r += mul(s0_5, M4(-2.029e-02, -6.931e-02, -2.468e-01, -3.169e-01, -4.856e-02, -6.628e-02, 9.206e-02, 1.693e-01, 4.177e-02, 2.039e-02, -3.022e-01, -2.434e-01, -6.002e-02, -1.258e-01, -8.139e-02, 4.357e-02));
	r += mul(s0_6, M4(1.649e-02, 2.605e-02, -3.488e-02, -7.254e-02, 1.781e-02, 8.884e-03, 1.992e-02, 2.542e-02, -9.125e-05, -2.467e-02, -9.543e-02, 5.428e-02, -9.704e-02, -1.556e-02, 6.849e-02, 4.025e-02));
	r += mul(s0_7, M4(-6.877e-02, -4.971e-01, -2.221e-01, 7.964e-02, 1.373e-01, 8.114e-02, -2.480e-02, 2.734e-01, 1.832e-01, 1.489e-01, -1.744e-02, 6.813e-02, 4.233e-02, -4.202e-03, -3.309e-02, -8.211e-02));
	r += mul(s0_8, M4(7.626e-02, -2.068e-01, -6.183e-02, 1.518e-01, 1.772e-02, 1.747e-01, 1.365e-01, 1.541e-01, 1.193e-02, 8.906e-02, 6.539e-02, -3.442e-03, 3.707e-02, 4.457e-03, -4.719e-03, -1.772e-02));
	r += mul(s1_0, M4(-2.238e-02, 6.768e-03, -9.051e-02, -3.227e-02, 3.479e-02, 5.759e-02, 2.136e-02, 2.557e-02, 1.016e-01, -5.593e-02, 5.756e-03, -2.278e-02, -1.335e-01, 5.030e-02, 6.500e-02, 7.497e-02));
	r += mul(s1_1, M4(1.213e-01, 2.650e-02, 7.788e-02, -3.197e-02, -2.837e-02, 3.651e-02, -1.086e-02, -1.124e-01, 1.321e-02, -3.261e-02, 1.100e-02, -1.102e-03, -2.147e-01, 4.405e-02, -2.130e-01, 4.408e-02));
	r += mul(s1_2, M4(-2.371e-02, -2.327e-02, 3.276e-02, -3.035e-02, -2.889e-02, -3.745e-02, -3.621e-03, -6.931e-02, -1.266e-02, -6.905e-02, -5.261e-02, -8.167e-03, 3.793e-02, 5.191e-02, -2.790e-03, 1.386e-03));
	r += mul(s1_3, M4(6.809e-03, 6.351e-04, -8.119e-03, -9.408e-02, -1.464e-02, 8.912e-02, 1.154e-01, -4.061e-02, 1.082e-02, -1.577e-01, -3.076e-02, 8.534e-02, -4.139e-01, -3.990e-02, 2.170e-01, -1.586e-03));
	r += mul(s1_4, M4(-1.676e-01, 3.552e-02, 7.757e-02, -1.451e-01, -4.155e-01, 2.204e-01, -1.675e-01, -1.974e-01, 9.979e-03, 2.133e-02, -4.382e-02, 2.791e-03, -1.858e-01, -8.567e-01, -4.113e-01, -1.913e-01));
	r += mul(s1_5, M4(1.365e-01, -1.641e-01, 2.692e-02, -1.150e-01, 2.651e-02, 2.800e-02, -1.080e-01, -2.639e-01, 5.159e-02, -7.536e-03, 4.673e-04, 2.098e-02, 1.076e-01, -1.598e-01, -7.166e-02, -1.502e-01));
	r += mul(s1_6, M4(-3.523e-02, -5.633e-02, -4.117e-02, -1.387e-02, -1.399e-02, -1.281e-01, 1.589e-01, -1.398e-03, 5.931e-02, 7.705e-02, -8.545e-02, -5.115e-02, -1.088e-01, -2.664e-02, 7.300e-02, -2.033e-02));
	r += mul(s1_7, M4(9.446e-02, -9.840e-02, -1.378e-01, -1.674e-03, 1.470e-01, -3.352e-01, 2.869e-01, 5.720e-02, 6.226e-03, 9.513e-02, 1.245e-01, 1.091e-02, 3.683e-03, -1.596e-02, -2.128e-01, 2.677e-02));
	r += mul(s1_8, M4(-8.909e-02, -2.591e-02, 1.019e-02, 3.032e-02, 3.979e-02, -1.045e-01, -6.222e-02, -5.432e-02, 7.177e-02, -2.943e-02, 5.065e-03, -8.715e-02, 5.812e-02, -5.691e-03, -5.260e-02, 9.695e-02));
	r += mul(s2_0, M4(-1.130e-01, 7.155e-02, 2.216e-02, -2.629e-02, -2.626e-02, 7.341e-03, -2.419e-03, 3.752e-02, -1.342e-01, 3.544e-02, -2.418e-01, 3.853e-02, 1.840e-01, -1.521e-02, 7.079e-02, -7.937e-03));
	r += mul(s2_1, M4(2.080e-02, -6.380e-03, -1.602e-02, 1.151e-01, -2.364e-02, 9.255e-02, -5.823e-02, -4.949e-02, 1.079e-01, -5.237e-02, 3.416e-01, 1.873e-01, -7.430e-02, -4.068e-02, -6.800e-02, 1.666e-01));
	r += mul(s2_2, M4(7.533e-02, 4.355e-02, 3.388e-02, 3.954e-02, 5.361e-02, 9.199e-02, 2.621e-02, -1.734e-01, 1.240e-01, -2.177e-01, 1.180e-01, -4.232e-02, 6.349e-02, -4.892e-04, 2.843e-02, 1.604e-01));
	r += mul(s2_3, M4(-7.370e-02, -3.875e-02, 8.540e-02, -4.411e-02, -1.048e-01, 9.873e-02, -3.439e-02, -7.968e-03, 1.526e-01, 9.715e-02, -2.234e-01, -4.086e-02, -1.827e-01, -2.737e-01, 2.302e-01, 1.087e-01));
	r += mul(s2_4, M4(-6.650e-01, 2.485e-01, -2.695e-01, -1.107e-01, -1.185e-01, -9.982e-02, 3.152e-02, -1.653e-01, -7.787e-02, 3.422e-01, -6.402e-02, -5.515e-01, -1.483e-01, -1.412e-01, -2.848e-01, -9.995e-02));
	r += mul(s2_5, M4(3.327e-01, 1.266e-01, 9.092e-02, -3.606e-01, 4.090e-02, -2.484e-02, -8.946e-02, -6.691e-02, 1.405e-01, 1.095e-01, 1.706e-01, 1.012e-01, 7.874e-02, 2.190e-02, 2.690e-02, -1.987e-01));
	r += mul(s2_6, M4(9.493e-02, 5.462e-02, -1.324e-02, -6.552e-02, 6.050e-02, 4.038e-02, 9.510e-02, -8.574e-02, 3.298e-02, -8.971e-02, -9.496e-03, 1.257e-02, -4.321e-02, -2.136e-02, -1.469e-02, -4.646e-02));
	r += mul(s2_7, M4(-1.032e-01, -2.759e-02, 4.294e-03, -1.076e-01, -4.601e-02, -1.807e-01, -7.756e-02, -1.529e-01, 1.197e-01, -1.794e-01, -1.606e-01, 4.208e-02, -2.234e-02, 3.733e-02, -1.003e-01, 1.263e-01));
	r += mul(s2_8, M4(1.499e-01, -1.500e-01, -5.218e-03, 2.756e-02, 5.775e-02, 5.537e-02, -4.455e-02, -6.643e-04, -3.612e-02, -1.158e-03, 7.852e-02, 1.126e-01, 4.389e-02, -4.832e-02, -2.187e-02, 9.867e-02));
	r += mul(s3_0, M4(-1.783e-01, 3.781e-02, 3.941e-02, 2.351e-02, 7.440e-03, 9.692e-02, -5.968e-02, -3.622e-02, -2.219e-03, -3.169e-03, 7.412e-02, -4.215e-02, 2.921e-02, 5.998e-02, 1.167e-01, 1.153e-01));
	r += mul(s3_1, M4(-6.248e-02, 2.097e-02, -4.369e-03, 8.171e-03, 1.429e-01, 1.121e-01, -2.999e-02, -1.158e-01, 1.213e-01, -5.112e-02, 3.028e-04, 3.213e-02, -1.217e-01, -6.753e-02, -7.267e-02, 1.532e-01));
	r += mul(s3_2, M4(1.025e-01, -3.276e-02, -1.641e-02, 4.477e-02, -3.487e-02, -7.005e-02, 8.757e-02, -5.681e-02, 2.053e-03, -3.994e-02, 1.541e-02, -1.612e-02, -4.309e-02, -4.657e-02, -8.688e-02, 8.376e-03));
	r += mul(s3_3, M4(-9.409e-02, 9.587e-02, -1.869e-02, 7.924e-02, -8.958e-02, 1.070e-01, -1.050e-01, -8.549e-02, 6.918e-02, -4.176e-02, -2.476e-02, -5.799e-02, -6.589e-02, 5.422e-03, 5.757e-01, 2.091e-01));
	r += mul(s3_4, M4(-3.805e-01, 5.252e-01, -1.237e-01, -2.115e-01, -3.135e-01, -2.267e-03, -1.238e-01, -1.548e-01, -6.377e-02, -1.649e-01, -1.749e-01, -4.174e-03, -7.595e-02, -2.083e-01, -6.961e-01, 5.921e-02));
	r += mul(s3_5, M4(1.939e-01, 1.626e-01, 5.791e-02, -1.688e-01, 1.880e-01, 1.690e-01, -7.138e-02, -2.274e-01, -6.655e-02, 1.258e-03, -9.510e-02, -1.138e-01, -2.479e-01, 1.283e-01, 7.577e-02, 1.128e-01));
	r += mul(s3_6, M4(3.697e-02, 2.086e-01, 4.810e-02, -7.652e-03, 4.073e-02, -6.292e-03, 9.747e-03, 4.781e-02, 1.087e-01, -8.219e-03, -1.977e-03, -7.431e-02, -2.372e-01, 1.245e-02, 3.771e-02, 2.357e-02));
	r += mul(s3_7, M4(-1.314e-01, 5.318e-02, -8.045e-02, 7.808e-02, -1.450e-01, -4.019e-02, 2.071e-01, -2.161e-01, -1.833e-03, 3.179e-03, 5.388e-02, -1.075e-01, -5.114e-02, 1.450e-01, -1.142e-01, 1.615e-01));
	r += mul(s3_8, M4(6.172e-02, -7.910e-02, 2.539e-02, 1.366e-01, 4.460e-02, -6.620e-02, 6.192e-02, -9.175e-02, 5.442e-02, -7.397e-02, -4.693e-02, 4.162e-02, 4.254e-02, -1.957e-02, -5.906e-02, 9.482e-02));
	r += V4(-1.344e-02, -1.341e-03, -6.926e-03, -1.444e-02);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-1.348e-02, 7.892e-02, -1.345e-01, 8.159e-02, -3.353e-03, -8.823e-03, 8.572e-02, -3.056e-02, -1.191e-02, -1.953e-02, -5.847e-02, 6.273e-02, -9.679e-02, 6.186e-02, 4.162e-02, 3.210e-02));
	r += mul(s0_1, M4(6.632e-02, 1.813e-01, -9.986e-02, 8.430e-03, -2.794e-02, -8.730e-02, 8.607e-02, 2.570e-03, 3.698e-02, 1.053e-02, 4.789e-02, -6.259e-02, 2.171e-01, 1.163e-01, -1.663e-01, 1.506e-01));
	r += mul(s0_2, M4(4.145e-02, -1.590e-02, -2.747e-02, 1.147e-03, -4.911e-02, -2.125e-03, 1.926e-01, 9.323e-03, 2.194e-01, -2.170e-02, -2.529e-01, -2.427e-02, -4.589e-02, -1.295e-03, -3.846e-02, 3.446e-03));
	r += mul(s0_3, M4(-2.930e-02, -1.594e-01, 2.789e-01, 5.284e-02, 5.027e-02, 4.494e-02, -4.608e-02, -5.149e-02, -1.380e-02, -5.477e-02, -3.230e-01, -3.283e-02, -1.782e-01, -9.827e-03, -4.879e-02, -4.054e-02));
	r += mul(s0_4, M4(-2.802e-01, -4.454e-01, -5.682e-01, 7.458e-01, 1.437e-02, -3.298e-01, 7.148e-02, -1.167e-01, -3.457e-02, -7.905e-01, 3.686e-01, 5.695e-02, 2.570e-01, -2.865e-04, -2.207e-01, -8.609e-02));
	r += mul(s0_5, M4(1.694e-01, -1.275e-01, -1.932e-01, 1.788e-01, -1.025e-01, -6.291e-03, 2.593e-01, -5.811e-02, 4.320e-01, -1.907e-02, 8.719e-02, -1.114e-01, -8.526e-02, -1.510e-02, 1.153e-01, -1.039e-01));
	r += mul(s0_6, M4(-8.051e-02, 1.845e-02, 4.874e-02, 2.453e-01, -5.923e-03, 2.046e-03, -2.274e-02, -6.132e-02, 4.011e-02, 2.083e-02, -2.991e-02, -3.427e-03, -1.200e-02, -1.600e-02, 2.937e-02, 1.548e-02));
	r += mul(s0_7, M4(5.857e-02, -2.685e-01, 3.577e-01, 3.540e-01, 1.294e-01, 3.037e-01, 3.006e-01, 3.586e-01, -1.966e-02, 1.828e-01, -1.033e-01, -1.131e-01, 7.699e-02, -1.778e-02, 1.113e-02, -7.498e-02));
	r += mul(s0_8, M4(4.409e-03, -1.864e-01, 3.322e-02, 6.952e-02, -1.242e-02, -3.309e-02, 1.753e-01, -6.755e-02, -7.148e-02, 5.304e-02, -6.958e-02, -1.274e-01, 3.939e-02, -1.493e-02, -4.092e-02, 2.675e-02));
	r += mul(s1_0, M4(1.199e-02, 7.487e-02, -4.688e-03, 4.933e-03, -6.558e-02, 5.491e-02, 3.520e-02, -4.469e-02, -9.238e-03, -3.505e-02, -9.084e-02, 7.675e-02, -1.054e-01, 5.894e-03, 1.841e-03, 1.887e-01));
	r += mul(s1_1, M4(-1.842e-02, 5.440e-02, -3.821e-02, 1.318e-02, 6.127e-02, -3.066e-02, -4.678e-02, 3.782e-02, 9.120e-02, -4.587e-02, 2.847e-02, -1.416e-01, 3.349e-01, 2.288e-02, 2.643e-01, 8.838e-02));
	r += mul(s1_2, M4(7.005e-02, 1.476e-02, -7.206e-02, -2.019e-02, -4.506e-02, 6.382e-03, 9.578e-03, 1.167e-01, 8.839e-02, 3.083e-02, -2.257e-03, -1.043e-01, 1.372e-01, -4.446e-02, -1.198e-02, 5.212e-02));
	r += mul(s1_3, M4(-4.897e-02, 1.727e-02, -5.071e-02, 2.361e-02, -8.050e-02, 9.195e-02, -2.305e-01, -8.879e-02, 1.579e-01, -5.267e-02, 4.729e-02, 2.691e-03, -2.845e-01, -1.096e-01, 1.939e-01, -6.112e-03));
	r += mul(s1_4, M4(-9.776e-03, -1.809e-01, 2.902e-01, 1.452e-01, -2.073e-01, -1.977e-01, -1.253e-01, 1.359e-01, -1.401e-01, -3.041e-01, 3.040e-01, -1.000e-01, 5.578e-01, -2.387e-01, -1.388e-02, -4.219e-02));
	r += mul(s1_5, M4(1.219e-01, -5.591e-02, 1.348e-01, 1.058e-01, 2.728e-01, 2.374e-02, 9.984e-02, 7.023e-02, 1.014e-01, -5.674e-03, -9.417e-02, 8.571e-02, 9.061e-02, -9.236e-02, 6.113e-02, -9.018e-02));
	r += mul(s1_6, M4(-3.207e-02, -4.092e-02, 3.556e-02, 5.018e-02, -2.842e-02, -9.982e-02, 2.511e-01, 5.421e-02, 4.652e-02, 7.735e-02, 3.372e-02, -1.812e-01, -2.278e-02, -8.702e-02, -3.995e-02, 1.211e-01));
	r += mul(s1_7, M4(5.451e-02, 9.097e-03, 1.179e-01, 9.970e-02, -2.448e-02, -2.538e-01, 1.009e-01, 4.918e-01, -5.415e-02, 6.322e-02, -1.544e-02, -1.263e-01, 5.087e-02, -4.669e-02, 2.210e-01, 2.706e-02));
	r += mul(s1_8, M4(-8.537e-02, -1.957e-02, 2.556e-02, 2.141e-02, 4.625e-02, -1.487e-01, 5.585e-02, 6.759e-02, 4.852e-02, -2.930e-02, -3.586e-02, 2.579e-02, 3.117e-02, -5.786e-02, -2.785e-02, -6.151e-03));
	r += mul(s2_0, M4(6.576e-02, 7.587e-02, 1.572e-02, 5.413e-02, 3.183e-02, -3.550e-02, 8.351e-02, -3.274e-02, -4.368e-02, -3.863e-02, 2.425e-01, 2.713e-01, -4.260e-03, -5.378e-02, 3.693e-02, -5.877e-02));
	r += mul(s2_1, M4(8.325e-02, -3.332e-02, 2.388e-01, -2.294e-02, 4.053e-02, 9.146e-02, 9.022e-02, -7.007e-02, -3.575e-01, -2.405e-01, 7.217e-01, -6.002e-03, 1.947e-02, -7.645e-02, 2.021e-01, -1.127e-01));
	r += mul(s2_2, M4(3.355e-02, 6.303e-02, -7.452e-03, -2.180e-02, -4.748e-02, 3.308e-02, -1.716e-02, 3.017e-02, -2.683e-02, -7.922e-02, -8.487e-02, 3.595e-01, 2.825e-02, 1.133e-02, 3.463e-02, -1.047e-02));
	r += mul(s2_3, M4(9.843e-02, -6.338e-02, 2.749e-02, -1.472e-01, 7.013e-02, 1.908e-02, 2.833e-02, -5.488e-02, 8.302e-02, 6.763e-02, -5.487e-01, 2.433e-01, 3.260e-02, -4.099e-02, -4.804e-02, 2.248e-01));
	r += mul(s2_4, M4(-1.955e-01, -7.090e-02, 1.511e-01, 1.179e-01, 1.847e-01, 2.608e-01, -2.307e-01, 3.606e-01, 2.728e-01, 3.506e-01, 2.491e-01, 1.082e-01, -1.302e-01, -1.301e-01, -2.244e-01, -1.928e-01));
	r += mul(s2_5, M4(2.633e-01, -1.256e-02, 1.590e-02, 4.537e-01, -5.905e-02, -1.993e-02, -2.221e-02, -7.561e-02, -4.890e-02, 7.389e-02, -4.925e-02, 2.513e-01, 2.912e-02, -1.541e-02, -6.418e-02, -1.191e-02));
	r += mul(s2_6, M4(2.699e-02, 8.275e-02, -9.297e-02, 6.852e-02, 2.093e-04, -2.780e-03, 1.227e-01, -7.518e-03, -4.441e-02, -1.929e-02, 2.378e-01, 2.307e-01, -2.314e-04, -5.868e-02, 1.541e-01, 3.869e-02));
	r += mul(s2_7, M4(-2.151e-02, -4.588e-02, 2.528e-02, -7.980e-02, 9.886e-02, -1.106e-01, -1.081e-01, 8.931e-02, 5.630e-02, -9.042e-02, 2.704e-01, 3.291e-01, -1.516e-02, 1.365e-02, 1.820e-01, 1.379e-01));
	r += mul(s2_8, M4(1.401e-01, 4.833e-02, 2.340e-03, 3.205e-02, 2.597e-03, 5.844e-02, 7.451e-02, 6.660e-02, -2.166e-01, 1.130e-02, -5.704e-02, 3.931e-02, -1.286e-02, -1.524e-02, -3.970e-03, -4.440e-02));
	r += mul(s3_0, M4(-3.062e-02, 2.105e-03, 1.122e-01, -4.505e-02, 6.724e-02, 9.447e-02, -1.149e-01, -6.300e-02, 1.068e-01, -5.428e-02, 5.509e-02, -7.664e-02, -2.282e-01, -1.017e-01, -5.580e-02, 3.245e-02));
	r += mul(s3_1, M4(-3.135e-02, 1.306e-01, 7.338e-02, 8.874e-04, 2.028e-01, 1.574e-01, -6.890e-02, -1.749e-01, -1.710e-01, -1.146e-01, 7.923e-02, -8.701e-02, 1.734e-01, -6.534e-02, -5.278e-03, -2.341e-02));
	r += mul(s3_2, M4(5.223e-02, 1.313e-02, -4.597e-02, 3.672e-02, -1.703e-01, -8.245e-02, 7.064e-03, -4.471e-03, 1.281e-02, 5.412e-03, 3.664e-02, -3.653e-02, 1.794e-02, -9.673e-03, 1.674e-01, -1.057e-01));
	r += mul(s3_3, M4(9.789e-02, -1.223e-02, 1.420e-01, 7.330e-03, -8.150e-02, -5.904e-02, 1.704e-01, -9.578e-02, 9.609e-02, -7.107e-04, -6.402e-02, 1.360e-01, -1.636e-01, -3.761e-02, -5.497e-02, 2.413e-03));
	r += mul(s3_4, M4(-1.363e-01, -1.174e-01, 9.659e-02, -8.421e-02, 8.697e-02, 3.348e-01, 3.017e-01, 1.199e-01, 2.107e-01, 1.331e-01, -1.483e-01, 1.274e-01, 4.110e-01, 1.438e-01, -4.071e-01, 1.970e-01));
	r += mul(s3_5, M4(1.340e-01, 6.269e-03, -4.745e-02, 4.484e-01, 1.433e-01, 2.015e-01, 2.570e-02, -3.452e-03, -4.406e-02, -2.060e-02, -8.180e-02, -1.506e-01, -2.686e-01, 3.944e-02, 3.289e-02, -1.624e-01));
	r += mul(s3_6, M4(-7.479e-02, 1.360e-01, 4.476e-02, -7.351e-02, 3.006e-02, 2.285e-03, -9.176e-02, 5.722e-03, 5.099e-02, 4.901e-02, -1.764e-02, -3.729e-02, -1.102e-01, 7.031e-03, 8.470e-02, -2.894e-02));
	r += mul(s3_7, M4(6.530e-02, 6.671e-02, 1.564e-01, 1.515e-01, -7.331e-04, -2.411e-01, -1.009e-01, -2.887e-01, 2.573e-02, -3.738e-02, 1.392e-01, 8.768e-02, -4.171e-02, 4.874e-03, 1.067e-02, -1.603e-01));
	r += mul(s3_8, M4(1.234e-01, 3.051e-02, 5.579e-02, -2.856e-02, 2.362e-02, -8.572e-02, 1.518e-01, 4.678e-02, 4.221e-02, -3.672e-02, 1.296e-02, 4.364e-02, 7.029e-02, 2.516e-02, 1.267e-01, 1.358e-02));
	r += V4(-1.271e-02, -8.662e-03, -5.640e-03, -7.859e-04);
	return r;
}
void Pass6(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 7
//!DESC CuNNy-6x8C-CHROMA-NVL-conv5
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2, t3
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(4.998e-02, -4.259e-02, 5.903e-02, 4.026e-02, -1.051e-02, -1.418e-02, -1.204e-02, -7.754e-02, -1.144e-01, -3.552e-02, -4.389e-02, -1.051e-02, 5.260e-03, 5.334e-02, 1.012e-01, -1.698e-02));
	r += mul(s0_1, M4(2.037e-01, -6.164e-02, 7.439e-02, 1.075e-01, 1.020e-02, -2.500e-02, 9.691e-02, 5.129e-02, 1.223e-02, -7.360e-02, -2.802e-01, 1.845e-01, -1.706e-01, -2.121e-04, 2.425e-02, -6.335e-02));
	r += mul(s0_2, M4(3.709e-02, -3.264e-02, -1.186e-02, -3.314e-02, -1.586e-01, 9.106e-02, -7.463e-02, -1.032e-02, 1.033e-01, 4.269e-03, -2.555e-02, 1.439e-01, 8.454e-03, 3.262e-02, 1.743e-02, 1.521e-02));
	r += mul(s0_3, M4(2.764e-01, 1.332e-01, -3.746e-02, 1.720e-01, 3.213e-01, 4.498e-02, -2.512e-02, 4.208e-01, 8.175e-02, 6.661e-02, -1.913e-02, 5.556e-02, 4.246e-02, -6.158e-02, 8.708e-03, 5.089e-02));
	r += mul(s0_4, M4(3.660e-01, 1.236e-02, -9.842e-02, 1.506e-02, -2.704e-01, -5.587e-01, -9.981e-02, 3.868e-01, -1.646e-01, 4.359e-01, -2.936e-01, -4.912e-01, 2.016e-01, 1.142e-01, 1.835e-01, 2.602e-01));
	r += mul(s0_5, M4(1.153e-01, -3.586e-01, 5.440e-02, -2.716e-02, 1.033e-01, -1.970e-02, 6.891e-02, 2.526e-02, -6.860e-02, 9.312e-02, -1.148e-01, -1.292e-01, 5.479e-02, -1.100e-01, 1.890e-02, -1.011e-01));
	r += mul(s0_6, M4(-5.114e-02, -1.416e-02, 1.034e-03, 8.004e-02, -5.662e-03, 6.177e-02, 3.386e-02, -9.545e-02, 1.579e-02, 4.866e-03, -2.717e-02, 2.089e-02, -6.686e-02, 3.060e-03, -1.284e-02, 7.131e-02));
	r += mul(s0_7, M4(1.637e-01, -3.178e-01, -1.004e-01, -1.273e-03, -8.852e-03, 1.187e-01, 6.396e-02, -5.503e-02, -1.096e-02, 1.204e-01, 1.335e-01, 2.404e-01, 1.208e-01, -6.298e-02, 3.262e-02, 5.402e-02));
	r += mul(s0_8, M4(1.952e-02, 1.432e-02, 1.522e-02, -4.053e-02, -1.265e-03, -1.123e-01, -6.447e-02, 3.079e-02, 7.497e-02, 1.825e-02, 6.665e-02, 6.108e-02, -6.860e-02, 4.491e-02, 4.998e-02, 1.659e-02));
	r += mul(s1_0, M4(-2.752e-02, -5.899e-02, 8.312e-02, -9.209e-02, 4.499e-02, -1.147e-02, 6.273e-02, 1.415e-02, -1.225e-01, -4.411e-02, 1.647e-02, -1.257e-01, 1.345e-01, 1.888e-02, 1.323e-01, 7.366e-02));
	r += mul(s1_1, M4(2.179e-01, -7.101e-02, 1.310e-01, 9.877e-02, 1.576e-02, 5.602e-02, 8.485e-02, 9.672e-02, 7.753e-02, -1.109e-01, 1.056e-01, 3.514e-02, 5.106e-03, -8.006e-02, 9.141e-02, 4.899e-02));
	r += mul(s1_2, M4(5.933e-02, -2.343e-02, 7.661e-03, 9.847e-03, -9.666e-02, 2.155e-02, 2.500e-03, -6.580e-02, 1.271e-01, -1.308e-01, -6.908e-02, 1.605e-01, -5.033e-02, -7.101e-02, -6.130e-02, -7.150e-02));
	r += mul(s1_3, M4(-1.169e-01, 1.451e-01, -1.303e-01, 1.205e-01, 2.112e-01, 1.360e-01, 3.301e-02, 3.138e-01, -7.286e-02, 2.256e-01, 8.827e-02, 2.347e-01, 1.524e-01, 1.786e-01, 1.186e-01, 2.144e-01));
	r += mul(s1_4, M4(3.194e-01, -1.024e-01, -6.480e-03, 8.667e-02, -1.664e-01, -2.476e-01, -3.584e-01, 3.358e-01, -3.800e-01, 1.079e-01, -1.592e-01, -2.113e-01, -2.066e-01, 3.607e-01, 4.713e-02, 2.830e-01));
	r += mul(s1_5, M4(2.114e-01, -1.666e-01, 2.129e-03, 1.624e-02, 4.943e-02, 2.195e-02, 7.903e-02, 1.089e-01, -1.964e-02, -6.569e-02, 1.262e-01, -6.969e-02, 1.908e-01, -1.016e-01, 3.931e-02, -4.338e-02));
	r += mul(s1_6, M4(-1.061e-01, 4.493e-02, 1.601e-02, -9.576e-02, 3.380e-02, -8.103e-02, -5.850e-02, -2.700e-02, 2.344e-02, 1.838e-02, -1.478e-02, 2.764e-02, 5.184e-02, -2.298e-01, -9.083e-02, 9.988e-02));
	r += mul(s1_7, M4(1.362e-01, -2.183e-01, 8.829e-02, -3.899e-02, 1.317e-01, -1.652e-01, 2.868e-02, -6.467e-02, -1.639e-02, -5.253e-02, 1.109e-01, 1.704e-01, -9.018e-02, 1.189e-01, 5.178e-02, 1.282e-02));
	r += mul(s1_8, M4(-3.213e-02, 7.270e-02, 4.317e-02, 3.623e-03, -2.327e-02, -4.724e-02, 3.134e-02, -1.043e-02, 1.313e-01, -5.275e-02, 7.634e-02, 6.017e-02, 3.415e-02, -1.191e-01, -3.033e-02, -8.097e-02));
	r += mul(s2_0, M4(-4.314e-02, -5.269e-03, 5.947e-02, -4.811e-02, 2.998e-02, 7.580e-02, -1.198e-02, -1.443e-02, 7.627e-03, -5.726e-02, 7.614e-02, -6.714e-02, -5.275e-02, 2.482e-02, 1.724e-01, -7.137e-02));
	r += mul(s2_1, M4(6.424e-02, -3.014e-02, 2.275e-01, -4.823e-02, 1.334e-01, -3.766e-02, 8.035e-02, 5.699e-03, 1.136e-01, -6.807e-02, -2.844e-02, 2.769e-02, 1.928e-01, 4.188e-02, 5.677e-02, 9.813e-02));
	r += mul(s2_2, M4(2.847e-02, -5.227e-02, -1.639e-01, 6.455e-03, 8.463e-02, -1.128e-02, -3.598e-02, 3.431e-02, -5.972e-02, 2.255e-02, -1.341e-02, -4.514e-02, -2.999e-02, 6.620e-02, 4.358e-02, -4.387e-02));
	r += mul(s2_3, M4(-8.764e-02, 1.066e-01, 1.552e-02, 1.135e-01, -2.417e-01, 8.635e-02, 3.406e-02, -1.643e-01, -9.398e-02, 1.496e-01, -7.166e-02, 8.519e-03, -4.141e-02, 1.488e-01, 1.684e-02, 1.758e-01));
	r += mul(s2_4, M4(-5.661e-01, 6.154e-02, -2.068e-01, -3.667e-02, -3.591e-02, 3.551e-01, -1.028e-01, -6.022e-02, 1.100e-01, -2.570e-01, -2.488e-02, -1.687e-01, -5.776e-02, -1.205e-01, -5.640e-02, -8.496e-02));
	r += mul(s2_5, M4(1.635e-01, -2.571e-02, 1.717e-02, -1.050e-01, -7.893e-03, -5.746e-02, 2.978e-02, 2.984e-02, -1.603e-01, 7.013e-02, -6.251e-02, 1.299e-02, -9.225e-02, 7.001e-02, -9.690e-04, 1.797e-03));
	r += mul(s2_6, M4(-6.596e-02, 5.787e-02, -5.602e-03, -1.949e-02, 1.074e-01, -8.108e-03, 2.297e-02, 7.175e-02, -9.893e-02, -3.754e-03, 4.057e-02, -5.882e-02, 2.553e-03, -1.927e-02, -3.424e-02, -3.908e-03));
	r += mul(s2_7, M4(-1.471e-01, 2.001e-01, 1.403e-01, -1.372e-01, -6.386e-02, 6.759e-02, -1.123e-02, 3.132e-02, -9.548e-02, 1.643e-01, 8.309e-02, -2.969e-02, 2.097e-02, -5.043e-02, 6.710e-02, -2.134e-02));
	r += mul(s2_8, M4(1.158e-01, -2.084e-01, -6.619e-02, -1.156e-01, 1.220e-01, 3.637e-02, -3.177e-02, -8.618e-02, -1.753e-01, 9.988e-02, -1.054e-01, 4.023e-02, -7.057e-02, 5.262e-02, 3.600e-02, 5.711e-02));
	r += mul(s3_0, M4(7.402e-02, 1.311e-02, 1.653e-01, -2.990e-03, -1.202e-02, -6.994e-03, 2.766e-02, -2.503e-02, -4.625e-02, -3.019e-02, 2.109e-02, -2.421e-02, -4.604e-02, -3.937e-02, 5.375e-03, -1.307e-01));
	r += mul(s3_1, M4(1.626e-01, -4.912e-02, -1.169e-02, 1.023e-01, -3.558e-02, -3.374e-03, -2.031e-02, -7.908e-03, 2.210e-01, -2.568e-02, -8.326e-02, 1.247e-01, 4.645e-02, 5.655e-02, 7.884e-02, 4.127e-02));
	r += mul(s3_2, M4(4.006e-02, -3.888e-04, -2.418e-02, 2.472e-02, 6.960e-02, 2.499e-02, 8.100e-02, 3.820e-02, -3.886e-02, 3.751e-02, 5.177e-02, -4.152e-02, 1.840e-01, 1.086e-01, 3.532e-01, 7.925e-03));
	r += mul(s3_3, M4(-7.331e-02, 4.218e-02, -1.906e-02, 5.631e-02, -1.167e-01, 3.231e-02, -5.257e-02, -1.161e-01, 2.466e-02, 1.008e-01, 2.617e-02, 6.136e-02, 2.407e-01, -1.069e-01, 1.681e-01, 1.328e-01));
	r += mul(s3_4, M4(-3.901e-02, 2.437e-01, -1.195e-01, 6.376e-02, 3.598e-01, -1.234e-01, 3.803e-01, -3.790e-02, 5.450e-01, -4.237e-01, 1.154e-01, -6.578e-02, -2.341e-01, -3.177e-01, 2.764e-01, -3.860e-01));
	r += mul(s3_5, M4(-1.424e-04, 2.339e-02, -3.063e-02, -8.684e-02, 2.309e-02, -5.844e-02, 5.594e-02, -3.766e-02, -1.431e-01, 7.570e-02, 9.561e-04, 8.921e-02, 3.174e-01, -2.427e-01, 8.549e-02, -9.694e-02));
	r += mul(s3_6, M4(3.338e-02, -2.073e-02, 5.972e-02, 6.760e-02, -4.284e-02, -2.942e-02, 7.120e-02, 1.260e-02, -4.396e-02, 6.032e-02, 4.456e-02, 8.960e-02, -4.046e-02, 1.587e-01, 1.758e-01, 4.261e-02));
	r += mul(s3_7, M4(-1.136e-02, 1.263e-01, 5.986e-02, 8.033e-02, -3.081e-01, 2.653e-01, -2.363e-03, 1.489e-01, 1.699e-01, -6.917e-02, 5.665e-02, 1.733e-01, -1.167e-01, 2.106e-01, 1.299e-01, 1.910e-01));
	r += mul(s3_8, M4(9.100e-02, -1.452e-01, -5.984e-04, 2.339e-03, 4.599e-02, -7.638e-03, -7.095e-02, -4.185e-02, -3.230e-02, 9.667e-02, 7.643e-02, 5.491e-02, 1.238e-02, -8.372e-02, -3.003e-02, 6.307e-02));
	r += V4(9.642e-03, -2.468e-03, -7.112e-03, 2.637e-03);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-2.587e-02, 5.364e-02, 9.920e-03, -8.400e-02, 3.194e-02, 1.425e-01, -4.457e-02, -7.526e-02, 5.687e-03, 9.882e-02, -3.085e-02, -1.004e-01, 1.894e-04, -2.441e-02, -4.422e-02, 2.101e-01));
	r += mul(s0_1, M4(-7.297e-02, -2.751e-02, -1.294e-01, -9.259e-02, 1.202e-01, -9.982e-02, -2.212e-01, 1.133e-01, -1.357e-01, 8.189e-02, 8.959e-02, 4.010e-02, 2.270e-01, 1.626e-01, -1.420e-01, -1.341e-01));
	r += mul(s0_2, M4(-6.544e-02, -1.061e-01, 2.051e-02, 7.657e-02, 4.879e-02, -8.509e-02, -6.661e-03, 6.683e-02, -2.720e-03, 9.595e-02, -2.735e-02, 8.488e-03, -5.642e-02, -8.446e-02, -3.210e-02, 2.671e-02));
	r += mul(s0_3, M4(-1.601e-01, -2.159e-01, -1.038e-01, -4.323e-02, 1.539e-02, -3.454e-02, -2.629e-02, 3.311e-01, -5.844e-02, 2.505e-01, 6.716e-02, 5.628e-02, 1.688e-01, -6.984e-02, 8.988e-02, -2.103e-01));
	r += mul(s0_4, M4(3.652e-02, 6.567e-01, 3.761e-01, -2.594e-01, 1.342e-01, 1.667e-02, 1.065e-01, -7.441e-02, 1.694e-01, -3.898e-01, -4.174e-01, 3.670e-01, -3.447e-01, -1.952e-01, 1.346e-01, 1.478e-01));
	r += mul(s0_5, M4(-1.716e-01, 9.471e-02, -2.899e-02, -5.020e-02, -7.788e-02, 2.297e-02, -6.622e-02, -9.929e-03, 1.329e-01, -9.188e-02, 7.794e-02, 2.172e-02, -1.492e-03, 1.911e-02, 4.029e-02, 9.173e-02));
	r += mul(s0_6, M4(-9.593e-03, 6.968e-03, 3.030e-02, -4.886e-02, -5.794e-02, -1.562e-02, -1.412e-01, -1.056e-01, 3.852e-02, -3.375e-02, -1.584e-02, -6.749e-02, 1.276e-02, -5.848e-02, 1.097e-02, -7.701e-02));
	r += mul(s0_7, M4(7.496e-02, 9.570e-02, 6.551e-02, -6.445e-02, -5.210e-02, -6.727e-03, -5.774e-02, 7.231e-02, -8.725e-02, -2.903e-02, 4.910e-02, -1.056e-01, 6.929e-02, 1.257e-02, 3.584e-02, 1.458e-01));
	r += mul(s0_8, M4(4.731e-02, -1.298e-01, -1.068e-02, 1.446e-02, 8.979e-03, 1.766e-02, 4.847e-03, 1.521e-02, -5.772e-02, 3.186e-02, 4.134e-02, -9.748e-04, -4.270e-02, -5.076e-03, -3.578e-02, 1.742e-02));
	r += mul(s1_0, M4(1.956e-02, 3.615e-02, -4.912e-02, -1.580e-01, -2.072e-02, 1.494e-01, -1.983e-02, -6.497e-04, 2.430e-02, 1.584e-01, -5.742e-02, -1.445e-01, 4.162e-02, 1.776e-01, 2.913e-02, 5.253e-02));
	r += mul(s1_1, M4(-9.968e-02, 1.193e-03, -3.561e-02, 2.776e-04, 7.404e-03, -4.576e-02, -1.641e-01, 2.733e-03, -2.362e-01, 2.803e-01, 2.396e-02, 4.051e-02, 4.166e-02, 9.381e-02, 1.972e-01, -7.185e-03));
	r += mul(s1_2, M4(-2.779e-02, -4.987e-02, 9.968e-03, -4.033e-02, 2.726e-02, -3.853e-02, -5.967e-03, 3.589e-02, 6.997e-03, 5.948e-03, 1.653e-01, -2.992e-02, -2.059e-02, -3.076e-01, -3.853e-02, -6.986e-02));
	r += mul(s1_3, M4(2.731e-02, -8.847e-03, -2.400e-02, -2.388e-01, -2.001e-01, -4.365e-02, 4.934e-02, 1.642e-01, -6.764e-02, 1.788e-01, -1.089e-02, 6.433e-02, -8.909e-02, -3.369e-01, -9.266e-02, -1.669e-01));
	r += mul(s1_4, M4(-2.031e-01, 3.506e-01, 1.425e-01, -2.183e-01, 2.049e-01, 1.404e-02, -1.709e-02, -2.632e-01, 2.954e-02, -6.399e-02, 1.553e-01, 1.408e-02, -3.278e-02, 3.522e-01, 7.072e-02, -1.501e-01));
	r += mul(s1_5, M4(-2.542e-03, 3.067e-02, -5.932e-02, 3.754e-02, -1.305e-01, 6.677e-03, 2.746e-02, 9.940e-02, -1.170e-01, -3.427e-02, 7.256e-03, -1.692e-02, -1.406e-01, -9.514e-02, -4.313e-02, 8.632e-02));
	r += mul(s1_6, M4(7.386e-03, 1.127e-02, -1.151e-01, -2.431e-02, 2.511e-02, 1.246e-02, -4.546e-02, -1.291e-01, 9.860e-03, -2.036e-02, -2.221e-02, -9.940e-02, 1.342e-01, -1.799e-01, 1.295e-01, -6.763e-02));
	r += mul(s1_7, M4(2.359e-03, -4.892e-02, -8.110e-02, -2.983e-02, 8.134e-02, -1.588e-02, 3.873e-02, 1.528e-01, -5.807e-02, 1.551e-02, 7.690e-02, -1.513e-01, 2.294e-02, 7.360e-02, -2.025e-03, 9.994e-02));
	r += mul(s1_8, M4(3.074e-02, 3.068e-03, 2.287e-02, -1.948e-02, 3.494e-02, 2.950e-02, -1.284e-01, 5.203e-03, -8.249e-02, 6.623e-03, -2.696e-02, 5.740e-02, 3.984e-02, 1.873e-02, -6.759e-02, 5.160e-02));
	r += mul(s2_0, M4(2.958e-02, 9.183e-02, 1.488e-02, -7.509e-02, 2.302e-02, 5.011e-02, 8.526e-02, 7.681e-02, -4.322e-02, 9.684e-02, -3.793e-02, -4.338e-02, -4.009e-02, -8.199e-02, -1.833e-01, -1.636e-01));
	r += mul(s2_1, M4(8.304e-04, 1.812e-01, -2.933e-02, 8.229e-02, -8.076e-02, 2.824e-02, 1.808e-01, -9.943e-02, -8.563e-02, -2.823e-01, 9.328e-02, 6.226e-02, -1.303e-01, -1.959e-01, -1.741e-02, 7.593e-03));
	r += mul(s2_2, M4(-1.083e-02, -1.087e-01, 5.164e-02, -7.490e-02, 4.175e-03, -1.357e-02, 1.552e-01, 5.084e-02, 7.492e-02, 4.154e-02, 7.233e-03, 6.134e-04, -1.852e-02, -4.463e-02, 3.058e-02, 5.564e-03));
	r += mul(s2_3, M4(-9.953e-02, 1.456e-01, 3.852e-02, 1.155e-01, 1.753e-01, 1.531e-01, 1.101e-01, 1.535e-02, -1.138e-01, -6.927e-02, 3.121e-02, 5.330e-02, -7.834e-02, 2.018e-02, 8.988e-02, -8.257e-02));
	r += mul(s2_4, M4(4.246e-02, -6.044e-04, -1.980e-01, -3.758e-02, 5.920e-01, -3.006e-01, 5.475e-01, -1.191e-01, -5.544e-02, -6.222e-02, 2.678e-02, 1.242e-01, 1.344e-01, -2.286e-01, -1.510e-01, 2.371e-01));
	r += mul(s2_5, M4(-1.025e-01, -2.402e-01, -1.987e-02, 1.666e-01, -3.084e-02, 3.059e-02, -1.555e-01, 5.619e-02, 6.744e-02, -6.045e-02, 9.937e-02, -1.588e-01, 6.905e-02, 1.144e-02, -2.735e-02, -7.885e-02));
	r += mul(s2_6, M4(8.540e-02, 3.732e-02, -4.029e-02, -9.558e-02, -5.364e-02, 7.546e-02, 8.228e-02, 2.642e-03, 3.078e-02, -4.065e-03, -3.260e-02, 9.033e-02, 2.988e-02, -3.205e-02, 7.234e-04, -4.083e-02));
	r += mul(s2_7, M4(7.962e-02, -2.261e-01, -7.211e-02, 1.470e-01, -6.679e-02, 8.036e-02, 5.629e-02, -1.153e-01, 5.110e-02, -2.201e-01, -1.588e-01, 5.414e-02, -3.828e-02, -1.798e-02, -6.912e-02, 5.242e-03));
	r += mul(s2_8, M4(5.002e-02, 5.385e-02, -6.413e-02, 1.097e-01, 1.296e-02, -3.294e-02, -6.666e-02, 1.537e-02, 5.930e-02, -1.947e-02, 1.632e-02, -6.364e-02, -5.029e-02, -4.219e-02, -7.920e-02, -7.495e-02));
	r += mul(s3_0, M4(-4.073e-03, 1.025e-01, -3.981e-04, -1.392e-01, -4.553e-02, -2.236e-02, 6.256e-02, 5.450e-02, -1.702e-02, 2.400e-02, 4.537e-03, -2.153e-01, -4.864e-02, 1.231e-01, 7.059e-02, -4.883e-03));
	r += mul(s3_1, M4(-1.096e-01, 2.597e-01, 1.297e-01, -2.304e-02, 4.771e-02, -1.480e-01, -3.959e-03, -8.006e-02, -1.296e-01, -1.828e-01, -3.451e-03, 7.888e-02, 1.650e-01, -1.250e-01, -1.719e-01, -2.357e-01));
	r += mul(s3_2, M4(-1.284e-02, -5.191e-02, -4.035e-03, -1.176e-02, -6.762e-02, 4.931e-02, 9.658e-03, 2.239e-02, 7.519e-02, 1.116e-01, 1.667e-02, 4.241e-02, -2.108e-01, -1.333e-01, -1.179e-01, -1.360e-01));
	r += mul(s3_3, M4(-4.065e-02, 1.961e-01, 1.410e-01, 9.595e-02, 6.984e-02, 7.853e-02, 8.785e-02, 8.345e-02, -7.217e-02, 1.613e-02, -1.034e-02, -5.964e-02, -6.757e-02, -6.569e-02, -5.063e-02, -5.415e-02));
	r += mul(s3_4, M4(2.286e-01, -1.301e-01, -2.407e-01, 2.109e-01, 4.389e-02, 5.691e-02, 7.236e-01, -2.076e-01, -1.149e-01, -6.508e-02, 2.784e-01, 2.429e-02, 5.795e-02, 4.758e-02, -3.601e-02, -7.020e-02));
	r += mul(s3_5, M4(-5.573e-03, -4.213e-02, 2.571e-02, 5.453e-02, -4.671e-02, -3.078e-02, -8.577e-02, -2.410e-02, 1.058e-02, 7.652e-03, 1.130e-01, -9.962e-02, -8.352e-02, -3.336e-02, -1.182e-01, 6.861e-02));
	r += mul(s3_6, M4(1.418e-02, 7.331e-02, -1.593e-02, -9.797e-02, -5.732e-02, 3.799e-02, 5.759e-02, 8.207e-02, -3.094e-02, 3.781e-02, 1.804e-02, -2.572e-02, -6.790e-02, -3.816e-02, -1.735e-01, -2.651e-02));
	r += mul(s3_7, M4(7.134e-02, -3.551e-02, 1.126e-01, 4.207e-03, -7.778e-02, -1.783e-01, -1.569e-01, -2.431e-01, -9.370e-03, -4.817e-02, 3.284e-02, -4.208e-02, -7.084e-02, -5.983e-02, -1.093e-01, -2.180e-01));
	r += mul(s3_8, M4(-1.147e-02, -1.002e-02, 6.426e-03, 6.019e-02, -1.777e-02, -1.994e-02, -2.585e-02, -2.103e-02, -6.862e-02, 7.575e-02, -3.441e-02, -3.882e-02, -2.355e-02, 4.841e-02, -3.967e-03, 2.502e-02));
	r += V4(3.688e-03, -8.301e-04, -1.237e-02, -5.477e-03);
	return r;
}
void Pass7(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t3[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 8
//!DESC CuNNy-6x8C-CHROMA-NVL-conv6
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t2, t3
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t2, float2(x, y))
#define l1(x, y) O(t3, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-1.121e-02, -9.860e-02, 2.833e-02, 5.847e-02, -3.860e-03, -3.988e-02, -4.019e-02, 7.003e-02, 1.024e-02, 4.830e-02, 3.085e-02, 1.259e-01, -4.676e-02, -8.038e-03, -3.377e-02, 7.904e-03));
	r += mul(s0_1, M4(4.668e-02, 2.354e-01, 1.277e-02, -7.500e-02, 8.090e-03, -3.214e-02, -6.462e-02, -1.255e-01, 1.874e-02, 3.579e-02, 2.746e-02, 3.769e-02, 7.980e-02, -3.606e-01, -8.787e-02, 1.926e-01));
	r += mul(s0_2, M4(3.750e-02, -1.105e-02, -1.726e-02, -1.229e-01, -7.076e-02, 1.908e-02, -7.619e-02, 2.443e-02, -1.725e-02, 3.181e-02, 2.034e-02, 4.456e-02, -6.396e-03, 1.006e-01, -1.932e-04, 6.938e-02));
	r += mul(s0_3, M4(5.338e-02, -4.942e-02, -1.204e-01, 5.345e-02, -2.414e-02, -3.373e-02, 1.062e-02, -1.953e-02, -3.696e-02, -1.035e-01, -5.649e-01, 1.652e-02, -6.616e-02, 3.815e-02, -7.147e-02, -7.078e-02));
	r += mul(s0_4, M4(2.010e-02, -4.454e-01, -3.713e-01, 1.646e-01, 2.299e-01, -1.264e-02, -1.762e-01, -2.102e-01, 7.547e-02, -5.152e-01, 6.319e-02, -2.842e-01, 7.363e-02, -8.071e-01, 5.068e-01, 2.725e-01));
	r += mul(s0_5, M4(1.441e-01, 1.999e-02, -1.091e-01, 9.644e-02, -1.676e-01, -7.345e-02, 1.100e-01, 3.012e-02, 7.085e-02, 1.441e-01, -8.563e-02, -3.201e-02, 1.314e-03, -1.169e-01, -6.831e-02, 1.269e-01));
	r += mul(s0_6, M4(-5.719e-02, 2.498e-02, -1.294e-01, -2.241e-02, -1.822e-02, -1.873e-02, -5.213e-02, -4.870e-02, -1.937e-01, -9.097e-02, -2.415e-01, -7.544e-02, -2.979e-02, -9.738e-04, 2.381e-02, -2.986e-03));
	r += mul(s0_7, M4(-4.600e-02, -1.457e-02, -1.400e-01, -1.530e-02, 7.131e-02, 1.994e-03, 5.638e-02, -2.437e-02, -4.393e-02, 3.836e-01, 1.135e-01, 3.500e-02, 4.578e-02, -6.211e-03, -3.683e-02, 5.143e-02));
	r += mul(s0_8, M4(-1.208e-01, -4.613e-02, 3.830e-02, -4.294e-03, -8.092e-02, -1.281e-02, -4.953e-04, -1.977e-02, -2.934e-02, -3.080e-02, -1.593e-01, -8.853e-02, -5.150e-02, -3.893e-02, -3.529e-02, 2.049e-02));
	r += mul(s1_0, M4(-6.560e-03, -6.189e-02, -2.665e-03, 5.888e-02, 2.696e-02, 9.252e-02, 3.566e-02, 7.940e-02, 2.032e-02, 1.945e-03, -1.041e-02, -7.511e-03, 1.160e-02, 9.133e-03, -3.653e-02, 8.638e-03));
	r += mul(s1_1, M4(2.839e-02, 5.444e-02, -3.494e-02, -9.862e-03, 8.662e-02, -6.834e-03, -5.920e-02, -2.955e-01, 1.823e-02, 1.642e-02, 1.526e-02, 1.215e-01, 4.831e-04, 5.403e-02, 1.098e-02, 1.906e-01));
	r += mul(s1_2, M4(1.201e-02, 3.067e-02, -3.454e-02, -4.361e-02, -2.742e-02, 4.267e-03, -7.039e-02, -2.028e-02, -6.878e-03, 1.812e-02, 1.284e-02, 1.091e-01, -5.796e-02, 1.478e-02, 5.896e-02, 1.340e-01));
	r += mul(s1_3, M4(5.847e-02, 2.031e-02, 2.706e-02, 9.677e-03, -2.457e-02, -2.231e-01, 8.284e-02, 9.482e-02, -2.940e-02, -5.649e-02, 1.532e-03, -2.463e-02, -5.020e-02, 3.532e-02, -8.364e-02, -1.267e-03));
	r += mul(s1_4, M4(-6.392e-02, -1.274e-01, -9.895e-02, 1.084e-02, 9.118e-02, -5.179e-02, -1.858e-01, -1.276e-01, 1.495e-01, -4.633e-02, 3.283e-02, -1.344e-01, 1.076e-01, -8.257e-02, 3.336e-01, 3.067e-01));
	r += mul(s1_5, M4(-5.985e-02, -3.565e-02, -1.012e-02, 6.868e-02, -3.464e-01, -5.979e-02, 1.382e-01, 7.741e-02, -4.652e-02, -2.164e-02, -9.722e-03, -1.253e-01, -7.056e-02, -4.722e-02, -3.240e-02, 1.181e-01));
	r += mul(s1_6, M4(-8.903e-03, -3.192e-02, -8.726e-04, -1.772e-02, 8.369e-03, -1.148e-02, -1.406e-01, -4.710e-02, 5.821e-02, 5.235e-02, -2.843e-02, 1.667e-02, -3.217e-02, -3.811e-03, 8.935e-03, -1.562e-02));
	r += mul(s1_7, M4(-1.664e-03, 3.061e-02, -1.052e-01, -3.671e-02, 5.723e-02, 1.872e-02, 1.610e-01, -5.608e-02, -1.024e-02, 5.473e-02, -4.727e-02, 3.165e-02, 4.869e-02, -1.925e-02, 1.179e-01, 3.758e-02));
	r += mul(s1_8, M4(-3.481e-02, -9.931e-03, 2.230e-02, -6.416e-03, -3.758e-02, 1.349e-02, -3.513e-02, -8.337e-03, -1.482e-01, -7.996e-03, -5.534e-02, -4.370e-02, -4.327e-02, -1.737e-03, -6.465e-02, 6.388e-03));
	r += mul(s2_0, M4(4.803e-03, -3.540e-02, -1.730e-02, 1.479e-02, 2.435e-02, -1.196e-02, -1.094e-02, -4.250e-03, 7.124e-03, -1.113e-02, 2.807e-03, 1.080e-02, 1.578e-02, 3.167e-03, 1.239e-02, 3.025e-02));
	r += mul(s2_1, M4(2.818e-03, 2.790e-02, 4.709e-02, 2.114e-01, -2.644e-02, 6.007e-03, -2.955e-02, -4.206e-02, 3.520e-02, 6.526e-02, -2.690e-03, 4.224e-02, 2.144e-02, 3.898e-02, 1.381e-02, 1.441e-01));
	r += mul(s2_2, M4(1.435e-02, 6.294e-02, 1.167e-02, 6.920e-02, 1.270e-01, 6.275e-02, -9.155e-03, 6.274e-02, -7.886e-02, -6.116e-02, 6.125e-02, 5.868e-02, -5.000e-02, 1.241e-02, -7.546e-03, 2.805e-02));
	r += mul(s2_3, M4(8.147e-03, 2.388e-03, -3.834e-02, -4.463e-02, 5.441e-03, 1.323e-01, -8.902e-02, -1.156e-01, 2.891e-02, -1.208e-01, 1.492e-02, 8.357e-02, 7.757e-03, -4.117e-02, 3.181e-02, -2.844e-02));
	r += mul(s2_4, M4(-8.850e-02, -1.888e-01, -2.538e-02, -9.451e-02, 1.301e-02, -1.856e-01, 4.688e-02, 2.315e-01, -3.930e-02, 2.653e-01, 9.046e-02, -7.691e-01, 2.428e-02, 4.160e-03, 2.220e-02, -1.016e-01));
	r += mul(s2_5, M4(-9.551e-02, -3.829e-02, -1.256e-01, -1.538e-01, 5.535e-01, -4.465e-02, 1.556e-01, -1.467e-01, 1.834e-01, 6.050e-02, 1.214e-01, -4.123e-02, 2.866e-02, -7.984e-02, 8.758e-02, 2.250e-02));
	r += mul(s2_6, M4(1.888e-02, 1.439e-02, -8.680e-02, 1.345e-02, 6.056e-02, -8.132e-02, 9.358e-02, 6.470e-02, -6.473e-02, 1.575e-02, -1.118e-01, -5.408e-02, 3.535e-03, 2.384e-02, -5.504e-03, -1.993e-02));
	r += mul(s2_7, M4(-1.392e-01, -3.650e-03, 1.819e-02, 5.977e-02, -5.956e-01, -2.164e-01, -2.484e-02, -6.573e-02, 1.064e-01, 1.588e-02, 2.182e-01, 3.309e-02, 1.192e-01, -1.613e-02, 1.338e-01, 6.773e-02));
	r += mul(s2_8, M4(-4.883e-02, -2.312e-02, -3.002e-02, -1.657e-02, 5.513e-01, 5.107e-02, 4.004e-02, 4.159e-02, -2.280e-01, 3.374e-03, -6.289e-02, -5.708e-02, -1.561e-01, 2.643e-03, -7.690e-02, -1.116e-03));
	r += mul(s3_0, M4(-2.581e-02, -1.778e-01, 4.971e-02, 2.436e-02, 9.805e-03, 2.434e-02, 7.785e-03, 3.333e-02, 1.906e-03, 3.123e-04, 1.375e-02, 1.146e-02, -3.546e-02, -9.005e-02, 1.275e-02, 3.165e-02));
	r += mul(s3_1, M4(-1.589e-02, 2.510e-01, 1.383e-02, 2.860e-01, -2.954e-02, -1.520e-02, -2.544e-02, -6.219e-02, 4.959e-04, -4.281e-02, 9.880e-03, 5.900e-03, 2.153e-01, 5.108e-01, 2.954e-02, 1.185e-01));
	r += mul(s3_2, M4(-2.373e-02, 1.371e-02, 3.676e-02, 3.027e-02, -2.570e-02, -5.440e-03, -2.767e-02, -2.305e-02, -4.261e-02, -2.970e-03, 8.743e-03, 4.735e-02, -1.557e-01, -2.191e-02, 4.627e-02, -4.468e-03));
	r += mul(s3_3, M4(8.939e-02, 2.681e-01, 1.760e-01, -1.141e-01, -7.329e-03, -2.320e-02, 7.906e-02, -1.606e-02, -9.797e-03, -3.376e-02, 1.229e-02, 1.154e-02, 2.245e-02, 3.198e-02, -5.129e-03, 1.041e-01));
	r += mul(s3_4, M4(1.737e-01, -7.284e-01, -1.639e-01, -2.132e-02, 6.595e-03, 4.979e-02, -1.353e-02, 1.218e-01, 4.716e-02, 1.088e-02, -1.380e-02, -3.507e-01, 5.272e-01, -4.601e-01, -1.561e-01, 1.759e-02));
	r += mul(s3_5, M4(-1.004e-01, 1.068e-02, -1.307e-01, -1.342e-01, 1.936e-01, -1.953e-02, 8.669e-02, -5.388e-02, 2.593e-02, 6.142e-04, 5.880e-02, -6.862e-02, -4.150e-01, -5.059e-01, 2.841e-02, 2.243e-01));
	r += mul(s3_6, M4(1.342e-01, 7.846e-02, 1.396e-01, 4.216e-03, 4.538e-02, 1.123e-02, 6.078e-02, 3.162e-02, -3.177e-02, 3.767e-03, -5.439e-02, -7.376e-02, 1.286e-02, -3.428e-02, -2.456e-02, 1.219e-02));
	r += mul(s3_7, M4(-2.212e-01, -1.030e-01, -3.411e-03, 4.264e-02, -1.498e-01, -3.858e-03, 2.610e-02, 7.419e-06, 1.842e-01, 8.176e-02, 2.091e-02, -5.037e-02, -3.866e-02, 1.721e-01, 2.426e-01, 6.161e-02));
	r += mul(s3_8, M4(-2.956e-01, -4.571e-02, -6.013e-04, -1.961e-02, 6.740e-02, 3.540e-03, 8.140e-02, 1.050e-02, -2.161e-02, 1.898e-02, -1.558e-02, -4.865e-02, -3.952e-01, 3.655e-02, -1.208e-01, 8.459e-03));
	r += V4(6.354e-04, -8.108e-04, -2.186e-03, -6.392e-05);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(2.498e-02, 3.705e-02, 2.084e-02, -2.436e-03, -3.632e-02, -2.933e-02, 3.579e-02, -7.042e-02, -9.582e-02, 1.966e-03, -5.205e-02, 6.279e-02, 5.713e-02, 4.007e-02, 6.334e-02, -6.838e-02));
	r += mul(s0_1, M4(8.514e-02, 6.761e-02, -1.072e-01, 2.315e-01, 4.529e-02, -6.882e-02, -7.665e-02, 8.650e-02, 1.873e-02, -3.091e-02, 3.888e-02, -7.675e-02, 1.714e-01, -7.055e-02, -6.456e-02, -1.553e-01));
	r += mul(s0_2, M4(-3.054e-02, 5.593e-02, 4.448e-02, 2.254e-02, 4.135e-02, -8.282e-02, -1.771e-02, -6.633e-02, 3.941e-03, -2.966e-02, 4.837e-02, -1.568e-01, -2.131e-03, -9.189e-02, -2.249e-02, -1.313e-01));
	r += mul(s0_3, M4(4.935e-02, -1.000e-01, 8.713e-03, -1.294e-01, 6.170e-02, 2.810e-02, 4.860e-02, -1.642e-02, 2.157e-03, -2.130e-01, 1.181e-01, -2.783e-01, 8.457e-02, 4.323e-03, 3.308e-02, 2.135e-02));
	r += mul(s0_4, M4(-2.269e-03, -1.899e-01, -4.540e-01, -3.609e-01, -1.991e-02, 3.155e-01, -1.595e-01, 2.784e-01, 8.980e-01, -2.006e-02, -1.172e+00, -1.506e-02, -3.272e-01, 8.963e-02, -1.502e-02, -5.108e-02));
	r += mul(s0_5, M4(1.223e-01, -8.280e-02, 4.893e-01, -1.028e-01, -6.471e-02, 1.106e-01, 9.247e-02, 1.204e-01, 1.039e-01, 3.067e-02, -5.419e-02, 3.127e-02, 2.056e-01, -5.211e-02, 4.564e-03, -8.916e-03));
	r += mul(s0_6, M4(7.769e-03, 4.490e-02, 2.243e-02, 1.950e-02, -4.282e-02, -1.351e-01, 2.311e-02, -2.328e-02, -8.283e-02, -1.715e-01, 1.241e-02, -1.201e-01, 3.176e-02, -9.472e-03, -3.494e-03, 3.474e-02));
	r += mul(s0_7, M4(4.094e-02, 6.100e-03, -1.100e-01, 1.846e-01, 4.300e-02, -2.943e-01, -1.018e-01, 6.107e-03, 2.043e-01, 3.434e-01, -1.197e-01, 3.428e-01, -4.112e-02, -6.392e-02, 3.821e-02, -4.411e-02));
	r += mul(s0_8, M4(-5.005e-02, 1.358e-01, 1.071e-01, 1.181e-01, -4.901e-02, -4.624e-02, 4.540e-02, -8.500e-03, -4.741e-02, 1.047e-01, 1.064e-01, 2.260e-01, -4.303e-03, -7.574e-02, -1.975e-02, -1.841e-02));
	r += mul(s1_0, M4(-3.336e-02, 4.894e-02, 7.790e-03, -1.191e-03, -3.428e-02, -7.925e-03, -2.381e-02, 1.608e-01, 1.629e-02, -2.468e-02, 4.370e-03, -3.635e-02, 3.236e-02, -4.462e-02, 1.642e-02, -3.847e-02));
	r += mul(s1_1, M4(1.460e-01, -1.947e-02, -4.803e-02, 2.304e-02, 4.025e-02, -1.786e-02, 8.127e-02, 1.279e-01, -3.024e-02, -2.136e-02, 2.697e-02, -9.749e-02, -9.421e-02, -2.018e-02, -4.905e-02, -1.044e-01));
	r += mul(s1_2, M4(3.282e-03, 5.081e-03, -4.213e-02, -1.352e-02, 4.015e-02, -6.199e-02, -8.545e-02, 4.779e-03, 2.934e-02, -1.067e-02, -1.304e-03, -4.910e-02, 1.299e-03, 1.889e-03, 7.921e-02, -5.357e-02));
	r += mul(s1_3, M4(-1.144e-02, -1.471e-01, 1.820e-02, -8.881e-02, -3.625e-02, 1.835e-01, -8.724e-03, -9.794e-03, 2.826e-02, 8.813e-02, -3.346e-03, -3.650e-03, 4.212e-02, 3.082e-02, 1.749e-02, 5.823e-02));
	r += mul(s1_4, M4(-1.295e-01, -4.438e-02, -1.448e-01, 4.591e-02, -2.568e-01, 4.719e-01, 5.600e-02, 9.316e-02, 2.016e-01, -4.999e-02, 4.267e-02, -3.637e-02, -1.413e-01, -1.028e-01, 3.573e-03, 4.948e-02));
	r += mul(s1_5, M4(5.383e-02, -3.131e-02, 1.038e-01, 2.385e-02, -8.327e-02, 1.627e-01, 1.758e-01, 6.903e-02, -1.510e-02, 5.730e-02, -2.204e-01, 8.557e-02, 7.836e-02, -6.610e-02, -7.590e-02, 1.460e-02));
	r += mul(s1_6, M4(-4.016e-02, -1.706e-03, 1.721e-02, -1.323e-02, -5.415e-02, -1.601e-01, -1.072e-02, 1.645e-03, -2.019e-02, -2.580e-01, -8.576e-03, -1.001e-01, 5.580e-03, 6.590e-03, -2.959e-03, 3.183e-02));
	r += mul(s1_7, M4(7.063e-02, -1.274e-01, -8.291e-02, 8.833e-03, 2.870e-02, -5.474e-01, -6.086e-02, 5.790e-02, -2.631e-02, -3.470e-02, 8.003e-02, -6.372e-02, -5.216e-02, -1.395e-01, 4.550e-04, -5.553e-02));
	r += mul(s1_8, M4(-4.125e-02, 1.806e-02, 1.166e-02, 5.504e-02, -4.961e-02, -4.775e-02, 6.353e-04, -6.226e-02, 2.094e-02, 6.413e-02, -2.107e-02, 9.443e-03, -1.998e-02, -2.543e-02, -3.747e-02, -5.843e-02));
	r += mul(s2_0, M4(4.447e-02, 2.008e-02, 1.166e-02, -6.423e-02, -2.641e-02, 6.633e-03, 6.037e-03, -9.183e-02, 5.102e-03, -8.496e-03, 1.533e-02, -3.293e-02, -5.401e-03, -6.527e-03, -5.758e-03, -3.875e-02));
	r += mul(s2_1, M4(7.771e-02, -2.109e-02, -4.552e-03, -1.446e-01, -8.530e-02, 2.467e-02, -1.000e-01, 4.763e-02, -1.362e-01, 2.498e-02, -8.309e-02, 3.162e-03, -2.888e-02, -1.783e-03, 5.342e-02, -3.659e-02));
	r += mul(s2_2, M4(8.378e-04, 1.916e-02, -4.659e-03, -7.257e-02, 5.495e-02, -2.871e-02, -1.156e-01, 4.331e-02, -1.361e-02, 5.097e-02, 2.864e-02, 9.206e-02, 1.688e-02, 7.968e-03, -4.663e-02, 3.351e-02));
	r += mul(s2_3, M4(2.694e-02, -2.718e-02, -8.731e-03, 6.521e-02, 3.577e-02, -6.016e-02, 1.373e-02, 1.160e-01, -5.251e-02, -3.127e-02, 2.267e-02, -2.262e-01, 2.205e-03, -8.911e-02, 4.139e-02, -6.213e-02));
	r += mul(s2_4, M4(8.075e-04, -2.516e-01, -8.853e-02, 2.822e-01, 1.332e+00, -5.636e-03, 1.237e-01, -8.026e-02, 4.162e-02, -1.441e-01, -2.971e-02, -4.698e-01, -3.287e-03, -4.563e-03, -1.723e-02, 1.634e-02));
	r += mul(s2_5, M4(4.913e-02, -2.393e-02, -1.470e-01, 9.439e-02, -1.122e-01, 9.323e-02, -3.077e-02, 1.754e-01, -1.471e-01, 4.430e-02, -1.331e-01, -8.060e-02, 1.219e-02, 1.378e-01, -8.158e-02, 2.992e-02));
	r += mul(s2_6, M4(2.081e-02, 2.380e-02, -3.550e-02, -4.048e-02, 6.532e-02, 1.243e-01, -7.494e-02, -8.695e-02, -1.026e-01, 1.451e-02, 4.672e-02, 1.798e-01, 1.324e-02, -2.579e-02, 1.651e-02, 4.151e-02));
	r += mul(s2_7, M4(-1.016e-02, -3.179e-02, -3.260e-02, -2.545e-02, -3.175e-01, 2.065e-01, 1.465e-01, 4.314e-01, 5.872e-02, -2.164e-01, -1.738e-02, -1.056e-01, -4.432e-02, 2.234e-02, 2.694e-02, -4.202e-02));
	r += mul(s2_8, M4(4.236e-02, 1.212e-01, -1.626e-02, 4.529e-02, 1.334e-01, -4.174e-02, 2.842e-01, -1.151e-01, 1.048e-03, -1.064e-01, 1.952e-02, -4.032e-02, -7.044e-03, -4.142e-02, -3.367e-03, -2.904e-02));
	r += mul(s3_0, M4(9.659e-03, 3.371e-03, 1.041e-01, -1.671e-01, -2.215e-02, -5.991e-03, 1.426e-03, -1.418e-02, -1.939e-04, 4.020e-03, 1.049e-02, -3.490e-03, 1.067e-01, -8.036e-02, 4.230e-02, -2.511e-02));
	r += mul(s3_1, M4(1.563e-01, -7.427e-02, 3.044e-02, -1.173e-01, -2.679e-02, -2.248e-02, 1.057e-02, 1.012e-02, -4.614e-02, 4.739e-03, 1.035e-02, 4.073e-03, -2.028e-01, 1.295e-02, -2.365e-02, -1.303e-01));
	r += mul(s3_2, M4(-7.104e-02, 2.678e-02, 1.907e-02, -1.038e-01, 3.784e-03, -1.367e-02, -1.680e-02, 3.356e-02, -1.324e-02, -1.248e-02, 1.112e-03, 3.279e-03, -1.368e-02, 9.241e-02, -9.920e-02, 5.132e-02));
	r += mul(s3_3, M4(-1.272e-01, 2.448e-02, -1.100e-01, 1.986e-01, -6.428e-02, -8.187e-03, -1.187e-02, -7.573e-03, 4.603e-02, -5.381e-03, 2.691e-02, -9.255e-02, -5.670e-02, 2.501e-02, -1.060e-02, -3.866e-02));
	r += mul(s3_4, M4(1.431e-01, -2.284e-01, 2.528e-01, -1.823e-02, 1.450e-01, 8.838e-02, 4.778e-02, -1.077e-01, -9.081e-03, 3.745e-03, 2.044e-02, -1.659e-01, -1.535e-01, -4.156e-01, -1.492e-02, -7.520e-01));
	r += mul(s3_5, M4(-1.804e-02, -6.469e-02, 4.314e-02, -8.508e-02, -5.482e-02, 8.162e-02, 3.168e-02, 4.119e-02, -1.441e-01, 8.395e-02, 1.513e-02, 8.172e-04, 8.710e-02, 2.463e-01, 7.973e-01, 1.598e-01));
	r += mul(s3_6, M4(-9.055e-03, 5.515e-02, -4.915e-02, 1.311e-02, 7.708e-03, 4.664e-03, -2.212e-02, 2.646e-03, -4.821e-02, -1.353e-01, 4.578e-02, 6.153e-02, -5.700e-02, -9.841e-02, 1.023e-03, 1.154e-02));
	r += mul(s3_7, M4(-1.460e-01, 2.300e-03, -3.702e-02, -4.322e-01, -6.298e-02, -6.641e-02, 4.158e-02, -7.813e-02, 1.776e-02, -2.574e-01, -8.900e-04, 5.138e-02, -4.480e-02, -1.231e-01, 5.285e-02, 7.496e-02));
	r += mul(s3_8, M4(-2.439e-02, 1.361e-01, 8.567e-02, 1.258e-01, -4.232e-03, 1.527e-02, 2.423e-02, 3.421e-02, -4.855e-03, -4.871e-02, 5.227e-02, -1.751e-02, -1.361e-02, -1.825e-01, -1.486e-01, -1.050e-01));
	r += V4(5.049e-03, -4.376e-04, -3.273e-03, -7.942e-03);
	return r;
}
void Pass8(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 9
//!DESC CuNNy-6x8C-CHROMA-NVL-out
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-2.766e-01, 2.628e-01, -6.180e-02, 3.852e-02, 1.140e-02, -3.487e-03, 2.299e-02, 2.086e-02, -3.989e-02, 1.162e-02, 7.269e-02, -1.995e-02, -4.065e-02, 1.239e-02, -9.961e-03, 9.490e-03));
	r += mul(s0_1, M4(3.229e-03, -3.333e-02, 3.625e-02, -4.256e-03, 3.618e-02, 4.578e-02, 2.502e-03, 3.480e-02, 1.747e-01, -3.164e-01, -1.715e-01, 4.905e-02, 2.146e-03, -4.163e-02, 3.967e-02, 2.923e-02));
	r += mul(s0_2, M4(-6.579e-03, -3.684e-03, -1.017e-02, 2.203e-03, 1.412e-02, 9.069e-03, 1.385e-02, 1.047e-02, -7.544e-02, 3.114e-02, -4.592e-02, -7.152e-02, -1.697e-04, -1.640e-02, -1.655e-03, 9.919e-03));
	r += mul(s0_3, M4(5.916e-02, -4.089e-02, -2.155e-01, 2.682e-01, -1.620e-01, 4.407e-02, -8.373e-02, 7.777e-03, 6.958e-02, -7.042e-04, -1.747e-01, 6.650e-03, 2.390e-03, -7.065e-02, -2.134e-02, 2.143e-02));
	r += mul(s0_4, M4(6.500e-02, -8.179e-02, 5.705e-02, 1.727e-03, -7.105e-02, 2.307e-01, -1.548e-01, 5.399e-02, 3.016e-02, 9.703e-02, 1.684e-01, 4.593e-01, 5.569e-01, 5.303e-01, 1.645e-01, -2.102e-02));
	r += mul(s0_5, M4(1.655e-02, -1.249e-02, 1.006e-02, 2.349e-02, -5.775e-02, 2.290e-02, -1.164e-02, -6.958e-02, -4.401e-02, 8.080e-02, -2.688e-02, -5.192e-02, -1.132e-02, -4.599e-02, -2.664e-03, 5.867e-02));
	r += mul(s0_6, M4(-2.518e-02, 2.445e-02, 1.248e-04, -1.477e-03, 1.838e-02, -1.151e-02, -4.651e-02, 1.784e-02, -4.077e-04, 4.840e-03, 3.260e-03, -2.461e-02, -1.193e-02, -1.874e-02, -9.373e-04, -7.010e-02));
	r += mul(s0_7, M4(2.887e-03, 3.660e-03, 3.547e-03, -1.563e-03, 1.154e-02, -5.534e-02, 1.744e-01, -1.772e-01, 8.509e-03, -1.080e-03, -1.323e-02, -7.202e-02, 3.477e-02, 5.026e-02, 1.302e-01, 1.608e-01));
	r += mul(s0_8, M4(-2.214e-03, -8.083e-03, -3.024e-03, -7.723e-04, -1.375e-02, 1.931e-02, -2.853e-02, -1.684e-02, 7.797e-03, 1.425e-02, 1.709e-02, 1.790e-02, -5.911e-02, 2.570e-02, -7.207e-02, -7.412e-02));
	r += mul(s1_0, M4(1.679e-02, -1.981e-02, -2.969e-03, 3.685e-02, 4.800e-03, 2.977e-02, 2.290e-02, 1.657e-02, 8.872e-03, -1.470e-02, 3.993e-03, 3.692e-03, -1.797e-02, 1.095e-02, 1.472e-03, -5.689e-03));
	r += mul(s1_1, M4(-2.909e-02, -3.444e-02, 2.223e-02, 2.485e-03, 2.784e-02, 5.968e-02, 2.313e-02, 3.197e-02, -4.820e-02, 4.197e-02, -1.251e-01, -6.250e-02, -9.911e-03, -4.103e-02, 2.873e-02, 1.548e-02));
	r += mul(s1_2, M4(2.976e-04, -2.314e-02, -1.183e-02, 3.459e-04, 2.085e-02, 2.896e-03, 1.665e-02, 6.517e-03, -5.603e-02, -1.993e-02, -2.393e-02, -8.166e-02, 1.011e-02, -8.482e-03, -6.118e-03, 8.076e-03));
	r += mul(s1_3, M4(8.841e-02, -2.974e-02, 7.839e-02, -8.289e-03, -7.009e-02, 6.962e-03, -4.722e-02, -1.466e-02, -4.993e-02, -4.426e-03, -1.312e-02, -2.626e-02, -2.221e-02, -3.815e-02, -8.021e-03, 4.735e-02));
	r += mul(s1_4, M4(3.679e-02, -7.220e-02, 3.083e-02, -5.848e-02, 2.115e-01, -2.467e-02, -1.898e-01, 7.109e-02, 1.309e-01, 4.548e-02, 9.614e-02, 3.944e-01, 2.509e-01, 2.361e-01, 1.773e-01, -1.412e-02));
	r += mul(s1_5, M4(2.387e-02, -3.334e-03, 1.830e-02, 1.295e-02, -6.336e-02, 6.958e-02, -2.022e-02, -1.003e-01, -5.241e-02, 1.050e-01, -5.583e-02, -4.256e-02, 2.254e-02, -7.232e-02, 1.322e-02, 6.180e-02));
	r += mul(s1_6, M4(7.401e-03, 7.539e-04, -2.153e-03, 2.372e-02, -5.066e-03, 2.551e-03, -6.953e-03, 1.178e-02, -6.423e-03, 2.059e-03, -2.807e-02, -1.329e-02, -9.348e-03, -2.106e-02, -1.922e-02, -6.460e-02));
	r += mul(s1_7, M4(-5.217e-03, 9.231e-05, 1.048e-02, -4.408e-03, -1.077e-02, 3.980e-03, 3.024e-02, -1.196e-01, 6.096e-03, -4.995e-04, 1.998e-02, -4.639e-02, 1.788e-02, 1.558e-02, 8.033e-02, 1.544e-01));
	r += mul(s1_8, M4(-2.348e-03, -6.905e-03, -6.977e-03, -1.191e-03, -7.042e-03, -2.143e-03, -6.937e-03, 5.577e-02, 5.494e-03, 3.504e-03, 1.353e-02, 2.055e-02, -6.372e-02, 2.792e-02, -5.355e-02, -7.742e-02));
	r += mul(s2_0, M4(-1.848e-02, 1.983e-03, -1.210e-02, -1.004e-02, -3.357e-02, 7.953e-03, -4.176e-02, 2.196e-03, 2.417e-01, -2.129e-01, 3.564e-02, -1.466e-02, 1.481e-02, -9.318e-03, 1.729e-02, 4.804e-03));
	r += mul(s2_1, M4(6.102e-02, 3.951e-02, 1.862e-02, -1.242e-02, 4.847e-02, -1.312e-02, 1.593e-01, 4.679e-02, -3.880e-03, -2.372e-03, -2.243e-02, 1.924e-02, -3.430e-02, -5.040e-02, -1.401e-02, -1.641e-02));
	r += mul(s2_2, M4(1.976e-02, -2.714e-02, -3.410e-04, -1.104e-02, 4.285e-02, 4.196e-02, -4.490e-03, 7.276e-02, -3.702e-03, 1.261e-03, 2.802e-03, -1.020e-02, -5.084e-04, -7.473e-03, -4.031e-03, 1.395e-03));
	r += mul(s2_3, M4(5.021e-02, -2.482e-02, 1.040e-02, 4.411e-02, -3.791e-02, -9.414e-03, -2.991e-02, -4.104e-02, 3.584e-01, -3.886e-01, 4.867e-01, -4.910e-01, 1.130e-01, -1.055e-02, 1.053e-01, 2.268e-02));
	r += mul(s2_4, M4(-2.789e-01, 1.963e-01, -1.499e-01, 1.696e-01, 5.210e-02, -4.235e-02, 8.923e-03, 7.142e-02, -1.587e-01, 1.990e-01, -1.405e-01, -8.637e-02, 1.106e-02, 1.143e-01, -1.407e-01, -1.052e-01));
	r += mul(s2_5, M4(-5.330e-02, 6.763e-02, -4.018e-03, -1.284e-01, -1.558e-02, -3.516e-03, 1.187e-02, -5.129e-02, -1.045e-02, 3.783e-03, -5.116e-03, -1.116e-02, 3.108e-02, 5.136e-03, 3.307e-02, 3.377e-02));
	r += mul(s2_6, M4(1.033e-02, -9.207e-03, 1.912e-02, -2.458e-02, -3.301e-03, 8.364e-03, 1.877e-03, 4.958e-03, -1.211e-02, 6.934e-03, 6.075e-02, -1.245e-01, 5.494e-03, 3.950e-03, 2.017e-02, -3.892e-02));
	r += mul(s2_7, M4(-1.863e-02, -2.595e-02, -1.047e-01, 9.654e-02, 8.898e-03, -3.652e-03, -2.799e-03, -2.640e-02, -1.255e-02, -2.982e-02, 6.405e-03, 4.617e-02, -9.002e-03, 1.045e-02, 2.986e-02, 5.331e-02));
	r += mul(s2_8, M4(1.043e-02, 6.868e-03, 1.878e-02, 1.151e-02, 5.029e-03, 1.721e-03, 1.165e-02, 2.571e-04, -1.481e-03, 3.278e-03, -1.668e-04, -3.104e-03, -9.601e-03, 1.114e-02, -7.407e-03, 3.276e-04));
	r += mul(s3_0, M4(-1.143e-01, 3.365e-02, 7.155e-02, -3.912e-03, -1.474e-01, 9.637e-03, 1.896e-02, -2.254e-03, 3.600e-02, -4.156e-03, 4.927e-02, 1.553e-02, 1.536e-03, -3.527e-03, 4.369e-02, 2.946e-02));
	r += mul(s3_1, M4(4.523e-01, -1.375e-01, -1.431e-01, -8.310e-02, -4.346e-01, -4.373e-01, 6.911e-01, 4.632e-01, 3.158e-02, -3.332e-02, 7.538e-03, 3.845e-02, 2.288e-02, -2.105e-02, -1.128e-02, -7.365e-03));
	r += mul(s3_2, M4(-2.729e-02, -3.068e-02, 2.713e-03, -2.464e-02, 4.894e-02, -1.204e-01, -1.851e-02, 2.364e-01, 2.045e-03, 1.595e-03, 4.072e-03, 1.612e-03, 1.326e-03, -1.741e-02, 1.201e-02, 3.531e-02));
	r += mul(s3_3, M4(1.853e-01, -1.290e-02, -5.499e-02, -3.257e-02, -1.298e-02, 8.338e-03, -6.158e-02, -4.529e-02, -2.960e-02, -5.244e-02, 1.037e-01, -9.205e-02, 2.020e-01, -4.844e-03, -1.569e-02, 5.358e-02));
	r += mul(s3_4, M4(-3.474e-01, -1.164e-01, -3.463e-01, 7.601e-01, 7.643e-02, -1.742e-02, -1.162e-02, 8.565e-02, -1.773e-01, 3.003e-01, -1.029e-01, -2.596e-02, 3.720e-01, 4.315e-01, -5.742e-01, -5.371e-01));
	r += mul(s3_5, M4(-6.286e-02, 1.850e-01, 2.205e-02, -2.130e-01, -4.218e-03, 2.263e-02, 1.519e-02, -7.447e-02, -1.533e-02, 1.205e-02, -1.204e-02, -1.180e-02, 2.526e-02, 1.290e-01, 4.527e-02, -9.833e-02));
	r += mul(s3_6, M4(-1.437e-02, 1.189e-02, 1.276e-02, -1.293e-02, -1.231e-02, 4.475e-03, 4.194e-03, 1.443e-02, -1.031e-02, -2.006e-02, -7.741e-02, -3.382e-02, -2.571e-02, -5.964e-03, 4.282e-02, -3.182e-02));
	r += mul(s3_7, M4(-6.213e-06, 1.693e-02, -1.102e-02, 6.314e-02, 1.183e-02, -7.166e-03, -1.148e-02, -2.508e-02, -9.745e-03, -3.675e-02, 1.621e-02, 4.723e-02, -1.720e-02, -2.187e-02, -6.167e-03, 5.730e-02));
	r += mul(s3_8, M4(-1.936e-03, -1.172e-02, 2.150e-02, 6.256e-03, 9.310e-04, -7.584e-04, 3.004e-03, 5.617e-03, -2.631e-03, 2.115e-03, -2.839e-03, -5.739e-03, -3.960e-02, 3.450e-03, -3.988e-03, 1.224e-02));
	r += V4(3.073e-03, 2.958e-03, 2.800e-03, 1.841e-03);
	return tanh(r);
}
void Pass9(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 10
//!DESC CuNNy-6x8C-CHROMA-NVL-shuffle
//!STYLE PS
//!IN t2, INPUT, easu
float4 Pass10(float2 pos) {
	float2 pt = float2(GetInputPt());
	static const float3x3 rgb2yuv = {0.299, 0.587, 0.114, -0.169, -0.331, 0.5, 0.5, -0.419, -0.081};
	static const float3x3 yuv2rgb = {1, -0.00093, 1.401687, 1, -0.3437, -0.71417, 1, 1.77216, 0.00099};
	float4 r = 0.0;
	float2 size = float2(GetInputSize());
	float2 f = frac(pos * size);
	float3 yuv = mul(rgb2yuv, INPUT.SampleLevel(SL, pos, 0).rgb);
	int2 i = int2(f * 2.0);
	r.r = t2.SampleLevel(SP, (float2(0.5, 0.5) - f) * pt + pos, 0)[2*i.y + i.x];
	r.r += easu.SampleLevel(SP, pos, 0).r;
	r.a = 1.0;
	r.r = clamp(r, 0.0, 1.0);
	float3 px = mul(yuv2rgb, float3(r.r, yuv.yz));
	return float4(px, 1.0);
}
