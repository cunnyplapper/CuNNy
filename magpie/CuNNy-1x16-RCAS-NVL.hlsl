// CuNNy 1x16 RCAS NVL
// Copyright (c) 2024 cunnyplapper

// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public
// License along with this program.  If not, see <https://www.gnu.org/licenses/>.
/* ------------------------------------------------------------------- */

//!MAGPIE EFFECT
//!VERSION 3
//!OUTPUT_WIDTH INPUT_WIDTH * 2
//!OUTPUT_HEIGHT INPUT_HEIGHT * 2

//!TEXTURE
Texture2D INPUT;

//!TEXTURE
//!WIDTH INPUT_WIDTH * 2
//!HEIGHT INPUT_HEIGHT * 2
//!FORMAT R8_UNORM
Texture2D easu;

//!TEXTURE
//!WIDTH INPUT_WIDTH * 2
//!HEIGHT INPUT_HEIGHT * 2
//!FORMAT R8_UNORM
Texture2D rcas;

//!SAMPLER
//!FILTER POINT
SamplerState SP;

//!SAMPLER
//!FILTER LINEAR
SamplerState SL;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D up_0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D up_1;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D up_2;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D up_3;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D conv1_0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D conv1_1;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D conv1_2;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_UNORM
Texture2D conv1_3;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D down;

// FSR mpv | modified
// Copyright (c) 2021 Advanced Micro Devices, Inc. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// FidelityFX FSR v1.0.2 by AMD
// ported to mpv by agyild

//!PASS 1
//!DESC CuNNy-EASU
//!STYLE PS
//!IN INPUT
//!OUT easu

float GetLuma(float3 rgb) {
	return dot(float3(0.299, 0.587, 0.114), rgb);
}

float APrxLoRcpF1(float a) {
	return asfloat(uint(0x7ef07ebb) - asuint(a));
}

float APrxLoRsqF1(float a) {
	return asfloat(uint(0x5f347d74) - (asuint(a) >> uint(1)));
}

float AMin3F1(float x, float y, float z) {

	return min(x, min(y, z));
}

float AMax3F1(float x, float y, float z) {
	return max(x, max(y, z));
}

void tap(inout float aC, inout float aW, float2 off, float2 dir, float2 len,
         float lob, float clp, float c){
	float2 v;
	v.x = (off.x * ( dir.x)) + (off.y * dir.y);
	v.y = (off.x * (-dir.y)) + (off.y * dir.x);
	v *= len;
	float d2 = v.x * v.x + v.y * v.y;
	d2 = min(d2, clp);
	float wB = float(2.0 / 5.0) * d2 + -1.0;

	float wA = lob * d2 + -1.0;
	wB *= wB;
	wA *= wA;
	wB = float(25.0 / 16.0) * wB + float(-(25.0 / 16.0 - 1.0));
	float w = wB * wA;
	aC += c * w;
	aW += w;
}

void set(inout float2 dir, inout float len, float2 pp, bool biS, bool biT,
         bool biU, bool biV, float lA, float lB, float lC, float lD, float lE){

	float w = 0.0;
	if (biS)
		w = (1.0 - pp.x) * (1.0 - pp.y);
	if (biT)
		w =        pp.x  * (1.0 - pp.y);
	if (biU)
		w = (1.0 - pp.x) *        pp.y;

	if (biV)
		w =        pp.x  *        pp.y;
	float dc = lD - lC;
	float cb = lC - lB;
	float lenX = max(abs(dc), abs(cb));
	lenX = APrxLoRcpF1(lenX);
	float dirX = lD - lB;
	lenX = clamp(abs(dirX) * lenX, 0.0, 1.0);
	lenX *= lenX;
	float ec = lE - lC;

	float ca = lC - lA;
	float lenY = max(abs(ec), abs(ca));
	lenY = APrxLoRcpF1(lenY);
	float dirY = lE - lA;
	lenY = clamp(abs(dirY) * lenY, 0.0, 1.0);
	lenY *= lenY;
	dir += float2(dirX, dirY) * w;
	len += dot(float2(w, w), float2(lenX, lenY));
}

float4 Pass1(float2 pos) {
	float2 pt = float2(GetInputPt());
	float2 size = float2(GetInputSize());
	float4 pix = float4(0.0, 0.0, 0.0, 1.0);
	float2 pp = pos * size - float2(0.5, 0.5);
	float2 fp = floor(pp);
	pp -= fp;
	float b = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(0.5, -0.5)) * pt), 0).rgb);
	float c = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(1.5, -0.5)) * pt), 0).rgb);
	float e = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(-0.5, 0.5)) * pt), 0).rgb);
	float f = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 0.5, 0.5)) * pt), 0).rgb);
	float g = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 1.5, 0.5)) * pt), 0).rgb);
	float h = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 2.5, 0.5)) * pt), 0).rgb);
	float i = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(-0.5, 1.5)) * pt), 0).rgb);
	float j = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 0.5, 1.5)) * pt), 0).rgb);
	float k = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 1.5, 1.5)) * pt), 0).rgb);
	float l = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 2.5, 1.5)) * pt), 0).rgb);
	float n = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(0.5, 2.5) ) * pt), 0).rgb);
	float o = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(1.5, 2.5) ) * pt), 0).rgb);
	float4 bczzL = float4(b, c, 0.0, 0.0);
	float4 ijfeL = float4(i, j, f, e);
	float4 klhgL = float4(k, l, h, g);
	float4 zzonL = float4(0.0, 0.0, o, n);
	float bL = bczzL.x;
	float cL = bczzL.y;
	float iL = ijfeL.x;
	float jL = ijfeL.y;
	float fL = ijfeL.z;
	float eL = ijfeL.w;
	float kL = klhgL.x;
	float lL = klhgL.y;
	float hL = klhgL.z;
	float gL = klhgL.w;
	float oL = zzonL.z;
	float nL = zzonL.w;
	float2 dir = float2(0.0, 0.0);
	float len = 0.0;
	set(dir, len, pp, true, false, false, false, bL, eL, fL, gL, jL);
	set(dir, len, pp, false, true, false, false, cL, fL, gL, hL, kL);
	set(dir, len, pp, false, false, true, false, fL, iL, jL, kL, nL);
	set(dir, len, pp, false, false, false, true, gL, jL, kL, lL, oL);
	float2 dir2 = dir * dir;
	float dirR = dir2.x + dir2.y;
	bool zro = dirR < float(1.0 / 32768.0);
	dirR = APrxLoRsqF1(dirR);
	dirR = zro ? 1.0 : dirR;
	dir.x = zro ? 1.0 : dir.x;
	dir *= float2(dirR, dirR);
	len = len * 0.5;
	len *= len;
	float stretch = (dir.x * dir.x + dir.y * dir.y) * APrxLoRcpF1(max(abs(dir.x), abs(dir.y)));
	float2 len2 = float2(1.0 + (stretch - 1.0) * len, 1.0 + -0.5 * len);
	float lob = 0.5 + float((1.0 / 4.0 - 0.04) - 0.5) * len;
	float clp = APrxLoRcpF1(lob);
	float aC = 0.0;
	float aW = 0.0;
	tap(aC, aW, float2( 0.0,-1.0) - pp, dir, len2, lob, clp, bL);
	tap(aC, aW, float2( 1.0,-1.0) - pp, dir, len2, lob, clp, cL);
	tap(aC, aW, float2(-1.0, 1.0) - pp, dir, len2, lob, clp, iL);
	tap(aC, aW, float2( 0.0, 1.0) - pp, dir, len2, lob, clp, jL);
	tap(aC, aW, float2( 0.0, 0.0) - pp, dir, len2, lob, clp, fL);
	tap(aC, aW, float2(-1.0, 0.0) - pp, dir, len2, lob, clp, eL);
	tap(aC, aW, float2( 1.0, 1.0) - pp, dir, len2, lob, clp, kL);
	tap(aC, aW, float2( 2.0, 1.0) - pp, dir, len2, lob, clp, lL);
	tap(aC, aW, float2( 2.0, 0.0) - pp, dir, len2, lob, clp, hL);
	tap(aC, aW, float2( 1.0, 0.0) - pp, dir, len2, lob, clp, gL);
	tap(aC, aW, float2( 1.0, 2.0) - pp, dir, len2, lob, clp, oL);
	tap(aC, aW, float2( 0.0, 2.0) - pp, dir, len2, lob, clp, nL);
	pix.r = aC / aW;
	float min1 = min(AMin3F1(fL, gL, jL), kL);
	float max1 = max(AMax3F1(fL, gL, jL), kL);
	pix.r = clamp(pix.r, min1, max1);
	pix.r = clamp(pix.r, 0.0, 1.0);
	return pix;
}

//!PASS 2
//!DESC CuNNy-RCAS
//!STYLE PS
//!IN easu
//!OUT rcas

// CuNNy: do not change unless changed during training as well
#define SHARPNESS 2.0
#define FSR_RCAS_LIMIT (0.25 - (1.0 / 16.0))

float APrxMedRcpF1(float a) {
	float b = asfloat(uint(0x7ef19fff) - asuint(a));
	return b * (-b * a + 2.0);
}

float AMax3F1(float x, float y, float z) {
	return max(x, max(y, z)); 
}


float AMin3F1(float x, float y, float z) {
	return min(x, min(y, z));
}

float4 Pass2(float2 pos) {
	float2 pt = float2(GetInputPt());
	float2 size = float2(GetInputSize());
	float3 bde = easu.Gather(SP, pos + pt * float2(-0.5, -0.5), 0).xyz;
	float b = bde.z;
	float d = bde.x;
	float e = bde.y;
	float2 fh = easu.Gather(SP, pos + pt * float2(0.5, 0.5), 0).zx;
	float f = fh.x;
	float h = fh.y;
	float mn1L = min(AMin3F1(b, d, f), h);
	float mx1L = max(AMax3F1(b, d, f), h);
	float2 peakC = float2(1.0, -1.0 * 4.0);
	float hitMinL = min(mn1L, e) / (4.0 * mx1L);
	float hitMaxL = (peakC.x - max(mx1L, e)) / (4.0 * mn1L + peakC.y);
	float lobeL = max(-hitMinL, hitMaxL);
	float lobe = max(float(-FSR_RCAS_LIMIT), min(lobeL, 0.0)) * exp2(-clamp(float(SHARPNESS), 0.0, 2.0));
	float nz = 0.25 * b + 0.25 * d + 0.25 * f + 0.25 * h - e;
	nz = clamp(abs(nz) * APrxMedRcpF1(AMax3F1(AMax3F1(b, d, e), f, h) - AMin3F1(AMin3F1(b, d, e), f, h)), 0.0, 1.0);
	nz = -0.5 * nz + 1.0;
	lobe *= nz;
	float rcpL = APrxMedRcpF1(4.0 * lobe + 1.0);
	float4 pix = float4(0.0, 0.0, 0.0, 1.0);
	pix.r = float((lobe * b + lobe * d + lobe * h + lobe * f + e) * rcpL);
	return pix;
}

//!PASS 3
//!DESC CuNNy-1x16-RCAS-NVL-up
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN INPUT
//!OUT up_0, up_1, up_2, up_3
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define l0(x, y) dot(float3(0.299, 0.587, 0.114), O(INPUT, float2(x, y)).rgb)
float4 f0(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	min16float4 r = 0.0;
	r += min16float4(0.04051073268055916, -0.011603095568716526, -0.04661881923675537, -0.044354282319545746) * s0_0;
	r += min16float4(-0.05254519730806351, 0.07418380677700043, -0.07296145707368851, 0.0813291147351265) * s0_1;
	r += min16float4(0.011500869877636433, 0.040795404464006424, 0.010902579873800278, -0.03093932569026947) * s0_2;
	r += min16float4(0.2900792062282562, 0.16888467967510223, -0.05588046833872795, 0.12973466515541077) * s0_3;
	r += min16float4(0.03991977125406265, -0.5043815970420837, 0.3994108736515045, 0.0620751827955246) * s0_4;
	r += min16float4(-0.04348384216427803, -0.011993181891739368, -0.11826519668102264, -0.16259758174419403) * s0_5;
	r += min16float4(-0.3642578423023224, -0.00940212793648243, -0.061645787209272385, -0.08519574999809265) * s0_6;
	r += min16float4(0.04576785862445831, 0.01288678776472807, 0.011324074119329453, 0.23823194205760956) * s0_7;
	r += min16float4(0.03149934485554695, 0.06485351920127869, -0.060684558004140854, -0.1821734756231308) * s0_8;
	r += float4(0.00014266656944528222, 0.019397396594285965, -0.004294720012694597, 0.005843560677021742);
	return max(r, 0.0);
}
float4 f1(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	min16float4 r = 0.0;
	r += min16float4(-0.06711445748806, -0.028681574389338493, 0.0021594823338091373, 0.09487392008304596) * s0_0;
	r += min16float4(-0.028706949204206467, 0.04800524190068245, 0.00463585089892149, 0.16455070674419403) * s0_1;
	r += min16float4(-0.10406050831079483, 0.12596452236175537, -0.007969888858497143, -0.002996823051944375) * s0_2;
	r += min16float4(-0.12841831147670746, 0.12058129906654358, -0.019946273416280746, -0.3180617690086365) * s0_3;
	r += min16float4(0.3316255509853363, 0.11070606112480164, -0.0005031237378716469, -0.10381414741277695) * s0_4;
	r += min16float4(0.2075192779302597, -0.040504563599824905, 0.028816407546401024, -0.11743506044149399) * s0_5;
	r += min16float4(-0.047568436712026596, -0.041583042591810226, 0.010657350532710552, 0.19977176189422607) * s0_6;
	r += min16float4(-0.06333120167255402, 0.026478908956050873, -0.3232421875, -0.05265237018465996) * s0_7;
	r += min16float4(-0.09611018002033234, 0.07006841897964478, 0.30846893787384033, 0.13350407779216766) * s0_8;
	r += float4(0.0054902369156479836, -0.15556250512599945, -0.0014074075734242797, 0.011838308535516262);
	return max(r, 0.0);
}
float4 f2(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	min16float4 r = 0.0;
	r += min16float4(-0.15283231437206268, 0.1557796150445938, -0.0518522784113884, 0.0017955040093511343) * s0_0;
	r += min16float4(-0.11501971632242203, 0.15121088922023773, 0.046667445451021194, -0.043748222291469574) * s0_1;
	r += min16float4(0.054544296115636826, -0.08824712038040161, 0.006418075878173113, -0.02269228920340538) * s0_2;
	r += min16float4(-0.09376905858516693, 0.09448251128196716, 0.27246084809303284, 0.4405633211135864) * s0_3;
	r += min16float4(-0.18828098475933075, -0.18409182131290436, -0.2809401750564575, -0.2542996108531952) * s0_4;
	r += min16float4(-0.056376948952674866, 0.005016566254198551, 0.0038273469544947147, -0.01297843735665083) * s0_5;
	r += min16float4(0.24218393862247467, -0.23300211131572723, 0.041073989123106, -0.1333007961511612) * s0_6;
	r += min16float4(0.3095049560070038, -0.001789695117622614, -0.026780741289258003, 0.0431223064661026) * s0_7;
	r += min16float4(0.001079226960428059, 0.09932906180620193, -0.009644209407269955, -0.014855701476335526) * s0_8;
	r += float4(0.002444417215883732, -0.00031096706516109407, 0.00014036073116585612, 0.012301157228648663);
	return max(r, 0.0);
}
float4 f3(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	min16float4 r = 0.0;
	r += min16float4(-0.0002487078309059143, -0.09526391327381134, -0.03161408752202988, -0.22146108746528625) * s0_0;
	r += min16float4(-0.009710539132356644, -0.26596423983573914, 0.21266327798366547, 0.014744634740054607) * s0_1;
	r += min16float4(0.0029885610565543175, 0.03858267888426781, 0.1481713056564331, 0.06855645030736923) * s0_2;
	r += min16float4(0.012598928064107895, -0.045399636030197144, -0.16259099543094635, -0.09399813413619995) * s0_3;
	r += min16float4(-0.3694857954978943, 0.16775935888290405, -0.24661117792129517, 0.3133420944213867) * s0_4;
	r += min16float4(-0.008758566342294216, 0.2022608369588852, 0.07638627290725708, -0.13623046875) * s0_5;
	r += min16float4(-0.011384040117263794, -0.0002398153010290116, 0.10539740324020386, 0.06103161722421646) * s0_6;
	r += min16float4(0.3759765326976776, 0.036858931183815, 0.01143768522888422, -0.07493099570274353) * s0_7;
	r += min16float4(0.008495588786900043, -0.04099046438932419, -0.111572265625, 0.06743821501731873) * s0_8;
	r += float4(-0.0005575488903559744, -0.0007255111704580486, -0.0029284965712577105, 0.0024805963039398193);
	return max(r, 0.0);
}
void Pass3(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	min16float s0_0 = l0(-1.0, -1.0);
	min16float s0_1 = l0(0.0, -1.0);
	min16float s0_2 = l0(1.0, -1.0);
	min16float s0_3 = l0(-1.0, 0.0);
	min16float s0_4 = l0(0.0, 0.0);
	min16float s0_5 = l0(1.0, 0.0);
	min16float s0_6 = l0(-1.0, 1.0);
	min16float s0_7 = l0(0.0, 1.0);
	min16float s0_8 = l0(1.0, 1.0);
	up_0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
	up_1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
	up_2[gxy] = f2(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
	up_3[gxy] = f3(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
}
//!PASS 4
//!DESC CuNNy-1x16-RCAS-NVL-conv1
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN up_0, up_1, up_2, up_3
//!OUT conv1_0, conv1_1, conv1_2, conv1_3
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define l0(x, y) O(up_0, float2(x, y))
#define l1(x, y) O(up_1, float2(x, y))
#define l2(x, y) O(up_2, float2(x, y))
#define l3(x, y) O(up_3, float2(x, y))
float4 f0(float2 pt, float2 pos, min16float4 s0_0, min16float4 s0_1, min16float4 s0_2, min16float4 s0_3, min16float4 s0_4, min16float4 s0_5, min16float4 s0_6, min16float4 s0_7, min16float4 s0_8, min16float4 s1_0, min16float4 s1_1, min16float4 s1_2, min16float4 s1_3, min16float4 s1_4, min16float4 s1_5, min16float4 s1_6, min16float4 s1_7, min16float4 s1_8, min16float4 s2_0, min16float4 s2_1, min16float4 s2_2, min16float4 s2_3, min16float4 s2_4, min16float4 s2_5, min16float4 s2_6, min16float4 s2_7, min16float4 s2_8, min16float4 s3_0, min16float4 s3_1, min16float4 s3_2, min16float4 s3_3, min16float4 s3_4, min16float4 s3_5, min16float4 s3_6, min16float4 s3_7, min16float4 s3_8) {
	min16float4 r = 0.0;
	r += mul(s0_0, min16float4x4(-0.004082290921360254, 0.08736639469861984, 0.0058439262211322784, 0.06915397942066193, -0.006989336106926203, -0.2628267705440521, -0.04682203382253647, 0.010917754843831062, -0.020295148715376854, -0.257428377866745, -0.015111714601516724, 0.040160901844501495, 0.19482414424419403, 0.038828540593385696, -0.20080935955047607, -0.11703210324048996));
	r += mul(s0_1, min16float4x4(0.14652423560619354, 0.068784199655056, 0.05537113547325134, -0.010574674233794212, 0.07593530416488647, -0.8232142925262451, -0.04226024076342583, 0.06951539218425751, -0.39090701937675476, 0.862555980682373, -0.04160172492265701, 0.13144008815288544, -0.030980920419096947, 0.20195414125919342, -0.17702074348926544, -0.0845775380730629));
	r += mul(s0_2, min16float4x4(0.17486806213855743, 0.13668060302734375, -0.28614333271980286, 0.1774941384792328, 0.003040026407688856, 0.037735164165496826, 0.07749582827091217, -0.19904477894306183, -0.28400006890296936, 0.03332030400633812, 0.17845512926578522, -0.0920381247997284, 0.17220139503479004, 0.06168091297149658, -0.17946049571037292, -0.04924045503139496));
	r += mul(s0_3, min16float4x4(-0.16170741617679596, 0.06104940548539162, 0.1449843943119049, 0.074472576379776, 0.1142662763595581, 0.0479959100484848, -0.3479357659816742, 0.1170588955283165, 0.5604122877120972, -0.08203548938035965, -0.34863418340682983, 0.2007230818271637, -0.0006201990181580186, -0.08917264640331268, -0.21103282272815704, -0.09111369401216507));
	r += mul(s0_4, min16float4x4(0.27050864696502686, 0.030687160789966583, 0.14721587300300598, -0.1796429306268692, 0.26917725801467896, -0.188107430934906, -0.4113294780254364, -1.1243094205856323, -0.4200892150402069, -0.13477741181850433, -0.11925864219665527, 0.4934861660003662, -0.18655715882778168, -0.07292992621660233, 0.10396962612867355, -0.10812601447105408));
	r += mul(s0_5, min16float4x4(0.3962952494621277, 0.17346660792827606, -0.2239382565021515, 0.2848595976829529, 0.09982848167419434, 0.04817323386669159, 0.21347041428089142, -0.27346301078796387, -0.12609879672527313, -0.059731289744377136, 0.22612886130809784, -0.13027633726596832, -0.009820014238357544, 0.004294084385037422, -0.09318698197603226, 0.20090104639530182));
	r += mul(s0_6, min16float4x4(0.027278166264295578, 0.07515224069356918, 0.1926412731409073, -0.040824443101882935, -0.12192997336387634, -0.0014203788014128804, 0.03812399506568909, 0.17283999919891357, -0.10341762006282806, -0.007852914743125439, -0.20754621922969818, -0.05751964449882507, -0.03260529413819313, 0.01797335408627987, 0.05804051458835602, 0.020014166831970215));
	r += mul(s0_7, min16float4x4(0.23668363690376282, 0.14404739439487457, 0.08861465752124786, -0.16927404701709747, -0.10884742438793182, 0.01178036443889141, 0.11228246241807938, 0.13138560950756073, 0.1303364634513855, -0.041166163980960846, -0.02565697766840458, 0.21159830689430237, -0.12875889241695404, 0.04773310199379921, 0.12664806842803955, 0.07937172055244446));
	r += mul(s0_8, min16float4x4(-0.034553177654743195, 0.02795521356165409, 0.040899671614170074, 0.12341460585594177, -0.0006356292869895697, -0.031531915068626404, -0.05850033089518547, 0.01995609700679779, -0.10565833002328873, 0.026811927556991577, 0.17281244695186615, -0.1567937135696411, 0.04526332765817642, 0.024104338139295578, -0.10756839066743851, 0.06372157484292984));
	r += mul(s1_0, min16float4x4(0.21360401809215546, 0.09631924331188202, 0.0574926994740963, -0.06348995864391327, -0.07246807962656021, 0.19095832109451294, -0.0019355053082108498, 0.22553761303424835, 0.10924908518791199, -0.07030821591615677, 0.5194369554519653, -0.07935880869626999, 0.025925178080797195, -0.021576285362243652, -0.11141492426395416, -0.02504483051598072));
	r += mul(s1_1, min16float4x4(0.09595075249671936, 0.35893234610557556, -0.18546025454998016, -0.10714704543352127, 0.008467339910566807, 0.29446128010749817, 0.05110766738653183, 0.028602812439203262, 0.43969595432281494, 0.026243960484862328, -1.5336039066314697, -0.4412948787212372, 0.10258285701274872, 0.03169373422861099, -0.024718498811125755, -0.09941428899765015));
	r += mul(s1_2, min16float4x4(0.06782855838537216, 0.046880900859832764, -0.007584189530462027, -0.06250154227018356, 0.053349800407886505, 0.14055365324020386, 0.03576452657580376, -0.15958239138126373, -0.22608119249343872, -0.045680657029151917, -0.04545648396015167, 0.000414524954976514, -0.014383592642843723, -0.014238618314266205, -0.013222061097621918, -0.07562292367219925));
	r += mul(s1_3, min16float4x4(-0.21947512030601501, -0.06899004429578781, -0.040174901485443115, 0.019799409434199333, 0.047147154808044434, 0.3701171278953552, -0.15513058006763458, 0.1719125509262085, 0.18258044123649597, 0.03850698843598366, 0.19156606495380402, 0.16418899595737457, -0.047577861696481705, -0.06927496194839478, 0.06713870912790298, 0.017759649083018303));
	r += mul(s1_4, min16float4x4(-0.45913755893707275, -0.17729094624519348, -0.05941537022590637, 0.41085347533226013, -0.04103570803999901, 0.27557504177093506, 0.0487104132771492, 0.28939127922058105, 0.024315031245350838, -0.14500492811203003, -0.2351149618625641, -0.09409689903259277, -0.07399415969848633, 0.03642674535512924, 0.1585390418767929, 0.11973800510168076));
	r += mul(s1_5, min16float4x4(-0.10444148629903793, -0.05063572898507118, 0.038968633860349655, 0.01666426658630371, -0.0642775446176529, 0.06516923755407333, -0.02251202054321766, 0.08975990861654282, 0.04527070000767708, 0.021902959793806076, -0.1416814923286438, 0.08217038959264755, -0.05007179081439972, -0.036122363060712814, 0.026589956134557724, 0.08042687177658081));
	r += mul(s1_6, min16float4x4(0.022377489134669304, -0.08975629508495331, -0.015364802442491055, 0.03121788799762726, 0.05553896352648735, -0.00618023332208395, 0.04529229924082756, 0.36723849177360535, -0.16138909757137299, -0.01976761221885681, -0.09990894794464111, 0.0009279903024435043, 0.01582825928926468, -0.009237343445420265, 0.10788873583078384, 0.082948237657547));
	r += mul(s1_7, min16float4x4(0.06373388320207596, -0.11545251309871674, -0.19055426120758057, 0.06719885766506195, 0.0029780850745737553, 0.034992095082998276, 0.05896807089447975, 0.2565286457538605, -0.022128917276859283, -0.06963790953159332, -0.09351899474859238, -0.09032187610864639, 0.04148709774017334, 0.04638255387544632, 0.025411464273929596, -0.02418545074760914));
	r += mul(s1_8, min16float4x4(-0.09315919876098633, -0.012691674754023552, 0.00360887311398983, 0.0979146733880043, 0.007614771369844675, 0.06272134929895401, -0.02923252247273922, 0.1522253453731537, -0.0061119026504457, -0.032885726541280746, 0.021415527909994125, -0.010824211873114109, 0.03755324333906174, 0.0763627216219902, 0.06769734621047974, -0.06017594784498215));
	r += mul(s2_0, min16float4x4(0.01606004498898983, -0.06763302534818649, -0.04424773529171944, -0.0317334420979023, -0.031262774020433426, 0.10003811120986938, -0.030031409114599228, 0.028843967244029045, -0.11735571175813675, 0.21439003944396973, -0.013068262487649918, 0.0691489577293396, 0.045511119067668915, -0.08897780627012253, 0.03750667721033096, -0.06286562979221344));
	r += mul(s2_1, min16float4x4(-0.10877132415771484, -0.09430322796106339, -0.40527933835983276, 0.015373107977211475, -0.11835652589797974, -0.03518279641866684, 0.17235353589057922, 0.07818078994750977, -0.10346957296133041, 0.141957625746727, 0.2055605798959732, -0.10872062295675278, -0.158428356051445, -0.10526622086763382, -0.052419520914554596, 0.13465896248817444));
	r += mul(s2_2, min16float4x4(0.11046414822340012, -0.06590191274881363, 0.1977778673171997, 0.010627619922161102, 0.024380838498473167, -0.0053939358331263065, 0.10326186567544937, -0.06554446369409561, -0.646360456943512, -0.30264604091644287, -0.07758437842130661, 0.02956869639456272, 0.38696062564849854, 0.29503244161605835, 0.18117655813694, -0.16639591753482819));
	r += mul(s2_3, min16float4x4(0.13134858012199402, 0.010278037749230862, -0.15492813289165497, -0.00505106570199132, 0.10326850414276123, -0.03224455937743187, 0.05028720572590828, -0.10827559232711792, -0.03855978325009346, 0.01827460527420044, 0.21657535433769226, -0.12120254337787628, 0.05707748606801033, -0.021257879212498665, -0.027601463720202446, 0.019767846912145615));
	r += mul(s2_4, min16float4x4(-0.2461111694574356, -0.0113827520981431, -0.2728227972984314, -0.014867796562612057, -0.3367227017879486, 0.006970785558223724, -0.015596178360283375, -0.13140404224395752, 0.3339683711528778, 0.1656494289636612, 0.7207151055335999, 0.4304906129837036, 0.3122350573539734, -0.10498619824647903, -0.2978142499923706, 0.05680344998836517));
	r += mul(s2_5, min16float4x4(0.02619416080415249, -0.08199260383844376, 0.25563088059425354, -0.06354720145463943, -0.23626388609409332, -0.0754428505897522, 0.21047547459602356, 0.036811258643865585, -1.027024269104004, -0.013492092490196228, -0.35772842168807983, 0.13419800996780396, -0.2731168568134308, -0.06219378113746643, 0.34801802039146423, 0.16827958822250366));
	r += mul(s2_6, min16float4x4(0.004253422375768423, -0.007566530257463455, -0.13818666338920593, -0.004524684976786375, -0.010878453031182289, -0.06528868526220322, -0.1309732347726822, 0.019057966768741608, 0.0496523343026638, 0.05666984245181084, 0.3505852520465851, -0.05345184728503227, -0.04120635986328125, -0.02093704231083393, -0.20982268452644348, -0.03426596149802208));
	r += mul(s2_7, min16float4x4(-0.15145185589790344, 0.020010946318507195, -0.07556058466434479, -0.10211385041475296, -0.21036817133426666, -0.08377131819725037, -0.06638570874929428, 0.10900229215621948, -0.0012475739931687713, 0.08136925101280212, 0.12003407627344131, 0.0037382447626441717, -0.014268836937844753, -0.057983361184597015, -0.08407644182443619, 0.07557099312543869));
	r += mul(s2_8, min16float4x4(-0.18814770877361298, -0.0478755347430706, 0.10271517932415009, -0.025362374261021614, -0.025314195081591606, 0.056445442140102386, 0.028936361894011497, 0.05873499810695648, 0.3484616279602051, 0.17267315089702606, -0.1857479363679886, 0.04732268303632736, -0.07536943256855011, 0.008088089525699615, 0.10462780296802521, -0.06759397685527802));
	r += mul(s3_0, min16float4x4(-0.19580687582492828, -0.03867495059967041, 0.17604121565818787, 0.045098114758729935, -0.170412078499794, -0.03975243121385574, 0.05520074814558029, 0.03574419021606445, -0.018658138811588287, 0.0924559161067009, 0.025206949561834335, 0.10654076933860779, -0.020953593775629997, 0.04353329911828041, 0.0711401179432869, 0.01622602716088295));
	r += mul(s3_1, min16float4x4(-0.23701490461826324, 0.5885308384895325, 0.6545965671539307, 0.0557854138314724, 0.11740470677614212, -0.09442587941884995, 0.13492819666862488, -0.06750659644603729, -0.19569538533687592, 0.18201488256454468, -0.142090305685997, 0.087795190513134, 0.3255086839199066, -0.08330410718917847, 0.13329683244228363, 0.042090967297554016));
	r += mul(s3_2, min16float4x4(-0.4782954752445221, 0.08117039501667023, -0.3642548620700836, 0.07118389010429382, -0.1664726734161377, 0.012421875260770321, -0.014541192911565304, 0.0797598659992218, 0.1303926259279251, -0.031889207661151886, 0.007460491266101599, 0.04240661859512329, -0.03263462334871292, 0.012562244199216366, -0.18709643185138702, 0.2386086881160736));
	r += mul(s3_3, min16float4x4(0.08657331019639969, -0.05720023065805435, 0.3608325719833374, 0.41087889671325684, 0.11208170652389526, 0.07726933062076569, 0.28011149168014526, 0.09425364434719086, -0.08210983127355576, 0.11377289146184921, -0.2287086546421051, -0.15505358576774597, -0.21500901877880096, 0.14287589490413666, 0.015342877246439457, 0.001015156740322709));
	r += mul(s3_4, min16float4x4(0.9228626489639282, -0.09304235875606537, -0.4179134666919708, -0.6346583962440491, -0.03207293897867203, -0.03186366707086563, -0.08916075527667999, -0.2608989477157593, -0.09227150678634644, -0.13248565793037415, -0.14111250638961792, -0.49692440032958984, -0.29919254779815674, 0.038123469799757004, 0.3088010847568512, -0.09769590198993683));
	r += mul(s3_5, min16float4x4(-0.01356590911746025, 0.07539704442024231, -0.2761479616165161, 0.010562618263065815, 0.1262098252773285, 0.05621003359556198, 0.03498405963182449, 0.07208839058876038, 0.01917964592576027, 0.00020043484983034432, 0.09048015624284744, 0.03552030771970749, -0.22219006717205048, 0.11063361912965775, -0.3330059051513672, -0.04604855552315712));
	r += mul(s3_6, min16float4x4(-0.16841229796409607, -0.10389260947704315, 0.09579985588788986, 0.11673325300216675, 0.1374497413635254, 0.12257372587919235, -0.08817196637392044, -0.045351166278123856, 0.028287703171372414, 0.07346812635660172, -0.21962660551071167, 0.016264505684375763, -0.04919639602303505, 0.02157655358314514, 0.21658103168010712, -0.03307483345270157));
	r += mul(s3_7, min16float4x4(0.27351057529449463, 0.03347665071487427, -0.0896206721663475, -0.05442003160715103, -0.1588662564754486, 0.10465484112501144, 0.051100246608257294, -0.006881168577820063, 0.21769866347312927, 0.1274600774049759, 0.08865679055452347, -0.10403037816286087, 0.2824834883213043, 0.001071145641617477, 0.008906852453947067, 0.21257495880126953));
	r += mul(s3_8, min16float4x4(0.03439684212207794, 0.07348769903182983, -0.045477986335754395, 0.007514778058975935, 0.186008483171463, 0.05815340578556061, 0.2038303017616272, 0.11083085834980011, 0.0487549714744091, 0.04099592939019203, -0.014430972747504711, -0.03314821049571037, 0.15398181974887848, -0.0285070538520813, -0.30420219898223877, -0.020793775096535683));
	r += float4(-0.006302501540631056, -0.340937077999115, -0.0057516032829880714, -0.33903414011001587);
	return max(r, 0.0);
}
float4 f1(float2 pt, float2 pos, min16float4 s0_0, min16float4 s0_1, min16float4 s0_2, min16float4 s0_3, min16float4 s0_4, min16float4 s0_5, min16float4 s0_6, min16float4 s0_7, min16float4 s0_8, min16float4 s1_0, min16float4 s1_1, min16float4 s1_2, min16float4 s1_3, min16float4 s1_4, min16float4 s1_5, min16float4 s1_6, min16float4 s1_7, min16float4 s1_8, min16float4 s2_0, min16float4 s2_1, min16float4 s2_2, min16float4 s2_3, min16float4 s2_4, min16float4 s2_5, min16float4 s2_6, min16float4 s2_7, min16float4 s2_8, min16float4 s3_0, min16float4 s3_1, min16float4 s3_2, min16float4 s3_3, min16float4 s3_4, min16float4 s3_5, min16float4 s3_6, min16float4 s3_7, min16float4 s3_8) {
	min16float4 r = 0.0;
	r += mul(s0_0, min16float4x4(0.21767422556877136, -0.12856397032737732, 0.014771913178265095, 0.44344210624694824, 0.1604352593421936, 0.08633716404438019, -0.1530197411775589, -0.033749356865882874, 0.38755229115486145, 0.35438215732574463, -0.27156928181648254, 0.6308588981628418, -0.0739050880074501, 0.06209636479616165, 0.1824391931295395, 0.10002360492944717));
	r += mul(s0_1, min16float4x4(0.37314239144325256, 0.2629357576370239, -0.2867509722709656, 0.1870133876800537, -0.020908161997795105, 0.15090055763721466, 0.021672334522008896, -0.21061833202838898, -0.7168033719062805, 0.08277121931314468, 0.27786484360694885, 0.1384684294462204, 0.30286282300949097, 0.25770077109336853, 0.01944621466100216, 0.14028513431549072));
	r += mul(s0_2, min16float4x4(0.1288684755563736, 0.32130733132362366, 0.30100658535957336, -0.06877239048480988, -0.12872906029224396, -0.107772596180439, -0.10708633065223694, 0.137577623128891, 0.14572086930274963, 0.07500728219747543, 0.1641462743282318, 0.11353413760662079, -0.010675645433366299, 0.08933006972074509, -0.25900742411613464, 0.11579575389623642));
	r += mul(s0_3, min16float4x4(0.4576309621334076, 0.010355552658438683, 0.04374096915125847, 0.29389384388923645, -0.05781877040863037, 0.12936177849769592, 0.15596717596054077, -0.13043095171451569, -0.2722591161727905, 0.3467804193496704, 0.020669039338827133, -0.31813904643058777, -0.5743103623390198, 0.0663553848862648, 0.020231125876307487, -0.4187951683998108));
	r += mul(s0_4, min16float4x4(0.46190038323402405, 0.5251129865646362, 0.043361615389585495, 0.5285053253173828, 0.09348318725824356, -0.41295087337493896, -0.17185397446155548, -0.09506076574325562, -0.36733463406562805, -0.47167885303497314, -0.03713763505220413, -0.5152396559715271, 0.15951307117938995, 0.05323171243071556, -0.017948061227798462, -0.17596402764320374));
	r += mul(s0_5, min16float4x4(0.32298457622528076, 0.8039615750312805, 0.20681478083133698, 0.08581650257110596, 0.06525983661413193, 0.14993780851364136, -0.17562389373779297, 0.13150474429130554, 0.0736958235502243, -0.00010192453191848472, 0.18926078081130981, 0.004324323497712612, 0.037047840654850006, -0.17235563695430756, 0.04164831340312958, -0.28421828150749207));
	r += mul(s0_6, min16float4x4(-0.11975625157356262, 0.07179774343967438, -0.06206727400422096, 0.000532242760527879, -0.7410449981689453, -0.10148507356643677, -0.011957250535488129, 0.13059930503368378, -0.05597206577658653, -0.18018686771392822, 0.2324075847864151, 0.06594174355268478, -0.10428622364997864, -0.18702581524848938, -0.08797866851091385, -0.025815324857831));
	r += mul(s0_7, min16float4x4(-0.008482267148792744, -0.09600816667079926, 0.23867055773735046, 0.35062557458877563, 0.009927483275532722, 0.008133034221827984, 0.01114147063344717, -0.019167287275195122, -0.12843109667301178, -0.18537399172782898, -0.021428097039461136, -0.42037346959114075, -0.013292652554810047, -0.08946122974157333, -0.12215656787157059, 0.14707757532596588));
	r += mul(s0_8, min16float4x4(0.03155094012618065, 0.026791203767061234, 0.07046285271644592, -0.050298143178224564, 0.09029299020767212, 0.08927444368600845, 0.08307365328073502, -0.10082754492759705, 0.006755896843969822, 0.01185913197696209, -0.06148093193769455, -0.25879332423210144, 0.03775661438703537, 0.009762435220181942, 0.1239069253206253, 0.2571069896221161));
	r += mul(s1_0, min16float4x4(-0.44291654229164124, -0.15017938613891602, -0.1505480408668518, -0.3044288158416748, 0.02397940866649151, -0.03679848834872246, -0.051919497549533844, 0.1273103803396225, 0.1313093602657318, -0.0970524474978447, 0.22267460823059082, 0.6130103468894958, -0.0240843016654253, 0.014911307953298092, -0.08856943994760513, 0.09438022971153259));
	r += mul(s1_1, min16float4x4(-0.47434836626052856, 0.14883749186992645, -0.6083938479423523, -0.12019090354442596, -0.04706910625100136, 0.019227368757128716, 0.03899693116545677, -0.046805884689092636, -0.12484978139400482, 0.22626720368862152, -0.03409220650792122, -0.11155956983566284, -0.11025237292051315, -0.05112982913851738, 0.20260272920131683, 0.023420613259077072));
	r += mul(s1_2, min16float4x4(0.05778351053595543, -0.08349385112524033, -0.23485639691352844, -0.21727725863456726, 0.09220007807016373, -0.07592713087797165, 0.11887919902801514, -0.01748473383486271, -0.15449471771717072, -0.10254476964473724, -0.11598309874534607, -0.12069260329008102, 0.23799282312393188, -0.13473567366600037, -0.19207537174224854, 0.12213680893182755));
	r += mul(s1_3, min16float4x4(-0.19717468321323395, -0.10098157823085785, -0.13453567028045654, 0.025057878345251083, 0.022444458678364754, 0.03535633534193039, 0.009156721644103527, 0.028314946219325066, -0.3782386779785156, 0.04460130259394646, 0.06474555283784866, -0.6925111413002014, -0.13397705554962158, -0.2373364269733429, -0.1803950071334839, -0.35066860914230347));
	r += mul(s1_4, min16float4x4(-0.27897706627845764, -0.5567291975021362, -1.0512081384658813, -0.08372261375188828, -0.19754596054553986, 0.10685945302248001, -0.18788956105709076, -0.17724642157554626, -0.35210663080215454, 0.03614675998687744, 0.09187033027410507, -0.1091826781630516, -0.3100496232509613, 0.22711819410324097, 0.3715452551841736, -0.23524586856365204));
	r += mul(s1_5, min16float4x4(-0.1075383722782135, -0.022843312472105026, -0.012449363246560097, 0.022417142987251282, 0.05944540351629257, -0.05856795981526375, -0.015046639367938042, 0.04133440554141998, -0.012824011966586113, 0.039486780762672424, 0.15145573019981384, 0.4240448772907257, 0.08521848171949387, -0.09854962676763535, -0.36191526055336, -0.06962218880653381));
	r += mul(s1_6, min16float4x4(-0.05287962779402733, 0.3872852921485901, -0.18961799144744873, -0.20683954656124115, 0.07126376032829285, -0.010114489123225212, 0.021597346290946007, -0.0312291719019413, -0.011014467105269432, 0.10025782883167267, 0.11011339724063873, -0.22382621467113495, -0.03365641087293625, -0.09884630143642426, -0.09455107152462006, -0.012052149511873722));
	r += mul(s1_7, min16float4x4(0.06491978466510773, -0.024042991921305656, -0.17387701570987701, -0.9371756911277771, -0.015602350234985352, -0.07545584440231323, 0.14191871881484985, -0.010639552026987076, 0.10154704749584198, -0.0748901516199112, 0.0480491928756237, -0.2474396675825119, -0.2153591364622116, 0.12847431004047394, 0.23256082832813263, 0.21416892111301422));
	r += mul(s1_8, min16float4x4(0.057154055684804916, -0.013333448208868504, 0.15741710364818573, 0.12555333971977234, 0.017572220414876938, 0.0855744481086731, -0.05666731297969818, 0.06298018246889114, -0.012917565181851387, 0.0015144875505939126, -0.037810955196619034, -0.15354956686496735, 0.09005347639322281, 0.011733504012227058, 0.026921944692730904, 0.29721805453300476));
	r += mul(s2_0, min16float4x4(-0.08900241553783417, 0.11949838697910309, -0.050719182938337326, 0.053327590227127075, -0.10478555411100388, -0.0022059681359678507, 0.08844920992851257, -0.19465933740139008, -0.587890625, -0.04732755944132805, -0.0823938325047493, -0.26335570216178894, 0.1481744796037674, 0.20593830943107605, 0.02314843237400055, 0.1499096155166626));
	r += mul(s2_1, min16float4x4(0.016392767429351807, -0.11372017115354538, -0.09256188571453094, 0.10916084796190262, 0.1323237270116806, -0.5097392797470093, 0.07374951243400574, -0.07045421749353409, -0.7931581139564514, -0.06874009221792221, -0.4204105734825134, -0.7242742776870728, -0.013708946295082569, -0.13525381684303284, 0.12281698733568192, 0.216729074716568));
	r += mul(s2_2, min16float4x4(-0.12745298445224762, -0.0029706391505897045, -0.49495914578437805, -0.013962974771857262, 0.12386618554592133, -0.05683701112866402, -0.13176260888576508, -0.21117104589939117, 0.035827234387397766, -0.11584321409463882, -0.34154385328292847, -0.20078052580356598, 0.06582951545715332, -0.04852776601910591, 0.40527451038360596, -0.02397940680384636));
	r += mul(s2_3, min16float4x4(-0.22884123027324677, 0.4135774075984955, -0.042549408972263336, -0.05737939849495888, -0.3542226552963257, -0.41716334223747253, -0.16673417389392853, -0.5816279649734497, -0.08419635891914368, -0.08749450743198395, -0.07380742579698563, 0.02879217267036438, 0.10800773650407791, -0.18067021667957306, -0.04332568496465683, 0.05880485102534294));
	r += mul(s2_4, min16float4x4(-0.34490618109703064, 0.2056378573179245, -0.41620343923568726, -0.11889437586069107, -0.17754976451396942, -0.7685521841049194, 0.039297375828027725, -0.5218266248703003, 0.3449345827102661, 0.2503834068775177, 0.09402915090322495, -0.5540934205055237, -0.43142300844192505, -0.006068235728889704, -0.09317494928836823, -0.27889570593833923));
	r += mul(s2_5, min16float4x4(-0.09225683659315109, -0.4539865255355835, -0.5723155736923218, -0.41118261218070984, -0.1977551281452179, -0.5682504177093506, -0.2609352469444275, -0.4001654088497162, 0.4501957297325134, -0.003890227759256959, 0.29182904958724976, -0.13264437019824982, -0.4756163954734802, -0.03220687061548233, -0.35611799359321594, -0.20890642702579498));
	r += mul(s2_6, min16float4x4(-0.12468190491199493, 0.04155838489532471, 0.1119789406657219, 0.003038525115698576, -0.08458858728408813, -0.08497621864080429, 0.05225177854299545, -0.19433888792991638, -0.2075190544128418, -0.22578829526901245, 0.08897259086370468, -0.10340040922164917, 0.36228272318840027, 0.08678320050239563, -0.041639890521764755, -0.021232886239886284));
	r += mul(s2_7, min16float4x4(0.2241365909576416, 0.14667820930480957, -0.25967371463775635, 0.11630602180957794, -0.006388199049979448, -0.07589127868413925, -0.3444584608078003, -0.40764766931533813, 0.5452437400817871, 0.049221426248550415, 0.24537502229213715, 0.05786227434873581, 0.29785528779029846, -0.04526599869132042, 0.016344795003533363, 0.0701984316110611));
	r += mul(s2_8, min16float4x4(-0.05481388792395592, -0.06827109307050705, -0.0862601101398468, 0.06669513881206512, -0.0019971446599811316, -0.10816365480422974, 0.19452685117721558, -0.38371023535728455, 0.22119952738285065, 0.26855412125587463, 0.5140618681907654, 0.05084104835987091, -0.19138827919960022, -0.03433949127793312, -0.2377886027097702, -0.018300916999578476));
	r += mul(s3_0, min16float4x4(0.6386705636978149, -0.23828551173210144, -0.5272597670555115, 0.2413569688796997, -0.08517622947692871, -0.25836819410324097, -0.045791417360305786, -0.061320822685956955, -0.10569475591182709, 0.20019131898880005, -0.12411094456911087, -0.03082340955734253, 0.12218083441257477, -0.1352720707654953, 0.14772360026836395, -0.06388214975595474));
	r += mul(s3_1, min16float4x4(0.3679041266441345, 0.00848047249019146, -0.9430912733078003, 0.47355955839157104, -0.11048906296491623, 0.15185406804084778, 0.2502557933330536, 0.2234688252210617, -0.10327575355768204, 0.032337527722120285, -0.8568745851516724, 0.06632467359304428, -0.15594936907291412, 0.17516864836215973, 0.4130825698375702, -0.17556600272655487));
	r += mul(s3_2, min16float4x4(0.16543760895729065, 0.11617334187030792, 0.33443596959114075, -0.00329247466288507, 0.02419406548142433, -0.048520278185606, 0.45994678139686584, 0.042292818427085876, -0.020344777032732964, 0.03381158784031868, -0.2951638102531433, -0.028835535049438477, 0.06490561366081238, -0.15462155640125275, -0.013329888693988323, -0.3211970031261444));
	r += mul(s3_3, min16float4x4(0.3687725067138672, -1.339843511581421, -0.34961751103401184, 0.2962128818035126, -0.17040005326271057, -0.04465136304497719, 0.1683512181043625, 0.045886579900979996, 0.17064358294010162, 0.23249377310276031, -0.17549088597297668, 0.24610725045204163, 0.48972150683403015, -0.3466836214065552, 0.24690605700016022, 0.23226217925548553));
	r += mul(s3_4, min16float4x4(0.2777218818664551, 0.3472684919834137, 0.41247162222862244, 0.43337318301200867, 0.1836952120065689, -0.21004514396190643, 0.19874903559684753, -0.4408189356327057, -0.6272178292274475, 0.03724779188632965, -0.8046565055847168, 0.39487895369529724, -0.24377129971981049, -0.6406881809234619, 0.9314695000648499, -0.5840743780136108));
	r += mul(s3_5, min16float4x4(0.12255316227674484, 0.6230387687683105, -0.5332031846046448, 0.8785029649734497, -0.006618563551455736, 0.09751768410205841, 0.0014548625331372023, -0.20092590153217316, 0.11642101407051086, -0.02033361792564392, -0.4525073170661926, 0.20417743921279907, -0.0865083709359169, 0.17719285190105438, -0.16547566652297974, -0.01220986619591713));
	r += mul(s3_6, min16float4x4(-0.6797803640365601, -0.16641761362552643, -0.03738945722579956, -0.34670066833496094, 0.1461922973394394, 0.13992902636528015, 0.2577781081199646, -0.044989798218011856, 0.009391145780682564, 0.31742972135543823, -0.46787798404693604, 0.11312122642993927, -0.037450410425662994, -0.10853462666273117, 0.15677334368228912, -0.06421244144439697));
	r += mul(s3_7, min16float4x4(-0.679780900478363, -0.13464446365833282, 0.2567908763885498, -0.3809533417224884, 0.10970139503479004, -0.18962369859218597, 0.04239554703235626, -0.3822329342365265, -0.2027616798877716, -0.06036170572042465, -0.6514692902565002, -0.22815001010894775, 0.08272209763526917, -0.06624160706996918, 0.002816098276525736, 0.29630017280578613));
	r += mul(s3_8, min16float4x4(-0.07158505916595459, 0.026289077475667, -0.06668148934841156, -0.022337988018989563, 0.06895410269498825, -0.06504443287849426, 0.19934578239917755, -0.3721844255924225, -0.08747188001871109, 0.01780015416443348, -0.23654881119728088, -0.14662931859493256, -0.007301628589630127, 0.23395590484142303, -0.022955134510993958, 0.38541173934936523));
	r += float4(0.004925617482513189, -0.0006633150624111295, 0.003783352440223098, 0.007720246445387602);
	return max(r, 0.0);
}
float4 f2(float2 pt, float2 pos, min16float4 s0_0, min16float4 s0_1, min16float4 s0_2, min16float4 s0_3, min16float4 s0_4, min16float4 s0_5, min16float4 s0_6, min16float4 s0_7, min16float4 s0_8, min16float4 s1_0, min16float4 s1_1, min16float4 s1_2, min16float4 s1_3, min16float4 s1_4, min16float4 s1_5, min16float4 s1_6, min16float4 s1_7, min16float4 s1_8, min16float4 s2_0, min16float4 s2_1, min16float4 s2_2, min16float4 s2_3, min16float4 s2_4, min16float4 s2_5, min16float4 s2_6, min16float4 s2_7, min16float4 s2_8, min16float4 s3_0, min16float4 s3_1, min16float4 s3_2, min16float4 s3_3, min16float4 s3_4, min16float4 s3_5, min16float4 s3_6, min16float4 s3_7, min16float4 s3_8) {
	min16float4 r = 0.0;
	r += mul(s0_0, min16float4x4(0.07955874502658844, 0.05131260305643082, 0.03684064745903015, 0.27966195344924927, -0.0274990051984787, 0.038292668759822845, -0.004417481366544962, -0.025056544691324234, 0.18001830577850342, 0.18432670831680298, 0.03197472169995308, 0.3845207989215851, -0.19113102555274963, -0.0492309033870697, -0.16541267931461334, -0.5592753887176514));
	r += mul(s0_1, min16float4x4(0.4071359932422638, 0.1292198896408081, -0.006047381553798914, 0.5151334404945374, 0.16805550456047058, 0.04854673519730568, -0.03189634159207344, -0.054891228675842285, -0.3007413148880005, -0.04878578335046768, -0.03580281883478165, -0.012105308473110199, 0.37872010469436646, 0.13134737312793732, -0.08454035967588425, -0.0548698715865612));
	r += mul(s0_2, min16float4x4(-0.08592350780963898, 0.21085907518863678, -0.012305637821555138, -0.03053261525928974, -0.008622128516435623, 0.011806070804595947, -0.03919503837823868, 0.043785210698843, 0.062335699796676636, 0.0338650643825531, -0.13524748384952545, -0.020797474309802055, -0.09936579316854477, 0.06177501380443573, -0.025839971378445625, 0.08396682888269424));
	r += mul(s0_3, min16float4x4(-0.3092607259750366, -0.010896998457610607, -0.04449138045310974, -0.19677527248859406, 0.08254572004079819, 0.05286335200071335, -0.08449126034975052, 0.2896941006183624, -0.3031791150569916, -0.08988706022500992, 0.03787386417388916, -1.4179294109344482, -0.03189466893672943, -0.21184328198432922, 0.11891931295394897, 0.1031021699309349));
	r += mul(s0_4, min16float4x4(0.3564205765724182, 0.14538441598415375, -0.13846911489963531, -0.2876880466938019, -0.5413756370544434, -0.2783260941505432, -0.09285503625869751, -0.17810246348381042, -0.505912721157074, 0.16830652952194214, -0.06161175295710564, -0.22522461414337158, 0.5485935807228088, 0.004025984555482864, -0.19579176604747772, 0.17250944674015045));
	r += mul(s0_5, min16float4x4(-0.19796700775623322, 0.19060353934764862, -0.05874091014266014, 0.2978467047214508, 0.017930155619978905, -0.043080251663923264, 0.1537102460861206, -0.13041077554225922, -0.0656733512878418, 0.10176309198141098, -0.08348537981510162, 0.03252808749675751, 0.11629146337509155, -0.099642314016819, -0.19013628363609314, -0.041645802557468414));
	r += mul(s0_6, min16float4x4(0.11044514924287796, -0.11467630416154861, -0.026957150548696518, -0.06453461199998856, 0.039789795875549316, 0.19048453867435455, -0.07754135876893997, 0.032096266746520996, -0.08492912352085114, 0.055296603590250015, -0.13038206100463867, -0.01895267516374588, -0.040456730872392654, -0.29617613554000854, -0.1058444082736969, -0.1817033290863037));
	r += mul(s0_7, min16float4x4(0.25608527660369873, 0.1225680410861969, -0.080907441675663, -0.29170292615890503, -0.30226966738700867, -0.7740026116371155, -0.21344952285289764, -0.06378014385700226, -0.38761067390441895, -0.19468799233436584, -0.08047313988208771, -0.03707202896475792, -0.41673216223716736, -0.06502895057201385, -0.001948007382452488, -0.001285030972212553));
	r += mul(s0_8, min16float4x4(0.15468358993530273, 0.16845716536045074, -0.12822970747947693, -0.012196794152259827, -0.46178877353668213, 0.038294412195682526, 0.07236278802156448, 0.07489889860153198, -0.11344676464796066, 0.11708629131317139, -0.05799553915858269, -0.007868322543799877, 0.12148002535104752, -0.0570143461227417, -0.056408271193504333, -0.03645855933427811));
	r += mul(s1_0, min16float4x4(-0.10797262191772461, -0.05296340957283974, -0.13569332659244537, 0.09565281867980957, -0.0009232304873876274, 0.0284573957324028, -0.00857365783303976, -0.08812601119279861, 0.08141861110925674, 0.2055608332157135, -0.08497827500104904, 0.2619474232196808, 0.0843534767627716, -0.04844921827316284, -0.07397372275590897, -0.04859847575426102));
	r += mul(s1_1, min16float4x4(0.04763851687312126, 0.06047206372022629, -0.1330823004245758, -0.07137896865606308, 0.017082175239920616, -0.07934489846229553, 0.0678844302892685, 0.011031486093997955, 0.08623775839805603, -0.1391785442829132, -0.44693654775619507, -0.17137494683265686, 0.014186033979058266, -0.012758642435073853, -0.018893608823418617, 0.07809635251760483));
	r += mul(s1_2, min16float4x4(0.03552939370274544, 0.02336696721613407, -0.23919232189655304, 0.06788533180952072, -0.05131140723824501, 0.04340136796236038, 0.064325712621212, 0.07056055963039398, 0.0048008388839662075, 0.0398050881922245, -0.07266608625650406, -0.057795390486717224, 0.09893332421779633, -0.0705258920788765, 0.010656898841261864, 0.1261393129825592));
	r += mul(s1_3, min16float4x4(-0.1618722379207611, -0.07695469260215759, -0.18703049421310425, -0.4382019639015198, -0.10374496132135391, 0.08389890938997269, -0.13735370337963104, 0.17387494444847107, 0.06495000422000885, 0.0988914892077446, -0.04254477843642235, -0.5256304144859314, -0.10643662512302399, -0.049730803817510605, 0.013857240788638592, 0.15885108709335327));
	r += mul(s1_4, min16float4x4(0.21342694759368896, -0.08120347559452057, -0.24476639926433563, 0.055153630673885345, -0.09611476957798004, -0.0754522830247879, -0.10913773626089096, -0.13641397655010223, 0.23732280731201172, 0.4282163679599762, -0.09271420538425446, 0.06510264426469803, -0.06644167006015778, 0.10148146748542786, -0.15267278254032135, -0.1075517013669014));
	r += mul(s1_5, min16float4x4(0.006921419873833656, -0.11997617781162262, -0.14761120080947876, -0.055788855999708176, 0.0437965989112854, -0.03209438920021057, 0.056777097284793854, -0.05194823071360588, -0.07401265949010849, -0.035116974264383316, -0.18027551472187042, 0.10472776740789413, 0.05376473441720009, 0.16158072650432587, -0.054727703332901, -0.05205802619457245));
	r += mul(s1_6, min16float4x4(-0.12365289032459259, -0.057747311890125275, -0.10643830895423889, 0.1184128001332283, 0.12396706640720367, 0.004647827707231045, -0.0017740943003445864, -0.07294821739196777, 0.38615643978118896, -0.21606983244419098, -0.18913157284259796, 0.2678014039993286, -0.29120534658432007, 0.008780773729085922, 0.06874682009220123, 0.044552646577358246));
	r += mul(s1_7, min16float4x4(-0.19088269770145416, -0.09671325236558914, -0.11671847850084305, 0.25666293501853943, -0.012645186856389046, -0.005975652020424604, -0.0049970149993896484, 0.0944821909070015, 0.20706389844417572, -0.13011594116687775, -0.30915236473083496, 0.021889574825763702, 0.1404230147600174, 0.0007685410091653466, 0.022815370932221413, -0.1442989856004715));
	r += mul(s1_8, min16float4x4(0.2826143205165863, -0.17873598635196686, -0.12820960581302643, 0.005918489769101143, 0.06567476689815521, 0.04790286347270012, -0.07048561424016953, 0.00509242620319128, -0.045308955013751984, 0.047673288732767105, -0.06023074686527252, -0.015074442140758038, 0.14199157059192657, -0.04831180348992348, 0.06842254847288132, -0.07564982771873474));
	r += mul(s2_0, min16float4x4(0.011807228438556194, -0.0362883023917675, -0.05955662950873375, -0.120171457529068, -0.0553380511701107, 0.0038658687844872475, -0.27129122614860535, -0.20006881654262543, 0.07055318355560303, -0.07189173996448517, -0.34631314873695374, 0.17435964941978455, 0.1332535445690155, 0.00673273578286171, 0.030454175546765327, -0.13594534993171692));
	r += mul(s2_1, min16float4x4(-0.07678450644016266, -0.01101868785917759, -0.03790947049856186, -0.1578257977962494, -0.09667330235242844, -0.05843495950102806, 0.020072119310498238, 0.07641152292490005, -0.2891644835472107, -0.17359021306037903, -0.1657310128211975, 0.08200865983963013, 0.06007787585258484, 0.01252168882638216, -0.1360708326101303, 0.1588153839111328));
	r += mul(s2_2, min16float4x4(0.1616174578666687, -0.12085039168596268, 0.008002769201993942, 0.01606983318924904, -0.2009580433368683, -0.026387544348835945, -0.003208348760381341, -0.03870402276515961, 0.046226173639297485, 0.020648473873734474, -0.8451992869377136, 0.018686480820178986, 0.024203618988394737, -0.11388254165649414, 0.17150896787643433, 0.03847764432430267));
	r += mul(s2_3, min16float4x4(0.26716887950897217, 0.09070633351802826, 0.1410069614648819, -0.17375321686267853, -0.31311455368995667, 0.009473430924117565, 0.08554552495479584, 0.0183305274695158, -0.2813011705875397, -0.056068070232868195, -0.4901600182056427, 0.4134913384914398, 0.35259756445884705, -0.0057730828411877155, 0.01844683475792408, 0.28847581148147583));
	r += mul(s2_4, min16float4x4(-0.3427843153476715, 0.054067812860012054, 0.02958036959171295, -0.057104021310806274, -0.6488118171691895, -0.2560462951660156, -0.0938773825764656, -0.2901672422885895, 0.04401711747050285, 0.02870156615972519, -0.36391815543174744, -0.3496772050857544, -0.06242857873439789, 0.003923394251614809, 0.13964973390102386, -0.3171764016151428));
	r += mul(s2_5, min16float4x4(0.24155668914318085, -0.3567541539669037, 0.029895242303609848, -0.09512776881456375, -0.13184137642383575, -0.09930304437875748, -0.12105508893728256, -0.11629150062799454, 0.014372527599334717, 0.47678059339523315, -0.3468910753726959, 0.3076215088367462, 0.18204762041568756, -0.10122441500425339, -0.04749554023146629, -0.18533892929553986));
	r += mul(s2_6, min16float4x4(0.29584094882011414, 0.0027008033357560635, -0.09918258339166641, -0.03927848860621452, -0.09008724242448807, 0.1895141303539276, 0.031918495893478394, 0.014563747681677341, -0.16734150052070618, -0.24291162192821503, -0.5081989169120789, -0.2531624734401703, -0.18846315145492554, 0.17925836145877838, -0.10123734176158905, 0.11708133667707443));
	r += mul(s2_7, min16float4x4(-0.17832815647125244, 0.19072793424129486, 0.0416741818189621, 0.2119654417037964, -0.5531725883483887, -0.13166473805904388, -0.06081844121217728, -0.018244154751300812, 0.517435610294342, -0.45072034001350403, -0.54874187707901, -0.1582629531621933, -0.1446453183889389, -0.2209579348564148, 0.06895887106657028, 0.17923037707805634));
	r += mul(s2_8, min16float4x4(-0.3093971610069275, -0.11191504448652267, -0.012287287972867489, 0.07829205691814423, -0.15087732672691345, -0.16475285589694977, -0.0688815638422966, -0.08840169757604599, 0.39525189995765686, 0.37166839838027954, -0.3663782477378845, -0.30971747636795044, -0.5823520421981812, 0.2990078032016754, 0.06460973620414734, 0.16935472190380096));
	r += mul(s3_0, min16float4x4(-0.14575399458408356, -0.03512074425816536, -0.1532713919878006, 0.5003055334091187, -0.03363391011953354, -0.015651991590857506, -0.06393500417470932, 0.09991975873708725, -0.12280310690402985, 0.06372673809528351, -0.05610352009534836, -0.08100926876068115, 0.03253300115466118, -0.0174704696983099, -0.03030412644147873, -0.041470255702733994));
	r += mul(s3_1, min16float4x4(0.1352880448102951, 0.08372421562671661, -0.07611209899187088, 0.2097613364458084, -0.08805040270090103, 0.055453550070524216, 0.038614410907030106, -0.015194418840110302, 0.08130648732185364, 0.10812416672706604, -0.07746060192584991, -0.13796144723892212, 0.157785564661026, 0.024041712284088135, 0.04414905607700348, -0.16194096207618713));
	r += mul(s3_2, min16float4x4(-0.43710970878601074, 0.15824347734451294, -0.014208702370524406, -0.09465505927801132, -0.07675105333328247, 0.0005397979984991252, -0.05394753813743591, -0.03381969779729843, -0.04092865809798241, -0.024168239906430244, 0.07939914613962173, 0.013339671306312084, 0.04187538102269173, -0.010365167632699013, -0.01588413491845131, 0.0024538973812013865));
	r += mul(s3_3, min16float4x4(-0.06686635315418243, -0.5215661525726318, -0.06768728792667389, 0.28030264377593994, 0.11435485631227493, 0.1330651044845581, -0.025209158658981323, 0.5134745836257935, 0.24384598433971405, -0.07615767419338226, -0.0785951241850853, 0.043493468314409256, -0.24074290692806244, 0.013961832970380783, 0.0399353913962841, 0.25544601678848267));
	r += mul(s3_4, min16float4x4(0.6803152561187744, 1.2539430856704712, -0.07476700842380524, -0.32707151770591736, -0.39624345302581787, 0.29149115085601807, -0.09545985609292984, 0.039142414927482605, -0.11433742195367813, -0.08121322840452194, 0.0993109792470932, 0.297107458114624, 0.3558286726474762, -0.31090831756591797, -0.18918736279010773, -0.04314907640218735));
	r += mul(s3_5, min16float4x4(-0.41444680094718933, 0.26579180359840393, 0.07586594671010971, 0.1873263269662857, 0.1035071462392807, -0.06585677713155746, -0.08946264535188675, 0.003468867624178529, 0.1430736929178238, -0.14318671822547913, 0.04443727806210518, -0.04169169068336487, 0.023293668404221535, -0.11887378990650177, -0.03487122803926468, 0.009766274131834507));
	r += mul(s3_6, min16float4x4(-0.44432151317596436, -0.4771665334701538, -0.14765508472919464, 0.11411425471305847, 0.07032731175422668, 0.12683387100696564, -0.11753103137016296, -0.1530895233154297, -0.026689186692237854, 0.0796072706580162, -0.013142484240233898, 0.08183185756206512, -0.7199622392654419, -0.04134562611579895, 0.04989202693104744, -0.3447261452674866));
	r += mul(s3_7, min16float4x4(0.1479169726371765, -1.5101958513259888, -0.12597116827964783, -0.3801090717315674, -0.41922158002853394, -0.12933319807052612, -0.03681480139493942, -0.08435554057359695, -0.2855013310909271, 0.017642727121710777, -0.06639951467514038, -0.22817520797252655, -0.01776657998561859, -0.003140883520245552, -0.041708093136548996, 0.12720929086208344));
	r += mul(s3_8, min16float4x4(0.1577061116695404, -0.05999211594462395, -0.0054896119982004166, -0.029274163767695427, -0.15315963327884674, 0.07279814034700394, -0.009184305556118488, -0.044783443212509155, 0.006394450087100267, 0.28953787684440613, -0.042823925614356995, 0.05725214630365372, -0.020627446472644806, 0.24681329727172852, -0.05938967689871788, 0.1903744339942932));
	r += float4(-0.011012512259185314, 1.3351855159271508e-05, -0.023707987740635872, -0.006015731953084469);
	return max(r, 0.0);
}
float4 f3(float2 pt, float2 pos, min16float4 s0_0, min16float4 s0_1, min16float4 s0_2, min16float4 s0_3, min16float4 s0_4, min16float4 s0_5, min16float4 s0_6, min16float4 s0_7, min16float4 s0_8, min16float4 s1_0, min16float4 s1_1, min16float4 s1_2, min16float4 s1_3, min16float4 s1_4, min16float4 s1_5, min16float4 s1_6, min16float4 s1_7, min16float4 s1_8, min16float4 s2_0, min16float4 s2_1, min16float4 s2_2, min16float4 s2_3, min16float4 s2_4, min16float4 s2_5, min16float4 s2_6, min16float4 s2_7, min16float4 s2_8, min16float4 s3_0, min16float4 s3_1, min16float4 s3_2, min16float4 s3_3, min16float4 s3_4, min16float4 s3_5, min16float4 s3_6, min16float4 s3_7, min16float4 s3_8) {
	min16float4 r = 0.0;
	r += mul(s0_0, min16float4x4(0.020793048664927483, -0.12931077182292938, -0.11512875556945801, 0.2256806343793869, -0.02588776871562004, -0.13980866968631744, 0.10464216023683548, -1.5917878150939941, 0.05775448679924011, -0.08902137726545334, -0.21750828623771667, 0.19685117900371552, 0.12418914586305618, 0.11377980560064316, -0.12435921281576157, 0.14610867202281952));
	r += mul(s0_1, min16float4x4(0.00955315213650465, 0.1259016990661621, -0.19648508727550507, -0.035540588200092316, 0.12540970742702484, -0.07613971829414368, 0.24750851094722748, -0.09059270471334457, -0.5655381083488464, -0.27457955479621887, 0.02459162287414074, 0.05946255847811699, -0.2401578277349472, 0.17138783633708954, 0.14305073022842407, -0.06492079049348831));
	r += mul(s0_2, min16float4x4(0.31073716282844543, -0.032166481018066406, -0.8016854524612427, 0.3931804895401001, 0.04004278406500816, 0.09040489792823792, 0.0776495411992073, 0.14120912551879883, -0.061175551265478134, 0.11039283871650696, 0.021508172154426575, -0.035382021218538284, -0.0039671603590250015, -0.09780541062355042, -0.008817288093268871, 0.026017675176262856));
	r += mul(s0_3, min16float4x4(-0.04706130921840668, -0.07238216698169708, -0.11717559397220612, 0.25430387258529663, 0.20034442842006683, -0.6533433794975281, -0.017389683052897453, -0.2919303774833679, -0.12577670812606812, -0.19763508439064026, 0.39859896898269653, -0.5842685103416443, 0.09011727571487427, 0.14341743290424347, 0.1400400549173355, -0.3096117377281189));
	r += mul(s0_4, min16float4x4(-0.05312766507267952, 0.4021383821964264, -0.11783695966005325, 0.0065207211300730705, 0.06491383165121078, -0.27764493227005005, -0.8533446788787842, -0.2819434404373169, -0.7856490612030029, -0.5650437474250793, 0.27859237790107727, -0.49488571286201477, -0.026448678225278854, -0.06309621036052704, -0.18895301222801208, 0.2810688316822052));
	r += mul(s0_5, min16float4x4(0.33218199014663696, 0.6608963012695312, 0.05090182274580002, 0.2575053572654724, 0.03893716260790825, -0.004617520608007908, -0.11304516345262527, 0.03219364956021309, 0.792504608631134, -0.9379646182060242, -0.12051703035831451, -0.020610854029655457, -0.3154298961162567, -0.21373268961906433, -0.05990586802363396, 0.10633935779333115));
	r += mul(s0_6, min16float4x4(-0.08324797451496124, 0.017357133328914642, 0.02413618005812168, -0.008512144908308983, -0.02832523174583912, 0.10083061456680298, 0.03322925791144371, 0.2728999853134155, 0.02133219502866268, 0.10519950836896896, -0.014856609515845776, 0.003124133450910449, -0.023540832102298737, -0.07722160965204239, -0.03435210883617401, -0.06200473755598068));
	r += mul(s0_7, min16float4x4(0.05792297050356865, 0.040841780602931976, 0.1323223114013672, -0.5064780116081238, -0.1799861043691635, 0.10497138649225235, -0.1372327357530594, 0.050060488283634186, 0.12816466391086578, -0.1738077998161316, -0.2299802005290985, -0.18877147138118744, -0.008806907571852207, 0.2075277417898178, 0.044064391404390335, 0.04553600773215294));
	r += mul(s0_8, min16float4x4(-0.019593816250562668, 0.37479478120803833, 0.12133254110813141, -0.2726135551929474, 0.005194562487304211, 0.04975639656186104, 0.03258141875267029, -0.0699167251586914, -0.06460762023925781, 0.07349545508623123, 0.09015701711177826, 0.08246387541294098, 0.033270061016082764, -0.0805199071764946, 0.05794356018304825, -0.052382487803697586));
	r += mul(s1_0, min16float4x4(0.2547605037689209, 0.1364513486623764, -0.24038952589035034, 0.06437303870916367, 0.06116955354809761, 0.09077806770801544, 0.028506936505436897, -0.03548815846443176, -0.6786871552467346, 1.2875282764434814, 0.2690865397453308, -0.1512649953365326, 0.033727437257766724, 0.30180129408836365, 0.14756251871585846, -0.2599734365940094));
	r += mul(s1_1, min16float4x4(0.048261549323797226, -0.20362141728401184, -0.09226127713918686, 0.02002977952361107, -0.11694296449422836, -0.052200596779584885, -0.0081528564915061, -0.039643023163080215, 0.5361215472221375, 0.4460268020629883, -0.12123332172632217, -0.020044228062033653, 0.07893464714288712, 0.10450883954763412, 0.14688046276569366, -0.48248815536499023));
	r += mul(s1_2, min16float4x4(-0.07488677650690079, -0.029918495565652847, 0.014889692887663841, 0.14665277302265167, 0.09382274001836777, 0.014000390656292439, 0.03960300609469414, 0.08816145360469818, -0.017436712980270386, -0.14572475850582123, 0.03678877279162407, -0.10809061676263809, -0.1134936586022377, 0.08420130610466003, -0.03019346296787262, -0.1571510285139084));
	r += mul(s1_3, min16float4x4(-0.11042200028896332, 0.40635576844215393, 0.12016679346561432, -0.2598836123943329, -0.05322611704468727, 0.07757402211427689, -0.11357829719781876, 0.10090883076190948, -0.13925568759441376, 0.1489115059375763, 0.019443895667791367, 0.08467316627502441, 0.18153509497642517, 0.3342209756374359, 0.08997760713100433, -0.23059585690498352));
	r += mul(s1_4, min16float4x4(-0.39246341586112976, -1.0735383033752441, -0.09191159158945084, -0.3975038230419159, 0.05843375250697136, -0.14407029747962952, 0.018940309062600136, -0.06088470667600632, 0.09234501421451569, 0.12380360811948776, -0.009705227799713612, -0.5001612901687622, -0.14209355413913727, -0.386491596698761, -0.34753063321113586, -0.1032143086194992));
	r += mul(s1_5, min16float4x4(-0.04100039601325989, -0.06331630796194077, -0.10424560308456421, -0.06933030486106873, -0.1323314607143402, -0.018506841734051704, 0.07446298748254776, 0.033011097460985184, 0.056437741965055466, -0.09890307486057281, 0.032370369881391525, 0.133829727768898, 0.010387921705842018, -0.26137369871139526, -0.22322681546211243, 0.02063371054828167));
	r += mul(s1_6, min16float4x4(0.2922040522098541, 0.21161706745624542, -0.04158393666148186, -0.32972609996795654, 0.02425765059888363, -0.08103993535041809, 0.08622206002473831, -0.08722017705440521, -0.03314552083611488, 0.03507501259446144, -0.04462633654475212, -0.16588594019412994, -0.06112530454993248, -0.06592800468206406, 0.06531892716884613, 0.1728435605764389));
	r += mul(s1_7, min16float4x4(0.03751659020781517, -0.18798939883708954, -0.1744847595691681, -0.14489801228046417, -0.009201355278491974, 0.035391416400671005, 0.015126259066164494, 0.01174203772097826, -0.1448199599981308, -0.17725318670272827, -0.11853217333555222, 0.1339714378118515, -0.037513941526412964, 0.07058600336313248, 0.1442330777645111, 0.3392007350921631));
	r += mul(s1_8, min16float4x4(-0.057573795318603516, -0.15267261862754822, -0.07357849180698395, 0.24753206968307495, 0.07827828824520111, 0.08722366392612457, -0.1120610460639, 0.004632581025362015, -0.028743555769324303, 0.11864489316940308, -0.14938965439796448, -0.005504420027136803, 0.11398640275001526, 0.11284590512514114, 0.16832886636257172, 0.25117814540863037));
	r += mul(s2_0, min16float4x4(0.08163122832775116, 0.10959995537996292, -0.009932843036949635, -0.1316348910331726, -0.0358269102871418, -0.10595064610242844, -0.059190839529037476, -0.11648157984018326, -0.01579435169696808, -0.3695981204509735, 0.008424563333392143, -0.32443100214004517, -0.03211010992527008, -0.01029140967875719, 0.06341593712568283, 0.09651174396276474));
	r += mul(s2_1, min16float4x4(-0.022005539387464523, -0.12588723003864288, 0.24521733820438385, -0.04024699330329895, -0.029162738472223282, -0.30311524868011475, 0.12327269464731216, -0.004609805066138506, -0.3181062340736389, 0.08418379724025726, -0.1652616709470749, -0.7563174962997437, -0.019925901666283607, 0.17927271127700806, 0.22262351214885712, 0.20476984977722168));
	r += mul(s2_2, min16float4x4(-0.12541384994983673, 0.05685406178236008, 0.03834977000951767, -0.10945555567741394, 0.012943573296070099, -0.03261284902691841, -0.09394034743309021, 0.13309532403945923, 0.36185964941978455, 0.1669304221868515, -0.48754993081092834, -0.3888629674911499, -0.03075465001165867, 0.09789180755615234, 0.09683284163475037, -0.01927843503654003));
	r += mul(s2_3, min16float4x4(0.004719640593975782, 0.20953387022018433, 0.0740007683634758, -0.5221790075302124, 0.036510054022073746, -0.08058468252420425, -0.0033703241497278214, 0.008232470601797104, -0.12083259224891663, -0.8182275891304016, -0.1193256750702858, -0.2905290424823761, 0.03788728266954422, 0.040290262550115585, 0.045755669474601746, 0.09172998368740082));
	r += mul(s2_4, min16float4x4(0.14219027757644653, -0.19089342653751373, -0.24697665870189667, -0.17487342655658722, -0.0447218120098114, -0.5917948484420776, -0.15577955543994904, -0.3099280595779419, -0.20893505215644836, 0.03957377001643181, -2.247964382171631, 0.4156486988067627, 0.2558246850967407, -0.16249342262744904, -0.23439793288707733, -0.16961334645748138));
	r += mul(s2_5, min16float4x4(-0.2926029860973358, -0.3724457919597626, -0.38591673970222473, -0.23780396580696106, -0.06670704483985901, -0.07496441900730133, 0.28284937143325806, -0.24956291913986206, 0.7128929495811462, -0.24001342058181763, 0.2578006684780121, 0.16368073225021362, 0.051698505878448486, -0.11823621392250061, 0.1373397409915924, -0.38067448139190674));
	r += mul(s2_6, min16float4x4(0.0974084734916687, 0.10718406736850739, -0.0525180883705616, -0.11757159233093262, 0.04656345397233963, -0.08831515163183212, -0.0017118307296186686, -0.06995982676744461, -0.18498960137367249, -0.2573809027671814, 0.010079734958708286, 0.25226131081581116, 0.1069413349032402, 0.13366390764713287, -0.0340585820376873, -0.06404320895671844));
	r += mul(s2_7, min16float4x4(-0.10420931875705719, 0.029281500726938248, -0.33172932267189026, 0.06865700334310532, -0.19218462705612183, -0.034689661115407944, 0.13693998754024506, 0.35753172636032104, 0.21749521791934967, 0.18609119951725006, 0.5405833125114441, 1.0295085906982422, -0.22457151114940643, -0.29589882493019104, -0.13760362565517426, -0.450224369764328));
	r += mul(s2_8, min16float4x4(-0.15217483043670654, -0.16377171874046326, -0.10834521055221558, 0.07673745602369308, -0.1313333660364151, -0.44428297877311707, 0.1722162812948227, -0.13529866933822632, 0.08240897208452225, 0.38824331760406494, 0.017117541283369064, -0.1324959397315979, 0.028210509568452835, -0.0234887283295393, -0.2055135816335678, 0.16698084771633148));
	r += mul(s3_0, min16float4x4(-0.45409393310546875, 0.08422638475894928, -0.3118533790111542, 0.25337010622024536, -0.026218218728899956, 0.057876650243997574, 0.0245503056794405, -0.1479671150445938, -0.13458673655986786, -0.05300208553671837, -0.2450709491968155, 0.015835685655474663, -0.15236736834049225, -0.0496908463537693, 0.17623057961463928, 0.1149580329656601));
	r += mul(s3_1, min16float4x4(-0.7744998335838318, 0.22429418563842773, -0.4697258472442627, 0.3767436444759369, 0.05653870850801468, -0.01984012871980667, -0.12877365946769714, -0.15481576323509216, 0.13522274792194366, -0.00682228896766901, -0.02624703198671341, -0.32110485434532166, 0.15282173454761505, 0.20338822901248932, -0.024880526587367058, 0.23492087423801422));
	r += mul(s3_2, min16float4x4(0.10452304035425186, -0.05474093183875084, 0.2102843075990677, 0.4367578327655792, 0.07581326365470886, -0.002691814908757806, 0.043092258274555206, -0.08223085105419159, -0.07664095610380173, -0.02385147474706173, 0.0014068218879401684, -0.22218932211399078, -0.0012858211994171143, 0.016575893387198448, 0.07371246069669724, 0.23388446867465973));
	r += mul(s3_3, min16float4x4(-0.03419359028339386, -0.30375921726226807, 0.024373337626457214, 0.018711797893047333, 0.14167718589305878, 0.14528782665729523, -0.06675472110509872, 0.6123432517051697, -0.17309589684009552, -0.2852512300014496, 0.030555550009012222, 0.06290922313928604, 0.06969261169433594, -0.4796393811702728, -0.09375850856304169, 0.4029660224914551));
	r += mul(s3_4, min16float4x4(0.4607733488082886, 0.18839317560195923, 0.6152328252792358, 0.9167439341545105, 0.3209579288959503, -0.25338512659072876, 0.12406150996685028, 0.5139490962028503, 0.005462386645376682, -0.22622574865818024, -0.1601601541042328, -0.3636133670806885, -0.2709653079509735, -0.056808166205883026, 0.01684960350394249, -0.18465307354927063));
	r += mul(s3_5, min16float4x4(0.5857855081558228, -0.030340485274791718, 0.47568461298942566, 0.3134043216705322, -0.1487484723329544, 0.11621812731027603, -0.03207092732191086, 0.058191146701574326, -0.1421845555305481, 0.02665758691728115, -0.27331048250198364, 0.037710659205913544, -0.04971925914287567, 0.3734089434146881, -0.030140161514282227, -0.29476115107536316));
	r += mul(s3_6, min16float4x4(-0.10444425791501999, -0.20935173332691193, 0.11028333008289337, -0.2067427635192871, -0.32095178961753845, -0.2073238492012024, 0.15247486531734467, 0.14656604826450348, 0.16649891436100006, 0.17585280537605286, 0.056709058582782745, -0.07690277695655823, -0.14786787331104279, -0.0631546825170517, -0.043521612882614136, -0.08013266324996948));
	r += mul(s3_7, min16float4x4(0.06564269214868546, -0.13308937847614288, 0.3245028555393219, -0.16270175576210022, 0.13385915756225586, -0.4386307895183563, 0.2911611795425415, -0.1081300675868988, -0.25683704018592834, -0.19536614418029785, 0.13739298284053802, 0.0984581708908081, 0.22231332957744598, 0.21705026924610138, 0.2161412388086319, -0.4675215184688568));
	r += mul(s3_8, min16float4x4(0.13262364268302917, 0.2223227620124817, 0.02733088843524456, -0.26912781596183777, -0.19187162816524506, 0.06042991206049919, 0.1625925600528717, -0.041035301983356476, 0.11328323185443878, 0.12474927306175232, 0.08249836415052414, -0.07359714806079865, 0.14633174240589142, -0.04577082023024559, 0.21456336975097656, -0.0019215410575270653));
	r += float4(-0.004868779331445694, -0.00807775929570198, -0.005577489268034697, -0.0031053610146045685);
	return max(r, 0.0);
}
void Pass4(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	min16float4 s0_0 = l0(-1.0, -1.0);
	min16float4 s0_1 = l0(0.0, -1.0);
	min16float4 s0_2 = l0(1.0, -1.0);
	min16float4 s0_3 = l0(-1.0, 0.0);
	min16float4 s0_4 = l0(0.0, 0.0);
	min16float4 s0_5 = l0(1.0, 0.0);
	min16float4 s0_6 = l0(-1.0, 1.0);
	min16float4 s0_7 = l0(0.0, 1.0);
	min16float4 s0_8 = l0(1.0, 1.0);
	min16float4 s1_0 = l1(-1.0, -1.0);
	min16float4 s1_1 = l1(0.0, -1.0);
	min16float4 s1_2 = l1(1.0, -1.0);
	min16float4 s1_3 = l1(-1.0, 0.0);
	min16float4 s1_4 = l1(0.0, 0.0);
	min16float4 s1_5 = l1(1.0, 0.0);
	min16float4 s1_6 = l1(-1.0, 1.0);
	min16float4 s1_7 = l1(0.0, 1.0);
	min16float4 s1_8 = l1(1.0, 1.0);
	min16float4 s2_0 = l2(-1.0, -1.0);
	min16float4 s2_1 = l2(0.0, -1.0);
	min16float4 s2_2 = l2(1.0, -1.0);
	min16float4 s2_3 = l2(-1.0, 0.0);
	min16float4 s2_4 = l2(0.0, 0.0);
	min16float4 s2_5 = l2(1.0, 0.0);
	min16float4 s2_6 = l2(-1.0, 1.0);
	min16float4 s2_7 = l2(0.0, 1.0);
	min16float4 s2_8 = l2(1.0, 1.0);
	min16float4 s3_0 = l3(-1.0, -1.0);
	min16float4 s3_1 = l3(0.0, -1.0);
	min16float4 s3_2 = l3(1.0, -1.0);
	min16float4 s3_3 = l3(-1.0, 0.0);
	min16float4 s3_4 = l3(0.0, 0.0);
	min16float4 s3_5 = l3(1.0, 0.0);
	min16float4 s3_6 = l3(-1.0, 1.0);
	min16float4 s3_7 = l3(0.0, 1.0);
	min16float4 s3_8 = l3(1.0, 1.0);
	conv1_0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	conv1_1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	conv1_2[gxy] = f2(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	conv1_3[gxy] = f3(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 5
//!DESC CuNNy-1x16-RCAS-NVL-down
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN conv1_0, conv1_1, conv1_2, conv1_3
//!OUT down
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define l0(x, y) O(conv1_0, float2(x, y))
#define l1(x, y) O(conv1_1, float2(x, y))
#define l2(x, y) O(conv1_2, float2(x, y))
#define l3(x, y) O(conv1_3, float2(x, y))
float4 f0(float2 pt, float2 pos, min16float4 s0_0, min16float4 s0_1, min16float4 s0_2, min16float4 s0_3, min16float4 s0_4, min16float4 s0_5, min16float4 s0_6, min16float4 s0_7, min16float4 s0_8, min16float4 s1_0, min16float4 s1_1, min16float4 s1_2, min16float4 s1_3, min16float4 s1_4, min16float4 s1_5, min16float4 s1_6, min16float4 s1_7, min16float4 s1_8, min16float4 s2_0, min16float4 s2_1, min16float4 s2_2, min16float4 s2_3, min16float4 s2_4, min16float4 s2_5, min16float4 s2_6, min16float4 s2_7, min16float4 s2_8, min16float4 s3_0, min16float4 s3_1, min16float4 s3_2, min16float4 s3_3, min16float4 s3_4, min16float4 s3_5, min16float4 s3_6, min16float4 s3_7, min16float4 s3_8) {
	min16float4 r = 0.0;
	r += mul(s0_0, min16float4x4(-0.02563762292265892, 0.013668895699083805, -0.0046277763321995735, 0.0018403981812298298, -0.16277022659778595, -0.012091183103621006, 0.026242641732096672, -0.0037351713981479406, 0.0005305552622303367, -0.0037076848093420267, 0.00191614986397326, -1.6330621974702808e-06, -0.08143302798271179, -0.10437054932117462, 0.005982522387057543, -0.04598812386393547));
	r += mul(s0_1, min16float4x4(0.009521649219095707, 0.01126610767096281, 0.01650111749768257, 0.0032030732836574316, 0.0199248269200325, -0.17907030880451202, 0.057643093168735504, 0.09595012664794922, -0.1341918706893921, 0.007246592082083225, -0.02640816569328308, 0.026491977274417877, 0.08245329558849335, 0.06584279239177704, -0.0034758755937218666, 0.12335324287414551));
	r += mul(s0_2, min16float4x4(-0.0176509041339159, 0.007121735718101263, -0.009673170745372772, -0.033819619566202164, -0.04742386192083359, 0.03993099555373192, -0.03214701637625694, 0.01171306986361742, -0.14949247241020203, 0.1274571269750595, -0.07817742228507996, 0.022768927738070488, -0.0009165817173197865, 0.0478164367377758, 0.023605987429618835, -0.02987799234688282));
	r += mul(s0_3, min16float4x4(0.02560633048415184, -0.02091159299015999, 0.021881187334656715, 0.010744720697402954, 0.413970023393631, 0.08584748208522797, -0.2607994079589844, -0.01493934728205204, -0.03820208087563515, 0.009978767484426498, -0.04940696433186531, 1.2015339962090366e-05, 1.70016610622406, -0.3543211817741394, 0.3386387825012207, -0.4421023428440094));
	r += mul(s0_4, min16float4x4(-0.10484707355499268, 0.47558408975601196, -0.7238461971282959, -0.17339931428432465, 1.4107468128204346, 1.6140072345733643, -0.6240552663803101, -0.6550853848457336, 0.7310609221458435, -0.1538083702325821, 0.33886823058128357, -0.17551229894161224, 1.5113248825073242, 2.97017765045166, 0.7993137240409851, 1.0885555744171143));
	r += mul(s0_5, min16float4x4(0.0013416099827736616, 0.005604621022939682, 0.039835602045059204, 0.06414422392845154, -0.12822365760803223, 0.19038088619709015, -0.009274247102439404, -0.12755708396434784, -0.48505404591560364, 0.2725578546524048, -0.42317020893096924, 0.6804753541946411, 0.11746665835380554, 0.09398229420185089, 0.02910420298576355, 0.3149943947792053));
	r += mul(s0_6, min16float4x4(0.003284275997430086, 0.004783495329320431, -0.03849896043539047, -3.628934427979402e-05, 0.08263827860355377, -0.07191082090139389, 0.682127058506012, 0.02868824079632759, 0.008079527877271175, -0.008408922702074051, -0.017452796921133995, 0.001201111008413136, -0.014169309288263321, -0.26666462421417236, 1.0411159992218018, -0.1421106457710266));
	r += mul(s0_7, min16float4x4(-0.002304273657500744, -0.0014805912505835295, 0.0316145122051239, 0.012954778969287872, 1.5047398805618286, 0.5806707739830017, 3.1862213611602783, 2.3942973613739014, -0.13838975131511688, 0.004539373330771923, 0.12938934564590454, 0.04510641098022461, -0.5207358598709106, -0.10764145851135254, 0.36460936069488525, 1.405469298362732));
	r += mul(s0_8, min16float4x4(-0.0022573908790946007, 0.006025553215295076, -0.013649716973304749, 0.017014313489198685, -0.46481049060821533, 1.502748727798462, -0.6042664051055908, 1.3758196830749512, 0.03113899752497673, 0.10326539725065231, -0.03819049894809723, -0.11751901358366013, 0.0016078684711828828, -0.09622769802808762, 0.08260598033666611, -0.07033475488424301));
	r += mul(s1_0, min16float4x4(0.0398433543741703, -0.008929823525249958, -0.006847222801297903, -0.007512268610298634, 0.2408168911933899, -0.11749380826950073, 0.008961990475654602, 0.024257121607661247, 0.10555294901132584, -0.09721766412258148, -0.017092231661081314, -0.031821850687265396, -0.5890475511550903, 0.07937067002058029, 0.2723774313926697, 0.14529567956924438));
	r += mul(s1_1, min16float4x4(0.07126107811927795, 0.049095749855041504, -0.03610021620988846, -0.010326980613172054, 0.18044480681419373, -0.31780752539634705, 0.015066305175423622, -0.12195140868425369, -0.041721928864717484, -0.07384608685970306, -0.05824292451143265, 0.23082879185676575, -0.08752135187387466, -0.9934633374214172, 0.24120895564556122, 0.6151832342147827));
	r += mul(s1_2, min16float4x4(0.15602299571037292, 0.14036498963832855, -0.14130082726478577, -0.16488224267959595, -0.05920403450727463, -0.06958501040935516, 0.00856681726872921, 0.0010722798760980368, -0.0799010843038559, 0.2912130057811737, -0.007335158996284008, 0.03590419515967369, 0.051558662205934525, 0.37229397892951965, -0.0918845683336258, -0.0764225572347641));
	r += mul(s1_3, min16float4x4(0.00818041991442442, -0.042645104229450226, 0.008694238029420376, 0.02497616782784462, 0.11952835321426392, 0.05125748738646507, -0.018389247357845306, -0.11866477131843567, -0.26298293471336365, 0.3525402545928955, 0.2861284613609314, -0.14696556329727173, -0.06387720257043839, -0.051101818680763245, 0.3055647015571594, -0.06175295263528824));
	r += mul(s1_4, min16float4x4(-0.9171652793884277, -0.09748755395412445, 1.1169501543045044, 0.09223489463329315, -0.5878981947898865, 0.026420429348945618, 1.040835976600647, -0.37196290493011475, 1.371264934539795, -1.0752201080322266, 0.6194333434104919, -0.8365262746810913, 0.8698179125785828, 0.32623976469039917, -1.079663634300232, -0.031541116535663605));
	r += mul(s1_5, min16float4x4(-0.43501439690589905, -1.283071517944336, 0.5276345610618591, 1.4428489208221436, -0.054274823516607285, 0.0832141563296318, -0.07395482808351517, 0.18726305663585663, -0.06766994297504425, 0.011983144097030163, -0.23500673472881317, 0.2006816416978836, 0.26341354846954346, 0.7795682549476624, -0.21220606565475464, -0.8769983649253845));
	r += mul(s1_6, min16float4x4(-0.00902476441115141, -0.006403036415576935, -0.08523695915937424, 0.08985435217618942, 0.011316635645925999, -0.02295665815472603, 0.015368304215371609, -0.006634795572608709, -0.4931681454181671, 0.47104305028915405, -0.7916497588157654, 0.7556105852127075, 0.004252258222550154, -0.0010787618812173605, -0.03757091984152794, -0.036683060228824615));
	r += mul(s1_7, min16float4x4(0.1364905834197998, 0.12854142487049103, -0.2755242586135864, -0.31738218665122986, 0.11843941360712051, -0.057370349764823914, -0.16709081828594208, 0.33850643038749695, -0.11185278743505478, 0.20584586262702942, 0.18249544501304626, -0.18472303450107574, -0.09891428798437119, -0.03465363755822182, 0.02678004838526249, -0.03983685374259949));
	r += mul(s1_8, min16float4x4(-0.04859836772084236, -0.020886247977614403, 0.07896967977285385, 0.06220373883843422, 0.033121708780527115, -0.036508750170469284, 0.04603669047355652, -0.045368995517492294, 0.019131608307361603, -0.006289225071668625, -0.01190834492444992, -0.07693701237440109, -0.07016023248434067, -0.10444272309541702, 0.10764013230800629, 0.11353261768817902));
	r += mul(s2_0, min16float4x4(0.006183517165482044, -0.09110455960035324, 0.23045386373996735, -0.15504570305347443, 0.19834645092487335, -0.10728586465120316, 0.037619877606630325, -0.05119069665670395, 0.04189871996641159, 0.16501416265964508, -0.004637056030333042, -0.023168940097093582, -0.0019095445750281215, -2.5380870283697732e-05, 9.636540880819666e-07, -0.00044917716877534986));
	r += mul(s2_1, min16float4x4(-1.0764814615249634, 1.2851711511611938, -1.2260088920593262, 0.808037281036377, 0.10664835572242737, 0.6113279461860657, -0.08668805658817291, 0.11060979217290878, -0.03926406428217888, 0.13566410541534424, 0.1194845587015152, 0.12654510140419006, 0.029406193643808365, -0.014250810258090496, -0.0002906232257373631, -0.0015052108792588115));
	r += mul(s2_2, min16float4x4(0.2017565220594406, -0.24026642739772797, -0.02295283041894436, 0.2732647657394409, 0.010574237443506718, -0.036996789276599884, -0.0014373228186741471, -0.0476086251437664, 0.08618512004613876, 0.23122529685497284, -0.24709858000278473, -0.11605502665042877, -0.02140725404024124, 0.02238994650542736, -0.002257280284538865, -0.00032614931114949286));
	r += mul(s2_3, min16float4x4(-0.048641547560691833, 0.01002960093319416, -0.16514721512794495, -0.01666811853647232, -0.045350827276706696, 0.0101200295612216, -0.04706980660557747, -0.03000045195221901, 0.06898380815982819, 0.12083745002746582, -0.08694013208150864, -0.10016157478094101, 0.013315441086888313, -0.001324089476838708, 0.015393455512821674, 0.0001726362097542733));
	r += mul(s2_4, min16float4x4(0.09731484949588776, -0.11621499806642532, -0.0736379325389862, 0.3568808138370514, -0.10669026523828506, -0.1235370934009552, 0.09791985154151917, 0.2783551812171936, -0.06413355469703674, 0.026088174432516098, -0.3081527650356293, -0.04500424861907959, -0.002476960886269808, 0.02081737294793129, 0.013387208804488182, 0.007355132140219212));
	r += mul(s2_5, min16float4x4(0.15805937349796295, 0.020028090104460716, 0.3249170482158661, -0.7052759528160095, -0.014675259590148926, 0.008700964041054249, 0.004094673320651054, -0.0009257690398953855, -0.01949424110352993, 0.019276821985840797, 0.03172512352466583, -0.21307089924812317, -0.658433735370636, -0.600645899772644, 0.12952421605587006, 0.30175715684890747));
	r += mul(s2_6, min16float4x4(-0.008385682478547096, 0.009137106128036976, -0.03242803364992142, 0.0022357963025569916, -0.0033183612395077944, -0.0033252446446567774, 0.022324388846755028, 0.002564608585089445, -0.17876854538917542, -0.3229113519191742, 0.1796359121799469, -0.04829716682434082, -0.011565583758056164, -0.0014203853206709027, -0.01052078790962696, 1.7161242794827558e-05));
	r += mul(s2_7, min16float4x4(-0.0184476375579834, -0.006787623278796673, -0.01636248454451561, -0.011654398404061794, 0.0005288631655275822, 0.008458425290882587, -0.04675304889678955, 0.001592835527844727, 0.03301558643579483, 0.018045073375105858, 0.018005335703492165, 0.10357975959777832, -0.024184152483940125, -0.0032272266689687967, 0.062212731689214706, -0.01569979637861252));
	r += mul(s2_8, min16float4x4(0.03803563117980957, -0.03438457101583481, -0.02627972513437271, -0.007049719337373972, 0.0008070747717283666, -0.002392804017290473, -0.0025841696187853813, -0.0004906233516521752, -0.15792006254196167, -0.09362655133008957, -0.08701767027378082, 0.2250119149684906, 0.04644972085952759, 0.008484341204166412, -0.009884166531264782, -0.029638169333338737));
	r += mul(s3_0, min16float4x4(0.021998103708028793, -0.00048610620433464646, -0.03268643841147423, -0.012798813171684742, -0.41694727540016174, 0.23018668591976166, -0.1353820115327835, 0.06877187639474869, -0.17236831784248352, 0.06388752162456512, 0.015092536807060242, 0.010302059352397919, -0.05537620559334755, -0.0286638755351305, 0.0072360048070549965, 0.013909646309912205));
	r += mul(s3_1, min16float4x4(0.09412851184606552, -0.08180193603038788, 0.05775681510567665, -0.011726909317076206, 0.3146773874759674, -0.1828770786523819, -0.06109238788485527, -0.07290685921907425, 0.39781782031059265, 0.07280129939317703, -0.10967780649662018, -0.30761802196502686, 0.0407201312482357, 0.0871620625257492, -0.09207314252853394, -0.13648048043251038));
	r += mul(s3_2, min16float4x4(-0.0023673062678426504, 0.00253582326695323, 0.0038768937811255455, 0.011495205573737621, -0.0464736707508564, -0.002844213042408228, -0.0032494596671313047, 0.01414481084793806, 0.0007111114682629704, 0.002042293082922697, -0.03991910442709923, 0.0003062891773879528, -0.31247055530548096, -0.3948083817958832, 0.2067439705133438, 0.2114381045103073));
	r += mul(s3_3, min16float4x4(-0.026723988354206085, 0.04318270459771156, 0.0951375961303711, 0.037079986184835434, 0.07598324865102768, 0.11593849956989288, -0.2607429623603821, 0.23853816092014313, 0.09301793575286865, -0.03283490240573883, 0.07055757194757462, -0.02240796945989132, 0.05951772630214691, 0.08932701498270035, -0.11716290563344955, -0.024999035522341728));
	r += mul(s3_4, min16float4x4(0.3427731692790985, -0.48145654797554016, 0.10290313512086868, -0.6468567252159119, 1.344705581665039, -1.242677927017212, 1.0509127378463745, -0.7980281710624695, -0.08423880487680435, 0.0024848519824445248, 0.370121031999588, 0.52540123462677, 1.2245937585830688, 0.43303826451301575, -1.2399524450302124, -0.5025666952133179));
	r += mul(s3_5, min16float4x4(0.0017514415085315704, 0.020083781331777573, -0.00634913332760334, -0.022774675861001015, -0.10571294277906418, 0.1781388223171234, -0.0637386292219162, 0.006620271597057581, -0.01934761181473732, 0.002992256311699748, -0.02692028135061264, -0.025620635598897934, 0.14515194296836853, 0.8505091667175293, -0.03640348091721535, -0.7703407406806946));
	r += mul(s3_6, min16float4x4(-0.006497508380562067, 0.003906802274286747, 0.010034570470452309, -0.018947478383779526, -0.06096048280596733, -0.03607197105884552, 0.006839074660092592, -0.015498127788305283, -3.792552524828352e-05, -0.003618198214098811, -1.4269470739236567e-05, 0.00016996367776300758, -0.045540329068899155, 0.012604715302586555, 0.10989950597286224, 0.0024859413970261812));
	r += mul(s3_7, min16float4x4(0.0024571840185672045, -0.010282695293426514, 0.019184153527021408, -0.054939642548561096, 0.03634278103709221, -0.10232667624950409, 0.6865102648735046, -0.5904450416564941, 0.0001570154563523829, 0.005024264566600323, -0.015306409448385239, -0.011693332344293594, -0.11750805377960205, -0.12935467064380646, 0.044888440519571304, 0.0927220955491066));
	r += mul(s3_8, min16float4x4(0.004843719303607941, -0.005844185594469309, 0.0014647006755694747, 0.007578038610517979, -0.07606125622987747, 0.08581269532442093, -0.1147177591919899, 0.3836645483970642, -0.00011400515359127894, -0.001808007131330669, 0.005950697232037783, 0.0023241625167429447, 0.0032157108653336763, -0.08010496199131012, -0.027025310322642326, -0.03380504995584488));
	r += float4(-8.909593063322063e-09, -6.97683022465867e-09, -7.791093992182141e-09, -7.488682562950544e-09);
	return tanh(r);
}
void Pass5(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	min16float4 s0_0 = l0(-1.0, -1.0);
	min16float4 s0_1 = l0(0.0, -1.0);
	min16float4 s0_2 = l0(1.0, -1.0);
	min16float4 s0_3 = l0(-1.0, 0.0);
	min16float4 s0_4 = l0(0.0, 0.0);
	min16float4 s0_5 = l0(1.0, 0.0);
	min16float4 s0_6 = l0(-1.0, 1.0);
	min16float4 s0_7 = l0(0.0, 1.0);
	min16float4 s0_8 = l0(1.0, 1.0);
	min16float4 s1_0 = l1(-1.0, -1.0);
	min16float4 s1_1 = l1(0.0, -1.0);
	min16float4 s1_2 = l1(1.0, -1.0);
	min16float4 s1_3 = l1(-1.0, 0.0);
	min16float4 s1_4 = l1(0.0, 0.0);
	min16float4 s1_5 = l1(1.0, 0.0);
	min16float4 s1_6 = l1(-1.0, 1.0);
	min16float4 s1_7 = l1(0.0, 1.0);
	min16float4 s1_8 = l1(1.0, 1.0);
	min16float4 s2_0 = l2(-1.0, -1.0);
	min16float4 s2_1 = l2(0.0, -1.0);
	min16float4 s2_2 = l2(1.0, -1.0);
	min16float4 s2_3 = l2(-1.0, 0.0);
	min16float4 s2_4 = l2(0.0, 0.0);
	min16float4 s2_5 = l2(1.0, 0.0);
	min16float4 s2_6 = l2(-1.0, 1.0);
	min16float4 s2_7 = l2(0.0, 1.0);
	min16float4 s2_8 = l2(1.0, 1.0);
	min16float4 s3_0 = l3(-1.0, -1.0);
	min16float4 s3_1 = l3(0.0, -1.0);
	min16float4 s3_2 = l3(1.0, -1.0);
	min16float4 s3_3 = l3(-1.0, 0.0);
	min16float4 s3_4 = l3(0.0, 0.0);
	min16float4 s3_5 = l3(1.0, 0.0);
	min16float4 s3_6 = l3(-1.0, 1.0);
	min16float4 s3_7 = l3(0.0, 1.0);
	min16float4 s3_8 = l3(1.0, 1.0);
	down[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 6
//!DESC CuNNy-1x16-RCAS-NVL-shuffle
//!STYLE PS
//!IN down, INPUT, rcas
float4 Pass6(float2 pos) {
	float2 pt = float2(GetInputPt());
	const static float3x3 rgb2yuv = {0.299, 0.587, 0.114, -0.169, -0.331, 0.5, 0.5, -0.419, -0.081};
	const static float3x3 yuv2rgb = {1, -0.00093, 1.401687, 1, -0.3437, -0.71417, 1, 1.77216, 0.00099};
	float4 r = 0.0;
	float2 size = float2(GetInputSize());
	float2 f = frac(pos * size);
	float3 yuv = mul(rgb2yuv, INPUT.SampleLevel(SL, pos, 0).rgb);
	int2 i = int2(f * 2.0);
	r.r = down.SampleLevel(SP, (float2(0.5, 0.5) - f) * pt + pos, 0)[2*i.y + i.x];
	r.r += rcas.SampleLevel(SP, pos, 0).r;
	r.a = 1.0;
	r.r = clamp(r, 0.0, 1.0);
	float3 px = mul(yuv2rgb, float3(r.r, yuv.yz));
	return float4(px, 1.0);
}
