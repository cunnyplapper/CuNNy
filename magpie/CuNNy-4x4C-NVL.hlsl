// CuNNy 4x4C BILINEAR CHROMA NVL
// Copyright (c) 2024 cunnyplapper

// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public
// License along with this program.  If not, see <https://www.gnu.org/licenses/>.
/* ------------------------------------------------------------------- */

//!MAGPIE EFFECT
//!VERSION 3
//!OUTPUT_WIDTH INPUT_WIDTH * 2
//!OUTPUT_HEIGHT INPUT_HEIGHT * 2

//!TEXTURE
Texture2D INPUT;

//!SAMPLER
//!FILTER POINT
SamplerState SP;

//!SAMPLER
//!FILTER LINEAR
SamplerState SL;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D in_0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D conv1_0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D conv2_0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D conv3_0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D conv4_0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D out_0;

//!PASS 1
//!DESC CuNNy-4x4C-BILINEAR-CHROMA-NVL-in
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN INPUT
//!OUT in_0
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define l0(x, y) (dot(float3(2.462867498397827, 4.468851089477539, 1.1409835815429688), O(INPUT, float2(x, y)).rgb) + -1.2905633449554443)
float4 f0(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	min16float4 r = 0.0;
	r += min16float4(-0.0343347005546093, -0.006422741338610649, -0.061974551528692245, 0.03791400417685509) * s0_0;
	r += min16float4(0.04642955958843231, -0.005557048134505749, 0.0871582105755806, 0.3918439745903015) * s0_1;
	r += min16float4(0.06710994988679886, 0.009048393927514553, 0.04706345126032829, -0.05577699467539787) * s0_2;
	r += min16float4(0.22362956404685974, 0.3370063602924347, 0.1401146799325943, -0.024294337257742882) * s0_3;
	r += min16float4(-0.07509031146764755, -0.07582278549671173, -0.37172916531562805, -0.2192404717206955) * s0_4;
	r += min16float4(0.31155821681022644, -0.2744140625, -0.11305731534957886, -0.09171954542398453) * s0_5;
	r += min16float4(-0.08789041638374329, 0.11556589603424072, 0.11891669034957886, -0.025836506858468056) * s0_6;
	r += min16float4(-0.24958494305610657, -0.20331430435180664, 0.16674596071243286, 0.0008129398338496685) * s0_7;
	r += min16float4(-0.2075195014476776, 0.10473592579364777, -0.09123329818248749, -0.005024170968681574) * s0_8;
	r += min16float4(-0.054802056401968, 0.01296682097017765, -0.12974722683429718, 0.014509230852127075);
	return r;
}
void Pass1(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	min16float s0_0 = l0(-1.0, -1.0);
	min16float s0_1 = l0(0.0, -1.0);
	min16float s0_2 = l0(1.0, -1.0);
	min16float s0_3 = l0(-1.0, 0.0);
	min16float s0_4 = l0(0.0, 0.0);
	min16float s0_5 = l0(1.0, 0.0);
	min16float s0_6 = l0(-1.0, 1.0);
	min16float s0_7 = l0(0.0, 1.0);
	min16float s0_8 = l0(1.0, 1.0);
	in_0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
}
//!PASS 2
//!DESC CuNNy-4x4C-BILINEAR-CHROMA-NVL-conv1
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN in_0
//!OUT conv1_0
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define l0(x, y) O(in_0, float2(x, y))
float4 f0(float2 pt, float2 pos, min16float4 s0_0, min16float4 s0_1, min16float4 s0_2, min16float4 s0_3, min16float4 s0_4, min16float4 s0_5, min16float4 s0_6, min16float4 s0_7, min16float4 s0_8, min16float4 s1_0, min16float4 s1_1, min16float4 s1_2, min16float4 s1_3, min16float4 s1_4, min16float4 s1_5, min16float4 s1_6, min16float4 s1_7, min16float4 s1_8) {
	min16float4 r = 0.0;
	r += mul(s0_0, min16float4x4(0.19388069212436676, -0.06936725229024887, 0.11513069272041321, 0.07441535592079163, -0.1023891419172287, -0.00940265879034996, -0.031614065170288086, -0.10159673541784286, -0.23692139983177185, -0.10359258204698563, -0.04433418810367584, -0.023203184828162193, -0.009818367660045624, 0.05567094683647156, 0.1303756982088089, 0.010668047703802586));
	r += mul(s0_1, min16float4x4(0.33009883761405945, -0.05668700113892555, -0.4055331349372864, -0.23583990335464478, 0.16259470582008362, -0.2822239398956299, 0.3702063262462616, -0.11814316362142563, -0.5350434184074402, 0.11317053437232971, 0.20081965625286102, 0.012238076888024807, -0.006302122958004475, -0.013953262940049171, 0.03076125495135784, 0.0003198647464159876));
	r += mul(s0_2, min16float4x4(-0.024834217503666878, -0.05372963100671768, -0.13609465956687927, -0.10342702269554138, -0.030015386641025543, 0.05644885078072548, -0.4148218333721161, -0.04878484085202217, 0.023016177117824554, 0.042250752449035645, 0.058237474411726, -0.14502353966236115, -0.0339215062558651, -0.05781371891498566, 0.040937501937150955, 0.03985592722892761));
	r += mul(s0_3, min16float4x4(-0.07298697531223297, 0.22661148011684418, 0.059831053018569946, 0.12182626128196716, 0.1634615808725357, 0.005537252873182297, -0.008564477786421776, 0.012527337297797203, 0.1811685562133789, -0.24267537891864777, -0.04049817472696304, -0.04895586520433426, -0.23280665278434753, 0.12763123214244843, -0.04942852258682251, 0.19092707335948944));
	r += mul(s0_4, min16float4x4(0.2587891221046448, -0.4433312714099884, 0.03949664160609245, -0.41503897309303284, 0.13880875706672668, -0.17074638605117798, -0.26856639981269836, 0.2607625424861908, 0.3380209803581238, -0.5599460601806641, 0.1262809783220291, -0.008714510127902031, 0.7011719942092896, -0.2529306709766388, -0.24224518239498138, -0.05186314135789871));
	r += mul(s0_5, min16float4x4(-0.07599037140607834, 0.14111332595348358, -0.02483050711452961, 0.4013287425041199, 0.0519445464015007, 0.16941304504871368, -0.24309298396110535, 0.5173896551132202, -0.020732857286930084, 0.1301575005054474, 0.23423442244529724, 0.3076932728290558, -0.28751906752586365, -0.051348019391298294, 0.2225199192762375, -0.10543563961982727));
	r += mul(s0_6, min16float4x4(-0.07885657995939255, 0.11956881731748581, 0.016193054616451263, -0.02603980526328087, -0.05627588927745819, 0.040146395564079285, 0.05543307587504387, 0.08520887792110443, 0.02351890690624714, -0.11971663683652878, -0.013395285233855247, -0.05279942601919174, 0.023233488202095032, -0.14825941622257233, -0.10116919875144958, 0.06420108675956726));
	r += mul(s0_7, min16float4x4(0.18534409999847412, -0.16064369678497314, -0.06982116401195526, -0.05403193086385727, -0.12424929440021515, 0.15673111379146576, 0.08951683342456818, 0.03566552326083183, -0.05649210512638092, 0.20131652057170868, 0.031628888100385666, -0.04881523922085762, 0.02021823078393936, 0.19050857424736023, 0.09936613589525223, 0.20250268280506134));
	r += mul(s0_8, min16float4x4(-0.08155759423971176, 0.05123952403664589, 0.02361796423792839, 0.026233715936541557, -0.006595459301024675, 0.039324816316366196, 0.04834527522325516, -0.038293179124593735, 0.09510710835456848, -0.07071929425001144, -0.09119892120361328, -0.08183424919843674, -0.0695602297782898, -0.05079545080661774, 0.04245034605264664, -0.20443905889987946));
	r += mul(s1_0, min16float4x4(-0.20550961792469025, -0.09545811265707016, -0.12315135449171066, -0.03979102894663811, 0.08129952847957611, 0.01916475035250187, 0.05651377514004707, 0.10766574740409851, 0.10628850013017654, 0.01751815527677536, 0.05438219755887985, -0.01446955744177103, 0.035577192902565, -0.01835215650498867, -0.025542015209794044, -0.0028427490033209324));
	r += mul(s1_1, min16float4x4(-0.4169492721557617, -0.07560894638299942, 0.4737279713153839, 0.20946280658245087, -0.12161511182785034, 0.1013183519244194, -0.2575562596321106, 0.1694335788488388, 0.4186353385448456, -0.20188607275485992, -0.0528566800057888, -0.040565431118011475, -0.016017068177461624, 0.02370043657720089, 0.007319391705095768, 0.034081991761922836));
	r += mul(s1_2, min16float4x4(0.0273570753633976, 0.07462136447429657, 0.11572645604610443, -0.015218017622828484, -0.04540408030152321, 0.03529930114746094, 0.6047542691230774, 0.05939674377441406, -0.04201408475637436, 0.029870975762605667, 0.0659768357872963, 0.046927955001592636, 0.007547574117779732, 0.04968161880970001, -0.08813559263944626, -0.06366978585720062));
	r += mul(s1_3, min16float4x4(0.051601260900497437, -0.25296953320503235, -0.07766830921173096, -0.12135829031467438, -0.1428622454404831, 0.10400121659040451, -0.018695512786507607, -0.052905548363924026, -0.0949283093214035, 0.06453127413988113, -0.019077464938163757, 0.04679861292243004, 0.294624000787735, 0.08957245200872421, 0.016660518944263458, -0.23583988845348358));
	r += mul(s1_4, min16float4x4(-0.1405620574951172, 0.39096182584762573, 0.04493703693151474, 0.4960974156856537, 0.009225176647305489, 0.20819739997386932, 0.23334023356437683, -0.31939390301704407, -0.22748327255249023, 0.2790851294994354, 0.004904543980956078, 0.11343396455049515, -0.3242400586605072, -0.2153712958097458, -0.011980775743722916, 0.07624895870685577));
	r += mul(s1_5, min16float4x4(0.07449717074632645, -0.14892512559890747, 0.09886706620454788, -0.3251950442790985, -0.04040541872382164, -0.10758206993341446, 0.44573837518692017, -0.27832064032554626, -0.028503000736236572, -0.11637745797634125, -0.16891369223594666, -0.3286299407482147, 0.19124957919120789, 0.060988325625658035, 0.06270664185285568, 0.1803424060344696));
	r += mul(s1_6, min16float4x4(0.06990315020084381, -0.12626147270202637, -0.08649156242609024, 0.0011993488296866417, 0.07789131999015808, -0.08970052003860474, -0.016135508194565773, -0.04652055352926254, -0.02629271149635315, 0.09933993220329285, 0.04746583104133606, 0.01738726906478405, -0.18345226347446442, 0.3763536512851715, -0.009411792270839214, -0.09163598716259003));
	r += mul(s1_7, min16float4x4(-0.15184742212295532, 0.17626845836639404, 0.11757995933294296, 0.05583599954843521, 0.11059556901454926, -0.28716960549354553, -0.11057829111814499, -0.07039383053779602, 0.07883747667074203, -0.22314584255218506, 0.07934530824422836, 0.07988815009593964, -0.06684058904647827, -0.5976991057395935, -0.01078625489026308, -0.19356098771095276));
	r += mul(s1_8, min16float4x4(0.06995175778865814, -0.038494355976581573, -0.06737823039293289, -0.013205342926084995, 0.02019503153860569, -0.0029374610166996717, -0.10939542949199677, -0.060437556356191635, -0.1450195163488388, 0.11345663666725159, -0.04263630136847496, 0.03806488588452339, 0.010917598381638527, 0.05888662859797478, -0.013693769462406635, 0.11806992441415787));
	r += min16float4(0.035101499408483505, -0.044178809970617294, -0.007831067778170109, -0.020033976063132286);
	return r;
}
void Pass2(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	min16float4 s0_0 = l0(-1.0, -1.0);
	min16float4 s0_1 = l0(0.0, -1.0);
	min16float4 s0_2 = l0(1.0, -1.0);
	min16float4 s0_3 = l0(-1.0, 0.0);
	min16float4 s0_4 = l0(0.0, 0.0);
	min16float4 s0_5 = l0(1.0, 0.0);
	min16float4 s0_6 = l0(-1.0, 1.0);
	min16float4 s0_7 = l0(0.0, 1.0);
	min16float4 s0_8 = l0(1.0, 1.0);
	min16float4 s1_0 = max(-s0_0, 0.0);
	min16float4 s1_1 = max(-s0_1, 0.0);
	min16float4 s1_2 = max(-s0_2, 0.0);
	min16float4 s1_3 = max(-s0_3, 0.0);
	min16float4 s1_4 = max(-s0_4, 0.0);
	min16float4 s1_5 = max(-s0_5, 0.0);
	min16float4 s1_6 = max(-s0_6, 0.0);
	min16float4 s1_7 = max(-s0_7, 0.0);
	min16float4 s1_8 = max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	conv1_0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8);
}
//!PASS 3
//!DESC CuNNy-4x4C-BILINEAR-CHROMA-NVL-conv2
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN conv1_0
//!OUT conv2_0
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define l0(x, y) O(conv1_0, float2(x, y))
float4 f0(float2 pt, float2 pos, min16float4 s0_0, min16float4 s0_1, min16float4 s0_2, min16float4 s0_3, min16float4 s0_4, min16float4 s0_5, min16float4 s0_6, min16float4 s0_7, min16float4 s0_8, min16float4 s1_0, min16float4 s1_1, min16float4 s1_2, min16float4 s1_3, min16float4 s1_4, min16float4 s1_5, min16float4 s1_6, min16float4 s1_7, min16float4 s1_8) {
	min16float4 r = 0.0;
	r += mul(s0_0, min16float4x4(0.046020131558179855, -0.0062713720835745335, 0.03210460767149925, 0.022100526839494705, 0.004499395377933979, -0.020339511334896088, -0.002896643942221999, 0.011779277585446835, -0.0011798320338129997, -0.004241575486958027, 0.002733818022534251, -0.1391051560640335, -0.04759237915277481, 0.043974827975034714, -0.011854155920445919, 0.4481602907180786));
	r += mul(s0_1, min16float4x4(0.05836345627903938, -0.028099553659558296, 0.06393691152334213, 0.36218583583831787, -0.07982111722230911, 0.0066095804795622826, 0.09586501866579056, 0.22072458267211914, 0.0647137314081192, 0.01613362319767475, -0.031121909618377686, -0.08276520669460297, 0.07717974483966827, -0.08812955021858215, 0.054885175079107285, 0.031483929604291916));
	r += mul(s0_2, min16float4x4(-0.007233475334942341, -0.00564259709790349, 0.04549328237771988, 0.15814612805843353, -0.24649827182292938, 0.053834185004234314, -0.019926004111766815, 0.04390985891222954, 0.013445304706692696, -0.009963128715753555, -0.018496962264180183, 0.0091389836743474, -0.005705053452402353, 0.0355142280459404, -0.03430160880088806, -0.02589094266295433));
	r += mul(s0_3, min16float4x4(0.029933080077171326, -0.022573240101337433, 0.019564442336559296, 0.043337382376194, -0.022313164547085762, 0.02353004738688469, -0.002223499584943056, 0.021616986021399498, -0.1562441885471344, 0.047455865889787674, -0.12311961501836777, 0.19631752371788025, 0.023058012127876282, 0.01264424342662096, 0.17753508687019348, 0.09895532578229904));
	r += mul(s0_4, min16float4x4(0.09086500853300095, 0.06372346729040146, 0.14822566509246826, -0.3679233193397522, -0.05144113674759865, 0.202894926071167, 0.15404599905014038, -0.14697390794754028, -0.498126357793808, -0.3642580211162567, -0.28509044647216797, -0.005122080445289612, 0.32850635051727295, 0.49596652388572693, 0.42394158244132996, 0.1528300791978836));
	r += mul(s0_5, min16float4x4(-0.23149381577968597, -0.0911305695772171, 0.02847870998084545, -0.13330121338367462, -0.3756411671638489, -0.4175484776496887, -0.06990759819746017, -0.22825628519058228, -0.1846155971288681, 0.03127847984433174, 0.03793713077902794, -0.044812243431806564, 0.11395058035850525, 0.06321123987436295, -0.012671836651861668, 0.05066346004605293));
	r += mul(s0_6, min16float4x4(0.01644514687359333, -0.05380275472998619, -0.009008154273033142, -0.11102630943059921, -0.05413419008255005, -0.02797830104827881, -0.007261249236762524, -0.054353632032871246, -0.06110198423266411, 0.056288495659828186, -0.06414029747247696, 0.06906577199697495, 0.06828802078962326, -0.05616987124085426, 0.05436594784259796, -0.11999059468507767));
	r += mul(s0_7, min16float4x4(0.2185703068971634, 0.050169385969638824, 0.3362114727497101, -0.011208316311240196, -0.33872002363204956, -0.03358977288007736, -0.2313290387392044, 0.05972050502896309, -0.2899743616580963, -0.04698776826262474, -0.10620101541280746, -0.00390688655897975, 0.21731358766555786, -0.07806607335805893, -0.14208866655826569, -0.08129807561635971));
	r += mul(s0_8, min16float4x4(0.22581353783607483, 0.072383813560009, 0.16258642077445984, -0.04501970484852791, -0.01224837452173233, 0.11450328677892685, 0.12821370363235474, -0.00543622812256217, -0.19056913256645203, -0.006351746618747711, 0.02148948796093464, 0.01464856043457985, 0.23849798738956451, -0.06887119263410568, -0.014510833658277988, 0.014066609553992748));
	r += mul(s1_0, min16float4x4(-0.0029215423855930567, -0.003868812695145607, 0.026914579793810844, 0.07618869096040726, 0.006246340926736593, 0.028663141652941704, 0.012411043979227543, -0.17333978414535522, -0.12266474217176437, 0.061645034700632095, -0.09245289862155914, 0.12237746268510818, 0.14294521510601044, -0.08917135000228882, 0.058635540306568146, 0.04138913378119469));
	r += mul(s1_1, min16float4x4(-0.03403148800134659, -0.007475115824490786, -0.007504520006477833, 0.005073902662843466, 0.07426726818084717, 0.017303956672549248, -0.08472198247909546, -0.3089122474193573, -0.2081584483385086, -0.0021898681297898293, -0.1303284615278244, 0.007701934315264225, 0.22804197669029236, -0.007188255432993174, 0.12465853244066238, 0.25188148021698));
	r += mul(s1_2, min16float4x4(-0.060129839926958084, 0.0018703390378504992, 0.028218645602464676, 0.09531264007091522, -0.02313968725502491, 0.005623511970043182, -0.05993685498833656, -0.2685543894767761, -0.11178480833768845, 0.04573245719075203, 0.0015124055789783597, -0.02178199589252472, 0.10624397546052933, -0.0349026657640934, 0.0008018402149900794, 0.1125333160161972));
	r += mul(s1_3, min16float4x4(-0.04060663282871246, 0.015258613042533398, -0.037673220038414, -0.05561528354883194, 0.041622355580329895, -0.024891624227166176, 0.02208154834806919, 0.042271003127098083, -0.18963392078876495, 0.015282600186765194, -0.05657358840107918, -0.35896462202072144, 0.11105044931173325, -0.098032645881176, 0.027245378121733665, -0.08898981660604477));
	r += mul(s1_4, min16float4x4(0.21803468465805054, -0.14179302752017975, 0.4028160870075226, 0.6544983983039856, -0.08534251898527145, -0.035913389176130295, -0.42871206998825073, 0.4646078944206238, -0.31111612915992737, 0.4446816146373749, -0.10217617452144623, -0.06839004904031754, 0.4755685031414032, -0.8766841888427734, 0.20163367688655853, -0.16446468234062195));
	r += mul(s1_5, min16float4x4(0.282238632440567, 0.16163338720798492, 0.17416757345199585, 0.1927795559167862, 0.0020396800246089697, 0.17051510512828827, 0.028322283178567886, 0.20232944190502167, -0.13493630290031433, 0.029765170067548752, 0.05298490449786186, 0.08176873624324799, -0.03170159459114075, 0.00024677813053131104, 0.04446260631084442, 0.004768595565110445));
	r += mul(s1_6, min16float4x4(-0.08616385608911514, 0.004892374854534864, -0.18009981513023376, -0.010366039350628853, -0.05037997290492058, 0.02655244804918766, -0.01778801530599594, 0.07865310460329056, -0.2800663113594055, -0.09477785974740982, -0.3745938241481781, 0.026850050315260887, 0.15379443764686584, 0.0891529992222786, 0.08471114933490753, 0.005759549792855978));
	r += mul(s1_7, min16float4x4(-0.23128172755241394, -0.08297394961118698, -0.10174544155597687, -0.29980695247650146, -0.04085566848516464, 0.05776554346084595, 0.12767645716667175, 0.06735391914844513, -0.3091132938861847, -0.08185766637325287, -0.11161476373672485, 0.08791624009609222, 0.283978134393692, 0.08108437806367874, 0.2743920683860779, -0.013748924247920513));
	r += mul(s1_8, min16float4x4(0.4654843211174011, -0.08527747541666031, -0.17832517623901367, -0.1937750279903412, -0.2759883999824524, 0.02398575469851494, -0.008144628256559372, -0.001610922976396978, -0.2820773124694824, 0.0836019292473793, 0.03191472962498665, 0.025332121178507805, 0.1716776341199875, -0.014111091382801533, 0.01936563476920128, -0.019816545769572258));
	r += min16float4(-0.02587927132844925, -0.007343030534684658, -0.022501466795802116, 0.03021487407386303);
	return r;
}
void Pass3(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	min16float4 s0_0 = l0(-1.0, -1.0);
	min16float4 s0_1 = l0(0.0, -1.0);
	min16float4 s0_2 = l0(1.0, -1.0);
	min16float4 s0_3 = l0(-1.0, 0.0);
	min16float4 s0_4 = l0(0.0, 0.0);
	min16float4 s0_5 = l0(1.0, 0.0);
	min16float4 s0_6 = l0(-1.0, 1.0);
	min16float4 s0_7 = l0(0.0, 1.0);
	min16float4 s0_8 = l0(1.0, 1.0);
	min16float4 s1_0 = max(-s0_0, 0.0);
	min16float4 s1_1 = max(-s0_1, 0.0);
	min16float4 s1_2 = max(-s0_2, 0.0);
	min16float4 s1_3 = max(-s0_3, 0.0);
	min16float4 s1_4 = max(-s0_4, 0.0);
	min16float4 s1_5 = max(-s0_5, 0.0);
	min16float4 s1_6 = max(-s0_6, 0.0);
	min16float4 s1_7 = max(-s0_7, 0.0);
	min16float4 s1_8 = max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	conv2_0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8);
}
//!PASS 4
//!DESC CuNNy-4x4C-BILINEAR-CHROMA-NVL-conv3
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN conv2_0
//!OUT conv3_0
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define l0(x, y) O(conv2_0, float2(x, y))
float4 f0(float2 pt, float2 pos, min16float4 s0_0, min16float4 s0_1, min16float4 s0_2, min16float4 s0_3, min16float4 s0_4, min16float4 s0_5, min16float4 s0_6, min16float4 s0_7, min16float4 s0_8, min16float4 s1_0, min16float4 s1_1, min16float4 s1_2, min16float4 s1_3, min16float4 s1_4, min16float4 s1_5, min16float4 s1_6, min16float4 s1_7, min16float4 s1_8) {
	min16float4 r = 0.0;
	r += mul(s0_0, min16float4x4(-0.07088809460401535, -0.003213488031178713, 0.18018461763858795, 0.0712353065609932, -0.02204224281013012, 0.038624655455350876, -0.06823662668466568, 0.020411530509591103, 0.034352030605077744, 0.018621724098920822, 0.0067029776982963085, -0.05066321790218353, -0.003918718080967665, -0.0063605583272874355, -0.008740076795220375, 0.015687037259340286));
	r += mul(s0_1, min16float4x4(-0.036620598286390305, 0.015303260646760464, 0.02907799556851387, -0.0327623225748539, 0.18499231338500977, -0.07288935780525208, -0.059801362454891205, 0.05001300573348999, -0.12133770436048508, 0.049917951226234436, -0.025252211838960648, -0.03972114250063896, 0.019298948347568512, -0.024982260540127754, 0.004058291669934988, 0.007316519506275654));
	r += mul(s0_2, min16float4x4(0.013932143338024616, -0.025298243388533592, -0.009223029948771, -0.01545755472034216, 0.03374691307544708, 0.0040414342656731606, 0.03647199645638466, 0.007329467684030533, -0.029850417748093605, 0.093073271214962, -0.0307871513068676, -2.5937753889593296e-05, 0.01812325045466423, -0.0169101320207119, 0.009792901575565338, 0.003671051235869527));
	r += mul(s0_3, min16float4x4(-0.36876773834228516, -0.22330275177955627, 0.20443764328956604, -0.947252631187439, -0.317311555147171, -0.13510258495807648, -0.29589125514030457, 0.36254164576530457, 0.2485353797674179, 0.10506494343280792, 0.0847044438123703, 0.36124342679977417, -0.03751383721828461, 0.03382277488708496, -0.012397632002830505, 0.019713180139660835));
	r += mul(s0_4, min16float4x4(0.011076223105192184, 0.6417531371116638, 0.18918754160404205, 0.055033128708601, 0.24839970469474792, 0.3295595645904541, -0.1606467068195343, -0.02778495103120804, 0.3656052052974701, -0.34332576394081116, -0.32519805431365967, 0.1977541744709015, 0.0696711465716362, -0.06946972757577896, 0.05938023328781128, 0.05270107090473175));
	r += mul(s0_5, min16float4x4(0.0031145841348916292, -0.030426623299717903, -0.0027092525269836187, -0.003038389142602682, -0.047983650118112564, 0.010257229208946228, -0.046873610466718674, -0.04020910710096359, 0.04250092804431915, -0.025468703359365463, 0.06074519455432892, 0.09683164209127426, -0.014855797402560711, -0.05543239042162895, 0.002283395268023014, -0.04659454524517059));
	r += mul(s0_6, min16float4x4(0.06752089411020279, -0.10278351604938507, -0.012105253525078297, -0.0323815643787384, -0.1831042766571045, -0.1270054280757904, -0.12376495450735092, -0.32104337215423584, -0.05990523844957352, 0.06657994538545609, -0.0526004321873188, 0.05434811860322952, -0.006764161866158247, -0.03153815120458603, -0.018002204596996307, -0.007705931551754475));
	r += mul(s0_7, min16float4x4(-0.022427236661314964, 0.1420876383781433, 0.11246417462825775, -0.006451806053519249, 0.03040431998670101, 0.2088613063097, 0.05761266127228737, -0.08418827503919601, -0.05950245261192322, -0.1283990889787674, -0.04860702529549599, -0.02338264323771, -0.054814718663692474, 0.1236894279718399, 0.37756413221359253, 0.016771120950579643));
	r += mul(s0_8, min16float4x4(0.01695745438337326, -0.02698422037065029, 0.0024970972444862127, -0.0037415320985019207, 0.017235208302736282, 0.05169929191470146, -0.07256034016609192, 0.018613094463944435, -0.00236606621183455, -0.0242388267070055, 0.10180474072694778, -0.05826397240161896, 0.04235907271504402, -0.19341015815734863, -0.036126356571912766, 0.009760700166225433));
	r += mul(s1_0, min16float4x4(-0.03312892094254494, -0.011130855418741703, -0.06698983907699585, -0.059394124895334244, -0.02420184761285782, -0.002722978824749589, 0.03966295346617699, -0.029216842725872993, 0.05261824280023575, -0.019702930003404617, 0.0032897230703383684, 0.036830563098192215, 0.037006527185440063, -0.015321807004511356, 0.03532722219824791, 0.002404905157163739));
	r += mul(s1_1, min16float4x4(-0.1190052255988121, 0.09145926684141159, -0.006861030589789152, -0.007511582691222429, -0.0769043117761612, 0.08374756574630737, 0.06704720109701157, 0.025313518941402435, 0.16777488589286804, -0.08782923221588135, -0.05171676352620125, -0.015735886991024017, 0.1453840285539627, 0.05149476230144501, -0.0022870535030961037, 0.15869294106960297));
	r += mul(s1_2, min16float4x4(0.016437171027064323, -0.039727576076984406, -0.032778188586235046, 0.012633470818400383, 0.052467282861471176, -0.027499975636601448, -0.0027245639357715845, 0.008268347941339016, 0.07361359894275665, 0.0004899987252429128, 0.02948325127363205, -0.01167524978518486, 0.16084596514701843, -0.14386272430419922, -0.00878169760107994, 0.07053222507238388));
	r += mul(s1_3, min16float4x4(0.21642011404037476, 0.05642173811793327, 0.1569710671901703, 0.03691387176513672, 0.047810327261686325, 0.006010949611663818, -0.30566301941871643, -0.09237948060035706, -0.11596596240997314, -0.03430412337183952, -0.10647072643041611, 0.06214230880141258, 0.015361701138317585, -0.0036413196939975023, -0.24311663210391998, 0.28149107098579407));
	r += mul(s1_4, min16float4x4(-0.03025781735777855, -0.25196269154548645, -0.14425168931484222, 0.020193418487906456, -0.24371586740016937, -0.4521772265434265, 0.06760615110397339, -0.011674759909510612, -0.24793632328510284, 0.1939312368631363, -0.21639004349708557, 0.1089709922671318, -0.047302693128585815, -0.16679668426513672, -0.08444444835186005, 0.6113514304161072));
	r += mul(s1_5, min16float4x4(-0.002281488385051489, 0.029671981930732727, 0.030026515945792198, -0.0025345245376229286, 0.03046661615371704, 0.2255445271730423, 0.027310019358992577, -0.014139587990939617, -0.062040891498327255, -0.03163629397749901, 0.013586302287876606, -0.06713897734880447, 0.027921350672841072, -0.14458933472633362, 0.25143125653266907, 0.2736088037490845));
	r += mul(s1_6, min16float4x4(0.04465591534972191, 0.03747476264834404, -0.06619028747081757, 0.08677132427692413, -0.017101841047406197, 0.014507489278912544, -0.23583868145942688, 0.17777472734451294, -0.004761125426739454, -0.022518929094076157, 0.1284177601337433, -0.1284027099609375, 0.033582016825675964, -0.0005975884268991649, 0.1525399088859558, -0.25097671151161194));
	r += mul(s1_7, min16float4x4(-0.040879614651203156, -0.012783563695847988, -0.11742552369832993, 0.004140413831919432, -0.05836591124534607, -0.2034226655960083, -0.09989752620458603, -0.04901139810681343, 0.014233309775590897, 0.11324793100357056, 0.07669215649366379, -0.016583232209086418, -0.4914712905883789, -0.05685913562774658, -1.4009811878204346, -0.5487343072891235));
	r += mul(s1_8, min16float4x4(-0.002920350059866905, -0.019814269617199898, 0.013014335185289383, -0.0008936868980526924, -0.012498460710048676, 0.1538122594356537, 0.08129599690437317, -0.01078232005238533, -0.020727243274450302, -0.07206583023071289, -0.05018549785017967, -0.0010284126037731767, -0.24867789447307587, -0.11605021357536316, -0.058821938931941986, -0.23484526574611664));
	r += min16float4(0.009286172688007355, -0.004122924990952015, -0.01906372793018818, -0.005893995985388756);
	return r;
}
void Pass4(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	min16float4 s0_0 = l0(-1.0, -1.0);
	min16float4 s0_1 = l0(0.0, -1.0);
	min16float4 s0_2 = l0(1.0, -1.0);
	min16float4 s0_3 = l0(-1.0, 0.0);
	min16float4 s0_4 = l0(0.0, 0.0);
	min16float4 s0_5 = l0(1.0, 0.0);
	min16float4 s0_6 = l0(-1.0, 1.0);
	min16float4 s0_7 = l0(0.0, 1.0);
	min16float4 s0_8 = l0(1.0, 1.0);
	min16float4 s1_0 = max(-s0_0, 0.0);
	min16float4 s1_1 = max(-s0_1, 0.0);
	min16float4 s1_2 = max(-s0_2, 0.0);
	min16float4 s1_3 = max(-s0_3, 0.0);
	min16float4 s1_4 = max(-s0_4, 0.0);
	min16float4 s1_5 = max(-s0_5, 0.0);
	min16float4 s1_6 = max(-s0_6, 0.0);
	min16float4 s1_7 = max(-s0_7, 0.0);
	min16float4 s1_8 = max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	conv3_0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8);
}
//!PASS 5
//!DESC CuNNy-4x4C-BILINEAR-CHROMA-NVL-conv4
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN conv3_0
//!OUT conv4_0
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define l0(x, y) O(conv3_0, float2(x, y))
float4 f0(float2 pt, float2 pos, min16float4 s0_0, min16float4 s0_1, min16float4 s0_2, min16float4 s0_3, min16float4 s0_4, min16float4 s0_5, min16float4 s0_6, min16float4 s0_7, min16float4 s0_8, min16float4 s1_0, min16float4 s1_1, min16float4 s1_2, min16float4 s1_3, min16float4 s1_4, min16float4 s1_5, min16float4 s1_6, min16float4 s1_7, min16float4 s1_8) {
	min16float4 r = 0.0;
	r += mul(s0_0, min16float4x4(0.008965588174760342, -0.010550805367529392, 0.0034086904488503933, 0.03722207620739937, -0.400846391916275, -0.29824134707450867, 0.03959399834275246, -0.287300705909729, -0.05312061682343483, 0.22412289679050446, -0.14111678302288055, 0.05214675888419151, -0.05876685306429863, 0.009020172990858555, -0.039433855563402176, 0.022347651422023773));
	r += mul(s0_1, min16float4x4(-0.09155634790658951, -0.1076660007238388, -0.029161229729652405, -0.05547371879220009, -0.05255650728940964, -0.19695115089416504, -0.0006968780653551221, -0.45028847455978394, -0.5716909170150757, -0.09136176109313965, -0.29197272658348083, 0.8887007236480713, 0.17965415120124817, 0.08667346090078354, -0.016078295186161995, 0.015932943671941757));
	r += mul(s0_2, min16float4x4(0.05579477921128273, 0.025785448029637337, -0.022307151928544044, 0.007031796500086784, -0.06372154504060745, -0.045064058154821396, -0.00776639673858881, 0.0408514030277729, 0.09424720704555511, 0.08722491562366486, -0.08520053327083588, 0.041619155555963516, -0.1906420737504959, -0.13374152779579163, 0.09887716919183731, 0.164735808968544));
	r += mul(s0_3, min16float4x4(3.078209192608483e-05, 0.10543622076511383, 0.030184820294380188, 0.014734315685927868, 0.21451592445373535, -0.42440474033355713, -0.2240661084651947, 0.06843218952417374, 0.0314093716442585, 0.30957743525505066, 0.05785396322607994, 0.008199128322303295, -0.006966100540012121, 0.030967265367507935, 0.04160270094871521, 0.008774143643677235));
	r += mul(s0_4, min16float4x4(0.043902307748794556, 0.33175504207611084, -0.49597838521003723, -0.16455349326133728, 0.10413524508476257, -0.22403758764266968, 0.003335267538204789, -0.1101062074303627, -0.38574132323265076, 0.2959374487400055, 0.14572301506996155, 0.06113482266664505, 0.3699164092540741, -0.2218387871980667, 0.24169811606407166, -0.0705539882183075));
	r += mul(s0_5, min16float4x4(-0.016109906136989594, 0.03724754974246025, 0.0860908105969429, 0.04798421636223793, 0.01162985060364008, 0.015406642109155655, -0.0526120588183403, -0.04113764688372612, -0.04597564414143562, 0.07202126085758209, 0.24169987440109253, 0.5214841365814209, -0.03856446221470833, -0.13525894284248352, -0.19023972749710083, -0.34863102436065674));
	r += mul(s0_6, min16float4x4(0.050598639994859695, 0.0016432092525064945, 0.06544534116983414, 0.003951888997107744, -0.012957812286913395, 0.010381964966654778, 0.07446067035198212, -0.0031908461824059486, -0.0175203625112772, 0.009314179420471191, 0.013010939583182335, 0.00979639496654272, 0.019345181062817574, -0.011276611126959324, 0.04431217908859253, 0.004529617261141539));
	r += mul(s0_7, min16float4x4(-0.03332536295056343, -0.07349099218845367, 0.058881063014268875, -0.06860070675611496, -0.006275343243032694, -0.030438527464866638, -0.010951478965580463, -0.02274474874138832, -0.08325496315956116, 0.1918932944536209, -0.1372068226337433, 0.009005756117403507, 0.013859730213880539, -0.12328425794839859, 0.023744484409689903, -0.02932407334446907));
	r += mul(s0_8, min16float4x4(-0.00985771231353283, -0.003699829103425145, -0.010585344396531582, 0.02456972748041153, -0.005318920593708754, -0.00420305086299777, 0.003545451443642378, 0.017847096547484398, -0.03421252220869064, 0.15770971775054932, -0.26660171151161194, 0.10701071470975876, 0.028620515018701553, -0.11400953680276871, 0.036741096526384354, -0.013820420019328594));
	r += mul(s1_0, min16float4x4(0.016201136633753777, 0.045274022966623306, -0.005540219601243734, 0.0011710460530593991, -0.1530371755361557, -0.013763627037405968, -0.043822307139635086, 0.059410806745290756, 0.01193215325474739, -0.0061363945715129375, 0.03465742617845535, -0.0014223674079403281, -0.05059579759836197, 0.018411805853247643, -0.023432493209838867, -0.002683209953829646));
	r += mul(s1_1, min16float4x4(0.21435539424419403, 0.22943679988384247, 0.08472578972578049, -0.005000199656933546, 0.14734026789665222, 0.16357511281967163, -0.05798308178782463, -0.085201695561409, 0.15381047129631042, -0.047286372631788254, 0.13598397374153137, -0.03368011489510536, -0.17051678895950317, -0.029137546196579933, -0.4936967194080353, 0.14306212961673737));
	r += mul(s1_2, min16float4x4(-0.15552584826946259, -0.017095552757382393, 0.0313229076564312, 0.16681262850761414, 0.01850860007107258, 0.02977951057255268, 0.008439302444458008, -0.002989645581692457, -0.04173197224736214, -0.09106998890638351, 0.04051244258880615, -0.20068463683128357, 0.04945850372314453, 0.08080904185771942, -0.16665667295455933, -0.11791638284921646));
	r += mul(s1_3, min16float4x4(-0.03574763238430023, -0.062031615525484085, -0.054210513830184937, -0.0032699552830308676, 0.13330094516277313, 0.1342778205871582, 0.18395256996154785, -0.019938873127102852, -0.004337748978286982, -0.010040461085736752, -0.03249521926045418, 0.005863330792635679, -0.03991959989070892, 0.02445470355451107, -0.07641706615686417, 0.004230080638080835));
	r += mul(s1_4, min16float4x4(0.120368592441082, -0.42675837874412537, 0.09420042484998703, -0.021007034927606583, -0.011109624989330769, -0.08034884929656982, 0.28429126739501953, -0.1523839235305786, -0.05090336874127388, 0.0751822218298912, -0.20307236909866333, -0.004001962020993233, -0.003756426041945815, 0.21337878704071045, -0.003987225238233805, 0.06567396968603134));
	r += mul(s1_5, min16float4x4(-0.012412915006279945, 0.08373206108808517, -0.05200093984603882, 0.07545634359121323, -0.021150166168808937, -0.01212296076118946, 0.022013377398252487, 0.012176189571619034, 0.0006874344544485211, -0.0124124176800251, -0.09204079210758209, 0.04610340669751167, 0.01753935217857361, -0.029143530875444412, 0.08274170756340027, -0.08841171115636826));
	r += mul(s1_6, min16float4x4(-0.0018889743369072676, -0.0031667230650782585, 0.0012534537818282843, -0.0012057656422257423, -0.01671737991273403, -0.023621290922164917, -0.022201936691999435, -0.002934665186330676, 0.00991823710501194, 0.013895637355744839, 0.0067918323911726475, -0.0018357059452682734, -0.0034169757273048162, 0.005373528692871332, -0.005470018833875656, 0.0014652172103524208));
	r += mul(s1_7, min16float4x4(0.02749919332563877, -0.039369627833366394, -0.03118540532886982, 0.001053340034559369, -0.008108094334602356, -0.015660202130675316, -0.030670255422592163, 0.015130181796848774, -0.009920000098645687, 0.01446075364947319, -0.011318719014525414, -0.005689637269824743, 0.0012292556930333376, -0.01983843371272087, 0.010365476831793785, 0.0015844975132495165));
	r += mul(s1_8, min16float4x4(-0.02469957247376442, 0.05287545174360275, -0.030072864145040512, -0.0003662745584733784, -0.007285210769623518, 0.01788630522787571, -0.0005179219879209995, 0.012615608051419258, 0.0036407390143722296, -0.012232284992933273, -0.009192517958581448, -0.00016099674394354224, 0.0028205891139805317, -0.0032672230154275894, 0.027630973607301712, -0.001949397730641067));
	r += min16float4(-0.0074318693950772285, -0.0015614568255841732, -0.006034728605300188, 0.01272650621831417);
	return r;
}
void Pass5(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	min16float4 s0_0 = l0(-1.0, -1.0);
	min16float4 s0_1 = l0(0.0, -1.0);
	min16float4 s0_2 = l0(1.0, -1.0);
	min16float4 s0_3 = l0(-1.0, 0.0);
	min16float4 s0_4 = l0(0.0, 0.0);
	min16float4 s0_5 = l0(1.0, 0.0);
	min16float4 s0_6 = l0(-1.0, 1.0);
	min16float4 s0_7 = l0(0.0, 1.0);
	min16float4 s0_8 = l0(1.0, 1.0);
	min16float4 s1_0 = max(-s0_0, 0.0);
	min16float4 s1_1 = max(-s0_1, 0.0);
	min16float4 s1_2 = max(-s0_2, 0.0);
	min16float4 s1_3 = max(-s0_3, 0.0);
	min16float4 s1_4 = max(-s0_4, 0.0);
	min16float4 s1_5 = max(-s0_5, 0.0);
	min16float4 s1_6 = max(-s0_6, 0.0);
	min16float4 s1_7 = max(-s0_7, 0.0);
	min16float4 s1_8 = max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	conv4_0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8);
}
//!PASS 6
//!DESC CuNNy-4x4C-BILINEAR-CHROMA-NVL-out
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN conv4_0
//!OUT out_0
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define l0(x, y) O(conv4_0, float2(x, y))
float4 f0(float2 pt, float2 pos, min16float4 s0_0, min16float4 s0_1, min16float4 s0_2, min16float4 s0_3, min16float4 s0_4, min16float4 s0_5, min16float4 s0_6, min16float4 s0_7, min16float4 s0_8, min16float4 s1_0, min16float4 s1_1, min16float4 s1_2, min16float4 s1_3, min16float4 s1_4, min16float4 s1_5, min16float4 s1_6, min16float4 s1_7, min16float4 s1_8) {
	min16float4 r = 0.0;
	r += mul(s0_0, min16float4x4(-0.021091915667057037, -0.04092849791049957, 0.004078066907823086, 0.003434202168136835, 0.07394824922084808, 0.010251994244754314, 0.01534915529191494, -0.018860671669244766, 0.030584467574954033, 0.07006677240133286, -0.0034143596421927214, -0.013532262295484543, -0.0009574862779118121, -0.012308584526181221, -0.0012667806586250663, 0.009716436266899109));
	r += mul(s0_1, min16float4x4(0.011504275724291801, -0.0994078665971756, 0.011509353294968605, 0.01101323589682579, -0.0798361673951149, 0.1274414360523224, -0.012192348949611187, 0.01665990985929966, 0.06811144948005676, 0.03324959799647331, -0.014874112792313099, -0.045532405376434326, 0.018857255578041077, -0.03601184859871864, -0.002422536490485072, -0.0037343306466937065));
	r += mul(s0_2, min16float4x4(-0.008499028161168098, 0.01847425289452076, -0.008662356063723564, 0.004860249347984791, 0.03454548865556717, -0.06763163954019547, 0.011140681803226471, 0.007242733146995306, 0.013780422508716583, 0.02289062924683094, -0.014273804612457752, 0.001513717113994062, -0.008760708384215832, 0.005130437668412924, -0.0014494189526885748, -0.003879159688949585));
	r += mul(s0_3, min16float4x4(-0.007081394083797932, -0.0005254162242636085, -0.06514985859394073, 0.0019754485692828894, -0.0322406031191349, 0.0065959482453763485, 0.05406973510980606, -0.002248002216219902, -0.021034743636846542, -0.0006339418468996882, 0.12182643264532089, -0.01887914165854454, -0.1391608864068985, -0.1027834415435791, 0.015386826358735561, -0.058476522564888));
	r += mul(s0_4, min16float4x4(-0.16053152084350586, 0.39550715684890747, -0.24086345732212067, -0.2133798450231552, 0.3097359240055084, 0.014511479064822197, 0.15389402210712433, 0.28418007493019104, -0.5332031846046448, -0.42285117506980896, 0.22830291092395782, 0.48100608587265015, -0.05066809803247452, 0.014277327805757523, -0.048475250601768494, -0.0696597769856453));
	r += mul(s0_5, min16float4x4(0.04381847381591797, -0.0018938094144687057, 0.03820588067173958, -0.0016731262439861894, 0.021833406761288643, 0.1284179538488388, -0.03793741390109062, -0.1096193715929985, 0.050396863371133804, -0.04187575727701187, 0.048464689403772354, -0.005732124205678701, -0.011704405769705772, 0.0035267926286906004, -0.00031774424132891, 0.021142806857824326));
	r += mul(s0_6, min16float4x4(-0.0011563771404325962, -0.008120442740619183, 0.006855224259197712, 0.0013533082092180848, 0.009228086099028587, -3.439191641518846e-05, 0.0039504412561655045, 0.007966788485646248, 0.030286896973848343, 0.012964272871613503, -0.013329488225281239, 0.0032725215423852205, -0.03162267431616783, 0.02543230727314949, -0.24755868315696716, -0.030092136934399605));
	r += mul(s0_7, min16float4x4(-0.04628303274512291, 0.06069111451506615, -0.2763674557209015, 0.3001261055469513, 0.022763367742300034, 0.02134285867214203, 0.031922854483127594, -0.0035751666873693466, 0.037230510264635086, 0.02677963674068451, -0.004039810970425606, -0.12374424934387207, -0.07906333357095718, -0.09642907977104187, -0.04336510971188545, -0.15517596900463104));
	r += mul(s0_8, min16float4x4(-0.021246057003736496, 0.0052375816740095615, -0.02954733930528164, -0.06822358816862106, -0.05139048770070076, 0.007258380763232708, 0.025577286258339882, 0.03918854892253876, -0.014111536554992199, -0.017646826803684235, -0.017522208392620087, 0.0408826619386673, 0.002466235775500536, -0.021176736801862717, -0.002207087818533182, 0.017504261806607246));
	r += mul(s1_0, min16float4x4(0.05596061050891876, 0.011558745056390762, 0.0064273010939359665, -0.013327332213521004, -0.02101435884833336, -0.01680639013648033, -0.013380913995206356, -0.01250386517494917, -0.013706355355679989, -0.055541206151247025, 0.02166866883635521, -0.03625453636050224, -0.03663867712020874, 0.0023199787829071283, -0.01274778414517641, 0.01798398047685623));
	r += mul(s1_1, min16float4x4(-0.04227779805660248, 0.12646795809268951, -0.011023171246051788, 0.0012490940280258656, 0.013427159748971462, -0.09287748485803604, 0.04739055782556534, 0.002973452676087618, -0.008767388761043549, -0.010927154682576656, -0.00687416410073638, 0.013028205372393131, -0.002422820311039686, 0.030843285843729973, -0.004960420075803995, -0.0035842268262058496));
	r += mul(s1_2, min16float4x4(0.01581595465540886, -0.018483933061361313, 0.004591971170157194, 0.0020859339274466038, -0.042846571654081345, 0.05689098313450813, -0.00932911317795515, 0.012539113871753216, -0.007160576060414314, -0.0013018426252529025, -0.002087264321744442, 0.003934308420866728, 0.008015255443751812, -0.01577453687787056, 0.005529620219022036, -0.0032663317397236824));
	r += mul(s1_3, min16float4x4(-0.03671562299132347, 0.11256266385316849, -0.08407734334468842, 0.057011473923921585, -0.09908740967512131, 0.04772957041859627, -0.04698386788368225, 0.04894012212753296, -0.010609679855406284, -0.0788584053516388, 0.012233316898345947, -0.036017850041389465, 0.38317790627479553, -0.038601431995630264, 0.017668340355157852, -0.053750813007354736));
	r += mul(s1_4, min16float4x4(0.14014483988285065, -0.20266543328762054, 0.12184928357601166, 0.1745336651802063, 0.06762775033712387, -0.24932609498500824, -0.17822273075580597, -0.47952863574028015, 0.013942663557827473, 0.16979780793190002, -0.062422458082437515, 0.042851682752370834, -0.01501933578401804, 0.1484244018793106, 0.006217071786522865, 0.0807560607790947));
	r += mul(s1_5, min16float4x4(-0.0008523912983946502, 0.00047357569565065205, 0.00733488192781806, -0.048218321055173874, -0.010983492247760296, 0.005321836564689875, -0.03577673062682152, 0.046657077968120575, -0.00952252559363842, -0.013761189766228199, -0.00035572302294895053, 0.00015864211309235543, 0.004720799624919891, 0.003553329035639763, -0.005037002731114626, -0.019086498767137527));
	r += mul(s1_6, min16float4x4(-0.049236051738262177, -0.025582246482372284, 0.1063975915312767, -0.03794842213392258, -0.004818570800125599, 0.018256623297929764, -0.058227505534887314, 0.012370645068585873, 0.009569971822202206, 0.00035534004564397037, -0.03528016060590744, 0.00621876260265708, 0.03379594907164574, -0.06323239207267761, 0.38649311661720276, -0.08326002210378647));
	r += mul(s1_7, min16float4x4(0.024230316281318665, -0.03721581771969795, 0.06258764863014221, -0.06704680621623993, -0.0005601418088190258, -0.037666723132133484, 0.04795578122138977, -0.06544993817806244, -0.005719189997762442, 0.010207102634012699, 0.04892420023679733, 0.006668725982308388, 0.01580328866839409, 0.04762957990169525, 0.0438232496380806, 0.2333778440952301));
	r += mul(s1_8, min16float4x4(0.0074685304425656796, 0.05009899288415909, 0.0034486267250031233, 0.04431277886033058, 0.00011328949767630547, 0.0015413924120366573, -0.008848372846841812, -0.02084304578602314, 0.005285914987325668, 0.0010713957017287612, -0.006220679730176926, 0.015463803894817829, -0.0027189694810658693, -0.007214212324470282, 0.009114624932408333, -0.008849152363836765));
	r += min16float4(0.00011405187251511961, 7.252748036989942e-05, -7.202656433946686e-06, -4.678563982452033e-06);
	return tanh(r);
}
void Pass6(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	min16float4 s0_0 = l0(-1.0, -1.0);
	min16float4 s0_1 = l0(0.0, -1.0);
	min16float4 s0_2 = l0(1.0, -1.0);
	min16float4 s0_3 = l0(-1.0, 0.0);
	min16float4 s0_4 = l0(0.0, 0.0);
	min16float4 s0_5 = l0(1.0, 0.0);
	min16float4 s0_6 = l0(-1.0, 1.0);
	min16float4 s0_7 = l0(0.0, 1.0);
	min16float4 s0_8 = l0(1.0, 1.0);
	min16float4 s1_0 = max(-s0_0, 0.0);
	min16float4 s1_1 = max(-s0_1, 0.0);
	min16float4 s1_2 = max(-s0_2, 0.0);
	min16float4 s1_3 = max(-s0_3, 0.0);
	min16float4 s1_4 = max(-s0_4, 0.0);
	min16float4 s1_5 = max(-s0_5, 0.0);
	min16float4 s1_6 = max(-s0_6, 0.0);
	min16float4 s1_7 = max(-s0_7, 0.0);
	min16float4 s1_8 = max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	out_0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8);
}
//!PASS 7
//!DESC CuNNy-4x4C-BILINEAR-CHROMA-NVL-shuffle
//!STYLE PS
//!IN out_0, INPUT
float4 Pass7(float2 pos) {
	float2 pt = float2(GetInputPt());
	const static float3x3 rgb2yuv = {0.299, 0.587, 0.114, -0.169, -0.331, 0.5, 0.5, -0.419, -0.081};
	const static float3x3 yuv2rgb = {1, -0.00093, 1.401687, 1, -0.3437, -0.71417, 1, 1.77216, 0.00099};
	float4 r = 0.0;
	float2 size = float2(GetInputSize());
	float2 f = frac(pos * size);
	float3 yuv = mul(rgb2yuv, INPUT.SampleLevel(SL, pos, 0).rgb);
	int2 i = int2(f * 2.0);
	r.r = out_0.SampleLevel(SP, (float2(0.5, 0.5) - f) * pt + pos, 0)[2*i.y + i.x];
	r.r += yuv.r;
	r.a = 1.0;
	r.r = clamp(r, 0.0, 1.0);
	float3 px = mul(yuv2rgb, float3(r.r, yuv.yz));
	return float4(px, 1.0);
}
