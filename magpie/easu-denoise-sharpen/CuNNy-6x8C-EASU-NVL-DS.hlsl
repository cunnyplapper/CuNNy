// CuNNy 6x8C EASU NVL DS
// Copyright (c) 2024 cunnyplapper

// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public
// License along with this program.  If not, see <https://www.gnu.org/licenses/>.
/* ------------------------------------------------------------------- */

//!MAGPIE EFFECT
//!VERSION 3
//!OUTPUT_WIDTH INPUT_WIDTH * 2
//!OUTPUT_HEIGHT INPUT_HEIGHT * 2

//!TEXTURE
Texture2D INPUT;

//!TEXTURE
//!WIDTH INPUT_WIDTH * 2
//!HEIGHT INPUT_HEIGHT * 2
//!FORMAT R8_UNORM
Texture2D easu;

//!SAMPLER
//!FILTER POINT
SamplerState SP;

//!SAMPLER
//!FILTER LINEAR
SamplerState SL;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t1;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t2;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t3;

// FSR mpv | modified
// Copyright (c) 2021 Advanced Micro Devices, Inc. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// FidelityFX FSR v1.0.2 by AMD
// ported to mpv by agyild

//!PASS 1
//!DESC CuNNy-EASU
//!STYLE PS
//!IN INPUT
//!OUT easu

float GetLuma(float3 rgb) {
	return dot(float3(0.299, 0.587, 0.114), rgb);
}

float APrxLoRcpF1(float a) {
	return asfloat(uint(0x7ef07ebb) - asuint(a));
}

float APrxLoRsqF1(float a) {
	return asfloat(uint(0x5f347d74) - (asuint(a) >> uint(1)));
}

float AMin3F1(float x, float y, float z) {

	return min(x, min(y, z));
}

float AMax3F1(float x, float y, float z) {
	return max(x, max(y, z));
}

void tap(inout float aC, inout float aW, float2 off, float2 dir, float2 len,
         float lob, float clp, float c){
	float2 v;
	v.x = (off.x * ( dir.x)) + (off.y * dir.y);
	v.y = (off.x * (-dir.y)) + (off.y * dir.x);
	v *= len;
	float d2 = v.x * v.x + v.y * v.y;
	d2 = min(d2, clp);
	float wB = float(2.0 / 5.0) * d2 + -1.0;

	float wA = lob * d2 + -1.0;
	wB *= wB;
	wA *= wA;
	wB = float(25.0 / 16.0) * wB + float(-(25.0 / 16.0 - 1.0));
	float w = wB * wA;
	aC += c * w;
	aW += w;
}

void set(inout float2 dir, inout float len, float2 pp, bool biS, bool biT,
         bool biU, bool biV, float lA, float lB, float lC, float lD, float lE){

	float w = 0.0;
	if (biS)
		w = (1.0 - pp.x) * (1.0 - pp.y);
	if (biT)
		w =        pp.x  * (1.0 - pp.y);
	if (biU)
		w = (1.0 - pp.x) *        pp.y;

	if (biV)
		w =        pp.x  *        pp.y;
	float dc = lD - lC;
	float cb = lC - lB;
	float lenX = max(abs(dc), abs(cb));
	lenX = APrxLoRcpF1(lenX);
	float dirX = lD - lB;
	lenX = clamp(abs(dirX) * lenX, 0.0, 1.0);
	lenX *= lenX;
	float ec = lE - lC;

	float ca = lC - lA;
	float lenY = max(abs(ec), abs(ca));
	lenY = APrxLoRcpF1(lenY);
	float dirY = lE - lA;
	lenY = clamp(abs(dirY) * lenY, 0.0, 1.0);
	lenY *= lenY;
	dir += float2(dirX, dirY) * w;
	len += dot(float2(w, w), float2(lenX, lenY));
}

float4 Pass1(float2 pos) {
	float2 pt = float2(GetInputPt());
	float2 size = float2(GetInputSize());
	float4 pix = float4(0.0, 0.0, 0.0, 1.0);
	float2 pp = pos * size - float2(0.5, 0.5);
	float2 fp = floor(pp);
	pp -= fp;
	float b = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(0.5, -0.5)) * pt), 0).rgb);
	float c = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(1.5, -0.5)) * pt), 0).rgb);
	float e = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(-0.5, 0.5)) * pt), 0).rgb);
	float f = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 0.5, 0.5)) * pt), 0).rgb);
	float g = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 1.5, 0.5)) * pt), 0).rgb);
	float h = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 2.5, 0.5)) * pt), 0).rgb);
	float i = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(-0.5, 1.5)) * pt), 0).rgb);
	float j = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 0.5, 1.5)) * pt), 0).rgb);
	float k = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 1.5, 1.5)) * pt), 0).rgb);
	float l = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 2.5, 1.5)) * pt), 0).rgb);
	float n = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(0.5, 2.5) ) * pt), 0).rgb);
	float o = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(1.5, 2.5) ) * pt), 0).rgb);
	float4 bczzL = float4(b, c, 0.0, 0.0);
	float4 ijfeL = float4(i, j, f, e);
	float4 klhgL = float4(k, l, h, g);
	float4 zzonL = float4(0.0, 0.0, o, n);
	float bL = bczzL.x;
	float cL = bczzL.y;
	float iL = ijfeL.x;
	float jL = ijfeL.y;
	float fL = ijfeL.z;
	float eL = ijfeL.w;
	float kL = klhgL.x;
	float lL = klhgL.y;
	float hL = klhgL.z;
	float gL = klhgL.w;
	float oL = zzonL.z;
	float nL = zzonL.w;
	float2 dir = float2(0.0, 0.0);
	float len = 0.0;
	set(dir, len, pp, true, false, false, false, bL, eL, fL, gL, jL);
	set(dir, len, pp, false, true, false, false, cL, fL, gL, hL, kL);
	set(dir, len, pp, false, false, true, false, fL, iL, jL, kL, nL);
	set(dir, len, pp, false, false, false, true, gL, jL, kL, lL, oL);
	float2 dir2 = dir * dir;
	float dirR = dir2.x + dir2.y;
	bool zro = dirR < float(1.0 / 32768.0);
	dirR = APrxLoRsqF1(dirR);
	dirR = zro ? 1.0 : dirR;
	dir.x = zro ? 1.0 : dir.x;
	dir *= float2(dirR, dirR);
	len = len * 0.5;
	len *= len;
	float stretch = (dir.x * dir.x + dir.y * dir.y) * APrxLoRcpF1(max(abs(dir.x), abs(dir.y)));
	float2 len2 = float2(1.0 + (stretch - 1.0) * len, 1.0 + -0.5 * len);
	float lob = 0.5 + float((1.0 / 4.0 - 0.04) - 0.5) * len;
	float clp = APrxLoRcpF1(lob);
	float aC = 0.0;
	float aW = 0.0;
	tap(aC, aW, float2( 0.0,-1.0) - pp, dir, len2, lob, clp, bL);
	tap(aC, aW, float2( 1.0,-1.0) - pp, dir, len2, lob, clp, cL);
	tap(aC, aW, float2(-1.0, 1.0) - pp, dir, len2, lob, clp, iL);
	tap(aC, aW, float2( 0.0, 1.0) - pp, dir, len2, lob, clp, jL);
	tap(aC, aW, float2( 0.0, 0.0) - pp, dir, len2, lob, clp, fL);
	tap(aC, aW, float2(-1.0, 0.0) - pp, dir, len2, lob, clp, eL);
	tap(aC, aW, float2( 1.0, 1.0) - pp, dir, len2, lob, clp, kL);
	tap(aC, aW, float2( 2.0, 1.0) - pp, dir, len2, lob, clp, lL);
	tap(aC, aW, float2( 2.0, 0.0) - pp, dir, len2, lob, clp, hL);
	tap(aC, aW, float2( 1.0, 0.0) - pp, dir, len2, lob, clp, gL);
	tap(aC, aW, float2( 1.0, 2.0) - pp, dir, len2, lob, clp, oL);
	tap(aC, aW, float2( 0.0, 2.0) - pp, dir, len2, lob, clp, nL);
	pix.r = aC / aW;
	float min1 = min(AMin3F1(fL, gL, jL), kL);
	float max1 = max(AMax3F1(fL, gL, jL), kL);
	pix.r = clamp(pix.r, min1, max1);
	pix.r = clamp(pix.r, 0.0, 1.0);
	return pix;
}

//!PASS 2
//!DESC CuNNy-6x8C-EASU-NVL-DS-in
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN INPUT
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) (dot(float3(-1.658e-01, -3.062e-01, -6.780e-02), O(INPUT, float2(x, y)).rgb) + 3.076e-01)
float4 f0(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	V4 r = 0.0;
	r += V4(-4.922e-03, 1.052e-02, -6.774e-02, 2.963e-02) * s0_0;
	r += V4(1.052e-02, -7.213e-01, 1.476e-01, 5.375e-02) * s0_1;
	r += V4(3.000e-03, -8.862e-02, -3.140e-02, 1.278e-02) * s0_2;
	r += V4(5.996e-01, 7.806e-03, -5.020e-01, 8.990e-02) * s0_3;
	r += V4(-2.473e-02, 5.790e-01, 4.619e-01, 3.185e-01) * s0_4;
	r += V4(-7.757e-03, 8.064e-02, 1.252e-02, -2.886e-02) * s0_5;
	r += V4(-6.035e-01, -2.209e-02, -4.359e-02, 8.182e-02) * s0_6;
	r += V4(3.581e-02, 1.316e-01, -1.987e-02, -6.597e-01) * s0_7;
	r += V4(-2.084e-03, 2.731e-02, 3.404e-02, 9.979e-02) * s0_8;
	r += V4(-9.936e-03, 6.729e-03, 1.248e-02, 1.921e-02);
	return r;
}
float4 f1(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	V4 r = 0.0;
	r += V4(3.333e-02, -6.737e-02, -3.154e-02, -3.434e-02) * s0_0;
	r += V4(7.394e-01, 1.255e-01, 5.366e-02, 1.470e-01) * s0_1;
	r += V4(5.042e-02, 4.098e-02, 1.756e-02, -2.094e-02) * s0_2;
	r += V4(-3.185e-02, 2.470e-02, -1.202e-01, 3.491e-01) * s0_3;
	r += V4(-7.117e-01, -5.032e-01, 5.837e-01, 8.325e-02) * s0_4;
	r += V4(-5.302e-02, 5.449e-01, -1.547e-01, -6.230e-01) * s0_5;
	r += V4(-1.096e-02, 3.112e-02, 1.597e-02, -7.763e-02) * s0_6;
	r += V4(-1.228e-02, -1.644e-01, -9.541e-02, -2.243e-02) * s0_7;
	r += V4(-1.220e-02, -2.265e-02, 1.412e-02, 1.996e-01) * s0_8;
	r += V4(8.396e-03, -1.044e-02, -1.938e-03, 2.441e-03);
	return r;
}
void Pass2(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	min16float s0_0 = l0(-1.0, -1.0);
	min16float s0_1 = l0(0.0, -1.0);
	min16float s0_2 = l0(1.0, -1.0);
	min16float s0_3 = l0(-1.0, 0.0);
	min16float s0_4 = l0(0.0, 0.0);
	min16float s0_5 = l0(1.0, 0.0);
	min16float s0_6 = l0(-1.0, 1.0);
	min16float s0_7 = l0(0.0, 1.0);
	min16float s0_8 = l0(1.0, 1.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
}
//!PASS 3
//!DESC CuNNy-6x8C-EASU-NVL-DS-conv1
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2, t3
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(1.659e-01, -2.358e-01, -3.780e-02, -7.652e-02, -3.143e-01, -8.988e-02, -4.641e-03, 2.978e-01, -1.563e-01, -9.529e-02, -4.295e-02, -1.288e-01, -1.914e-01, 1.851e-01, -2.665e-02, -1.407e-01));
	r += mul(s0_1, M4(1.354e-01, -3.973e-01, 4.961e-03, 2.810e-01, -3.258e-01, -3.819e-01, -1.678e-01, -3.658e-01, 2.839e-02, 1.995e-01, 1.195e-01, -4.202e-01, 9.173e-02, -5.429e-01, -2.371e-01, 1.528e-01));
	r += mul(s0_2, M4(-4.759e-01, -7.706e-03, 1.979e-01, -4.733e-02, 8.845e-02, -1.905e-01, 4.438e-02, 2.088e-01, -1.265e-01, 8.602e-02, -1.523e-02, 4.700e-01, -1.470e-01, 1.510e-01, -7.779e-02, -1.378e-02));
	r += mul(s0_3, M4(2.664e-01, 1.671e-01, 4.857e-02, -1.343e-01, -8.827e-02, -2.558e-01, -8.974e-02, -9.544e-02, 4.997e-02, -1.554e-02, -8.962e-02, 1.763e-01, -9.055e-02, 2.033e-02, -8.875e-02, 5.776e-02));
	r += mul(s0_4, M4(-2.374e-01, -2.340e-01, 4.806e-01, -2.892e-01, -1.812e-02, -1.198e-01, -2.929e-01, 2.497e-01, 1.974e-01, 5.258e-01, 8.008e-02, 3.069e-01, 3.504e-01, 8.484e-01, 7.570e-01, 1.720e-01));
	r += mul(s0_5, M4(-6.780e-01, -3.684e-02, -1.316e+00, 5.365e-01, -1.263e-01, -8.177e-02, 1.658e-01, -1.615e-01, -2.915e-01, -1.005e-01, 1.351e-02, -5.837e-01, 4.073e-01, -8.421e-02, 9.480e-03, -1.196e-03));
	r += mul(s0_6, M4(3.230e-02, 2.923e-02, 8.665e-03, -2.566e-01, -2.470e-01, -2.310e-01, 2.529e-01, 4.825e-02, 1.171e-01, 2.134e-01, 8.163e-02, -1.352e-01, 9.898e-02, 8.636e-02, 6.235e-02, 1.292e-01));
	r += mul(s0_7, M4(-1.541e-01, 1.229e-01, -3.154e-04, -2.321e-01, -4.664e-01, -4.027e-01, -1.253e+00, 1.475e-01, -8.867e-03, -4.301e-01, -1.013e-01, 1.461e-01, -1.213e-01, 9.058e-03, -1.306e-01, -8.846e-02));
	r += mul(s0_8, M4(9.596e-02, -5.983e-01, -7.762e-02, 3.689e-01, -1.190e-01, -5.708e-01, 2.971e-01, -2.790e-01, 3.933e-02, 3.244e-02, 5.774e-04, -2.283e-01, 8.714e-02, -2.592e-03, -7.634e-02, 5.964e-02));
	r += mul(s1_0, M4(-2.317e-02, -1.172e-01, -4.238e-02, 4.318e-02, -3.193e-01, -8.748e-02, -1.499e-01, -3.377e-01, -1.686e-01, -3.098e-01, -9.157e-03, -1.264e-01, -2.767e-01, -4.703e-02, -7.449e-04, 5.587e-01));
	r += mul(s1_1, M4(9.533e-02, 1.519e-01, 3.715e-02, 3.036e-02, -3.721e-02, -3.068e-01, -9.255e-02, -1.359e-01, -1.182e-01, -8.324e-02, 1.080e-01, 7.924e-02, -5.988e-01, 8.772e-02, 4.235e-02, -6.799e-02));
	r += mul(s1_2, M4(2.411e-01, 1.206e-01, -1.814e-01, 2.390e-01, -9.828e-02, -4.860e-03, -9.816e-02, -2.289e-01, -3.916e-01, -1.014e-01, 9.519e-02, -2.650e-01, 2.053e-01, -1.903e-02, -2.820e-02, 1.752e-01));
	r += mul(s1_3, M4(2.998e-02, 2.658e-01, -4.961e-02, -1.304e-01, -1.181e-01, -1.825e-01, -1.284e-01, 2.057e-01, 4.441e-03, -7.703e-02, -9.400e-02, 9.378e-02, -1.736e-01, 1.735e-01, -6.407e-02, 1.137e-01));
	r += mul(s1_4, M4(7.501e-02, 1.284e-01, 2.365e-02, -1.811e-01, 2.014e-01, 2.369e-01, 1.915e-01, 7.244e-02, 8.332e-02, -2.037e-01, 9.072e-02, 2.779e-01, 2.669e-01, -1.615e-01, 1.014e-01, 3.437e-01));
	r += mul(s1_5, M4(5.355e-01, 1.526e-01, 7.188e-01, 3.912e-01, -5.843e-02, -5.142e-03, -2.467e-02, -3.184e-01, 2.481e-01, 2.085e-02, -3.377e-01, 5.232e-01, 2.288e-01, 1.716e-01, -6.307e-02, -8.520e-01));
	r += mul(s1_6, M4(-1.113e-02, 1.012e-01, 9.729e-04, -2.898e-02, -2.114e-01, 9.979e-02, -1.634e-03, 6.225e-02, 1.181e-02, 2.677e-01, 7.446e-02, 6.837e-02, -1.450e-01, 8.165e-02, 9.923e-02, 2.232e-01));
	r += mul(s1_7, M4(9.303e-02, 1.078e-02, -3.433e-02, -6.139e-02, 4.014e-01, -5.266e-01, -2.657e-01, 2.122e-01, 5.688e-02, 1.664e-01, -7.297e-02, -3.893e-01, 2.306e-01, -2.052e-01, 8.129e-02, 5.493e-01));
	r += mul(s1_8, M4(-3.104e-01, -8.460e-02, -3.045e-01, -2.313e-02, 2.479e-02, -2.783e-01, -3.491e-01, 1.028e-01, -1.664e-01, -6.006e-02, 2.194e-01, 7.573e-02, -7.025e-02, 1.076e-01, 4.421e-02, -6.150e-02));
	r += mul(s2_0, M4(-2.691e-01, -4.306e-02, -8.187e-02, -4.794e-02, 2.038e-01, -3.834e-01, -1.733e-01, 3.574e-01, 1.304e-01, -2.969e-02, 9.806e-02, -2.407e-01, -4.914e-02, -1.028e-01, 3.667e-02, -1.647e-01));
	r += mul(s2_1, M4(-6.138e-02, 1.067e-01, -1.033e-01, 1.489e-01, 4.872e-01, -3.586e-01, -8.134e-02, 2.854e-01, -3.302e-03, -1.026e-01, 1.853e-01, -1.598e-02, 3.438e-02, 1.559e-01, 4.861e-02, -1.192e-02));
	r += mul(s2_2, M4(-7.551e-02, -3.449e-02, -7.563e-02, -1.294e-01, 2.827e-01, -1.340e-01, -9.065e-03, 7.899e-02, -1.063e-01, 3.467e-01, 2.281e-01, 1.991e-01, 1.983e-01, -6.808e-02, -3.313e-02, 4.753e-01));
	r += mul(s2_3, M4(-7.699e-02, 1.909e-01, -3.722e-02, 2.268e-01, 3.074e-01, -2.189e-01, -1.478e-02, -4.503e-01, -7.222e-02, -1.805e-01, -1.087e-01, 6.229e-02, -2.374e-01, -7.456e-02, -1.949e-01, -3.290e-01));
	r += mul(s2_4, M4(-2.579e-02, 1.167e-01, -1.772e-01, 1.514e-01, 4.831e-01, 2.036e-01, -1.514e-01, 4.212e-01, 3.729e-01, 4.517e-01, 3.764e-01, 1.378e-01, -4.026e-01, -1.365e-01, 2.087e-02, -3.255e-01));
	r += mul(s2_5, M4(1.325e-01, 2.296e-02, -5.772e-02, -1.180e-01, 1.924e-01, 2.782e-01, 1.472e-01, 4.709e-02, -2.545e-01, -3.087e-01, -1.392e-01, -2.992e-01, 8.469e-02, -2.184e-02, 1.406e-01, -1.317e-01));
	r += mul(s2_6, M4(1.221e-01, 3.101e-01, -1.394e-01, 6.989e-02, 2.038e-01, 1.734e-01, -4.303e-02, 7.852e-02, 3.118e-02, 9.755e-02, -1.037e-01, -2.228e-01, 3.061e-01, -8.044e-02, 1.074e-01, 2.234e-01));
	r += mul(s2_7, M4(1.682e-01, 5.377e-01, 1.358e+00, -6.739e-02, 5.607e-01, 6.034e-02, 4.123e-01, -1.830e-02, -4.976e-02, -3.693e-01, -3.152e-01, 1.511e-02, -6.034e-01, 9.986e-02, 2.101e-02, -1.058e-01));
	r += mul(s2_8, M4(9.976e-02, 3.053e-01, -1.100e-01, -2.877e-01, -1.678e-01, -3.115e-01, -8.096e-02, 1.105e-02, 2.070e-02, 1.476e-01, -1.962e-01, 3.444e-01, -6.795e-02, -7.947e-02, -7.878e-02, 2.791e-01));
	r += mul(s3_0, M4(-3.314e-01, -1.237e-02, 5.786e-02, 2.575e-01, 1.530e-03, -2.619e-03, -1.646e-01, -4.508e-01, 2.167e-01, 2.653e-03, 1.271e-01, -2.784e-01, -9.563e-02, -3.930e-02, -2.851e-02, -3.383e-01));
	r += mul(s3_1, M4(-3.250e-01, 9.073e-03, -1.795e-01, -4.967e-01, 1.030e-01, -1.544e-02, -1.019e-01, -1.965e-02, 2.470e-01, -3.659e-02, 2.685e-01, -5.741e-01, 3.005e-02, 2.482e-01, 1.538e-02, -6.991e-02));
	r += mul(s3_2, M4(-6.200e-02, -1.734e-01, 4.057e-02, 1.237e-01, -8.793e-02, -5.050e-02, -5.396e-03, 1.798e-01, -2.030e-01, 1.757e-01, 2.292e-01, 1.659e-01, 1.989e-01, -1.265e-01, -6.796e-02, -2.693e-02));
	r += mul(s3_3, M4(8.517e-02, -2.042e-01, -2.227e-03, 3.657e-02, 6.312e-03, 2.703e-01, -5.134e-02, 5.590e-01, 5.821e-02, -1.663e-01, -2.447e-02, -7.770e-02, 1.894e-01, -5.527e-02, -1.919e-01, -1.661e-01));
	r += mul(s3_4, M4(-4.700e-01, -7.443e-01, -4.971e-01, -5.316e-02, -3.895e-01, -2.822e-01, 5.111e-02, -5.690e-01, 5.120e-01, 7.270e-01, 6.362e-01, 6.270e-01, 3.530e-01, 1.409e-01, -8.064e-03, 4.847e-01));
	r += mul(s3_5, M4(-5.835e-02, -8.090e-02, 1.017e-01, -1.045e-01, 5.714e-02, 3.757e-01, 1.106e-01, 3.907e-01, 1.118e-01, -1.711e-01, -6.157e-02, -1.379e-01, 3.125e-01, -2.222e-01, 1.390e-01, -3.008e-01));
	r += mul(s3_6, M4(-5.196e-02, -3.274e-01, 3.553e-01, 4.524e-01, -4.399e-01, -1.536e-02, 1.132e-01, 1.524e-01, 5.517e-02, 8.227e-02, -1.831e-01, 8.539e-02, 2.824e-01, -1.274e-01, 6.290e-02, 2.269e-01));
	r += mul(s3_7, M4(2.097e-01, -2.265e-01, -7.803e-01, -3.357e-01, 6.357e-02, 5.866e-01, 2.744e-01, -1.253e-02, -9.600e-01, -4.713e-01, -7.348e-01, 8.093e-03, 4.324e-01, -4.145e-02, 1.801e-01, -3.542e-02));
	r += mul(s3_8, M4(-4.293e-02, -5.115e-01, 5.353e-01, -1.067e-01, -7.652e-02, -4.033e-01, -1.186e-01, -5.648e-01, -3.511e-02, -3.382e-02, -2.085e-01, 2.113e-01, 1.591e-02, -9.952e-02, -5.231e-03, -4.245e-01));
	r += V4(8.436e-03, -2.502e-03, 3.428e-04, 4.075e-03);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(3.944e-02, -5.519e-02, -5.488e-01, 6.592e-02, -9.325e-02, 8.212e-02, 1.318e-01, 4.419e-01, -9.027e-02, 9.444e-03, -4.756e-02, 5.764e-03, -1.789e-01, -1.411e-01, 2.915e-01, 1.723e-01));
	r += mul(s0_1, M4(1.344e-01, 1.656e-02, -7.457e-01, 7.870e-01, -7.922e-02, -1.613e-01, -4.582e-02, -3.362e-01, -1.086e-01, -3.196e-02, -1.901e-01, 1.299e-01, 2.766e-01, -2.860e-02, -6.939e-02, 4.235e-02));
	r += mul(s0_2, M4(1.071e-01, 5.736e-02, 5.940e-01, -2.956e-01, 2.409e-01, 6.534e-02, -2.849e-02, -4.826e-02, 1.289e-01, 2.543e-01, 5.583e-02, -2.391e-01, 2.011e-01, 6.776e-02, 8.378e-02, 4.378e-01));
	r += mul(s0_3, M4(5.997e-02, -9.539e-02, -6.770e-02, 1.076e-01, 1.041e-02, -1.641e-01, 2.757e-01, -1.427e-01, -2.238e-03, 1.041e-01, 8.642e-02, 2.917e-02, -2.096e-01, -2.603e-01, -2.403e-01, -1.112e-01));
	r += mul(s0_4, M4(-4.579e-01, 8.743e-02, -1.465e-01, 7.448e-02, -1.516e-01, -1.868e-01, 5.360e-02, -1.929e-01, 7.167e-02, -2.823e-01, 3.875e-01, -1.699e-01, -1.409e-01, -1.117e-01, -7.023e-02, -1.289e-01));
	r += mul(s0_5, M4(3.014e-01, 8.326e-02, 4.255e-01, -8.256e-03, 7.473e-03, 4.038e-01, 6.760e-02, 2.517e-01, -2.565e-01, 1.064e+00, 1.833e-01, -3.959e-01, 1.366e-01, 1.484e-01, 7.586e-02, -2.442e-01));
	r += mul(s0_6, M4(-2.385e-02, -2.943e-02, 1.003e-02, 1.827e-02, 8.950e-02, -1.241e-01, -3.544e-01, 6.537e-02, -1.124e-01, 3.971e-02, 1.975e-02, 8.965e-02, 4.009e-02, -7.027e-02, -1.218e-02, -1.139e-01));
	r += mul(s0_7, M4(-2.845e-02, 5.345e-02, -2.706e-03, 8.851e-02, 1.715e-01, -1.555e-01, 4.970e-01, -2.110e-02, -2.087e-01, -2.034e-01, 4.403e-03, 1.500e-01, 1.462e-01, 9.585e-03, -3.408e-01, 4.535e-02));
	r += mul(s0_8, M4(-1.204e-01, -2.463e-02, 2.105e-01, 3.273e-02, 7.124e-02, -8.325e-02, 3.272e-01, -3.456e-02, 1.102e-01, 2.042e-01, 3.897e-01, 1.043e-01, 5.759e-02, 3.549e-02, 1.819e-01, 9.447e-03));
	r += mul(s1_0, M4(2.085e-01, 2.194e-04, -4.978e-02, 2.377e-02, -4.252e-01, 6.379e-03, 2.113e-02, 1.052e-01, -9.680e-02, 7.882e-02, -1.468e-01, 1.251e-02, 3.389e-01, 1.895e-02, 6.758e-02, 5.061e-01));
	r += mul(s1_1, M4(2.694e-01, 1.559e-01, 3.981e-01, -2.021e-01, -3.548e-02, 3.249e-02, 1.644e-01, -1.258e-01, 3.108e-01, -2.224e-02, 1.158e-01, 1.238e-01, 8.461e-02, -3.046e-01, -3.777e-01, 4.606e-01));
	r += mul(s1_2, M4(1.800e-01, 9.113e-02, -2.830e-01, 2.122e-01, 1.220e-01, -5.380e-02, 1.519e-01, -9.157e-02, 6.278e-02, 1.501e-01, 5.512e-02, -2.325e-01, 2.876e-01, 2.690e-02, 1.889e-01, 1.020e-01));
	r += mul(s1_3, M4(-5.312e-02, -7.159e-02, 8.694e-02, -3.154e-02, -3.501e-01, -1.262e-01, -5.059e-01, 4.004e-01, -2.491e-01, -1.128e-02, 9.888e-02, -9.383e-02, 1.129e-02, -2.542e-01, 3.267e-01, -1.844e-01));
	r += mul(s1_4, M4(-2.318e-01, 1.065e-01, -4.227e-02, 3.884e-02, 1.209e-01, -1.036e-01, -2.240e-04, -5.457e-02, 8.080e-02, -2.077e-01, -3.949e-01, 1.667e-01, -8.379e-01, -2.840e-02, -2.836e-01, 1.274e-01));
	r += mul(s1_5, M4(-7.123e-02, -2.418e-01, -1.859e-01, 1.470e-01, 2.439e-01, 2.224e-01, -1.779e-02, -1.690e-01, -6.424e-03, 5.019e-02, 8.412e-02, 1.171e-02, -2.908e-01, 2.830e-01, 2.847e-01, -1.003e-01));
	r += mul(s1_6, M4(3.697e-03, -2.320e-02, 4.049e-02, -4.845e-02, -2.372e-01, -2.484e-01, -4.975e-02, 1.575e-01, -7.079e-02, 8.843e-02, -7.379e-02, 1.014e-02, -2.728e-01, -1.432e-01, 2.075e-01, 1.309e-01));
	r += mul(s1_7, M4(2.377e-01, 1.189e-01, -1.706e-01, -2.244e-01, 1.921e-01, 3.393e-02, 2.231e-02, 8.001e-02, 3.134e-01, -7.441e-02, -4.131e-01, -3.493e-01, -4.899e-01, 8.107e-02, 1.204e-01, 8.442e-02));
	r += mul(s1_8, M4(2.085e-01, -1.191e-01, -9.938e-02, -1.585e-02, 4.517e-02, 1.460e-01, 2.013e-01, -4.357e-03, 9.339e-02, 3.425e-01, 1.728e-02, -1.170e-01, -1.310e-01, 2.287e-03, -4.441e-02, -1.136e-01));
	r += mul(s2_0, M4(-1.228e-01, 2.906e-02, 6.305e-02, -3.426e-01, 3.643e-01, 9.402e-02, 6.057e-02, -3.174e-01, 2.647e-02, -3.208e-01, -1.202e-01, -1.003e-02, -2.535e-01, 4.654e-02, 1.022e-01, -1.901e-01));
	r += mul(s2_1, M4(-1.752e-01, 6.230e-02, -1.922e-02, -5.320e-02, 3.110e-02, 1.088e-02, 2.798e-01, 1.044e-01, 1.514e-01, 1.315e-01, -9.052e-02, 2.227e-01, -1.868e-02, 1.488e-02, 4.108e-01, -3.097e-02));
	r += mul(s2_2, M4(1.850e-02, -9.065e-02, 1.639e-01, 1.494e-01, 1.762e-01, -4.763e-02, 6.613e-02, -9.774e-02, -6.891e-02, 2.814e-01, -2.251e-02, -7.945e-03, 7.146e-02, -2.758e-01, 2.617e-02, 3.309e-01));
	r += mul(s2_3, M4(2.353e-01, 1.456e-01, 3.030e-01, -2.319e-01, 7.607e-02, 1.291e-03, 7.144e-01, 2.701e-01, -7.699e-02, -2.614e-01, -3.399e-01, 2.189e-01, -2.079e-01, 1.846e-01, -6.245e-01, -1.171e-01));
	r += mul(s2_4, M4(-8.068e-02, 2.231e-01, -2.934e-01, 3.889e-01, -3.702e-01, -1.597e-01, -4.367e-01, 2.860e-01, 8.075e-02, -3.421e-01, -1.266e-01, -6.946e-02, -8.066e-02, -6.048e-01, -1.521e-01, 3.549e-01));
	r += mul(s2_5, M4(8.954e-02, -3.794e-01, -1.343e-01, 6.146e-02, -1.778e-01, -3.144e-01, -5.022e-02, 4.355e-02, 8.404e-02, 5.801e-01, 3.211e-01, -1.237e-01, 2.841e-02, -3.015e-01, -2.911e-02, 5.329e-01));
	r += mul(s2_6, M4(-1.693e-01, 1.338e-02, 2.010e-01, 2.638e-02, 2.317e-01, 5.280e-02, 4.728e-01, -2.250e-01, -8.410e-02, -2.872e-01, -4.138e-02, -7.908e-02, 3.142e-01, 4.098e-02, -3.432e-01, -1.205e-01));
	r += mul(s2_7, M4(-1.758e-01, 9.690e-02, -5.353e-01, 5.272e-02, 1.715e-02, -1.732e-01, -3.475e-01, -9.232e-02, -5.600e-02, 1.627e-02, 1.421e-01, -9.195e-02, -1.053e-02, 2.324e-01, 1.695e-01, -2.278e-02));
	r += mul(s2_8, M4(-3.161e-02, 6.383e-03, 1.341e-01, 1.580e-01, -1.940e-01, -1.015e-02, 6.779e-02, 1.045e-01, -2.487e-01, 2.476e-01, 2.988e-01, -1.041e-01, -4.873e-02, -2.849e-02, -8.922e-02, -1.604e-01));
	r += mul(s3_0, M4(5.323e-02, 1.116e-01, 6.872e-02, 1.339e-01, -9.554e-02, -3.974e-02, 9.942e-02, -1.863e-02, 1.839e-01, -3.566e-01, -2.311e-01, -4.939e-02, -3.176e-01, 3.410e-02, -2.055e-01, -8.252e-02));
	r += mul(s3_1, M4(-6.984e-02, -1.480e-01, -8.797e-02, -5.363e-02, 1.911e-01, -3.519e-02, -1.740e-02, -1.321e-01, -1.033e-01, 8.576e-02, -1.321e-01, 5.938e-01, -1.273e-01, 5.688e-02, 1.160e-01, -2.169e-01));
	r += mul(s3_2, M4(5.738e-02, 3.410e-02, 5.464e-02, -1.011e-02, 3.982e-02, -9.199e-02, -7.438e-02, 4.342e-02, 1.412e-01, 4.014e-01, 1.203e-01, -7.105e-02, 6.757e-02, -2.295e-01, 1.353e-01, 3.049e-01));
	r += mul(s3_3, M4(-1.904e-01, -6.841e-03, 4.122e-01, -1.134e-01, 9.265e-02, -8.269e-02, 2.609e-01, -1.247e-01, 1.418e-02, -2.743e-01, -3.696e-01, 2.696e-01, 3.285e-02, 1.695e-01, -5.473e-01, 7.353e-02));
	r += mul(s3_4, M4(3.150e-01, 1.116e-01, 3.671e-02, -8.855e-02, 1.694e-01, 6.539e-01, 5.234e-02, -2.134e-01, -1.790e-01, -6.989e-01, 6.976e-02, 1.855e-01, -9.043e-01, -4.713e-02, -9.361e-02, 2.535e-01));
	r += mul(s3_5, M4(-2.195e-01, -8.374e-02, 4.032e-02, -1.616e-01, 3.211e-02, -2.527e-01, 2.520e-01, 1.221e-01, 2.246e-01, 7.977e-01, 1.626e-01, -4.375e-01, -1.653e-01, -4.346e-01, -2.499e-01, 2.100e-02));
	r += mul(s3_6, M4(-2.199e-01, 1.433e-01, -3.385e-02, 1.386e-01, 1.179e-01, 1.695e-02, -9.990e-04, 1.681e-01, 1.087e-02, -2.603e-01, 6.965e-02, -1.783e-01, -3.446e-01, 2.435e-02, -8.856e-02, 3.559e-02));
	r += mul(s3_7, M4(2.386e-01, -2.325e-01, 2.679e-02, -2.768e-01, 5.945e-03, -1.143e-01, -1.349e-01, 1.512e-01, -1.565e-01, -9.281e-02, -3.542e-02, -9.883e-02, -1.819e-01, 7.666e-02, -1.541e-01, -2.597e-01));
	r += mul(s3_8, M4(2.629e-01, -1.985e-01, -1.307e-01, 2.328e-02, -1.248e-01, -4.915e-03, 9.938e-02, 3.330e-01, -1.362e-01, 4.363e-01, 3.769e-01, -2.658e-01, -9.613e-02, 2.972e-04, 4.930e-02, -1.851e-02));
	r += V4(1.996e-02, -3.563e-03, -4.321e-03, 4.517e-03);
	return r;
}
void Pass3(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t3[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 4
//!DESC CuNNy-6x8C-EASU-NVL-DS-conv2
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t2, t3
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t2, float2(x, y))
#define l1(x, y) O(t3, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(1.656e-01, -1.645e-01, 4.506e-02, -6.613e-02, 1.200e-02, 6.178e-02, -7.649e-02, 1.177e-01, -2.550e-01, -2.999e-01, 1.864e-01, -1.522e-01, 9.605e-02, -6.162e-03, -1.782e-01, -2.071e-02));
	r += mul(s0_1, M4(1.811e-01, 1.109e-01, -1.968e-01, 1.888e-01, -7.475e-02, -1.650e-01, 1.641e-01, 2.137e-01, 5.517e-01, 2.998e-01, 2.357e-02, 6.733e-01, 7.043e-02, 2.673e-02, -5.107e-02, -8.358e-03));
	r += mul(s0_2, M4(-2.469e-01, 6.749e-02, 1.654e-01, -1.370e-01, -8.877e-02, 8.950e-02, 1.246e-01, 8.136e-03, 6.276e-02, -1.946e-02, -1.824e-01, -3.777e-01, 2.750e-02, -6.373e-02, -6.864e-02, 1.050e-01));
	r += mul(s0_3, M4(-2.468e-01, -2.316e-02, 1.421e-01, 1.952e-01, -8.468e-02, -1.565e-01, -5.305e-02, 2.442e-01, -6.013e-02, -1.779e-02, 1.929e-01, 3.486e-02, 1.409e-02, -1.500e-01, -3.688e-02, 1.263e-02));
	r += mul(s0_4, M4(2.123e-01, -1.231e-01, -5.977e-02, -7.814e-02, 5.313e-03, 2.181e-01, -1.957e-01, -6.304e-02, -3.764e-02, 1.254e-01, 3.897e-01, -2.585e-02, 3.712e-04, 1.164e-01, -1.242e-01, -2.569e-02));
	r += mul(s0_5, M4(-9.505e-02, 2.260e-02, 8.147e-02, 1.461e-01, -2.886e-02, -4.816e-02, -2.305e-02, 1.331e-01, 1.603e-01, 1.328e-02, 7.316e-02, 6.979e-02, 3.596e-02, 5.313e-02, -1.811e-02, 1.371e-01));
	r += mul(s0_6, M4(1.504e-01, 2.468e-02, -1.680e-02, 2.492e-02, 6.647e-02, -8.027e-02, -3.422e-02, 1.146e-01, -1.380e-01, 2.633e-02, -2.989e-02, -1.574e-01, -6.653e-02, -3.074e-02, -6.411e-02, -7.395e-03));
	r += mul(s0_7, M4(-1.047e-02, 7.800e-02, -1.088e-01, 7.307e-02, 1.197e-01, 4.791e-02, 1.557e-02, -1.002e-01, -1.552e-01, -2.967e-02, -6.480e-02, 1.421e-01, -8.897e-02, -2.367e-02, 3.590e-02, -2.230e-01));
	r += mul(s0_8, M4(-3.176e-02, -2.754e-02, 1.439e-01, 1.210e-01, -5.258e-02, -4.675e-02, 1.056e-01, 2.351e-02, -6.902e-02, 3.608e-02, -8.492e-02, 3.406e-03, 7.253e-02, -1.503e-02, -7.433e-02, -7.477e-02));
	r += mul(s1_0, M4(4.917e-01, -8.664e-02, 2.686e-01, -4.644e-01, 9.937e-03, 3.797e-02, -2.030e-01, 3.383e-03, -9.768e-02, -2.237e-02, -6.234e-02, 2.261e-01, -6.767e-02, -1.696e-02, -9.183e-02, 5.046e-02));
	r += mul(s1_1, M4(-2.372e-01, 1.532e-01, 9.094e-02, -5.449e-01, 1.865e-01, -8.562e-02, 1.188e-01, 1.397e-02, 9.061e-02, -2.232e-01, -1.452e-01, 6.493e-01, -2.730e-01, -8.957e-02, -1.299e-01, 8.459e-02));
	r += mul(s1_2, M4(-9.583e-02, 9.465e-02, 1.528e-01, -1.898e-01, -1.070e-01, 6.413e-02, 3.266e-03, -2.806e-01, -1.057e-01, -7.600e-02, -8.611e-02, -7.743e-03, 7.272e-02, -1.452e-01, -1.179e-01, 2.603e-01));
	r += mul(s1_3, M4(4.229e-02, 2.257e-02, 1.480e-01, -1.916e-02, -1.860e-01, -2.147e-01, 3.358e-02, 6.156e-02, 2.269e-01, 4.683e-02, -2.196e-02, 1.274e-01, -4.973e-02, -1.279e-01, 2.485e-01, 8.278e-02));
	r += mul(s1_4, M4(2.389e-01, 2.211e-01, 1.402e-01, 5.368e-03, 1.124e-02, 2.747e-01, -1.157e-01, -2.707e-01, 3.891e-01, -1.939e-01, -3.525e-01, -9.742e-02, -2.329e-01, 1.018e-01, 1.933e-02, 4.645e-02));
	r += mul(s1_5, M4(2.372e-01, -9.493e-02, 8.424e-02, 7.180e-02, 1.036e-01, -1.604e-02, -4.996e-02, -5.990e-04, -4.425e-01, 1.112e-01, 2.230e-01, -8.722e-02, 7.626e-02, -1.803e-02, 8.839e-02, 2.042e-01));
	r += mul(s1_6, M4(1.108e-01, -1.018e-01, 3.588e-03, -2.153e-01, -4.510e-02, -9.058e-02, 6.242e-03, 5.428e-03, -7.274e-02, 1.521e-01, 1.833e-02, 1.196e-01, 7.118e-02, 3.861e-02, 2.013e-01, 1.557e-01));
	r += mul(s1_7, M4(-6.954e-02, 1.146e-01, 6.719e-02, 8.579e-02, -9.157e-02, 9.131e-02, 1.124e-01, -6.647e-02, 2.997e-01, -4.505e-02, -1.724e-01, 1.507e-02, -2.221e-01, 4.727e-03, 1.170e-01, 1.096e-01));
	r += mul(s1_8, M4(1.909e-01, -3.910e-02, 8.743e-02, 3.671e-02, -1.011e-01, -6.674e-02, -3.851e-02, -7.624e-02, -1.411e-01, 6.670e-02, -7.368e-02, -8.080e-02, -5.523e-02, 3.061e-02, 1.047e-01, -6.947e-02));
	r += mul(s2_0, M4(2.207e-02, 1.501e-02, 5.662e-03, -5.126e-02, 3.250e-01, -1.249e-01, -1.570e-01, -7.289e-02, -7.830e-02, -7.669e-02, -4.835e-02, 3.821e-02, 7.854e-02, 6.558e-02, -2.012e-01, -4.930e-02));
	r += mul(s2_1, M4(-2.208e-01, -8.203e-02, 3.726e-01, -2.001e-01, -4.165e-03, -1.096e-01, -6.827e-02, -3.368e-01, -1.341e-01, 7.785e-02, 1.291e-01, -9.240e-02, 8.330e-02, 1.288e-02, -5.460e-02, -1.091e-01));
	r += mul(s2_2, M4(-1.793e-01, 1.151e-02, 1.249e-01, -2.280e-02, -7.327e-02, -2.572e-02, -2.627e-02, -5.304e-03, 3.865e-02, 1.006e-02, -8.746e-02, 2.341e-02, -1.619e-02, -1.261e-02, -2.507e-02, -1.209e-01));
	r += mul(s2_3, M4(7.043e-02, 5.058e-02, 5.553e-02, 3.059e-02, 4.098e-02, 9.368e-01, 7.949e-01, -4.087e-01, 5.023e-02, 5.648e-02, 5.798e-02, -4.407e-03, -1.145e-01, -7.220e-02, -1.003e-01, -9.777e-02));
	r += mul(s2_4, M4(-5.369e-02, 2.445e-01, 8.424e-02, 5.239e-01, 4.258e-01, 9.192e-03, 7.180e-01, 2.432e-01, 1.899e-01, 2.204e-01, -1.310e-01, 1.023e-01, 6.806e-02, -9.973e-02, 1.214e-01, 3.345e-01));
	r += mul(s2_5, M4(2.560e-01, -1.845e-01, -3.120e-01, 1.383e-01, 3.032e-02, -5.406e-02, 9.464e-02, -1.996e-03, -1.034e-01, 5.489e-02, 2.180e-01, 3.037e-01, 6.273e-02, 4.228e-03, -7.963e-02, 1.493e-01));
	r += mul(s2_6, M4(-4.453e-02, -6.979e-02, -1.403e-01, -2.904e-02, 8.095e-02, 4.816e-02, 2.202e-01, -7.063e-02, -7.683e-02, 3.519e-02, -9.498e-03, 7.831e-02, -1.037e-01, -1.079e-01, -2.655e-01, 1.635e-01));
	r += mul(s2_7, M4(8.594e-02, 6.037e-02, 9.581e-03, -1.907e-01, -1.214e-01, -2.696e-02, 2.980e-01, -3.453e-02, -1.018e-01, 7.060e-02, -1.314e-01, 8.053e-02, -2.656e-01, 5.016e-02, -1.843e-01, -3.025e-02));
	r += mul(s2_8, M4(2.930e-02, 3.281e-02, -6.154e-02, 5.361e-02, -2.344e-02, -2.973e-02, 1.777e-03, -2.031e-01, 4.210e-03, -5.440e-02, 3.187e-02, -1.605e-01, 1.908e-02, -3.953e-02, -1.948e-01, -9.201e-03));
	r += mul(s3_0, M4(5.336e-03, 1.274e-01, 2.800e-01, -2.451e-01, -1.177e-01, -7.641e-02, -1.677e-01, 2.465e-01, -1.758e-01, -4.611e-02, 1.077e-01, 2.503e-02, 1.660e-01, -1.773e-02, 2.687e-02, 4.210e-02));
	r += mul(s3_1, M4(-1.939e-01, -4.827e-02, 1.615e-01, -4.510e-01, 5.462e-02, -6.309e-02, 7.564e-02, -1.046e-01, 8.413e-02, -3.718e-01, 5.610e-01, -5.807e-02, 1.110e-01, -3.572e-02, -1.427e-01, 8.050e-02));
	r += mul(s3_2, M4(1.654e-01, 1.200e-01, -8.865e-03, 4.535e-02, 3.025e-03, 3.334e-02, -8.370e-02, 2.124e-01, 3.834e-02, -1.551e-02, 2.056e-01, 1.080e-02, -8.914e-02, -7.488e-02, 1.662e-02, 1.483e-02));
	r += mul(s3_3, M4(-1.135e-01, -1.811e-01, -4.660e-02, 3.088e-02, 4.673e-01, 7.527e-01, -8.862e-01, -1.864e-01, 2.387e-01, -4.849e-02, 3.618e-01, -1.122e-01, 4.227e-02, 4.606e-03, 4.095e-01, -1.820e-01));
	r += mul(s3_4, M4(3.720e-01, 5.565e-01, 1.654e-01, 4.220e-01, -7.953e-02, -7.072e-02, -3.176e-01, 2.713e-01, 1.395e-01, 6.221e-01, 1.055e-01, -9.032e-02, 2.122e-01, -2.576e-02, 1.390e-01, 2.621e-01));
	r += mul(s3_5, M4(5.006e-01, 4.561e-02, -1.166e-01, 3.994e-01, -8.679e-02, -1.164e-01, 7.369e-02, 9.747e-03, -2.082e-01, 1.539e-01, -2.621e-02, 3.685e-01, 1.458e-01, -4.364e-02, 8.963e-02, 2.378e-01));
	r += mul(s3_6, M4(-9.129e-02, 3.959e-02, -2.181e-02, -5.788e-02, 8.088e-02, 8.929e-03, -8.288e-02, 7.223e-02, -1.246e-01, -1.066e-01, 2.803e-02, -6.157e-02, 2.493e-01, -1.037e-01, 1.479e-01, 5.157e-02));
	r += mul(s3_7, M4(-8.101e-02, -3.803e-02, -1.276e-01, -4.326e-01, -5.837e-02, -1.252e-01, 1.438e-01, 2.245e-01, 2.227e-01, -8.159e-02, -5.500e-02, -1.057e-01, -3.280e-02, -1.342e-01, 2.655e-01, 1.523e-01));
	r += mul(s3_8, M4(1.945e-01, 5.623e-02, -2.188e-01, -1.419e-01, -4.235e-02, 4.257e-02, -8.303e-02, -1.665e-01, 1.499e-01, -8.987e-02, 7.441e-03, -1.123e-01, 1.617e-01, -1.090e-01, 7.573e-02, 2.738e-01));
	r += V4(-5.040e-03, -1.497e-03, -1.254e-02, -2.213e-03);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-2.098e-01, -4.578e-02, -2.164e-02, 4.256e-02, -1.111e-01, 2.190e-01, 1.047e-01, -8.872e-02, -1.067e-01, -3.472e-01, -3.251e-01, 1.197e-01, 4.147e-02, -9.922e-02, 9.721e-02, -2.726e-02));
	r += mul(s0_1, M4(2.815e-01, 3.900e-01, 4.945e-01, 1.669e-01, 2.786e-01, 3.449e-01, -1.303e-01, 9.612e-02, 3.652e-01, -3.867e-01, -8.800e-01, -1.829e-02, 4.507e-02, -1.814e-01, -1.103e-01, 8.006e-02));
	r += mul(s0_2, M4(2.979e-01, -2.100e-01, -5.659e-02, 1.933e-01, -1.744e-01, 3.107e-01, 2.502e-02, 3.138e-02, -1.578e-01, -1.081e-01, 1.963e-01, 6.393e-02, -9.212e-02, -2.156e-02, 1.726e-02, -7.792e-02));
	r += mul(s0_3, M4(3.051e-03, 4.071e-03, -3.462e-01, -2.641e-01, -6.995e-02, 2.959e-01, 5.343e-02, -5.963e-02, 1.057e-01, -8.594e-02, 1.096e-01, 1.387e-01, 7.989e-03, -1.866e-01, -1.036e-01, 1.877e-01));
	r += mul(s0_4, M4(-2.577e-01, 1.189e-01, -5.257e-02, -1.053e-02, -1.385e-01, 4.732e-01, 6.566e-03, 1.915e-02, 1.069e-01, -1.735e-01, -5.023e-01, -3.040e-01, 1.459e-01, 1.617e-02, -1.237e-01, -2.839e-01));
	r += mul(s0_5, M4(-4.071e-02, -9.549e-02, 3.273e-02, -5.974e-02, -5.333e-02, 2.935e-01, 1.436e-01, -7.492e-02, 4.404e-02, -2.227e-01, -4.070e-02, -4.994e-02, -7.416e-03, -6.558e-02, 1.226e-01, 6.630e-02));
	r += mul(s0_6, M4(1.274e-01, 4.228e-01, 1.146e-01, 1.022e-01, -3.548e-03, 6.213e-01, -1.235e-02, 1.633e-02, 2.832e-02, -7.039e-01, 3.301e-03, -6.512e-02, 5.629e-02, -3.714e-02, 1.235e-01, -3.444e-03));
	r += mul(s0_7, M4(-7.829e-02, 3.176e-01, -8.544e-02, 2.581e-02, 2.800e-02, 8.298e-01, 7.293e-02, 5.123e-02, -1.721e-02, -5.439e-01, 3.107e-02, -5.577e-02, -9.889e-02, -3.839e-01, -5.732e-03, 9.216e-02));
	r += mul(s0_8, M4(2.505e-02, 2.085e-01, -1.055e-02, -1.023e-01, -4.717e-02, 5.097e-01, 1.520e-02, -1.085e-02, 9.478e-03, -3.721e-01, 2.839e-02, 8.425e-02, 1.892e-02, -2.933e-01, 1.224e-02, -1.258e-01));
	r += mul(s1_0, M4(-9.088e-02, -2.025e-02, -3.232e-01, 1.718e-01, -9.009e-02, -1.773e-01, 1.170e-01, -6.433e-02, -1.974e-02, 6.242e-02, -4.775e-02, -2.125e-01, -2.310e-02, 2.620e-01, 1.470e-01, -1.095e-01));
	r += mul(s1_1, M4(3.266e-03, -2.638e-01, -9.917e-02, -2.595e-01, 4.456e-01, -2.469e-01, -2.316e-01, 1.861e-01, 5.247e-01, 4.062e-01, 1.083e+00, 6.316e-01, 8.860e-02, 3.431e-01, -4.154e-02, -1.735e-01));
	r += mul(s1_2, M4(1.098e-01, -2.489e-01, -1.031e-01, 1.086e-01, -8.952e-02, -4.078e-01, 9.182e-02, 1.177e-01, 1.383e-01, 2.100e-01, 3.893e-02, 3.818e-01, -8.107e-02, 2.847e-03, -1.218e-01, -5.320e-02));
	r += mul(s1_3, M4(-4.617e-02, -4.120e-01, -2.822e-02, -1.599e-01, -3.900e-02, -2.084e-01, -5.403e-02, -2.271e-02, 9.011e-02, 2.655e-01, 2.713e-02, 7.265e-02, -1.440e-01, 2.447e-01, -3.058e-01, -7.252e-02));
	r += mul(s1_4, M4(-4.831e-01, -2.839e-01, -3.628e-01, -3.219e-01, -7.916e-02, -6.054e-01, -2.094e-01, -4.000e-02, 4.394e-01, 3.244e-01, 5.121e-01, 4.736e-01, -7.543e-03, -1.109e-01, -1.383e-01, -3.212e-01));
	r += mul(s1_5, M4(-1.544e-01, -4.139e-01, 5.754e-02, -2.479e-01, -8.827e-04, -5.506e-01, 3.884e-02, 7.175e-02, 3.700e-01, 2.379e-01, 1.778e-02, 3.266e-01, 7.367e-02, 3.288e-01, 6.303e-02, -2.169e-02));
	r += mul(s1_6, M4(1.113e-01, -2.646e-01, 6.796e-02, 2.145e-01, -1.498e-02, -3.467e-01, 7.553e-02, -4.142e-02, -4.574e-02, 2.351e-01, -1.988e-01, -2.468e-01, 2.196e-02, 4.427e-01, -8.140e-03, 5.155e-02));
	r += mul(s1_7, M4(-3.271e-04, -3.814e-01, -1.053e-01, -1.183e-01, -4.968e-03, -5.832e-01, -7.211e-02, -1.573e-01, 1.429e-01, 1.502e-01, 1.891e-01, 1.377e-01, -8.961e-02, 7.423e-01, 7.594e-02, 1.564e-01));
	r += mul(s1_8, M4(-8.159e-02, -1.295e-01, 9.647e-02, -8.520e-02, -1.484e-01, -6.350e-01, 4.909e-02, 3.721e-02, 1.794e-01, 2.903e-01, -8.991e-02, 6.941e-02, 1.322e-01, 1.924e-01, -3.839e-02, 1.057e-01));
	r += mul(s2_0, M4(-1.901e-02, -2.309e-01, -4.239e-02, -9.105e-02, 1.561e-01, 8.619e-03, -2.741e-01, -2.697e-01, -8.776e-02, 1.542e-01, -1.924e-02, 5.291e-02, 2.490e-02, -9.914e-02, 2.452e-02, 1.107e-01));
	r += mul(s2_1, M4(-2.969e-02, 5.513e-02, 7.622e-02, -1.868e-01, 8.596e-02, -4.887e-02, -2.789e-01, -1.505e-01, -6.561e-02, 1.281e-01, -4.147e-02, 3.487e-01, 1.239e-01, -2.697e-01, 7.908e-02, 6.420e-02));
	r += mul(s2_2, M4(-2.032e-01, 3.488e-03, 1.169e-01, -1.256e-01, 8.952e-02, -7.784e-02, -3.768e-02, -1.197e-01, -6.470e-02, -1.050e-01, 8.862e-02, 3.076e-01, -8.277e-02, 1.002e-02, 6.320e-02, -3.433e-03));
	r += mul(s2_3, M4(-7.347e-02, 1.620e-01, 7.950e-02, -7.710e-03, 8.839e-02, 4.624e-04, -5.713e-01, 2.875e-02, 3.851e-02, -2.725e-01, 5.999e-02, 6.623e-02, 4.307e-02, -7.507e-03, 9.145e-02, -1.096e-02));
	r += mul(s2_4, M4(1.975e-01, 9.345e-02, -1.638e-01, -1.932e-02, -4.309e-01, -2.566e-02, -1.507e-01, -2.458e-01, 1.256e-01, 3.216e-01, 3.270e-01, 1.332e-02, 2.870e-01, -7.670e-02, -3.324e-01, 3.125e-01));
	r += mul(s2_5, M4(-1.355e-01, -1.488e-01, 8.379e-02, 2.809e-01, -3.717e-02, 2.878e-01, 1.336e-01, 5.433e-02, -1.459e-01, -2.267e-02, -6.617e-02, -1.245e-01, 9.220e-02, -1.341e-01, 1.394e-01, 1.324e-01));
	r += mul(s2_6, M4(-1.201e-02, -2.018e-01, 5.339e-02, -1.780e-01, -6.702e-02, -3.160e-02, -1.064e-01, 1.996e-01, 6.656e-02, 2.394e-01, 2.001e-02, 1.221e-02, -6.968e-02, -6.765e-02, 2.482e-01, 2.163e-01));
	r += mul(s2_7, M4(1.003e-01, -2.307e-01, -3.322e-02, -1.412e-01, -4.888e-02, 1.912e-01, 1.061e-01, 2.454e-01, -5.029e-02, 2.952e-01, -4.951e-02, -7.542e-02, 5.173e-03, -3.080e-01, -2.811e-02, 3.657e-01));
	r += mul(s2_8, M4(1.824e-02, -5.713e-02, 1.140e-01, -4.903e-02, 1.566e-02, -4.268e-02, -5.085e-02, 8.294e-02, 8.817e-02, 1.617e-01, 3.475e-02, 4.595e-02, 7.021e-02, -2.401e-01, 2.944e-02, -3.100e-02));
	r += mul(s3_0, M4(2.544e-02, 1.922e-02, -1.972e-01, -6.130e-03, -1.018e-01, 1.351e-03, 1.563e-01, 3.196e-02, 6.087e-05, -3.050e-02, -3.211e-01, 1.827e-01, -9.505e-02, 9.534e-02, -1.234e-01, -1.220e-01));
	r += mul(s3_1, M4(3.081e-02, 1.479e-01, 2.306e-02, 2.290e-01, -2.055e-01, -9.951e-02, 3.619e-01, 8.240e-02, -1.192e-01, -2.674e-01, -1.239e-01, 4.631e-02, -2.838e-02, -2.660e-02, 6.521e-02, -1.147e-01));
	r += mul(s3_2, M4(-2.075e-01, 2.140e-01, 7.155e-03, 1.770e-01, -1.234e-02, -9.507e-02, 5.579e-02, -2.700e-01, -2.107e-03, -1.825e-01, -3.866e-01, 9.735e-02, -9.305e-02, 1.890e-01, -1.793e-03, -1.628e-01));
	r += mul(s3_3, M4(-9.005e-02, 3.389e-02, 2.530e-01, 7.091e-02, -5.066e-02, 8.651e-02, 2.891e-01, 1.535e-01, -1.705e-03, 1.864e-01, -1.857e-01, 1.165e-02, 1.181e-01, 2.416e-01, 5.646e-04, -3.292e-01));
	r += mul(s3_4, M4(9.027e-03, -3.637e-02, -4.195e-01, 5.366e-02, -4.062e-02, -8.802e-02, 6.015e-01, 6.234e-01, 5.207e-01, -2.148e-01, 4.385e-01, -1.794e-01, 3.912e-01, -6.713e-02, -4.256e-01, -1.758e-01));
	r += mul(s3_5, M4(-1.985e-01, 3.631e-01, -4.662e-01, -3.262e-01, 1.362e-01, 9.568e-03, 4.245e-03, -2.161e-02, 1.568e-01, -6.408e-01, 1.654e-01, -3.075e-01, -8.479e-02, -9.114e-02, 1.096e-02, -2.877e-01));
	r += mul(s3_6, M4(-3.256e-02, -1.272e-01, 3.114e-02, 1.406e-01, -1.207e-01, 1.868e-01, -9.099e-02, -1.052e-01, 9.553e-02, -4.463e-01, 9.898e-03, -2.944e-01, -1.019e-01, 4.722e-01, 9.507e-04, -1.600e-01));
	r += mul(s3_7, M4(3.160e-01, 9.064e-03, 3.852e-02, 1.569e-01, 7.675e-02, -2.285e-01, 3.767e-02, 9.447e-02, -1.226e-01, -5.394e-01, -2.143e-03, -3.311e-01, -2.865e-01, 1.357e-01, -6.929e-02, -1.693e-01));
	r += mul(s3_8, M4(-1.539e-01, 2.392e-01, 6.993e-02, 2.217e-01, 5.221e-02, -8.159e-02, -5.329e-02, -2.847e-02, 6.243e-03, -4.609e-01, 7.897e-02, -1.541e-01, -3.850e-02, 6.189e-01, 7.510e-02, -1.877e-01));
	r += V4(5.210e-03, -1.852e-03, 7.224e-03, 6.970e-03);
	return r;
}
void Pass4(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 5
//!DESC CuNNy-6x8C-EASU-NVL-DS-conv3
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2, t3
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(4.468e-02, -7.586e-02, -1.179e-01, 3.447e-01, -1.815e-01, 1.006e-01, 2.466e-02, 4.155e-02, 2.510e-01, 1.836e-02, -4.284e-04, -1.842e-02, 1.486e-01, 7.150e-02, 3.487e-02, 1.362e-01));
	r += mul(s0_1, M4(1.128e-02, 1.163e-01, -4.914e-01, 2.004e-02, 2.914e-02, -9.615e-02, -1.236e-01, 1.627e-01, -9.750e-02, 1.873e-01, 1.206e-01, -1.308e-01, -1.772e-01, 9.051e-02, 1.076e-01, -4.562e-02));
	r += mul(s0_2, M4(-7.708e-02, -1.473e-01, -2.270e-01, 9.793e-02, 3.808e-01, -1.258e-01, -1.182e-02, 4.992e-02, -3.940e-02, 1.067e-02, -1.482e-01, -1.003e-02, -8.545e-02, 7.159e-02, 1.007e-02, -3.412e-02));
	r += mul(s0_3, M4(3.595e-01, -3.368e-01, -3.018e-01, -2.241e-01, 5.018e-02, 1.025e-01, 6.096e-02, -8.942e-02, 1.745e-01, 3.979e-02, -9.887e-02, 1.619e-01, -4.869e-02, 6.382e-02, 1.351e-02, -1.355e-01));
	r += mul(s0_4, M4(-2.739e-01, -1.368e-01, -5.352e-01, 2.438e-01, -1.414e-01, 5.109e-02, 3.682e-01, -4.820e-01, -3.657e-02, 1.375e-01, -4.046e-01, 1.858e-02, -3.912e-01, -1.801e-01, -4.247e-02, 3.682e-01));
	r += mul(s0_5, M4(-1.091e-01, -2.023e-01, -2.766e-01, -1.072e-02, -6.959e-02, -2.182e-01, 4.432e-01, 1.080e-01, -1.265e-01, -8.701e-03, -1.204e-01, 5.624e-02, 1.490e-01, 1.288e-02, 5.427e-02, 1.993e-02));
	r += mul(s0_6, M4(-8.398e-02, -9.627e-02, -3.171e-01, 1.470e-01, -1.297e-02, -1.130e-01, 9.288e-02, 1.319e-02, 1.292e-01, -7.132e-02, -8.471e-02, -1.459e-01, 8.643e-03, -1.356e-01, 4.093e-02, 1.167e-01));
	r += mul(s0_7, M4(-4.434e-02, 5.196e-02, -5.306e-01, -3.837e-01, 1.472e-02, 7.678e-02, -1.349e-01, 1.106e-01, -1.003e-01, 2.112e-01, -1.091e-02, -4.851e-02, 5.489e-02, -3.468e-01, -7.390e-02, -2.920e-01));
	r += mul(s0_8, M4(1.182e-01, 2.153e-01, -3.641e-01, 9.462e-02, -1.357e-01, -2.207e-01, 8.252e-02, 4.284e-02, 4.245e-03, -1.525e-01, -6.962e-02, -1.145e-01, 6.588e-04, -9.795e-02, 1.154e-01, -1.119e-01));
	r += mul(s1_0, M4(-2.246e-02, 4.957e-03, 8.690e-02, 9.620e-02, 9.182e-02, -2.683e-02, -8.524e-02, 5.836e-02, 2.112e-02, 5.011e-02, -5.173e-02, 1.422e-01, -2.225e-01, 1.725e-01, 4.742e-02, -2.530e-02));
	r += mul(s1_1, M4(1.314e-01, 2.430e-02, -1.988e-01, 1.551e-01, 1.684e-01, 2.200e-02, 2.785e-01, -5.639e-02, -4.414e-02, 2.799e-01, -8.726e-02, 1.146e-03, -4.473e-01, 1.818e-01, 4.127e-02, -7.288e-02));
	r += mul(s1_2, M4(-5.389e-02, -9.959e-02, 4.469e-02, -4.942e-03, 6.993e-02, -1.999e-01, 9.213e-02, 9.896e-02, -4.127e-02, -1.701e-02, -2.091e-02, 7.621e-02, -3.233e-01, 2.231e-01, -3.135e-02, -1.901e-02));
	r += mul(s1_3, M4(6.707e-02, -1.082e-02, 3.626e-02, 1.964e-02, 4.424e-02, 1.245e-01, -3.680e-02, 1.326e-02, -7.928e-02, -3.755e-02, 7.947e-02, -1.561e-01, -4.449e-02, 2.557e-01, -6.500e-03, -8.547e-02));
	r += mul(s1_4, M4(-2.708e-01, -3.016e-02, -8.838e-03, -1.668e-01, 1.694e-01, 3.193e-01, 4.547e-02, -2.160e-01, -5.435e-03, -4.988e-02, -2.599e-02, -5.807e-02, -5.198e-01, -2.343e-01, -2.432e-01, -7.842e-02));
	r += mul(s1_5, M4(1.631e-01, -8.607e-02, 1.620e-01, 9.245e-02, -2.710e-01, 9.890e-03, -1.615e-01, 2.007e-01, -1.409e-01, -1.619e-01, 3.416e-01, -1.206e-01, -2.804e-01, -9.386e-02, 3.116e-02, 9.863e-03));
	r += mul(s1_6, M4(-7.156e-02, 1.357e-01, 8.679e-02, 4.790e-02, 8.993e-02, -4.561e-02, -2.136e-02, 6.945e-02, 3.365e-02, 9.017e-02, -3.430e-02, -9.371e-02, -1.457e-01, 1.538e-01, 6.621e-02, -1.909e-01));
	r += mul(s1_7, M4(-7.926e-02, 1.254e-01, -3.489e-02, 6.276e-02, -3.771e-02, 1.527e-01, -6.976e-02, -1.488e-02, -9.098e-02, 1.247e-01, -1.389e-01, -1.183e-01, -9.408e-02, -3.016e-01, -2.128e-01, -3.488e-01));
	r += mul(s1_8, M4(1.070e-02, 4.966e-02, 3.837e-02, -8.758e-02, -4.664e-02, -7.368e-02, 1.244e-01, 1.480e-02, -8.764e-02, 1.125e-01, -1.653e-01, 1.469e-02, -1.693e-01, -5.305e-02, 8.212e-03, -1.134e-01));
	r += mul(s2_0, M4(-1.407e-01, 4.004e-02, -1.945e-02, -8.570e-02, -4.059e-02, 1.402e-01, -2.924e-02, -1.017e-01, -4.318e-01, 8.683e-01, -7.615e-02, 9.166e-02, 2.316e-01, -7.243e-02, -1.179e-02, 2.051e-01));
	r += mul(s2_1, M4(-2.964e-01, 1.534e-01, 4.787e-02, 9.736e-03, 1.518e-01, -2.192e-01, -2.756e-02, 2.616e-02, -3.008e-01, 7.062e-01, -1.117e-02, 1.998e-01, 1.061e-01, -1.843e-01, 3.530e-02, -2.177e-01));
	r += mul(s2_2, M4(7.706e-02, 2.345e-01, -7.631e-03, 1.043e-01, -6.971e-02, 2.097e-01, -1.458e-02, -7.247e-03, -1.380e-01, 4.634e-01, -3.065e-01, 3.407e-02, -1.250e-01, 9.031e-02, 8.390e-03, -2.694e-02));
	r += mul(s2_3, M4(-2.802e-02, 1.072e-01, 5.321e-02, 1.538e-01, -6.988e-02, 6.746e-02, 6.584e-03, 5.955e-02, -2.230e-01, 8.574e-01, 7.867e-02, 1.073e-01, 1.502e-01, 3.369e-02, 8.013e-02, -1.003e-02));
	r += mul(s2_4, M4(-1.726e-01, -1.246e-02, -1.330e-01, 4.402e-02, 9.353e-02, -9.011e-02, -1.314e-02, -7.812e-02, 2.955e-01, 8.655e-01, -8.898e-01, 1.826e-02, -1.119e-01, 4.329e-03, -5.055e-01, 2.426e-01));
	r += mul(s2_5, M4(-2.515e-01, 1.357e-01, 2.108e-01, 5.799e-02, -4.331e-02, 3.924e-02, 5.034e-02, -1.202e-02, -2.283e-01, 4.385e-01, -1.498e-01, 2.586e-01, -7.606e-02, 5.075e-02, 1.945e-01, -1.488e-02));
	r += mul(s2_6, M4(-1.079e-01, 4.952e-01, 1.950e-01, -1.723e-01, -3.315e-02, 8.779e-02, 2.468e-02, -8.081e-03, -3.357e-01, 4.477e-01, -1.101e-02, -3.611e-01, -4.148e-03, 1.292e-01, -2.123e-02, 2.744e-02));
	r += mul(s2_7, M4(-5.040e-02, 2.455e-01, 1.627e-01, -2.653e-02, 4.450e-02, -1.991e-02, -4.142e-02, 3.075e-02, -2.026e-01, 3.967e-01, -6.936e-01, 5.980e-01, 8.988e-02, -1.387e-01, 3.933e-02, -2.642e-01));
	r += mul(s2_8, M4(-2.148e-01, -1.108e-02, 1.746e-01, -7.270e-02, -1.958e-02, 7.544e-02, 3.531e-03, 1.707e-02, -2.627e-01, 2.093e-01, 2.646e-02, 1.512e-01, -9.409e-02, 5.926e-02, -3.407e-02, -9.367e-02));
	r += mul(s3_0, M4(1.592e-02, -2.991e-01, -6.506e-02, -1.466e-01, -1.187e-01, 4.524e-01, -1.316e-02, -3.282e-01, 3.715e-02, 3.032e-03, 6.261e-02, 8.247e-02, -2.158e-02, 8.192e-02, 2.086e-01, -9.243e-02));
	r += mul(s3_1, M4(7.411e-02, -2.204e-01, -5.731e-02, -1.745e-01, -1.418e-03, -1.045e-01, 1.160e-01, -1.197e-01, -1.451e-01, 4.556e-02, 1.616e-01, 9.592e-02, 1.139e-01, -3.223e-01, 3.594e-02, -1.538e-01));
	r += mul(s3_2, M4(-4.415e-02, -1.323e-01, -8.396e-02, 8.575e-02, -1.376e-01, 6.123e-01, -1.004e-01, -1.291e-01, 1.949e-01, -5.350e-02, -1.284e-01, 6.031e-02, -8.638e-02, 3.161e-02, 1.652e-01, 1.702e-02));
	r += mul(s3_3, M4(1.222e-01, -1.667e-01, -2.559e-01, 2.244e-01, -2.720e-01, 1.828e-01, -4.105e-02, -8.821e-02, 1.154e-01, -2.737e-02, 3.048e-02, 3.353e-02, -1.943e-01, 1.198e-02, 2.619e-01, -7.156e-03));
	r += mul(s3_4, M4(-1.691e-01, -1.234e-02, -1.304e-01, 2.528e-01, -1.868e-01, -2.411e-03, 1.821e-01, -2.060e-01, 7.103e-02, -9.359e-02, -1.568e-01, 6.261e-02, -8.601e-02, 3.503e-01, 1.955e-01, 1.113e-01));
	r += mul(s3_5, M4(-4.066e-03, 4.313e-02, -1.362e-01, -3.657e-02, -1.549e-01, 3.368e-01, 5.963e-02, -3.165e-02, 1.557e-01, 4.419e-02, 2.307e-02, 6.772e-03, -8.195e-02, -4.858e-02, 4.519e-02, -1.412e-01));
	r += mul(s3_6, M4(-2.121e-03, 1.084e-01, -6.195e-02, -4.694e-02, -4.421e-01, 8.087e-01, 1.500e-02, 9.799e-02, 3.127e-03, -1.831e-01, 5.593e-03, -4.433e-02, 1.833e-01, -2.712e-02, 2.121e-01, 5.388e-02));
	r += mul(s3_7, M4(-1.359e-02, 5.332e-02, 1.257e-01, -1.268e-01, -5.763e-01, 1.671e-01, 1.319e-02, 1.517e-01, 7.243e-02, -4.846e-02, -1.209e-01, 1.150e-01, 6.443e-02, -1.363e-02, 2.896e-01, -1.314e-01));
	r += mul(s3_8, M4(4.006e-02, 1.363e-01, -8.342e-02, 5.506e-02, -4.677e-01, 6.210e-01, -5.427e-02, 1.431e-01, -2.062e-02, -1.762e-01, 1.041e-01, 2.091e-02, -7.910e-02, 9.958e-02, 6.134e-02, -5.795e-02));
	r += V4(2.623e-03, -4.255e-03, -1.911e-04, -4.457e-03);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(8.137e-02, -2.969e-01, 3.105e-02, -1.856e-03, -3.323e-02, 7.843e-02, -2.447e-03, -1.118e-01, 4.850e-02, -1.362e-01, -7.635e-02, 7.355e-02, -3.502e-02, -1.922e-01, -5.930e-02, -9.825e-03));
	r += mul(s0_1, M4(5.888e-02, -3.505e-01, 9.557e-02, -4.186e-02, -4.896e-02, -9.768e-02, 4.733e-02, -1.143e-01, -5.530e-02, 6.805e-02, -6.034e-02, -4.032e-02, 6.660e-03, -9.276e-03, 4.669e-02, 7.972e-02));
	r += mul(s0_2, M4(1.365e-01, -2.881e-01, 2.071e-01, 3.101e-02, -2.417e-01, -1.271e-01, 7.686e-02, -3.833e-02, 1.434e-01, -3.400e-02, -5.857e-02, -1.507e-03, -3.161e-02, -1.195e-03, -6.139e-02, -1.566e-02));
	r += mul(s0_3, M4(7.578e-02, 1.849e-01, 2.917e-01, -1.619e-01, -7.594e-02, 2.887e-01, 2.519e-02, 9.743e-02, 1.489e-01, -5.080e-01, -2.251e-01, -3.717e-01, -9.358e-02, 1.010e-01, -8.581e-02, -1.518e-02));
	r += mul(s0_4, M4(1.514e-01, -3.511e-01, 1.569e-01, -3.462e-01, 3.662e-01, 5.985e-01, 1.519e-01, 4.519e-01, -3.139e-01, 9.836e-02, 2.049e-02, -1.970e-01, -1.554e-01, 9.873e-02, 4.504e-01, 3.357e-01));
	r += mul(s0_5, M4(1.138e-01, 5.178e-02, -1.252e-02, -2.454e-01, -1.885e-01, -1.364e-01, 3.486e-01, 3.151e-01, 2.765e-01, -6.412e-02, 4.664e-02, -1.389e-01, -1.086e-01, -8.341e-02, -7.878e-02, 6.451e-03));
	r += mul(s0_6, M4(5.736e-02, -2.958e-01, -1.406e-01, 2.614e-02, -1.093e-01, 4.409e-02, -2.665e-02, 1.978e-01, 1.954e-01, -1.480e-01, -4.712e-02, -1.556e-01, 2.388e-02, -1.391e-01, -1.318e-01, -8.983e-03));
	r += mul(s0_7, M4(1.332e-01, 4.658e-02, 1.698e-01, 2.542e-01, -1.015e-01, 1.368e-01, 8.182e-02, 2.160e-01, 1.636e-01, -1.309e-02, -1.041e-02, -3.008e-02, 2.505e-01, -2.201e-01, 1.231e-01, -1.666e-01));
	r += mul(s0_8, M4(3.781e-01, -1.426e-01, -1.669e-01, -2.709e-01, 3.308e-02, -1.742e-02, 1.653e-01, 3.652e-02, 1.980e-02, -5.250e-02, -3.749e-02, -8.574e-02, -4.137e-02, -6.112e-02, 7.920e-02, 3.534e-02));
	r += mul(s1_0, M4(1.024e-02, -8.014e-02, 4.226e-02, 1.274e-01, 4.876e-02, -1.443e-01, -1.330e-02, -8.569e-02, 1.089e-01, -1.052e-01, -8.922e-02, 1.446e-02, -1.165e-01, 1.479e-01, 3.760e-03, 3.511e-02));
	r += mul(s1_1, M4(-4.467e-02, 1.882e-01, -1.051e-01, -1.060e-01, 3.644e-02, -5.850e-02, -1.883e-01, 1.752e-01, -1.287e-01, -2.263e-01, 1.251e-01, -9.323e-02, 1.415e-01, 1.372e-01, -2.497e-02, 1.547e-02));
	r += mul(s1_2, M4(-6.133e-02, -1.298e-02, 1.759e-01, 6.319e-02, -5.597e-02, 1.908e-02, -9.117e-02, 1.899e-02, 9.973e-02, 9.850e-02, 5.057e-02, 5.337e-02, 2.740e-02, 1.237e-01, -1.428e-02, 9.307e-02));
	r += mul(s1_3, M4(-1.413e-01, 6.568e-02, -3.097e-02, -1.362e-01, 9.496e-02, -3.618e-01, -1.037e-01, -1.949e-01, 3.252e-01, 1.147e-01, 2.846e-02, -5.890e-02, -2.568e-01, 1.028e-01, -1.035e-01, 2.529e-01));
	r += mul(s1_4, M4(-1.648e-01, 1.432e-01, -4.194e-03, -5.637e-02, -1.299e-01, -7.488e-02, -4.128e-01, -3.183e-01, -7.936e-02, 1.785e-01, 3.653e-01, 9.492e-03, 9.591e-02, 7.138e-02, 4.639e-01, 2.750e-01));
	r += mul(s1_5, M4(-2.257e-01, -5.919e-02, 2.159e-01, 1.578e-01, -8.246e-01, 4.756e-01, -1.433e-01, 2.495e-01, 1.291e-01, -1.885e-01, 2.530e-01, 2.871e-01, 3.997e-02, 4.870e-02, 3.029e-02, 7.480e-02));
	r += mul(s1_6, M4(-7.106e-02, -4.729e-02, -6.259e-02, -2.258e-02, 2.197e-01, -2.094e-01, 1.631e-02, -7.821e-02, 7.955e-02, -2.591e-03, -9.687e-02, 3.272e-02, -2.031e-01, -4.496e-02, -1.147e-01, 7.965e-02));
	r += mul(s1_7, M4(1.438e-01, -7.226e-02, 1.712e-01, -8.609e-02, 3.075e-01, 6.372e-02, 6.801e-02, -1.322e-01, 2.066e-01, 6.294e-02, 1.201e-01, -2.847e-03, -1.409e-02, -1.459e-01, 8.644e-02, -3.095e-01));
	r += mul(s1_8, M4(-1.096e-01, -5.685e-02, -7.522e-03, 4.613e-02, -1.002e-01, 1.649e-01, 5.017e-02, 1.368e-01, 2.917e-01, 9.298e-02, -1.656e-02, -5.771e-02, -2.700e-02, -5.603e-02, 1.023e-01, 2.392e-02));
	r += mul(s2_0, M4(1.666e-02, 1.880e-01, 8.675e-02, 8.598e-02, -2.906e-02, 4.394e-02, 2.923e-02, -1.115e-02, 1.699e-01, 7.733e-02, 4.143e-02, 3.537e-01, 3.516e-02, -1.125e-01, 1.625e-02, -5.594e-02));
	r += mul(s2_1, M4(-4.962e-03, -9.160e-02, -5.749e-02, 1.294e-01, 3.138e-02, -1.737e-02, -4.052e-02, -1.363e-01, -1.010e-01, -1.471e-01, 2.274e-02, -6.272e-02, -6.124e-02, 1.407e-01, 4.794e-02, 2.130e-02));
	r += mul(s2_2, M4(-2.238e-02, -1.265e-01, 1.830e-02, 4.727e-02, -1.839e-03, 7.547e-02, 3.216e-02, 7.584e-02, 1.434e-01, 1.354e-01, -5.433e-02, 8.651e-02, 5.670e-02, -6.466e-02, -4.079e-02, -3.679e-03));
	r += mul(s2_3, M4(1.158e-01, 1.431e-01, -5.345e-03, 2.115e-01, 1.784e-02, -9.698e-02, 5.778e-02, 4.626e-02, 2.770e-02, -1.748e-01, -8.784e-02, 1.318e-01, -1.326e-01, -1.794e-01, -1.514e-01, -2.550e-01));
	r += mul(s2_4, M4(1.567e-01, 1.993e-01, -8.619e-02, -9.815e-02, 1.014e-02, 9.281e-02, -1.501e-01, -8.195e-02, -5.432e-01, -5.334e-01, -9.518e-02, -9.128e-01, -1.344e-01, 3.159e-01, -6.493e-04, -1.884e-02));
	r += mul(s2_5, M4(-6.613e-02, -4.020e-02, 1.265e-01, 2.132e-04, -3.925e-04, -3.503e-02, 3.869e-02, -1.206e-02, -2.475e-01, 2.473e-01, -3.480e-01, -9.662e-02, -1.590e-02, 2.778e-02, 1.566e-01, 1.236e-01));
	r += mul(s2_6, M4(1.030e-01, 3.689e-01, -1.550e-02, -1.953e-01, 1.807e-02, -1.229e-02, 4.089e-02, 1.449e-03, -7.658e-02, 1.429e-01, -3.345e-01, 1.546e-01, -1.364e-03, -1.759e-01, -2.312e-02, -2.605e-01));
	r += mul(s2_7, M4(-4.658e-01, -1.685e-01, 1.075e-02, -4.567e-01, -3.365e-02, 4.748e-02, -3.286e-02, -3.735e-02, -1.206e-01, 1.144e-01, -2.447e-01, -2.314e-01, 8.279e-02, -1.005e-01, 6.841e-02, -1.275e-01));
	r += mul(s2_8, M4(-1.284e-01, -1.136e-01, -5.048e-02, 1.203e-01, -6.415e-03, -1.897e-02, -1.114e-02, 4.582e-03, -3.909e-02, 1.990e-01, -3.082e-01, 9.983e-02, 2.262e-02, -5.510e-02, 1.109e-01, 8.279e-02));
	r += mul(s3_0, M4(4.822e-02, -1.030e-01, -8.668e-03, -8.527e-03, -1.423e-01, 1.081e-01, 4.665e-02, 9.973e-04, 3.318e-02, -7.179e-02, -2.765e-02, 1.029e-01, -1.545e-01, 2.163e-02, 8.862e-02, 1.232e-01));
	r += mul(s3_1, M4(3.448e-02, -1.565e-02, -1.087e-01, -2.282e-02, 1.260e-01, 2.031e-01, -3.131e-02, -1.997e-01, -3.168e-02, -4.896e-02, -8.868e-02, 1.264e-01, -8.509e-02, 1.372e-01, 3.182e-02, 1.057e-01));
	r += mul(s3_2, M4(1.646e-01, -1.636e-01, 3.866e-02, -1.291e-01, -3.912e-02, 2.139e-01, 7.323e-02, 5.752e-02, -4.987e-03, -1.499e-01, 8.412e-04, -8.141e-02, -9.710e-02, 1.432e-01, 5.188e-03, 6.196e-02));
	r += mul(s3_3, M4(2.106e-01, -1.682e-01, 6.202e-02, -8.736e-02, -8.008e-02, -2.241e-01, -6.480e-03, 1.451e-02, 1.228e-02, -1.971e-01, -4.397e-03, -3.896e-02, -2.586e-01, 1.059e-01, -4.241e-02, -1.181e-01));
	r += mul(s3_4, M4(1.263e-01, 7.109e-02, -4.436e-02, -4.803e-01, 2.308e-02, -1.824e-01, -5.262e-02, -2.843e-01, -1.743e-01, 6.551e-02, -1.661e-01, -2.641e-01, -9.913e-02, 3.368e-01, 2.981e-02, -6.372e-02));
	r += mul(s3_5, M4(2.627e-01, -7.527e-02, 2.118e-02, -1.178e-01, -8.457e-02, 3.707e-02, 2.774e-02, 2.619e-02, -2.354e-01, -3.630e-04, -9.721e-02, -3.225e-02, 4.163e-02, 4.077e-02, 8.813e-02, 4.883e-02));
	r += mul(s3_6, M4(1.345e-01, -3.750e-02, 8.868e-02, -7.291e-02, -8.438e-02, -9.713e-02, 1.010e-02, 1.933e-01, 7.039e-02, -1.438e-01, -5.953e-02, -6.452e-02, -7.556e-02, 3.045e-01, -2.872e-03, -8.451e-02));
	r += mul(s3_7, M4(-1.991e-01, -1.377e-01, -1.381e-01, -3.106e-01, -6.080e-02, 1.960e-02, -4.688e-02, -1.242e-01, 1.548e-01, -3.618e-01, -3.232e-02, -1.334e-01, -1.064e-02, 1.658e-01, 4.315e-02, -1.243e-02));
	r += mul(s3_8, M4(6.376e-02, -4.532e-02, -1.175e-01, -9.678e-02, -5.722e-02, 7.093e-02, -3.316e-02, 3.784e-02, 6.903e-02, 6.623e-02, -7.982e-02, 5.616e-02, -9.582e-02, -2.587e-02, 1.659e-01, -4.241e-02));
	r += V4(1.322e-03, 1.880e-04, -9.417e-03, -1.786e-02);
	return r;
}
void Pass5(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t3[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 6
//!DESC CuNNy-6x8C-EASU-NVL-DS-conv4
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t2, t3
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t2, float2(x, y))
#define l1(x, y) O(t3, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(2.435e-02, 8.120e-02, -1.345e-01, 1.428e-01, 8.440e-02, 4.720e-02, -4.635e-02, -1.207e-02, 3.393e-02, 1.008e-02, 8.929e-02, -9.675e-02, -1.032e-01, -1.812e-01, 4.724e-02, 1.422e-01));
	r += mul(s0_1, M4(5.597e-04, 2.501e-02, 6.024e-02, 1.265e-02, -5.309e-03, 4.086e-03, 7.959e-02, -2.217e-02, -1.445e-02, 6.797e-02, -6.107e-02, 1.217e-01, -1.377e-01, -1.569e-01, 8.234e-02, 5.210e-02));
	r += mul(s0_2, M4(-9.066e-04, -3.124e-02, 1.492e-02, -3.504e-02, -5.346e-02, 7.870e-02, -4.407e-02, 1.395e-02, 3.529e-02, -5.441e-02, -6.644e-02, 1.934e-01, -1.782e-02, -4.471e-02, -1.106e-02, -5.640e-03));
	r += mul(s0_3, M4(-1.159e-01, -5.232e-02, 1.235e-02, -4.202e-02, 3.267e-03, -9.566e-02, 8.757e-02, -6.492e-02, -8.136e-02, 4.366e-01, -3.701e-01, 4.201e-02, -1.100e-01, 2.146e-02, -5.327e-02, -1.789e-01));
	r += mul(s0_4, M4(2.078e-01, 3.299e-01, -1.157e-01, -1.786e-01, -1.671e-01, -5.015e-02, 1.744e-01, -2.415e-02, 2.371e-01, 2.754e-01, 3.263e-02, 1.890e-01, -2.173e-02, -2.784e-01, 2.349e-02, -1.512e-01));
	r += mul(s0_5, M4(8.845e-02, 6.287e-02, -1.989e-01, -6.672e-02, 5.972e-02, 1.057e-01, -3.071e-02, -5.174e-02, -1.454e-01, -5.942e-02, 1.913e-01, -5.327e-02, -1.323e-01, -2.367e-02, -1.894e-01, 1.627e-01));
	r += mul(s0_6, M4(-6.836e-02, -1.080e-01, -8.030e-02, -9.986e-02, 5.015e-02, 9.377e-02, -9.374e-02, -1.481e-01, -2.556e-02, 2.597e-01, 1.031e-01, -1.909e-01, 1.606e-02, -3.106e-02, -5.188e-02, 1.953e-01));
	r += mul(s0_7, M4(1.170e-01, 7.407e-02, 9.198e-02, 4.003e-02, 7.809e-02, 4.932e-02, -6.345e-02, -6.779e-02, -5.750e-02, -1.171e-01, -1.888e-01, 2.753e-02, -1.316e-01, 1.048e-02, -2.747e-01, 2.088e-01));
	r += mul(s0_8, M4(-1.991e-01, -2.289e-01, 2.838e-02, 1.079e-01, -1.189e-01, 7.153e-02, 2.372e-02, -1.233e-01, -2.026e-01, 7.935e-02, 8.015e-02, 4.040e-02, 5.371e-02, 5.692e-02, -7.284e-02, 1.061e-01));
	r += mul(s1_0, M4(4.769e-02, -2.042e-02, -3.453e-02, 1.972e-02, 9.816e-02, 2.445e-01, -2.401e-01, -2.234e-02, 5.110e-02, 3.357e-02, -4.694e-02, 3.113e-03, -2.511e-02, -7.871e-02, 8.898e-02, -7.529e-02));
	r += mul(s1_1, M4(-1.451e-01, 7.497e-02, 1.752e-01, -4.529e-02, 1.234e-01, 1.435e-01, -2.256e-01, -6.417e-02, -7.058e-02, 2.216e-02, -8.039e-02, 1.313e-01, 1.745e-02, -1.374e-01, 1.606e-01, -1.122e-01));
	r += mul(s1_2, M4(-4.814e-03, 1.802e-02, 2.063e-02, 4.713e-03, -6.352e-03, 2.990e-01, -3.415e-02, -1.473e-01, -1.272e-01, -8.244e-02, 3.416e-02, 1.283e-01, -1.033e-02, 1.094e-02, 1.391e-02, -2.526e-03));
	r += mul(s1_3, M4(2.706e-03, -2.476e-02, 4.468e-02, -1.240e-01, 3.828e-02, -1.940e-03, -1.356e-01, -2.004e-02, -6.560e-02, 3.712e-01, 4.970e-02, 3.046e-01, -1.174e-01, -4.193e-02, 8.662e-02, -2.373e-01));
	r += mul(s1_4, M4(1.623e-01, 1.576e-01, 2.242e-01, -2.100e-01, -1.126e-01, 4.008e-02, -1.379e-01, 4.005e-02, 3.154e-01, 1.648e-01, 2.657e-01, 2.313e-01, 1.820e-01, 1.575e-01, -4.673e-01, -1.291e-01));
	r += mul(s1_5, M4(6.489e-02, -9.185e-02, -1.238e-01, 1.744e-02, 1.135e-01, 3.349e-01, -9.872e-02, -2.173e-01, 1.291e-01, 6.408e-02, -6.060e-02, -1.355e-01, -1.034e-01, -8.599e-03, 7.072e-02, -6.474e-02));
	r += mul(s1_6, M4(-1.059e-01, 4.388e-02, -8.073e-02, -8.523e-02, 2.677e-01, 1.704e-01, -2.055e-01, -2.900e-01, -2.201e-02, -1.946e-02, 1.129e-01, -8.927e-02, 1.937e-02, -5.603e-03, -4.937e-02, 8.371e-04));
	r += mul(s1_7, M4(-2.214e-02, 2.359e-01, -6.858e-02, -1.770e-02, 9.324e-02, 3.760e-02, -1.602e-01, -1.584e-01, 4.137e-02, -1.731e-02, 1.088e-01, -4.987e-02, -1.676e-02, 1.477e-02, 9.186e-03, 1.099e-02));
	r += mul(s1_8, M4(-3.414e-01, -8.324e-02, -6.395e-02, 3.746e-02, 1.590e-02, 3.060e-01, 1.608e-02, -2.330e-01, -1.100e-01, 1.748e-02, -3.080e-02, 3.340e-02, 6.822e-02, 7.947e-02, 1.848e-02, -3.061e-02));
	r += mul(s2_0, M4(-9.103e-02, 8.637e-02, -1.681e-01, 3.192e-02, 2.936e-02, -1.207e-01, 4.052e-02, -3.557e-02, -4.999e-02, -5.770e-02, 7.041e-02, -1.296e-01, 4.826e-02, -9.746e-02, -3.014e-02, 3.985e-02));
	r += mul(s2_1, M4(9.367e-02, 4.521e-02, -8.308e-02, 3.674e-02, -1.832e-02, -2.052e-02, 1.067e-01, -2.447e-02, 1.189e-01, -1.426e-01, 1.412e-01, -1.464e-01, 1.456e-01, 2.270e-01, -1.096e-01, -6.392e-02));
	r += mul(s2_2, M4(-3.743e-02, 1.401e-01, 8.660e-02, -8.249e-03, 7.445e-02, 5.952e-02, -1.497e-02, -1.276e-01, -1.424e-01, 2.207e-02, 1.570e-01, -1.096e-01, 9.634e-02, -2.439e-02, -2.119e-02, 2.000e-02));
	r += mul(s2_3, M4(-6.428e-02, -1.372e-01, 3.602e-01, 8.443e-02, 1.624e-02, -8.278e-02, -2.220e-02, -4.231e-02, 1.124e-01, -2.314e-01, 9.503e-02, -6.934e-02, 1.420e-01, -1.375e-01, 1.569e-01, 1.476e-01));
	r += mul(s2_4, M4(8.278e-02, 5.107e-01, 9.251e-02, 7.691e-02, -1.081e-01, 3.242e-02, -6.006e-02, -4.092e-01, 4.282e-01, 1.343e-02, -3.411e-01, 5.190e-02, 2.547e-01, 2.702e-01, -5.239e-02, 6.926e-02));
	r += mul(s2_5, M4(4.963e-03, -1.128e-02, -5.321e-02, -7.202e-02, 5.110e-02, 1.414e-01, -2.911e-02, -2.203e-01, -1.660e-01, 5.279e-02, 3.551e-03, -9.912e-02, -2.130e-01, -2.505e-03, 4.351e-02, 1.342e-01));
	r += mul(s2_6, M4(-9.059e-02, -1.227e-01, 4.168e-02, 8.140e-02, -4.663e-02, -1.929e-01, 4.492e-02, 2.007e-01, 1.338e-01, 2.212e-01, -1.360e-03, -7.068e-02, -3.560e-02, -3.211e-02, 5.254e-02, -1.220e-01));
	r += mul(s2_7, M4(7.884e-02, -7.049e-02, 3.309e-02, 4.146e-02, -8.262e-02, 2.626e-02, -1.960e-02, 2.632e-01, 1.938e-01, 2.714e-01, 2.220e-01, 1.436e-01, 1.287e-01, 8.372e-02, 1.589e-01, -2.341e-01));
	r += mul(s2_8, M4(3.060e-02, -4.765e-02, -1.661e-02, -1.846e-02, -1.597e-01, -9.525e-02, -7.545e-02, -2.047e-02, -8.255e-02, 6.144e-02, 1.123e-01, 3.967e-02, -9.582e-02, -5.603e-02, 2.804e-02, -1.221e-01));
	r += mul(s3_0, M4(-1.264e-01, 6.032e-02, 1.319e-01, 3.830e-02, 1.330e-02, -1.719e-01, 1.567e-01, -1.316e-02, -8.959e-02, -1.477e-01, -1.002e-01, 1.359e-01, -5.986e-02, 1.238e-01, -2.788e-02, 2.288e-01));
	r += mul(s3_1, M4(1.110e-01, -2.084e-01, 2.316e-01, -1.938e-01, 8.649e-02, 2.048e-01, -1.314e-01, -1.199e-01, 1.636e-02, 3.076e-01, -3.213e-01, -2.872e-02, 5.763e-03, 5.916e-02, 1.821e-01, -1.444e-01));
	r += mul(s3_2, M4(7.309e-03, 1.934e-01, -6.921e-02, 2.870e-02, 8.713e-02, 1.942e-01, 4.461e-02, -9.654e-02, 1.594e-02, 1.115e-02, -4.605e-02, -5.725e-02, -4.265e-02, -2.480e-02, 1.719e-02, 3.385e-02));
	r += mul(s3_3, M4(9.744e-02, 1.212e-01, -1.724e-01, 9.773e-02, -6.246e-02, -2.193e-01, -1.302e-02, -4.035e-03, -2.034e-02, -5.137e-01, -2.292e-02, -1.199e-01, -3.539e-02, -3.484e-01, 1.022e-01, -3.574e-02));
	r += mul(s3_4, M4(-2.522e-01, 4.744e-01, 4.121e-02, 6.870e-02, 2.132e-02, 2.112e-01, -4.975e-03, -2.653e-01, 7.482e-01, 4.586e-02, -4.480e-02, 1.820e-01, 1.809e-01, 5.123e-01, -4.696e-01, 5.018e-02));
	r += mul(s3_5, M4(2.959e-01, -1.613e-01, -3.285e-02, 4.394e-03, 8.220e-02, 3.837e-02, 1.105e-01, -1.484e-01, -2.226e-01, 1.488e-01, 3.029e-02, 3.234e-02, -3.980e-02, -2.556e-02, -1.170e-01, 2.921e-01));
	r += mul(s3_6, M4(3.744e-02, 2.109e-01, 1.220e-01, -2.407e-01, -6.473e-02, -1.056e-01, -3.313e-02, 1.742e-01, 2.860e-02, 8.064e-02, 5.992e-03, 1.246e-02, -2.910e-02, -8.417e-02, 1.939e-02, -2.399e-02));
	r += mul(s3_7, M4(1.279e-01, 1.001e-01, 4.990e-02, -9.478e-02, -9.265e-02, 2.290e-02, 5.452e-02, 2.697e-01, 5.878e-02, -3.760e-03, -6.328e-02, 4.569e-01, 5.948e-02, 8.804e-02, 1.772e-01, -1.568e-01));
	r += mul(s3_8, M4(-1.689e-01, -3.332e-02, 3.896e-02, 5.437e-02, 2.479e-02, -1.390e-01, -5.862e-02, 1.400e-01, 6.166e-02, -1.390e-01, 8.627e-02, 6.202e-02, -4.558e-02, -1.169e-01, 9.787e-02, -1.296e-04));
	r += V4(1.641e-02, 3.882e-04, 1.691e-02, -3.741e-03);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-1.296e-01, 1.794e-02, -1.186e-01, 5.531e-03, -3.036e-02, 4.728e-02, 8.212e-02, 4.925e-02, 2.388e-01, -1.798e-01, -7.606e-02, -1.959e-02, -5.774e-02, 5.284e-03, -2.226e-01, 5.951e-02));
	r += mul(s0_1, M4(-3.589e-02, -9.645e-02, -3.251e-02, -5.240e-02, -1.380e-02, -1.105e-02, -1.112e-02, -2.032e-02, -5.660e-02, -9.149e-02, -5.332e-02, -9.013e-02, 2.182e-02, -9.349e-02, 6.012e-02, 5.946e-02));
	r += mul(s0_2, M4(2.570e-02, -1.303e-02, -4.126e-02, -3.345e-03, 1.385e-02, 4.579e-03, -2.359e-02, -2.878e-02, 1.326e-02, -5.649e-02, -8.044e-02, -1.892e-01, -2.693e-02, 2.100e-03, 5.964e-02, -8.938e-02));
	r += mul(s0_3, M4(-2.515e-02, 2.821e-01, -2.064e-01, -7.837e-02, 1.723e-01, 2.227e-02, 1.879e-02, 6.473e-02, 7.432e-02, -3.320e-01, 2.333e-01, 4.720e-02, 3.025e-02, 2.086e-01, -3.467e-01, -6.646e-03));
	r += mul(s0_4, M4(-4.113e-02, -1.862e-01, 1.682e-01, 6.102e-02, -1.531e-01, 3.740e-02, -2.344e-01, -1.380e-01, 3.906e-01, -2.983e-01, -2.754e-01, -4.529e-01, 2.230e-01, -4.096e-01, -2.605e-01, 3.963e-01));
	r += mul(s0_5, M4(-5.632e-02, 3.361e-03, -1.014e-01, -6.590e-02, -8.108e-03, 5.312e-02, 6.192e-02, 7.204e-02, 2.096e-01, -9.272e-02, -4.772e-02, -1.456e-01, -1.373e-01, 2.841e-01, -3.487e-02, -8.587e-02));
	r += mul(s0_6, M4(-9.524e-02, 2.726e-01, -1.969e-01, -1.345e-01, 4.164e-02, 7.794e-02, 7.747e-02, -9.199e-02, 1.989e-01, -4.004e-01, 2.182e-01, -1.008e-01, -6.518e-02, 6.453e-02, -2.294e-01, 1.352e-01));
	r += mul(s0_7, M4(9.353e-02, -1.335e-01, 4.976e-02, 5.947e-02, -5.230e-02, 1.720e-02, -5.366e-02, -1.508e-02, 4.915e-02, 1.189e-03, -1.212e-01, -7.790e-02, -3.837e-02, 1.937e-01, -3.492e-01, -6.866e-04));
	r += mul(s0_8, M4(-8.768e-02, 2.526e-02, -2.019e-01, -1.633e-01, 5.719e-02, -9.164e-02, 2.354e-02, -6.051e-02, 1.060e-01, -1.919e-01, 1.300e-01, -8.323e-02, 2.926e-02, 1.155e-01, -4.192e-02, -2.101e-01));
	r += mul(s1_0, M4(3.135e-02, -2.006e-04, 8.767e-02, 7.207e-03, 1.714e-01, 1.756e-01, 1.675e-01, 1.474e-02, -1.048e-02, -1.365e-02, 1.694e-02, 1.644e-01, 5.638e-02, 5.450e-02, -1.764e-01, -8.060e-02));
	r += mul(s1_1, M4(-5.000e-02, -3.330e-02, 2.905e-02, 1.450e-02, 1.323e-01, -2.391e-02, -5.079e-03, -1.207e-01, -2.140e-01, 1.117e-01, 2.090e-02, -1.393e-01, 1.135e-01, -7.473e-02, -6.217e-03, -1.044e-03));
	r += mul(s1_2, M4(-2.285e-02, -3.017e-02, -5.261e-02, -7.623e-02, 1.799e-01, 8.832e-02, 1.433e-01, -3.841e-02, -3.639e-02, -7.161e-02, -3.121e-02, -6.357e-02, -1.836e-02, 9.742e-02, 7.015e-02, -1.205e-01));
	r += mul(s1_3, M4(6.876e-02, 1.420e-01, 1.432e-02, -3.367e-02, 2.549e-01, -3.274e-02, 1.058e-01, 3.933e-03, -9.012e-02, 3.988e-02, -2.518e-02, -1.112e-01, 5.046e-02, 1.657e-01, -4.170e-02, -2.469e-01));
	r += mul(s1_4, M4(5.428e-02, -6.984e-02, 1.774e-01, 1.671e-02, -2.565e-02, -2.602e-03, -9.417e-02, -2.628e-01, -3.997e-01, 1.096e-01, 1.495e-01, 1.176e-02, 4.185e-01, -2.259e-01, 5.326e-01, -1.870e-03));
	r += mul(s1_5, M4(-1.406e-02, 1.194e-01, -1.772e-01, 3.589e-02, 1.806e-01, 5.270e-02, 1.212e-01, 1.231e-01, -3.433e-02, 1.465e-01, -5.985e-03, 1.073e-01, 7.850e-02, 9.384e-02, 2.744e-01, -2.437e-01));
	r += mul(s1_6, M4(1.529e-02, 2.036e-01, -1.722e-01, -5.763e-02, 1.791e-01, 1.092e-02, 3.295e-01, -1.176e-01, -1.984e-02, 7.783e-03, -1.989e-02, -4.854e-02, 2.285e-02, -2.411e-02, 8.982e-02, -1.521e-02));
	r += mul(s1_7, M4(1.506e-01, -3.674e-02, -7.264e-03, -1.534e-01, 3.846e-04, 3.352e-02, 2.779e-02, 2.520e-02, 3.969e-02, -9.728e-02, -2.980e-03, 1.773e-01, 8.115e-02, -6.723e-02, -7.959e-02, -9.686e-03));
	r += mul(s1_8, M4(2.072e-04, 1.751e-02, -2.141e-01, -1.550e-01, 1.548e-01, -1.014e-01, 2.017e-01, 8.364e-02, -2.938e-02, 2.750e-04, -9.414e-02, -6.265e-02, 6.909e-02, 1.136e-02, 8.190e-02, -3.104e-02));
	r += mul(s2_0, M4(-2.254e-01, 9.449e-02, 5.766e-02, 1.623e-01, 2.217e-02, -9.738e-02, -1.335e-02, 4.687e-02, 1.218e-01, 7.261e-02, 3.125e-02, -7.569e-02, -5.125e-02, 8.764e-02, 1.111e-01, 1.642e-02));
	r += mul(s2_1, M4(-3.103e-01, 1.386e-01, 1.097e-01, -8.470e-02, 8.685e-02, -5.046e-02, 7.607e-02, -3.665e-02, 1.295e-01, -1.984e-01, 4.182e-02, -2.946e-02, -9.114e-02, 8.482e-02, 9.171e-02, 5.022e-02));
	r += mul(s2_2, M4(7.476e-02, -2.967e-02, 1.548e-01, -5.740e-02, 1.546e-01, -6.070e-02, 5.753e-02, -2.175e-02, 1.246e-01, -7.299e-02, -5.053e-02, 1.945e-02, -2.575e-02, -3.816e-02, 1.058e-01, -8.718e-02));
	r += mul(s2_3, M4(1.481e-01, -2.845e-01, 5.444e-02, -6.544e-03, 6.807e-02, -2.607e-02, 8.427e-02, -4.137e-02, -1.673e-01, 4.106e-01, -1.441e-01, 1.471e-01, -5.300e-02, -1.440e-01, 1.621e-01, 1.144e-01));
	r += mul(s2_4, M4(-1.191e-01, 1.538e-01, 3.436e-01, -1.662e-01, 2.301e-01, -1.872e-01, 4.514e-02, -5.711e-02, -1.521e-01, 4.281e-01, 4.166e-01, -5.876e-02, 1.282e-01, 1.911e-01, 3.804e-01, 4.719e-01));
	r += mul(s2_5, M4(-8.298e-02, -5.077e-02, 5.778e-02, 2.375e-02, 2.055e-01, -1.124e-01, 2.181e-01, 5.532e-02, 1.138e-01, -3.611e-02, 2.010e-01, 1.386e-02, -7.690e-02, -5.999e-02, -1.467e-01, -1.937e-02));
	r += mul(s2_6, M4(-1.149e-01, -1.575e-02, -5.425e-02, -4.530e-02, -5.846e-02, -2.123e-03, -9.540e-02, 5.123e-02, 1.111e-01, 5.441e-02, 6.761e-02, -1.411e-01, 1.807e-02, 5.629e-02, -8.746e-03, -7.836e-02));
	r += mul(s2_7, M4(-7.321e-02, -5.900e-02, 1.090e-01, -6.428e-02, -1.116e-01, 2.798e-02, -3.776e-03, -6.519e-02, 6.310e-03, 3.253e-02, 3.942e-02, -1.929e-01, 2.248e-01, -9.293e-02, 1.745e-01, 1.488e-02));
	r += mul(s2_8, M4(-2.594e-02, 6.285e-02, -9.268e-03, -8.494e-03, 4.623e-02, -2.690e-01, -1.040e-01, 3.209e-02, -5.336e-02, 2.887e-02, 5.079e-04, -1.481e-01, 1.496e-02, 9.836e-02, -1.013e-01, -4.759e-02));
	r += mul(s3_0, M4(1.447e-02, 7.455e-02, -5.221e-02, -2.091e-03, 1.147e-01, -9.035e-02, -1.907e-02, 3.246e-02, 7.485e-02, 2.166e-01, -3.660e-01, -3.970e-02, -7.018e-02, 5.217e-02, 6.653e-02, -3.822e-02));
	r += mul(s3_1, M4(-1.276e-01, -3.366e-02, 1.871e-01, 1.372e-01, -9.080e-02, 2.552e-02, 1.391e-01, -9.334e-02, -1.977e-01, 8.960e-02, 2.134e-01, -7.229e-02, 7.265e-02, -2.802e-01, 3.426e-03, 4.741e-02));
	r += mul(s3_2, M4(-3.271e-02, 1.578e-01, -1.704e-01, 1.744e-01, 1.276e-01, -9.817e-03, 1.479e-01, -4.077e-03, 8.472e-02, -2.355e-01, -1.503e-02, -2.175e-01, -9.260e-03, -4.161e-02, -4.426e-02, -7.149e-02));
	r += mul(s3_3, M4(-1.676e-02, -2.446e-01, 6.908e-02, 6.584e-03, 8.342e-02, -8.898e-02, -6.872e-02, -9.560e-02, 3.096e-02, 3.323e-01, -5.179e-01, 5.973e-02, -1.685e-02, 9.010e-02, -1.141e-01, -2.403e-02));
	r += mul(s3_4, M4(-1.567e-01, -1.369e-01, 2.552e-01, -3.369e-01, 1.057e-01, 1.029e-01, 3.220e-01, 5.547e-02, 4.414e-02, 8.797e-01, 5.114e-01, -1.070e-01, -5.349e-02, 6.469e-02, 3.720e-01, 4.201e-01));
	r += mul(s3_5, M4(2.608e-03, 1.009e-01, -2.113e-01, 1.811e-01, 1.803e-01, -1.764e-01, 2.882e-01, -2.265e-02, 2.131e-02, -2.906e-01, 4.865e-01, -3.551e-01, -1.111e-01, 1.534e-01, -2.015e-01, -7.254e-02));
	r += mul(s3_6, M4(8.016e-02, -6.659e-03, 1.722e-01, 1.357e-01, -8.798e-02, -7.055e-02, -2.681e-02, -4.867e-02, 3.663e-02, -9.475e-02, -4.695e-02, 4.763e-02, -2.072e-02, 4.925e-02, -1.086e-01, 3.356e-02));
	r += mul(s3_7, M4(2.171e-03, 2.934e-02, 1.961e-01, 6.374e-02, -4.886e-02, -8.136e-02, 1.316e-01, -3.782e-02, -2.638e-01, 2.422e-01, -1.023e-01, -5.167e-01, 1.133e-01, 2.278e-03, 2.349e-01, -1.417e-01));
	r += mul(s3_8, M4(-5.372e-02, 2.309e-01, -1.825e-01, -7.110e-02, -5.141e-02, -3.918e-02, 6.180e-02, -8.902e-02, -4.304e-02, 1.798e-02, 5.840e-02, -9.018e-02, 5.868e-02, 1.165e-01, -1.851e-01, -1.242e-01));
	r += V4(-2.588e-02, 1.263e-02, 6.397e-03, -8.282e-04);
	return r;
}
void Pass6(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 7
//!DESC CuNNy-6x8C-EASU-NVL-DS-conv5
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2, t3
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-1.639e-02, 1.044e-02, -7.877e-02, -5.721e-02, -7.065e-02, 4.706e-02, 1.023e-01, 1.735e-03, -9.700e-02, -2.826e-02, 1.205e-01, 5.066e-02, 6.159e-02, 4.275e-04, -3.903e-02, 5.722e-02));
	r += mul(s0_1, M4(4.798e-02, 2.303e-03, 7.746e-02, 5.613e-02, 7.670e-02, -1.140e-01, 4.062e-02, 8.634e-03, 4.373e-02, -1.725e-01, 1.071e-01, 1.325e-01, 1.318e-01, -4.324e-03, -1.248e-01, -6.799e-02));
	r += mul(s0_2, M4(1.961e-02, 1.604e-02, -5.077e-03, 2.740e-02, 9.976e-02, -1.118e-01, -1.841e-01, -3.629e-03, 5.563e-02, -3.876e-02, 1.473e-02, 3.570e-02, -4.700e-02, 2.605e-01, -5.566e-02, 2.668e-02));
	r += mul(s0_3, M4(2.071e-01, 4.241e-02, -7.360e-02, 7.647e-02, -3.609e-02, 6.541e-02, -1.903e-02, 3.359e-02, -2.225e-01, 1.732e-01, 1.172e-01, 1.127e-01, -3.024e-02, -4.114e-02, 7.545e-02, 3.553e-02));
	r += mul(s0_4, M4(2.232e-01, -2.565e-02, -1.895e-02, 2.726e-01, 1.144e-01, 1.759e-01, -1.267e-01, 1.986e-01, 2.938e-01, 3.232e-01, 7.216e-02, 4.367e-01, -2.519e-01, -2.568e-01, -4.695e-02, 1.409e-02));
	r += mul(s0_5, M4(6.023e-02, 2.360e-02, 4.608e-03, 4.856e-02, -2.968e-02, 3.792e-02, 3.741e-02, -1.219e-01, -9.926e-03, 2.699e-02, 1.334e-01, -8.214e-02, -1.995e-01, -2.105e-01, 4.662e-02, -7.978e-02));
	r += mul(s0_6, M4(1.279e-01, -5.037e-02, -1.254e-01, -3.991e-02, -7.019e-02, -8.011e-03, 4.877e-02, -5.599e-02, -1.239e-01, 9.881e-02, 8.140e-02, 2.080e-02, -6.133e-02, 1.521e-01, 9.341e-02, -1.993e-02));
	r += mul(s0_7, M4(9.153e-02, -1.382e-01, 8.967e-03, -3.080e-03, -1.442e-01, -2.357e-02, 7.129e-02, -1.434e-02, 3.620e-02, 8.407e-02, 3.919e-03, 6.316e-02, -8.939e-03, -9.933e-02, -6.192e-02, -8.681e-02));
	r += mul(s0_8, M4(6.957e-03, -4.553e-02, 5.956e-03, -6.719e-03, 8.182e-02, -1.431e-01, -1.488e-01, -1.173e-01, 3.132e-02, 3.172e-04, -2.277e-03, -7.174e-02, -1.223e-01, -1.345e-01, 6.271e-02, 8.307e-02));
	r += mul(s1_0, M4(1.716e-01, 6.050e-02, -1.721e-01, -2.615e-02, -6.689e-02, -6.403e-02, 1.671e-02, -5.725e-02, -3.256e-02, 3.706e-02, -8.892e-04, 6.339e-02, 7.727e-02, 3.285e-03, 7.875e-03, 2.382e-02));
	r += mul(s1_1, M4(4.630e-02, -2.784e-03, 9.294e-04, 9.025e-02, 1.469e-01, -1.389e-01, -5.967e-02, -2.278e-03, 8.451e-02, -5.820e-02, 6.430e-02, -1.609e-03, -8.415e-02, -6.368e-02, 1.839e-02, -3.186e-02));
	r += mul(s1_2, M4(3.776e-02, -2.515e-02, 7.445e-03, 1.261e-01, 1.279e-01, -9.470e-03, -1.937e-01, -1.122e-01, 1.241e-02, 1.798e-02, -6.296e-02, 6.090e-03, -3.424e-02, 2.696e-02, 2.894e-02, 3.680e-02));
	r += mul(s1_3, M4(2.324e-01, -1.822e-01, -2.604e-01, -3.510e-01, -1.556e-01, 1.419e-01, -5.486e-02, 3.484e-02, -1.500e-01, 5.979e-02, 9.939e-02, 3.635e-02, 5.014e-02, 2.347e-02, 3.438e-02, 3.699e-02));
	r += mul(s1_4, M4(9.605e-02, 7.876e-02, -2.466e-01, 2.754e-01, 2.685e-01, 1.557e-01, -3.205e-01, -2.336e-01, 2.957e-01, -1.920e-01, -5.294e-02, 6.993e-01, -1.850e-01, -1.669e-03, 4.646e-02, 1.821e-01));
	r += mul(s1_5, M4(1.297e-02, -1.085e-02, 1.793e-02, 1.030e-01, -3.140e-02, -7.048e-03, -2.284e-01, -1.560e-01, 2.796e-02, 2.055e-03, 9.669e-02, -1.601e-01, 3.931e-02, -9.274e-02, -2.263e-01, 4.133e-02));
	r += mul(s1_6, M4(1.727e-01, -1.523e-01, -1.125e-01, -7.188e-02, 8.264e-04, 1.735e-02, 6.288e-02, -3.359e-03, -8.280e-02, 3.600e-02, 1.766e-02, 3.355e-02, -9.134e-02, 7.099e-02, 6.596e-02, 6.195e-02));
	r += mul(s1_7, M4(7.009e-02, 8.427e-02, -2.620e-02, 9.355e-03, 9.528e-02, -9.205e-02, 6.320e-02, -7.338e-02, -1.835e-02, -2.867e-03, -1.608e-01, 2.702e-02, 4.078e-02, -5.788e-02, -4.060e-02, 3.549e-02));
	r += mul(s1_8, M4(8.139e-03, 8.890e-03, -6.240e-03, -6.809e-03, 1.119e-01, -1.596e-01, -6.388e-02, 5.331e-02, 6.452e-02, -4.873e-03, -2.565e-02, -1.350e-03, -6.500e-02, 7.154e-02, 4.528e-02, -5.399e-02));
	r += mul(s2_0, M4(6.520e-02, -9.232e-02, -6.920e-02, -8.876e-02, 9.021e-02, -7.271e-02, -1.256e-01, 2.875e-02, 9.253e-02, -3.055e-02, -1.764e-01, 6.166e-02, 2.404e-02, 9.306e-02, 5.098e-02, -7.086e-02));
	r += mul(s2_1, M4(1.166e-02, -2.885e-02, -2.103e-01, -5.878e-02, 2.408e-01, 1.344e-01, -6.805e-02, 1.094e-01, 4.074e-02, -5.186e-02, -2.560e-01, -5.094e-02, 1.264e-02, 7.370e-04, -1.877e-01, -3.956e-02));
	r += mul(s2_2, M4(1.187e-01, -1.020e-01, -8.643e-02, -3.553e-02, 3.055e-02, -1.189e-01, -1.556e-02, -1.059e-02, -3.763e-02, 9.905e-03, -3.339e-02, -3.583e-02, -4.837e-02, 1.138e-02, -5.239e-02, -8.167e-02));
	r += mul(s2_3, M4(-2.996e-02, 1.199e-02, 5.309e-02, -9.798e-02, -4.383e-01, 3.062e-02, 5.808e-02, 9.535e-03, 1.201e-01, 1.833e-03, 6.265e-02, -1.962e-01, -7.201e-03, -1.392e-02, 3.973e-02, 2.660e-02));
	r += mul(s2_4, M4(-5.135e-01, 4.374e-01, 7.872e-01, -3.661e-01, 1.884e-01, -6.401e-01, 2.372e-02, -3.364e-02, -7.397e-02, 4.979e-03, 9.943e-02, -3.014e-02, 1.716e-01, -1.470e-01, -7.452e-03, -8.809e-02));
	r += mul(s2_5, M4(2.324e-02, 5.124e-02, 3.664e-02, 9.178e-02, 2.340e-02, -1.388e-01, -7.542e-02, -5.883e-02, 4.571e-03, -1.117e-01, -7.808e-02, 2.386e-02, -6.173e-02, 8.360e-02, -7.747e-02, 9.254e-02));
	r += mul(s2_6, M4(-4.948e-02, -3.866e-02, 4.281e-02, 2.707e-02, -1.196e-01, 9.711e-02, 6.340e-02, -5.292e-02, 1.941e-02, -1.405e-01, -4.180e-02, -1.291e-01, -6.389e-02, 7.438e-02, 1.056e-01, 2.545e-02));
	r += mul(s2_7, M4(-1.641e-02, -1.113e-01, -8.511e-02, -1.946e-01, -1.403e-01, 2.912e-01, 4.750e-02, -1.929e-01, 1.047e-01, -1.376e-01, -1.772e-01, 9.338e-02, -5.268e-02, -4.969e-02, 3.062e-02, -6.640e-02));
	r += mul(s2_8, M4(4.568e-02, -9.022e-02, -3.946e-02, -1.321e-01, -1.310e-01, 1.160e-01, 6.347e-02, 3.626e-02, -3.508e-02, -1.544e-02, -9.331e-03, -1.096e-01, 2.791e-02, 1.030e-02, -5.842e-03, 7.420e-02));
	r += mul(s3_0, M4(1.159e-01, -8.880e-02, -5.169e-02, -8.536e-02, 1.040e-01, 2.586e-02, -4.954e-02, -1.708e-02, 7.052e-02, -2.319e-02, -2.562e-02, 1.203e-01, -1.184e-01, -1.431e-01, -1.203e-01, -1.588e-01));
	r += mul(s3_1, M4(7.718e-02, -5.737e-02, -1.612e-01, 1.188e-02, 1.588e-01, 4.773e-02, -7.840e-02, 4.243e-02, -7.427e-02, -1.495e-02, -3.275e-02, 5.961e-02, 8.325e-03, -1.627e-01, -5.680e-02, -6.345e-02));
	r += mul(s3_2, M4(1.143e-01, -2.707e-02, -4.915e-02, 1.141e-02, 7.393e-02, 9.398e-02, -2.180e-02, 1.180e-02, -1.036e-01, 2.825e-02, 6.768e-02, 3.811e-02, -2.215e-02, -2.234e-02, -8.526e-02, -7.506e-02));
	r += mul(s3_3, M4(8.701e-02, 6.722e-02, 7.149e-02, 1.062e-01, 9.638e-02, -3.974e-02, 6.270e-02, -1.077e-02, 1.138e-01, -2.682e-02, 3.770e-02, 4.697e-02, -1.723e-01, 8.073e-02, 9.858e-02, 5.540e-02));
	r += mul(s3_4, M4(-1.438e-01, 2.714e-01, 5.510e-01, 1.034e-01, -4.433e-02, -1.712e-01, 1.567e-01, -1.730e-02, -9.791e-02, -1.093e-01, 9.181e-02, 2.486e-01, -3.554e-02, -6.678e-02, 7.149e-02, -2.156e-01));
	r += mul(s3_5, M4(2.833e-02, 1.397e-02, -8.366e-03, 1.023e-03, -2.801e-02, -1.451e-01, 8.325e-02, -1.420e-01, 7.884e-03, -9.303e-02, 4.144e-04, 3.531e-02, 1.696e-02, -5.669e-02, -2.077e-02, 7.053e-02));
	r += mul(s3_6, M4(-2.363e-02, 7.553e-02, 3.897e-03, -9.945e-03, -1.255e-01, 5.241e-02, 8.673e-02, 2.398e-02, -2.276e-02, -2.225e-02, 6.790e-03, 4.892e-03, -1.334e-01, -7.969e-02, 4.093e-02, -1.469e-02));
	r += mul(s3_7, M4(2.945e-02, -3.375e-02, -1.540e-01, -8.695e-03, -1.538e-01, 8.024e-03, 9.616e-03, 4.449e-02, -5.544e-02, 5.737e-03, -8.161e-02, -1.151e-02, 2.958e-02, -4.667e-01, -1.103e-01, -6.480e-02));
	r += mul(s3_8, M4(1.752e-02, -6.749e-02, -7.586e-03, -3.273e-03, -4.019e-02, 3.170e-02, 1.745e-02, -6.017e-02, -4.104e-02, 4.166e-02, -5.635e-03, -4.111e-02, 1.029e-01, -6.457e-02, -2.986e-02, -1.378e-01));
	r += V4(-1.881e-02, 1.612e-02, 7.279e-03, -3.100e-02);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(5.688e-04, 3.672e-02, -3.019e-02, 5.886e-02, 8.740e-02, -2.299e-02, 1.845e-02, -8.664e-05, 1.064e-01, -3.329e-03, 5.471e-02, 9.740e-02, 7.254e-02, 5.944e-02, 4.600e-03, -2.515e-02));
	r += mul(s0_1, M4(2.829e-02, -1.238e-01, -1.784e-02, 6.837e-03, 6.681e-03, -8.239e-02, 3.651e-02, 9.040e-02, 9.384e-02, -2.415e-01, 1.291e-01, 1.363e-01, 1.471e-01, -3.295e-02, -1.116e-01, 7.368e-02));
	r += mul(s0_2, M4(4.207e-03, -3.976e-02, -4.315e-02, -3.329e-03, -9.859e-03, 2.580e-02, -4.399e-02, 1.135e-01, -4.208e-02, 2.589e-02, 1.107e-01, 1.220e-01, 6.822e-02, 1.782e-01, -7.362e-02, -6.079e-02));
	r += mul(s0_3, M4(1.164e-02, 6.908e-02, -6.258e-02, 1.674e-01, 1.082e-02, -7.517e-02, -1.078e-01, -6.127e-02, 2.888e-01, 2.392e-02, -8.303e-02, -8.562e-02, 8.519e-02, -1.463e-01, -4.793e-02, 3.760e-01));
	r += mul(s0_4, M4(6.528e-02, -1.115e-01, -8.851e-02, -4.565e-02, 4.354e-02, 1.002e-01, -1.144e-01, -2.054e-01, -1.676e-01, 1.785e-02, -2.198e-01, -2.437e-01, -5.952e-02, -5.449e-02, 2.956e-01, 3.076e-01));
	r += mul(s0_5, M4(4.119e-02, 5.788e-02, 8.019e-02, -1.394e-03, -1.086e-02, -3.613e-02, 1.062e-01, -2.981e-03, 7.384e-02, -2.304e-02, 1.606e-02, -5.822e-03, 2.312e-01, -1.204e-01, 2.160e-01, 1.510e-01));
	r += mul(s0_6, M4(7.881e-02, 3.012e-02, -4.343e-02, 1.509e-01, 8.031e-02, -5.178e-02, 5.011e-02, -6.244e-02, 1.248e-01, -3.526e-02, -5.451e-02, -1.973e-02, 5.702e-02, -9.358e-02, -7.400e-02, -8.932e-02));
	r += mul(s0_7, M4(2.953e-03, -7.772e-03, -8.260e-03, -9.625e-02, 1.332e-01, -8.431e-02, 3.388e-01, -5.864e-02, 1.071e-01, 6.332e-03, 1.314e-01, -1.843e-02, -1.035e-01, -1.363e-01, 3.899e-01, 2.672e-01));
	r += mul(s0_8, M4(3.124e-02, -2.568e-02, -7.641e-02, -5.547e-02, 5.036e-02, -4.877e-02, 4.592e-02, 1.027e-01, -1.899e-02, 1.321e-02, 5.421e-02, 2.251e-02, 5.842e-02, -1.480e-01, 3.580e-01, 5.340e-03));
	r += mul(s1_0, M4(4.173e-02, 1.675e-01, 5.517e-02, 2.699e-03, 3.598e-02, 6.757e-03, 5.153e-02, 7.852e-02, 4.843e-02, -1.177e-02, 9.230e-03, -1.616e-01, -4.858e-02, 1.079e-01, -1.207e-04, 7.962e-03));
	r += mul(s1_1, M4(7.886e-02, -1.424e-01, 2.539e-02, 1.016e-01, -1.875e-02, -5.797e-02, 5.828e-02, 1.059e-01, -4.130e-03, -2.208e-02, 5.568e-02, 3.617e-02, 4.646e-02, -5.824e-02, 5.880e-03, 6.268e-02));
	r += mul(s1_2, M4(-4.624e-02, -5.356e-02, 2.242e-02, 1.247e-02, 4.394e-02, 6.186e-02, 3.579e-02, 1.190e-01, -4.702e-02, 8.606e-02, 4.724e-02, 9.316e-02, 1.018e-02, -3.479e-02, 3.398e-02, 7.063e-02));
	r += mul(s1_3, M4(2.389e-01, -2.981e-01, -1.957e-01, 2.188e-01, -1.957e-02, -1.351e-02, -1.646e-01, -1.317e-01, 1.243e-01, -1.199e-01, -9.543e-02, 1.664e-01, 1.018e-01, 8.479e-02, -1.932e-02, 1.425e-01));
	r += mul(s1_4, M4(-9.159e-03, 3.394e-03, -8.227e-02, -2.890e-02, 1.389e-02, 3.313e-02, -2.407e-01, -1.018e-01, -4.105e-01, 7.271e-02, -1.661e-01, -3.718e-01, -1.763e-02, -1.274e-01, -6.680e-02, 2.165e-01));
	r += mul(s1_5, M4(-4.858e-02, 4.332e-02, -3.521e-02, 2.793e-02, 1.084e-01, 6.633e-02, 3.625e-02, 9.765e-03, -2.499e-02, 8.401e-02, 3.209e-02, -2.144e-02, -9.409e-03, 1.840e-01, -2.559e-02, 1.915e-02));
	r += mul(s1_6, M4(-4.392e-02, 1.275e-01, 6.713e-02, -3.647e-02, 1.555e-02, -4.985e-02, 1.988e-02, 1.315e-02, 2.540e-02, -3.230e-02, -4.161e-03, -5.774e-03, 1.151e-02, -4.275e-02, -1.013e-01, -1.802e-02));
	r += mul(s1_7, M4(1.050e-01, 3.357e-02, -1.347e-01, -1.113e-01, -3.280e-02, -4.527e-02, 3.094e-01, 8.680e-03, 8.176e-02, -2.452e-02, 3.044e-02, 7.119e-02, -1.680e-01, -3.686e-02, 2.534e-01, -4.235e-02));
	r += mul(s1_8, M4(2.336e-03, 2.195e-02, 1.832e-02, 7.765e-03, 3.933e-02, -3.232e-02, 3.470e-01, 8.569e-02, -1.912e-02, -2.251e-02, -4.370e-02, -6.495e-04, 3.226e-02, 7.114e-02, 2.668e-01, -4.600e-02));
	r += mul(s2_0, M4(7.149e-04, 8.988e-02, 6.030e-02, 1.483e-01, 5.835e-02, 2.165e-01, -3.202e-02, -6.298e-02, 2.784e-02, 7.362e-02, 2.786e-02, -4.449e-02, 6.874e-03, -5.333e-02, -6.490e-02, 6.972e-02));
	r += mul(s2_1, M4(-5.091e-03, 2.606e-01, -6.726e-02, -6.025e-02, 8.217e-03, 2.388e-01, -1.158e-01, -4.155e-01, -6.928e-02, 2.142e-01, -8.720e-02, 9.050e-03, 4.254e-03, 5.547e-02, -8.569e-02, 3.419e-02));
	r += mul(s2_2, M4(5.808e-02, -7.165e-04, -1.541e-02, 8.476e-02, -4.877e-02, 9.449e-02, 8.479e-02, 7.788e-02, 1.580e-04, -6.250e-02, -3.124e-02, -1.937e-02, 6.349e-02, -4.032e-02, -1.110e-03, 2.054e-02));
	r += mul(s2_3, M4(5.120e-02, -4.224e-02, -1.087e-01, -1.632e-01, 6.137e-02, 1.382e-01, 8.614e-02, 3.627e-01, -8.182e-02, -6.532e-02, 2.744e-02, 1.243e-01, 1.058e-01, -1.977e-01, -1.205e-01, -1.741e-01));
	r += mul(s2_4, M4(5.270e-01, -7.763e-01, 1.832e-01, 2.488e-01, -3.487e-01, -9.680e-02, 1.851e-01, -1.153e-01, 4.721e-02, 5.584e-01, 2.763e-01, 1.361e-01, 1.878e-01, -1.200e-01, 4.679e-02, 1.467e-01));
	r += mul(s2_5, M4(-1.485e-01, 3.193e-01, 3.408e-01, -1.238e-02, -1.286e-01, 1.483e-01, 9.357e-02, -8.718e-02, 2.273e-02, -1.044e-01, 3.078e-03, 6.951e-02, -1.600e-02, 5.284e-02, -1.654e-03, -4.139e-02));
	r += mul(s2_6, M4(-1.162e-01, -6.352e-02, -2.073e-02, -1.057e-02, -3.823e-02, -1.300e-01, -4.552e-05, -1.936e-01, -1.973e-01, 2.672e-03, 2.880e-02, -6.273e-02, -4.745e-02, -5.111e-02, 1.505e-01, 7.324e-03));
	r += mul(s2_7, M4(-4.098e-02, -1.451e-01, -3.327e-01, -7.392e-02, -5.286e-02, -1.951e-02, 8.099e-02, -2.970e-01, -1.123e-01, 1.693e-01, -4.979e-02, 1.640e-01, -7.564e-02, 6.345e-03, 3.799e-01, -1.148e-02));
	r += mul(s2_8, M4(2.230e-01, -8.680e-03, -2.462e-01, -5.086e-02, -3.219e-02, 6.402e-02, -1.549e-01, -5.572e-02, -8.034e-02, -4.526e-02, 7.795e-02, 8.162e-03, 2.896e-02, 8.612e-02, 9.745e-02, 8.804e-03));
	r += mul(s3_0, M4(8.885e-03, 8.709e-02, 6.558e-02, 5.028e-02, 3.150e-02, 2.298e-02, -2.835e-02, 4.282e-02, -3.829e-02, 1.059e-02, 2.755e-03, 4.156e-02, 2.613e-02, -1.070e-02, -2.272e-02, 1.261e-01));
	r += mul(s3_1, M4(7.089e-02, 7.200e-02, -3.582e-02, 7.912e-02, 8.531e-02, 8.865e-02, -1.579e-02, 1.484e-01, -6.631e-02, 3.442e-02, -6.856e-02, -3.981e-02, 1.284e-02, -1.128e-01, -1.015e-01, -1.540e-01));
	r += mul(s3_2, M4(5.310e-02, -2.127e-02, 1.918e-02, 6.871e-02, 4.216e-02, 9.736e-02, 6.334e-02, 2.278e-03, 1.639e-02, -3.185e-02, -3.748e-03, -5.681e-02, -5.580e-02, 1.870e-01, -6.493e-03, 7.782e-02));
	r += mul(s3_3, M4(1.539e-01, 4.926e-02, -4.462e-02, 1.107e-01, -3.657e-02, 5.018e-02, -2.961e-02, 2.309e-02, -1.414e-02, 4.924e-02, 5.627e-02, 1.845e-01, -4.096e-02, -8.844e-02, -1.260e-01, -2.193e-01));
	r += mul(s3_4, M4(2.463e-01, -4.174e-01, 2.340e-02, 9.941e-02, 1.333e-03, -8.609e-03, 4.121e-02, -2.659e-02, -7.790e-02, 2.262e-01, 2.117e-01, 1.358e-01, 1.623e-02, 2.361e-01, 1.108e-01, 2.494e-01));
	r += mul(s3_5, M4(-5.263e-02, 1.507e-01, 1.624e-01, 1.405e-02, 2.069e-02, -4.688e-02, 6.673e-02, -2.496e-02, -3.657e-02, -2.901e-02, -2.053e-02, -1.823e-03, 4.504e-02, -4.760e-02, 1.028e-01, 5.159e-02));
	r += mul(s3_6, M4(1.489e-01, -7.115e-02, -1.239e-02, 9.763e-02, -3.913e-02, -1.554e-02, 1.139e-01, -1.943e-02, -1.411e-02, -5.851e-02, 1.622e-01, -9.377e-02, 5.611e-02, 4.060e-02, 2.351e-01, 1.602e-01));
	r += mul(s3_7, M4(2.851e-02, -1.486e-01, 1.563e-01, 1.067e-01, -7.863e-02, -5.886e-02, 5.760e-02, 1.534e-02, -2.988e-02, 2.116e-02, 1.153e-01, 7.868e-02, 8.152e-02, -6.469e-02, 2.508e-01, 8.697e-02));
	r += mul(s3_8, M4(7.435e-03, 1.921e-02, -4.836e-02, -3.663e-02, -5.743e-02, -4.957e-02, -1.997e-01, -6.801e-02, -1.138e-01, 4.009e-02, 4.413e-02, -2.234e-02, 6.661e-02, 1.634e-02, 9.614e-02, 1.424e-02));
	r += V4(1.641e-02, -9.633e-03, 7.003e-03, 8.843e-03);
	return r;
}
void Pass7(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t3[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 8
//!DESC CuNNy-6x8C-EASU-NVL-DS-conv6
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t2, t3
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t2, float2(x, y))
#define l1(x, y) O(t3, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(1.420e-02, 3.640e-02, 3.511e-02, -3.542e-04, -8.081e-02, -3.459e-02, -1.631e-02, 4.453e-02, 6.061e-02, -2.596e-02, -1.339e-02, -9.353e-02, -1.122e-02, 2.284e-02, 2.545e-02, 3.667e-02));
	r += mul(s0_1, M4(-9.967e-02, -1.717e-01, 3.023e-02, -5.676e-03, 1.844e-02, 2.255e-02, 2.842e-02, -6.522e-03, -1.310e-02, -1.273e-01, 2.442e-02, 8.212e-02, 4.032e-02, -1.657e-01, 2.018e-02, -1.373e-01));
	r += mul(s0_2, M4(-3.322e-02, 3.923e-02, 3.871e-02, -3.621e-02, -5.423e-02, 8.491e-02, 6.001e-03, 4.911e-03, -4.424e-03, -4.627e-02, 4.826e-03, 9.133e-03, -5.647e-05, -4.936e-02, 3.024e-03, 6.169e-03));
	r += mul(s0_3, M4(-2.842e-02, -9.684e-02, 4.690e-02, -2.726e-02, 1.034e-03, -1.186e-02, -9.741e-02, 2.873e-02, 1.645e-01, -1.694e-01, 7.791e-02, -8.469e-02, -1.454e-01, -2.472e-01, -1.054e-02, 1.840e-01));
	r += mul(s0_4, M4(-2.089e-01, 2.887e-01, 2.789e-01, -4.113e-01, 4.527e-02, 7.824e-03, 1.294e-01, -9.075e-02, 4.937e-03, 4.011e-02, -8.240e-02, 2.051e-01, -1.211e-01, -1.733e-01, -5.766e-02, -5.023e-01));
	r += mul(s0_5, M4(-1.090e-01, 1.583e-01, 4.369e-02, -1.962e-02, -1.241e-01, 6.194e-02, -1.843e-02, 2.753e-03, -7.346e-02, 5.147e-02, 3.264e-02, -6.052e-03, 6.936e-02, -8.817e-02, -4.965e-03, -3.881e-02));
	r += mul(s0_6, M4(-2.987e-02, 2.804e-02, 9.280e-03, 3.156e-02, 4.088e-03, 2.873e-02, -4.444e-02, 2.982e-02, 4.922e-02, -6.496e-02, 1.644e-02, -2.278e-02, -9.790e-03, 3.947e-02, 6.397e-03, 5.746e-02));
	r += mul(s0_7, M4(-2.208e-01, -7.222e-02, 3.233e-02, -3.937e-02, 3.423e-02, 2.068e-02, -5.779e-02, -6.867e-02, 4.402e-02, -1.025e-01, 1.402e-01, -2.374e-02, -3.346e-02, -6.227e-02, 1.182e-01, -9.082e-04));
	r += mul(s0_8, M4(-3.616e-02, -6.506e-02, -4.760e-02, 5.794e-02, -5.984e-03, 7.277e-03, -2.244e-03, -1.576e-03, -8.957e-03, -3.181e-03, 3.363e-02, -2.343e-02, -2.768e-02, -7.642e-02, 7.946e-02, 2.423e-02));
	r += mul(s1_0, M4(2.249e-02, 2.527e-02, 8.664e-03, 2.599e-02, 2.439e-02, -1.448e-02, -9.301e-02, 1.344e-01, 1.298e-02, -3.099e-02, -2.656e-02, -9.214e-02, -1.140e-02, 3.201e-02, -1.314e-02, 4.143e-02));
	r += mul(s1_1, M4(-3.002e-02, -5.805e-02, -7.514e-03, -2.281e-02, 3.714e-02, -4.906e-03, -6.455e-02, 8.043e-03, -3.557e-02, 5.190e-03, 7.378e-02, 3.977e-02, 2.816e-02, -1.364e-02, 1.713e-02, -2.156e-02));
	r += mul(s1_2, M4(-3.564e-02, -9.848e-02, 3.150e-02, 2.003e-02, -1.965e-01, 9.378e-02, -1.123e-02, -2.218e-02, -1.962e-02, -5.935e-02, 3.625e-02, -1.555e-02, 1.755e-02, -1.741e-02, -2.649e-02, -8.410e-03));
	r += mul(s1_3, M4(7.348e-02, -8.077e-02, 4.041e-02, 3.073e-02, -1.321e-01, -2.979e-01, 4.933e-02, 3.791e-02, -9.059e-03, -7.813e-02, 1.002e-01, -1.377e-01, -7.806e-03, 6.164e-02, -1.632e-02, 2.039e-02));
	r += mul(s1_4, M4(-2.395e-01, -8.719e-02, 1.184e-01, 8.758e-02, 3.127e-01, -8.280e-04, 9.590e-01, 6.277e-01, -2.353e-01, 5.801e-01, 3.662e-01, 7.424e-01, -3.588e-04, 4.536e-02, -7.687e-02, -1.237e-01));
	r += mul(s1_5, M4(-1.773e-01, -5.696e-03, -5.682e-02, 5.751e-02, -2.085e-01, 1.470e-02, 1.499e-01, -3.872e-02, 3.886e-02, 1.013e-01, 1.161e-02, -3.673e-02, 3.937e-02, 9.620e-03, -1.209e-02, -2.435e-02));
	r += mul(s1_6, M4(1.882e-02, -4.865e-03, -3.588e-02, 1.010e-02, -5.257e-03, 5.578e-02, -5.211e-02, 3.469e-02, -2.163e-02, -1.513e-01, 7.597e-02, -5.300e-02, -8.375e-02, 2.364e-03, 5.620e-02, 4.118e-02));
	r += mul(s1_7, M4(-5.948e-02, 7.052e-02, -4.029e-02, -1.779e-02, 1.028e-02, -3.863e-02, 6.567e-02, -8.373e-02, 4.903e-02, -2.087e-01, 3.294e-01, -3.836e-02, -1.999e-02, -5.225e-03, 5.008e-02, 1.594e-02));
	r += mul(s1_8, M4(-8.021e-02, 4.687e-02, 3.140e-02, 3.135e-02, 1.719e-02, -1.051e-01, 1.540e-02, -1.934e-02, 5.227e-03, -8.259e-02, 3.233e-02, -2.892e-03, 1.800e-02, -1.355e-02, 2.326e-02, 2.248e-03));
	r += mul(s2_0, M4(2.386e-02, 6.017e-03, 1.943e-02, 4.457e-02, 4.642e-03, -1.960e-02, -4.709e-03, 3.453e-02, 1.134e-01, 3.467e-01, -6.954e-02, -3.868e-02, -2.296e-02, 8.936e-03, 2.525e-03, -5.078e-03));
	r += mul(s2_1, M4(-4.063e-03, -6.218e-02, 1.293e-02, -1.187e-02, -4.633e-02, -1.627e-01, 5.874e-02, 4.993e-02, -1.851e-01, 6.429e-01, 8.863e-02, -6.335e-02, 5.202e-02, -5.059e-02, -7.983e-02, -5.557e-03));
	r += mul(s2_2, M4(1.084e-01, -1.403e-01, -5.208e-02, -2.407e-02, -4.781e-02, 3.688e-02, 2.440e-02, 4.362e-02, 5.087e-02, 8.209e-02, -6.443e-02, -4.880e-02, -8.017e-02, 2.197e-01, 1.354e-01, 2.707e-02));
	r += mul(s2_3, M4(1.141e-01, 5.069e-02, 5.422e-02, -1.909e-02, 1.649e-02, 2.584e-02, 5.467e-02, -1.888e-01, -4.701e-02, -8.827e-02, -5.829e-02, -6.294e-02, -3.117e-02, 2.479e-02, -5.429e-02, -3.706e-02));
	r += mul(s2_4, M4(-2.329e-02, 5.929e-02, -7.214e-02, 7.520e-02, 3.526e-01, 1.301e-01, -5.627e-02, 3.407e-01, 2.478e-01, -6.946e-02, -1.834e-01, -1.355e-01, 1.284e-01, -4.601e-01, -1.153e-01, 7.076e-02));
	r += mul(s2_5, M4(-8.946e-03, -3.157e-02, 6.057e-02, 1.914e-02, 5.156e-02, -1.960e-01, 1.452e-01, 1.441e-01, 7.935e-02, -6.353e-02, 3.120e-02, 1.395e-03, -1.176e-01, 5.384e-02, -6.030e-01, -1.834e-01));
	r += mul(s2_6, M4(8.301e-03, -3.871e-02, -6.569e-03, 2.095e-03, 3.862e-02, -5.613e-02, -1.539e-02, -2.107e-02, 5.839e-03, 5.875e-02, 2.554e-02, -7.818e-03, -3.488e-02, 5.373e-02, -4.432e-02, -5.192e-02));
	r += mul(s2_7, M4(4.544e-02, -5.265e-02, 3.837e-02, -2.664e-02, 1.106e-01, -4.766e-02, -4.985e-02, 6.520e-02, -5.163e-02, 5.664e-02, 5.760e-03, -1.180e-02, 2.699e-01, 1.334e-01, -3.999e-02, 3.267e-02));
	r += mul(s2_8, M4(-5.270e-02, 5.154e-02, 2.583e-02, 3.095e-02, -1.210e-01, 9.177e-02, 5.368e-03, -2.034e-02, 9.390e-03, 2.172e-02, -2.009e-02, 2.124e-02, -1.072e-01, 8.720e-03, -9.321e-02, -4.617e-02));
	r += mul(s3_0, M4(-2.481e-02, 3.223e-01, 3.691e-02, -2.075e-01, 2.150e-02, -2.120e-02, -4.396e-02, -2.142e-02, -1.552e-02, 1.176e-01, -4.335e-02, 2.649e-02, -2.787e-02, -1.073e-04, -1.965e-02, -2.634e-02));
	r += mul(s3_1, M4(7.246e-03, -2.253e-01, 7.352e-03, -1.687e-01, 9.492e-03, 3.079e-02, 3.188e-02, 6.440e-02, -1.711e-01, 1.135e-01, -9.334e-03, -5.871e-03, 1.142e-01, -5.808e-02, 1.197e-02, 8.133e-02));
	r += mul(s3_2, M4(9.076e-02, -4.823e-02, -8.056e-02, -4.968e-02, -3.122e-02, -3.395e-03, -2.745e-02, -1.848e-02, 1.177e-01, -2.143e-02, 1.789e-02, -3.190e-02, -1.461e-01, 4.749e-02, 2.180e-02, 4.200e-02));
	r += mul(s3_3, M4(2.209e-01, 6.443e-02, -7.497e-02, -1.125e-01, 9.436e-02, -6.801e-02, 5.391e-02, 2.838e-02, 4.735e-02, 8.312e-02, -6.296e-02, 1.111e-02, -4.421e-02, 1.790e-04, -2.596e-02, -5.774e-02));
	r += mul(s3_4, M4(1.200e-01, 2.335e-01, -6.808e-01, 3.609e-01, 1.484e-01, 9.636e-02, -1.814e-01, 1.145e-01, -1.048e-01, -9.412e-02, 1.789e-01, -5.266e-02, 2.852e-01, -1.635e-02, 8.401e-04, 7.643e-02));
	r += mul(s3_5, M4(-5.039e-02, 1.243e-01, 1.261e-01, 4.250e-03, -6.412e-02, -2.679e-03, 7.737e-02, 4.381e-02, 6.838e-02, 9.431e-03, -2.847e-02, -2.911e-02, -2.672e-01, 1.018e-01, -3.922e-02, 1.013e-01));
	r += mul(s3_6, M4(7.071e-02, 2.631e-02, 4.685e-02, -6.189e-02, 8.832e-02, 3.630e-02, -2.958e-02, 4.322e-03, 2.177e-02, -5.112e-02, -3.462e-02, 2.920e-02, -6.566e-02, -1.643e-02, 1.009e-02, -9.012e-03));
	r += mul(s3_7, M4(-1.376e-01, 5.528e-02, -3.059e-02, -1.157e-02, -1.150e-01, 8.612e-03, 8.719e-02, 5.619e-02, -3.282e-04, -3.332e-02, -1.343e-02, -2.999e-02, 2.090e-01, -1.459e-03, -4.849e-02, -2.518e-02));
	r += mul(s3_8, M4(1.194e-01, -2.864e-02, 5.992e-03, 4.188e-02, -6.789e-03, 1.860e-02, -3.034e-02, -1.407e-02, 1.248e-02, 4.044e-03, -1.763e-02, 8.762e-03, -1.103e-01, -3.806e-02, 2.599e-02, 1.107e-02));
	r += V4(2.814e-03, -1.468e-02, 1.011e-02, 1.440e-03);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-9.112e-02, -7.740e-02, -5.965e-02, -2.503e-03, 7.768e-03, 5.365e-03, -1.883e-02, -3.399e-02, -9.091e-02, -3.387e-04, -3.963e-02, 4.860e-02, 1.380e-01, 1.276e-02, 2.132e-02, 4.603e-02));
	r += mul(s0_1, M4(-1.248e-01, -9.169e-02, -8.326e-02, 5.557e-02, 4.022e-02, 3.549e-02, -1.836e-02, -5.216e-02, -1.781e-01, -1.146e-01, -1.161e-01, 3.362e-02, 1.636e-01, -2.744e-02, 1.507e-01, -9.841e-02));
	r += mul(s0_2, M4(-7.045e-02, 2.238e-02, -9.022e-02, -3.472e-02, 1.987e-02, 4.420e-02, 5.992e-05, 3.732e-03, -1.607e-02, -1.320e-01, -3.653e-02, -1.686e-03, 3.144e-02, -2.756e-02, 1.291e-02, 3.499e-02));
	r += mul(s0_3, M4(4.171e-02, 8.315e-02, -3.402e-03, 4.901e-02, -1.955e-02, 5.292e-02, 1.151e-01, 5.450e-02, 3.410e-02, -5.568e-02, 1.732e-02, -4.528e-02, 8.973e-02, -6.989e-02, -2.744e-01, 1.385e-02));
	r += mul(s0_4, M4(7.752e-02, -5.764e-02, 1.288e-01, -2.581e-01, 1.382e-01, -5.341e-02, -1.674e-01, -1.928e-01, -5.880e-01, -8.722e-02, 1.693e-01, 2.222e-01, 2.967e-01, -1.584e-01, -1.355e+00, -2.493e-01));
	r += mul(s0_5, M4(-8.405e-02, 7.165e-02, -3.779e-02, 5.844e-02, 1.521e-01, 3.259e-03, -3.685e-03, -2.275e-02, 6.083e-02, 1.044e-01, 7.008e-02, -1.765e-02, 2.383e-02, -2.206e-02, -3.655e-02, -1.211e-02));
	r += mul(s0_6, M4(-5.618e-02, -4.092e-02, -4.342e-02, -9.242e-02, 6.155e-02, -4.835e-02, -7.449e-03, -1.095e-01, 4.641e-02, 3.207e-02, -5.892e-02, -4.151e-02, 2.072e-02, 1.581e-02, 3.615e-02, 7.339e-02));
	r += mul(s0_7, M4(-2.119e-01, -2.751e-02, 4.337e-02, -2.609e-01, 9.779e-02, -2.400e-02, -5.553e-02, 5.472e-02, -1.794e-01, 7.478e-02, -4.081e-02, 2.569e-02, -1.850e-02, 7.740e-02, 1.008e-01, 6.083e-02));
	r += mul(s0_8, M4(-8.113e-02, -9.978e-02, 1.415e-02, -3.186e-01, 1.091e-02, -2.821e-02, -9.229e-03, -3.616e-02, 4.081e-02, 1.822e-02, -6.903e-02, -1.338e-02, 8.242e-02, 2.225e-02, 2.046e-02, 3.097e-02));
	r += mul(s1_0, M4(-4.335e-02, -7.564e-02, -2.526e-02, -4.625e-02, 3.649e-02, 1.509e-01, -6.639e-03, -7.058e-02, 2.599e-02, 9.196e-02, -4.162e-02, 3.079e-02, 1.315e-01, 1.570e-02, 1.212e-01, -2.773e-02));
	r += mul(s1_1, M4(-1.106e-01, -6.950e-02, -7.715e-02, 5.434e-02, 1.167e-02, -7.730e-02, 6.123e-02, -2.135e-01, -2.387e-02, -2.869e-02, -9.924e-02, 3.130e-02, 1.791e-01, 7.095e-02, 1.498e-01, -1.410e-02));
	r += mul(s1_2, M4(-7.571e-02, -1.405e-01, -6.625e-02, 1.068e-02, -1.329e-03, 1.349e-01, -1.440e-02, 4.085e-02, 5.763e-02, -1.438e-01, -5.020e-02, 1.531e-02, 2.733e-02, 6.593e-02, 5.254e-02, 8.975e-03));
	r += mul(s1_3, M4(4.189e-02, 4.474e-02, 6.620e-02, -5.509e-03, 4.142e-02, -7.562e-02, 2.318e-01, 1.194e-01, 1.368e-01, -1.884e-01, -1.490e-01, 4.749e-02, 2.424e-02, -1.815e-02, -1.377e-01, -5.893e-04));
	r += mul(s1_4, M4(-7.710e-02, 4.550e-02, 4.773e-02, -2.045e-01, 1.881e-01, -3.856e-01, -1.869e-01, -8.472e-01, -2.575e-01, -4.465e-01, -9.839e-02, 8.333e-02, 2.475e-02, -1.070e-02, -3.018e-01, -9.305e-02));
	r += mul(s1_5, M4(-1.216e-01, -1.947e-02, 7.642e-02, 7.797e-02, 1.700e-01, 6.815e-02, -2.542e-02, 8.071e-02, 1.215e-01, -7.021e-03, -5.026e-03, -1.479e-02, -3.646e-02, 7.584e-03, -2.894e-02, 1.833e-02));
	r += mul(s1_6, M4(1.811e-02, 5.923e-03, -2.105e-02, -7.760e-02, 1.140e-01, -9.778e-02, -5.299e-02, -5.792e-02, 1.314e-01, 1.825e-04, -5.875e-02, -5.314e-03, 3.433e-02, -3.930e-02, 4.456e-02, -1.196e-02));
	r += mul(s1_7, M4(-1.420e-01, -1.214e-02, -1.818e-02, 3.193e-02, 1.647e-02, 2.559e-02, -3.999e-02, 7.810e-02, 3.983e-02, -5.656e-02, -1.201e-01, 6.517e-02, 5.744e-02, 1.642e-02, 6.611e-02, 9.946e-03));
	r += mul(s1_8, M4(-4.812e-02, 1.075e-01, 5.498e-02, 2.695e-02, 5.654e-02, -7.444e-02, -8.853e-02, -1.230e-01, 1.440e-01, -8.080e-02, -7.415e-02, -1.129e-01, 5.235e-02, -4.568e-03, 1.817e-02, 5.150e-02));
	r += mul(s2_0, M4(5.898e-02, -3.904e-02, 2.724e-02, -1.857e-02, -6.089e-02, 7.493e-02, -5.769e-02, 5.758e-02, -8.642e-02, 1.542e-01, -1.830e-01, 4.922e-02, 7.874e-03, 2.240e-02, -1.369e-02, 7.150e-03));
	r += mul(s2_1, M4(4.223e-02, 4.465e-02, 4.950e-02, 9.302e-02, -7.203e-02, -2.971e-01, -2.958e-02, -5.324e-02, 1.314e-01, 1.323e-01, -1.390e-01, -7.189e-02, -1.533e-01, 8.179e-02, -1.645e-01, 2.810e-02));
	r += mul(s2_2, M4(-8.741e-02, -1.207e-02, -7.683e-03, -1.505e-02, -6.529e-02, -5.683e-02, -2.854e-02, -7.733e-03, 5.563e-02, 1.212e-01, -2.553e-02, 3.522e-02, 6.349e-02, -1.632e-01, 3.454e-02, -3.985e-02));
	r += mul(s2_3, M4(1.878e-02, 4.254e-03, 1.742e-03, 3.235e-02, -1.013e-01, -8.668e-02, 8.721e-02, 1.556e-01, -1.160e-01, 4.783e-02, 1.967e-02, -3.867e-02, -3.749e-02, 4.856e-02, 7.096e-02, 6.743e-02));
	r += mul(s2_4, M4(-3.039e-02, 1.403e-01, 6.661e-02, 1.014e-02, 6.069e-02, 4.177e-01, -1.548e-02, -1.492e-01, 1.641e-01, -1.333e-01, -2.882e-01, 6.905e-02, -9.306e-02, 2.362e-01, 4.190e-01, 1.415e-01));
	r += mul(s2_5, M4(-1.852e-01, -3.625e-02, -1.960e-02, 4.561e-02, -7.820e-02, -2.287e-01, 1.678e-02, 1.365e-01, -2.007e-02, -4.067e-02, -1.348e-02, -4.123e-03, 1.781e-01, 8.436e-02, 4.756e-02, -7.601e-02));
	r += mul(s2_6, M4(1.467e-02, 2.405e-02, -4.800e-02, -9.693e-02, 8.042e-02, 4.007e-02, -9.913e-02, -5.357e-02, -8.330e-03, -1.145e-02, 3.938e-03, 1.033e-01, -1.766e-03, 5.925e-03, 1.776e-02, 3.632e-02));
	r += mul(s2_7, M4(3.784e-02, 1.626e-02, -4.499e-02, 3.122e-02, -4.973e-03, -1.714e-01, -2.878e-02, -4.482e-01, -7.768e-03, -1.654e-02, 2.689e-02, 5.463e-02, 9.250e-02, -8.831e-02, -1.153e-02, 1.055e-01));
	r += mul(s2_8, M4(-7.652e-02, -1.562e-02, 2.564e-02, 5.607e-02, -5.791e-02, 9.349e-02, 3.859e-02, 1.541e-01, 9.921e-03, -4.481e-03, 2.664e-02, -3.824e-02, 3.298e-02, 7.922e-02, 8.329e-02, -4.004e-02));
	r += mul(s3_0, M4(-4.291e-02, -1.015e-01, -9.572e-02, 1.023e-01, -6.330e-02, 9.936e-02, -3.031e-02, 7.500e-02, -3.280e-02, 7.778e-02, 1.737e-03, 6.610e-02, -2.623e-02, 3.436e-02, 6.516e-03, 1.703e-02));
	r += mul(s3_1, M4(-1.400e-01, 1.064e-01, -3.099e-02, 4.118e-02, -9.859e-02, -1.058e-01, -4.820e-02, 2.099e-02, 5.177e-02, 1.572e-01, -3.141e-02, -1.048e-01, -6.061e-02, -4.709e-03, 2.591e-02, -3.648e-02));
	r += mul(s3_2, M4(-2.006e-01, 7.413e-02, -3.083e-02, 1.968e-02, -3.184e-02, 1.522e-02, -3.160e-02, -8.039e-03, 5.291e-02, 4.192e-02, 5.432e-03, 3.109e-02, -3.088e-02, -5.870e-02, -4.015e-02, 6.850e-03));
	r += mul(s3_3, M4(3.834e-02, 1.117e-01, -6.573e-02, 1.702e-03, -6.534e-03, -8.447e-02, 1.255e-01, -4.218e-02, -2.823e-02, 8.861e-02, 3.732e-02, 3.497e-02, -4.236e-02, 1.623e-02, -4.048e-02, 8.121e-02));
	r += mul(s3_4, M4(2.808e-02, 1.077e-03, 2.069e-01, -1.499e-01, -1.582e-01, 1.353e-01, 1.567e-01, 8.525e-02, 6.257e-02, 3.677e-02, -1.362e-01, -9.266e-02, -3.910e-02, -6.960e-02, 1.688e-01, -6.483e-02));
	r += mul(s3_5, M4(-2.784e-01, 6.089e-02, -9.344e-02, 1.790e-01, -8.666e-02, -1.776e-02, 2.350e-02, 1.926e-02, 3.940e-03, -7.462e-03, -6.455e-02, 5.763e-04, 9.171e-02, 7.706e-02, 1.853e-01, -3.684e-02));
	r += mul(s3_6, M4(2.024e-02, -7.827e-03, 7.508e-03, 2.479e-02, 1.883e-02, 7.359e-02, -4.345e-02, 2.532e-02, 2.870e-02, -4.207e-02, 1.835e-02, -1.377e-01, -2.778e-02, -5.055e-02, 9.141e-03, -9.513e-03));
	r += mul(s3_7, M4(2.806e-03, 2.538e-02, 7.091e-02, 5.037e-02, 5.155e-02, -3.133e-03, -3.373e-02, -2.437e-01, -1.632e-02, -2.748e-02, -2.651e-02, 6.923e-02, 2.970e-02, 2.252e-02, -7.207e-02, -2.823e-02));
	r += mul(s3_8, M4(-8.161e-02, -5.502e-02, 3.765e-03, 2.173e-03, 6.278e-02, 5.027e-02, 2.990e-03, -6.832e-03, -5.625e-02, -3.384e-03, 7.006e-03, -2.851e-03, 5.963e-02, 1.119e-02, -1.582e-02, -9.507e-02));
	r += V4(-1.458e-02, -6.779e-03, -2.687e-03, 5.852e-03);
	return r;
}
void Pass8(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 9
//!DESC CuNNy-6x8C-EASU-NVL-DS-out
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(2.336e-03, -9.484e-03, 1.068e-03, -5.318e-04, -1.915e-04, 3.594e-04, 1.094e-02, -9.030e-04, -6.324e-02, -3.153e-02, -3.025e-02, -2.737e-02, 6.667e-03, -4.608e-03, 9.675e-03, 1.096e-03));
	r += mul(s0_1, M4(-1.820e-02, -7.239e-03, 1.348e-02, -1.807e-02, -5.335e-02, -2.410e-02, -1.846e-04, 2.321e-02, 3.200e-02, -8.633e-02, 1.886e-02, 4.822e-02, -3.232e-02, -3.976e-03, 8.522e-03, -3.972e-02));
	r += mul(s0_2, M4(-6.838e-03, -1.154e-02, -2.495e-03, -1.036e-02, 2.266e-02, -3.697e-02, 1.674e-04, -2.384e-03, 5.761e-04, 3.893e-02, 5.335e-03, 3.336e-03, 1.613e-03, 1.200e-02, -2.067e-03, -9.421e-03));
	r += mul(s0_3, M4(3.690e-02, 3.577e-02, 3.138e-03, 1.027e-02, -2.789e-02, -1.928e-02, 2.613e-02, -2.212e-03, -5.361e-03, -2.084e-02, -4.506e-02, -3.681e-05, -1.156e-02, 2.728e-02, -3.094e-02, 1.248e-02));
	r += mul(s0_4, M4(-3.487e-03, 1.718e-02, -8.775e-02, 4.089e-02, 5.736e-01, 1.978e-01, -3.792e-01, -1.193e-01, 1.667e-02, 5.314e-02, -5.069e-02, -1.538e-01, 5.084e-01, 1.506e-01, 1.174e-01, 1.795e-01));
	r += mul(s0_5, M4(-2.885e-03, -2.058e-02, -6.196e-03, -1.755e-02, -3.867e-03, 3.135e-01, 1.057e-02, -1.978e-01, 8.185e-03, 4.445e-02, 5.194e-03, 6.939e-02, -4.819e-02, -3.591e-01, -2.366e-03, -1.685e-01));
	r += mul(s0_6, M4(-4.401e-03, -4.076e-05, 2.961e-02, 6.924e-03, -4.164e-03, 1.787e-03, -1.703e-02, -5.862e-03, 8.431e-04, 6.852e-03, 8.763e-03, -5.143e-03, 1.348e-02, 2.611e-04, 3.000e-02, 9.582e-03));
	r += mul(s0_7, M4(2.641e-02, 2.387e-02, 7.398e-02, 1.025e-02, -1.409e-02, -4.531e-03, 9.913e-02, 5.355e-02, 8.924e-03, 1.157e-02, 8.326e-02, 2.244e-03, -4.902e-03, -2.404e-02, 3.489e-01, -4.031e-02));
	r += mul(s0_8, M4(1.039e-02, 1.510e-02, 9.950e-03, 2.472e-02, -3.698e-03, -9.017e-03, 8.734e-04, 5.177e-02, 4.543e-03, 7.821e-03, -1.250e-02, 3.732e-02, -8.173e-02, 5.623e-02, -1.293e-01, -8.633e-02));
	r += mul(s1_0, M4(5.351e-03, -1.202e-02, 5.507e-02, -6.189e-03, 1.248e-02, 1.612e-03, 8.608e-03, 2.257e-03, -9.285e-02, -4.260e-02, -9.248e-03, -2.997e-02, 1.468e-02, -1.950e-03, -2.527e-03, -2.587e-03));
	r += mul(s1_1, M4(-1.296e-01, 1.528e-01, 3.255e-02, -1.094e-01, -1.204e-02, 7.350e-03, -3.180e-03, 2.402e-03, 3.723e-02, 2.086e-02, 1.542e-02, 1.643e-02, -5.329e-02, -3.832e-02, -1.525e-03, -2.399e-02));
	r += mul(s1_2, M4(-3.656e-03, -4.187e-02, -1.145e-02, -7.497e-03, 6.880e-03, -7.871e-03, -1.085e-03, 2.898e-03, 2.197e-04, -9.038e-04, -1.617e-03, 2.035e-02, -9.116e-03, -1.853e-03, -1.299e-02, -8.885e-03));
	r += mul(s1_3, M4(8.283e-02, 4.498e-02, -1.023e-01, 4.822e-02, -7.618e-03, -8.891e-03, 2.606e-03, -3.105e-03, 3.332e-02, -1.863e-02, -7.545e-02, 4.062e-02, -8.781e-03, -8.948e-04, -1.001e-02, -6.401e-03));
	r += mul(s1_4, M4(-4.490e-01, 3.060e-01, -6.304e-01, 6.232e-01, 1.522e-01, 5.434e-02, 1.229e-03, 2.070e-02, 2.070e-01, 2.697e-01, -2.678e-01, -5.561e-01, 3.624e-02, 2.530e-01, -6.198e-03, 1.558e-01));
	r += mul(s1_5, M4(7.925e-03, -2.197e-02, 1.293e-03, -2.121e-02, -1.657e-03, 9.719e-02, 6.893e-03, 1.408e-02, 1.138e-02, 8.017e-02, 1.307e-02, 1.014e-01, -1.186e-02, -1.931e-01, 3.966e-03, -1.072e-01));
	r += mul(s1_6, M4(8.221e-03, -1.799e-02, 1.422e-01, -2.696e-02, -3.369e-03, 2.840e-03, -7.638e-03, -1.004e-02, 4.194e-03, 1.034e-02, 4.040e-02, -2.958e-03, 1.250e-02, 3.880e-03, 3.503e-02, -1.766e-03));
	r += mul(s1_7, M4(3.230e-02, 2.141e-02, 2.552e-02, -2.864e-02, 2.096e-03, 8.489e-03, 1.600e-01, 4.531e-02, 5.786e-03, -3.596e-04, 9.254e-02, 5.338e-02, -1.597e-02, -2.331e-02, -1.526e-02, 1.382e-02));
	r += mul(s1_8, M4(1.109e-02, 2.278e-02, 1.183e-02, 4.255e-03, 3.574e-03, -9.009e-03, -6.542e-03, 7.108e-02, 1.346e-02, 2.044e-02, 7.049e-03, 6.002e-02, -1.328e-03, 7.710e-03, -1.936e-02, -6.290e-02));
	r += mul(s2_0, M4(-2.015e-02, -3.460e-02, -1.751e-02, 5.965e-04, -5.749e-02, -3.374e-02, -1.120e-02, -3.189e-02, -5.373e-03, 2.988e-03, -1.666e-05, 7.394e-03, 5.769e-04, 8.381e-03, 4.734e-03, 1.076e-02));
	r += mul(s2_1, M4(5.553e-02, 7.511e-02, -4.216e-02, -6.980e-02, -1.811e-02, -8.612e-03, -1.137e-02, -1.858e-03, 1.022e-02, -5.049e-02, 8.552e-03, -1.117e-02, 2.008e-02, 1.760e-02, 3.950e-03, -4.015e-02));
	r += mul(s2_2, M4(-2.041e-02, -5.757e-02, -1.959e-02, -5.002e-02, -1.496e-02, -1.545e-02, -1.245e-03, 9.751e-04, 9.932e-03, 4.425e-02, 9.239e-03, 3.456e-02, 1.395e-03, 2.393e-02, -1.455e-02, -2.118e-04));
	r += mul(s2_3, M4(4.313e-02, -7.174e-02, 4.934e-02, -7.573e-02, -4.384e-02, -6.328e-02, -4.163e-02, -1.458e-03, -4.746e-02, 2.707e-02, -3.365e-02, -6.378e-03, -8.952e-03, 1.721e-02, -9.324e-03, -1.210e-02));
	r += mul(s2_4, M4(3.214e-01, 2.553e-01, 2.019e-01, 3.427e-01, -2.512e-01, 2.290e-01, -9.598e-02, -1.990e-01, 6.035e-01, 5.393e-02, 3.261e-02, -3.234e-02, 1.868e-02, 3.359e-02, 1.093e-01, 7.545e-02));
	r += mul(s2_5, M4(5.515e-03, 1.623e-01, 9.783e-03, 7.422e-02, 4.138e-02, -2.383e-01, -4.104e-02, -2.447e-02, -2.359e-02, 4.699e-01, -3.962e-04, 4.456e-02, -1.484e-02, -3.667e-02, 9.549e-03, 1.052e-02));
	r += mul(s2_6, M4(-1.583e-02, -7.547e-04, -2.951e-02, -1.450e-02, 1.165e-02, -7.928e-03, -2.704e-02, -1.365e-02, -1.704e-02, -6.325e-03, -4.252e-02, 1.435e-02, 8.478e-03, 2.729e-04, 4.143e-03, 2.154e-02));
	r += mul(s2_7, M4(1.911e-02, 1.387e-02, 2.168e-01, 8.095e-02, 5.081e-02, 7.018e-02, 2.530e-01, -3.141e-02, -2.762e-02, -2.184e-02, -2.540e-01, -1.508e-01, -1.295e-02, -1.815e-02, -5.871e-02, -1.444e-02));
	r += mul(s2_8, M4(9.926e-03, 3.156e-02, 1.352e-02, 8.849e-02, 3.311e-02, 6.507e-02, -5.825e-02, 5.197e-02, 2.453e-02, 2.221e-02, -3.262e-02, -1.733e-01, -2.265e-03, -2.857e-03, -1.240e-02, -4.210e-02));
	r += mul(s3_0, M4(2.609e-02, -1.551e-02, 6.340e-03, 8.064e-03, -2.497e-02, -2.925e-02, -1.120e-02, -2.954e-02, -1.282e-02, 1.535e-02, -1.396e-03, 1.608e-03, -5.761e-02, 1.896e-03, -7.812e-03, 9.830e-03));
	r += mul(s3_1, M4(-2.313e-02, 8.032e-02, 1.410e-02, -9.041e-03, -1.976e-02, -3.598e-02, -2.796e-03, 6.973e-03, 3.773e-02, -5.237e-02, -2.333e-02, -2.264e-02, 4.693e-01, -3.564e-01, 4.322e-02, -2.144e-01));
	r += mul(s3_2, M4(-7.433e-03, -5.505e-02, -1.234e-02, -1.336e-02, -3.791e-03, 1.100e-02, -1.877e-03, 2.326e-03, 5.665e-03, 5.641e-02, 1.062e-02, 1.565e-02, 2.034e-02, -7.982e-02, -1.399e-02, 2.144e-02));
	r += mul(s3_3, M4(-3.381e-02, -9.065e-03, 2.458e-02, -1.762e-02, -2.437e-02, -3.436e-02, -4.115e-02, 1.698e-03, -5.797e-02, -7.173e-03, -4.426e-02, 1.352e-02, -2.294e-02, 1.118e-02, -7.405e-02, -6.345e-03));
	r += mul(s3_4, M4(8.465e-03, -3.455e-02, -2.899e-02, 6.518e-02, -8.621e-02, 4.142e-02, -5.560e-02, -5.281e-02, 1.255e-01, -7.174e-02, 1.479e-01, -5.369e-02, 5.403e-02, -6.822e-03, 5.027e-01, -1.457e-01));
	r += mul(s3_5, M4(-2.223e-03, -3.346e-04, 2.240e-03, -4.474e-02, 2.748e-03, -1.006e-01, -3.307e-04, -2.171e-02, -1.581e-03, 1.424e-01, -6.853e-03, 1.219e-01, -1.978e-02, 2.139e-02, 2.717e-02, -8.862e-02));
	r += mul(s3_6, M4(-5.204e-03, 6.155e-03, -4.964e-02, -1.495e-03, 5.847e-03, 1.444e-03, -1.106e-02, -2.885e-02, -3.290e-03, 1.603e-03, -3.210e-02, 2.151e-03, 2.563e-03, -4.211e-03, 9.970e-03, 1.099e-02));
	r += mul(s3_7, M4(-1.095e-02, -1.145e-02, 5.200e-03, -4.866e-02, 3.899e-02, 2.653e-02, 8.947e-03, 5.205e-02, 1.664e-03, -5.178e-03, 3.539e-02, -5.305e-02, -5.889e-03, -3.190e-02, -4.725e-02, -2.449e-02));
	r += mul(s3_8, M4(-9.258e-04, 3.235e-03, -4.549e-03, 1.176e-02, 1.270e-02, 4.034e-02, 6.851e-03, -2.954e-02, 7.463e-04, 1.486e-02, 6.070e-03, 6.939e-02, -4.168e-03, -1.934e-02, -2.309e-02, -7.370e-03));
	r += V4(2.251e-03, 2.085e-03, 2.543e-03, 2.335e-03);
	return tanh(r);
}
void Pass9(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 10
//!DESC CuNNy-6x8C-EASU-NVL-DS-shuffle
//!STYLE PS
//!IN t2, INPUT, easu
float4 Pass10(float2 pos) {
	float2 pt = float2(GetInputPt());
	static const float3x3 rgb2yuv = {0.299, 0.587, 0.114, -0.169, -0.331, 0.5, 0.5, -0.419, -0.081};
	static const float3x3 yuv2rgb = {1, -0.00093, 1.401687, 1, -0.3437, -0.71417, 1, 1.77216, 0.00099};
	float4 r = 0.0;
	float2 size = float2(GetInputSize());
	float2 f = frac(pos * size);
	float3 yuv = mul(rgb2yuv, INPUT.SampleLevel(SL, pos, 0).rgb);
	int2 i = int2(f * 2.0);
	r.r = t2.SampleLevel(SP, (float2(0.5, 0.5) - f) * pt + pos, 0)[2*i.y + i.x];
	r.r += easu.SampleLevel(SP, pos, 0).r;
	r.a = 1.0;
	r.r = clamp(r, 0.0, 1.0);
	float3 px = mul(yuv2rgb, float3(r.r, yuv.yz));
	return float4(px, 1.0);
}
