// CuNNy 2x8C BILINEAR CHROMA TEST NVL
// Copyright (c) 2024 cunnyplapper

// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public
// License along with this program.  If not, see <https://www.gnu.org/licenses/>.
/* ------------------------------------------------------------------- */

//!MAGPIE EFFECT
//!VERSION 3
//!OUTPUT_WIDTH INPUT_WIDTH * 2
//!OUTPUT_HEIGHT INPUT_HEIGHT * 2

//!TEXTURE
Texture2D INPUT;


//!SAMPLER
//!FILTER POINT
SamplerState SP;

//!SAMPLER
//!FILTER LINEAR
SamplerState SL;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t1;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t2;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t3;

//!PASS 1
//!DESC CuNNy-2x8C-BILINEAR-CHROMA-TEST-NVL-in
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN INPUT
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define l0(x, y) (dot(float3(-0.2646695077419281, -0.5037145018577576, -0.10815466940402985), O(INPUT, float2(x, y)).rgb) + 0.624510645866394)
float4 f0(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	min16float4 r = 0.0;
	r += min16float4(0.0052936724, -0.0332603045, 0.0283919480, -0.0800828338) * s0_0;
	r += min16float4(0.0044483528, 0.3034529090, -0.3300801516, 0.1024947315) * s0_1;
	r += min16float4(-0.0087530985, 0.2465795577, 0.0223357789, 0.0352851190) * s0_2;
	r += min16float4(-0.0600430109, -0.0312377699, -0.1041777283, 0.4325777292) * s0_3;
	r += min16float4(-0.1013144925, -0.2364854217, 0.4248047173, -0.0803223848) * s0_4;
	r += min16float4(-0.0178328808, -0.1792429835, 0.2204888016, -0.0950397030) * s0_5;
	r += min16float4(-0.0104681272, 0.0520564429, 0.0504208282, 0.1096885353) * s0_6;
	r += min16float4(0.3221628070, -0.0555750690, -0.1213159040, -0.4414907396) * s0_7;
	r += min16float4(-0.0822722763, -0.0646972656, -0.1909872741, 0.0181617104) * s0_8;
	r += min16float4(-0.03283784165978432, -0.00043454431579448283, -0.0007038851035758853, -0.00021276449842844158);
	return r;
}
float4 f1(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	min16float4 r = 0.0;
	r += min16float4(-0.0041049593, -0.0224392843, -0.0033168197, -0.1181568876) * s0_0;
	r += min16float4(-0.0025673374, -0.1870118231, 0.0051216423, -0.0167446863) * s0_1;
	r += min16float4(0.0049636960, 0.2211778760, -0.0038409922, 0.1782206446) * s0_2;
	r += min16float4(0.0063638072, 0.1292982250, 0.0064216307, 0.3613909781) * s0_3;
	r += min16float4(-0.5878122449, -0.3952731192, -0.6014936566, -0.2842400670) * s0_4;
	r += min16float4(-0.0127039906, 0.0340693370, 0.5996093750, -0.2043872178) * s0_5;
	r += min16float4(-0.0013460371, 0.3076171875, -0.0035800477, 0.1879936606) * s0_6;
	r += min16float4(0.5917099118, 0.0676858127, -0.0040121181, 0.0251605492) * s0_7;
	r += min16float4(0.0052240281, -0.1557625979, 0.0043756580, -0.1306365430) * s0_8;
	r += min16float4(7.623650890309364e-05, -0.0001666426396695897, 0.0004097418568562716, 6.983512139413506e-05);
	return r;
}
void Pass1(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	min16float s0_0 = l0(-1.0, -1.0);
	min16float s0_1 = l0(0.0, -1.0);
	min16float s0_2 = l0(1.0, -1.0);
	min16float s0_3 = l0(-1.0, 0.0);
	min16float s0_4 = l0(0.0, 0.0);
	min16float s0_5 = l0(1.0, 0.0);
	min16float s0_6 = l0(-1.0, 1.0);
	min16float s0_7 = l0(0.0, 1.0);
	min16float s0_8 = l0(1.0, 1.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
}
//!PASS 2
//!DESC CuNNy-2x8C-BILINEAR-CHROMA-TEST-NVL-conv1
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2, t3
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, min16float4 s0_0, min16float4 s0_1, min16float4 s0_2, min16float4 s0_3, min16float4 s0_4, min16float4 s0_5, min16float4 s0_6, min16float4 s0_7, min16float4 s0_8, min16float4 s1_0, min16float4 s1_1, min16float4 s1_2, min16float4 s1_3, min16float4 s1_4, min16float4 s1_5, min16float4 s1_6, min16float4 s1_7, min16float4 s1_8, min16float4 s2_0, min16float4 s2_1, min16float4 s2_2, min16float4 s2_3, min16float4 s2_4, min16float4 s2_5, min16float4 s2_6, min16float4 s2_7, min16float4 s2_8, min16float4 s3_0, min16float4 s3_1, min16float4 s3_2, min16float4 s3_3, min16float4 s3_4, min16float4 s3_5, min16float4 s3_6, min16float4 s3_7, min16float4 s3_8) {
	min16float4 r = 0.0;
	r += mul(s0_0, min16float4x4(0.1498848200, 0.3501243889, 0.1326424330, 0.1031766161, -0.1057024002, 0.0963823274, 0.0549462661, -0.0097723417, 0.0526182763, 0.0041182898, -0.0174476057, -0.0441113859, 0.1115896925, 0.0987720340, 0.1286567003, -0.0958929360));
	r += mul(s0_1, min16float4x4(-0.9220218062, 0.0090513909, 0.2026167512, -0.5184047818, 0.1228398979, 0.0454881340, 0.0791098475, -0.0489542037, 0.0567105450, -0.0185693540, 0.1023623422, -0.1937803477, 0.1898948699, -0.0003819705, -0.3752776980, 0.1051985174));
	r += mul(s0_2, min16float4x4(0.3282650113, -0.3054800332, 0.0613368228, -0.3457842171, -0.1018220186, -0.0255782269, 0.0731877014, -0.0130104693, -0.0193455517, -0.0226448383, -0.0154337808, -0.0102401953, 0.2157444656, -0.0560762919, 0.0779230446, 0.0735864043));
	r += mul(s0_3, min16float4x4(0.2349802703, -0.3428873122, 0.0143282963, 0.2739077508, -0.3054230809, 0.1281866431, 0.6596643329, 0.0006827646, 0.1639342457, -0.1735935360, -0.0830776915, 0.1674738228, 0.0780023560, 0.0188256018, -0.0764256641, -0.0445873104));
	r += mul(s0_4, min16float4x4(-0.3074706495, -0.0154792396, 0.2041255236, 0.0139928767, 0.0523702577, -0.1947962791, -0.4124048948, -0.0822996050, 0.1694581956, 0.4386432171, -0.0482865386, 0.2972341776, 0.0665180236, -0.0763201863, 0.0589574464, 0.1274463981));
	r += mul(s0_5, min16float4x4(0.1335913688, -0.0851887390, -0.2618986666, 0.2797724307, 0.1630392671, -0.0456450060, 0.0637349933, 0.0552168377, 0.1561641544, -0.2396677732, -0.2404054403, -0.0596490987, 0.0627066121, 0.1188342199, 0.0983507484, -0.3073878884));
	r += mul(s0_6, min16float4x4(0.1663933098, 0.0338643752, -0.1128293946, 0.1148791686, -0.1736414284, -0.1128737181, 0.2929786146, 0.2513510883, -0.1497343034, -0.2064146399, 0.0336941667, -0.0528674759, 0.2019159645, 0.0360137038, -0.1752644181, -0.0275111850));
	r += mul(s0_7, min16float4x4(-0.2188362032, -0.2607803941, -0.0062882514, -0.2998019755, -0.2643681765, 0.0615363382, -0.1911308020, -0.1723940969, -0.0494061485, 0.0693154261, 0.1383777559, 0.0473914705, -0.0468407273, 0.1326606572, 0.0138785569, 0.0616343617));
	r += mul(s0_8, min16float4x4(0.0608539954, -0.0978383273, 0.1266543418, -0.1183140501, -0.0027076278, 0.1136821285, -0.0552184694, -0.0450461842, -0.0647127628, -0.0420879982, -0.2624795735, -0.0610485189, 0.1596674472, -0.0079673333, -0.1625891030, 0.0040274295));
	r += mul(s1_0, min16float4x4(-0.1010068059, -0.1354566664, -0.1082392409, 0.1842754483, 0.0147106461, 0.0082606273, 0.0565705597, 0.0570109785, 0.0757977217, -0.1589895040, -0.0517980345, 0.0168431997, -0.0257869549, -0.0749514773, -0.1484725177, 0.0549887754));
	r += mul(s1_1, min16float4x4(0.0651181713, -0.2244749665, 0.1889345199, -0.2508589029, -0.1762693524, -0.0450696498, -0.0321279429, 0.0541513376, -0.0654608309, -0.0431724526, -0.1116144285, 0.0835858881, 0.2499700040, 0.0561599843, -0.3115768731, -0.0759036615));
	r += mul(s1_2, min16float4x4(0.0487015620, -0.2084795088, -0.1115680709, 0.1185832247, 0.1291184872, 0.0422080718, -0.0493444614, -0.0211094301, 0.1737516224, -0.0151401488, -0.2154686153, 0.0127870459, -0.1995908171, 0.1410537213, -0.0151725616, -0.1209809184));
	r += mul(s1_3, min16float4x4(-0.1981088370, 0.1695205271, 0.2642866373, -0.1186687797, -0.1683385819, 0.0435758606, 0.3374817371, -0.1077401936, -0.0006249486, 0.0242923088, -0.0974441320, 0.1223061904, 0.1352503598, 0.0279073957, -0.1133633628, -0.0083868988));
	r += mul(s1_4, min16float4x4(0.1394065171, 0.2338870019, 0.0815386251, 0.0527604632, 0.0660278201, -0.2037637234, -0.1416699886, -0.1547776312, 0.3285766244, -0.1501328349, -0.5547584891, -0.0470389575, 0.0730582252, -0.1035130620, 0.1202153116, 0.0665094778));
	r += mul(s1_5, min16float4x4(0.0703235343, 0.0252147838, -0.1438373327, -0.0214252435, -0.0621530376, 0.1400211751, 0.0150405718, 0.0241564009, 0.0128169442, -0.0098943468, 0.0272441860, -0.0327577442, 0.0040342072, 0.0264568031, -0.0131900748, -0.0909069553));
	r += mul(s1_6, min16float4x4(-0.1519172937, -0.0663502589, 0.2221554518, -0.1040022522, -0.4251939058, -0.0591748022, 0.5728936791, -0.2717383802, 0.0757576004, 0.1611174345, 0.0921332017, 0.2694370449, -0.1810516119, 0.0492043905, 0.0140467575, 0.0451314598));
	r += mul(s1_7, min16float4x4(0.2513541877, 0.1054354608, -0.2131681889, 0.0411979258, 0.0412627384, -0.0443510525, -0.3807460368, -0.2142589688, -0.1792764813, 0.3394503593, 0.0859471262, 0.0542830862, 0.3651819229, -0.0396053419, -0.1511009783, -0.0805088952));
	r += mul(s1_8, min16float4x4(-0.0735826492, 0.0018032726, -0.1913570166, 0.0230062921, 0.0436046310, -0.0760276616, 0.0104953358, 0.1585342139, 0.1313811243, -0.0031620492, 0.1666446626, -0.0451951586, 0.0476666465, 0.1004262269, 0.0413454548, -0.1251047552));
	r += mul(s2_0, min16float4x4(-0.1470343173, -0.1934522241, 0.2589594126, -0.1157646179, 0.1382529140, 0.0194441620, -0.0240286011, -0.0243282076, -0.0560177267, 0.1547809243, -0.0647096187, -0.0105390213, -0.2084976435, -0.0717551634, -0.0592219718, 0.0469656363));
	r += mul(s2_1, min16float4x4(-0.0229446366, 1.0109319687, -0.1917027086, 0.7207017541, 0.0327515416, 0.0492989719, -0.2351119071, 0.0415614992, 0.1009497419, -0.1142499745, -0.0072529572, 0.0996959358, -0.2905355096, -0.0501509607, 0.4656527340, -0.1083955988));
	r += mul(s2_2, min16float4x4(-0.0992986634, 0.1602783352, 0.1833600849, 0.1934248209, -0.0192238968, 0.1017785221, 0.2517291009, 0.0141384630, 0.0164383966, 0.0080416817, -0.1401502192, -0.0549618304, -0.0644851699, -0.0401109084, -0.1680400521, -0.0513453372));
	r += mul(s2_3, min16float4x4(0.1533245742, 0.2626959085, -0.2615360916, -0.1607022732, 0.0268326178, -0.0621973723, -0.0998969302, 0.1822311878, -0.0250545479, 0.7910773158, -0.0372537933, 0.6036651731, -0.1469896734, -0.0522706434, 0.2661250532, -0.0265898164));
	r += mul(s2_4, min16float4x4(0.2701327205, -0.1793037653, 0.0689752623, 0.8536003232, -0.2299798727, 0.0717101991, -0.1352272779, -0.0843492076, 0.0710194334, 0.2059528530, -0.2736398876, 0.2089246362, 0.0992069840, 0.0999937505, 0.1343396902, -0.1724381000));
	r += mul(s2_5, min16float4x4(-0.1706427187, 0.1395382285, 0.4767769873, -0.1076828316, -0.0490060262, -0.0747722983, 0.0434404686, -0.1799242795, -0.0690718219, 0.0829508454, 0.2013595253, 0.0338432305, -0.2119360864, -0.0014728112, 0.0074738991, 0.1831752807));
	r += mul(s2_6, min16float4x4(-0.0099594928, -0.0116967261, -0.0499470681, -0.0423191115, -0.0826334581, 0.0606629923, 0.1313420385, -0.0061008618, -0.1450108439, 0.0352644697, -0.0081457356, 0.0831631348, -0.0682641864, -0.0517043732, -0.0475012548, -0.1010197327));
	r += mul(s2_7, min16float4x4(-0.0646417439, 0.1116914973, 0.0186335128, 0.0836729184, 0.0829415470, -0.1743020862, -0.0338443518, -0.4179382622, -0.1543648988, -0.1027223393, 0.1812809408, -0.1357073188, -0.0970345289, -0.0221704021, 0.1236642599, 0.3086325228));
	r += mul(s2_8, min16float4x4(-0.0247994401, -0.1968394518, -0.1744067520, -0.0554123633, -0.0041366131, -0.0425027348, 0.0430605337, 0.0620252155, 0.0739832371, -0.0447090678, 0.1987344325, -0.0897309035, 0.0857700482, 0.0837961733, 0.1432455331, 0.0031861977));
	r += mul(s3_0, min16float4x4(-0.0467806309, -0.0355269350, -0.1636839956, -0.0236599185, -0.0384741426, -0.0715835169, -0.0746881515, -0.0579130575, 0.1571290493, -0.0045600077, -0.1762242913, -0.1334163845, 0.0644242316, 0.0652469173, 0.1524770409, -0.0608678572));
	r += mul(s3_1, min16float4x4(0.4791751504, 0.2425633222, 0.1075774282, 0.0661896616, 0.1333550066, -0.1232818738, -0.1501969993, -0.1596553773, 0.0397294350, 0.0032282956, 0.1797537804, -0.1323303431, -0.0886350498, 0.0056753387, 0.2533547282, 0.1901665181));
	r += mul(s3_2, min16float4x4(-0.1887549609, 0.2033277601, 0.2235734463, -0.2291283011, -0.1378369182, -0.1058281288, -0.0819703192, -0.0077118785, -0.0215444900, 0.0370960794, 0.1893526465, -0.0155671826, -0.0005170640, -0.0246112086, 0.2074701190, 0.0774521828));
	r += mul(s3_3, min16float4x4(0.0910567641, -0.1751730591, -0.3246228695, -0.0464279093, 0.1267499924, 0.0676284358, -0.0432491340, 0.0574662052, 0.9264616966, -0.1607675105, -0.8735834956, 0.1494502127, -0.2132563442, 0.0034200761, 0.1932287365, -0.1700669378));
	r += mul(s3_4, min16float4x4(0.5214838982, 0.2725146413, 0.2481507510, 1.2446128130, -0.1453985721, -0.0020538876, 0.0060221632, -0.2050819397, 0.2610678971, 1.1835929155, 0.4829047024, 0.9398933649, -0.3251947761, 0.0264240056, 0.1522513032, 0.0914915726));
	r += mul(s3_5, min16float4x4(-0.4064354897, -0.0319677368, -0.0028633061, -0.0711557791, -0.1008342206, -0.0723900646, 0.1546176374, 0.0963359550, 0.0533089601, 0.0248882938, -0.1997049004, -0.0502868518, 0.0871271864, -0.0762095004, -0.1180836558, -0.1161716133));
	r += mul(s3_6, min16float4x4(-0.0469570719, 0.0223934259, 0.0025437071, 0.0452961847, 0.0149880564, -0.0852075592, -0.0031655068, -0.0436981879, 0.1908882558, -0.0548002832, -0.1454737633, 0.0219545290, 0.0777018666, 0.0040291343, 0.0115235588, 0.0284219049));
	r += mul(s3_7, min16float4x4(0.0198917501, -0.1314417124, 0.0902690440, 0.0020016918, -0.1071150377, 0.0925915912, -0.0526079200, 0.0887891129, -0.0831517875, 0.0368227884, 0.1104909331, 0.1439034194, -0.0145024015, 0.0525746569, 0.0231688023, -0.0021334605));
	r += mul(s3_8, min16float4x4(-0.0497475453, 0.0563942865, 0.2573104501, -0.0599456467, -0.0887220800, -0.0515016839, 0.0086172540, -0.1066534445, -0.0935061201, 0.0316376165, 0.0150239039, 0.0030112411, -0.1198715568, 0.0959488377, -0.2074646503, 0.1223147213));
	r += min16float4(-0.005050226114690304, 0.0037720666732639074, 0.0013285638997331262, -0.0017830008873715997);
	return r;
}
float4 f1(float2 pt, float2 pos, min16float4 s0_0, min16float4 s0_1, min16float4 s0_2, min16float4 s0_3, min16float4 s0_4, min16float4 s0_5, min16float4 s0_6, min16float4 s0_7, min16float4 s0_8, min16float4 s1_0, min16float4 s1_1, min16float4 s1_2, min16float4 s1_3, min16float4 s1_4, min16float4 s1_5, min16float4 s1_6, min16float4 s1_7, min16float4 s1_8, min16float4 s2_0, min16float4 s2_1, min16float4 s2_2, min16float4 s2_3, min16float4 s2_4, min16float4 s2_5, min16float4 s2_6, min16float4 s2_7, min16float4 s2_8, min16float4 s3_0, min16float4 s3_1, min16float4 s3_2, min16float4 s3_3, min16float4 s3_4, min16float4 s3_5, min16float4 s3_6, min16float4 s3_7, min16float4 s3_8) {
	min16float4 r = 0.0;
	r += mul(s0_0, min16float4x4(-0.0865848511, 0.1237985566, 0.0882416517, -0.4356572926, 0.0009076176, 0.0651300177, 0.0412198082, 0.1176816002, 0.1977266669, 0.0045450111, 0.2256076038, 0.1943009049, 0.0893531144, -0.3227169216, 0.1459942460, 0.2333565801));
	r += mul(s0_1, min16float4x4(-0.5949932933, -0.2703410387, -0.0105715068, 0.1741845757, -0.0021909941, -0.0639152005, 0.0450058095, -0.1363376230, 0.4634775221, -0.3076632619, 0.0254194643, 0.2253162116, 0.3425547183, -0.0968297496, -0.1765185893, 0.4528811276));
	r += mul(s0_2, min16float4x4(0.5206809044, -0.0790645927, 0.3173810840, 0.0623561442, -0.0030093477, -0.0473369099, -0.1207750514, 0.0389436483, 0.0642138571, -0.1231119633, -0.0028148487, 0.0545671135, 0.1049251333, -0.0468794443, -0.1807668060, 0.2835960984));
	r += mul(s0_3, min16float4x4(-0.2857865691, 0.1669397056, -0.0542230420, -0.1626102328, -0.2347906381, 0.0717163980, -0.2406809032, 0.0962588340, -0.1633386910, 0.2847174406, 0.0636116490, 0.0149114877, 0.1010697335, -0.1312045157, 0.0333497375, 0.1014307737));
	r += mul(s0_4, min16float4x4(-0.2820230126, -0.1321546584, -0.1990606487, -0.0122928089, -0.2711316943, 0.1453657597, 0.3327783942, -0.4715108275, 0.2802024782, 0.1044623107, 0.1430816501, 0.2950809300, 0.4173741043, 0.1427538544, -0.1115960404, 0.2882412970));
	r += mul(s0_5, min16float4x4(-0.1379337311, 0.1334003061, -0.0093860151, 0.3340247571, 0.1819407344, 0.2150347233, 0.0003914517, -0.0146767320, 0.0607716776, -0.1385280192, 0.0182472300, -0.0197714008, 0.2204941213, 0.1042571962, 0.0465323478, 0.5956422091));
	r += mul(s0_6, min16float4x4(-0.1000056714, 0.1782508940, 0.0171381067, -0.0928714126, 0.1491538584, -0.2509848177, -0.5250751972, 0.0540988371, 0.1505462080, -0.0162519664, -0.1159042865, 0.0884762779, 0.0464290567, -0.0611423403, 0.0327342115, -0.0078230901));
	r += mul(s0_7, min16float4x4(0.1726857722, 0.3097152412, 0.0095521500, -0.0247447845, -0.1115913242, -0.0387364216, 0.4987078905, -0.1520091891, 0.0988647118, -0.0788323656, -0.1264503002, -0.0369660854, 0.1965089291, -0.0630316883, 0.0109180305, 0.2098064721));
	r += mul(s0_8, min16float4x4(0.0539618619, 0.1935632378, 0.0814214647, -0.0389906503, 0.0646241233, 0.2345558256, -0.0722435117, -0.0607539862, 0.1125228703, -0.1544427574, -0.0218421053, -0.0266118720, 0.1334433854, -0.0868419632, 0.0320016444, -0.0390078947));
	r += mul(s1_0, min16float4x4(-0.1446275860, 0.0822062045, -0.2742966115, 0.0439091325, -0.0200260337, -0.0675179958, -0.1984846145, -0.1329032630, 0.0779662356, 0.0336644724, -0.0684980899, -0.1124536097, 0.1918625683, 0.1242841035, -0.1401388794, 0.0542191975));
	r += mul(s1_1, min16float4x4(-0.2153732479, 0.0978099406, -0.0604486763, 0.0978120193, -0.2641705275, 0.2392877936, -0.0051113334, -0.0905472487, -0.1253105402, -0.0221515968, 0.1078535169, -0.0689126477, 0.0930762738, -0.0921538249, 0.1852773577, 0.1853534132));
	r += mul(s1_2, min16float4x4(-0.1831772178, 0.4227384031, 0.1546026021, -0.0935395658, -0.0351904780, 0.0213032495, 0.0920234993, -0.0101047466, 0.2958851159, 0.0039200713, 0.0812970102, 0.2290033251, 0.0755712464, -0.3603222370, -0.1163630262, 0.1883541793));
	r += mul(s1_3, min16float4x4(0.1184489951, -0.0708365440, -0.0195145104, 0.1739664972, 0.2328812778, -0.3818721473, -0.3470388949, 0.0179347973, 0.0098468456, -0.0313572027, -0.1450912356, -0.0295412876, 0.0116991270, 0.0335263349, -0.0338228196, 0.1596686840));
	r += mul(s1_4, min16float4x4(0.1821141392, -0.0470471941, 0.2727125883, -0.0309664290, -0.2252725065, 0.3032134473, 0.3037136495, -0.0385717303, 0.3225861788, -0.7419609427, -0.1501775533, 0.4374237061, 0.2149641067, -0.1337142885, 0.0047617019, 0.4678325355));
	r += mul(s1_5, min16float4x4(0.2166441530, -0.1508812159, -0.1561228186, -0.3047734201, -0.1524682492, -0.1034696475, 0.0497019067, -0.1158437133, 0.0760809407, 0.0460846834, 0.1481009573, 0.2841101885, 0.4568522573, -0.0505343601, -0.4551560581, 0.1759545058));
	r += mul(s1_6, min16float4x4(0.1655067801, -0.0788610205, 0.0189382862, 0.0667056814, -0.0356132425, 0.1673533320, -0.0039513581, -0.0249795783, 0.1425212920, -0.0292793158, 0.2646487355, 0.0204107910, -0.0131056691, 0.0169872399, 0.0841632187, 0.0987640694));
	r += mul(s1_7, min16float4x4(-0.1155362055, -0.1972256005, 0.0311039984, -0.0503699146, 0.0140630081, -0.2220661640, 0.0757136121, -0.0140359048, 0.1178984866, 0.0115793049, 0.1561177224, 0.1413652152, 0.0681745932, 0.0287389513, -0.0201617535, 0.0091498299));
	r += mul(s1_8, min16float4x4(-0.0210049469, -0.0792846903, -0.0239103176, 0.0562991723, 0.0676475614, -0.1450099200, -0.0216049943, -0.0618277639, -0.0082405088, 0.2506004274, 0.1409478784, 0.0944851786, 0.0093371253, 0.1450043917, -0.1003408059, 0.3053337336));
	r += mul(s2_0, min16float4x4(-0.1472130865, -0.0480472893, 0.1699963808, 0.2094092071, -0.0513908342, 0.0185633935, 0.0696624741, -0.0266670082, 0.0738797858, -0.0976371691, 0.0056278207, -0.1428751498, -0.0874542072, 0.3095104396, -0.1293796897, -0.2195690125));
	r += mul(s2_1, min16float4x4(-0.1115442887, -0.0240184907, 0.9470425844, -0.0248276070, -0.2404174358, 0.1017153487, 0.0064979997, -0.2058738917, 0.1839852333, 0.1242653579, 0.0856103823, 0.3273466229, -0.2993236482, 0.0721377432, 0.1042178795, -0.1885864288));
	r += mul(s2_2, min16float4x4(-0.3595946431, 0.0525021218, -0.1254908592, 0.1321229339, -0.1474796385, 0.1937054098, -0.0844225287, -0.1654016823, 0.1401381344, -0.0715528205, -0.0609795749, 0.0480277315, -0.1762713939, 0.0145390183, 0.2550311089, -0.1883381605));
	r += mul(s2_3, min16float4x4(-0.0710879713, -0.1726127416, 0.3184256554, -0.0652719736, -0.1061486527, 0.0025660896, -0.0633196011, -0.0886242911, 0.1042178869, 0.2174292207, 1.1419032812, 0.0537919737, -0.0261992496, 0.1488845944, -0.0341855586, -0.0585317947));
	r += mul(s2_4, min16float4x4(0.0045279451, 0.3874873817, -0.1266073138, -0.3313953280, -0.3681119680, 0.2668019533, -0.0099733369, -0.3845648766, -0.1097175851, -0.5581808686, -0.1550668031, -0.2861348987, -0.0092488257, -0.3193383515, 0.0241074394, 0.0855243653));
	r += mul(s2_5, min16float4x4(-0.2568358183, 0.1085512564, 0.2299662828, -0.0440220125, -0.2690691650, -0.1496220082, 0.0793699548, -0.1684047878, -0.1643668115, -0.0332152396, 0.0964645967, 0.1418798417, -0.3290909231, -0.0316019729, 0.1619613618, -0.0514774658));
	r += mul(s2_6, min16float4x4(0.1804651469, -0.0116027817, -0.0899747238, 0.0736216158, -0.0771693885, 0.1505188197, 0.1733369678, -0.0142014464, -0.0482830144, 0.1136021465, -0.0430840887, -0.0184948687, -0.0177389700, -0.1013420820, -0.1325771362, -0.0278074685));
	r += mul(s2_7, min16float4x4(-0.0741966441, 0.1298960000, -0.1290558130, 0.0609512553, -0.1440436542, 0.0427374281, -0.1194568053, -0.2524699867, 0.0369413048, 0.3765984774, 0.0682126433, -0.1787568182, -0.0914272070, -0.2529284954, 0.2557874918, -0.0194282718));
	r += mul(s2_8, min16float4x4(-0.0833086893, -0.1897261739, -0.0302104987, -0.2626677752, -0.2016579211, 0.0376934074, 0.1616455317, -0.1422784328, 0.0372332446, 0.0442329720, 0.0072228662, -0.0249552205, 0.2010538280, -0.1405270696, -0.0469343625, 0.0491690896));
	r += mul(s3_0, min16float4x4(0.1321250498, 0.1911823899, 0.2456051558, -0.4789597094, 0.0969559923, -0.0107449321, 0.0061063222, -0.0460827500, 0.1065917164, -0.1234484538, -0.0254452731, 0.2419967651, -0.2666018307, -0.1493724883, 0.1294200867, 0.0005493692));
	r += mul(s3_1, min16float4x4(0.5538524389, -0.7680726647, 0.1768426150, -0.0918194205, 0.1628606319, 0.0299650263, 0.0009059216, 0.0345953256, 0.2475784272, -0.1750444919, -0.0647016689, -0.2548930943, -0.2788874805, 0.1741044819, -0.1573632210, -0.2125664800));
	r += mul(s3_2, min16float4x4(0.1052274406, -0.6514977217, -0.2435587049, -0.1211265549, -0.1723232716, -0.1143619865, -0.0909762904, -0.2234940231, 0.0180484187, 0.0109076267, 0.0928180516, 0.1622692049, -0.0220458452, 0.2811124325, -0.1061624438, -0.0485922210));
	r += mul(s3_3, min16float4x4(-0.0901461691, 0.1547926068, 0.1610025167, -0.0391029194, -0.0514167026, 0.2632596195, 0.0223813113, -0.1935148984, 0.4608868957, 0.0032095790, 0.1232443899, -0.2519448102, 0.0088488236, -0.2666004300, 0.0131365089, 0.0123136602));
	r += mul(s3_4, min16float4x4(-0.2819442451, 0.6670565009, 0.1927481592, 0.0030523487, -0.3182724714, -0.1215087995, -0.0797770619, -0.1905069202, -0.2290577590, 0.2426021844, 0.1287698150, 0.0982618630, -0.0416564941, -0.0072473241, 0.0010907882, -0.1959593445));
	r += mul(s3_5, min16float4x4(-0.2427498698, -0.0726785958, -0.4111863673, -0.1814781725, -0.2705084682, 0.2016358078, -0.1368506998, -0.5097698569, 0.0273880530, -0.0082325395, -0.2217848003, -0.1507436633, 0.1948921084, -0.0626589805, -0.0533081256, -0.2134200186));
	r += mul(s3_6, min16float4x4(-0.2585451603, 0.0441323519, 0.1042424664, -0.0063139545, -0.1439088732, 0.0099778464, -0.2547680140, -0.1985359639, -0.1455203742, -0.0188574959, -0.0842093080, -0.0773445964, 0.1309601218, -0.0622030832, 0.2036272287, 0.0379337035));
	r += mul(s3_7, min16float4x4(0.0558565408, 0.0260983743, 0.0259109177, -0.0278557036, -0.1821886897, 0.1744901538, 0.1834644824, -0.1547842473, -0.1557895392, 0.0662019178, -0.1443024576, 0.0434488207, 0.1528727859, -0.0719997957, -0.0506683923, -0.0382775702));
	r += mul(s3_8, min16float4x4(-0.1002408937, 0.2916060686, 0.0263162125, 0.1386832744, -0.0099450089, -0.1002544239, -0.1264649630, -0.2608997226, -0.0268062633, -0.0083039068, 0.0040793847, 0.0306085441, -0.1765062958, -0.0298345666, 0.1042519137, 0.0541930348));
	r += min16float4(-0.003715324215590954, 0.0013689544284716249, 0.003014152869582176, 0.002463937271386385);
	return r;
}
void Pass2(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	min16float4 s0_0 = l0(-1.0, -1.0);
	min16float4 s0_1 = l0(0.0, -1.0);
	min16float4 s0_2 = l0(1.0, -1.0);
	min16float4 s0_3 = l0(-1.0, 0.0);
	min16float4 s0_4 = l0(0.0, 0.0);
	min16float4 s0_5 = l0(1.0, 0.0);
	min16float4 s0_6 = l0(-1.0, 1.0);
	min16float4 s0_7 = l0(0.0, 1.0);
	min16float4 s0_8 = l0(1.0, 1.0);
	min16float4 s1_0 = max(-s0_0, 0.0);
	min16float4 s1_1 = max(-s0_1, 0.0);
	min16float4 s1_2 = max(-s0_2, 0.0);
	min16float4 s1_3 = max(-s0_3, 0.0);
	min16float4 s1_4 = max(-s0_4, 0.0);
	min16float4 s1_5 = max(-s0_5, 0.0);
	min16float4 s1_6 = max(-s0_6, 0.0);
	min16float4 s1_7 = max(-s0_7, 0.0);
	min16float4 s1_8 = max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	min16float4 s2_0 = l1(-1.0, -1.0);
	min16float4 s2_1 = l1(0.0, -1.0);
	min16float4 s2_2 = l1(1.0, -1.0);
	min16float4 s2_3 = l1(-1.0, 0.0);
	min16float4 s2_4 = l1(0.0, 0.0);
	min16float4 s2_5 = l1(1.0, 0.0);
	min16float4 s2_6 = l1(-1.0, 1.0);
	min16float4 s2_7 = l1(0.0, 1.0);
	min16float4 s2_8 = l1(1.0, 1.0);
	min16float4 s3_0 = max(-s2_0, 0.0);
	min16float4 s3_1 = max(-s2_1, 0.0);
	min16float4 s3_2 = max(-s2_2, 0.0);
	min16float4 s3_3 = max(-s2_3, 0.0);
	min16float4 s3_4 = max(-s2_4, 0.0);
	min16float4 s3_5 = max(-s2_5, 0.0);
	min16float4 s3_6 = max(-s2_6, 0.0);
	min16float4 s3_7 = max(-s2_7, 0.0);
	min16float4 s3_8 = max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t3[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 3
//!DESC CuNNy-2x8C-BILINEAR-CHROMA-TEST-NVL-conv2
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t2, t3
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define l0(x, y) O(t2, float2(x, y))
#define l1(x, y) O(t3, float2(x, y))
float4 f0(float2 pt, float2 pos, min16float4 s0_0, min16float4 s0_1, min16float4 s0_2, min16float4 s0_3, min16float4 s0_4, min16float4 s0_5, min16float4 s0_6, min16float4 s0_7, min16float4 s0_8, min16float4 s1_0, min16float4 s1_1, min16float4 s1_2, min16float4 s1_3, min16float4 s1_4, min16float4 s1_5, min16float4 s1_6, min16float4 s1_7, min16float4 s1_8, min16float4 s2_0, min16float4 s2_1, min16float4 s2_2, min16float4 s2_3, min16float4 s2_4, min16float4 s2_5, min16float4 s2_6, min16float4 s2_7, min16float4 s2_8, min16float4 s3_0, min16float4 s3_1, min16float4 s3_2, min16float4 s3_3, min16float4 s3_4, min16float4 s3_5, min16float4 s3_6, min16float4 s3_7, min16float4 s3_8) {
	min16float4 r = 0.0;
	r += mul(s0_0, min16float4x4(-0.0260591563, 0.2509765923, 0.0211674012, -0.0240179319, -0.0710462406, -0.0664901733, 0.0141784167, 0.1735793054, 0.0905997604, -0.0136762979, 0.0228575673, -0.0364839286, 0.1054968759, -0.0281154364, -0.0231107827, -0.0345038399));
	r += mul(s0_1, min16float4x4(-0.0925334543, -0.0404813364, 0.1342500001, 0.1228343844, -0.0615076683, -0.0973383784, -0.0676266477, 0.1119465306, 0.1052664891, -0.0676315129, 0.0840148777, -0.0154702114, 0.1949337274, 0.1876572073, -0.0036688431, -0.1615976393));
	r += mul(s0_2, min16float4x4(-0.0207832474, 0.0285468046, 0.0051217638, 0.0812878981, -0.0109746242, 0.0573045351, 0.0538408011, 0.0383630805, 0.0304184686, 0.0284216609, 0.0108253714, -0.0263172388, 0.0847230479, -0.0731305629, -0.0391666107, -0.0827619955));
	r += mul(s0_3, min16float4x4(0.1654252559, -0.3256136179, -0.0130321253, 0.0729503706, 0.1302509159, 0.1473003328, 0.0279384553, 0.0143160848, -0.0994566754, 0.3482536972, 0.0534466207, 0.1566011608, -0.2142031938, 0.0292206947, -0.0025725430, -0.0822123066));
	r += mul(s0_4, min16float4x4(0.1532011628, 0.3134702146, -0.0204191338, 0.0404116623, 0.0239807013, -0.1178591326, -0.1073287129, -0.0487003028, -0.1410549134, -0.1725998819, -0.1518692672, 0.1020110473, -0.3731161356, 0.0270281192, 0.0584061928, -0.0176429469));
	r += mul(s0_5, min16float4x4(0.0552380309, -0.0773945004, -0.4565314651, -0.0723653883, -0.0671701282, 0.0488875769, -0.0764224902, -0.0099480003, 0.0327340439, -0.0222290214, -0.1366785765, 0.0543226749, -0.2195890248, -0.0247860141, 0.1719824970, 0.0147599420));
	r += mul(s0_6, min16float4x4(-0.1148326099, 0.1121673733, 0.0018528126, 0.0313678570, -0.1228513047, 0.1791992188, 0.0121255973, 0.0983880982, -0.0627832487, -0.1574812382, -0.0573681481, -0.0630857572, 0.1062120721, -0.0749506280, 0.0003656036, -0.0544396788));
	r += mul(s0_7, min16float4x4(-0.4157087505, -0.0944149941, 0.0347906016, 0.0366128944, -0.2864912450, -0.0403356366, 0.0308231935, 0.0730149969, 0.3564312756, 0.1721132547, 0.0014952661, -0.0403830335, 0.2519896626, -0.0271622278, -0.0246230774, -0.0744638890));
	r += mul(s0_8, min16float4x4(-0.1570553482, -0.0323524922, -0.0931558833, -0.0270433333, 0.0991718397, 0.0397006348, -0.1281737834, 0.0164078623, 0.0329085290, -0.0543043576, 0.0928777307, -0.0072909365, 0.0993645340, -0.0086012296, 0.0825399458, -0.0195339806));
	r += mul(s1_0, min16float4x4(-0.0662444606, 0.1695239544, -0.0608318709, 0.2020947635, -0.0083498787, 0.2079182714, -0.1278158426, -0.1523901820, -0.0392562263, -0.1187945604, -0.0450420827, 0.0294200256, -0.1372648925, 0.6170232296, -0.0033959495, 0.3558575809));
	r += mul(s1_1, min16float4x4(0.0066551813, 0.0633853897, -0.1879537404, 0.0067949444, 0.1022580713, -0.0665207282, -0.0010072939, -0.5656861663, -0.0312888473, -0.1682795882, -0.0623508915, -0.0521784090, -0.2705411911, -0.1856227964, -0.5017948151, 0.3234760761));
	r += mul(s1_2, min16float4x4(0.0101254629, -0.0515341908, -0.0075214780, -0.0601802319, 0.1323151290, -0.0333249643, 0.1919748485, 0.0082148053, -0.0015745701, -0.1121293306, -0.0998041853, -0.0417979062, -0.0115872407, 0.0369768776, -0.0433004238, 0.0988744795));
	r += mul(s1_3, min16float4x4(-0.0010817301, -0.0514252521, -0.0053436249, -0.1214371547, 0.1639325768, 1.2961229086, 0.0443179123, 0.0227242876, -0.0748364776, 0.1501282156, 0.0409265384, 0.0230030045, 0.3232254982, 1.1019905806, 0.0382644720, 0.3771951497));
	r += mul(s1_4, min16float4x4(-0.0227003861, -0.0669574291, 0.1334330291, -0.0444642864, 0.8160161376, -1.2041584253, 0.0236768425, 0.4484232366, 0.0609780103, -0.1419893801, -0.1856493205, -0.0723192766, -0.2522714734, 0.0208775587, -0.0828410685, 0.3034451902));
	r += mul(s1_5, min16float4x4(-0.1079495251, 0.0803174675, 0.1112796068, 0.1254379451, 0.2386035323, 0.0374730118, -0.4249898195, -0.1103288084, -0.0686720014, 0.0324759930, -0.4162668288, 0.0174047612, 0.1497984380, 0.0110561410, -0.1924794763, 0.0609207153));
	r += mul(s1_6, min16float4x4(0.0165563580, 0.0573167987, 0.0188500881, 0.0055271294, -0.0189811420, -0.1830813736, -0.0291284472, -0.1111714691, 0.0768882185, -0.0886474550, -0.0129261902, -0.0686012805, -0.2609528601, -0.1549004763, -0.0230803862, -0.1081654206));
	r += mul(s1_7, min16float4x4(-0.1167833135, -0.0314230472, -0.0204701684, 0.0124769798, -0.6608573198, 0.2627468705, 0.1256970465, 0.0684106797, 0.2692074478, -0.0017497162, 0.0558529161, -0.0698514655, -0.5840595961, 0.0827934593, -0.0998171717, -0.0959338546));
	r += mul(s1_8, min16float4x4(0.0965705812, 0.0248938799, 0.0059277727, 0.0023608215, 0.0765819401, -0.1228724569, 0.0497991145, 0.0494718328, -0.1009518802, 0.0038481094, -0.0876294449, 0.0407658368, -0.3774467111, -0.0250856802, 0.0907532647, -0.0270025302));
	r += mul(s2_0, min16float4x4(0.0401233733, -0.1815278232, 0.0226422865, 0.0900825933, 0.0794675723, -0.1958293766, 0.0783399716, -0.1125347465, 0.0325931907, 0.1237782389, 0.0080546131, -0.1213457659, 0.0199171770, -0.0673284158, -0.0268997699, -0.0017155594));
	r += mul(s2_1, min16float4x4(0.0445794500, -0.1015274823, -0.1010326743, 0.0597288832, 0.0330672897, -0.0462312736, 0.0674297586, 0.0390165932, -0.0240562372, -0.1347605586, 0.1313289553, 0.0188621469, -0.0025795291, 0.1362840533, -0.1611070633, 0.1195669621));
	r += mul(s2_2, min16float4x4(0.0369841941, -0.0086236643, -0.0684551299, -0.0603054725, 0.0443037748, 0.0046074237, 0.1256902218, 0.0314746462, -0.0600835197, 0.0063630757, 0.0118759386, -0.0129086543, -0.0245438796, -0.0070698974, -0.0943790153, 0.0204288531));
	r += mul(s2_3, min16float4x4(-0.0715385824, 0.0249522030, -0.0026774888, -0.0047939005, 0.3270047009, 0.1374668330, 0.0444518328, 0.0836011618, -0.1243969649, -0.2607432306, -0.0244505256, -0.0259408988, 0.1683958024, -0.1474327743, -0.0321062356, -0.0318082087));
	r += mul(s2_4, min16float4x4(-0.2318773121, -0.7128204107, -0.1303912103, -0.2304778546, -0.5878839493, -0.1076763049, 0.0959616452, 0.0442697331, -0.0629534796, 0.0482981801, -0.0104793962, -0.0127206426, 0.4162217677, 0.3488258123, -0.1474497914, 0.0091708470));
	r += mul(s2_5, min16float4x4(-0.1030636579, 0.0633078218, -0.0181358363, 0.0290210303, -0.0792492628, 0.0371498950, -0.2124028504, 0.0155559769, -0.0275397617, 0.0096003991, 0.0514846742, 0.0530365929, 0.0057871537, -0.0081393551, -0.0595092289, 0.0005970627));
	r += mul(s2_6, min16float4x4(-0.1036709696, -0.0269033853, 0.0044287634, 0.0495500863, -0.0759715885, -0.0056344955, 0.0149160447, 0.0446138009, 0.1107111350, -0.0658108294, -0.0149900643, -0.0060368045, -0.2104697227, 0.2568359673, -0.0901200548, 0.1217675135));
	r += mul(s2_7, min16float4x4(-0.1171503961, 0.0434612036, -0.0931212530, 0.0428202152, -0.0028197349, 0.0022848712, 0.0091269417, 0.0355282836, 0.3916018903, 0.0616229102, -0.1184235439, -0.0098739155, -0.3650717437, -0.0388260260, -0.1232616678, -0.0137703065));
	r += mul(s2_8, min16float4x4(0.4081066251, 0.0077390224, -0.0100853620, 0.0730195642, 0.0125153335, 0.0404324122, -0.0671382323, 0.0016492986, 0.1745710224, 0.0318778530, 0.0214780681, 0.0362581201, -0.1071993038, -0.0337537788, -0.0731254146, -0.0642503053));
	r += mul(s3_0, min16float4x4(-0.0267293584, -0.0502853505, -0.0330307260, -0.0711794645, -0.0005080203, 0.0360776335, -0.0190041233, -0.0757785290, 0.0193713270, 0.3446825445, 0.0217336193, -0.0360441096, -0.0518840030, 0.1655045301, 0.0094046416, 0.0793218613));
	r += mul(s3_1, min16float4x4(-0.0072696083, 0.0798355341, 0.0468837619, -0.0859911516, 0.0630371273, 0.0777705684, 0.0106336977, -0.1421481520, -0.0481279418, -0.0104715191, -0.2020003945, 0.1741975993, -0.0535268560, 0.0161687452, -0.0915576145, 0.0557727963));
	r += mul(s3_2, min16float4x4(-0.0226193853, -0.0219614487, -0.0555171296, 0.0258845314, -0.0050348830, -0.0326110534, 0.0440757908, -0.0382033922, 0.0389831588, 0.0196499340, -0.0969823077, 0.0338025093, -0.0245999508, 0.0128989425, 0.0572717041, -0.0189804994));
	r += mul(s3_3, min16float4x4(-0.0370654985, 0.2283351719, 0.0089297397, 0.0751308277, -0.2461028248, 0.3578152955, -0.0548022613, 0.0553640015, -0.0606997050, -0.0682307184, -0.2605043948, 0.1222949550, 0.1502333581, -0.0510510914, 0.0203162972, -0.0732730702));
	r += mul(s3_4, min16float4x4(0.2666017413, 0.4283187985, -0.0102340616, 0.0623154603, -0.1176754087, -0.0067480830, 0.1959555298, 0.0739482194, 0.3926731348, 0.2178061157, 0.1173542365, 2.4749977589, 0.0821708292, -0.2587894797, 0.0825799704, -0.0940444767));
	r += mul(s3_5, min16float4x4(0.2088897973, -0.0678685829, 0.0651978776, -0.0403382033, 0.0534723140, 0.0033300729, 0.0570640899, -0.0026500260, 0.0869099572, -0.0420887694, -0.2681389451, -0.0427540131, -0.0602888986, 0.0157586485, -0.0193182100, 0.0111325691));
	r += mul(s3_6, min16float4x4(0.1435212046, 0.0174346901, -0.0258177333, -0.0381500199, 0.0617019720, -0.1882029474, 0.0220347643, -0.0166191664, -0.0459668413, 0.0160448421, 0.0566730760, -0.0763012618, -0.2048161775, 0.0342066176, 0.0092425765, 0.0551778637));
	r += mul(s3_7, min16float4x4(-0.1696458161, 0.2446290404, 0.0867766812, 0.0642594397, 0.1855881512, 0.1815971434, -0.1322170794, -0.0761144236, -0.7167861462, -0.0490150899, -0.0534652919, -0.1459473372, -0.2376385778, -0.1113674492, -0.0895982832, -0.0065224566));
	r += mul(s3_8, min16float4x4(-0.3734894097, -0.0158079881, -0.0232850406, -0.0207656268, 0.0254435223, -0.0469957292, 0.1850580871, -0.0753306672, -0.2591105700, -0.0429394320, 0.1299549788, -0.0445864871, 0.1302720010, 0.0343639590, -0.0450053662, 0.0002133083));
	r += min16float4(-0.002130520297214389, -0.0018795160576701164, -0.0004379285383038223, -0.00037201467785052955);
	return r;
}
float4 f1(float2 pt, float2 pos, min16float4 s0_0, min16float4 s0_1, min16float4 s0_2, min16float4 s0_3, min16float4 s0_4, min16float4 s0_5, min16float4 s0_6, min16float4 s0_7, min16float4 s0_8, min16float4 s1_0, min16float4 s1_1, min16float4 s1_2, min16float4 s1_3, min16float4 s1_4, min16float4 s1_5, min16float4 s1_6, min16float4 s1_7, min16float4 s1_8, min16float4 s2_0, min16float4 s2_1, min16float4 s2_2, min16float4 s2_3, min16float4 s2_4, min16float4 s2_5, min16float4 s2_6, min16float4 s2_7, min16float4 s2_8, min16float4 s3_0, min16float4 s3_1, min16float4 s3_2, min16float4 s3_3, min16float4 s3_4, min16float4 s3_5, min16float4 s3_6, min16float4 s3_7, min16float4 s3_8) {
	min16float4 r = 0.0;
	r += mul(s0_0, min16float4x4(0.0068015237, -0.1091827825, 0.0658545941, -0.0648395121, -0.1647600234, -0.0597818382, -0.1164452136, 0.0411742069, -0.0858236328, -0.0461303256, -0.0113770533, -0.2158707976, 0.0815091282, 0.0996435285, 0.0629263595, -0.0122134136));
	r += mul(s0_1, min16float4x4(-0.1356662512, 0.0088431034, -0.4177348316, 0.0430243760, 0.0152130872, 0.1450192630, -0.1164385378, 0.1254874617, -0.0219810214, 0.1040070653, -0.1364902705, -0.0750889182, 0.0311792735, -0.1130165160, 0.1586008668, -0.1908905953));
	r += mul(s0_2, min16float4x4(0.0227665287, -0.0531780384, 0.1622181982, 0.0303925145, -0.0430849940, -0.0900974721, 0.1684751213, 0.0245616399, 0.0351868160, 0.0083892951, 0.0021860399, 0.0101804519, 0.0473629162, 0.1479485184, -0.2172818631, -0.0251462311));
	r += mul(s0_3, min16float4x4(-0.0376392305, -0.0304024797, 0.0085870111, -0.0174914543, 0.0445576645, -0.2457303107, -0.0140995672, 0.0731807798, -0.1393946111, 0.1537759006, -0.2026343346, -0.1444625854, 0.0838684365, -0.0100629274, -0.0284274705, 0.0026991926));
	r += mul(s0_4, min16float4x4(0.2889008522, 0.3180516362, 0.1104428694, 0.0580290183, 0.0819183439, 0.3638768494, -0.0893155262, 0.0823446438, 0.0467567332, -0.2745533884, 0.0487717949, 0.1731355786, -0.1022823080, -0.1846393794, -0.1345637590, -0.1148067564));
	r += mul(s0_5, min16float4x4(-0.0062484355, -0.0657903925, 0.1743083298, 0.1027399972, -0.0770769864, 0.0442183875, 0.1500668526, -0.0294403359, 0.0333750732, 0.0006194456, -0.0918683857, -0.0686994269, 0.0216022953, -0.0963072255, -0.0418102108, -0.0847225189));
	r += mul(s0_6, min16float4x4(0.1208496541, -0.0272684470, 0.0237955637, -0.0325423218, 0.0197012052, 0.0910518169, -0.1371885985, 0.0039547919, 0.0418245383, 0.2221672237, -0.1567009985, 0.0188089069, -0.0620628111, -0.0954837725, 0.0430143513, 0.0092044529));
	r += mul(s0_7, min16float4x4(-0.0351721123, 0.1628609300, -0.0928771272, -0.1391604841, -0.0827635750, -0.1528267115, 0.2560169697, -0.0375969224, -0.0118489554, -0.0708822384, 0.0724587366, -0.0250642598, 0.0774063691, -0.0294856597, -0.0165004190, 0.0250466242));
	r += mul(s0_8, min16float4x4(0.0011396568, -0.0086709419, -0.0888948217, 0.0879439786, -0.0151181826, -0.0367151201, -0.0420096256, 0.0423748791, 0.0355454013, -0.0640032440, 0.0566078238, 0.0530145429, 0.0007164519, 0.0873163939, -0.0940942317, -0.0544607490));
	r += mul(s1_0, min16float4x4(-0.0569411181, 0.2096855789, 0.0276611019, 0.1434797943, 0.0424305238, 0.2365079075, 0.1472868770, -0.0415108353, 0.0536431521, 0.1078335270, -0.0254536867, 0.0487046652, -0.3616439700, 0.0536268838, 0.0008468005, 0.0879808143));
	r += mul(s1_1, min16float4x4(0.1224653870, -0.0958751515, 0.2935675681, -0.2562498748, 0.0228014030, -0.6972661018, 0.0534558259, -0.2640974522, 0.0183123313, 0.0673539415, 0.2274746150, 0.0150851132, -0.0308715608, -0.2711037099, -0.2095845044, -0.3738549948));
	r += mul(s1_2, min16float4x4(0.0266555157, -0.0602964535, -0.1394544542, 0.0854130015, 0.0146010881, 0.2747781873, 0.0470828265, 0.2841931880, -0.0505049638, 0.1419407874, -0.0748619065, 0.0199256372, -0.0229699295, 0.0353580043, 0.1461066008, -0.0957388803));
	r += mul(s1_3, min16float4x4(0.0445540957, -0.0381356142, 0.3531555235, 0.1026501730, -0.4482997060, -0.5996723175, -0.0399701893, 0.0137020573, -0.1164494380, 0.0386525691, 0.0558663458, 0.0025622682, -0.6381356716, -0.2672103047, 0.2853392661, -0.0286357962));
	r += mul(s1_4, min16float4x4(-0.4680443406, 0.2058377713, -0.4146733880, -0.1635977030, 0.2855988741, -0.2415876389, -1.1838058233, 0.0313525200, -0.0039328854, -0.1358660012, 0.1450168639, 0.0423462279, -0.0841987580, -0.6089287996, -0.4563325942, -0.3592836857));
	r += mul(s1_5, min16float4x4(0.1011501178, -0.1807698309, 0.0635434911, -0.1146373004, 0.0188467540, 0.5850484967, -0.1004997343, -0.3338544369, 0.0880849138, 0.1494281441, 0.0508544892, 0.0157710388, -0.0222514290, 0.1343210638, -0.1307245195, -0.2147934884));
	r += mul(s1_6, min16float4x4(-0.1154797599, -0.1559337229, 0.0983513743, -0.0009003437, -0.1948207021, -0.0457255505, -0.0686596483, 0.0568174236, -0.0425204448, 0.0662569702, -0.0430812538, 0.0293355789, -0.4857461154, -0.4365231693, -0.1411642730, -0.0714055151));
	r += mul(s1_7, min16float4x4(-0.0036964563, -0.0311332420, -0.1724992990, 0.0447659120, 0.2420036197, -0.4343982935, -0.0418524332, -0.0958717987, 0.0527440757, -0.0423604324, 0.3930125237, 0.0773193911, 0.0938115418, 0.0113150729, -0.9529580474, 0.1045262665));
	r += mul(s1_8, min16float4x4(0.0317344517, 0.0071920846, 0.0990842581, -0.0569313131, 0.0778511837, 0.0550864674, 0.4729124904, -0.1267011017, -0.0530327410, -0.1335640848, 0.2511771619, -0.0859073251, -0.0082922252, -0.0708348975, -0.0111680171, -0.2679814398));
	r += mul(s2_0, min16float4x4(-0.0997984633, -0.0119539434, -0.1521947980, 0.0065506641, 0.0980452225, -0.1065076515, 0.0485015102, 0.0407669544, 0.0986708254, -0.0479378030, 0.0520976558, -0.0250123069, -0.0413964838, 0.0267001744, 0.0651889145, -0.0661780238));
	r += mul(s2_1, min16float4x4(0.0920425355, 0.1075892374, 0.1694291234, 0.1518718153, -0.0709699318, -0.0920403674, -0.2245446444, 0.1213829517, 0.0277335681, -0.0032620477, -0.0655882135, 0.0396271981, -0.1655272990, -0.0581824332, -0.0508553497, -0.1891501993));
	r += mul(s2_2, min16float4x4(-0.0244896859, 0.0639227405, -0.0571457334, -0.0850537643, -0.0532828346, -0.0308967456, -0.0214792341, -0.0670238659, -0.0031768642, -0.0135638388, 0.0385526419, -0.0080773309, 0.0025885624, 0.0084181270, -0.0460047871, -0.0240844488));
	r += mul(s2_3, min16float4x4(0.1201081797, 0.0139993113, -0.0789838284, 0.0587234385, 0.1130608916, -0.0236800518, 0.0541456938, 0.1076673791, -0.0060779476, 0.1743162572, -0.0433557853, -0.0924896970, -0.4980151951, -0.0916330814, 0.0507121272, -0.2372485846));
	r += mul(s2_4, min16float4x4(-0.1451812088, -0.1945697516, 0.1938286424, -0.0527876019, -0.2511837482, 0.0362739563, -0.1315779239, -0.2900663912, -0.4600596130, -0.0782506019, -0.0755648986, -0.0283124037, -0.5206031203, 0.0306320023, -0.1635532677, -1.4077267647));
	r += mul(s2_5, min16float4x4(-0.0837850198, -0.0444995798, 0.0281357504, -0.3388887942, 0.0263627376, -0.0515869558, 0.0791123360, 0.3042159081, 0.0618848130, -0.1293943822, 0.2556605935, 0.1093360037, 0.0259572230, 0.0463413447, -0.2254921347, -0.0381031856));
	r += mul(s2_6, min16float4x4(0.0130050788, 0.1743139774, 0.0229415838, -0.0525538027, 0.0191975348, 0.0524700284, -0.0121255545, -0.0169392191, 0.0295627620, 0.0083495583, 0.0272200461, -0.0341811366, -0.1190590039, 0.0987459198, -0.2325665057, -0.0292306468));
	r += mul(s2_7, min16float4x4(-0.0599715672, -0.1469520926, -0.1753163189, 0.0406962223, -0.0423929282, 0.0274738725, -0.0517176986, -0.0294264257, 0.0472572185, 0.2103621811, -0.0734900013, -0.0797128379, 0.0195352118, -0.1939836740, 0.1908302903, 0.1626075655));
	r += mul(s2_8, min16float4x4(-0.0013027942, -0.0059232204, -0.0318458155, 0.0350208804, 0.0155731216, -0.0998556390, 0.1281777918, 0.0866640732, 0.0020039456, -0.0482177772, 0.1743173301, 0.0689569339, -0.0020751143, 0.1474813521, -0.1065564379, -0.1559210420));
	r += mul(s3_0, min16float4x4(0.0390788056, 0.0029016240, 0.0887252241, -0.0596269928, 0.0690815374, 0.0195615664, 0.0583980493, 0.0165689085, -0.0395764671, 0.0169725046, 0.1509120613, 0.0115751196, -0.0487030633, -0.1034881994, -0.0700364932, 0.0859258473));
	r += mul(s3_1, min16float4x4(-0.0588977970, -0.0350210890, -0.0986023322, -0.0368577763, 0.0469872393, -0.0704301372, 0.1738383323, -0.1686885953, 0.0712543726, 0.0659589097, -0.0397778749, -0.1781011969, 0.0808417872, -0.0448995940, 0.0350317694, 0.1023766994));
	r += mul(s3_2, min16float4x4(-0.0072843400, 0.0317693502, 0.0048321402, -0.0430514999, -0.0240718629, 0.0258116312, -0.1274297684, 0.0329425968, 0.0462581702, 0.0001168116, 0.0702406988, 0.0762839764, -0.0028769989, -0.0254289247, 0.0185295623, 0.0301272813));
	r += mul(s3_3, min16float4x4(-0.1923467070, -0.1733421683, -0.1111243367, 0.0435516573, 0.0021259645, 0.0460125320, 0.0247889906, 0.0175371096, -0.4161483347, 0.6304585338, -0.1117817834, 0.0311292671, -0.0236184951, -0.1280756593, 0.1054358259, 0.0361812040));
	r += mul(s3_4, min16float4x4(0.0086079966, -0.2605357468, 0.1577946544, -0.0782846436, -0.0336910784, -0.5446772575, 0.0937513262, 0.1574617773, -0.0127857663, 0.7028903961, -0.1040156558, -0.1014441848, 0.0116719464, -0.4805709720, -0.2626878023, -0.0203200523));
	r += mul(s3_5, min16float4x4(-0.0005548802, 0.1846827120, -0.2639903128, 0.0733274370, 0.0036775689, 0.1087966785, -0.1761569977, -0.0536915660, 0.0220833328, -0.0274157543, 0.0554742478, 0.1694342196, -0.0670749843, -0.0817896277, -0.0090711880, -0.0924288929));
	r += mul(s3_6, min16float4x4(0.0671321079, -0.0145444078, 0.0167333558, 0.0392624959, -0.2319379598, -0.1637255698, 0.0168003459, -0.0200037677, 0.0779451728, -0.1345686316, 0.5757955313, 0.0887237117, -0.0037224595, 0.0728480369, -0.1400418133, -0.0306407623));
	r += mul(s3_7, min16float4x4(0.0000323514, -0.0160435587, -0.2048666477, -0.1130768284, 0.2014014721, 0.1454641819, -0.7912148833, 0.0769734979, -0.0008764652, 0.0597780161, -0.3246563375, 0.1420952976, 0.0074686180, 0.0441540331, 0.1602045149, 0.1007710472));
	r += mul(s3_8, min16float4x4(0.0353390872, -0.1160444990, -0.0052958895, 0.0197550822, -0.0025717719, 0.0149215758, 0.0447835624, -0.1274423301, -0.0107567180, 0.0299413111, 0.0506624728, -0.0897015780, -0.0319856293, 0.0344563536, -0.0832215324, 0.0351403169));
	r += min16float4(0.0002609213115647435, -0.0011677079601213336, -0.0032322965562343597, -0.001577309099957347);
	return r;
}
void Pass3(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	min16float4 s0_0 = l0(-1.0, -1.0);
	min16float4 s0_1 = l0(0.0, -1.0);
	min16float4 s0_2 = l0(1.0, -1.0);
	min16float4 s0_3 = l0(-1.0, 0.0);
	min16float4 s0_4 = l0(0.0, 0.0);
	min16float4 s0_5 = l0(1.0, 0.0);
	min16float4 s0_6 = l0(-1.0, 1.0);
	min16float4 s0_7 = l0(0.0, 1.0);
	min16float4 s0_8 = l0(1.0, 1.0);
	min16float4 s1_0 = max(-s0_0, 0.0);
	min16float4 s1_1 = max(-s0_1, 0.0);
	min16float4 s1_2 = max(-s0_2, 0.0);
	min16float4 s1_3 = max(-s0_3, 0.0);
	min16float4 s1_4 = max(-s0_4, 0.0);
	min16float4 s1_5 = max(-s0_5, 0.0);
	min16float4 s1_6 = max(-s0_6, 0.0);
	min16float4 s1_7 = max(-s0_7, 0.0);
	min16float4 s1_8 = max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	min16float4 s2_0 = l1(-1.0, -1.0);
	min16float4 s2_1 = l1(0.0, -1.0);
	min16float4 s2_2 = l1(1.0, -1.0);
	min16float4 s2_3 = l1(-1.0, 0.0);
	min16float4 s2_4 = l1(0.0, 0.0);
	min16float4 s2_5 = l1(1.0, 0.0);
	min16float4 s2_6 = l1(-1.0, 1.0);
	min16float4 s2_7 = l1(0.0, 1.0);
	min16float4 s2_8 = l1(1.0, 1.0);
	min16float4 s3_0 = max(-s2_0, 0.0);
	min16float4 s3_1 = max(-s2_1, 0.0);
	min16float4 s3_2 = max(-s2_2, 0.0);
	min16float4 s3_3 = max(-s2_3, 0.0);
	min16float4 s3_4 = max(-s2_4, 0.0);
	min16float4 s3_5 = max(-s2_5, 0.0);
	min16float4 s3_6 = max(-s2_6, 0.0);
	min16float4 s3_7 = max(-s2_7, 0.0);
	min16float4 s3_8 = max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 4
//!DESC CuNNy-2x8C-BILINEAR-CHROMA-TEST-NVL-out
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, min16float4 s0_0, min16float4 s0_1, min16float4 s0_2, min16float4 s0_3, min16float4 s0_4, min16float4 s0_5, min16float4 s0_6, min16float4 s0_7, min16float4 s0_8, min16float4 s1_0, min16float4 s1_1, min16float4 s1_2, min16float4 s1_3, min16float4 s1_4, min16float4 s1_5, min16float4 s1_6, min16float4 s1_7, min16float4 s1_8, min16float4 s2_0, min16float4 s2_1, min16float4 s2_2, min16float4 s2_3, min16float4 s2_4, min16float4 s2_5, min16float4 s2_6, min16float4 s2_7, min16float4 s2_8, min16float4 s3_0, min16float4 s3_1, min16float4 s3_2, min16float4 s3_3, min16float4 s3_4, min16float4 s3_5, min16float4 s3_6, min16float4 s3_7, min16float4 s3_8) {
	min16float4 r = 0.0;
	r += mul(s0_0, min16float4x4(0.1366440803, 0.0092331804, -0.0701964125, 0.1022631675, 0.0096353097, 0.0137632834, 0.0085519012, 0.0028448126, -0.0209187120, 0.1751510948, -0.1122536361, -0.1695837080, -0.0059208828, -0.0386852920, -0.0278932974, -0.0087758219));
	r += mul(s0_1, min16float4x4(0.6704163551, 0.6933627129, -0.7181131244, -0.7676044703, -0.0010741235, 0.0460357852, 0.0456222147, -0.0062412955, 0.0210763365, -0.0911683142, 0.0690925494, 0.0487718694, 0.0147829289, 0.0790886506, -0.0313746743, -0.0228701010));
	r += mul(s0_2, min16float4x4(-0.0364824310, 0.1013089940, 0.0245441310, -0.0925185904, -0.0274311695, -0.0974221677, -0.0171847474, 0.0282988679, -0.0020698390, 0.0055982140, -0.0167691968, -0.0200555790, 0.0027073300, -0.0020485884, -0.0005915760, -0.0095617138));
	r += mul(s0_3, min16float4x4(-0.0092913965, 0.0279318020, 0.1079554409, 0.0514426902, 0.0014783762, -0.0106388284, -0.0164341331, 0.0011945962, -1.0014835596, -0.6600795984, 0.7246605158, 0.3564468622, 0.1426441520, 0.0609196499, 0.2353375703, -0.0151916854));
	r += mul(s0_4, min16float4x4(-0.0862616450, -0.0993651822, 0.1342779100, 0.1096190959, -0.0045601963, 0.0241164770, -0.1323117167, 0.0163120590, 0.1909284145, 0.3309460878, -0.1522608995, 0.1038242355, -0.0866632611, 0.1049695611, -0.0020867551, 0.2666019201));
	r += mul(s0_5, min16float4x4(-0.0239023920, 0.0037258465, -0.0301034991, 0.0471929237, -0.1411133707, -0.1619855314, -0.0336763002, -0.1831056625, -0.0148968250, -0.0087118130, -0.0130989775, 0.0156534854, 0.0018591251, 0.0143123064, 0.0042254454, 0.0282430183));
	r += mul(s0_6, min16float4x4(0.0069723083, 0.0091563677, 0.0153595190, 0.0112429839, 0.0191591159, 0.0111058382, 0.0606916659, 0.0153493918, 0.4212144911, 0.1617037058, -0.5253605247, 0.2033574879, -0.0523678847, -0.0570065379, -0.0662259981, -0.0440676212));
	r += mul(s0_7, min16float4x4(-0.0133357653, -0.0272854436, -0.0180054456, -0.0233817827, 0.0954552516, 0.0837396011, 0.1159688160, 0.1193781793, 0.2958684266, 0.4204719663, 0.1278867871, -0.7203856111, 0.0118220681, 0.0014677903, -0.0027738388, -0.0194620378));
	r += mul(s0_8, min16float4x4(0.0021539915, 0.0060351077, -0.0138112074, -0.0080870707, 0.0092596291, 0.0138163306, 0.0116167171, 0.0201240797, 0.0217983183, 0.0033740182, -0.0140885031, 0.0269906484, -0.0080410345, -0.0034276594, -0.0044309306, -0.0019347987));
	r += mul(s1_0, min16float4x4(-0.0565190688, -0.0499369130, -0.0710569993, -0.0137945758, -0.0107122120, -0.0052699638, -0.0138230408, -0.0035758084, 0.0666133016, 0.0378708430, 0.0798342675, 0.0361236036, 0.0112648429, 0.0355109796, 0.0020996400, 0.0124107655));
	r += mul(s1_1, min16float4x4(0.0747996494, 0.0592785105, 0.0141312210, -0.0045639984, -0.0197136439, -0.0433077663, -0.0087581631, -0.0085681975, -0.0539745651, -0.0234093405, -0.0242313612, -0.0034296280, 0.1193926707, -0.0025002286, -0.0744829327, -0.0369867943));
	r += mul(s1_2, min16float4x4(0.0157748219, 0.0222620200, -0.0027565418, -0.0144262342, 0.1183632463, 0.0112124057, 0.0027204901, -0.0013105090, -0.0050677974, -0.0071926983, 0.0031613307, -0.0003778017, 0.0043103993, 0.2088619471, -0.0499283895, -0.0720199123));
	r += mul(s1_3, min16float4x4(-0.0202974826, -0.0244021285, -0.0460408665, -0.0428729542, -0.0046113790, 0.0009910638, 0.0156894848, 0.0077074361, 0.2832691669, 0.0676187873, 0.2529296875, 0.0605109371, -0.1245776415, -0.0872819275, -0.1274396479, -0.0309815276));
	r += mul(s1_4, min16float4x4(-0.0520083718, 0.0235994924, -0.0237422921, 0.0321023166, 0.1499428898, -0.0608028099, 0.0301997978, -0.0296418928, -0.0746292099, -0.0999846980, -0.0953946561, -0.1440546215, -1.2519204617, -0.2444336712, 0.9658862948, 0.1570011526));
	r += mul(s1_5, min16float4x4(0.0201595221, -0.0159020219, 0.0249652453, -0.0087185865, -0.4716785252, 0.1655946672, 0.2543027699, 0.5829383731, 0.0206894446, 0.0030151522, -0.0027964155, -0.0113662183, 0.1237279549, -1.4358514547, 0.2950851917, 0.8649834394));
	r += mul(s1_6, min16float4x4(-0.0128339073, -0.0093725165, -0.0029997295, -0.0159813575, -0.0206796229, -0.0166391637, -0.0701380968, -0.0067054583, -0.0931985006, -0.0866696090, -0.0345518589, -0.0549412593, 0.0918020532, 0.0525933094, -0.0775117055, 0.0338227414));
	r += mul(s1_7, min16float4x4(0.0338133685, 0.0259048995, 0.0012107048, 0.0316152684, -0.0506704226, -0.0486139357, -0.2149753571, -0.0962178484, -0.0354937837, -0.0459978096, -0.0361610949, -0.0196745377, -0.1893926263, -0.0326940529, 0.5225887299, -0.1156984121));
	r += mul(s1_8, min16float4x4(0.0044421530, 0.0027846307, 0.0034957761, -0.0138347363, 0.1213651970, 0.1108481884, -0.0379707180, -0.2723378241, -0.0160581041, -0.0065504797, -0.0064546736, -0.0111315837, -0.0095026894, -0.1228173003, -0.2124225497, 0.3904584944));
	r += mul(s2_0, min16float4x4(0.0070092673, 0.0384418517, -0.0183698386, 0.0021867005, -0.0048801936, 0.0234523080, 0.0198780112, 0.0091221323, -0.0801064596, -0.0723446459, 0.0494059697, -0.0054889587, -0.2537413836, 0.0374490470, 0.1782420278, 0.1105666757));
	r += mul(s2_1, min16float4x4(0.3292356730, 0.0445436426, -0.0715745762, 0.0118190385, -0.3642755747, 0.2919913828, 0.0207024273, 0.0762071088, 0.5878940225, -0.6670592427, 0.1887600571, -0.2309330255, -0.0372572094, 0.1075640544, -0.0646620691, -0.0843583941));
	r += mul(s2_2, min16float4x4(-0.0946477428, -0.0624889284, 0.1492465287, -0.0841897875, 0.0762264580, -0.0594468340, 0.0596952327, -0.1100874320, -0.0139233181, 0.0132258488, -0.0008189230, 0.0504430458, -0.0074328766, -0.0271271933, -0.0114211701, -0.0059166248));
	r += mul(s2_3, min16float4x4(0.0312024821, 0.0375133082, 0.1015013903, 0.0437091812, -0.0193759073, -0.0373233482, -0.0910897925, -0.0570083559, 0.0389202274, 0.1482802629, -0.0884049460, 0.0016258331, -0.2892147899, 0.4135501981, -0.9962043166, 0.5407078266));
	r += mul(s2_4, min16float4x4(0.2724285126, 0.0178543776, 0.7515200973, 0.0726087466, -0.2910957336, 0.2177115828, -0.8691405058, 0.4013677537, 0.1247508377, 0.0641701445, 0.3528516293, -0.3486708701, 0.7315635085, -1.0844045877, 0.2793323100, -0.0627326667));
	r += mul(s2_5, min16float4x4(-1.0620950460, 1.3167314529, -1.0222413540, 0.7302023768, -0.0397641696, 0.0032514480, -0.0500690788, 0.0342009701, 0.0214101858, 0.0292295888, -0.0061014011, 0.0359622352, -0.0404250100, 0.0208929591, 0.0189115051, -0.0228872411));
	r += mul(s2_6, min16float4x4(-0.0302224495, -0.0191653706, -0.0452826917, -0.0082582133, -0.0043848413, -0.0179883484, 0.1086430699, -0.0035926176, -0.0219749380, -0.0081427079, 0.0050145732, 0.0106198229, -0.0286391899, -0.1151121035, 0.1782429814, -0.1323356628));
	r += mul(s2_7, min16float4x4(-0.0514208935, -0.0446532145, -0.1640092432, -0.0903523713, 0.0062922528, 0.0486656502, 0.0157469939, 0.1747112423, 0.0387730226, 0.0189163592, 0.0710546970, 0.0455715284, 0.1918589771, -0.0170770288, 0.6275922656, -0.7832012773));
	r += mul(s2_8, min16float4x4(-0.0228821877, -0.0668177903, -0.3053450882, 0.3271517456, -0.0034341987, -0.0163912568, -0.0142138256, -0.0229497943, -0.0050053950, -0.0053723264, -0.0012767552, 0.0017931741, -0.0788557902, 0.0685920864, -0.0779003054, 0.1149870753));
	r += mul(s3_0, min16float4x4(-0.0397419222, -0.0187307876, 0.0324051864, -0.0020985648, -0.0198952165, -0.0116422642, -0.0317470916, -0.0033541997, 0.1036809757, 0.0266096182, 0.0080519682, -0.0122300163, -0.0101913186, 0.0087999757, -0.0778872296, -0.0104086641));
	r += mul(s3_1, min16float4x4(-0.0637204126, -0.1906250715, 0.0050140531, 0.0197716728, -0.0202041008, 0.0143609196, 0.0106688179, 0.0066994308, 0.0429339074, 0.1573034525, -0.0332816914, -0.0387029871, 0.0149138812, 0.0806806758, 0.0108434549, -0.0123816980));
	r += mul(s3_2, min16float4x4(0.0172051527, 0.0355906859, 0.0187379867, 0.0129603092, 0.0029230190, -0.0164197832, 0.0180055704, 0.0160488281, -0.0103533370, -0.0259926524, -0.0143545074, -0.0013614390, 0.0088100238, -0.0155596239, 0.0129767517, 0.0061949859));
	r += mul(s3_3, min16float4x4(-0.0426025093, 0.0097198375, -0.1743164212, 0.0020767674, 0.0428615622, 0.0088167852, 0.1119281873, 0.0117724761, -0.1114760041, -0.0614902638, 0.0395386778, 0.0026832069, 0.0151782036, 0.0691865683, 0.1505690068, 0.0476412326));
	r += mul(s3_4, min16float4x4(-0.2802735269, -0.1294810772, -0.3447266221, -0.3643422127, 0.1914701760, 0.1032739356, 0.0812958777, 0.1515613049, -0.0191717539, -0.1257578433, -0.0146547910, 0.0381117128, 0.0455597416, -0.0724983066, 0.0575976335, 0.1291016638));
	r += mul(s3_5, min16float4x4(0.0733207762, 0.0514922626, 0.0338679291, -0.0346035175, -0.0075603183, 0.0406961627, -0.0001077524, -0.0075076181, -0.0124749187, 0.0057223476, -0.0173569489, -0.0477906764, 0.0002670406, 0.0101013724, 0.0006724962, 0.0132145761));
	r += mul(s3_6, min16float4x4(0.0088521019, 0.0087966481, 0.0318602882, 0.0136671336, -0.0079595605, -0.0017881192, -0.0548341870, -0.0264221784, 0.0230234228, 0.0165404473, -0.0320256315, 0.0027430137, 0.0387425832, 0.0270508267, -0.0041035865, 0.0225972459));
	r += mul(s3_7, min16float4x4(0.0898893401, 0.0812998414, 0.1161371991, 0.1288834214, -0.0886225030, -0.0588068925, -0.0282058883, -0.0786044225, -0.0374775790, -0.0350389369, -0.0238657556, -0.0696284473, 0.0049641947, 0.0256032720, 0.0000673111, -0.0237414222));
	r += mul(s3_8, min16float4x4(0.0340348966, 0.0401609987, 0.0435480699, 0.0821469650, 0.0036497207, 0.0094052991, -0.0083217630, 0.0363443606, 0.0026440343, -0.0029777603, -0.0007827815, 0.0026848845, -0.0075419778, 0.0012441021, -0.0039333114, 0.0054762177));
	r += min16float4(-9.126139048021287e-05, -0.00037321101990528405, 0.00010302219016011804, -6.798737013014033e-05);
	return tanh(r);
}
void Pass4(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	min16float4 s0_0 = l0(-1.0, -1.0);
	min16float4 s0_1 = l0(0.0, -1.0);
	min16float4 s0_2 = l0(1.0, -1.0);
	min16float4 s0_3 = l0(-1.0, 0.0);
	min16float4 s0_4 = l0(0.0, 0.0);
	min16float4 s0_5 = l0(1.0, 0.0);
	min16float4 s0_6 = l0(-1.0, 1.0);
	min16float4 s0_7 = l0(0.0, 1.0);
	min16float4 s0_8 = l0(1.0, 1.0);
	min16float4 s1_0 = max(-s0_0, 0.0);
	min16float4 s1_1 = max(-s0_1, 0.0);
	min16float4 s1_2 = max(-s0_2, 0.0);
	min16float4 s1_3 = max(-s0_3, 0.0);
	min16float4 s1_4 = max(-s0_4, 0.0);
	min16float4 s1_5 = max(-s0_5, 0.0);
	min16float4 s1_6 = max(-s0_6, 0.0);
	min16float4 s1_7 = max(-s0_7, 0.0);
	min16float4 s1_8 = max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	min16float4 s2_0 = l1(-1.0, -1.0);
	min16float4 s2_1 = l1(0.0, -1.0);
	min16float4 s2_2 = l1(1.0, -1.0);
	min16float4 s2_3 = l1(-1.0, 0.0);
	min16float4 s2_4 = l1(0.0, 0.0);
	min16float4 s2_5 = l1(1.0, 0.0);
	min16float4 s2_6 = l1(-1.0, 1.0);
	min16float4 s2_7 = l1(0.0, 1.0);
	min16float4 s2_8 = l1(1.0, 1.0);
	min16float4 s3_0 = max(-s2_0, 0.0);
	min16float4 s3_1 = max(-s2_1, 0.0);
	min16float4 s3_2 = max(-s2_2, 0.0);
	min16float4 s3_3 = max(-s2_3, 0.0);
	min16float4 s3_4 = max(-s2_4, 0.0);
	min16float4 s3_5 = max(-s2_5, 0.0);
	min16float4 s3_6 = max(-s2_6, 0.0);
	min16float4 s3_7 = max(-s2_7, 0.0);
	min16float4 s3_8 = max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 5
//!DESC CuNNy-2x8C-BILINEAR-CHROMA-TEST-NVL-shuffle
//!STYLE PS
//!IN t2, INPUT
float4 Pass5(float2 pos) {
	float2 pt = float2(GetInputPt());
	const static float3x3 rgb2yuv = {0.299, 0.587, 0.114, -0.169, -0.331, 0.5, 0.5, -0.419, -0.081};
	const static float3x3 yuv2rgb = {1, -0.00093, 1.401687, 1, -0.3437, -0.71417, 1, 1.77216, 0.00099};
	float4 r = 0.0;
	float2 size = float2(GetInputSize());
	float2 f = frac(pos * size);
	float3 yuv = mul(rgb2yuv, INPUT.SampleLevel(SL, pos, 0).rgb);
	int2 i = int2(f * 2.0);
	r.r = t2.SampleLevel(SP, (float2(0.5, 0.5) - f) * pt + pos, 0)[2*i.y + i.x];
	r.r += yuv.r;
	r.a = 1.0;
	r.r = clamp(r, 0.0, 1.0);
	float3 px = mul(yuv2rgb, float3(r.r, yuv.yz));
	return float4(px, 1.0);
}
