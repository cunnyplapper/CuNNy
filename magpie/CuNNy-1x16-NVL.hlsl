// CuNNy 1x16 NVL
// Copyright (c) 2024 cunnyplapper

// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public
// License along with this program.  If not, see <https://www.gnu.org/licenses/>.
/* ------------------------------------------------------------------- */

//!MAGPIE EFFECT
//!VERSION 3
//!OUTPUT_WIDTH INPUT_WIDTH * 2
//!OUTPUT_HEIGHT INPUT_HEIGHT * 2

//!TEXTURE
Texture2D INPUT;

//!TEXTURE
//!WIDTH INPUT_WIDTH * 2
//!HEIGHT INPUT_HEIGHT * 2
//!FORMAT R16_FLOAT
Texture2D easu;

//!SAMPLER
//!FILTER POINT
SamplerState SP;

//!SAMPLER
//!FILTER LINEAR
SamplerState SL;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R16G16B16A16_FLOAT
Texture2D up_0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R16G16B16A16_FLOAT
Texture2D up_1;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R16G16B16A16_FLOAT
Texture2D up_2;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R16G16B16A16_FLOAT
Texture2D up_3;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R16G16B16A16_FLOAT
Texture2D conv1_0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R16G16B16A16_FLOAT
Texture2D conv1_1;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R16G16B16A16_FLOAT
Texture2D conv1_2;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R16G16B16A16_FLOAT
Texture2D conv1_3;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R16G16B16A16_FLOAT
Texture2D down;

// FSR mpv | modified
// Copyright (c) 2021 Advanced Micro Devices, Inc. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// FidelityFX FSR v1.0.2 by AMD
// ported to mpv by agyild

//!PASS 1
//!STYLE PS
//!IN INPUT
//!OUT easu

float GetLuma(float3 rgb) {
	return dot(float3(0.299, 0.587, 0.114), rgb);
}

float APrxLoRcpF1(float a) {
	return asfloat(uint(0x7ef07ebb) - asuint(a));
}

float APrxLoRsqF1(float a) {
	return asfloat(uint(0x5f347d74) - (asuint(a) >> uint(1)));
}

float AMin3F1(float x, float y, float z) {

	return min(x, min(y, z));
}

float AMax3F1(float x, float y, float z) {
	return max(x, max(y, z));
}

void tap(inout float aC, inout float aW, float2 off, float2 dir, float2 len,
         float lob, float clp, float c){
	float2 v;
	v.x = (off.x * ( dir.x)) + (off.y * dir.y);
	v.y = (off.x * (-dir.y)) + (off.y * dir.x);
	v *= len;
	float d2 = v.x * v.x + v.y * v.y;
	d2 = min(d2, clp);
	float wB = float(2.0 / 5.0) * d2 + -1.0;

	float wA = lob * d2 + -1.0;
	wB *= wB;
	wA *= wA;
	wB = float(25.0 / 16.0) * wB + float(-(25.0 / 16.0 - 1.0));
	float w = wB * wA;
	aC += c * w;
	aW += w;
}

void set(inout float2 dir, inout float len, float2 pp, bool biS, bool biT,
         bool biU, bool biV, float lA, float lB, float lC, float lD, float lE){

	float w = 0.0;
	if (biS)
		w = (1.0 - pp.x) * (1.0 - pp.y);
	if (biT)
		w =        pp.x  * (1.0 - pp.y);
	if (biU)
		w = (1.0 - pp.x) *        pp.y;

	if (biV)
		w =        pp.x  *        pp.y;
	float dc = lD - lC;
	float cb = lC - lB;
	float lenX = max(abs(dc), abs(cb));
	lenX = APrxLoRcpF1(lenX);
	float dirX = lD - lB;
	lenX = clamp(abs(dirX) * lenX, 0.0, 1.0);
	lenX *= lenX;
	float ec = lE - lC;

	float ca = lC - lA;
	float lenY = max(abs(ec), abs(ca));
	lenY = APrxLoRcpF1(lenY);
	float dirY = lE - lA;
	lenY = clamp(abs(dirY) * lenY, 0.0, 1.0);
	lenY *= lenY;
	dir += float2(dirX, dirY) * w;
	len += dot(float2(w, w), float2(lenX, lenY));
}

float4 Pass1(float2 pos) {
	float2 pt = float2(GetInputPt());
	float2 size = float2(GetInputSize());
	float4 pix = float4(0.0, 0.0, 0.0, 1.0);
	float2 pp = pos * size - float2(0.5, 0.5);
	float2 fp = floor(pp);
	pp -= fp;
	float b = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(0.5, -0.5)) * pt), 0).rgb);
	float c = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(1.5, -0.5)) * pt), 0).rgb);
	float e = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(-0.5, 0.5)) * pt), 0).rgb);
	float f = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 0.5, 0.5)) * pt), 0).rgb);
	float g = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 1.5, 0.5)) * pt), 0).rgb);
	float h = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 2.5, 0.5)) * pt), 0).rgb);
	float i = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(-0.5, 1.5)) * pt), 0).rgb);
	float j = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 0.5, 1.5)) * pt), 0).rgb);
	float k = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 1.5, 1.5)) * pt), 0).rgb);
	float l = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 2.5, 1.5)) * pt), 0).rgb);
	float n = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(0.5, 2.5) ) * pt), 0).rgb);
	float o = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(1.5, 2.5) ) * pt), 0).rgb);
	float4 bczzL = float4(b, c, 0.0, 0.0);
	float4 ijfeL = float4(i, j, f, e);
	float4 klhgL = float4(k, l, h, g);
	float4 zzonL = float4(0.0, 0.0, o, n);
	float bL = bczzL.x;
	float cL = bczzL.y;
	float iL = ijfeL.x;
	float jL = ijfeL.y;
	float fL = ijfeL.z;
	float eL = ijfeL.w;
	float kL = klhgL.x;
	float lL = klhgL.y;
	float hL = klhgL.z;
	float gL = klhgL.w;
	float oL = zzonL.z;
	float nL = zzonL.w;
	float2 dir = float2(0.0, 0.0);
	float len = 0.0;
	set(dir, len, pp, true, false, false, false, bL, eL, fL, gL, jL);
	set(dir, len, pp, false, true, false, false, cL, fL, gL, hL, kL);
	set(dir, len, pp, false, false, true, false, fL, iL, jL, kL, nL);
	set(dir, len, pp, false, false, false, true, gL, jL, kL, lL, oL);
	float2 dir2 = dir * dir;
	float dirR = dir2.x + dir2.y;
	bool zro = dirR < float(1.0 / 32768.0);
	dirR = APrxLoRsqF1(dirR);
	dirR = zro ? 1.0 : dirR;
	dir.x = zro ? 1.0 : dir.x;
	dir *= float2(dirR, dirR);
	len = len * 0.5;
	len *= len;
	float stretch = (dir.x * dir.x + dir.y * dir.y) * APrxLoRcpF1(max(abs(dir.x), abs(dir.y)));
	float2 len2 = float2(1.0 + (stretch - 1.0) * len, 1.0 + -0.5 * len);
	float lob = 0.5 + float((1.0 / 4.0 - 0.04) - 0.5) * len;
	float clp = APrxLoRcpF1(lob);
	float aC = 0.0;
	float aW = 0.0;
	tap(aC, aW, float2( 0.0,-1.0) - pp, dir, len2, lob, clp, bL);
	tap(aC, aW, float2( 1.0,-1.0) - pp, dir, len2, lob, clp, cL);
	tap(aC, aW, float2(-1.0, 1.0) - pp, dir, len2, lob, clp, iL);
	tap(aC, aW, float2( 0.0, 1.0) - pp, dir, len2, lob, clp, jL);
	tap(aC, aW, float2( 0.0, 0.0) - pp, dir, len2, lob, clp, fL);
	tap(aC, aW, float2(-1.0, 0.0) - pp, dir, len2, lob, clp, eL);
	tap(aC, aW, float2( 1.0, 1.0) - pp, dir, len2, lob, clp, kL);
	tap(aC, aW, float2( 2.0, 1.0) - pp, dir, len2, lob, clp, lL);
	tap(aC, aW, float2( 2.0, 0.0) - pp, dir, len2, lob, clp, hL);
	tap(aC, aW, float2( 1.0, 0.0) - pp, dir, len2, lob, clp, gL);
	tap(aC, aW, float2( 1.0, 2.0) - pp, dir, len2, lob, clp, oL);
	tap(aC, aW, float2( 0.0, 2.0) - pp, dir, len2, lob, clp, nL);
	pix.r = aC / aW;
	float min1 = min(AMin3F1(fL, gL, jL), kL);
	float max1 = max(AMax3F1(fL, gL, jL), kL);
	pix.r = clamp(pix.r, min1, max1);
	pix.r = clamp(pix.r, 0.0, 1.0);
	return pix;
}

//!PASS 2
//!DESC CuNNy-1x16-NVL-up
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN INPUT
//!OUT up_0, up_1, up_2, up_3
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define l0(x, y) dot(float3(0.299, 0.587, 0.114), O(INPUT, float2(x, y)).rgb)
void hook(uint2 gxy, float2 pos) {
	float2 pt = float2(GetInputPt());
	min16float s0_0 = l0(-1.0, -1.0);
	min16float s0_1 = l0(0.0, -1.0);
	min16float s0_2 = l0(1.0, -1.0);
	min16float s0_3 = l0(-1.0, 0.0);
	min16float s0_4 = l0(0.0, 0.0);
	min16float s0_5 = l0(1.0, 0.0);
	min16float s0_6 = l0(-1.0, 1.0);
	min16float s0_7 = l0(0.0, 1.0);
	min16float s0_8 = l0(1.0, 1.0);
	float4 r0 = 0.0;
	float4 r1 = 0.0;
	float4 r2 = 0.0;
	float4 r3 = 0.0;
	r0 += min16float4(-0.3773791193962097, -0.015737630426883698, 0.33654192090034485, 0.1750282347202301) * s0_0;
	r0 += min16float4(0.36506783962249756, 0.05839778110384941, -0.1497546136379242, -0.203370600938797) * s0_1;
	r0 += min16float4(0.0032412242144346237, -0.01744268275797367, 0.08056405186653137, -0.09790205210447311) * s0_2;
	r0 += min16float4(0.005678985267877579, -0.04047079756855965, -0.33704546093940735, -0.24301622807979584) * s0_3;
	r0 += min16float4(0.014338640496134758, -0.41980573534965515, -0.07835602760314941, 0.3740234673023224) * s0_4;
	r0 += min16float4(-0.011381528340280056, 0.03155498206615448, -0.05329513177275658, 0.12580104172229767) * s0_5;
	r0 += min16float4(0.004937712103128433, 0.05382629111409187, 0.02020375244319439, 0.014043263159692287) * s0_6;
	r0 += min16float4(-0.012754206545650959, 0.3708259165287018, 0.11489889770746231, -0.13892272114753723) * s0_7;
	r0 += min16float4(0.00826997496187687, -0.018340609967708588, 0.09306934475898743, -0.005587359890341759) * s0_8;
	r0 += float4(-0.000597769976593554, 0.002871353179216385, -0.009370631538331509, -0.0022733104415237904);
	up_0[gxy] = max(r0, 0.0);
	r1 += min16float4(0.08850082010030746, 0.04595720395445824, -0.01913984678685665, -0.009961781091988087) * s0_0;
	r1 += min16float4(0.02500207908451557, 0.1323242485523224, -0.16401255130767822, 0.14991721510887146) * s0_1;
	r1 += min16float4(-0.11856277287006378, -0.16060224175453186, -0.027594437822699547, 0.05058223009109497) * s0_2;
	r1 += min16float4(-0.22345608472824097, -0.06860612332820892, 0.11202432960271835, 0.03530312329530716) * s0_3;
	r1 += min16float4(0.03788183629512787, 0.41250836849212646, 0.4423885643482208, -0.4423828125) * s0_4;
	r1 += min16float4(0.19188717007637024, -0.1262405812740326, 0.07098893076181412, 0.29202067852020264) * s0_5;
	r1 += min16float4(-0.21524512767791748, -0.12822578847408295, -0.10944997519254684, -0.02166651375591755) * s0_6;
	r1 += min16float4(0.01070291269570589, -0.1904469132423401, -0.2763672471046448, -0.06034824997186661) * s0_7;
	r1 += min16float4(0.20458973944187164, 0.0866694524884224, -0.055809780955314636, 0.008370650000870228) * s0_8;
	r1 += float4(-0.00013402648619376123, 0.0007567183929495513, -0.006520215421915054, 0.005319077987223864);
	up_1[gxy] = max(r1, 0.0);
	r2 += min16float4(-0.005722383968532085, -0.0014014987973496318, 0.3779296278953552, 0.045439139008522034) * s0_0;
	r2 += min16float4(0.009293194860219955, -0.21746478974819183, -0.3992537558078766, -0.07200086861848831) * s0_1;
	r2 += min16float4(-0.0040066856890916824, 0.11954692751169205, 0.016708120703697205, -0.0036335152108222246) * s0_2;
	r2 += min16float4(-0.0023041185922920704, 0.1265048384666443, 0.05015304684638977, -0.03100888803601265) * s0_3;
	r2 += min16float4(0.3993840217590332, -0.399616003036499, -0.008252699859440327, -0.5881032347679138) * s0_4;
	r2 += min16float4(0.00043121035560034215, 0.020297178998589516, -0.03311408311128616, 0.06320539116859436) * s0_5;
	r2 += min16float4(0.004351722542196512, 0.03993658721446991, 0.0056349001824855804, 0.04763111472129822) * s0_6;
	r2 += min16float4(-0.4072263240814209, 0.2744995355606079, -0.021130569279193878, 0.2861325442790985) * s0_7;
	r2 += min16float4(0.005204852670431137, 0.04188971221446991, 0.012905040755867958, 0.052490461617708206) * s0_8;
	r2 += float4(0.0005181195447221398, 0.005652927327901125, -2.6847217668546364e-05, 0.02496878057718277);
	up_2[gxy] = max(r2, 0.0);
	r3 += min16float4(-0.07691805064678192, -0.19979901611804962, -0.049041833728551865, 0.2877379059791565) * s0_0;
	r3 += min16float4(-0.11916720867156982, -0.04748842865228653, 0.00246393377892673, 0.33090630173683167) * s0_1;
	r3 += min16float4(-0.1675005704164505, 0.051391489803791046, 0.02816242165863514, -0.02143905870616436) * s0_2;
	r3 += min16float4(-0.007090169470757246, -0.05432894080877304, -0.430388480424881, -0.26196804642677307) * s0_3;
	r3 += min16float4(0.2631432116031647, 0.4775390625, 0.3642134368419647, -0.3134765625) * s0_4;
	r3 += min16float4(0.16066427528858185, -0.04868178814649582, 0.024137575179338455, 0.0027993079274892807) * s0_5;
	r3 += min16float4(0.012424854561686516, 0.03274545818567276, -0.006608080118894577, -0.03285304829478264) * s0_6;
	r3 += min16float4(-0.17467039823532104, -0.15742848813533783, 0.09569508582353592, -0.022038893774151802) * s0_7;
	r3 += min16float4(0.0533035546541214, -0.045874472707509995, -0.0370301716029644, 0.027684131637215614) * s0_8;
	r3 += float4(-0.004515666514635086, 0.003997453022748232, -0.015807604417204857, 0.004747683648020029);
	up_3[gxy] = max(r3, 0.0);
}
void Pass2(uint2 blockStart, uint3 tid) {
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	};
	float2 pos = (gxy + 0.5) * GetInputPt();
	float2 step = 8 * GetInputPt();
	hook(gxy, pos);
}

//!PASS 3
//!DESC CuNNy-1x16-NVL-conv1
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN up_0, up_1, up_2, up_3
//!OUT conv1_0, conv1_1, conv1_2, conv1_3
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define l0(x, y) O(up_0, float2(x, y))
#define l1(x, y) O(up_1, float2(x, y))
#define l2(x, y) O(up_2, float2(x, y))
#define l3(x, y) O(up_3, float2(x, y))
void hook(uint2 gxy, float2 pos) {
	float2 pt = float2(GetInputPt());
	min16float4 s0_0 = l0(-1.0, -1.0);
	min16float4 s0_1 = l0(0.0, -1.0);
	min16float4 s0_2 = l0(1.0, -1.0);
	min16float4 s0_3 = l0(-1.0, 0.0);
	min16float4 s0_4 = l0(0.0, 0.0);
	min16float4 s0_5 = l0(1.0, 0.0);
	min16float4 s0_6 = l0(-1.0, 1.0);
	min16float4 s0_7 = l0(0.0, 1.0);
	min16float4 s0_8 = l0(1.0, 1.0);
	min16float4 s1_0 = l1(-1.0, -1.0);
	min16float4 s1_1 = l1(0.0, -1.0);
	min16float4 s1_2 = l1(1.0, -1.0);
	min16float4 s1_3 = l1(-1.0, 0.0);
	min16float4 s1_4 = l1(0.0, 0.0);
	min16float4 s1_5 = l1(1.0, 0.0);
	min16float4 s1_6 = l1(-1.0, 1.0);
	min16float4 s1_7 = l1(0.0, 1.0);
	min16float4 s1_8 = l1(1.0, 1.0);
	min16float4 s2_0 = l2(-1.0, -1.0);
	min16float4 s2_1 = l2(0.0, -1.0);
	min16float4 s2_2 = l2(1.0, -1.0);
	min16float4 s2_3 = l2(-1.0, 0.0);
	min16float4 s2_4 = l2(0.0, 0.0);
	min16float4 s2_5 = l2(1.0, 0.0);
	min16float4 s2_6 = l2(-1.0, 1.0);
	min16float4 s2_7 = l2(0.0, 1.0);
	min16float4 s2_8 = l2(1.0, 1.0);
	min16float4 s3_0 = l3(-1.0, -1.0);
	min16float4 s3_1 = l3(0.0, -1.0);
	min16float4 s3_2 = l3(1.0, -1.0);
	min16float4 s3_3 = l3(-1.0, 0.0);
	min16float4 s3_4 = l3(0.0, 0.0);
	min16float4 s3_5 = l3(1.0, 0.0);
	min16float4 s3_6 = l3(-1.0, 1.0);
	min16float4 s3_7 = l3(0.0, 1.0);
	min16float4 s3_8 = l3(1.0, 1.0);
	float4 r0 = 0.0;
	float4 r1 = 0.0;
	float4 r2 = 0.0;
	float4 r3 = 0.0;
	r0 += mul(s0_0, min16float4x4(-0.09797189384698868, -0.022216180339455605, -0.08524402230978012, -0.08258672803640366, -0.11024891585111618, -0.08025681972503662, -0.19521097838878632, 0.06576595455408096, -0.04237087443470955, -0.014392543584108353, 0.08350123465061188, -0.028109421953558922, -0.09232982248067856, 0.16143596172332764, 0.10501088947057724, 0.03293965384364128));
	r0 += mul(s0_1, min16float4x4(-0.35896068811416626, -0.17826023697853088, -0.018442906439304352, -0.14501941204071045, -0.052797526121139526, 0.018268760293722153, -1.13777756690979, -0.2711222469806671, -0.12732018530368805, 0.011667706072330475, 0.08664700388908386, -0.10564617812633514, -0.19091109931468964, -0.0989191010594368, 0.22738991677761078, 0.10802313685417175));
	r0 += mul(s0_2, min16float4x4(-0.1500057727098465, -0.0061110868118703365, -0.05698459595441818, 0.06200264394283295, 0.3696688711643219, -0.04854497313499451, -0.07123174518346786, 0.0822041854262352, 0.09248194098472595, 0.05574097856879234, -0.022021301090717316, -0.02712007611989975, -0.01787601038813591, -0.0785018727183342, 0.2701883316040039, 0.014613051898777485));
	r0 += mul(s0_3, min16float4x4(-0.46709728240966797, -0.48003965616226196, -0.1311989426612854, 0.09666448086500168, -0.2705271542072296, 0.06737017631530762, 0.008592694066464901, -0.007240604609251022, -0.13720861077308655, -0.04735565558075905, -0.3670091927051544, -0.07480732351541519, -0.4324445426464081, -0.07487328350543976, 0.10050390660762787, 0.06668490916490555));
	r0 += mul(s0_4, min16float4x4(-0.1613718569278717, 0.037108905613422394, 0.7480501532554626, 0.048298224806785583, 0.1865455061197281, 0.56280916929245, 0.2335326373577118, 0.49452048540115356, -0.0016650214092805982, -0.026215331628918648, -0.6643450260162354, 0.08122611045837402, -0.34320247173309326, 0.17108553647994995, 0.22729633748531342, -0.07295649498701096));
	r0 += mul(s0_5, min16float4x4(0.3031321167945862, 0.21457062661647797, 0.6467894315719604, 0.2809869945049286, 0.262770414352417, -0.07820722460746765, 0.23660410940647125, 0.04689051955938339, -0.06955765187740326, -0.06036534532904625, -0.20992890000343323, 0.09006371349096298, -0.09401532262563705, 0.028164520859718323, 0.2445279210805893, -0.018612872809171677));
	r0 += mul(s0_6, min16float4x4(-0.024594495072960854, 0.2315630316734314, 0.16981752216815948, 0.1306637078523636, -0.03910214453935623, 0.1202598586678505, -0.4471246004104614, 0.03963680937886238, -0.19871634244918823, -0.06893536448478699, 0.3594023585319519, -0.0018817433156073093, -0.3478911519050598, -0.1443643867969513, -0.2765069603919983, 0.08929387480020523));
	r0 += mul(s0_7, min16float4x4(0.4738064706325531, 0.9829728007316589, -0.4661252498626709, -0.19678838551044464, 0.05736343190073967, 0.1721496880054474, -0.5872215628623962, -0.05296092480421066, 0.023047493770718575, 0.08132222294807434, 0.5223163962364197, -0.13565784692764282, -0.16867876052856445, 0.049631912261247635, -0.35455942153930664, 0.14598976075649261));
	r0 += mul(s0_8, min16float4x4(0.533521831035614, 0.5656777620315552, -0.200226292014122, 0.7437121272087097, 0.016330664977431297, -0.012664266861975193, -0.15577635169029236, -0.0952138900756836, 0.04715236276388168, 0.12208466231822968, 0.031106164678931236, 0.10156090557575226, 0.022216888144612312, 0.16511382162570953, -0.32539427280426025, -0.06780274957418442));
	r0 += mul(s1_0, min16float4x4(-0.00453612906858325, -0.05407147854566574, -0.13157832622528076, -0.028830982744693756, -0.016568349674344063, -0.01340143010020256, 0.06727725267410278, 0.0294219758361578, -0.03985363245010376, 0.37771162390708923, -0.12124370783567429, 0.06205124408006668, 0.164798304438591, 0.048859357833862305, -0.2239750474691391, -0.006820667535066605));
	r0 += mul(s1_1, min16float4x4(-0.16411016881465912, -0.005123070906847715, -0.20066937804222107, -0.3369145393371582, 0.19412316381931305, 0.21363963186740875, -0.2310379445552826, 0.25306785106658936, -0.05017571896314621, 0.14354895055294037, -0.0055260974913835526, -0.04789857938885689, -0.04092014580965042, -0.01943795569241047, -0.4840618968009949, 0.15278367698192596));
	r0 += mul(s1_2, min16float4x4(-0.18019333481788635, -0.04838350787758827, -0.051337096840143204, -0.04627956077456474, 0.007179807405918837, 0.064182348549366, -0.13490484654903412, -0.025439083576202393, -0.09217840433120728, 0.20980295538902283, -0.30829381942749023, 0.050002604722976685, 0.06573259085416794, 0.016584504395723343, -0.051908381283283234, 0.024951497092843056));
	r0 += mul(s1_3, min16float4x4(-0.24362675845623016, 0.11879178881645203, 0.14818519353866577, -0.15799234807491302, -0.04863995686173439, -0.15868628025054932, -0.7789608836174011, 0.14986197650432587, -0.3749253749847412, -0.0381593182682991, 0.4117119312286377, 0.05207580700516701, -0.448708176612854, -0.37976861000061035, -0.0431986041367054, -0.48797541856765747));
	r0 += mul(s1_4, min16float4x4(-0.2179078608751297, -0.1930736005306244, 0.3042498528957367, 0.058496348559856415, -0.6035139560699463, -0.19154663383960724, -0.22021989524364471, -0.37752288579940796, 0.022566430270671844, 0.023343777284026146, -1.0626776218414307, -0.42483803629875183, -0.3444305658340454, -0.21937307715415955, 0.3706120550632477, 0.08130298554897308));
	r0 += mul(s1_5, min16float4x4(0.15739057958126068, -0.03423294425010681, -0.02278592810034752, -0.02799295447766781, -0.0331706702709198, -0.03585553541779518, -0.07351095974445343, 0.03895191475749016, 0.028692593798041344, -0.10180865228176117, 0.015497623011469841, 0.016486547887325287, -0.03156410530209541, 0.07592982053756714, 0.031818363815546036, -0.023584768176078796));
	r0 += mul(s1_6, min16float4x4(0.05452658236026764, 0.02135676145553589, 0.05781573802232742, 0.018061356619000435, -0.4156845211982727, -0.07138480991125107, 0.1987057775259018, -0.0861448347568512, 0.06260780245065689, 0.14017970860004425, -0.3514311909675598, 0.0005670859827660024, 0.2653132975101471, 0.1718226820230484, -0.07653887569904327, -0.026571862399578094));
	r0 += mul(s1_7, min16float4x4(-0.0048536029644310474, -0.043325409293174744, -0.08907537162303925, 0.08158323168754578, -0.5666674375534058, -0.04068686068058014, 0.39338329434394836, 0.1013200506567955, 0.09116293489933014, -0.043625183403491974, -0.028304267674684525, 0.003946028649806976, -0.2959086000919342, -6.289927114266902e-05, -0.015165877528488636, -0.054109297692775726));
	r0 += mul(s1_8, min16float4x4(0.06216020509600639, -0.04166115075349808, -0.08568798005580902, 0.051957570016384125, -0.07165178656578064, 0.0011289769317954779, 0.22718022763729095, 0.01821873150765896, 0.07177446782588959, -0.0715336725115776, -0.09920447319746017, 0.011188129894435406, -0.09334505349397659, 0.022114839404821396, 0.1782708317041397, -0.0775863453745842));
	r0 += mul(s2_0, min16float4x4(-0.9866379499435425, -0.546291708946228, 0.0804784819483757, -0.12386801838874817, -0.039666566997766495, 0.2743522822856903, -0.20915567874908447, -0.01862470619380474, 0.07131762057542801, -0.0853220745921135, -0.013950195163488388, 0.042694341391325, 0.04316072538495064, -0.026711437851190567, -0.14540407061576843, -0.10380882024765015));
	r0 += mul(s2_1, min16float4x4(0.2336108386516571, 0.14755937457084656, 0.35015374422073364, 0.7583354711532593, -0.2563936114311218, -0.11991631984710693, -0.17048557102680206, -0.2705062925815582, 0.32986095547676086, 0.14564867317676544, -0.0513816736638546, 0.11971495300531387, -0.03993682563304901, 0.09671211242675781, -0.04774904251098633, 0.01078767329454422));
	r0 += mul(s2_2, min16float4x4(0.14072993397712708, -0.07583833485841751, 0.1546616554260254, 0.033838093280792236, -0.04716191813349724, -0.05831534042954445, -0.155246764421463, 0.012548945844173431, 0.028471436351537704, -0.024624738842248917, 0.012188110500574112, -0.031047003343701363, -0.06572488695383072, 0.09700360894203186, -0.3128126859664917, -0.00032590728369541466));
	r0 += mul(s2_3, min16float4x4(0.7199133038520813, 0.25074005126953125, 0.3185838758945465, 0.008134893141686916, -0.3554824888706207, -0.23132088780403137, 0.03923457860946655, -0.1211373433470726, 0.15454921126365662, -0.08410466462373734, 0.020028328523039818, -0.0553148128092289, 0.2506600618362427, 0.0024815909564495087, -0.15174269676208496, -0.09299314022064209));
	r0 += mul(s2_4, min16float4x4(0.2500379979610443, 0.0317460335791111, -0.3147260248661041, 0.22741927206516266, 0.11000736057758331, -0.21719785034656525, 0.06695029884576797, 0.08779478073120117, -0.3685522973537445, 0.07368312776088715, -0.0798536017537117, 0.03535214439034462, -0.03653547912836075, -0.11594223976135254, -0.06807102262973785, 0.16561192274093628));
	r0 += mul(s2_5, min16float4x4(-0.23610661923885345, 0.08491913229227066, -0.4361748993396759, 0.35755303502082825, -0.018620241433382034, 0.05824119597673416, 0.38189956545829773, -0.11622096598148346, -0.09459009766578674, 0.005466952919960022, 0.11631873995065689, -0.15357668697834015, -0.015423479489982128, -0.04410044103860855, -0.21963703632354736, 0.01861211284995079));
	r0 += mul(s2_6, min16float4x4(0.4659082293510437, -0.019978610798716545, 0.11344220489263535, -0.015426860190927982, 0.04096048325300217, -0.03329601138830185, 0.24825407564640045, -0.02447260171175003, -1.0944135189056396, -2.019826889038086, -0.06811558455228806, 0.010670194402337074, -0.09110371023416519, -0.07676335424184799, 0.11177895218133926, -0.06314758956432343));
	r0 += mul(s2_7, min16float4x4(0.14721694588661194, 0.04738325998187065, -0.05239854380488396, -0.048505399376153946, -0.20539700984954834, -0.14901088178157806, -0.010903800837695599, -0.016272129490971565, 0.1316319853067398, 0.6113277077674866, 0.16293521225452423, 0.34123504161834717, 0.06883195042610168, -0.0090218186378479, 0.41064417362213135, 0.2144884318113327));
	r0 += mul(s2_8, min16float4x4(-0.15478450059890747, 0.042118847370147705, 0.060229189693927765, 0.01792033761739731, 0.07004764676094055, -0.07689971476793289, -0.20964482426643372, 0.013908809050917625, 0.07633993774652481, 0.0013288679765537381, -0.2633339464664459, -0.23901139199733734, -0.004538141191005707, 0.0030453819781541824, 0.167180135846138, -0.055666763335466385));
	r0 += mul(s3_0, min16float4x4(0.06786516308784485, -0.15131467580795288, -0.018329724669456482, -0.024556957185268402, 0.1975308209657669, 0.07836998254060745, 0.23010733723640442, 0.1247531846165657, 0.15283448994159698, 0.1304088979959488, 0.16114644706249237, -0.1264645755290985, -0.021560974419116974, -0.0685231015086174, -0.06194442883133888, 0.013744566589593887));
	r0 += mul(s3_1, min16float4x4(-0.19239675998687744, -0.13710513710975647, -0.011154369451105595, -0.07929012179374695, 0.3138745427131653, -0.17915646731853485, -0.09709883481264114, 0.13441070914268494, 0.21830739080905914, -0.06586751341819763, -0.17179793119430542, -0.09235375374555588, -0.08224897086620331, 0.017157793045043945, 0.047628674656152725, -0.025470245629549026));
	r0 += mul(s3_2, min16float4x4(0.06304225325584412, -0.049690131098032, -0.08914345502853394, -0.032983534038066864, 0.11274655908346176, -0.0888650119304657, 0.16451433300971985, -0.05072840303182602, 0.039428889751434326, 0.009414582513272762, -0.3236454427242279, -0.03761819377541542, -0.022554010152816772, 0.01520126685500145, -0.2839953601360321, -0.0052194735035300255));
	r0 += mul(s3_3, min16float4x4(0.09140051156282425, 0.15516182780265808, 0.1814683973789215, 0.25679969787597656, 0.34338247776031494, 0.4861467480659485, -0.22287169098854065, 0.10219403356313705, 0.13430972397327423, -0.19003526866436005, -0.0867084413766861, -0.046636469662189484, 0.12942324578762054, -0.17068547010421753, 0.44917312264442444, 0.10517732053995132));
	r0 += mul(s3_4, min16float4x4(0.08840609341859818, -0.3599817752838135, 0.2474387139081955, -0.024390364065766335, 0.19214560091495514, -0.17734162509441376, -0.159108504652977, -0.1810641884803772, 0.15914852917194366, -0.07963119447231293, 0.29733991622924805, 0.6152341961860657, 0.15897223353385925, -0.4169048070907593, 0.1879425197839737, -0.18915216624736786));
	r0 += mul(s3_5, min16float4x4(-0.08960771560668945, 0.0643654316663742, -0.0518462210893631, 0.09010685980319977, 0.15838995575904846, -0.08185764402151108, -0.42399680614471436, -0.010557976551353931, -0.02348703145980835, -0.13739317655563354, 0.3564208149909973, -0.24086789786815643, -0.24703942239284515, -0.03693072125315666, 0.14501267671585083, -0.16845376789569855));
	r0 += mul(s3_6, min16float4x4(-0.15342232584953308, 0.06159117445349693, 0.1298455446958542, 0.11832679808139801, -0.049829889088869095, -0.07207533717155457, 0.0747581422328949, -0.0057407864369452, 0.2936975657939911, 0.023782236501574516, 0.021309230476617813, -0.003909760154783726, 0.16455905139446259, 0.1906968653202057, -0.30884090065956116, 0.020453928038477898));
	r0 += mul(s3_7, min16float4x4(0.023511698469519615, 0.20087812840938568, 0.12092156708240509, -0.17608825862407684, 0.046182215213775635, -0.25446465611457825, 0.10876695811748505, 0.03344357758760452, 0.02826664038002491, -0.06661459803581238, -0.35679247975349426, -0.15804234147071838, -0.11161935329437256, 0.014436052180826664, -0.4377051889896393, -0.22729498147964478));
	r0 += mul(s3_8, min16float4x4(-0.07780605554580688, 0.023578224703669548, 0.2777392864227295, 0.04095838963985443, 0.1634811908006668, 0.04129432141780853, -0.032347291707992554, -0.0055443593300879, -0.05505051091313362, 0.19495853781700134, -0.321310430765152, 0.0026106673758476973, 0.053216658532619476, 0.038891229778528214, -0.3342793881893158, -0.4290394186973572));
	r0 += float4(-0.010494430549442768, -0.003937101922929287, 0.0017589443596079946, -0.0025458410382270813);
	conv1_0[gxy] = max(r0, 0.0);
	r1 += mul(s0_0, min16float4x4(0.2484896332025528, -0.037293415516614914, 0.011064734309911728, 0.16356094181537628, -0.030944718047976494, -0.022743290290236473, 0.32821646332740784, -0.11067413538694382, 0.170369490981102, 0.08730851113796234, 0.14429916441440582, 0.30957767367362976, -0.03360221907496452, 0.11058219522237778, -0.1304633766412735, -0.19091099500656128));
	r1 += mul(s0_1, min16float4x4(0.3030968904495239, -0.2817789316177368, 0.188066765666008, -0.0936131551861763, 0.18991583585739136, 0.22265276312828064, -0.04232054948806763, -0.06473153829574585, 0.14637841284275055, 0.12246201187372208, 0.1518016904592514, 0.0427858792245388, 0.22563858330249786, 0.0977165699005127, -0.5315505266189575, 0.0043264515697956085));
	r1 += mul(s0_2, min16float4x4(0.007967503741383553, -0.5448246002197266, -0.03779110312461853, -0.14092540740966797, 0.06889569759368896, -0.19740712642669678, -0.3680385947227478, 0.03194174915552139, 0.08984281867742538, 0.011112534441053867, -0.12425895035266876, -0.1420176476240158, 0.12942831218242645, 0.0435616672039032, 0.1412317454814911, -0.3167223632335663));
	r1 += mul(s0_3, min16float4x4(0.7832032442092896, 0.014473187737166882, 0.12744905054569244, 0.6969000101089478, -0.07061473280191422, 0.049897510558366776, 0.19433468580245972, -0.010219024494290352, -0.039953283965587616, -0.09076954424381256, -0.20300568640232086, 0.3448350131511688, 0.23502889275550842, 0.17951828241348267, -0.3874010145664215, -0.3994502127170563));
	r1 += mul(s0_4, min16float4x4(1.0409384965896606, 0.518104076385498, 0.32655176520347595, 0.719414234161377, 0.19306103885173798, 0.019260870292782784, 0.005987338721752167, -0.2594905495643616, -0.20813848078250885, -0.2023291289806366, 0.01452088262885809, 0.08800052106380463, -0.6055392026901245, 0.03149254247546196, -0.01625888980925083, 0.008672698400914669));
	r1 += mul(s0_5, min16float4x4(0.09437371790409088, 0.9203563332557678, 0.3678414523601532, -0.15571272373199463, 0.04057908430695534, -0.06018052622675896, -0.30566146969795227, -0.13305039703845978, 0.13267618417739868, -0.2634117603302002, -0.10141658782958984, 0.16286379098892212, -0.2325710952281952, 0.32808661460876465, 0.26497548818588257, 0.08195611834526062));
	r1 += mul(s0_6, min16float4x4(-0.4341312646865845, -0.04230163246393204, -0.12231310456991196, 0.9675904512405396, 0.03997540473937988, -0.21111178398132324, 0.10252823680639267, 0.24659839272499084, -0.42219576239585876, 0.04641850292682648, 0.060614343732595444, -0.16249094903469086, -0.3012582063674927, 0.05009987950325012, 0.0665290504693985, 0.1708260476589203));
	r1 += mul(s0_7, min16float4x4(-0.5423932671546936, -0.04947657883167267, -0.06115252524614334, -0.21366849541664124, -0.15420512855052948, -0.458654522895813, -0.10093140602111816, 0.08431755751371384, 0.20287758111953735, 0.2754021883010864, -0.22349856793880463, -0.19761934876441956, 0.25845274329185486, -0.035092394798994064, -0.4729265868663788, 0.0934046134352684));
	r1 += mul(s0_8, min16float4x4(0.22103868424892426, 0.7597779035568237, 0.413988322019577, 0.08832138776779175, -0.12995445728302002, -0.17768478393554688, -0.09328217059373856, 0.17511102557182312, -0.23659592866897583, -0.05202692747116089, 0.06435226649045944, 0.07063045352697372, 0.2662844955921173, -0.1528322845697403, -0.1954880952835083, 0.0822775810956955));
	r1 += mul(s1_0, min16float4x4(-0.5016754269599915, -0.017528150230646133, -0.11765461415052414, -0.356854647397995, 0.36323848366737366, 0.015382147394120693, 0.189105823636055, -0.09597635269165039, 0.1333015412092209, 0.06453900039196014, -0.009669986553490162, 0.5558648705482483, -0.011281601153314114, 0.18308071792125702, -0.2076176255941391, 0.07647761702537537));
	r1 += mul(s1_1, min16float4x4(-0.6659584641456604, -0.5033925771713257, 0.04715072363615036, 0.19809715449810028, -0.048238132148981094, 0.192824125289917, -0.3789893388748169, 0.09434609860181808, 0.2232436239719391, -0.1518361121416092, 0.36367660760879517, 0.1118869036436081, 0.08699174225330353, -0.20954813063144684, 0.3447246849536896, 0.07448271661996841));
	r1 += mul(s1_2, min16float4x4(-0.11330164968967438, -0.3177049160003662, -0.20951420068740845, 0.15756209194660187, 0.09838300943374634, 0.03231560066342354, 0.06835746765136719, -0.07872730493545532, -0.3397328555583954, -0.24727235734462738, -0.045778196305036545, 0.08141804486513138, 0.07609906047582626, -0.2761588990688324, -0.1521640121936798, -0.011023649014532566));
	r1 += mul(s1_3, min16float4x4(0.11090657860040665, -0.03877861425280571, 0.26468539237976074, -0.3646295964717865, 0.32968848943710327, -0.1742040365934372, 0.054725855588912964, -0.12489749491214752, 0.0923815369606018, 0.2203630805015564, -0.08167722076177597, 0.35791656374931335, -0.9361367225646973, -0.28045985102653503, 0.04875762760639191, -0.22598029673099518));
	r1 += mul(s1_4, min16float4x4(-0.4206254780292511, 0.23680877685546875, 0.040107592940330505, 0.09617230296134949, -0.04086824506521225, -0.616797924041748, 0.5410157442092896, -0.09871134907007217, 0.30460894107818604, 0.31735286116600037, -0.15361860394477844, -0.44366252422332764, -0.28082749247550964, -0.26624932885169983, 0.0717468410730362, 0.12180664390325546));
	r1 += mul(s1_5, min16float4x4(-0.2918757498264313, 0.17596620321273804, -0.1162475124001503, -0.09859135746955872, -0.2552696466445923, -0.22748440504074097, -0.005480743944644928, 0.0851970762014389, -0.02113766223192215, 0.2169218212366104, 0.11550242453813553, 0.22826015949249268, -0.00585446460172534, 0.2896212935447693, 0.2311113029718399, -0.0722186490893364));
	r1 += mul(s1_6, min16float4x4(-0.021553967148065567, -0.012273384258151054, -0.15479032695293427, 0.0645325630903244, -0.02680695615708828, 0.019496409222483635, 0.2463732659816742, -0.015792984515428543, 0.1131046861410141, 0.01868450455367565, -0.06057437136769295, -0.18782570958137512, -0.2774028480052948, -0.050737932324409485, 0.11644300073385239, 0.28740137815475464));
	r1 += mul(s1_7, min16float4x4(-0.1943349987268448, -0.04313857853412628, 0.11789072304964066, -0.07311692088842392, 0.3017583191394806, 0.11438910663127899, 0.06803643703460693, -0.11400137841701508, 0.021996259689331055, 0.0399346761405468, 0.6307758688926697, 0.08203788846731186, -0.0010987869463860989, -0.10788081586360931, -0.09686411917209625, 0.0731150284409523));
	r1 += mul(s1_8, min16float4x4(0.1798940896987915, -0.06294162571430206, 0.04835771769285202, -0.04869509115815163, 0.08116000890731812, 0.14016535878181458, 0.06267698109149933, 0.0015930832596495748, -0.11552915722131729, 0.14391066133975983, 0.1715056300163269, 0.0037798238918185234, -0.08723883330821991, -0.10497087985277176, 0.15674160420894623, -0.05336662754416466));
	r1 += mul(s2_0, min16float4x4(0.8652379512786865, -0.06163701415061951, -1.1600518226623535, 0.8306270837783813, -0.08512108027935028, -0.10446271300315857, -0.023142270743846893, -0.05495106801390648, -0.1411179006099701, -0.007703979499638081, -0.008884533308446407, -0.03163519874215126, -0.028142591938376427, -0.14000259339809418, -0.07745274901390076, 0.06698764860630035));
	r1 += mul(s2_1, min16float4x4(-0.05402658134698868, 0.35429713129997253, -0.0654926672577858, -0.16360139846801758, 0.12302782386541367, -0.29278361797332764, 0.13458803296089172, -0.03428243473172188, -0.47767066955566406, 0.07211058586835861, 0.04186611250042915, 0.0061194258742034435, -0.02281918190419674, -0.2084905207157135, -0.14981678128242493, -0.049015458673238754));
	r1 += mul(s2_2, min16float4x4(0.22115680575370789, 0.45612287521362305, 0.6255401968955994, -0.7676384449005127, -0.1632329672574997, -0.26403161883354187, 0.04041901230812073, -0.029129669070243835, -0.03986591473221779, -0.11794278770685196, 0.1926431655883789, 0.06801281124353409, -0.047257568687200546, -2.0254857540130615, 0.06732763350009918, 0.08356587588787079));
	r1 += mul(s2_3, min16float4x4(-0.5472807288169861, -0.12564636766910553, -0.21998369693756104, 0.5646075010299683, 0.15021581947803497, -0.2032318115234375, -0.09339157491922379, -0.2939743995666504, 0.11456000804901123, -0.01723015122115612, 0.1524946391582489, 0.12021121382713318, 0.032089587301015854, -0.19531366229057312, -0.08592502772808075, -0.4796898066997528));
	r1 += mul(s2_4, min16float4x4(0.301768958568573, -0.03778831660747528, -1.2321659326553345, 0.20842331647872925, -0.31358766555786133, -0.08555874973535538, -0.282554030418396, 0.1394195556640625, -0.396480530500412, -0.6178819537162781, 0.29901933670043945, 0.027561474591493607, -0.2312263399362564, -0.05885910242795944, 0.14358964562416077, 0.08279334008693695));
	r1 += mul(s2_5, min16float4x4(0.2892589569091797, -0.4442681074142456, 0.2705085873603821, -0.45018985867500305, 0.07088039815425873, 0.45831888914108276, 0.16649067401885986, -0.03642915561795235, -0.13097146153450012, -0.15583255887031555, -0.44286832213401794, -1.1096034049987793, 0.131295844912529, -0.36057248711586, -0.17096340656280518, 0.056209173053503036));
	r1 += mul(s2_6, min16float4x4(-0.0266876257956028, -0.05581621825695038, -0.2479425072669983, 0.08681758493185043, -0.02025039680302143, 0.0718766376376152, 0.010698872618377209, -0.2629788815975189, -0.16593722999095917, 0.016387708485126495, -0.10874293744564056, 0.23431719839572906, 0.015039362944662571, 0.1335373967885971, -0.11634595692157745, -0.020370304584503174));
	r1 += mul(s2_7, min16float4x4(-0.026764322072267532, -0.16992716491222382, -0.5132034420967102, 0.1524949073791504, 0.07794906944036484, 0.16608786582946777, 0.1266079694032669, -0.1263595074415207, -0.017000310122966766, 0.08601736277341843, -0.5523248314857483, 0.3584185242652893, -0.005822082050144672, 0.32130539417266846, 0.05217429995536804, 0.09960758686065674));
	r1 += mul(s2_8, min16float4x4(-0.049312833696603775, -0.27436602115631104, 0.019319122657179832, -0.16594429314136505, 0.1746189147233963, -0.14851942658424377, -0.16562078893184662, -0.04627789556980133, -0.17702585458755493, 0.027411870658397675, 0.1459856927394867, -0.545859158039093, -0.013438208028674126, 0.15552069246768951, 0.03591468185186386, -0.04259746894240379));
	r1 += mul(s3_0, min16float4x4(0.2939356863498688, 0.06150073930621147, 0.06470771878957748, -0.0518658384680748, -0.5101451873779297, 0.13700151443481445, -0.040342655032873154, -0.21900208294391632, -0.41935616731643677, 0.004187280312180519, -0.09267067909240723, -0.2500461935997009, 0.07241033762693405, -0.12487147003412247, -0.04212938994169235, -0.2286517322063446));
	r1 += mul(s3_1, min16float4x4(0.3158959150314331, 0.14639729261398315, 0.22629226744174957, -0.29104378819465637, -0.7207562327384949, 0.06939398497343063, -0.5761045217514038, 0.10129301249980927, -0.34776923060417175, 0.10915808379650116, -0.035694487392902374, -0.1433110386133194, -0.14501938223838806, -0.18304643034934998, -0.12974072992801666, -0.07719448208808899));
	r1 += mul(s3_2, min16float4x4(0.07440922409296036, -0.319428414106369, -0.045773945748806, 0.24746043980121613, 0.15323492884635925, 0.22011935710906982, 0.20431049168109894, -0.0796695426106453, -0.3128054141998291, -0.17870628833770752, -0.40573376417160034, 0.47905784845352173, -0.19900116324424744, -0.0636630579829216, -0.17397861182689667, 0.1459941416978836));
	r1 += mul(s3_3, min16float4x4(-0.06303320080041885, 0.0643760934472084, 0.08601990342140198, 0.19692370295524597, 0.029027234762907028, -0.058142129331827164, -0.1217140480875969, -0.6192716360092163, 0.11573699861764908, 0.029735969379544258, 0.18539994955062866, -0.39411628246307373, -0.10179932415485382, 0.1264541745185852, 0.10514293611049652, -0.46103838086128235));
	r1 += mul(s3_4, min16float4x4(0.10933011770248413, -0.32563361525535583, 0.05733014643192291, 0.19518066942691803, -0.550856351852417, -0.374022901058197, -0.31964346766471863, -0.3476695716381073, 0.3571222722530365, 0.2368364781141281, 0.015568056143820286, 0.09986494481563568, -0.2841269075870514, 0.20765936374664307, 0.1731625199317932, -0.8715352416038513));
	r1 += mul(s3_5, min16float4x4(0.25664567947387695, 0.014443202875554562, -0.3364146053791046, 0.2219819277524948, -0.19378764927387238, -0.4460689425468445, -0.7085273861885071, -0.030065586790442467, 0.44964760541915894, -0.25712963938713074, -0.06421656161546707, -0.5678630471229553, 0.05708392709493637, 0.12180955708026886, -0.8588268160820007, 0.732234537601471));
	r1 += mul(s3_6, min16float4x4(0.31092146039009094, 0.05744131654500961, -0.07267149537801743, 0.21522589027881622, -0.2655966877937317, -0.05090344697237015, -0.0818958654999733, -0.051193203777074814, 0.22822679579257965, 0.047466956079006195, -0.09675923734903336, 0.1873476654291153, 0.17041204869747162, -0.024384967982769012, -0.18267203867435455, -0.15490193665027618));
	r1 += mul(s3_7, min16float4x4(-0.23506677150726318, 0.14375725388526917, 0.10122064501047134, 0.19286957383155823, -0.3180825114250183, 0.12838828563690186, -0.26561927795410156, -0.38959386944770813, -0.1361408531665802, -0.20458970963954926, 0.03929872438311577, -0.10309469699859619, 0.021119996905326843, -0.0501336008310318, 0.5318570733070374, -0.16149477660655975));
	r1 += mul(s3_8, min16float4x4(-0.14826147258281708, 0.10899226367473602, -0.04087921231985092, 0.060421451926231384, 0.33459535241127014, 0.12827400863170624, -0.012331618927419186, 0.09526939690113068, -0.5993697047233582, -0.26478999853134155, 0.09062157571315765, -0.07652196288108826, -0.38239213824272156, -0.11680685728788376, -0.04083769768476486, 0.2334979921579361));
	r1 += float4(0.003682814771309495, -0.0012465022737160325, 0.0006269739824347198, 0.0022360740695148706);
	conv1_1[gxy] = max(r1, 0.0);
	r2 += mul(s0_0, min16float4x4(-0.023032112047076225, -0.09814125299453735, 0.07607326656579971, -0.002267151605337858, -0.1021735668182373, 0.04122276231646538, 0.13640548288822174, 0.09690539538860321, 0.19600379467010498, -0.018680742010474205, 0.09812813997268677, 0.11078169196844101, -0.02792750485241413, 0.14547748863697052, -0.08245640993118286, -0.17477573454380035));
	r2 += mul(s0_1, min16float4x4(-0.2281045764684677, -0.19924865663051605, -0.03764774650335312, 0.010021727532148361, 0.26682165265083313, 0.06225315481424332, -0.0946497768163681, -0.1821131706237793, 0.14068689942359924, -0.05420991778373718, -0.005398289766162634, 0.0363859198987484, -0.06135902181267738, -0.18568997085094452, -0.0897085890173912, -0.06067873537540436));
	r2 += mul(s0_2, min16float4x4(0.019991502165794373, 0.003412808757275343, 0.15401305258274078, -0.10040540993213654, -0.03290330991148949, -0.22857360541820526, -0.014252403751015663, -0.03645802661776543, -0.007439613342285156, 0.2802276313304901, -0.037986256182193756, 0.03366197273135185, -0.2932376265525818, -0.1586088389158249, -0.1252603828907013, 0.09788993000984192));
	r2 += mul(s0_3, min16float4x4(-0.2895249128341675, -0.20930367708206177, 0.35262805223464966, 0.41504037380218506, 0.1419348269701004, -0.03323341906070709, -0.20072689652442932, 0.3388643264770508, 0.012051950208842754, 0.011644866317510605, -0.023034531623125076, -0.04104902595281601, -0.19425731897354126, 0.20651698112487793, -0.11504435539245605, -0.01857846975326538));
	r2 += mul(s0_4, min16float4x4(-0.9367130398750305, 0.027165085077285767, 0.2024535834789276, 0.3046080470085144, 0.2880844473838806, 0.07083688676357269, -0.32454708218574524, 0.00461945915594697, -0.03514548018574715, 0.006674924399703741, 0.12340275943279266, 0.08369121700525284, -0.45163753628730774, -0.6183711886405945, -0.24875664710998535, 0.06789088249206543));
	r2 += mul(s0_5, min16float4x4(-1.2461016178131104, 0.5707035660743713, 0.10948465019464493, -0.8803468942642212, -0.10886938124895096, -0.4716237783432007, -0.2863929271697998, -0.22010678052902222, -0.08318907022476196, -0.16903366148471832, 0.17737048864364624, -0.013554612174630165, 0.12112387269735336, -0.31974032521247864, -0.06160273402929306, 0.27246004343032837));
	r2 += mul(s0_6, min16float4x4(0.14599257707595825, -0.30193889141082764, -0.018844589591026306, 0.09883376210927963, 0.15105846524238586, 0.5784282088279724, -0.19187551736831665, 0.1271871030330658, 0.18304982781410217, -0.041025083512067795, -0.05502687394618988, 0.04239805415272713, 0.31890225410461426, 0.154544398188591, -0.2532692849636078, 0.14263497292995453));
	r2 += mul(s0_7, min16float4x4(0.30853796005249023, 0.15761573612689972, -0.030256660655140877, 0.372069776058197, -0.3497968912124634, -0.18132413923740387, -0.03563548997044563, 0.06150897964835167, -0.12133815139532089, -0.10886287689208984, 0.026975829154253006, -0.19269655644893646, 0.8393504023551941, -0.6793650388717651, -0.2950144410133362, 0.08621909469366074));
	r2 += mul(s0_8, min16float4x4(0.6822152733802795, 0.023671157658100128, -0.042710546404123306, -1.654582142829895, -0.19716306030750275, -0.2737777531147003, -0.04264391213655472, -0.037583231925964355, -0.16769544780254364, 0.27467191219329834, 0.03165784850716591, -0.06818308681249619, 0.12271508574485779, 0.14271551370620728, 0.10855937004089355, 0.18891842663288116));
	r2 += mul(s1_0, min16float4x4(0.02630818821489811, -0.031391456723213196, -0.11526273190975189, -0.023638412356376648, 0.1652027666568756, -0.012750414200127125, -0.19845296442508698, -0.03771281614899635, -0.12254130095243454, 0.05375058948993683, 0.13883160054683685, 0.03736640512943268, 0.08505117893218994, 0.11969707906246185, -0.049943260848522186, 0.040824029594659805));
	r2 += mul(s1_1, min16float4x4(0.023846255615353584, -0.21992181241512299, 0.1315128058195114, 0.03914307430386543, 0.17236538231372833, 0.17905133962631226, 0.4346330463886261, 0.07101216912269592, -0.13131320476531982, -0.45316144824028015, -0.14302420616149902, 0.0690186619758606, 0.6914950609207153, -0.31613388657569885, 0.053409647196531296, 0.03413011506199837));
	r2 += mul(s1_2, min16float4x4(0.05963094159960747, -0.008879262022674084, 0.11171901971101761, -0.00969431921839714, 0.05612644553184509, 0.14196659624576569, -0.06371788680553436, -0.053032029420137405, 0.11641445010900497, 0.11060374975204468, -0.010123063810169697, 0.0018778432859107852, 0.054478298872709274, -0.02824101224541664, -0.0008749240078032017, -0.12840299308300018));
	r2 += mul(s1_3, min16float4x4(-0.1546800434589386, -0.1363200545310974, 0.17272144556045532, -0.03536039590835571, 0.31054139137268066, 0.08464836329221725, 0.31001007556915283, 0.12380463629961014, -0.40323084592819214, 0.3736618459224701, -0.15842626988887787, -0.17561075091362, -0.055766064673662186, -0.3368123173713684, -0.6920679807662964, 0.40697166323661804));
	r2 += mul(s1_4, min16float4x4(-0.5368321537971497, -0.2008453905582428, 0.09155265986919403, -0.14653702080249786, -0.11149396002292633, 0.1385989785194397, -0.5526965856552124, -0.2918465733528137, 0.20454120635986328, -0.6564990282058716, -0.42965564131736755, -0.04162847623229027, -0.547630786895752, 0.08445534855127335, 0.005819885525852442, -0.3365037143230438));
	r2 += mul(s1_5, min16float4x4(-0.12225857377052307, -0.24850331246852875, 0.0468243770301342, -0.08216246962547302, -0.044598858803510666, -0.7404670119285583, -0.03930167481303215, -0.023111434653401375, -0.2453959882259369, 0.4670696556568146, 0.3859751224517822, 0.10248610377311707, 0.02226393297314644, -0.21044383943080902, -0.11390983313322067, 0.07495489716529846));
	r2 += mul(s1_6, min16float4x4(0.038450367748737335, -0.02392558567225933, -0.10391700267791748, 0.020102787762880325, -0.35294845700263977, 0.0730045735836029, 0.1666189581155777, -0.025374431163072586, 0.2607882022857666, 0.5956964492797852, -0.18233078718185425, -0.008363114669919014, -0.11013223230838776, -4.843719482421875, 0.0027170823886990547, 0.42541229724884033));
	r2 += mul(s1_7, min16float4x4(0.1612730473279953, 0.13686054944992065, 0.08232013136148453, -0.0026247487403452396, -0.14993229508399963, -0.29357653856277466, -0.07077166438102722, -0.06807570904493332, 0.16881060600280762, -0.04371486231684685, -3.526409636833705e-05, 0.016102222725749016, -0.055290814489126205, 0.7000043392181396, 0.012946165166795254, -0.06902477890253067));
	r2 += mul(s1_8, min16float4x4(0.11992289870977402, 0.19384783506393433, -0.13561475276947021, -0.011143434792757034, -0.12532444298267365, -0.4663441777229309, 0.10973434150218964, -0.0186198428273201, 0.13843399286270142, -0.0060767075046896935, 0.06212702393531799, -0.027529744431376457, -0.04505705088376999, 0.17706748843193054, 0.014186167158186436, -0.13091862201690674));
	r2 += mul(s2_0, min16float4x4(-0.09546369314193726, -0.42213526368141174, 0.11954814195632935, 0.23359327018260956, -0.24398954212665558, 0.08305609226226807, 0.06806258112192154, -0.12395966053009033, 0.008665480650961399, -0.041374605149030685, 0.01667441800236702, 0.049468860030174255, 0.008195829577744007, -0.014975761994719505, -0.09140633791685104, -0.02818593941628933));
	r2 += mul(s2_1, min16float4x4(-0.23328588902950287, -0.38757559657096863, -0.023428233340382576, -0.7293047308921814, -0.4059218168258667, -0.12096790969371796, -0.34953734278678894, 0.2018878012895584, 0.17786289751529694, 0.24173295497894287, 0.0287319365888834, -0.01410770881921053, 0.11177840083837509, 0.10891389101743698, -0.09006323665380478, -0.006408854387700558));
	r2 += mul(s2_2, min16float4x4(-0.2924734354019165, 0.471087783575058, -0.5170881152153015, -0.32946744561195374, -0.12108643352985382, 0.09078631550073624, 0.04580735042691231, 0.03942989557981491, 0.15710687637329102, -0.010440295562148094, -0.10567556321620941, -0.021721962839365005, 0.10480751842260361, -0.12693330645561218, -0.03405538201332092, -0.02298913709819317));
	r2 += mul(s2_3, min16float4x4(0.05162696912884712, -0.6689183115959167, 0.6777341961860657, 0.2607422173023224, -0.1256197690963745, -0.09286810457706451, 0.21728025376796722, -0.26318731904029846, 0.07252618670463562, -0.12440917640924454, -0.1582721471786499, -0.03178990259766579, -0.18843987584114075, -0.4653894305229187, -0.1045565977692604, -0.03842847794294357));
	r2 += mul(s2_4, min16float4x4(0.7816978693008423, 0.33991143107414246, 0.7796066403388977, 0.23689885437488556, 0.06419351696968079, -0.16021881997585297, 0.15326310694217682, -0.1462796926498413, -0.5996073484420776, 0.055738192051649094, -0.19455306231975555, -0.307058721780777, 0.10443326085805893, -0.4126438498497009, 0.11249984055757523, -0.22014513611793518));
	r2 += mul(s2_5, min16float4x4(0.33687981963157654, 0.5918633341789246, -0.6113325357437134, -0.39514586329460144, -0.17087534070014954, 0.33077237010002136, -0.03080119378864765, 0.2523781359195709, -0.15972918272018433, 0.10683485120534897, -0.2881038188934326, -0.03623813018202782, -0.11458684504032135, -0.10455819219350815, 0.13445761799812317, 0.12305041402578354));
	r2 += mul(s2_6, min16float4x4(-0.1428559124469757, -0.7028234601020813, 0.21705147624015808, -0.04431217908859253, -0.0791209265589714, -0.7828946709632874, -0.06420938670635223, -0.05247977375984192, 0.0045180958695709705, -0.012178401462733746, -0.28057417273521423, 0.21727639436721802, -0.12527897953987122, -1.3753057718276978, -0.23418746888637543, 0.0009353836649097502));
	r2 += mul(s2_7, min16float4x4(-0.33208397030830383, 0.3599637746810913, 0.11117672175168991, 0.1103774830698967, 0.1346215307712555, -0.11336547136306763, 0.3227500915527344, -0.05545508861541748, -0.20031075179576874, -0.2132304608821869, 0.5542536377906799, -3.7474944591522217, 0.36875462532043457, -0.032524093985557556, -0.10184227675199509, -0.09497550874948502));
	r2 += mul(s2_8, min16float4x4(-0.22808800637722015, -0.10650044679641724, -0.17522837221622467, -0.03500616177916527, 0.2075822800397873, -0.2992088496685028, -0.09445483982563019, 0.07738753408193588, -0.11825868487358093, -0.15968096256256104, -0.0779239684343338, 0.005051372107118368, -0.06665212661027908, 0.1769263744354248, 0.06429069489240646, 0.12559984624385834));
	r2 += mul(s3_0, min16float4x4(0.10598550736904144, -0.053640250116586685, 0.12077299505472183, -0.01970629207789898, 0.06127092242240906, 0.18607263267040253, -0.15675117075443268, 0.012314324267208576, 0.3598206043243408, 0.1549043357372284, 0.006498066708445549, -0.04056643694639206, -0.1762685924768448, 0.03224414587020874, -0.08251766115427017, -0.10031890869140625));
	r2 += mul(s3_1, min16float4x4(-0.2673794627189636, 0.17338846623897552, -0.09476426988840103, -0.03250214457511902, 0.437513142824173, 0.20173577964305878, 0.11367824673652649, -0.048386137932538986, 1.0040650367736816, -0.2241845726966858, -0.1091884896159172, -0.0523606576025486, -0.2547573447227478, -0.09736686944961548, -0.01065501756966114, -0.002007887000218034));
	r2 += mul(s3_2, min16float4x4(0.13219378888607025, 0.06250832229852676, 0.17123591899871826, -0.054998911917209625, 0.19867399334907532, -0.3723810911178589, 0.02587469294667244, 0.15457500517368317, 0.2846509516239166, 0.15256522595882416, 0.04301057755947113, 0.47942009568214417, -0.06811762601137161, 0.09566174447536469, -0.053449057042598724, 0.0700368583202362));
	r2 += mul(s3_3, min16float4x4(-0.3767974078655243, -0.1969926655292511, 0.4050457775592804, 0.19303807616233826, -0.28996166586875916, 0.044588372111320496, -0.5611163377761841, -0.5022854804992676, -0.10642704367637634, 0.2564135491847992, 0.02618664689362049, 0.009655674919486046, -0.032183628529310226, 0.0293522160500288, -0.08813851326704025, 0.09450164437294006));
	r2 += mul(s3_4, min16float4x4(-0.5593070983886719, 0.00768804969266057, 0.20150582492351532, -0.08191659301519394, -0.9350240230560303, 0.045526184141635895, -0.25759804248809814, 0.4808889627456665, 0.14265844225883484, 0.2742231786251068, 0.23916511237621307, -0.20531465113162994, 0.322613388299942, 0.5794076919555664, -0.4719565510749817, -0.5824968814849854));
	r2 += mul(s3_5, min16float4x4(0.12211878597736359, 0.4248698353767395, 0.06425803899765015, -0.06873957067728043, 0.16101837158203125, -0.332513689994812, -0.0813651978969574, 0.01792619191110134, -0.2549636960029602, 0.18813635408878326, -0.34102147817611694, 0.575821042060852, 0.06518588215112686, -0.5569792985916138, 0.4502061605453491, 0.34673038125038147));
	r2 += mul(s3_6, min16float4x4(-0.049497634172439575, 0.1591324657201767, 0.26027894020080566, 0.1626424491405487, 0.09582580626010895, 0.04454164579510689, 0.014349549077451229, -0.16955500841140747, -0.0700065940618515, -0.04143746942281723, -0.061342719942331314, -0.03816041722893715, -0.04512401670217514, 0.05700015649199486, 0.008186179213225842, -0.05433144047856331));
	r2 += mul(s3_7, min16float4x4(-0.1710832566022873, 0.30605795979499817, 0.18235383927822113, 0.1234535351395607, 0.08699783682823181, -0.3114810287952423, -0.44672176241874695, -0.2622469663619995, -0.21463729441165924, 0.2928394377231598, -0.048651449382305145, -0.18773941695690155, 0.1602184921503067, -0.02491513267159462, -0.5840502977371216, -0.35676994919776917));
	r2 += mul(s3_8, min16float4x4(0.022250132635235786, -0.6273559927940369, 0.06243252754211426, -0.11427325755357742, 0.12208423018455505, 0.19019287824630737, 0.1332414597272873, 0.07937755435705185, 0.14894142746925354, -0.2087516039609909, -0.16504709422588348, 0.088187575340271, -0.005766278598457575, -0.603882372379303, 0.4203812777996063, 0.3766322433948517));
	r2 += float4(-0.012434182688593864, 0.0015678523341193795, -0.00341612845659256, -0.00979664921760559);
	conv1_2[gxy] = max(r2, 0.0);
	r3 += mul(s0_0, min16float4x4(-0.08114290237426758, -0.0428483821451664, -0.16954250633716583, 0.0009346232982352376, -0.02175573632121086, -0.12738001346588135, -0.009039032272994518, 0.2962455749511719, -0.017144551500678062, 0.15127575397491455, -0.07090979814529419, 0.06141405552625656, 0.13913483917713165, -0.06322722136974335, -0.06861250102519989, -0.15795396268367767));
	r3 += mul(s0_1, min16float4x4(-0.10919693112373352, -0.0939432829618454, -0.16421665251255035, 0.018065448850393295, -0.051130060106515884, 0.6407590508460999, 0.2005494087934494, -0.02279622107744217, 0.07772543281316757, 0.07355227321386337, -0.1721581071615219, -0.023943765088915825, -0.39941373467445374, -0.15588541328907013, 0.091734878718853, -0.09188342094421387));
	r3 += mul(s0_2, min16float4x4(-0.08764321357011795, 0.1283891499042511, -0.009882287122309208, 0.05130109563469887, 0.0193504448980093, 0.3194853961467743, 0.45681032538414, -0.0884409099817276, 0.01744537428021431, 0.2319394201040268, 0.2684020400047302, -0.013825001195073128, 0.002120271557942033, 0.2065097540616989, 0.3003714978694916, 0.0236215740442276));
	r3 += mul(s0_3, min16float4x4(-0.37235352396965027, 0.039375677704811096, -0.0007570402231067419, -0.6264320611953735, 0.15061084926128387, 0.046404920518398285, -0.0060233729891479015, 0.05627628415822983, -0.18895882368087769, 0.07453695684671402, -0.24359102547168732, -0.20949210226535797, -0.025453398004174232, -0.14632649719715118, -0.6307255625724792, -0.01961193047463894));
	r3 += mul(s0_4, min16float4x4(0.32716402411460876, 0.11915968358516693, 0.7519623637199402, 0.16307979822158813, 0.031577713787555695, 0.06997969001531601, 0.03498999774456024, 0.11113155633211136, 0.08208167552947998, -0.14451952278614044, -0.28882771730422974, 0.17197683453559875, -0.3730528950691223, -0.6557749509811401, -0.15149641036987305, -0.5440325140953064));
	r3 += mul(s0_5, min16float4x4(0.35520538687705994, 0.13524243235588074, 0.32538002729415894, 0.7111310362815857, -0.35948511958122253, 0.12015476822853088, -0.056693367660045624, -0.16174523532390594, 0.17732743918895721, 0.09051653742790222, 0.061685655266046524, 0.22903752326965332, -0.3189292848110199, 0.28014588356018066, 0.01407520193606615, -0.40641912817955017));
	r3 += mul(s0_6, min16float4x4(-0.18072693049907684, 0.2627350687980652, 0.7213414311408997, -1.0947010517120361, 0.06983239948749542, -0.18226049840450287, -0.03154134377837181, 0.06363480538129807, -0.06149279326200485, 0.10522506386041641, 0.24608102440834045, -0.09099441766738892, -0.017779327929019928, 0.26567989587783813, 0.1660332977771759, -0.07171688973903656));
	r3 += mul(s0_7, min16float4x4(-0.047934312373399734, 0.2900507152080536, 0.050283342599868774, 0.4812730848789215, 0.09657205641269684, -1.3179774284362793, -0.05410036817193031, 0.2252899706363678, 0.16536234319210052, 0.12632955610752106, -0.0590987429022789, 0.15743637084960938, 0.21816304326057434, -0.04440038651227951, 0.1400037556886673, 0.3038955330848694));
	r3 += mul(s0_8, min16float4x4(0.3702669143676758, 0.33070772886276245, 0.2616361975669861, 0.6500514149665833, -0.19353067874908447, -0.4466174840927124, 0.05006520450115204, -0.026409218087792397, -0.1630849391222, -0.4892915189266205, 0.1103346049785614, -0.01220499724149704, -0.1421617567539215, 0.23249149322509766, 0.12004601210355759, 0.032814040780067444));
	r3 += mul(s1_0, min16float4x4(-0.025150025263428688, -0.1910204142332077, -0.29394444823265076, 0.15953993797302246, 0.12820248305797577, 0.11555428057909012, -0.037510450929403305, -0.03453415259718895, 0.09449273347854614, -0.009489230811595917, -0.2312241792678833, 0.1508551836013794, -0.42874521017074585, 0.1385815292596817, 0.10533895343542099, -0.06361653655767441));
	r3 += mul(s1_1, min16float4x4(0.2075883001089096, -0.4503977596759796, -0.41009464859962463, -0.170674130320549, 0.06439081579446793, 0.0732589140534401, 0.03565242886543274, -0.047429993748664856, -0.004040680825710297, -0.5147874355316162, -0.07683734595775604, 0.11377876251935959, 0.37660863995552063, -0.0885624960064888, -0.23366113007068634, -0.1627536565065384));
	r3 += mul(s1_2, min16float4x4(-0.10694210976362228, -0.299539178609848, -0.1871824711561203, -0.09018666297197342, 0.010119653306901455, 0.028495490550994873, 0.017399175092577934, 0.013258468359708786, -0.18268457055091858, 0.04529289901256561, -0.2243591696023941, 0.19755639135837555, -0.5172768831253052, 0.05697978287935257, 0.05723928287625313, -0.06181928142905235));
	r3 += mul(s1_3, min16float4x4(0.059747323393821716, -0.2796430289745331, -0.24268901348114014, 0.13510112464427948, -0.0013748519122600555, 0.19278821349143982, 0.04481898248195648, -0.3170182406902313, -0.0802755132317543, -0.2094387263059616, 0.08492288738489151, -0.432828813791275, 0.03507200628519058, 0.10161297768354416, -0.11087062954902649, 0.38676875829696655));
	r3 += mul(s1_4, min16float4x4(-0.045132189989089966, -0.5133452415466309, -0.09668095409870148, -0.30276668071746826, -0.09383578598499298, -0.3407708406448364, -0.8535178899765015, -0.09129661321640015, 0.06656786799430847, -0.45356985926628113, 0.24715793132781982, -0.036085695028305054, 0.0767425149679184, -0.15421603620052338, -0.15017138421535492, -0.07651515305042267));
	r3 += mul(s1_5, min16float4x4(-0.0031471417751163244, 0.05406613647937775, -0.002364108804613352, -0.06078271567821503, 0.04016442224383354, -0.021763285622000694, -0.11612213402986526, 0.10126276314258575, -0.0018049803329631686, 0.0030658331234008074, 0.0005567905609495938, 0.24018089473247528, -0.06414807587862015, -0.09521225839853287, -0.07666280120611191, -0.00794603768736124));
	r3 += mul(s1_6, min16float4x4(-0.017174873501062393, 0.16269373893737793, -0.006508526857942343, -0.08888153731822968, -0.029126713052392006, -0.5347999334335327, -0.3701174855232239, -0.22708171606063843, 0.008839651942253113, 0.2587893009185791, 0.3692503273487091, 0.1270284354686737, 0.14206832647323608, -0.15764763951301575, 0.267192542552948, 0.017397701740264893));
	r3 += mul(s1_7, min16float4x4(-0.03215803951025009, 0.1711711883544922, 0.0030827559530735016, 0.0004803036281373352, -0.15643489360809326, -0.08018724620342255, -0.32664936780929565, 0.008878817781805992, -0.16211196780204773, 0.26559141278266907, 0.06106335669755936, -0.274002343416214, -0.08242643624544144, -0.3743954300880432, -0.2766451835632324, 0.1403127908706665));
	r3 += mul(s1_8, min16float4x4(-0.004514518193900585, 0.17941814661026, -0.007039653602987528, -0.012906203977763653, -0.1886427402496338, -0.028680527582764626, 0.06710224598646164, -0.061190031468868256, 0.20078133046627045, 0.23977132141590118, 0.14600960910320282, 0.11359231919050217, 0.07710134238004684, -0.03605438396334648, 0.045589420944452286, -0.0006269253208301961));
	r3 += mul(s2_0, min16float4x4(-0.9614941477775574, 0.15935686230659485, 0.6527286171913147, -0.2547195255756378, 0.1512860208749771, -0.1684141457080841, -0.18020737171173096, 0.09925639629364014, -0.004110697656869888, 0.07955297082662582, 0.2696692943572998, -0.04152021184563637, -0.044146910309791565, 0.04125703126192093, -0.1697736382484436, -0.07106025516986847));
	r3 += mul(s2_1, min16float4x4(0.5567473769187927, 0.054603688418865204, 0.09924346953630447, 0.5628448724746704, -0.15896032750606537, -0.18850767612457275, -0.2701192796230316, -0.010954036377370358, 0.12428826093673706, 0.13714544475078583, 0.06065693125128746, 0.046128567308187485, 0.01833055354654789, 0.19352632761001587, -0.049387525767087936, -0.025209203362464905));
	r3 += mul(s2_2, min16float4x4(1.0978881120681763, 0.0107641089707613, -0.12088492512702942, 0.4455788731575012, 0.09507063031196594, -0.005743794608861208, -0.1292116641998291, 0.13740915060043335, 0.04219609871506691, -0.10198922455310822, 0.008257309906184673, -0.0018233840819448233, -0.08171942085027695, 0.21340321004390717, -0.12275572866201401, -0.0618797242641449));
	r3 += mul(s2_3, min16float4x4(-0.3974951505661011, 0.14894349873065948, 0.5182262063026428, -0.3366777300834656, 0.08659165352582932, -0.192962646484375, -0.49224767088890076, 0.033493224531412125, 0.08624473959207535, -0.07018478959798813, -0.2649863064289093, 0.005785892717540264, -0.03383296728134155, -0.06066480651497841, 0.31075599789619446, 0.1176799014210701));
	r3 += mul(s2_4, min16float4x4(0.4236161708831787, 1.047329306602478, 0.4205211102962494, 0.6205682754516602, -0.2064308077096939, -0.14514972269535065, 0.20938526093959808, -0.5994197726249695, 0.10629197955131531, -0.45219340920448303, -0.5605476498603821, 0.3978677988052368, 0.03527654707431793, -0.1680164486169815, -0.033230606466531754, -0.37458598613739014));
	r3 += mul(s2_5, min16float4x4(0.054775819182395935, -0.01883428357541561, -0.45045602321624756, 0.19982077181339264, -0.2017754763364792, -0.25311514735221863, 0.008420746773481369, -0.1768229603767395, -0.0016752327792346478, -0.0624639093875885, 0.057634346187114716, 0.1066628247499466, 0.08345239609479904, -0.016064176335930824, 0.258881151676178, 0.02590855024755001));
	r3 += mul(s2_6, min16float4x4(0.07471398264169693, -0.09032831341028214, 0.06104619428515434, 0.029920225962996483, -0.05506748706102371, 0.17035400867462158, 0.040141936391592026, -0.11827261000871658, -0.11696203798055649, 0.042365048080682755, -0.0438232459127903, -0.02811865508556366, -0.029455790296196938, 0.03627371788024902, -0.1655692309141159, 0.1327420473098755));
	r3 += mul(s2_7, min16float4x4(0.12549810111522675, -0.31942757964134216, -0.13053394854068756, 0.037563104182481766, -0.17428091168403625, 0.16729241609573364, -0.1252894401550293, -0.22558341920375824, -0.09349273890256882, 0.3028404712677002, 0.4066830575466156, -0.1694827824831009, 0.003050903556868434, -0.31619033217430115, 0.15109415352344513, -0.15528813004493713));
	r3 += mul(s2_8, min16float4x4(-0.05799034237861633, -0.459384948015213, -0.17640730738639832, -0.14434881508350372, 0.27847129106521606, 0.3262949585914612, 0.01823558658361435, 0.046256836503744125, 0.13444766402244568, -0.004242053255438805, -0.09324157983064651, 0.0420733243227005, -0.019259890541434288, 0.08253582566976547, -0.08999865502119064, 0.004021612461656332));
	r3 += mul(s3_0, min16float4x4(0.13566027581691742, 0.19179804623126984, 0.15089482069015503, -0.0861915722489357, 0.2021537870168686, 0.07197883725166321, 0.18352259695529938, -0.2208121418952942, 0.0984259769320488, 0.07907139509916306, 0.10903090238571167, 0.2615806758403778, -0.07398992776870728, -0.15489274263381958, -0.15064021944999695, 0.08405640721321106));
	r3 += mul(s3_1, min16float4x4(0.22673632204532623, 0.28489023447036743, -0.09417224675416946, 0.10110192745923996, -0.6049661040306091, -0.13242973387241364, 0.15186835825443268, 0.10010858625173569, -0.2402219921350479, 0.39745771884918213, -0.06396395713090897, -0.37988796830177307, 0.17723752558231354, -0.02500271610915661, -0.071436807513237, -0.08754246681928635));
	r3 += mul(s3_2, min16float4x4(-0.07308704406023026, 0.08666705340147018, -0.0500834695994854, -0.11152331531047821, 0.1198568120598793, -0.12251535803079605, 0.25747212767601013, -0.11970727890729904, -0.3079937696456909, 0.12988387048244476, 0.09189789742231369, -0.23963122069835663, -0.3151967227458954, -0.08762864023447037, -0.202494814991951, 0.06139538437128067));
	r3 += mul(s3_3, min16float4x4(-0.02931486815214157, -0.08448164165019989, 0.21576231718063354, -0.0851539820432663, 0.38471099734306335, -0.12346742302179337, -0.26089590787887573, -0.08270686864852905, 0.0032058660872280598, -0.07940388470888138, -0.1362939029932022, 0.34868574142456055, 0.0658898800611496, 0.04898107796907425, 0.1378079354763031, 0.1531720608472824));
	r3 += mul(s3_4, min16float4x4(0.18951287865638733, -0.4892473518848419, 0.17483089864253998, 0.4645671844482422, -0.5697908997535706, -0.3701321482658386, -0.23523102700710297, -0.49317029118537903, 0.11934436112642288, -0.16816489398479462, 0.2505633234977722, 0.04743221774697304, 0.5213407278060913, 0.19107529520988464, 0.07803831249475479, -0.3272450268268585));
	r3 += mul(s3_5, min16float4x4(0.05576643720269203, -0.16443131864070892, -0.00831026490777731, 0.21737270057201385, 0.3505129814147949, 0.10651084780693054, 0.04359031468629837, -0.16211412847042084, 0.12242305278778076, -0.10725440084934235, 0.12038234621286392, 0.08236442506313324, -0.936901330947876, -0.0686352476477623, -0.03846265748143196, -0.7002815008163452));
	r3 += mul(s3_6, min16float4x4(-0.03983864188194275, -0.043750058859586716, -0.3252098560333252, 0.2721678912639618, 0.06625645607709885, 0.09370049089193344, -0.268044650554657, 0.04099208489060402, 0.028288280591368675, 0.05088997632265091, 0.21403023600578308, -0.14453567564487457, 0.06571154296398163, -0.005542438477277756, -0.19775372743606567, 0.22944821417331696));
	r3 += mul(s3_7, min16float4x4(0.03433617204427719, 0.05874902755022049, -0.26882845163345337, 0.06179564446210861, -0.05450739338994026, 0.5072584748268127, 0.14063850045204163, 0.05717523768544197, -0.08031797409057617, 0.1490740329027176, -0.04239773377776146, 0.06801405549049377, -0.11486184597015381, -0.07268808782100677, 0.026674561202526093, 0.04697289317846298));
	r3 += mul(s3_8, min16float4x4(0.0008419174118898809, -0.1739106923341751, -0.11400101333856583, 0.052502624690532684, -0.07838684320449829, 0.29247868061065674, -0.03263319283723831, 0.10371092706918716, -0.019986966624855995, -0.34462735056877136, 0.09700312465429306, 0.0027715459000319242, -0.127456396818161, -0.1727018505334854, 0.22423487901687622, -0.2834876477718353));
	r3 += float4(-0.008397175930440426, -0.01058588270097971, -9.103088814299554e-05, -0.0005165458424016833);
	conv1_3[gxy] = max(r3, 0.0);
}
void Pass3(uint2 blockStart, uint3 tid) {
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	};
	float2 pos = (gxy + 0.5) * GetInputPt();
	float2 step = 8 * GetInputPt();
	hook(gxy, pos);
}

//!PASS 4
//!DESC CuNNy-1x16-NVL-down
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN conv1_0, conv1_1, conv1_2, conv1_3
//!OUT down
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define l0(x, y) O(conv1_0, float2(x, y))
#define l1(x, y) O(conv1_1, float2(x, y))
#define l2(x, y) O(conv1_2, float2(x, y))
#define l3(x, y) O(conv1_3, float2(x, y))
void hook(uint2 gxy, float2 pos) {
	float2 pt = float2(GetInputPt());
	min16float4 s0_0 = l0(-1.0, -1.0);
	min16float4 s0_1 = l0(0.0, -1.0);
	min16float4 s0_2 = l0(1.0, -1.0);
	min16float4 s0_3 = l0(-1.0, 0.0);
	min16float4 s0_4 = l0(0.0, 0.0);
	min16float4 s0_5 = l0(1.0, 0.0);
	min16float4 s0_6 = l0(-1.0, 1.0);
	min16float4 s0_7 = l0(0.0, 1.0);
	min16float4 s0_8 = l0(1.0, 1.0);
	min16float4 s1_0 = l1(-1.0, -1.0);
	min16float4 s1_1 = l1(0.0, -1.0);
	min16float4 s1_2 = l1(1.0, -1.0);
	min16float4 s1_3 = l1(-1.0, 0.0);
	min16float4 s1_4 = l1(0.0, 0.0);
	min16float4 s1_5 = l1(1.0, 0.0);
	min16float4 s1_6 = l1(-1.0, 1.0);
	min16float4 s1_7 = l1(0.0, 1.0);
	min16float4 s1_8 = l1(1.0, 1.0);
	min16float4 s2_0 = l2(-1.0, -1.0);
	min16float4 s2_1 = l2(0.0, -1.0);
	min16float4 s2_2 = l2(1.0, -1.0);
	min16float4 s2_3 = l2(-1.0, 0.0);
	min16float4 s2_4 = l2(0.0, 0.0);
	min16float4 s2_5 = l2(1.0, 0.0);
	min16float4 s2_6 = l2(-1.0, 1.0);
	min16float4 s2_7 = l2(0.0, 1.0);
	min16float4 s2_8 = l2(1.0, 1.0);
	min16float4 s3_0 = l3(-1.0, -1.0);
	min16float4 s3_1 = l3(0.0, -1.0);
	min16float4 s3_2 = l3(1.0, -1.0);
	min16float4 s3_3 = l3(-1.0, 0.0);
	min16float4 s3_4 = l3(0.0, 0.0);
	min16float4 s3_5 = l3(1.0, 0.0);
	min16float4 s3_6 = l3(-1.0, 1.0);
	min16float4 s3_7 = l3(0.0, 1.0);
	min16float4 s3_8 = l3(1.0, 1.0);
	float4 r0 = 0.0;
	r0 += mul(s0_0, min16float4x4(0.06324196606874466, -0.015679163858294487, -0.03454772010445595, -0.0006953830015845597, -0.014720284380018711, 0.011696561239659786, 0.010753742419183254, 0.00013714231317862868, 0.07399709522724152, 0.02341942861676216, -0.019550370052456856, -0.009405119344592094, 0.006219929549843073, -0.003062151139602065, 0.000970586552284658, -0.0009018810233101249));
	r0 += mul(s0_1, min16float4x4(-0.5989950895309448, 0.3491083085536957, 0.20100833475589752, 0.01880747824907303, 0.16943635046482086, -0.04083974286913872, -0.02075733244419098, -0.02064121887087822, 0.040420521050691605, 0.08604007214307785, -0.035669852048158646, -0.04473521187901497, 0.08810359984636307, 0.06699465215206146, 0.02386375516653061, 0.03434588760137558));
	r0 += mul(s0_2, min16float4x4(0.47066226601600647, -0.4324910342693329, 0.21134889125823975, -0.09032469242811203, -7.75147054810077e-06, 0.04754893109202385, -0.04363322630524635, -0.07215004414319992, 0.08720878511667252, 0.1105957105755806, -0.035512812435626984, -0.04019653797149658, -0.0036742095835506916, 0.0047945077531039715, 0.005149435251951218, -0.0005755749298259616));
	r0 += mul(s0_3, min16float4x4(-0.1635228991508484, -0.04582503065466881, 0.1695912480354309, 0.013866334222257137, -0.017326045781373978, 0.015461983159184456, -0.04121529310941696, 0.025628691539168358, 0.008725817315280437, -0.04846089333295822, 0.004008117131888866, 0.005857720505446196, 0.007168829441070557, 0.02508128248155117, -0.027277106419205666, 0.035330262035131454));
	r0 += mul(s0_4, min16float4x4(0.5848084092140198, -0.005429599899798632, -0.5741540789604187, -0.10713551193475723, 0.05500531196594238, -0.11779462546110153, 0.28891584277153015, -0.11894398182630539, -0.48976197838783264, -0.3546298146247864, 0.3074343800544739, 0.24533095955848694, -0.31738370656967163, -0.28229716420173645, -0.23209701478481293, -0.3337855041027069));
	r0 += mul(s0_5, min16float4x4(-0.22534039616584778, -0.27639827132225037, 0.050205934792757034, 0.6072132587432861, 0.027703462168574333, 0.32620981335639954, 0.07997065782546997, 0.44260406494140625, 0.008237265050411224, -0.11321002244949341, -0.028589554131031036, 0.04303891211748123, 0.030943572521209717, -9.88449392025359e-05, 0.0010595275089144707, 0.0006237319321371615));
	r0 += mul(s0_6, min16float4x4(-0.03306913003325462, 0.07115714997053146, 0.02823798358440399, -0.015512702986598015, -0.0029769111424684525, 2.6180953227594728e-06, -0.008112205192446709, 0.00540153868496418, 0.1982346624135971, 0.12391094118356705, -0.3623879849910736, -0.08881786465644836, -0.009594777598977089, -1.358546160190599e-05, 0.012800035998225212, -0.0025851232931017876));
	r0 += mul(s0_7, min16float4x4(-0.04040185734629631, -0.00589880021288991, -0.032682206481695175, 0.0008112096693366766, 0.019958972930908203, -9.20268939808011e-06, 0.006969210226088762, -0.015415076166391373, 0.31768324971199036, 0.2718508541584015, -0.2185954749584198, -0.2723689377307892, 0.014872178435325623, 1.3758213754044846e-05, 0.022776667028665543, 0.035369593650102615));
	r0 += mul(s0_8, min16float4x4(0.02211177349090576, 0.006822399329394102, 0.01163939107209444, -0.08717584609985352, -0.015126404352486134, 6.169772404973628e-06, -0.007144277915358543, -7.795044325575873e-07, 0.0865556076169014, 0.2321283519268036, -0.11234557628631592, -0.31935614347457886, 0.0005495423101820052, 1.462737913016099e-07, 0.0012165360385552049, 8.041810701797658e-07));
	r0 += mul(s1_0, min16float4x4(0.3760755956172943, 0.039200857281684875, -0.09344197809696198, -0.07696428894996643, -0.09358900040388107, -0.05432486534118652, 0.0038836910389363766, 0.008720329962670803, 0.0032355329021811485, 0.05253107473254204, -0.07934880256652832, -0.041158776730298996, 0.02180277742445469, -0.004016724415123463, -0.0007683714502491057, 3.890290827257559e-06));
	r0 += mul(s1_1, min16float4x4(-0.12577791512012482, 0.22039814293384552, -0.028031742200255394, -0.09310707449913025, -0.007705080322921276, -0.04854513332247734, -0.0003292570181656629, -0.004345989786088467, 0.01761475019156933, -0.08569150418043137, 0.003913446329534054, 0.04549529030919075, -0.03356682136654854, 0.023274673148989677, 0.014690234325826168, 0.0006707606371492147));
	r0 += mul(s1_2, min16float4x4(-0.004560978151857853, -0.08192643523216248, 0.020813800394535065, 0.01696411333978176, -0.03975459560751915, -0.0207059346139431, 0.006705027539283037, 0.006565426010638475, -0.0006868279306218028, -0.0021071243099868298, -0.0007964375545270741, -0.0018344655400142074, 0.025500455871224403, -0.05245804786682129, -6.635126919718459e-05, -0.03757990896701813));
	r0 += mul(s1_3, min16float4x4(-0.3961979150772095, 0.2023027241230011, 0.29594898223876953, 0.03867323696613312, -0.23969334363937378, 0.23876702785491943, 0.01885119639337063, -0.016144467517733574, -0.874251127243042, 0.5484718084335327, 0.0609063059091568, 0.25151845812797546, -0.022239746525883675, -0.007048567291349173, 0.0025265945587307215, 0.00013927908730693161));
	r0 += mul(s1_4, min16float4x4(-0.3564452826976776, -1.1806690692901611, 0.6006540656089783, 0.8534966707229614, 0.16187617182731628, -0.3299081027507782, 0.1193847805261612, 0.16170842945575714, -0.08059966564178467, 0.29005521535873413, -0.10619622468948364, 0.09133142977952957, -0.27046412229537964, 0.09264861047267914, -0.20635564625263214, 0.10032995045185089));
	r0 += mul(s1_5, min16float4x4(0.12213390320539474, 0.3369622230529785, -0.11368318647146225, -0.10826680809259415, -0.012584286741912365, 0.09294109791517258, -0.007386205717921257, 0.02151333913207054, -0.03084341622889042, -0.04667550325393677, 0.015591412782669067, 0.006155679933726788, 0.7020233273506165, -0.8822506666183472, 0.3128415644168854, -0.2901683449745178));
	r0 += mul(s1_6, min16float4x4(-0.020778365433216095, -0.048782773315906525, 0.20172303915023804, -0.03128492459654808, -0.23685230314731598, -0.16552644968032837, 0.46998220682144165, 0.1218838170170784, 0.3090381920337677, -0.07788608223199844, -0.4164113700389862, 0.23741133511066437, 0.002766490215435624, -0.0009787812596186996, -0.0007824010099284351, -0.014888730831444263));
	r0 += mul(s1_7, min16float4x4(0.5607176423072815, 0.21669866144657135, -0.7260653376579285, 0.06137147545814514, -0.13427719473838806, -0.2862114906311035, 0.08189951628446579, 0.4246515929698944, 0.5512477159500122, -0.5685492157936096, 0.7622004151344299, -0.6911603808403015, -0.00655362056568265, -0.0036510806530714035, -0.07008803635835648, -0.013265660963952541));
	r0 += mul(s1_8, min16float4x4(0.10570415109395981, 0.4502284824848175, 0.024695957079529762, -0.6246823668479919, -0.04240195453166962, -0.08842216432094574, 0.055108893662691116, 0.04188196361064911, -0.060711782425642014, 0.01156072411686182, -0.05374639853835106, -0.028568053618073463, 0.09745818376541138, 0.04968887194991112, 0.4716648459434509, -0.5637120604515076));
	r0 += mul(s2_0, min16float4x4(-0.08476126194000244, -0.051641106605529785, 0.008126853033900261, 0.0026867964770644903, 0.045619189739227295, 0.0293068028986454, 0.1769922375679016, -0.10815491527318954, 0.027562934905290604, -0.03122897446155548, 0.03608185797929764, -0.013084948994219303, -0.016604717820882797, -0.0008168600033968687, 0.0007167357834987342, -0.001470033312216401));
	r0 += mul(s2_1, min16float4x4(0.17478318512439728, 0.1557655781507492, -0.04303540289402008, -0.041615430265665054, 1.050820231437683, -1.1143817901611328, 0.7455899715423584, -0.7846665382385254, -0.41816312074661255, 0.03893999382853508, 0.12317882478237152, 0.130811408162117, 0.01252745557576418, 0.08817393332719803, -0.10504580289125443, -0.014613199047744274));
	r0 += mul(s2_2, min16float4x4(-0.05214060842990875, -0.028949972242116928, 0.051812756806612015, 0.04629725217819214, -0.07299554347991943, 0.0782313197851181, -0.07738146930932999, 0.012078430503606796, -0.08167010545730591, 0.36627525091171265, -0.06860355287790298, -0.05555333197116852, -0.05871003866195679, 0.07883346080780029, -0.018272075802087784, 0.03893459215760231));
	r0 += mul(s2_3, min16float4x4(0.031499337404966354, -0.013981731608510017, -0.07860615849494934, 0.0437169075012207, -0.8562549948692322, 0.7730342149734497, -0.5986371040344238, 0.5784791707992554, 0.04064752906560898, -0.027609921991825104, 0.04777764156460762, -0.0627429336309433, -0.0020387605763971806, 0.0016974061727523804, -0.006984295789152384, 0.0016666357405483723));
	r0 += mul(s2_4, min16float4x4(0.9719460606575012, 0.6800647974014282, -0.9954238533973694, -0.6687816381454468, 0.04601825401186943, 0.07892808318138123, 0.424161434173584, -0.28248199820518494, -0.08701571822166443, 0.3357095420360565, -0.826254665851593, 0.3330385386943817, 0.35062384605407715, -0.0744253471493721, 0.5376327037811279, -0.035670358687639236));
	r0 += mul(s2_5, min16float4x4(0.07553477585315704, 0.36805260181427, 0.01684640720486641, -0.4406663477420807, -0.01859869807958603, -0.026400675997138023, -0.041077449917793274, 0.03569823130965233, -0.061031777411699295, 0.04597562551498413, -0.04995878413319588, 0.5082759857177734, -0.35538122057914734, 0.3962820768356323, -0.42716720700263977, 0.2538025975227356));
	r0 += mul(s2_6, min16float4x4(-0.0046888659708201885, -0.007821664214134216, 0.04878493770956993, -0.02674669399857521, -0.09203413873910904, 0.09398483484983444, -0.42764440178871155, 0.4540412127971649, 0.008493740111589432, 0.00019421661272644997, 0.010727823711931705, 0.00314596900716424, 3.499426384223625e-06, -0.0008788532577455044, -0.0024614050053060055, -0.00021988875232636929));
	r0 += mul(s2_7, min16float4x4(-0.03444407507777214, -0.03918648138642311, 0.015541729517281055, 0.08164235204458237, 0.029954904690384865, 0.010523580014705658, 0.07238388806581497, -0.11623974144458771, 0.028719056397676468, -0.01859467849135399, 0.1538386344909668, -0.0031536980532109737, -0.03143772855401039, -0.0005049605970270932, -0.06569653004407883, 0.0006328878807835281));
	r0 += mul(s2_8, min16float4x4(-0.021093565970659256, -0.03032733127474785, 0.021203072741627693, 0.04578964412212372, -0.0033023024443536997, -0.00029868134879507124, -0.00949128158390522, 0.00010630327597027645, -0.009767690673470497, 0.002112873364239931, -0.055006083101034164, -0.03366592898964882, -0.11732590943574905, 0.0160748939961195, -0.1372227817773819, 0.18217192590236664));
	r0 += mul(s3_0, min16float4x4(-0.040933240205049515, -0.09980380535125732, 0.04457131028175354, 0.001890587154775858, 0.0022978598717600107, -0.022793153300881386, -0.009996138513088226, -0.0006660090875811875, -0.023129448294639587, -0.0039404514245688915, 0.012481588870286942, 0.006238345522433519, -1.7688153093331493e-05, -0.04581857845187187, 0.0020475478377193213, 0.010335861705243587));
	r0 += mul(s3_1, min16float4x4(-0.0009584260988049209, 0.05786063149571419, 0.012957824394106865, -0.024371931329369545, 0.46068012714385986, 0.23418335616588593, -0.05907721444964409, -0.06249404326081276, -0.04855777695775032, -0.07293420284986496, 0.016410792246460915, -0.021718308329582214, -0.061013150960206985, 0.1000109612941742, 0.02304333820939064, -0.013185798190534115));
	r0 += mul(s3_2, min16float4x4(0.0015706312842667103, 0.0019326837500557303, -0.004712376277893782, 0.0016722778091207147, -0.05987054109573364, 0.1801772266626358, 0.012839158996939659, 0.025983355939388275, -0.21220682561397552, -0.27120301127433777, 0.13035619258880615, 0.18117500841617584, 0.009963435120880604, -0.07889969646930695, 0.02617686055600643, -0.014711217023432255));
	r0 += mul(s3_3, min16float4x4(0.41708311438560486, -0.004404844716191292, -0.08831394463777542, -0.015283096581697464, -0.1671152561903, -0.01070256158709526, 0.26790010929107666, -0.06949449330568314, 0.20163065195083618, -0.008782648481428623, -0.06374267488718033, -0.07172568887472153, 0.21295851469039917, -0.04805753752589226, -0.07542096823453903, -0.048035118728876114));
	r0 += mul(s3_4, min16float4x4(0.17869485914707184, -0.5683615207672119, 0.10505861788988113, 0.14013634622097015, -0.8069326281547546, -0.7339248061180115, 0.6133511066436768, 1.0110911130905151, 0.13938435912132263, 0.1380337029695511, -0.49249446392059326, 0.22021222114562988, -0.9313898682594299, 0.9892438650131226, -0.49145349860191345, 0.5301768779754639));
	r0 += mul(s3_5, min16float4x4(-0.015522601082921028, 0.039011482149362564, -0.008137057535350323, 0.009042452089488506, -0.043139852583408356, -0.24135208129882812, 0.12475718557834625, 0.10356386750936508, 0.19533711671829224, 0.5923636555671692, -0.07389708608388901, -0.8007622361183167, 0.06701745837926865, -0.2521894872188568, 0.03212498128414154, -0.15583188831806183));
	r0 += mul(s3_6, min16float4x4(-0.05331456661224365, -0.0056762550957500935, 0.3617110252380371, -0.04002871364355087, 0.02003299444913864, 0.025150272995233536, -0.11813341081142426, 0.010642225854098797, -0.06280796974897385, 0.05941521003842354, -0.019073711708188057, 0.11061926186084747, -0.03699943795800209, -0.01541870553046465, 0.22905167937278748, -0.03855175897479057));
	r0 += mul(s3_7, min16float4x4(0.32915350794792175, -0.04813763499259949, 0.3298584520816803, -0.6046515107154846, 0.042546000331640244, 0.0601806603372097, -0.04085380584001541, -0.136234849691391, 0.024959610775113106, -0.11357216536998749, 0.3014518618583679, -0.08544065058231354, -0.08053356409072876, 0.07642854005098343, -0.5298016667366028, 0.625705361366272));
	r0 += mul(s3_8, min16float4x4(-0.011782480403780937, -0.001300582429394126, 0.001892689848318696, 0.02197127975523472, 0.013113342225551605, 0.006628763861954212, -0.01702127419412136, -0.06289491057395935, -0.021222615614533424, -0.052096713334321976, -0.05464838445186615, 0.13137729465961456, 0.023619884625077248, -0.05144748091697693, 0.007854838855564594, -0.12083557993173599));
	r0 += float4(-1.542071359494912e-08, -1.4240717050029161e-08, -1.439272345749032e-08, -7.808863777825081e-09);
	down[gxy] = tanh(r0);
}
void Pass4(uint2 blockStart, uint3 tid) {
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	};
	float2 pos = (gxy + 0.5) * GetInputPt();
	float2 step = 8 * GetInputPt();
	hook(gxy, pos);
}

//!PASS 5
//!DESC CuNNy-1x16-NVL-shuffle
//!STYLE PS
//!IN down, easu, INPUT
float4 Pass5(float2 pos) {
	float2 pt = float2(GetInputPt());
	const static float2x3 rgb2uv = {-0.169, -0.331, 0.5, 0.5, -0.419, -0.081};
	const static float3x3 yuv2rgb = {1, -0.00093, 1.401687, 1, -0.3437, -0.71417, 1, 1.77216, 0.00099};
	float4 r = 0.0;
	float2 size = float2(GetInputSize());
	float2 f = frac(pos * size);
	int2 i = int2(f * 2.0);
	r.r = down.SampleLevel(SP, (float2(0.5, 0.5) - f) * pt + pos, 0)[2*i.y + i.x];
	r.r += easu.SampleLevel(SP, pos, 0).r;
	r.a = 1.0;
	r.r = clamp(r, 0.0, 1.0);
	float2 uv = mul(rgb2uv, INPUT.SampleLevel(SL, pos, 0).rgb);
	float3 px = mul(yuv2rgb, float3(r.r, uv));
	return float4(px, 1.0);
}
