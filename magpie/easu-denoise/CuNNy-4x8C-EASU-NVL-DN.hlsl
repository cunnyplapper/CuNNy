// CuNNy 4x8C CHROMA NVL DN
// Copyright (c) 2024 cunnyplapper

// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public
// License along with this program.  If not, see <https://www.gnu.org/licenses/>.
/* ------------------------------------------------------------------- */

//!MAGPIE EFFECT
//!VERSION 3
//!OUTPUT_WIDTH INPUT_WIDTH * 2
//!OUTPUT_HEIGHT INPUT_HEIGHT * 2

//!TEXTURE
Texture2D INPUT;

//!TEXTURE
//!WIDTH INPUT_WIDTH * 2
//!HEIGHT INPUT_HEIGHT * 2
//!FORMAT R8_UNORM
Texture2D easu;

//!SAMPLER
//!FILTER POINT
SamplerState SP;

//!SAMPLER
//!FILTER LINEAR
SamplerState SL;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t1;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t2;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t3;

// FSR mpv | modified
// Copyright (c) 2021 Advanced Micro Devices, Inc. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// FidelityFX FSR v1.0.2 by AMD
// ported to mpv by agyild

//!PASS 1
//!DESC CuNNy-EASU
//!STYLE PS
//!IN INPUT
//!OUT easu

float GetLuma(float3 rgb) {
	return dot(float3(0.299, 0.587, 0.114), rgb);
}

float APrxLoRcpF1(float a) {
	return asfloat(uint(0x7ef07ebb) - asuint(a));
}

float APrxLoRsqF1(float a) {
	return asfloat(uint(0x5f347d74) - (asuint(a) >> uint(1)));
}

float AMin3F1(float x, float y, float z) {

	return min(x, min(y, z));
}

float AMax3F1(float x, float y, float z) {
	return max(x, max(y, z));
}

void tap(inout float aC, inout float aW, float2 off, float2 dir, float2 len,
         float lob, float clp, float c){
	float2 v;
	v.x = (off.x * ( dir.x)) + (off.y * dir.y);
	v.y = (off.x * (-dir.y)) + (off.y * dir.x);
	v *= len;
	float d2 = v.x * v.x + v.y * v.y;
	d2 = min(d2, clp);
	float wB = float(2.0 / 5.0) * d2 + -1.0;

	float wA = lob * d2 + -1.0;
	wB *= wB;
	wA *= wA;
	wB = float(25.0 / 16.0) * wB + float(-(25.0 / 16.0 - 1.0));
	float w = wB * wA;
	aC += c * w;
	aW += w;
}

void set(inout float2 dir, inout float len, float2 pp, bool biS, bool biT,
         bool biU, bool biV, float lA, float lB, float lC, float lD, float lE){

	float w = 0.0;
	if (biS)
		w = (1.0 - pp.x) * (1.0 - pp.y);
	if (biT)
		w =        pp.x  * (1.0 - pp.y);
	if (biU)
		w = (1.0 - pp.x) *        pp.y;

	if (biV)
		w =        pp.x  *        pp.y;
	float dc = lD - lC;
	float cb = lC - lB;
	float lenX = max(abs(dc), abs(cb));
	lenX = APrxLoRcpF1(lenX);
	float dirX = lD - lB;
	lenX = clamp(abs(dirX) * lenX, 0.0, 1.0);
	lenX *= lenX;
	float ec = lE - lC;

	float ca = lC - lA;
	float lenY = max(abs(ec), abs(ca));
	lenY = APrxLoRcpF1(lenY);
	float dirY = lE - lA;
	lenY = clamp(abs(dirY) * lenY, 0.0, 1.0);
	lenY *= lenY;
	dir += float2(dirX, dirY) * w;
	len += dot(float2(w, w), float2(lenX, lenY));
}

float4 Pass1(float2 pos) {
	float2 pt = float2(GetInputPt());
	float2 size = float2(GetInputSize());
	float4 pix = float4(0.0, 0.0, 0.0, 1.0);
	float2 pp = pos * size - float2(0.5, 0.5);
	float2 fp = floor(pp);
	pp -= fp;
	float b = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(0.5, -0.5)) * pt), 0).rgb);
	float c = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(1.5, -0.5)) * pt), 0).rgb);
	float e = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(-0.5, 0.5)) * pt), 0).rgb);
	float f = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 0.5, 0.5)) * pt), 0).rgb);
	float g = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 1.5, 0.5)) * pt), 0).rgb);
	float h = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 2.5, 0.5)) * pt), 0).rgb);
	float i = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(-0.5, 1.5)) * pt), 0).rgb);
	float j = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 0.5, 1.5)) * pt), 0).rgb);
	float k = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 1.5, 1.5)) * pt), 0).rgb);
	float l = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2( 2.5, 1.5)) * pt), 0).rgb);
	float n = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(0.5, 2.5) ) * pt), 0).rgb);
	float o = GetLuma(INPUT.SampleLevel(SP, float2((fp + float2(1.5, 2.5) ) * pt), 0).rgb);
	float4 bczzL = float4(b, c, 0.0, 0.0);
	float4 ijfeL = float4(i, j, f, e);
	float4 klhgL = float4(k, l, h, g);
	float4 zzonL = float4(0.0, 0.0, o, n);
	float bL = bczzL.x;
	float cL = bczzL.y;
	float iL = ijfeL.x;
	float jL = ijfeL.y;
	float fL = ijfeL.z;
	float eL = ijfeL.w;
	float kL = klhgL.x;
	float lL = klhgL.y;
	float hL = klhgL.z;
	float gL = klhgL.w;
	float oL = zzonL.z;
	float nL = zzonL.w;
	float2 dir = float2(0.0, 0.0);
	float len = 0.0;
	set(dir, len, pp, true, false, false, false, bL, eL, fL, gL, jL);
	set(dir, len, pp, false, true, false, false, cL, fL, gL, hL, kL);
	set(dir, len, pp, false, false, true, false, fL, iL, jL, kL, nL);
	set(dir, len, pp, false, false, false, true, gL, jL, kL, lL, oL);
	float2 dir2 = dir * dir;
	float dirR = dir2.x + dir2.y;
	bool zro = dirR < float(1.0 / 32768.0);
	dirR = APrxLoRsqF1(dirR);
	dirR = zro ? 1.0 : dirR;
	dir.x = zro ? 1.0 : dir.x;
	dir *= float2(dirR, dirR);
	len = len * 0.5;
	len *= len;
	float stretch = (dir.x * dir.x + dir.y * dir.y) * APrxLoRcpF1(max(abs(dir.x), abs(dir.y)));
	float2 len2 = float2(1.0 + (stretch - 1.0) * len, 1.0 + -0.5 * len);
	float lob = 0.5 + float((1.0 / 4.0 - 0.04) - 0.5) * len;
	float clp = APrxLoRcpF1(lob);
	float aC = 0.0;
	float aW = 0.0;
	tap(aC, aW, float2( 0.0,-1.0) - pp, dir, len2, lob, clp, bL);
	tap(aC, aW, float2( 1.0,-1.0) - pp, dir, len2, lob, clp, cL);
	tap(aC, aW, float2(-1.0, 1.0) - pp, dir, len2, lob, clp, iL);
	tap(aC, aW, float2( 0.0, 1.0) - pp, dir, len2, lob, clp, jL);
	tap(aC, aW, float2( 0.0, 0.0) - pp, dir, len2, lob, clp, fL);
	tap(aC, aW, float2(-1.0, 0.0) - pp, dir, len2, lob, clp, eL);
	tap(aC, aW, float2( 1.0, 1.0) - pp, dir, len2, lob, clp, kL);
	tap(aC, aW, float2( 2.0, 1.0) - pp, dir, len2, lob, clp, lL);
	tap(aC, aW, float2( 2.0, 0.0) - pp, dir, len2, lob, clp, hL);
	tap(aC, aW, float2( 1.0, 0.0) - pp, dir, len2, lob, clp, gL);
	tap(aC, aW, float2( 1.0, 2.0) - pp, dir, len2, lob, clp, oL);
	tap(aC, aW, float2( 0.0, 2.0) - pp, dir, len2, lob, clp, nL);
	pix.r = aC / aW;
	float min1 = min(AMin3F1(fL, gL, jL), kL);
	float max1 = max(AMax3F1(fL, gL, jL), kL);
	pix.r = clamp(pix.r, min1, max1);
	pix.r = clamp(pix.r, 0.0, 1.0);
	return pix;
}

//!PASS 2
//!DESC CuNNy-4x8C-CHROMA-NVL-DN-in
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN INPUT
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) (dot(float3(-2.842e-01, -5.371e-01, -1.312e-01), O(INPUT, float2(x, y)).rgb) + 6.995e-01)
float4 f0(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	V4 r = 0.0;
	r += V4(9.112e-03, -5.153e-02, -7.988e-03, 3.945e-03) * s0_0;
	r += V4(-1.286e-01, -4.496e-01, -6.110e-02, 9.429e-03) * s0_1;
	r += V4(6.909e-02, -1.593e-01, -7.767e-02, 2.296e-02) * s0_2;
	r += V4(-1.457e-01, 1.074e-01, -6.198e-02, 7.052e-03) * s0_3;
	r += V4(6.545e-01, 4.877e-01, 3.790e-01, 2.388e-02) * s0_4;
	r += V4(-4.279e-01, 5.846e-02, 4.000e-02, -5.588e-01) * s0_5;
	r += V4(6.409e-02, -3.173e-03, -3.005e-02, 5.879e-03) * s0_6;
	r += V4(-1.011e-03, -2.077e-02, -3.150e-02, 1.405e-02) * s0_7;
	r += V4(-9.356e-02, 3.009e-02, -5.646e-02, 2.976e-02) * s0_8;
	r += V4(4.370e-04, 5.926e-05, -5.558e-02, -1.009e-01);
	return r;
}
float4 f1(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	V4 r = 0.0;
	r += V4(-1.250e-03, -3.135e-01, 1.047e-02, -5.164e-02) * s0_0;
	r += V4(2.573e-02, 2.426e-01, -4.606e-02, -3.867e-01) * s0_1;
	r += V4(-1.930e-02, 4.493e-02, -3.916e-01, -1.002e-02) * s0_2;
	r += V4(-5.408e-02, -3.775e-01, -7.761e-03, 1.768e-02) * s0_3;
	r += V4(2.290e-01, 2.805e-01, -4.339e-02, -3.207e-02) * s0_4;
	r += V4(-1.350e-01, 8.391e-02, -8.175e-02, -2.296e-03) * s0_5;
	r += V4(-4.193e-01, 2.414e-02, 3.834e-04, 4.119e-02) * s0_6;
	r += V4(2.093e-01, 2.976e-02, 7.641e-02, 4.156e-01) * s0_7;
	r += V4(1.626e-01, -2.401e-02, 4.865e-01, 6.739e-03) * s0_8;
	r += V4(-9.294e-03, 1.219e-02, -1.051e-02, 8.574e-03);
	return r;
}
void Pass2(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	min16float s0_0 = l0(-1.0, -1.0);
	min16float s0_1 = l0(0.0, -1.0);
	min16float s0_2 = l0(1.0, -1.0);
	min16float s0_3 = l0(-1.0, 0.0);
	min16float s0_4 = l0(0.0, 0.0);
	min16float s0_5 = l0(1.0, 0.0);
	min16float s0_6 = l0(-1.0, 1.0);
	min16float s0_7 = l0(0.0, 1.0);
	min16float s0_8 = l0(1.0, 1.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
}
//!PASS 3
//!DESC CuNNy-4x8C-CHROMA-NVL-DN-conv1
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2, t3
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-7.427e-02, -1.315e-01, -2.267e-01, 1.909e-02, 4.897e-02, 7.767e-02, -1.269e-01, 6.549e-03, 4.318e-04, -4.764e-02, -1.801e-01, 2.503e-01, -9.803e-03, 5.098e-01, -2.460e-01, 1.490e-01));
	r += mul(s0_1, M4(1.072e-01, -1.808e-02, -1.726e-01, -6.441e-03, 1.611e-01, 6.511e-02, 4.042e-02, 1.704e-01, -4.412e-01, -1.159e-01, -3.169e-01, -7.330e-02, -4.720e-02, -4.688e-02, 8.918e-01, -1.765e+00));
	r += mul(s0_2, M4(-1.109e-02, -3.133e-02, 3.465e-02, 2.822e-01, 1.802e-01, 1.686e-01, -1.053e-01, 3.898e-02, -7.343e-02, -1.116e-01, 4.211e-02, 2.133e-02, 2.019e-01, 4.443e-02, -4.298e-01, 1.693e-01));
	r += mul(s0_3, M4(-1.216e-01, -1.435e-01, -1.689e-01, -1.314e-01, -5.334e-02, 5.791e-04, 2.018e-02, -6.738e-02, 2.652e-01, 3.585e-02, -2.840e-02, 1.041e-01, -1.122e-01, 3.717e+00, -1.028e-01, 1.199e+00));
	r += mul(s0_4, M4(-1.719e-01, 1.537e-01, -2.954e-02, -9.518e-02, -3.170e-01, -4.678e-01, 2.670e-01, -2.769e-01, 4.034e-01, 1.188e-01, 4.832e-01, -7.142e-01, -2.406e-01, 3.409e+00, 3.732e-01, -1.469e-01));
	r += mul(s0_5, M4(-6.053e-02, -1.275e-01, -3.694e-01, -8.869e-02, 4.969e-02, -2.484e-01, 5.878e-01, -2.907e-01, 3.508e-01, -5.949e-01, -4.400e-02, -6.448e-02, 2.547e-01, 4.421e-01, -1.362e-01, 2.112e-01));
	r += mul(s0_6, M4(5.226e-02, -6.121e-02, 7.212e-02, 7.017e-03, 3.460e-02, 9.194e-02, -3.831e-02, 4.116e-02, -3.198e-01, 2.984e-02, 2.004e-01, -9.741e-02, -6.398e-01, 3.534e-01, 7.363e-01, -4.667e-01));
	r += mul(s0_7, M4(5.098e-01, 7.809e-02, 6.464e-02, 1.015e-01, 9.176e-02, -3.135e-01, 1.948e-01, 4.675e-01, -1.039e-01, 4.374e-01, -1.702e-01, -2.781e-01, -2.666e-01, 1.209e+00, -1.404e-01, 8.646e-01));
	r += mul(s0_8, M4(1.311e-01, 1.192e-01, -2.748e-01, 1.329e-01, -9.901e-02, 2.199e-01, 2.001e-01, -1.785e-02, 2.744e-01, -2.995e-01, -2.302e-01, -1.087e-01, 3.118e-01, 2.995e-03, 5.834e-02, -3.506e-01));
	r += mul(s1_0, M4(-1.895e-01, 8.711e-02, 1.642e-01, -1.222e-01, 1.300e-02, 6.958e-02, -6.667e-02, 1.847e-02, -7.735e-02, -3.613e-02, -6.913e-02, -1.164e-01, 1.560e-01, -3.072e-02, -8.091e-02, -8.897e-02));
	r += mul(s1_1, M4(-3.057e-03, 6.885e-03, 1.931e-01, -3.659e-01, 1.051e-01, 2.932e-02, 1.008e-01, 1.871e-01, -1.874e-01, -3.465e-02, -1.480e-01, -2.549e-01, -3.455e-02, 1.145e-02, -7.007e-02, -1.314e-01));
	r += mul(s1_2, M4(-6.719e-02, -3.241e-02, 6.409e-02, 1.190e-02, 1.018e-01, 3.878e-01, 1.356e-01, 4.287e-02, 1.499e-02, 5.133e-03, 2.135e-01, -9.023e-02, 2.482e-02, -5.185e-02, 3.713e-02, -1.120e-01));
	r += mul(s1_3, M4(-2.371e-01, 2.250e-01, 2.725e-01, 8.052e-03, 4.927e-02, 9.349e-03, -2.096e-01, 3.128e-02, 7.437e-02, 1.276e-01, -1.299e-01, -3.773e-03, 6.250e-02, -2.636e-02, 2.186e-02, -5.595e-04));
	r += mul(s1_4, M4(-2.959e-01, -2.046e-01, -5.937e-02, -2.562e-01, -8.650e-02, -2.592e-01, -2.379e-01, -5.647e-02, -7.068e-02, 3.209e-02, -7.858e-02, 1.701e-02, 2.172e-01, 6.010e-02, 8.450e-02, 2.299e-01));
	r += mul(s1_5, M4(-1.307e-01, -4.203e-01, -1.312e-01, -8.356e-02, 1.195e-01, 1.050e-01, -2.572e-01, 2.406e-01, 2.823e-01, 1.687e-01, 2.585e-01, 1.227e-01, 8.967e-03, 6.785e-02, 1.990e-01, 6.947e-02));
	r += mul(s1_6, M4(-7.222e-02, 1.975e-01, 2.418e-02, 1.236e-01, 4.140e-01, 6.327e-02, -9.984e-02, 4.367e-02, -1.979e-01, 1.127e-02, 1.024e-02, -8.127e-02, -7.843e-02, -3.259e-02, -6.266e-02, 6.063e-02));
	r += mul(s1_7, M4(4.444e-01, 7.660e-02, 3.444e-01, 4.416e-01, 1.111e+00, 2.910e-01, -2.052e-01, 1.621e-01, -2.284e-01, -1.660e-01, -2.135e-01, 1.702e-01, -2.838e-01, 2.485e-02, -2.386e-01, 1.908e-02));
	r += mul(s1_8, M4(1.401e-01, -2.171e-01, -6.915e-02, 8.471e-02, 3.291e-01, 1.306e-01, -6.109e-01, -2.260e-01, 4.953e-03, -1.503e-02, 2.004e-01, 2.344e-02, -1.304e-01, 5.372e-02, 8.401e-02, -6.883e-02));
	r += mul(s2_0, M4(-1.501e-01, -6.132e-02, 1.955e-01, -7.409e-02, 2.250e-02, -5.033e-02, -6.452e-02, 1.377e-02, 1.460e-01, 2.089e-01, -8.591e-02, -1.421e-01, -2.286e-02, 1.121e-02, 4.338e-02, 1.259e-03));
	r += mul(s2_1, M4(-1.477e-01, 2.725e-02, 3.112e-01, -3.211e-01, 7.305e-02, -7.064e-02, -9.723e-02, -4.172e-02, -5.735e-02, -2.497e-01, 3.237e-02, 1.181e-02, -2.997e-01, -1.397e-01, 6.846e-02, -6.877e-02));
	r += mul(s2_2, M4(-9.338e-02, 4.201e-02, 7.796e-01, -1.840e-01, 1.119e-01, -4.756e-02, 2.771e-01, 1.709e-01, -4.093e-02, -6.558e-02, -1.838e-01, 7.440e-02, -5.829e-02, -5.893e-02, 3.621e-01, -2.230e-01));
	r += mul(s2_3, M4(-2.067e-01, 4.007e-04, 1.549e-01, -1.255e-01, 7.831e-02, 7.927e-02, 2.481e-02, 5.022e-02, -1.811e-01, 1.533e-01, 3.369e-01, -6.639e-01, -1.011e-01, 9.792e-02, -1.917e-01, -1.395e-01));
	r += mul(s2_4, M4(-1.155e-01, 3.672e-02, -1.979e-02, 6.241e-03, -3.194e-01, -2.593e-02, 1.116e-01, 1.975e-01, 1.866e-01, 1.214e-01, 4.096e-02, 3.467e-01, 3.492e-01, -3.408e-01, 1.076e-01, 7.375e-01));
	r += mul(s2_5, M4(-2.103e-01, 1.917e-01, 5.801e-01, 4.392e-01, -1.690e-01, -1.790e-01, 2.756e-01, -4.092e-01, -5.847e-02, 8.611e-02, -2.185e-01, -1.249e-01, -6.918e-02, 1.357e-02, 5.433e-01, -3.958e-01));
	r += mul(s2_6, M4(-2.267e-03, 6.621e-02, -1.939e-01, 5.118e-02, 2.118e-01, 2.237e-03, -1.464e-01, 8.817e-02, -5.198e-01, -1.121e-01, 2.256e-01, -4.073e-01, -4.830e-02, 3.218e-02, -5.674e-02, 6.327e-02));
	r += mul(s2_7, M4(1.215e-01, 6.346e-03, -1.090e-01, 2.797e-01, 2.510e-01, 6.121e-02, 3.677e-02, 1.336e-02, -1.263e-01, 4.163e-01, -3.690e-02, 9.971e-02, 4.754e-01, 1.744e-03, -2.204e-01, 4.113e-01));
	r += mul(s2_8, M4(1.435e-01, -9.794e-02, 4.791e-02, 2.412e-01, 9.159e-02, -1.633e-01, 2.343e-03, -1.569e-01, 2.460e-02, -7.607e-02, -1.909e-01, -5.537e-02, 1.420e-01, -2.147e-01, -9.973e-03, -4.148e-03));
	r += mul(s3_0, M4(1.273e-01, 1.100e-01, -3.292e-02, 6.594e-02, 1.606e-02, 7.159e-03, 8.114e-02, 6.789e-03, -1.199e-01, 1.494e-01, -1.360e-01, 2.241e-01, 4.422e-02, -3.249e-02, 2.104e-01, -9.899e-03));
	r += mul(s3_1, M4(2.218e-01, -2.220e-01, -2.038e-01, -1.592e-01, 7.837e-03, 3.467e-02, 5.789e-03, -1.699e-02, -1.159e-02, -1.399e-01, 8.065e-02, -3.566e-01, -9.856e-02, -4.811e-03, -9.347e-02, -3.140e-01));
	r += mul(s3_2, M4(8.669e-02, -1.846e-01, -3.481e-01, 1.140e-01, 2.387e-02, -2.107e-01, 3.334e-01, -4.261e-02, -6.372e-02, -1.149e-01, 1.452e-02, 9.383e-02, -4.048e-02, -4.291e-01, -7.626e-02, 1.813e-01));
	r += mul(s3_3, M4(-1.112e-01, -1.146e-01, -1.835e-02, -3.464e-01, -1.087e-01, -4.065e-02, 3.364e-02, -3.910e-02, 1.951e-01, -2.699e-02, -1.558e-01, 3.149e-01, -4.491e-02, 3.115e-02, 2.248e-01, -4.886e-02));
	r += mul(s3_4, M4(-2.022e-01, 1.158e-01, 6.516e-02, -3.249e-01, -2.203e-01, -8.033e-02, 9.302e-02, 1.274e-01, 2.783e-01, -9.135e-02, -9.915e-02, -4.307e-01, -1.714e-01, 3.725e-01, -4.399e-01, -2.428e-02));
	r += mul(s3_5, M4(3.741e-01, -4.049e-02, -3.651e-01, -5.482e-02, -5.893e-02, 1.276e-01, -6.615e-01, -3.282e-01, -8.066e-02, 8.614e-02, 1.243e-01, 2.949e-03, -3.285e-01, -2.439e-01, -3.904e-01, 1.425e-01));
	r += mul(s3_6, M4(2.927e-02, 9.297e-02, 1.137e-01, 2.326e-02, 7.166e-02, 2.991e-02, -3.547e-02, 2.124e-01, 2.085e-01, 1.873e-02, -9.990e-02, 1.958e-01, -2.322e-02, 4.411e-03, 5.117e-02, 5.213e-02));
	r += mul(s3_7, M4(-5.372e-02, 9.302e-02, 5.497e-02, 1.355e-01, 1.414e-01, -1.738e-01, 1.249e-02, 5.534e-02, 5.139e-02, -1.827e-01, 6.243e-02, -1.450e-01, -2.314e-01, 7.267e-02, 1.355e-01, -2.267e-01));
	r += mul(s3_8, M4(7.483e-03, -1.686e-01, 2.349e-01, -7.430e-03, -1.234e-01, -2.336e-01, -2.327e-01, 6.186e-01, 2.349e-02, -2.264e-02, 9.703e-02, -1.587e-02, -1.192e-01, 1.275e-01, -1.577e-01, 1.079e-01));
	r += V4(-4.914e-03, 3.375e-02, -4.531e-02, -2.396e-02);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(1.460e-02, 6.578e-02, -1.261e-01, -2.420e-01, 7.878e-02, 1.361e-02, 1.498e-01, 5.627e-03, -5.407e-01, 1.184e-01, 2.418e-02, -2.587e-01, 1.455e-01, 4.014e-01, 3.756e-02, -1.820e-01));
	r += mul(s0_1, M4(-2.563e-02, 3.804e-01, -1.344e-01, 6.690e-02, -1.665e-01, -8.627e-02, 1.106e-01, 1.513e-01, 2.678e-01, -2.040e-01, 1.876e-03, -1.054e-01, 4.876e-01, 1.590e+00, 5.042e-01, 4.519e-01));
	r += mul(s0_2, M4(6.065e-02, 8.421e-02, -3.300e-01, 1.203e-01, -1.490e-01, 2.666e-01, -2.205e-02, -5.163e-02, -1.581e-01, -1.392e-01, 2.047e-01, 1.392e-01, 4.549e-01, -3.758e-01, 2.614e-01, -8.188e-02));
	r += mul(s0_3, M4(-5.948e-01, 1.588e-01, 1.288e-01, -1.356e+00, -1.091e-01, 9.766e-02, 1.183e-02, -3.479e-01, 3.104e-01, 8.555e-02, 4.956e-02, 2.091e-01, 1.028e+00, 1.190e+00, -6.669e-01, -1.541e+00));
	r += mul(s0_4, M4(-2.260e-01, 2.808e-01, -1.326e-01, 5.059e-01, -1.870e-02, -8.985e-02, -3.168e-01, 2.887e-01, -1.395e-01, -5.549e-01, -3.028e-01, -4.084e-01, -6.209e-01, 2.693e+00, 8.414e-01, 1.901e-01));
	r += mul(s0_5, M4(2.110e-01, -1.865e-01, -3.758e-01, 7.077e-02, 1.986e-01, 2.323e-01, -3.684e-01, 1.790e-01, -2.724e-01, 4.286e-01, 3.598e-01, 1.352e-01, -4.826e-02, 1.367e+00, 6.205e-01, -2.304e-01));
	r += mul(s0_6, M4(-2.036e-01, -8.798e-02, -7.175e-02, -4.342e-01, 4.662e-02, 3.099e-02, -1.150e-01, 1.304e-01, -1.751e-01, 1.958e-01, -1.037e-01, -7.205e-02, 1.859e-01, 5.523e-01, -5.128e-01, 2.475e-01));
	r += mul(s0_7, M4(1.720e-01, 3.142e-02, -5.829e-02, -3.441e-01, 8.118e-01, -1.346e-01, 7.543e-02, -1.222e-01, -3.329e-01, -5.265e-03, 2.618e-01, -1.369e-01, -3.088e-01, 7.182e-01, 5.585e-02, 3.584e-01));
	r += mul(s0_8, M4(7.067e-02, 3.368e-01, 2.379e-01, 9.832e-03, 2.009e-01, 3.091e-01, 1.348e-02, 6.267e-02, 3.707e-01, -4.895e-02, -7.000e-02, 9.621e-03, 3.079e-01, 6.288e-02, 2.112e-01, -2.304e-02));
	r += mul(s1_0, M4(6.118e-02, -1.862e-01, -4.870e-02, -1.616e-01, -1.019e-01, -1.076e-01, 5.818e-02, -4.340e-03, -1.773e-01, -5.677e-02, 3.080e-01, -2.886e-01, 6.849e-02, 1.501e-01, -3.169e-02, -1.446e-02));
	r += mul(s1_1, M4(1.237e-01, -7.585e-02, -4.985e-02, 4.178e-02, -1.169e-01, -1.230e-01, 2.007e-01, 8.295e-02, -1.011e-01, 1.201e-01, 6.201e-02, 2.160e-02, 9.884e-02, 1.436e-01, 4.457e-03, 1.594e-01));
	r += mul(s1_2, M4(6.021e-02, -1.868e-01, -9.080e-02, 8.777e-02, -1.001e-01, 4.448e-02, 6.811e-02, 1.161e-02, -6.842e-02, -1.677e-01, -1.860e-01, 2.423e-01, 6.367e-02, 9.753e-03, 4.561e-02, -1.516e-01));
	r += mul(s1_3, M4(-1.011e-02, -1.828e-01, 2.001e-01, -8.189e-01, -1.924e-01, 4.321e-02, 2.843e-01, -2.492e-01, -1.640e-01, 3.509e-02, 1.163e-01, -4.207e-01, -1.213e-01, -3.506e-02, -2.095e-01, 7.782e-02));
	r += mul(s1_4, M4(-2.385e-01, -3.082e-02, 7.005e-01, 5.885e-01, -5.177e-02, -1.769e-01, 2.625e-01, 2.049e-01, 1.999e-02, 1.272e-02, 1.399e-01, -1.035e-01, 5.261e-02, -1.881e-01, -1.391e-01, -1.180e-01));
	r += mul(s1_5, M4(1.915e-01, -3.871e-01, -3.801e-01, 3.673e-02, -1.193e-01, -1.107e-02, -3.375e-01, -1.110e-03, 2.101e-01, 5.915e-02, -4.052e-01, 3.415e-01, -1.346e-01, -2.024e-02, 1.812e-01, -1.467e-01));
	r += mul(s1_6, M4(7.448e-02, -6.369e-02, 2.267e-01, -1.591e-01, 1.009e-02, 1.330e-01, 1.137e-01, 5.874e-02, -6.622e-02, -4.189e-02, 2.772e-03, -1.138e-01, 5.952e-02, 1.003e-01, 2.501e-02, -1.354e-02));
	r += mul(s1_7, M4(2.732e-01, -2.390e-01, -1.700e-01, -3.122e-01, 3.375e-01, -2.259e-01, 1.980e-01, -1.114e-01, 1.884e-02, -7.497e-02, 1.369e-01, -1.040e-01, -8.588e-02, 3.899e-02, 1.021e-01, 1.870e-01));
	r += mul(s1_8, M4(1.238e-02, 5.362e-03, 1.848e-01, 5.015e-02, -1.782e-01, 4.096e-01, -7.078e-02, -5.221e-03, 2.844e-01, -4.314e-02, -2.801e-01, 1.091e-01, -4.209e-02, -1.466e-01, 3.533e-02, -6.003e-02));
	r += mul(s2_0, M4(-2.130e-02, 3.721e-02, -1.136e-01, -2.821e-01, 8.172e-03, 4.070e-02, 3.822e-02, -5.554e-03, -2.071e-02, 2.167e-01, 4.322e-01, 4.632e-02, 7.473e-02, 1.598e-01, -7.511e-02, -6.456e-03));
	r += mul(s2_1, M4(-2.990e-01, 2.127e-01, 2.492e-01, -2.128e-01, -2.332e-01, -7.140e-02, 5.845e-02, 5.256e-02, 9.888e-02, -5.523e-01, -4.450e-01, -2.465e-01, 1.777e-02, -2.625e-01, -3.372e-01, -3.918e-02));
	r += mul(s2_2, M4(-1.103e-01, -2.005e-01, 3.656e-01, 1.971e-01, 1.643e-01, 2.316e-02, -2.741e-01, -2.145e-02, 6.884e-02, -4.964e-02, -3.469e-02, -5.052e-02, 2.094e-01, 2.618e-01, 2.195e-01, 1.741e-01));
	r += mul(s2_3, M4(5.776e-02, -7.704e-02, 9.375e-03, -7.640e-02, 6.892e-02, -9.880e-02, -2.416e-02, 3.810e-01, -1.494e-01, 2.455e-01, 6.754e-02, 3.019e-01, -5.248e-02, -4.014e-02, 2.522e-02, -8.192e-02));
	r += mul(s2_4, M4(7.201e-02, 1.757e-01, 3.057e-01, 8.834e-02, 1.694e-01, -1.671e-01, -1.869e-01, 2.005e-01, 1.214e-01, -3.017e-01, 1.407e-01, -1.343e-01, 1.264e-01, -5.518e-01, -3.638e-02, -2.939e-01));
	r += mul(s2_5, M4(2.122e-01, -5.051e-01, -2.395e-01, -1.198e-01, 5.612e-01, -1.670e-01, -9.542e-01, -1.437e-01, -2.658e-02, 3.885e-02, 2.198e-01, 2.671e-03, 1.113e-01, 1.432e-01, -3.120e-01, 1.343e-01));
	r += mul(s2_6, M4(-3.437e-02, 5.277e-02, 4.488e-02, -1.866e-03, 4.494e-02, 4.908e-02, 2.288e-02, 8.954e-02, -2.158e-01, -8.666e-02, -2.320e-01, -1.880e-02, -2.465e-02, 1.640e-01, 4.248e-02, -9.289e-02));
	r += mul(s2_7, M4(5.210e-02, 4.111e-02, 1.352e-02, -1.625e-01, 3.019e-01, -2.837e-01, -3.997e-02, 1.213e-01, -3.506e-01, 1.532e-01, 2.717e-01, 8.695e-02, 3.882e-01, -1.250e-01, 2.267e-01, 4.280e-02));
	r += mul(s2_8, M4(1.955e-01, 1.482e-01, 1.109e-02, 1.557e-02, 8.819e-02, -4.389e-01, -8.211e-02, 1.109e-02, 1.095e-02, 2.043e-02, 7.416e-02, 2.167e-02, 2.974e-01, -6.872e-02, -3.158e-01, -1.161e-01));
	r += mul(s3_0, M4(3.231e-01, -1.249e-01, 5.618e-02, -2.383e-02, 6.055e-02, -2.347e-02, -1.696e-02, 2.684e-02, 1.802e-01, -1.616e-01, -3.662e-01, -6.127e-01, 1.333e-01, 2.093e-01, -9.236e-02, 2.888e-02));
	r += mul(s3_1, M4(3.508e-01, 1.175e-01, 2.090e-02, 1.110e-01, 5.947e-02, -1.274e-01, -7.393e-02, 7.341e-02, 1.054e-01, 6.744e-01, 2.176e-01, 2.291e-01, -7.596e-02, 1.282e-01, 3.419e-01, 6.015e-01));
	r += mul(s3_2, M4(-2.721e-02, 9.634e-02, -2.477e-01, 2.803e-01, 2.647e-01, -7.496e-02, -3.386e-01, 1.042e-01, 8.417e-02, -8.657e-02, -4.187e-02, -4.533e-02, 1.290e-01, -7.827e-01, -5.664e-01, -3.043e-01));
	r += mul(s3_3, M4(-2.191e-01, 9.117e-02, 1.513e-01, -1.467e-01, -1.616e-01, 8.503e-02, -3.752e-02, 2.309e-01, 1.200e-01, -4.123e-02, 2.030e-01, 3.017e-01, -3.886e-02, -1.471e-01, -2.344e-01, 1.177e-01));
	r += mul(s3_4, M4(-3.599e-01, -4.649e-02, 1.597e-01, 2.125e-01, -3.547e-01, 3.423e-03, 2.727e-01, 4.952e-02, 1.667e-01, 2.043e-01, -1.300e-01, -1.004e-01, -2.281e-01, 3.457e-01, 2.318e-01, -2.802e-01));
	r += mul(s3_5, M4(-1.152e-01, -2.963e-01, -3.150e-01, -1.469e-01, -1.359e-02, 3.603e-01, 3.366e-01, -2.411e-01, -4.578e-02, -6.069e-02, 1.826e-01, -6.223e-03, -2.955e-01, -8.452e-02, 2.686e-02, 8.110e-02));
	r += mul(s3_6, M4(-2.734e-02, -4.518e-02, 6.440e-03, -9.767e-02, 1.047e-01, 3.713e-02, -2.007e-01, 1.371e-01, 5.660e-02, -1.153e-01, 6.509e-02, 1.571e-01, 1.520e-02, 5.178e-02, -1.253e-02, -2.457e-02));
	r += mul(s3_7, M4(6.638e-02, 6.584e-02, -9.845e-02, -6.687e-02, -1.053e-01, 2.648e-02, -1.682e-01, -2.885e-01, -1.042e-01, 1.887e-01, -2.183e-01, -7.807e-02, -6.473e-02, 4.718e-02, -1.358e-01, -1.754e-01));
	r += mul(s3_8, M4(1.149e-02, -1.290e-01, -2.312e-02, 8.038e-03, -4.547e-02, 5.336e-01, 4.125e-01, -1.081e-01, -2.743e-02, -5.389e-02, -3.332e-03, 2.342e-02, 6.716e-02, -4.432e-02, 3.322e-01, 4.985e-03));
	r += V4(-7.395e-03, -1.978e-02, 3.495e-02, -2.468e-02);
	return r;
}
void Pass3(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t3[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 4
//!DESC CuNNy-4x8C-CHROMA-NVL-DN-conv2
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t2, t3
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t2, float2(x, y))
#define l1(x, y) O(t3, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-5.633e-02, -3.405e-01, 1.910e-01, 2.242e-02, -3.569e-02, -1.921e-01, 1.008e-01, 9.578e-02, -2.873e-02, 1.747e-01, 6.665e-02, 1.259e-02, 5.762e-02, 1.568e-01, -1.822e-01, -3.136e-01));
	r += mul(s0_1, M4(-1.234e-01, -5.745e-01, -1.165e-01, 1.275e-02, -6.077e-02, -9.118e-02, 1.017e-01, 1.469e-01, 1.902e-02, 1.258e-01, -5.061e-02, -6.751e-02, -1.401e-01, -2.067e-01, -6.965e-02, 9.978e-02));
	r += mul(s0_2, M4(-3.153e-01, -1.404e-02, -1.218e-01, -1.252e-01, 1.183e-02, 6.416e-02, -1.051e-01, -1.870e-02, 2.222e-02, 3.650e-02, 3.615e-02, -2.618e-02, -7.455e-02, -1.019e-01, 8.559e-02, 8.902e-02));
	r += mul(s0_3, M4(9.783e-02, -3.804e-01, 3.004e-01, 4.877e-01, -5.710e-02, -5.486e-02, 7.582e-02, 1.528e-01, -5.376e-02, 7.667e-02, -8.395e-02, -3.385e-02, -4.082e-02, 3.398e-01, 4.973e-02, -3.685e-01));
	r += mul(s0_4, M4(6.016e-01, -2.311e-01, -1.210e-01, 5.349e-01, 4.524e-01, 3.459e-01, 1.635e-01, 4.053e-01, -1.117e-01, 2.175e-01, -7.352e-03, -5.195e-02, -8.069e-02, -2.103e-01, -2.445e-01, -2.158e-02));
	r += mul(s0_5, M4(-2.013e-01, 1.060e-01, -1.117e-02, -3.364e-01, 1.829e-01, -3.298e-02, -5.399e-02, 1.361e-02, -2.443e-02, 2.676e-02, 2.105e-02, -7.586e-02, 1.027e-01, 9.524e-02, -9.953e-03, 8.239e-02));
	r += mul(s0_6, M4(-4.509e-03, -2.243e-01, 2.842e-02, -1.354e-01, -6.524e-02, 1.567e-01, -5.642e-02, -2.811e-02, 1.056e-02, 8.104e-02, 8.287e-03, 9.978e-02, -2.003e-02, -1.119e-01, -1.969e-01, -2.142e-01));
	r += mul(s0_7, M4(2.293e-01, -8.746e-02, -3.746e-02, -1.546e-01, 8.589e-03, 7.795e-02, -5.504e-02, -3.217e-01, -2.741e-02, 1.103e-01, 1.715e-02, -1.489e-01, -5.550e-02, 1.783e-01, -1.705e-01, 8.552e-02));
	r += mul(s0_8, M4(4.404e-01, 1.612e-01, -1.581e-02, -9.622e-02, 6.788e-02, 1.538e-01, 1.921e-02, -1.498e-02, 9.433e-02, 1.325e-02, -4.766e-02, 6.026e-02, -3.319e-02, 8.916e-02, 2.661e-02, 9.593e-02));
	r += mul(s1_0, M4(-1.223e-01, 1.713e-01, 1.032e-02, -1.209e-01, -1.093e-01, -1.579e-01, 1.529e-02, -1.140e-02, -2.501e-02, 2.277e-02, -1.617e-01, -2.746e-01, 2.483e-02, 1.884e-01, 6.597e-02, 1.343e-02));
	r += mul(s1_1, M4(-1.387e-01, 1.027e-01, -1.348e-01, 1.042e-01, -1.284e-01, 3.399e-02, -4.666e-02, -5.518e-02, 1.314e-02, 9.475e-02, -2.028e-01, -3.789e-01, 1.179e-01, 1.610e-01, 5.027e-02, -3.374e-02));
	r += mul(s1_2, M4(1.355e-02, 1.265e-01, -6.374e-02, -2.466e-02, -9.763e-02, -6.383e-02, 3.205e-02, 4.680e-02, -1.918e-02, -6.574e-03, 4.760e-03, 9.307e-02, 1.241e-01, -1.812e-02, 3.666e-02, -3.375e-02));
	r += mul(s1_3, M4(7.439e-02, 5.178e-02, -1.101e-01, 3.011e-01, 5.405e-02, -5.214e-01, -2.937e-01, -2.875e-01, -2.127e-01, -1.233e-01, -1.180e-01, -4.019e-01, -8.138e-02, 3.025e-01, 1.426e-01, -8.198e-02));
	r += mul(s1_4, M4(2.756e-01, 8.280e-02, -2.997e-02, 3.259e-01, 7.085e-02, 5.040e-01, 7.078e-02, 1.650e-01, -5.315e-01, 2.313e-02, -2.806e-01, -4.987e-01, -5.731e-02, -3.591e-02, -6.171e-02, 3.671e-03));
	r += mul(s1_5, M4(-3.371e-02, 1.733e-01, -9.791e-02, -2.582e-01, 1.131e-02, 1.039e-03, 7.583e-02, -4.580e-02, -4.654e-01, -4.686e-02, -8.562e-02, -2.476e-01, 1.358e-02, -3.595e-02, -1.792e-02, -3.922e-02));
	r += mul(s1_6, M4(-5.856e-02, -1.450e-01, -6.889e-02, 3.336e-02, 1.330e-01, 1.592e-01, 8.578e-02, 4.418e-02, 2.374e-03, -4.454e-02, -2.787e-01, -2.037e-01, 1.482e-01, 2.751e-02, -1.102e-02, -1.681e-01));
	r += mul(s1_7, M4(-2.032e-01, 1.700e-01, -1.345e-01, -2.540e-01, 1.696e-01, -9.967e-03, 8.015e-02, 2.582e-01, -2.046e-01, -1.412e-02, -2.947e-01, -5.684e-01, 1.362e-01, 4.787e-01, -1.233e-01, -2.650e-01));
	r += mul(s1_8, M4(3.700e-01, 1.091e-01, -2.751e-02, 1.149e-01, -4.219e-02, 1.462e-01, 4.504e-02, -1.627e-01, -2.490e-01, 1.973e-01, -1.265e-01, -4.686e-02, 8.273e-02, 1.518e-01, -1.766e-02, -2.397e-02));
	r += mul(s2_0, M4(-6.473e-02, 3.596e-02, 3.564e-02, 5.552e-02, -6.858e-03, 1.662e-01, -6.802e-02, -3.487e-02, 1.353e-02, -8.819e-02, -1.299e-01, 1.128e-01, 4.467e-02, -8.185e-03, -2.763e-02, 2.141e-02));
	r += mul(s2_1, M4(3.679e-02, 8.194e-03, 1.169e-01, 4.671e-02, 6.267e-02, 2.792e-02, -2.613e-03, -1.422e-02, 8.646e-02, 2.879e-01, -4.086e-01, -5.159e-02, 1.912e-01, 7.790e-02, 4.121e-02, 1.884e-01));
	r += mul(s2_2, M4(5.901e-02, -6.568e-02, -4.829e-02, -6.096e-02, -5.137e-02, -3.192e-02, 8.571e-02, -5.417e-02, 2.985e-02, -1.845e-01, -4.634e-02, 4.924e-02, 1.018e-01, 1.485e-01, 2.021e-02, -2.451e-02));
	r += mul(s2_3, M4(1.116e-01, -2.192e-01, -1.120e-01, -2.716e-03, -1.018e-01, -3.398e-01, -2.652e-02, 1.444e-02, 6.146e-02, -6.817e-02, 6.421e-03, -1.082e-01, -7.619e-02, 1.689e-01, -4.295e-02, -1.240e-01));
	r += mul(s2_4, M4(1.298e-01, -4.076e-01, 2.813e-01, 4.519e-01, -9.974e-02, 8.602e-02, -1.185e-01, -4.273e-01, -5.386e-01, -1.301e-01, -5.733e-01, -3.395e-01, -2.823e-01, 8.431e-02, -6.831e-01, -2.243e-01));
	r += mul(s2_5, M4(2.503e-01, 2.184e-01, -6.534e-02, -2.053e-02, -4.870e-02, -6.695e-03, 8.355e-02, 8.500e-02, -2.031e-01, 2.437e-01, -4.519e-02, -1.986e-01, -1.858e-01, -4.756e-01, -2.972e-02, -7.491e-02));
	r += mul(s2_6, M4(4.375e-02, 1.006e-01, 7.371e-02, 7.878e-02, 8.466e-02, -1.213e-01, 7.811e-02, 2.336e-01, 8.261e-02, 3.844e-02, -1.557e-01, 9.521e-02, -1.624e-02, 6.776e-02, -1.304e-01, 1.089e-01));
	r += mul(s2_7, M4(-1.636e-01, -2.450e-01, 1.126e-01, 3.210e-02, 2.331e-01, -1.732e-01, -1.778e-02, -3.684e-01, -1.793e-01, -8.964e-02, -1.900e-01, 6.631e-02, 1.397e-01, 4.974e-02, -4.373e-01, 1.045e-01));
	r += mul(s2_8, M4(-2.685e-01, -4.890e-02, 4.193e-02, 1.281e-02, -1.413e-01, 1.111e-01, -4.647e-02, 1.089e-01, 2.634e-01, -3.749e-04, 4.459e-02, -3.095e-01, -1.165e-01, -1.283e-01, -4.377e-02, 1.769e-02));
	r += mul(s3_0, M4(3.947e-02, 1.888e-01, -3.169e-01, 9.564e-02, -6.878e-03, 4.620e-01, 5.473e-02, -7.285e-02, 2.774e-02, 1.251e-01, -1.131e-02, 2.367e-02, 4.378e-02, -7.335e-02, 7.047e-02, 1.133e-02));
	r += mul(s3_1, M4(-5.287e-02, 4.818e-01, -1.980e-01, -1.305e-01, 8.795e-03, 1.765e-01, 1.371e-01, -9.399e-03, -3.150e-02, 1.889e-01, 6.085e-03, -2.384e-02, 5.579e-02, -2.647e-01, 2.681e-01, 2.132e-01));
	r += mul(s3_2, M4(-1.511e-01, 2.158e-01, -3.312e-01, 1.812e-02, 2.208e-02, -4.423e-02, 1.127e-01, -4.867e-02, 3.545e-02, 7.732e-03, -2.439e-02, -5.205e-02, 7.539e-02, -4.049e-04, 6.985e-02, 1.318e-02));
	r += mul(s3_3, M4(-3.581e-01, 2.206e-01, -3.267e-01, -2.463e-01, -1.734e-01, -2.817e-01, -6.234e-02, -1.591e-01, -8.011e-03, 9.239e-02, 1.755e-01, 2.957e-01, 2.502e-02, -2.968e-02, 1.315e-01, -5.555e-02));
	r += mul(s3_4, M4(-3.972e-01, 3.954e-01, -1.709e-01, 7.009e-02, 7.033e-02, 1.066e-01, 1.165e-01, -2.080e-01, -1.194e-01, -4.245e-01, -5.529e-02, -5.446e-02, -1.542e-01, 3.724e-02, 1.247e-01, -1.400e-01));
	r += mul(s3_5, M4(1.183e-01, 5.143e-01, -2.163e-01, 2.802e-01, -1.697e-03, -1.459e-01, 6.282e-02, 1.223e-01, -7.417e-03, 1.662e-01, -5.031e-02, -3.922e-02, -1.120e-01, -2.436e-01, 4.864e-01, 8.674e-02));
	r += mul(s3_6, M4(-4.891e-03, 3.132e-01, -4.497e-02, -9.200e-02, 6.943e-02, -2.584e-01, 1.180e-01, 2.046e-01, -1.111e-01, 1.918e-01, -1.155e-01, 4.277e-02, -3.743e-02, -3.524e-02, 2.716e-02, 1.209e-01));
	r += mul(s3_7, M4(-8.401e-03, 2.742e-01, 2.027e-02, -1.259e-01, -2.504e-01, -2.467e-02, 6.805e-02, -1.584e-01, -1.579e-01, -1.621e-01, 8.128e-02, 1.938e-01, 9.815e-02, 9.945e-02, -4.881e-02, 2.835e-01));
	r += mul(s3_8, M4(3.408e-02, 1.480e-01, -9.755e-02, 1.506e-01, -2.064e-01, 3.223e-02, -1.860e-02, 1.663e-02, 4.064e-02, -7.144e-02, -9.134e-03, -1.908e-02, -7.180e-02, 1.357e-01, 1.265e-01, -5.653e-01));
	r += V4(-1.581e-02, 8.279e-02, 2.836e-02, -2.359e-02);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(3.395e-02, -1.742e-01, -2.365e-01, 7.705e-02, -1.083e-01, 1.154e-02, -3.760e-01, 1.338e-01, 4.489e-02, -1.779e-01, 1.623e-01, -1.381e-01, 3.535e-03, -9.631e-02, 2.633e-01, -2.456e-02));
	r += mul(s0_1, M4(3.732e-02, -6.270e-01, -6.168e-01, 2.181e-01, 3.233e-02, 9.265e-02, -4.777e-02, -9.296e-02, 5.927e-02, 1.414e-02, 1.838e-01, -1.409e-01, 6.754e-02, -3.545e-01, 3.350e-01, 7.443e-02));
	r += mul(s0_2, M4(-8.578e-02, 7.452e-02, -1.110e-01, 2.386e-01, 2.725e-02, 1.120e-03, -1.694e-01, 2.568e-01, 8.049e-02, 8.573e-02, 1.193e-01, -1.399e-01, 1.550e-02, -7.470e-02, 1.537e-02, -1.615e-01));
	r += mul(s0_3, M4(-7.051e-02, 8.088e-02, -2.518e-01, 2.334e-02, -2.111e-02, -5.176e-03, 8.145e-02, 1.454e-01, 1.353e-01, 7.424e-02, 9.141e-02, 3.257e-01, -4.956e-02, 1.930e-01, 3.784e-01, 2.749e-01));
	r += mul(s0_4, M4(-1.569e-01, 2.568e-01, 2.496e-01, -1.986e-01, 9.498e-02, -1.967e-02, -3.224e-01, 1.277e-03, -1.583e-01, 1.886e-01, 2.000e-01, -1.245e-02, -2.418e-01, 3.350e-01, 4.830e-01, 9.601e-02));
	r += mul(s0_5, M4(3.847e-02, 5.770e-02, -5.491e-02, -3.442e-01, 5.589e-02, 2.378e-01, 7.096e-02, -6.520e-03, -6.095e-04, 4.300e-02, 1.711e-01, 5.374e-02, -6.434e-02, -2.650e-02, 5.504e-02, -1.785e-01));
	r += mul(s0_6, M4(-3.592e-02, 3.050e-02, -5.494e-02, 2.156e-01, -4.876e-02, -1.062e-01, -4.967e-02, -1.141e-02, -1.614e-02, 5.030e-02, 7.549e-02, -1.494e-01, 9.571e-02, 4.313e-02, 2.386e-02, 1.087e-01));
	r += mul(s0_7, M4(-1.801e-01, 1.321e-01, -7.900e-02, 3.118e-02, -3.007e-02, -9.647e-03, -2.429e-01, 4.859e-02, 6.979e-03, -1.005e-01, 8.022e-02, -1.236e-01, -3.366e-02, -2.283e-03, 1.402e-01, 2.680e-01));
	r += mul(s0_8, M4(-5.013e-02, 2.186e-02, -1.697e-01, -5.646e-02, -8.009e-02, -4.784e-02, -3.980e-02, -4.910e-02, 6.871e-03, 1.201e-02, 1.509e-02, -3.684e-02, 2.594e-02, -5.057e-02, 1.921e-03, -1.101e-01));
	r += mul(s1_0, M4(7.037e-02, -2.656e-02, 1.674e-01, 2.859e-02, -5.237e-02, -1.627e-01, -4.229e-01, 1.743e-01, -1.006e-01, -4.309e-01, -3.902e-02, 9.066e-04, 2.186e-02, 3.759e-02, 1.602e-01, -2.942e-01));
	r += mul(s1_1, M4(-4.174e-02, 1.341e-01, -9.283e-02, 1.517e-01, -8.754e-02, 1.256e-01, -7.509e-03, -2.370e-01, -1.096e-01, -2.745e-01, -1.626e-01, -1.079e-01, 1.484e-01, -2.137e-01, 2.180e-01, -1.379e-02));
	r += mul(s1_2, M4(3.560e-02, 1.841e-01, 1.926e-01, 2.593e-01, 3.903e-03, -2.383e-02, -1.084e-01, 1.087e-02, -7.161e-02, -3.056e-02, 7.891e-02, -1.791e-01, -5.263e-04, 1.319e-01, 8.631e-02, -4.117e-02));
	r += mul(s1_3, M4(-3.965e-02, 6.490e-03, -7.395e-02, -8.544e-02, -4.663e-02, 1.009e-01, 1.014e-01, 5.087e-01, -1.189e-02, -2.429e-01, -1.128e-01, 4.368e-01, -6.529e-03, 1.416e-01, -5.685e-02, -6.205e-02));
	r += mul(s1_4, M4(1.161e-01, 2.192e-01, 2.140e-01, -3.052e-01, -1.789e-01, -1.888e-01, -1.265e-01, 3.447e-01, -1.274e-01, -2.223e-01, -5.340e-02, 3.621e-02, 3.877e-02, 3.096e-01, 1.403e-01, -7.748e-02));
	r += mul(s1_5, M4(-1.714e-01, 4.746e-03, 5.366e-02, 2.663e-01, -6.881e-02, 6.621e-02, 1.302e-01, -9.484e-02, -2.739e-01, -2.110e-01, -7.651e-02, -9.790e-02, 1.032e-01, 8.015e-02, 1.719e-01, 1.246e-01));
	r += mul(s1_6, M4(1.335e-02, 3.680e-02, 2.557e-02, 7.400e-02, -1.357e-01, 3.733e-02, 6.279e-02, 4.428e-03, -1.659e-01, -1.169e-01, -2.066e-01, 1.669e-01, 1.146e-01, 4.615e-02, -2.124e-01, 1.001e-01));
	r += mul(s1_7, M4(-7.624e-02, -4.728e-04, -6.185e-02, 1.586e-02, -3.937e-02, -6.753e-02, 1.339e-01, -5.988e-02, -1.356e-01, -2.794e-01, -1.562e-01, 2.798e-01, 1.838e-01, 1.350e-02, -1.928e-01, -2.784e-01));
	r += mul(s1_8, M4(-3.487e-02, -3.722e-02, -2.364e-02, -7.086e-02, 6.515e-03, -7.622e-02, 1.482e-01, -9.018e-02, -1.502e-01, -8.807e-02, -1.820e-01, -5.420e-02, 1.941e-02, 7.179e-02, 3.578e-02, 3.014e-02));
	r += mul(s2_0, M4(-6.164e-02, -2.415e-02, 5.937e-02, -1.541e-01, -3.675e-02, -4.559e-01, -7.546e-02, -1.402e-01, 7.063e-02, 3.823e-03, 1.246e-01, -2.228e-03, -2.593e-02, -1.907e-02, -3.210e-02, 2.191e-02));
	r += mul(s2_1, M4(2.527e-02, -2.792e-01, 1.052e-01, -3.107e-03, 6.955e-02, -1.063e-01, 1.651e-01, -1.774e-01, -2.966e-02, -3.349e-01, 1.582e-02, 8.857e-02, -1.885e-02, 1.636e-01, 3.166e-02, 1.720e-01));
	r += mul(s2_2, M4(1.545e-02, -1.603e-02, -3.886e-02, 2.511e-04, -8.327e-02, 8.191e-02, 9.126e-02, -1.785e-01, 3.069e-02, 8.343e-03, 1.671e-01, -9.182e-02, -5.693e-02, -1.502e-01, 2.192e-01, 1.294e-01));
	r += mul(s2_3, M4(5.454e-02, -3.082e-01, -1.006e-01, -2.281e-01, 1.680e-01, -1.293e-01, 1.473e-02, 4.560e-01, 2.658e-02, 1.009e-01, 2.506e-02, -1.055e-01, 9.055e-02, 8.536e-03, 1.299e-02, 6.968e-02));
	r += mul(s2_4, M4(3.143e-01, -3.267e-01, -2.267e-01, 1.809e-01, 3.636e-02, -1.302e-01, 1.674e-01, 3.414e-01, -4.264e-01, 1.128e-01, -3.031e-01, 6.119e-01, 1.912e-01, -1.307e-02, 9.181e-02, 1.360e-01));
	r += mul(s2_5, M4(7.667e-02, -1.339e-02, -3.105e-02, -1.464e-01, -1.981e-01, -1.685e-02, 3.778e-02, -8.954e-02, -4.395e-01, -1.031e-01, -2.190e-01, -5.670e-02, 3.269e-01, 2.045e-01, 6.832e-01, 4.353e-01));
	r += mul(s2_6, M4(-6.541e-02, 1.593e-02, 6.362e-02, 8.068e-04, -1.823e-01, -5.800e-03, 1.494e-01, 2.139e-01, 3.222e-02, -1.237e-02, -3.057e-01, -2.188e-01, -2.191e-02, 1.843e-02, 8.571e-02, -1.836e-02));
	r += mul(s2_7, M4(1.163e-01, -3.477e-02, 3.914e-02, -5.936e-02, 1.248e-01, -6.733e-03, 4.489e-02, 1.362e-01, -9.372e-02, -1.822e-01, -4.580e-01, -3.133e-02, -7.393e-02, -9.786e-02, 1.756e-01, -5.877e-02));
	r += mul(s2_8, M4(5.275e-02, -1.688e-02, 1.702e-02, 3.567e-02, 4.320e-02, -9.890e-02, -3.041e-02, -1.382e-01, -1.086e-01, -1.317e-02, -2.992e-01, 1.333e-01, 4.162e-02, -1.141e-01, 1.634e-01, 3.647e-01));
	r += mul(s3_0, M4(-1.056e-01, -6.229e-02, 1.392e-01, 1.275e-01, 6.518e-02, -1.362e-01, 1.033e-01, -3.194e-01, -1.516e-02, -1.951e-02, 3.508e-01, 3.349e-02, -1.704e-02, 2.244e-02, -7.202e-02, -4.586e-02));
	r += mul(s3_1, M4(-2.018e-01, -7.620e-03, 4.061e-01, 2.013e-01, 1.899e-01, 1.033e-01, 3.822e-01, -2.492e-01, -4.671e-02, -1.914e-01, 2.278e-01, 6.025e-02, 1.908e-02, 2.782e-01, -1.552e-01, 3.503e-02));
	r += mul(s3_2, M4(9.675e-03, 8.959e-03, 2.404e-01, 1.178e-01, 5.752e-02, 9.768e-02, 1.168e-01, -5.985e-02, 7.933e-02, -6.555e-03, 1.644e-01, -1.056e-01, -3.057e-02, -8.354e-02, -8.324e-02, 1.655e-01));
	r += mul(s3_3, M4(3.306e-02, -1.775e-01, 3.643e-01, -2.304e-02, 1.471e-01, -1.802e-01, -2.233e-02, 3.482e-01, 1.627e-01, 3.422e-02, 8.342e-02, -7.665e-02, 3.801e-02, -8.082e-03, -3.296e-02, 1.120e-01));
	r += mul(s3_4, M4(-2.602e-02, -2.823e-02, 3.295e-01, 5.173e-02, 2.129e-02, -1.079e-01, 2.842e-01, -6.895e-02, 1.794e-01, 8.669e-02, 2.952e-01, 1.879e-01, 5.707e-02, 7.214e-03, -9.364e-02, -1.372e-01));
	r += mul(s3_5, M4(-7.250e-03, 1.357e-01, 2.200e-01, -2.751e-01, -5.085e-02, 6.119e-02, 1.620e-01, -2.047e-02, 9.402e-02, -6.867e-02, -1.223e-02, 4.120e-02, 7.248e-01, 2.040e-01, 2.024e-01, -6.516e-01));
	r += mul(s3_6, M4(-7.904e-02, 6.694e-02, 2.130e-01, 5.897e-02, -1.210e-01, 8.868e-02, 2.172e-01, -7.641e-03, 9.809e-02, -1.587e-01, 1.639e-01, -2.528e-01, -8.140e-03, 1.400e-02, 1.948e-02, -3.225e-03));
	r += mul(s3_7, M4(2.163e-01, 2.439e-02, 2.229e-01, -3.641e-01, 1.383e-02, -5.288e-02, -8.533e-05, -5.729e-02, 1.749e-01, -1.637e-01, 2.431e-01, 3.862e-02, -1.049e-01, -1.479e-01, -6.900e-02, -1.863e-01));
	r += mul(s3_8, M4(2.006e-02, -6.911e-02, 3.401e-01, 2.523e-01, 5.188e-02, -1.296e-02, 4.297e-02, -1.366e-01, 8.082e-02, 3.186e-02, -3.357e-02, 1.385e-01, 1.622e-01, -2.390e-01, -2.181e-01, 3.203e-02));
	r += V4(2.216e-02, 3.932e-02, 6.601e-02, -5.335e-02);
	return r;
}
void Pass4(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 5
//!DESC CuNNy-4x8C-CHROMA-NVL-DN-conv3
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2, t3
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(4.512e-02, -5.605e-02, -5.565e-02, 9.351e-02, 1.872e-01, -8.395e-02, 8.169e-03, 8.886e-02, -3.214e-02, -1.265e-01, -1.354e-01, 1.345e-01, -1.310e-02, 4.380e-02, 3.299e-02, -3.114e-02));
	r += mul(s0_1, M4(-1.336e-01, 9.950e-02, -6.031e-02, -1.992e-01, -5.071e-02, -3.512e-02, 1.697e-02, 6.056e-02, -3.816e-02, 1.685e-01, 1.616e-01, 4.173e-02, -3.731e-02, 1.243e-01, 2.339e-01, 1.227e-02));
	r += mul(s0_2, M4(-8.699e-02, -3.995e-02, 1.795e-02, 1.068e-01, 1.068e-01, -7.353e-02, 6.446e-02, -9.062e-02, 1.392e-01, 2.744e-01, 2.012e-01, -3.386e-01, 1.998e-01, -1.329e-01, -1.095e-01, -6.347e-02));
	r += mul(s0_3, M4(3.910e-02, -4.201e-02, 7.716e-02, 1.461e-01, -6.815e-02, 8.844e-02, 5.456e-02, 4.703e-02, 8.039e-02, -3.354e-01, -1.577e-01, 1.179e-01, -1.697e-01, 4.074e-02, -1.323e-01, 2.444e-02));
	r += mul(s0_4, M4(1.192e-01, -7.173e-02, 6.812e-02, -4.930e-02, 1.412e-01, 2.688e-01, -1.206e-01, 5.428e-02, 2.169e-01, 3.498e-01, 1.511e-01, 7.406e-02, 2.241e-02, 4.428e-01, 2.251e-01, -5.839e-02));
	r += mul(s0_5, M4(-4.804e-02, -1.034e-01, -1.026e-01, 9.998e-02, 3.015e-02, 1.739e-01, 2.039e-01, -3.477e-01, -2.289e-02, 4.436e-01, -1.235e-02, -4.141e-01, 1.168e-01, -1.370e-02, -4.478e-02, 3.514e-02));
	r += mul(s0_6, M4(3.253e-02, 6.108e-02, 3.808e-02, 8.376e-03, 6.900e-02, -1.206e-01, -2.365e-02, 4.057e-02, 1.773e-01, -1.169e-01, 9.294e-02, 5.529e-02, -6.024e-03, -1.350e-01, -5.460e-02, 2.374e-02));
	r += mul(s0_7, M4(1.295e-01, -2.773e-02, 4.451e-02, -2.236e-02, 1.254e-01, -2.050e-01, -1.894e-01, 1.574e-03, -1.646e-01, -5.577e-02, -2.045e-01, -1.460e-01, 2.299e-03, -1.111e-01, -1.560e-01, -6.621e-02));
	r += mul(s0_8, M4(-6.001e-02, -3.984e-02, -6.997e-02, 1.185e-02, 3.984e-02, 1.761e-01, 3.940e-02, 5.571e-02, -4.740e-02, 1.154e-01, 1.602e-01, 2.649e-01, -1.176e-02, 1.425e-03, -3.936e-02, 6.615e-03));
	r += mul(s1_0, M4(-2.046e-01, 2.773e-01, -8.140e-02, 1.139e-02, 2.139e-02, -6.124e-02, -4.664e-02, -3.684e-03, -2.231e-03, 3.021e-02, -1.257e-02, 7.791e-02, 1.148e-01, 4.046e-02, 4.231e-02, 4.155e-02));
	r += mul(s1_1, M4(-5.384e-02, -2.139e-01, 2.216e-02, 8.469e-02, 7.394e-02, 1.831e-01, 1.668e-01, 8.950e-02, 7.795e-02, 2.045e-01, 2.189e-01, 8.297e-03, -1.001e-01, 1.016e-01, 3.976e-01, -1.906e-01));
	r += mul(s1_2, M4(3.924e-02, -1.517e-01, -4.427e-02, 5.173e-02, 1.579e-01, -7.457e-02, -1.334e-01, -2.095e-01, -6.022e-02, -6.645e-02, 2.012e-02, -1.663e-01, 2.114e-01, -1.317e-01, -1.035e-01, 2.726e-02));
	r += mul(s1_3, M4(-1.865e-02, -4.795e-01, 8.797e-03, 1.345e-01, 2.978e-02, -2.277e-01, -4.717e-02, 2.465e-01, 9.041e-02, -5.006e-02, -2.609e-02, -6.655e-02, 3.708e-02, 5.449e-02, -3.832e-02, 1.386e-02));
	r += mul(s1_4, M4(-3.037e-01, 2.052e-01, -2.035e-01, 1.754e-02, -3.385e-02, 3.547e-01, -5.240e-02, -1.858e-01, 1.020e-01, -5.202e-02, -3.375e-01, 4.766e-01, 6.843e-02, 5.012e-01, 3.486e-02, -2.441e-03));
	r += mul(s1_5, M4(1.751e-01, 1.080e-01, 1.074e-01, 1.722e-01, 9.590e-02, -1.193e-01, -2.920e-01, -4.640e-02, -2.021e-01, 3.560e-01, 3.013e-01, -4.602e-01, 5.693e-02, 1.714e-02, 1.369e-01, 9.813e-04));
	r += mul(s1_6, M4(2.775e-02, 1.430e-01, 1.414e-01, 1.009e-01, 1.460e-01, -1.245e-01, 1.196e-02, -1.379e-03, -2.589e-02, 1.196e-01, 7.215e-02, 2.925e-02, 7.929e-02, -8.963e-02, -3.983e-02, 2.777e-02));
	r += mul(s1_7, M4(-7.523e-02, -3.428e-02, -1.571e-02, 2.056e-01, -1.792e-01, -1.304e-01, -2.510e-01, -8.286e-02, 1.132e-02, -3.664e-02, 6.908e-03, -2.396e-02, -3.688e-02, -7.350e-02, -1.591e-01, -8.923e-02));
	r += mul(s1_8, M4(1.623e-01, 1.451e-01, 8.526e-02, -1.174e-02, 3.602e-02, -3.834e-02, -2.642e-02, 9.723e-02, -2.014e-01, -2.622e-02, 1.180e-01, 1.022e-01, -7.001e-02, 5.194e-02, 1.130e-02, -4.698e-02));
	r += mul(s2_0, M4(-3.136e-02, 1.112e-01, 9.373e-02, -1.898e-01, -3.507e-02, 1.346e-01, 4.029e-02, -7.665e-02, 1.429e-02, -9.995e-02, -2.849e-02, 4.653e-02, 7.796e-02, -1.627e-02, 1.224e-01, -2.784e-02));
	r += mul(s2_1, M4(3.088e-02, -1.439e-01, -2.422e-02, 1.468e-01, 3.983e-02, 5.878e-02, -2.763e-01, 5.158e-02, 6.087e-02, 7.693e-02, 1.868e-01, -3.622e-02, -8.312e-03, 1.398e-02, 7.455e-02, -9.156e-02));
	r += mul(s2_2, M4(-5.527e-02, 1.241e-01, 2.657e-01, 8.376e-02, -2.674e-02, 7.793e-02, 1.372e-01, -1.362e-02, 2.966e-02, -1.145e-01, -3.009e-01, -1.337e-02, -2.504e-02, -5.094e-02, -8.516e-02, 5.695e-02));
	r += mul(s2_3, M4(3.896e-02, -6.586e-01, -2.015e-01, 2.296e-01, 1.685e-02, 6.578e-03, -1.295e-02, -2.519e-03, 2.819e-01, 8.619e-02, 1.042e-01, 2.182e-03, 2.268e-01, 4.739e-02, -9.695e-02, -9.304e-02));
	r += mul(s2_4, M4(7.303e-01, -4.509e-01, 4.323e-02, 3.128e-01, 2.348e-02, -3.057e-01, 1.561e-01, -1.367e-01, 3.899e-01, 1.198e-03, -8.477e-02, -2.943e-01, -1.950e-01, 4.766e-02, 1.515e-01, 5.556e-02));
	r += mul(s2_5, M4(-1.555e-01, 1.802e-01, 5.904e-02, -2.148e-01, -5.554e-02, -3.433e-02, -1.678e-03, 2.744e-01, 1.014e-01, -2.286e-02, 2.512e-01, -4.357e-03, 4.037e-02, 8.426e-02, 3.768e-02, -1.357e-01));
	r += mul(s2_6, M4(2.616e-01, 1.193e-01, 4.132e-02, -1.314e-01, -6.327e-02, -3.153e-02, -6.862e-02, 3.513e-02, 1.661e-01, 1.972e-01, 2.341e-02, 3.011e-02, 7.495e-02, 1.406e-02, -5.278e-02, -2.899e-02));
	r += mul(s2_7, M4(5.415e-01, -1.033e-01, 6.700e-02, -1.562e-01, -5.238e-01, 9.399e-02, -1.834e-02, -1.189e-01, 2.833e-01, 2.818e-02, 5.890e-02, 2.901e-02, -1.511e-01, -5.397e-02, -5.546e-03, -3.854e-02));
	r += mul(s2_8, M4(-1.314e-01, 1.238e-01, 7.317e-02, -2.617e-01, 1.131e-01, 2.121e-02, 6.265e-02, 8.183e-02, -7.431e-02, -3.479e-02, -5.794e-03, -1.575e-01, -7.648e-02, 5.259e-02, 1.982e-02, -4.974e-02));
	r += mul(s3_0, M4(4.592e-02, -4.402e-02, 6.940e-02, -4.211e-02, 2.224e-02, 7.483e-02, 3.873e-02, -1.319e-03, -2.425e-02, -8.564e-02, -1.548e-01, 1.534e-03, 2.428e-02, -1.418e-01, -1.493e-01, -1.303e-02));
	r += mul(s3_1, M4(-2.779e-02, -7.544e-02, -4.749e-02, -4.793e-02, -6.479e-02, 3.667e-02, 7.358e-02, -3.213e-02, 5.514e-02, -4.486e-02, -4.235e-02, 3.389e-02, -1.070e-01, -2.578e-03, 9.540e-02, 3.927e-02));
	r += mul(s3_2, M4(5.421e-02, -9.909e-02, -1.399e-01, 1.798e-01, 8.838e-02, -2.618e-02, -5.506e-02, 1.601e-02, -7.578e-02, 7.157e-02, -1.922e-02, -3.034e-02, -9.012e-02, -4.110e-02, -8.804e-02, 5.399e-02));
	r += mul(s3_3, M4(1.198e-01, 1.850e-01, 8.339e-02, 2.520e-02, 4.841e-03, -1.670e-02, -1.397e-02, 8.376e-02, -1.758e-02, -2.517e-02, 2.606e-02, -1.123e-01, -1.057e-01, -3.181e-01, -1.450e-01, 1.264e-01));
	r += mul(s3_4, M4(1.096e-01, 4.944e-02, -9.444e-03, -1.870e-01, -8.605e-02, 7.023e-03, 8.970e-02, -4.363e-02, -2.183e-01, -2.151e-01, -1.734e-01, 1.766e-01, -3.258e-01, -1.002e-01, -2.809e-01, 2.315e-01));
	r += mul(s3_5, M4(1.265e-01, -5.511e-02, -1.060e-02, -7.098e-02, 3.039e-02, 1.215e-02, 6.246e-02, 4.328e-02, -1.178e-01, -9.107e-02, -1.315e-01, 7.342e-02, -8.931e-02, 3.481e-02, -5.557e-02, -5.713e-02));
	r += mul(s3_6, M4(-2.295e-02, -1.945e-01, -2.382e-01, -2.621e-02, 2.191e-02, 2.038e-01, -1.322e-01, 6.005e-02, 2.337e-02, 6.760e-03, 6.709e-03, -1.217e-02, -2.368e-01, -1.135e-01, -5.333e-03, -9.022e-04));
	r += mul(s3_7, M4(9.323e-02, 2.376e-01, 5.482e-02, -2.297e-01, -1.964e-01, 3.087e-01, 2.266e-01, -3.115e-01, -1.627e-02, -1.275e-01, 5.078e-03, 7.444e-02, -1.927e-01, -9.841e-02, -1.274e-01, 4.160e-02));
	r += mul(s3_8, M4(1.112e-01, 6.587e-02, -3.478e-02, -2.146e-03, 1.106e-01, 8.155e-02, 1.345e-01, 6.688e-02, -2.355e-03, -6.529e-02, -1.525e-01, 2.343e-02, 2.094e-02, 5.240e-02, 1.809e-02, 3.378e-03));
	r += V4(-7.682e-03, 3.984e-03, 8.317e-03, -5.502e-03);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(3.709e-02, -4.040e-02, 3.348e-02, -1.757e-02, 1.150e-01, -8.518e-04, 5.379e-02, 4.038e-02, 8.351e-02, -9.691e-03, -2.376e-02, 1.103e-01, -1.221e-03, -3.859e-02, 6.884e-03, 7.895e-02));
	r += mul(s0_1, M4(-9.031e-02, 7.181e-02, -5.477e-03, -3.019e-01, 1.860e-01, -6.763e-02, 4.046e-02, 8.784e-02, 1.494e-01, -7.430e-02, 9.953e-02, 2.124e-01, -3.937e-02, 1.962e-01, 2.438e-02, -1.476e-01));
	r += mul(s0_2, M4(-5.016e-02, -4.945e-02, 1.532e-02, 2.641e-02, 1.045e-01, -1.412e-01, 1.189e-01, 5.072e-02, 2.283e-01, 6.966e-02, 1.944e-01, -1.556e-01, -9.915e-02, -4.109e-02, 4.849e-02, -1.832e-03));
	r += mul(s0_3, M4(4.395e-02, 1.593e-02, 1.723e-01, 1.130e-01, -4.937e-02, -1.642e-02, 7.003e-02, -9.797e-02, 1.117e-01, 2.811e-01, -2.003e-01, -2.281e-01, 6.710e-02, 1.947e-01, 2.279e-03, -1.885e-01));
	r += mul(s0_4, M4(2.363e-02, 8.650e-02, 2.662e-02, -4.032e-02, -8.776e-02, -2.461e-01, -8.478e-02, -2.476e-01, -8.622e-02, -2.635e-01, 5.648e-01, -1.873e-01, 2.976e-02, -1.110e-01, 5.963e-02, -4.626e-01));
	r += mul(s0_5, M4(-6.017e-03, 1.348e-01, -2.297e-02, -2.133e-02, 9.076e-02, 1.052e-01, 3.311e-01, -1.153e-01, -8.951e-02, -3.616e-01, 1.382e-01, -1.668e-01, -5.112e-02, -1.490e-01, -1.114e-01, -1.666e-01));
	r += mul(s0_6, M4(-2.435e-02, -3.182e-02, 3.789e-02, -3.697e-02, -3.310e-02, -1.494e-01, 4.010e-03, 1.187e-01, -4.749e-02, -1.438e-01, -7.625e-02, 1.795e-01, -2.157e-02, -3.943e-02, -2.488e-02, 8.904e-02));
	r += mul(s0_7, M4(3.824e-02, -3.497e-02, 3.443e-03, -2.199e-02, -7.257e-02, 6.761e-02, 5.455e-02, -8.605e-03, -9.117e-02, 3.180e-01, -5.416e-02, 2.640e-02, -4.755e-02, -1.374e-01, 5.310e-02, 2.003e-02));
	r += mul(s0_8, M4(1.154e-04, 1.296e-02, -2.370e-02, 1.940e-02, -6.076e-02, 9.783e-02, -3.531e-02, -7.649e-02, 4.084e-02, 3.237e-01, 1.429e-01, -1.831e-03, -1.430e-02, 7.252e-02, -6.116e-02, 9.401e-03));
	r += mul(s1_0, M4(2.297e-01, 1.458e-01, 6.225e-02, -4.126e-01, 1.249e-01, 4.705e-02, -3.826e-02, 1.201e-02, -1.159e-03, -3.192e-02, -2.008e-03, 3.628e-02, 7.069e-02, 5.833e-02, -4.458e-02, 1.604e-02));
	r += mul(s1_1, M4(2.519e-01, 2.051e-01, -6.388e-01, -1.786e-01, 1.688e-01, 2.103e-01, 2.236e-01, -4.668e-02, 9.883e-02, 1.396e-01, 5.526e-02, -3.947e-02, -4.039e-02, -2.468e-01, 2.094e-01, 2.822e-01));
	r += mul(s1_2, M4(-1.012e-01, -1.284e-01, 5.644e-02, -7.430e-02, -5.243e-03, -7.562e-02, 1.990e-02, 2.016e-02, 5.066e-02, -8.339e-03, 7.397e-02, 2.250e-01, 1.412e-02, -8.647e-02, -1.065e-01, 4.977e-02));
	r += mul(s1_3, M4(-1.867e-01, -2.113e-01, 1.276e-01, 5.092e-01, 2.583e-02, 7.227e-02, -2.361e-02, -7.201e-02, -4.431e-02, -9.594e-02, 3.651e-02, -4.207e-02, 7.513e-02, 5.729e-02, 2.217e-02, -2.390e-01));
	r += mul(s1_4, M4(-3.309e-01, 9.234e-02, -3.466e-02, 4.097e-01, -2.826e-01, -5.688e-01, 2.373e-01, -3.629e-02, 1.518e-01, 1.641e-02, 3.845e-02, 2.704e-01, 3.797e-02, 1.046e-01, 1.668e-01, -7.235e-01));
	r += mul(s1_5, M4(1.365e-01, 2.193e-01, -1.036e-01, 8.940e-03, -6.259e-02, -1.451e-03, -1.774e-01, 1.643e-01, 2.796e-02, 9.056e-02, 3.076e-01, -8.359e-02, 1.564e-02, -1.485e-01, 4.113e-02, -2.083e-01));
	r += mul(s1_6, M4(1.912e-01, 3.371e-01, 1.523e-01, -2.624e-01, -4.918e-02, -1.530e-01, 2.819e-03, 6.616e-02, 2.239e-02, 8.138e-02, 6.369e-02, -4.185e-02, -8.855e-02, -1.851e-01, -1.701e-02, 1.477e-01));
	r += mul(s1_7, M4(-8.209e-02, 5.038e-03, -4.088e-02, -2.626e-01, -7.090e-03, 1.382e-01, 1.041e-01, -4.442e-02, -2.599e-02, 8.518e-03, -1.142e-01, 8.684e-02, -6.373e-02, -3.497e-02, -3.526e-03, 1.223e-01));
	r += mul(s1_8, M4(2.201e-02, -3.388e-02, -6.653e-02, -1.146e-01, 3.024e-02, 4.566e-02, -1.370e-01, 5.147e-02, -1.141e-02, 7.185e-02, 1.331e-01, 1.217e-01, -4.790e-03, 1.012e-01, 3.707e-02, 2.590e-02));
	r += mul(s2_0, M4(1.442e-01, -5.404e-03, 6.929e-03, -1.224e-01, 1.531e-02, -1.907e-02, -1.702e-02, -8.602e-02, 5.539e-02, 1.246e-01, -1.420e-01, -9.242e-02, 1.469e-01, -1.279e-02, 2.594e-03, 7.495e-02));
	r += mul(s2_1, M4(1.118e-01, 1.076e-01, 6.085e-02, 2.393e-01, 7.739e-02, 9.879e-02, -8.119e-02, -7.031e-02, -6.563e-02, -1.731e-01, 2.258e-01, 2.629e-02, 7.824e-02, -3.473e-03, 2.547e-01, -4.298e-05));
	r += mul(s2_2, M4(9.101e-02, -5.520e-02, 1.953e-01, 1.246e-01, 3.520e-02, -5.214e-02, 6.371e-03, 1.168e-02, -8.387e-02, 7.203e-03, -1.646e-01, 4.145e-02, 3.378e-02, 2.545e-02, -8.688e-02, 1.228e-01));
	r += mul(s2_3, M4(-1.870e-01, 1.235e-01, -1.133e-01, 1.823e-01, 5.069e-02, -1.216e-01, -2.657e-02, 2.300e-02, -4.504e-02, -1.192e-01, 7.681e-03, -4.730e-02, 1.143e-01, -7.910e-02, -1.762e-02, -4.014e-01));
	r += mul(s2_4, M4(-7.299e-02, 1.772e-01, -9.012e-02, 5.392e-02, 6.271e-02, -1.836e-01, -2.006e-01, 4.161e-01, 7.377e-03, -2.962e-01, -8.851e-02, -2.216e-01, 2.267e-01, -2.650e-02, 5.435e-01, -4.880e-02));
	r += mul(s2_5, M4(5.658e-02, 1.658e-01, 1.337e-01, 1.120e-01, 1.916e-02, 8.369e-02, -1.412e-01, 1.935e-01, 1.624e-01, -1.868e-01, 3.259e-01, -3.528e-01, 1.683e-02, -5.056e-02, -4.697e-02, -8.705e-02));
	r += mul(s2_6, M4(-4.507e-02, -2.093e-01, -5.801e-02, -3.712e-02, -7.381e-02, -2.261e-02, -5.572e-02, -3.404e-02, 9.457e-02, 1.882e-02, 5.719e-02, -1.393e-01, -1.047e-01, -7.987e-02, -1.885e-02, 8.084e-02));
	r += mul(s2_7, M4(-2.880e-02, -6.438e-01, 1.870e-01, -3.536e-02, -1.372e-01, 8.047e-02, 6.711e-02, -2.582e-02, -1.001e-01, -3.311e-01, 1.192e-02, -8.864e-02, -5.580e-02, -3.057e-02, 1.146e-01, 3.785e-02));
	r += mul(s2_8, M4(7.753e-02, 2.395e-02, 8.882e-02, -2.019e-02, -3.726e-02, -4.363e-02, -9.227e-02, 3.810e-02, -1.095e-01, -1.591e-01, 1.634e-01, 1.726e-01, 4.501e-04, 6.959e-02, 5.589e-02, 3.270e-02));
	r += mul(s3_0, M4(3.428e-01, 6.056e-02, -2.657e-02, 1.430e-01, 4.770e-02, -3.994e-03, -3.349e-03, 4.712e-03, -1.667e-01, -1.122e-01, -4.580e-02, 1.766e-02, -2.453e-02, -5.764e-02, -3.436e-02, 3.880e-02));
	r += mul(s3_1, M4(2.365e-01, 1.398e-01, 1.614e-01, 1.156e-01, -6.461e-02, 2.053e-03, 4.140e-02, 6.326e-02, -1.890e-01, 5.761e-03, -1.447e-01, -1.538e-01, 7.351e-02, 8.297e-02, 5.039e-02, -6.475e-02));
	r += mul(s3_2, M4(1.196e-04, -6.680e-03, -1.938e-01, 3.805e-02, -2.790e-02, -3.913e-02, -7.458e-02, -1.850e-03, -6.723e-02, -1.085e-02, 1.876e-03, -1.106e-01, 3.075e-02, 1.485e-03, -1.293e-01, 8.083e-02));
	r += mul(s3_3, M4(2.756e-02, 7.864e-02, -3.369e-01, -2.217e-01, 6.474e-02, -4.298e-02, -5.458e-03, 2.813e-03, 5.999e-02, 8.149e-02, 7.279e-02, -1.686e-02, 1.190e-01, 2.042e-01, 3.612e-02, 7.315e-02));
	r += mul(s3_4, M4(3.051e-01, -9.211e-02, 4.600e-01, -3.447e-01, 2.556e-01, -5.603e-02, -1.154e-01, -2.020e-01, -9.595e-02, 1.377e-01, -1.240e-01, 4.795e-01, 8.575e-02, 5.572e-02, 1.085e-02, 4.294e-02));
	r += mul(s3_5, M4(2.617e-02, -4.821e-02, -1.024e-01, -1.804e-02, -1.345e-01, -1.582e-01, -1.713e-02, -7.114e-02, -2.556e-02, -2.863e-03, -3.945e-02, 9.742e-02, 4.392e-02, 7.791e-02, -1.419e-01, -1.883e-02));
	r += mul(s3_6, M4(-1.137e-01, -1.984e-01, -9.985e-02, 7.846e-02, -4.869e-03, 4.784e-02, 1.761e-02, -1.160e-01, 7.627e-02, -1.921e-02, 4.608e-02, 6.981e-02, 4.193e-02, 1.903e-01, -4.745e-02, 1.162e-01));
	r += mul(s3_7, M4(-7.780e-02, -1.129e-02, 1.214e-01, -1.464e-01, -4.261e-01, -1.137e-01, -1.813e-01, -2.618e-01, 1.008e-01, -1.304e-02, 3.379e-02, 6.853e-03, -1.314e-02, 6.436e-02, 2.828e-02, -1.117e-02));
	r += mul(s3_8, M4(2.963e-02, 4.454e-02, -8.843e-03, -1.156e-01, 5.085e-02, -2.774e-02, 1.102e-01, -1.561e-01, -3.901e-02, 2.853e-02, -1.504e-01, -5.963e-03, 4.271e-02, -4.841e-02, -1.105e-02, -4.172e-02));
	r += V4(1.594e-03, 7.575e-03, 3.237e-03, -2.691e-03);
	return r;
}
void Pass5(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t3[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 6
//!DESC CuNNy-4x8C-CHROMA-NVL-DN-conv4
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t2, t3
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t2, float2(x, y))
#define l1(x, y) O(t3, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-5.879e-02, 1.099e-02, 2.353e-02, -5.261e-02, -7.661e-02, 4.257e-02, -4.275e-02, -2.978e-02, 8.083e-02, -6.171e-03, 7.942e-03, 3.954e-02, 4.956e-02, -5.113e-02, 1.039e-02, 1.606e-02));
	r += mul(s0_1, M4(-7.623e-02, 1.183e-02, 1.940e-02, 8.276e-02, -4.455e-02, -1.161e-01, 6.366e-02, 6.568e-02, 6.568e-02, 1.009e-01, 5.434e-02, -5.126e-03, -1.398e-01, -5.790e-02, 1.372e-01, -2.385e-02));
	r += mul(s0_2, M4(-6.851e-02, 1.898e-02, 2.741e-02, 1.534e-02, -4.548e-02, -1.344e-02, 1.804e-02, -3.625e-02, 8.484e-02, 5.138e-03, 5.745e-03, 1.165e-02, 3.251e-02, -2.952e-02, 6.721e-02, -5.435e-02));
	r += mul(s0_3, M4(4.105e-02, -9.244e-02, 1.318e-02, 6.623e-02, 1.641e-02, -9.747e-03, 1.174e-01, 6.756e-03, 7.152e-02, 8.883e-02, -1.221e-02, 1.506e-02, 3.366e-03, 1.599e-01, -1.316e-01, -4.540e-02));
	r += mul(s0_4, M4(-3.747e-02, 1.503e-01, -3.807e-02, -4.752e-02, -4.362e-02, 1.599e-01, -3.367e-02, -1.748e-03, -1.623e-01, 3.859e-01, 1.309e-01, -7.442e-02, 7.675e-01, -7.475e-02, -4.502e-01, 2.744e-01));
	r += mul(s0_5, M4(5.481e-02, 9.902e-02, -3.874e-02, 6.687e-02, 7.542e-02, 4.410e-05, -1.311e-01, 8.376e-02, -7.284e-02, 9.498e-02, 6.314e-02, -2.709e-02, 1.992e-02, -3.226e-02, -8.993e-02, 3.295e-02));
	r += mul(s0_6, M4(-3.577e-02, -1.478e-03, 6.824e-03, 2.268e-02, -1.480e-02, 4.218e-03, -4.024e-02, 4.253e-02, 5.261e-02, -2.349e-02, -1.876e-02, -7.647e-02, -2.315e-02, 2.834e-02, 8.146e-02, -1.830e-01));
	r += mul(s0_7, M4(-1.536e-02, -8.046e-02, 2.737e-02, 3.129e-03, 4.181e-02, 1.412e-01, -1.257e-02, -4.889e-02, -2.377e-03, -2.137e-02, -1.662e-02, 1.085e-01, -1.107e-01, -7.652e-03, -2.826e-02, -1.314e-01));
	r += mul(s0_8, M4(-2.507e-02, 2.218e-02, -1.647e-02, -1.561e-02, -3.874e-02, 4.925e-02, 5.427e-02, 4.098e-02, 4.724e-02, -2.888e-02, -2.114e-02, -1.402e-02, -1.463e-02, -8.862e-02, -4.381e-03, 1.023e-01));
	r += mul(s1_0, M4(-1.489e-01, -5.666e-02, -1.446e-01, 3.305e-02, -2.928e-02, 4.599e-02, -4.188e-02, -7.292e-02, 8.029e-03, 1.410e-01, 1.472e-02, 2.642e-02, 6.262e-02, -2.373e-02, 1.539e-01, 4.871e-02));
	r += mul(s1_1, M4(-1.248e-01, 1.261e-01, 1.034e-01, -4.305e-02, 8.374e-02, -1.378e-01, -1.174e-01, 1.724e-01, 4.997e-02, 7.294e-02, 6.639e-02, -8.064e-02, -7.979e-02, 1.273e-02, 1.574e-01, -2.901e-03));
	r += mul(s1_2, M4(-7.500e-02, -1.180e-03, 1.354e-01, 3.315e-02, -2.033e-02, 4.868e-03, -3.048e-02, -4.883e-02, 3.256e-02, 6.024e-02, 6.725e-03, 3.894e-02, -6.384e-02, 9.233e-03, -1.678e-02, 2.342e-03));
	r += mul(s1_3, M4(2.736e-02, -2.377e-01, 4.189e-01, 2.328e-01, 1.023e-01, -8.396e-02, 1.115e-02, 1.190e-03, -1.775e-01, 2.363e-01, 1.830e-01, -1.274e-01, 1.857e-02, 1.088e-01, -2.258e-01, -2.461e-02));
	r += mul(s1_4, M4(-6.656e-02, 2.556e-01, -7.326e-02, 4.363e-01, 2.437e-01, 6.254e-03, -3.601e-02, -1.971e-01, -6.309e-01, 5.051e-01, 3.209e-01, -5.454e-01, 1.392e-01, -1.593e-02, -3.551e-01, 2.283e-02));
	r += mul(s1_5, M4(-1.211e-03, 1.508e-01, -1.134e-01, 2.646e-02, 9.351e-02, 1.084e-01, -5.597e-03, 1.152e-01, -2.789e-01, 7.203e-02, 6.386e-03, -4.632e-02, 1.718e-02, -9.619e-02, -1.038e-01, 3.089e-02));
	r += mul(s1_6, M4(-8.381e-02, -2.731e-02, -4.880e-02, -9.955e-03, -3.890e-02, 3.510e-02, -1.743e-02, 3.575e-02, -9.838e-02, 2.018e-02, 1.802e-01, -1.499e-01, 1.504e-02, 4.526e-02, 1.327e-03, -6.468e-02));
	r += mul(s1_7, M4(-1.135e-01, -1.622e-01, 1.243e-01, -2.349e-01, -2.957e-02, 4.040e-02, -8.021e-02, -1.470e-01, -9.410e-02, -6.280e-02, -4.006e-02, 6.372e-02, -1.215e-02, 6.932e-02, 7.025e-02, 1.059e-01));
	r += mul(s1_8, M4(-1.550e-02, -9.284e-02, 4.477e-02, 4.611e-02, -5.408e-02, -2.273e-02, -5.508e-02, 3.378e-02, 1.047e-01, 2.203e-02, 1.135e-01, -1.729e-02, -4.385e-02, -3.979e-02, 3.723e-02, -1.741e-02));
	r += mul(s2_0, M4(8.763e-02, 5.895e-02, 3.629e-02, -4.566e-03, -1.674e-01, -7.394e-02, -1.490e-01, -1.042e-01, 7.785e-03, -1.479e-02, -1.424e-02, -1.836e-03, -1.177e-01, -5.444e-04, 3.224e-02, -1.352e-01));
	r += mul(s2_1, M4(-2.256e-01, 3.209e-02, 1.179e-01, -5.186e-02, -1.383e-01, -1.518e-01, -3.310e-01, -3.636e-02, 8.042e-03, -1.053e-01, 9.695e-03, -6.359e-02, -6.847e-01, 2.564e-02, 2.327e-01, 3.399e-02));
	r += mul(s2_2, M4(-1.484e-01, 4.201e-02, 3.346e-02, 4.086e-02, -2.568e-01, -6.984e-02, -7.734e-02, -3.161e-02, -4.342e-02, -2.831e-02, 1.416e-02, -1.523e-02, -7.480e-02, -5.118e-02, -4.310e-02, 3.377e-02));
	r += mul(s2_3, M4(6.140e-02, 6.289e-02, -1.938e-01, -9.812e-02, -1.121e-01, -1.057e-01, 3.858e-01, 2.764e-01, 5.749e-02, -3.289e-02, -8.858e-02, -6.610e-02, -7.806e-02, 3.736e-02, 6.618e-02, 1.205e-01));
	r += mul(s2_4, M4(1.314e-01, -6.715e-02, -1.991e-01, 3.096e-01, 2.175e-01, -1.203e-01, 3.760e-01, -4.139e-01, 1.732e-01, -3.654e-01, -2.223e-01, 2.217e-01, -7.709e-01, -2.389e-02, 2.783e-01, 1.296e+00));
	r += mul(s2_5, M4(1.047e-01, 4.220e-03, -1.164e-01, -2.235e-03, -6.726e-02, -1.665e-01, 1.378e-01, 8.100e-02, 7.777e-02, -1.326e-01, -7.829e-02, 2.654e-02, -7.991e-02, 3.503e-02, -9.332e-02, 6.307e-02));
	r += mul(s2_6, M4(-1.256e-02, 6.095e-02, 1.564e-02, 1.835e-03, -4.333e-02, -8.659e-02, -1.566e-01, -1.709e-01, -2.190e-02, -1.742e-02, 3.118e-02, 7.967e-02, 1.012e-03, -1.385e-03, -3.677e-02, 1.323e-01));
	r += mul(s2_7, M4(3.863e-02, -5.507e-02, 2.312e-02, -1.054e-02, -1.122e-01, -1.125e-01, 9.488e-03, 6.272e-02, -6.210e-02, -2.590e-02, 1.022e-01, -8.276e-02, 8.188e-02, 3.967e-02, -9.023e-02, -1.915e-01));
	r += mul(s2_8, M4(-3.599e-02, 3.931e-02, 2.390e-02, -1.581e-03, 4.256e-02, -9.471e-03, 3.891e-03, -4.188e-02, -7.975e-02, 9.000e-03, 6.025e-02, 1.732e-02, 2.286e-02, 5.431e-02, 5.527e-02, 1.205e-01));
	r += mul(s3_0, M4(5.245e-02, 1.237e-02, -3.356e-02, -3.192e-02, -8.393e-02, 4.886e-02, -8.134e-02, 2.187e-03, 3.200e-02, -2.871e-02, 3.650e-02, 6.663e-02, -1.191e-01, 3.574e-02, -4.121e-02, -5.994e-03));
	r += mul(s3_1, M4(-7.154e-02, -8.473e-02, 1.288e-02, -3.991e-02, -5.372e-02, 1.806e-02, -7.540e-03, -3.213e-02, -8.799e-02, -1.628e-01, 2.812e-03, -1.917e-02, 4.856e-02, -4.141e-02, 5.631e-02, 4.827e-02));
	r += mul(s3_2, M4(-1.372e-02, 2.851e-02, -1.889e-02, 1.676e-02, 2.384e-02, -1.221e-02, 6.991e-03, 1.816e-02, -5.571e-02, -6.773e-02, 3.684e-04, -5.596e-02, -1.648e-02, -1.916e-02, 1.032e-02, -3.097e-02));
	r += mul(s3_3, M4(5.095e-02, -6.669e-02, 1.587e-02, -1.012e-01, 6.608e-02, -1.081e-01, 3.944e-02, -2.332e-02, -1.209e-02, -7.210e-02, -2.718e-01, -3.128e-01, -2.455e-02, -1.509e-01, 2.662e-01, 6.441e-03));
	r += mul(s3_4, M4(3.109e-01, -1.445e-01, 2.979e-01, 4.378e-02, -1.564e-01, -1.409e-01, 7.241e-02, 1.471e-02, 1.723e-01, -1.113e+00, -2.208e-01, -2.705e-01, -1.170e-01, 8.637e-02, 1.604e-01, -9.278e-02));
	r += mul(s3_5, M4(9.077e-02, -4.923e-02, 3.850e-02, -1.388e-01, -1.053e-02, -1.922e-02, 1.031e-03, -8.518e-02, 4.518e-02, -6.885e-02, -4.874e-02, 1.492e-01, 1.376e-02, 6.369e-02, -8.639e-02, 8.666e-02));
	r += mul(s3_6, M4(3.595e-02, -1.178e-02, -7.119e-02, -1.058e-01, 3.079e-04, -8.607e-03, -6.803e-02, 6.465e-02, 1.398e-02, -7.362e-02, 1.887e-01, -2.760e-02, -4.653e-02, -3.570e-02, 5.678e-02, 5.142e-02));
	r += mul(s3_7, M4(3.132e-03, -9.456e-02, -3.877e-01, -7.139e-02, -4.646e-02, -2.241e-02, 8.710e-02, 3.708e-02, -4.090e-02, -1.870e-01, 9.254e-02, -1.076e-01, -4.127e-03, 4.258e-02, 1.242e-01, -1.042e-01));
	r += mul(s3_8, M4(3.502e-02, 9.097e-03, -1.248e-01, -5.628e-02, -4.012e-03, -2.273e-02, 5.337e-02, -2.988e-02, -5.062e-02, -8.347e-02, -6.754e-03, -1.796e-02, -7.760e-02, 1.998e-02, 8.948e-02, 6.923e-02));
	r += V4(6.532e-03, 4.536e-03, -4.994e-03, 3.016e-03);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(1.148e-02, -8.084e-03, 4.360e-02, -8.270e-03, 1.805e-02, 1.205e-02, -3.670e-02, 8.354e-02, 3.121e-02, -4.227e-02, -6.265e-02, -1.027e-02, 4.320e-02, 2.168e-02, -6.961e-02, 9.579e-02));
	r += mul(s0_1, M4(-3.675e-02, 5.789e-03, 3.652e-02, -2.007e-04, -5.275e-02, -6.477e-02, 3.201e-02, -5.101e-02, -1.199e-02, 6.833e-02, -4.552e-02, 9.213e-02, -4.657e-02, 8.116e-03, -1.715e-02, 4.778e-02));
	r += mul(s0_2, M4(2.401e-02, -1.046e-02, 5.792e-02, -2.029e-02, 1.459e-02, -2.642e-02, 4.615e-03, 4.037e-02, -4.654e-02, 6.426e-02, 3.926e-02, -5.232e-02, -1.261e-02, 1.396e-02, -1.099e-02, 7.694e-02));
	r += mul(s0_3, M4(-8.477e-03, -3.452e-02, -2.507e-02, -1.491e-02, -2.359e-02, 2.472e-02, -4.015e-02, 5.013e-02, -1.657e-02, 8.574e-02, 9.416e-02, -1.923e-01, 2.936e-02, 1.587e-01, 3.174e-01, -5.810e-04));
	r += mul(s0_4, M4(7.691e-02, -4.908e-03, 1.335e-01, -7.920e-02, -3.893e-03, -7.241e-02, 9.435e-02, -8.195e-02, 3.475e-02, 1.608e-01, 2.487e-02, 2.864e-01, -8.422e-02, 6.847e-02, 4.111e-01, -1.553e-01));
	r += mul(s0_5, M4(2.325e-02, 5.128e-02, 7.301e-02, -1.170e-01, -3.454e-03, -8.375e-02, 4.928e-02, -5.456e-02, 4.247e-02, -1.231e-02, -4.305e-02, -1.049e-02, 8.764e-02, -5.274e-02, -1.778e-01, 7.388e-02));
	r += mul(s0_6, M4(-3.208e-03, -7.228e-03, 1.772e-02, 2.349e-02, -1.059e-02, -4.705e-02, -6.807e-03, 2.346e-03, 2.523e-02, 1.104e-02, 3.357e-02, -6.000e-02, 1.147e-02, -7.409e-02, 5.283e-02, 1.628e-01));
	r += mul(s0_7, M4(-3.789e-02, 9.610e-03, -3.913e-02, -4.369e-02, 4.939e-02, -5.182e-02, -4.185e-02, 4.529e-02, -1.524e-02, 1.528e-02, 7.983e-02, 7.550e-02, 8.075e-02, -3.524e-02, 5.685e-02, -1.263e-01));
	r += mul(s0_8, M4(7.440e-03, -5.532e-02, 2.897e-02, 1.082e-02, 1.361e-02, -5.579e-02, 1.932e-02, -2.208e-02, -2.491e-02, 5.264e-02, -3.918e-02, 1.596e-02, 1.904e-02, 5.135e-02, 7.057e-02, -4.045e-02));
	r += mul(s1_0, M4(1.304e-01, -1.724e-01, -1.768e-01, -6.144e-02, 4.476e-03, 1.234e-01, -2.843e-02, 1.049e-01, 5.892e-03, -1.260e-01, 1.062e-01, 5.619e-02, -3.020e-02, 1.552e-02, -3.919e-02, 4.664e-02));
	r += mul(s1_1, M4(-8.571e-02, 6.467e-02, -1.060e-01, 2.399e-01, -3.265e-02, -4.789e-02, 5.586e-02, -2.306e-01, -3.330e-01, 6.601e-02, 9.461e-02, 1.496e-01, 1.897e-02, -1.266e-03, -5.639e-02, 5.334e-02));
	r += mul(s1_2, M4(2.537e-02, -1.656e-01, 8.279e-02, -7.042e-02, -9.285e-02, 2.711e-02, 2.511e-02, 8.899e-02, 8.553e-02, -1.340e-02, -4.410e-02, -6.546e-02, 3.778e-02, -2.336e-02, 1.236e-02, 4.408e-03));
	r += mul(s1_3, M4(-9.087e-02, 3.168e-02, -1.322e-02, -3.139e-01, -5.364e-03, -3.616e-02, -2.087e-01, 1.729e-01, 4.766e-02, -5.540e-02, 1.286e-01, 3.089e-02, -1.899e-02, 1.041e-02, -6.977e-02, -7.314e-03));
	r += mul(s1_4, M4(2.421e-01, -1.599e+00, -1.166e+00, -7.866e-01, -8.079e-02, 2.684e-01, 5.229e-01, -5.413e-01, -1.295e+00, 9.878e-03, 2.784e-01, 4.096e-01, 1.130e-01, -4.316e-02, -1.518e-01, 1.145e-01));
	r += mul(s1_5, M4(8.495e-02, 2.815e-02, -8.666e-02, 9.970e-02, 1.022e-01, 1.557e-02, -1.261e-01, 2.034e-02, -5.611e-02, 4.751e-03, 1.636e-01, 3.056e-02, -6.054e-02, -1.686e-03, 1.516e-02, -6.968e-02));
	r += mul(s1_6, M4(5.044e-02, 4.400e-03, 6.090e-02, -4.168e-02, -4.851e-03, -1.511e-02, -2.030e-03, 9.365e-02, 7.577e-02, 4.623e-02, 3.398e-01, 1.978e-01, 2.063e-02, -1.111e-02, 5.652e-02, 6.361e-03));
	r += mul(s1_7, M4(-2.893e-02, -9.182e-02, -3.060e-01, -7.092e-02, 2.244e-02, -6.473e-03, -1.171e-01, -8.858e-02, 4.314e-02, -4.829e-02, 3.353e-01, 1.698e-02, -2.429e-02, 4.451e-02, 4.211e-02, -1.898e-03));
	r += mul(s1_8, M4(-8.189e-02, -1.889e-02, 1.097e-02, -4.021e-02, 3.579e-02, -1.490e-02, 6.902e-02, 3.306e-02, -1.551e-01, 8.379e-02, -1.144e-01, 5.527e-03, -1.539e-02, -1.143e-02, -1.495e-02, -3.455e-02));
	r += mul(s2_0, M4(-1.587e-02, 7.750e-02, 1.835e-02, 3.787e-03, 7.691e-02, -7.191e-02, -2.463e-02, 5.108e-02, 3.638e-03, 1.220e-02, 5.219e-02, -1.991e-02, 7.447e-02, 1.340e-02, 1.175e-01, 9.604e-02));
	r += mul(s2_1, M4(6.357e-02, -9.211e-03, 1.898e-01, -2.505e-02, -1.302e-01, 7.015e-02, 8.387e-03, -1.225e-02, 5.693e-02, -2.362e-02, -1.401e-01, 7.116e-02, 8.067e-02, 6.679e-02, 3.138e-01, -3.289e-02));
	r += mul(s2_2, M4(3.493e-02, -5.607e-02, 6.967e-02, -7.142e-02, 2.765e-02, 2.570e-02, -2.116e-02, 1.220e-02, 2.446e-02, -1.427e-02, -3.009e-02, 2.589e-02, 8.899e-02, -9.411e-02, 4.018e-02, -9.512e-02));
	r += mul(s2_3, M4(4.895e-02, 9.462e-02, 1.735e-01, -1.979e-02, -1.407e-01, -1.904e-02, 2.696e-01, -1.519e-01, 5.254e-02, 3.590e-02, 4.172e-02, -1.917e-02, 9.355e-02, 5.898e-02, 2.939e-01, 4.417e-02));
	r += mul(s2_4, M4(-1.120e-01, 1.110e-01, -2.105e-01, -1.235e-01, -7.825e-02, -7.429e-02, -2.241e-01, 2.813e-01, -2.185e-02, -8.858e-02, 1.456e-01, -4.287e-01, -1.304e-01, 4.699e-02, 1.002e-01, -1.356e-01));
	r += mul(s2_5, M4(6.323e-02, 1.099e-01, 9.889e-02, -7.432e-02, -2.117e-01, 1.694e-01, 6.375e-02, -9.839e-02, -3.942e-02, 1.855e-02, -7.378e-02, 2.829e-02, 1.175e-01, -3.354e-02, -7.452e-02, -4.560e-03));
	r += mul(s2_6, M4(-4.034e-03, 1.765e-02, 2.992e-02, -1.533e-02, -5.957e-02, -1.258e-02, -9.080e-02, 1.398e-02, -2.434e-02, -1.545e-02, -5.427e-02, 3.705e-02, -3.352e-02, -5.472e-03, -8.337e-02, -5.654e-02));
	r += mul(s2_7, M4(2.048e-02, -5.602e-02, -9.594e-03, 5.527e-02, -3.019e-03, 6.086e-02, 2.497e-02, -1.209e-01, -7.139e-03, 7.892e-02, -6.064e-02, -6.239e-02, 1.661e-01, -3.678e-03, 1.408e-01, 5.056e-02));
	r += mul(s2_8, M4(-3.211e-03, 6.220e-03, -3.103e-03, -4.199e-02, 1.584e-02, -7.530e-02, -4.751e-02, 7.464e-02, 2.313e-02, 9.119e-03, 8.559e-02, 6.101e-03, -7.135e-02, 2.982e-02, 1.400e-02, -5.776e-02));
	r += mul(s3_0, M4(-4.210e-02, 8.181e-02, 2.569e-02, 7.339e-03, 2.521e-02, -2.259e-02, 4.832e-02, -9.380e-02, 4.614e-02, -1.110e-01, 1.075e-01, -8.789e-02, 3.017e-02, -4.178e-02, 7.202e-02, -7.178e-02));
	r += mul(s3_1, M4(5.056e-02, -8.129e-02, -8.864e-02, 5.323e-03, 4.307e-02, -2.960e-02, -5.848e-02, 1.125e-01, 1.269e-01, -9.542e-02, -1.655e-01, -1.951e-02, -4.018e-02, -2.322e-02, -2.734e-02, 3.336e-02));
	r += mul(s3_2, M4(-6.308e-02, -1.116e-02, 9.559e-02, -3.943e-02, -2.973e-02, 3.864e-02, 5.908e-02, -8.498e-02, -6.772e-02, -4.076e-03, -1.586e-02, 7.300e-02, -2.926e-02, 6.546e-03, 2.045e-02, 2.519e-02));
	r += mul(s3_3, M4(-7.323e-03, -1.092e-02, 2.492e-02, 2.370e-02, 3.170e-02, -6.999e-03, 1.007e-02, 3.357e-03, -2.263e-01, -1.461e-01, -7.527e-01, 1.411e-01, 9.160e-03, -2.685e-02, 4.388e-02, -1.062e-02));
	r += mul(s3_4, M4(-1.460e-02, 1.237e-01, -1.597e-01, 3.227e-02, -7.888e-02, -5.153e-02, 9.514e-02, 7.286e-02, -5.803e-01, -7.928e-02, 2.704e-01, -1.577e-01, -1.377e-01, 1.512e-02, 1.362e-01, -1.390e-02));
	r += mul(s3_5, M4(-2.514e-02, -6.647e-02, -1.071e-01, 5.706e-02, 6.157e-04, 4.822e-02, -5.454e-02, -2.720e-02, 3.743e-03, -4.543e-02, 3.362e-02, -1.003e-01, 5.954e-02, -4.928e-02, 2.420e-02, -5.449e-02));
	r += mul(s3_6, M4(-2.060e-02, 6.543e-02, -6.921e-03, -2.401e-02, -4.378e-03, -8.052e-03, -1.776e-02, -5.708e-03, -5.838e-03, -8.382e-03, 2.731e-02, 5.268e-01, -2.960e-02, -5.248e-03, -1.653e-02, -4.753e-03));
	r += mul(s3_7, M4(-4.429e-02, -1.077e-01, -1.095e-01, 3.178e-02, -2.673e-02, 2.018e-02, -8.698e-03, -5.971e-03, 8.711e-02, 4.499e-02, 7.185e-02, -3.320e-04, 2.111e-02, -4.718e-02, -1.929e-02, 1.513e-02));
	r += mul(s3_8, M4(7.969e-02, 1.230e-01, -1.317e-02, -1.126e-02, 2.245e-04, -1.327e-02, -7.932e-03, 2.320e-02, 1.711e-03, -5.381e-02, -4.712e-02, 3.989e-02, 4.746e-03, -7.076e-02, 6.419e-02, 3.082e-03));
	r += V4(-3.234e-04, 2.197e-03, 9.496e-03, -4.579e-03);
	return r;
}
void Pass6(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 7
//!DESC CuNNy-4x8C-CHROMA-NVL-DN-out
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-2.853e-02, 1.272e-02, 1.001e-02, 2.508e-03, -4.887e-02, 5.530e-02, 2.723e-02, 2.574e-02, -1.653e-02, -6.173e-02, 3.265e-02, 9.342e-03, 4.519e-02, -8.960e-02, -3.708e-02, -5.029e-02));
	r += mul(s0_1, M4(-3.894e-02, -2.932e-02, -2.816e-02, -4.269e-03, 7.690e-02, -5.744e-02, 5.286e-02, 3.305e-02, 1.531e-01, 1.116e-01, -5.456e-02, -1.819e-02, 1.991e-01, 2.281e-01, 2.840e-02, -1.770e-02));
	r += mul(s0_2, M4(6.640e-03, -1.591e-02, 1.820e-02, 1.897e-03, -1.997e-02, 1.837e-02, -1.552e-02, 1.377e-02, -4.202e-02, 3.796e-02, 4.265e-02, 2.423e-02, -2.388e-02, 2.602e-02, -3.023e-02, -4.374e-02));
	r += mul(s0_3, M4(-4.458e-02, -1.115e-01, -1.416e-01, -5.852e-02, -6.623e-03, 2.954e-02, -1.450e-01, 4.743e-02, 6.613e-02, 8.750e-03, -8.455e-02, 1.323e-02, -6.713e-02, -8.209e-02, 3.342e-02, -1.038e-01));
	r += mul(s0_4, M4(1.035e-01, 2.491e-01, 2.546e-02, 3.577e-02, -7.495e-02, -1.951e-01, -1.894e-02, -2.969e-01, 5.477e-01, 3.886e-01, -6.858e-01, -5.450e-01, -1.750e-02, -1.904e-02, 2.436e-01, 3.084e-01));
	r += mul(s0_5, M4(-1.749e-03, 2.282e-03, -2.039e-02, -1.422e-02, 4.069e-02, 4.714e-02, 3.429e-02, 3.534e-02, 4.959e-03, 2.305e-01, 1.994e-02, -2.728e-01, -4.411e-02, -4.109e-02, -3.100e-02, 5.367e-02));
	r += mul(s0_6, M4(-9.328e-03, -1.514e-02, 7.597e-02, -1.402e-02, 5.645e-02, 5.735e-03, 9.908e-02, 1.715e-02, -4.901e-02, -1.311e-02, 3.872e-02, -1.130e-02, 1.843e-02, -1.846e-03, -4.283e-02, -1.086e-02));
	r += mul(s0_7, M4(-3.224e-02, -3.622e-03, 4.205e-02, 1.825e-01, 6.196e-03, 4.433e-02, -1.781e-02, 4.598e-02, -9.961e-03, -1.942e-02, 4.379e-02, 1.214e-01, -2.057e-02, -1.983e-02, -6.423e-02, -8.678e-02));
	r += mul(s0_8, M4(-2.763e-02, -2.727e-02, -9.761e-03, -2.941e-02, -1.704e-04, -2.285e-02, 4.464e-03, -3.213e-03, -1.166e-02, -3.507e-02, 2.445e-02, -2.445e-02, -4.073e-03, 4.134e-04, -2.356e-02, -3.006e-02));
	r += mul(s1_0, M4(-3.863e-02, 1.061e-02, 1.078e-02, 8.086e-03, -1.984e-01, 2.666e-02, 5.440e-03, 2.620e-02, 6.507e-03, -1.742e-02, 3.741e-03, 2.055e-03, 5.196e-02, -4.211e-02, 1.867e-02, -3.064e-02));
	r += mul(s1_1, M4(-6.909e-02, -3.449e-02, -3.285e-03, 1.674e-02, -1.128e-01, -3.469e-01, -7.602e-03, -2.908e-02, -7.004e-03, 2.167e-02, -2.337e-02, -2.003e-02, 7.641e-01, -2.900e-01, 3.002e-02, -7.355e-02));
	r += mul(s1_2, M4(1.516e-02, -3.051e-02, 6.131e-03, -3.252e-03, -3.412e-02, -4.168e-02, -1.673e-02, 7.550e-03, 1.896e-03, -1.799e-02, 5.428e-03, -2.648e-03, 4.904e-03, -1.232e-01, -4.899e-02, 2.926e-02));
	r += mul(s1_3, M4(3.733e-02, -1.416e-01, -1.333e-01, -7.883e-02, -2.300e-01, -2.875e-02, -4.582e-01, -1.179e-02, -2.134e-02, 9.494e-03, -1.932e-02, -6.169e-03, -1.081e-01, -5.749e-02, -6.662e-02, -5.874e-02));
	r += mul(s1_4, M4(4.561e-01, 5.856e-01, -3.881e-02, 1.602e-02, -2.772e-01, -5.518e-01, -2.976e-01, -7.169e-01, 1.099e-02, -2.081e-02, 3.700e-02, -3.746e-02, -1.981e-01, 8.472e-02, 5.048e-01, 1.549e-01));
	r += mul(s1_5, M4(-6.189e-02, 4.004e-02, -1.909e-02, -4.297e-02, 3.724e-02, 1.341e-02, 1.180e-02, -3.245e-02, 1.836e-03, -6.383e-03, -2.093e-02, 2.478e-04, -2.757e-02, -2.073e-02, 6.531e-02, -1.538e-01));
	r += mul(s1_6, M4(-4.307e-02, -2.158e-02, -1.536e-02, -3.624e-02, 2.498e-02, -2.493e-02, 5.360e-02, -3.139e-02, -9.869e-03, -1.174e-02, 2.120e-02, 5.203e-03, -2.027e-03, -9.987e-03, -1.610e-02, 6.264e-03));
	r += mul(s1_7, M4(-4.180e-02, -4.576e-02, -1.419e-01, -5.317e-03, -2.709e-02, 1.385e-02, -1.192e-01, -9.489e-02, 4.647e-02, 4.502e-02, 3.880e-02, 6.627e-02, -4.207e-03, -2.322e-02, -7.863e-02, -1.152e-01));
	r += mul(s1_8, M4(-1.275e-02, -2.300e-02, 2.502e-02, -6.934e-02, -1.051e-02, -3.144e-03, 1.754e-02, 1.162e-02, -7.528e-03, 4.365e-03, 1.192e-02, -2.064e-02, -3.117e-02, 1.412e-02, -2.079e-02, 3.384e-02));
	r += mul(s2_0, M4(2.108e-02, -3.528e-02, 2.168e-02, 9.644e-03, 1.393e-01, -5.929e-02, 4.275e-02, -7.089e-03, -2.422e-02, 1.536e-02, -1.429e-02, -1.055e-02, 1.755e-02, -2.191e-02, -4.406e-02, -2.169e-02));
	r += mul(s2_1, M4(-1.166e-01, -2.158e-02, -9.126e-03, 1.883e-02, -4.143e-02, 1.233e-01, -6.586e-03, -6.776e-03, -1.165e-01, -2.534e-03, -1.753e-02, 1.050e-02, 2.393e-01, -1.891e-01, 5.096e-02, 1.475e-02));
	r += mul(s2_2, M4(1.884e-02, -3.266e-02, 2.679e-02, 8.743e-03, 2.105e-02, 1.174e-02, -8.033e-03, 8.499e-03, 1.076e-02, -5.392e-02, 1.201e-02, -2.805e-03, -7.405e-03, 4.352e-02, 7.178e-03, -1.438e-02));
	r += mul(s2_3, M4(-2.186e-01, 1.441e-01, -7.085e-02, -3.139e-02, 8.982e-03, 3.846e-02, 1.407e-01, -2.211e-02, 3.723e-02, -6.663e-02, 4.430e-03, -1.261e-02, -5.961e-02, -1.874e-02, 7.054e-02, -3.298e-02));
	r += mul(s2_4, M4(5.172e-02, -6.447e-02, -1.743e-01, 6.628e-02, -2.244e-01, -2.160e-01, -1.699e-01, 2.909e-02, 2.886e-03, 2.900e-01, -1.714e-01, 2.078e-01, 3.506e-01, -3.478e-01, 4.841e-01, -4.640e-01));
	r += mul(s2_5, M4(-7.671e-04, 6.050e-03, -4.185e-03, -1.813e-02, 8.351e-04, -2.293e-02, 1.431e-02, 2.182e-04, 1.835e-02, 5.213e-02, 1.576e-02, -2.725e-02, -6.079e-02, -2.367e-02, -3.893e-02, 3.455e-02));
	r += mul(s2_6, M4(3.574e-02, 3.226e-02, -3.526e-02, 1.023e-01, 6.765e-02, 6.432e-02, 2.376e-02, 5.238e-02, -5.223e-02, -3.435e-02, -2.309e-02, -4.861e-02, -8.418e-04, 3.215e-02, -5.927e-02, 6.603e-02));
	r += mul(s2_7, M4(9.417e-03, 5.781e-02, 6.137e-02, -1.575e-01, 6.846e-02, 2.879e-02, -4.408e-05, -1.077e-01, -6.097e-02, -1.853e-02, -1.017e-02, 8.467e-02, 4.601e-02, -4.113e-02, 9.728e-02, -1.276e-01));
	r += mul(s2_8, M4(2.203e-02, 2.080e-02, 1.918e-02, -1.052e-03, 1.087e-02, 2.663e-02, 1.510e-02, 2.142e-02, 4.662e-03, -3.242e-02, 1.123e-02, -5.634e-03, -1.084e-02, 2.990e-02, -4.243e-02, 1.028e-02));
	r += mul(s3_0, M4(2.569e-01, -7.475e-02, 9.866e-05, -1.880e-02, -8.985e-02, -8.138e-02, 7.267e-02, 2.521e-02, 1.557e-01, -3.819e-02, -6.630e-02, 1.271e-02, -4.896e-02, -2.115e-02, -4.339e-02, -2.850e-02));
	r += mul(s3_1, M4(-6.907e-01, 2.861e-01, 1.537e-01, 6.518e-02, 8.961e-02, 8.359e-02, 7.400e-03, 3.099e-02, 3.470e-02, -2.398e-01, 7.812e-03, 5.032e-03, 3.120e-02, 1.190e-01, 3.058e-02, 4.634e-02));
	r += mul(s3_2, M4(1.034e-01, -1.938e-01, -1.017e-01, 1.227e-01, 2.059e-02, 5.560e-02, -7.129e-03, 9.787e-03, -1.745e-03, -1.901e-02, 8.372e-03, 7.393e-04, 1.039e-02, -1.250e-02, 8.313e-05, -1.146e-02));
	r += mul(s3_3, M4(-3.687e-01, -2.515e-02, -7.645e-02, 2.184e-01, 1.504e-01, -3.553e-01, 3.312e-01, 2.237e-01, -1.064e-01, -6.866e-02, 3.196e-01, -2.174e-01, -8.328e-03, -5.942e-02, -4.250e-02, -5.069e-02));
	r += mul(s3_4, M4(2.026e-01, 5.639e-01, -1.131e-01, -6.283e-01, -2.300e-01, 6.664e-01, -4.026e-01, -3.535e-01, -2.193e-01, 5.687e-01, -2.467e-01, 6.609e-02, -1.304e-01, 8.104e-02, -8.936e-02, 2.153e-01));
	r += mul(s3_5, M4(1.947e-02, -9.304e-02, -6.807e-02, 2.861e-01, -2.809e-02, -4.186e-01, 6.014e-02, 6.150e-02, 4.438e-02, 3.182e-02, -2.969e-03, 5.166e-02, -6.683e-03, 2.545e-02, 1.466e-02, 2.707e-02));
	r += mul(s3_6, M4(1.096e-02, 8.510e-02, 1.090e-01, 5.938e-02, 1.806e-01, 1.037e-01, -3.587e-01, 2.310e-02, -2.507e-02, -4.743e-02, -1.323e-01, -4.979e-03, 1.013e-02, 2.628e-02, 2.507e-02, 1.403e-02));
	r += mul(s3_7, M4(3.149e-03, -2.546e-02, -1.150e-01, 1.763e-01, -3.539e-01, -6.569e-02, 6.670e-01, -6.101e-01, -2.031e-02, -6.569e-02, 2.025e-03, 9.449e-02, 5.018e-03, -2.832e-02, -3.562e-02, -6.569e-02));
	r += mul(s3_8, M4(2.589e-02, 2.721e-02, 4.668e-02, -1.861e-02, 1.630e-01, -6.603e-02, -2.057e-01, 4.552e-01, 4.198e-03, -2.911e-02, 1.914e-03, -1.057e-01, -4.631e-03, 7.524e-03, -2.047e-02, 7.545e-03));
	r += V4(2.023e-03, -1.275e-04, 2.055e-03, -6.409e-04);
	return tanh(r);
}
void Pass7(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = -max(-s0_0, 0.0);
	V4 s1_1 = -max(-s0_1, 0.0);
	V4 s1_2 = -max(-s0_2, 0.0);
	V4 s1_3 = -max(-s0_3, 0.0);
	V4 s1_4 = -max(-s0_4, 0.0);
	V4 s1_5 = -max(-s0_5, 0.0);
	V4 s1_6 = -max(-s0_6, 0.0);
	V4 s1_7 = -max(-s0_7, 0.0);
	V4 s1_8 = -max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = -max(-s2_0, 0.0);
	V4 s3_1 = -max(-s2_1, 0.0);
	V4 s3_2 = -max(-s2_2, 0.0);
	V4 s3_3 = -max(-s2_3, 0.0);
	V4 s3_4 = -max(-s2_4, 0.0);
	V4 s3_5 = -max(-s2_5, 0.0);
	V4 s3_6 = -max(-s2_6, 0.0);
	V4 s3_7 = -max(-s2_7, 0.0);
	V4 s3_8 = -max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 8
//!DESC CuNNy-4x8C-CHROMA-NVL-DN-shuffle
//!STYLE PS
//!IN t2, INPUT, easu
float4 Pass8(float2 pos) {
	float2 pt = float2(GetInputPt());
	static const float3x3 rgb2yuv = {0.299, 0.587, 0.114, -0.169, -0.331, 0.5, 0.5, -0.419, -0.081};
	static const float3x3 yuv2rgb = {1, -0.00093, 1.401687, 1, -0.3437, -0.71417, 1, 1.77216, 0.00099};
	float4 r = 0.0;
	float2 size = float2(GetInputSize());
	float2 f = frac(pos * size);
	float3 yuv = mul(rgb2yuv, INPUT.SampleLevel(SL, pos, 0).rgb);
	int2 i = int2(f * 2.0);
	r.r = t2.SampleLevel(SP, (float2(0.5, 0.5) - f) * pt + pos, 0)[2*i.y + i.x];
	r.r += easu.SampleLevel(SP, pos, 0).r;
	r.a = 1.0;
	r.r = clamp(r, 0.0, 1.0);
	float3 px = mul(yuv2rgb, float3(r.r, yuv.yz));
	return float4(px, 1.0);
}
