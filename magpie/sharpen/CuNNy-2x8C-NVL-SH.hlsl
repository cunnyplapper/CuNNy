// CuNNy 2x8C BILINEAR CHROMA NVL SH
// Copyright (c) 2024 cunnyplapper

// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public
// License along with this program.  If not, see <https://www.gnu.org/licenses/>.
/* ------------------------------------------------------------------- */

//!MAGPIE EFFECT
//!VERSION 3
//!OUTPUT_WIDTH INPUT_WIDTH * 2
//!OUTPUT_HEIGHT INPUT_HEIGHT * 2

//!TEXTURE
Texture2D INPUT;


//!SAMPLER
//!FILTER POINT
SamplerState SP;

//!SAMPLER
//!FILTER LINEAR
SamplerState SL;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t1;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t2;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t3;

//!PASS 1
//!DESC CuNNy-2x8C-BILINEAR-CHROMA-NVL-SH-in
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN INPUT
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) (dot(float3(-0.3470551073551178, -0.655653178691864, -0.14503657817840576), O(INPUT, float2(x, y)).rgb) + 0.9234024882316589)
float4 f0(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	V4 r = 0.0;
	r += V4(-1.367e-03, -1.782e-01, -3.881e-02, 9.771e-03) * s0_0;
	r += V4(2.970e-02, -4.918e-02, 5.215e-01, 3.539e-03) * s0_1;
	r += V4(-3.870e-02, 2.517e-01, -2.129e-02, 2.115e-01) * s0_2;
	r += V4(2.099e-02, -1.306e-02, 3.845e-02, -2.900e-03) * s0_3;
	r += V4(-6.426e-01, 4.489e-01, -5.112e-01, 1.538e-01) * s0_4;
	r += V4(6.309e-01, -3.995e-01, 1.350e-02, -5.280e-01) * s0_5;
	r += V4(-7.727e-03, 1.616e-01, 1.163e-03, 2.457e-02) * s0_6;
	r += V4(3.725e-02, 8.987e-03, -7.310e-03, -6.363e-02) * s0_7;
	r += V4(-2.826e-02, -2.339e-01, 2.460e-03, 1.339e-01) * s0_8;
	r += V4(2.109e-04, -1.684e-03, -2.407e-04, 4.822e-02);
	return r;
}
float4 f1(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	V4 r = 0.0;
	r += V4(1.841e-01, 7.981e-02, -5.896e-02, 9.670e-03) * s0_0;
	r += V4(2.474e-02, -5.444e-02, 2.963e-01, 5.384e-02) * s0_1;
	r += V4(-2.323e-01, 4.261e-02, 2.920e-01, 6.984e-03) * s0_2;
	r += V4(-2.074e-01, -4.478e-01, -2.799e-02, -1.000e-03) * s0_3;
	r += V4(4.404e-01, -6.316e-02, -1.724e-01, -3.410e-01) * s0_4;
	r += V4(1.980e-01, 7.478e-02, -1.920e-01, 4.098e-02) * s0_5;
	r += V4(-1.890e-01, 2.667e-01, 8.813e-02, 1.363e-02) * s0_6;
	r += V4(-3.387e-01, 1.567e-01, -1.240e-01, 2.084e-02) * s0_7;
	r += V4(1.223e-01, -5.753e-02, -1.023e-01, 7.098e-03) * s0_8;
	r += V4(1.021e-04, -5.849e-05, -1.378e-03, -4.156e-02);
	return r;
}
void Pass1(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	min16float s0_0 = l0(-1.0, -1.0);
	min16float s0_1 = l0(0.0, -1.0);
	min16float s0_2 = l0(1.0, -1.0);
	min16float s0_3 = l0(-1.0, 0.0);
	min16float s0_4 = l0(0.0, 0.0);
	min16float s0_5 = l0(1.0, 0.0);
	min16float s0_6 = l0(-1.0, 1.0);
	min16float s0_7 = l0(0.0, 1.0);
	min16float s0_8 = l0(1.0, 1.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
}
//!PASS 2
//!DESC CuNNy-2x8C-BILINEAR-CHROMA-NVL-SH-conv1
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2, t3
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-4.205e-02, 5.047e-02, -1.138e-01, -3.406e-02, -1.751e-01, 2.153e-01, -1.745e-01, 8.371e-02, -2.549e-01, 1.294e-01, -2.832e-01, -1.301e-01, -3.670e-02, -3.053e-02, 1.415e-01, 5.550e-02));
	r += mul(s0_1, M4(-6.791e-02, 8.018e-02, -1.697e-01, -2.939e-01, -1.256e-01, -2.464e-01, 2.023e-01, -6.607e-02, 6.670e-02, -5.139e-02, -3.066e-01, -4.014e-01, 2.615e-01, 1.147e-01, 3.327e-02, 1.160e-02));
	r += mul(s0_2, M4(-3.132e-02, 8.566e-02, 2.755e-01, 1.111e-01, -7.799e-02, -1.522e-01, -5.762e-03, 1.442e-01, -1.400e-01, 2.550e-02, -1.282e-01, -1.742e-01, -1.243e-01, 5.086e-02, 7.304e-02, 7.497e-02));
	r += mul(s0_3, M4(1.114e+00, -8.892e-01, -5.419e-02, -3.228e-01, -9.455e-03, -1.430e-01, -3.658e-01, -4.072e-01, 3.128e-01, -6.949e-01, -2.655e-01, -5.406e-02, -1.167e-01, 1.487e-01, -1.688e-01, -8.831e-02));
	r += mul(s0_4, M4(7.977e-02, 1.127e+00, -1.549e-01, 3.518e-01, 4.120e-01, 5.939e-02, -1.502e-01, -3.444e-01, -1.598e-01, 5.568e-01, -1.423e+00, -5.209e-01, 1.508e-01, -4.242e-01, 9.254e-03, -1.827e-01));
	r += mul(s0_5, M4(3.636e-02, 3.916e-02, 8.818e-02, 1.466e-01, -1.384e-01, 6.765e-02, -2.440e-01, 5.931e-02, 2.290e-01, 6.182e-01, 6.727e-01, -3.931e-01, 1.117e-01, -1.646e-01, -9.154e-02, 1.088e-02));
	r += mul(s0_6, M4(2.284e-01, -1.208e-01, 2.708e-01, 9.406e-02, -1.302e-01, 6.826e-02, -8.453e-02, 2.607e-02, -2.171e-01, -1.155e-01, 9.401e-02, -2.593e-02, -1.190e-01, 1.150e-01, -5.780e-02, 5.361e-03));
	r += mul(s0_7, M4(1.081e-01, -2.746e-01, 4.755e-01, -2.437e-01, 1.016e-01, -5.182e-02, -2.853e-02, -9.364e-02, 1.816e+00, -1.447e-01, 4.037e-01, -8.364e-01, -4.495e-02, 1.233e-01, 6.885e-02, -7.404e-02));
	r += mul(s0_8, M4(-1.354e-01, 2.121e-02, -2.492e-02, 2.857e-02, -6.138e-02, 2.106e-01, -8.761e-03, 1.636e-01, 2.261e-01, 5.501e-01, 4.782e-01, 1.878e-01, -2.312e-02, -1.326e-01, -2.128e-02, 3.252e-02));
	r += mul(s1_0, M4(-5.988e-02, -9.130e-02, -5.380e-01, -5.691e-02, 1.790e-02, -2.101e-01, 1.774e-01, -3.956e-02, 2.164e-01, -1.665e-01, 7.510e-02, -2.747e-02, 2.322e-01, 7.755e-02, 6.230e-01, 1.701e-01));
	r += mul(s1_1, M4(-9.576e-03, -1.208e-01, -1.827e-01, 1.735e-01, 1.269e-01, 1.720e-02, -1.825e-02, 5.365e-02, -3.232e-01, 1.819e-01, -2.693e-01, 7.653e-03, -5.932e-02, -1.431e-01, -2.105e-01, -2.388e-02));
	r += mul(s1_2, M4(8.596e-03, -9.236e-02, -8.695e-02, -7.877e-02, 5.919e-02, -2.500e-02, -1.210e-01, -1.696e-01, -3.429e-02, 1.900e-02, 5.952e-02, -2.528e-01, 3.278e-02, 1.197e-01, 1.055e-01, -5.115e-02));
	r += mul(s1_3, M4(5.211e-01, -1.489e-02, -8.112e-01, 1.569e-01, -6.656e-02, 2.319e-01, -1.425e-02, 2.189e-02, -3.349e-02, 1.768e-01, -2.743e-01, 2.123e-01, -5.554e-01, -1.053e-01, 3.916e-01, 2.525e-01));
	r += mul(s1_4, M4(4.804e-01, 1.896e-01, 2.972e-01, -4.014e-01, -3.682e-01, 2.258e-01, -1.230e-01, -9.372e-02, 4.813e-01, -5.066e-02, 8.474e-02, -6.348e-01, 1.720e-01, -3.392e-01, -2.773e-01, 7.700e-02));
	r += mul(s1_5, M4(-1.207e-01, 3.459e-01, 8.156e-02, -8.124e-02, 1.040e-01, -2.531e-01, 2.701e-03, -4.674e-02, -5.996e-01, 7.229e-01, -1.549e-01, 3.857e-01, -2.588e-01, 2.998e-01, 1.669e-01, 2.097e-02));
	r += mul(s1_6, M4(4.641e-02, -1.734e-02, 2.433e-02, 8.331e-02, 1.551e-01, -4.532e-02, -9.285e-03, -1.664e-02, 6.067e-01, -4.050e-01, -5.365e-01, 1.492e-01, 1.819e-01, 1.900e-01, 2.629e-02, -2.853e-01));
	r += mul(s1_7, M4(3.610e-02, 2.083e-01, 1.077e-01, 5.266e-01, 1.862e-02, 1.460e-01, -9.384e-02, -2.038e-02, 5.793e-01, 5.840e-01, -1.142e-03, 2.356e-01, 1.790e-01, -1.956e-01, -2.834e-01, 8.567e-02));
	r += mul(s1_8, M4(2.013e-01, -5.349e-02, 2.920e-01, -3.063e-02, -3.549e-02, -2.442e-02, 1.469e-02, -1.411e-01, -2.891e-01, 7.156e-01, -3.359e-02, 1.685e-01, -3.723e-02, 1.244e-01, 1.867e-02, 9.068e-02));
	r += mul(s2_0, M4(-3.618e-02, 5.741e-02, -5.364e-02, -1.555e-02, -4.826e-02, 1.274e-01, 8.720e-02, 4.241e-02, 2.854e-01, -2.229e-01, 5.929e-01, -1.094e-01, 4.058e-02, -8.163e-02, -7.254e-01, -4.908e-01));
	r += mul(s2_1, M4(-1.869e-01, 1.147e-01, 5.851e-02, 5.199e-01, 1.970e-01, -5.857e-02, -3.998e-02, -2.295e-01, -6.238e-02, 1.007e-03, 2.215e-01, 3.467e-01, -2.329e-02, 3.276e-01, 9.835e-01, 1.534e+00));
	r += mul(s2_2, M4(-1.018e-01, -6.996e-03, -9.228e-02, 3.221e-01, 6.940e-02, 2.462e-01, -2.478e-02, -2.180e-01, -5.354e-03, 2.562e-02, -2.171e-01, 8.305e-02, 1.866e-03, 4.585e-04, -2.119e-01, 3.348e-02));
	r += mul(s2_3, M4(-5.288e-02, 8.393e-02, -1.458e-01, 1.330e-01, 1.307e-01, -4.835e-02, 1.111e-02, -8.561e-02, -3.254e-01, 2.557e-01, 4.091e-01, 2.775e-01, 3.248e-02, 3.635e-01, -2.631e-02, -4.271e-01));
	r += mul(s2_4, M4(6.456e-02, -7.787e-02, 1.558e-01, -3.349e-01, -3.506e-01, 4.066e-01, 6.031e-01, 1.632e-02, 1.073e-01, -4.027e-01, -3.506e-01, 1.151e-01, -1.216e+00, 1.685e+00, -1.446e+00, 3.767e-01));
	r += mul(s2_5, M4(-9.843e-02, 1.645e-01, 1.702e-01, -6.517e-02, 1.731e-01, -6.353e-01, -3.249e-01, -8.159e-02, -2.130e-01, -1.494e-01, 1.724e-03, 3.504e-02, 8.633e-02, -1.594e+00, -1.152e+00, -4.896e-02));
	r += mul(s2_6, M4(6.292e-02, -1.719e-01, 1.548e-01, -1.606e-01, 4.202e-02, -4.006e-02, 5.698e-02, -2.887e-02, 1.346e-01, -8.420e-02, 7.985e-02, -2.484e-01, 2.883e-01, -4.882e-01, 1.172e-01, -2.803e-01));
	r += mul(s2_7, M4(1.560e-02, 1.297e-02, -2.655e-02, 1.790e-01, 1.754e-01, 2.615e-02, 1.001e-01, 9.282e-02, -1.432e-01, -6.855e-01, -2.705e-01, -3.958e-01, 3.788e-01, 1.465e-01, -6.988e-03, -5.982e-01));
	r += mul(s2_8, M4(-1.906e-02, 2.782e-01, 1.542e-01, 2.104e-01, 1.037e-01, -1.293e-01, 5.943e-02, -9.961e-02, 4.100e-02, -3.969e-02, -2.021e-02, -1.412e-01, 6.822e-02, -1.916e-01, 7.528e-02, 2.813e-03));
	r += mul(s3_0, M4(-2.054e-02, -1.686e-01, -2.514e-02, -3.232e-02, 7.785e-02, -2.020e-02, 6.018e-02, -9.317e-02, -2.185e-01, 2.599e-01, -2.666e-01, 2.450e-01, 8.205e-02, 6.388e-02, 1.760e-01, 8.458e-02));
	r += mul(s3_1, M4(8.021e-02, 4.317e-02, 1.519e-01, -3.364e-01, -4.133e-02, 1.315e-01, -4.433e-02, 1.208e-02, 2.643e-01, -2.534e-01, 9.518e-02, 2.873e-02, -4.912e-02, 4.984e-02, 3.975e-02, -9.552e-02));
	r += mul(s3_2, M4(1.543e-01, -1.724e-01, 1.830e-01, -3.438e-01, 1.169e-01, -1.152e-01, -5.717e-02, 1.826e-01, -1.327e-02, -7.347e-02, 6.284e-02, -1.197e-01, -1.065e-01, 6.756e-02, -4.815e-02, 4.780e-02));
	r += mul(s3_3, M4(2.155e-01, -1.568e-01, 3.936e-01, -6.033e-02, -5.722e-02, 2.155e-02, -1.142e-01, 1.755e-02, -3.750e-02, -3.370e-02, 1.508e-01, -2.472e-01, 6.242e-02, -1.616e-01, 5.421e-02, 3.274e-02));
	r += mul(s3_4, M4(-4.484e-01, 5.004e-02, 8.473e-02, 4.717e-01, 1.448e-01, -1.116e-01, -4.397e-03, 2.329e-01, 1.179e-01, -5.940e-01, -8.881e-04, -1.069e-02, 3.303e-03, -3.525e-02, -5.599e-02, 2.235e-03));
	r += mul(s3_5, M4(1.047e-01, -2.758e-01, 6.543e-02, -2.447e-02, 1.646e-01, -1.608e-01, 2.323e-02, -9.151e-02, 2.398e-01, -1.704e-02, -1.210e-01, -1.330e-01, 1.636e-01, -7.811e-02, -7.331e-02, -5.110e-02));
	r += mul(s3_6, M4(-9.299e-02, 9.399e-02, -2.146e-02, 1.696e-01, -3.785e-02, 4.024e-02, -6.693e-03, 1.104e-01, -5.176e-01, 2.892e-01, 2.565e-02, 6.824e-02, -1.944e-01, 2.366e-01, 1.151e-01, 1.106e-01));
	r += mul(s3_7, M4(-5.724e-02, -1.143e-01, 2.582e-02, -2.324e-01, -1.714e-01, 3.081e-02, -1.259e-01, -9.402e-02, -1.446e-02, 1.854e-01, 2.374e-01, 2.512e-01, 1.362e-01, -1.722e-01, 3.780e-02, -1.207e-01));
	r += mul(s3_8, M4(4.042e-03, -2.310e-01, -7.356e-02, -1.880e-01, 6.881e-02, 6.975e-03, -2.658e-02, 6.593e-02, 4.188e-02, -1.424e-01, -3.884e-03, 1.658e-01, -7.226e-02, -5.239e-02, -2.308e-01, -7.426e-02));
	r += V4(-6.943e-03, 9.094e-03, 1.996e-03, 6.683e-03);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-1.882e-01, -2.856e-01, -3.301e-02, 4.126e-01, 1.099e-01, 2.480e-02, 2.290e-01, -7.309e-02, 7.919e-02, -1.900e-01, -1.050e-02, 5.411e-03, -3.956e-02, 1.718e-01, -2.941e-03, -1.277e-01));
	r += mul(s0_1, M4(1.409e-01, -2.742e-01, 4.919e-01, -1.695e-01, 2.661e-01, 1.785e-01, 1.682e-01, -4.951e-01, -1.596e-01, -2.529e-01, 1.635e-01, -1.469e-01, 5.753e-02, 1.035e-01, 3.753e-02, 1.878e-01));
	r += mul(s0_2, M4(-3.080e-02, 2.740e-02, 1.701e-01, -4.793e-02, 3.740e-01, 1.091e-01, 6.425e-02, -2.396e-01, 2.240e-01, -2.112e-01, 2.477e-01, -3.365e-01, -5.183e-03, -1.269e-01, -2.066e-01, 1.741e-01));
	r += mul(s0_3, M4(-8.636e-02, -9.068e-03, -1.520e-01, 1.084e-01, 3.237e-01, -1.184e-01, -4.079e-04, -3.482e-01, -6.622e-03, -4.912e-01, -3.701e-01, 3.195e-03, -2.496e-01, -2.249e-01, 2.483e-01, 2.786e-02));
	r += mul(s0_4, M4(-2.041e-01, 3.370e-01, 6.798e-01, 4.870e-01, 3.470e-01, 5.825e-02, -1.920e-01, -2.800e-01, -7.572e-02, -5.479e-01, -3.836e-01, 8.615e-01, 4.053e-01, -3.841e-02, 5.700e-02, -1.972e-01));
	r += mul(s0_5, M4(-5.637e-01, 3.330e-02, 1.598e-01, -1.052e-01, 4.678e-01, 5.879e-02, 3.446e-01, -2.288e-01, -3.648e-01, 9.936e-01, 3.545e-01, -4.689e-01, -2.243e-01, -1.284e-03, -1.577e-02, -6.372e-02));
	r += mul(s0_6, M4(2.163e-01, -1.284e-01, -7.532e-02, -1.024e-01, 2.556e-01, -1.865e-01, -6.461e-03, 8.384e-02, 3.448e-01, 1.498e-01, 9.871e-02, -2.140e-01, -2.250e-01, 1.067e-01, 1.159e-03, 1.281e-01));
	r += mul(s0_7, M4(-3.357e-02, 2.532e-02, -1.590e-01, -1.675e-01, 2.204e-01, 7.521e-02, -5.623e-02, -3.264e-01, -8.818e-02, 3.341e-01, -1.677e-01, 4.024e-01, 4.333e-01, 1.691e-01, -9.967e-03, -1.036e-01));
	r += mul(s0_8, M4(-1.757e-01, -1.343e-01, -1.178e-01, 4.386e-01, 1.924e-01, 1.244e-01, 8.571e-02, -8.228e-02, -2.110e-01, 5.009e-02, 2.140e-01, 2.549e-01, -5.914e-02, -1.972e-02, -1.464e-01, 2.696e-02));
	r += mul(s1_0, M4(1.725e-01, -3.133e-01, -8.137e-02, 1.017e-01, 2.621e-01, 5.005e-02, 6.802e-02, -3.936e-01, -8.129e-02, -8.069e-03, -2.568e-01, 1.596e-02, -4.766e-02, 4.242e-01, -3.157e-02, -1.824e-01));
	r += mul(s1_1, M4(-2.221e-01, 7.974e-02, 5.789e-02, 1.489e-01, 3.232e-01, -2.051e-01, 2.901e-01, -1.103e-01, -9.935e-03, -3.052e-01, 3.596e-02, 3.588e-01, 8.224e-02, -2.288e-01, -1.203e-01, 3.398e-01));
	r += mul(s1_2, M4(-1.772e-01, 1.766e-03, 1.180e-01, -1.461e-01, 1.392e-01, -8.843e-02, -9.363e-02, -4.724e-02, -2.122e-01, 6.033e-02, 7.314e-02, -2.176e-01, -6.313e-02, 2.378e-01, 2.292e-01, -3.380e-01));
	r += mul(s1_3, M4(1.208e-01, -3.911e-01, -6.199e-03, 1.804e-01, -5.569e-02, 4.786e-02, 7.104e-02, 1.207e-01, 3.562e-03, -5.648e-02, -8.890e-02, -5.827e-02, 2.339e-01, 4.310e-01, 5.781e-01, -7.912e-01));
	r += mul(s1_4, M4(-9.311e-01, 5.191e-01, -2.171e-01, 4.725e-01, 6.387e-01, 4.591e-01, 4.815e-01, -3.935e-01, -3.376e-01, -9.148e-02, -3.061e-01, 2.235e-02, 4.556e-01, -5.098e-01, -7.129e-01, 2.374e-01));
	r += mul(s1_5, M4(-9.842e-02, 1.041e-01, 7.892e-01, 4.053e-01, 3.244e-01, 5.721e-02, -9.897e-02, -5.053e-01, -1.244e-01, 2.725e-01, 5.424e-01, 3.180e-01, 2.862e-01, 1.938e-01, -1.545e-01, -6.146e-02));
	r += mul(s1_6, M4(2.881e-01, 2.829e-02, -3.447e-02, -1.775e-01, -1.230e-01, 1.245e-01, -7.102e-02, -6.618e-02, -1.118e-02, -5.874e-01, -9.249e-02, -9.932e-02, -2.408e-01, 1.928e-01, 9.341e-02, 2.506e-02));
	r += mul(s1_7, M4(3.051e-01, -4.901e-02, 7.022e-02, -1.538e-01, -7.748e-02, -2.190e-01, 1.174e-01, 2.762e-01, 3.254e-01, -2.782e-01, -5.162e-01, 5.856e-02, 1.356e-01, -3.153e-01, -1.888e-01, 1.823e-02));
	r += mul(s1_8, M4(-2.857e-01, -7.515e-02, 1.607e-01, -3.107e-03, 1.655e-01, 1.141e-01, 1.473e-02, -2.531e-01, 2.451e-02, 5.681e-01, 3.340e-01, 3.521e-02, 1.080e-01, 7.839e-02, 6.660e-02, -1.470e-01));
	r += mul(s2_0, M4(-2.881e-01, -5.171e-02, 4.007e-02, 1.198e-01, 2.123e-01, 3.155e-02, -2.490e-02, 7.550e-03, -8.030e-02, 3.558e-01, 6.074e-02, -3.369e-01, -8.878e-02, -7.252e-01, 2.085e-01, 6.737e-01));
	r += mul(s2_1, M4(4.983e-02, 1.158e-01, 2.240e-02, 2.547e-01, -1.157e-01, 2.049e-01, -1.779e-02, -2.678e-01, 1.513e-01, -7.620e-02, -2.193e-01, 1.126e-01, 2.543e-02, -2.630e-01, -2.726e-01, 9.042e-01));
	r += mul(s2_2, M4(-2.594e-01, -6.628e-02, -2.663e-01, 4.911e-01, 4.064e-02, 4.388e-01, -2.715e-01, -1.445e-01, -1.745e-01, -3.272e-02, -8.614e-02, 3.427e-01, 1.429e-01, 4.862e-01, -2.422e-01, 2.023e-02));
	r += mul(s2_3, M4(1.017e-02, -1.323e-01, -1.292e-01, 1.514e-01, 1.972e-01, 1.233e-01, 5.146e-02, -1.454e-02, 2.525e-01, 2.278e-01, 2.379e-01, -1.730e-01, 1.619e-01, -1.127e+00, 3.084e-01, 4.180e-01));
	r += mul(s2_4, M4(-5.293e-01, 6.418e-02, -1.064e-01, -8.676e-02, 1.107e-01, 6.266e-01, 1.555e-01, -2.761e-01, 1.250e-01, -1.511e-01, 2.382e-01, -2.686e-01, 5.499e-01, -9.512e-01, 1.115e+00, 3.550e-01));
	r += mul(s2_5, M4(-2.437e-01, -1.157e-01, 1.383e-01, 4.444e-01, 8.457e-01, -4.221e-01, 6.276e-02, -5.648e-01, 2.880e-02, -2.212e-01, -2.400e-01, 6.811e-02, 6.830e-01, -1.634e+00, -1.022e+00, -7.823e-02));
	r += mul(s2_6, M4(9.629e-03, -2.476e-02, 9.696e-03, -2.338e-02, 3.873e-02, 5.558e-02, 2.559e-02, -7.590e-02, -3.957e-01, 3.058e-02, 7.024e-02, -2.334e-02, 6.917e-01, -3.338e-01, 2.247e-01, -3.067e-01));
	r += mul(s2_7, M4(-6.908e-04, -7.593e-02, -1.275e-01, 1.665e-01, 1.554e-01, -8.151e-02, 9.051e-02, -2.488e-02, 1.662e-01, -2.426e-01, 2.402e-01, -2.749e-01, -1.990e-01, 3.168e-01, 1.716e-01, 1.438e-01));
	r += mul(s2_8, M4(-1.254e-01, -3.892e-02, -4.185e-02, 1.388e-02, 3.767e-01, 9.663e-03, 1.190e-01, -5.356e-01, 7.094e-02, 4.260e-02, -4.658e-02, 8.104e-02, 1.926e-01, 3.542e-01, 2.482e-01, 1.249e-01));
	r += mul(s3_0, M4(3.405e-02, -1.885e-01, -1.040e-01, 5.062e-03, -5.513e-02, 3.922e-02, -8.650e-02, 8.227e-02, 2.437e-01, -3.994e-02, 3.193e-01, 9.154e-02, -2.293e-02, 1.033e-01, -2.547e-02, 2.374e-02));
	r += mul(s3_1, M4(-7.168e-01, -8.335e-03, 5.259e-03, -1.274e-01, 2.771e-01, 2.463e-01, -1.728e-02, -1.399e-01, -7.036e-02, 1.930e-01, -2.562e-01, -9.243e-02, -5.547e-02, 2.212e-01, 1.387e-01, -1.345e-01));
	r += mul(s3_2, M4(-2.067e-01, -4.109e-01, 1.304e-01, -1.870e-01, 6.040e-02, 2.813e-02, -3.689e-02, -1.620e-01, 4.587e-02, -1.716e-01, 5.116e-02, -5.999e-02, 5.603e-02, -2.830e-02, -2.820e-01, 2.011e-01));
	r += mul(s3_3, M4(-2.920e-01, 8.581e-02, -1.401e-03, 2.314e-01, 4.453e-03, -8.029e-02, -8.673e-03, -3.886e-02, -9.833e-02, 2.310e-01, 3.037e-01, -9.265e-02, -1.563e-01, 2.377e-01, -9.902e-02, -8.862e-02));
	r += mul(s3_4, M4(-1.925e-01, -2.103e-01, 1.402e-02, 2.941e-01, 2.526e-01, -3.481e-02, -1.655e-01, -1.431e-01, 9.941e-02, -3.967e-01, -7.008e-02, -3.138e-01, 3.483e-01, -3.446e-02, 1.116e-01, -1.125e-01));
	r += mul(s3_5, M4(-3.335e-01, -1.453e-01, -4.689e-01, -2.926e-02, 1.367e-01, 1.779e-01, 3.578e-01, -2.192e-01, -1.067e-01, -9.823e-02, -5.887e-02, 2.095e-01, 2.945e-01, -2.221e-01, -1.418e-02, 1.038e-01));
	r += mul(s3_6, M4(-5.492e-02, -3.391e-02, -6.036e-02, 4.388e-02, 8.417e-02, -5.417e-02, 2.304e-02, 2.972e-02, 1.202e-01, -7.137e-02, 4.993e-02, 1.563e-01, -1.860e-01, 3.594e-02, -7.237e-02, 4.081e-02));
	r += mul(s3_7, M4(-3.632e-01, -2.261e-02, 2.073e-02, 2.368e-01, -8.365e-02, 1.880e-01, 1.200e-02, -1.481e-01, 2.796e-02, 1.090e-01, -3.185e-02, 4.139e-02, -8.008e-02, 3.694e-02, 3.659e-01, -1.404e-01));
	r += mul(s3_8, M4(-1.738e-01, -5.070e-02, -1.261e-01, 2.850e-01, 2.388e-01, 1.126e-01, 1.068e-02, 8.423e-02, -2.593e-02, -7.908e-02, 5.703e-02, -1.321e-01, -1.939e-01, -3.064e-01, -1.165e-01, 1.324e-01));
	r += V4(1.938e-03, -1.002e-02, 1.894e-03, -8.452e-03);
	return r;
}
void Pass2(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = max(-s0_0, 0.0);
	V4 s1_1 = max(-s0_1, 0.0);
	V4 s1_2 = max(-s0_2, 0.0);
	V4 s1_3 = max(-s0_3, 0.0);
	V4 s1_4 = max(-s0_4, 0.0);
	V4 s1_5 = max(-s0_5, 0.0);
	V4 s1_6 = max(-s0_6, 0.0);
	V4 s1_7 = max(-s0_7, 0.0);
	V4 s1_8 = max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = max(-s2_0, 0.0);
	V4 s3_1 = max(-s2_1, 0.0);
	V4 s3_2 = max(-s2_2, 0.0);
	V4 s3_3 = max(-s2_3, 0.0);
	V4 s3_4 = max(-s2_4, 0.0);
	V4 s3_5 = max(-s2_5, 0.0);
	V4 s3_6 = max(-s2_6, 0.0);
	V4 s3_7 = max(-s2_7, 0.0);
	V4 s3_8 = max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t3[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 3
//!DESC CuNNy-2x8C-BILINEAR-CHROMA-NVL-SH-conv2
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t2, t3
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t2, float2(x, y))
#define l1(x, y) O(t3, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(3.606e-02, 7.978e-02, 1.678e-02, -1.169e-01, 1.567e-01, 1.231e-01, -1.302e-01, -1.397e-01, 4.663e-03, 2.189e-03, -4.337e-02, 1.095e-01, 4.147e-02, -3.333e-02, 4.832e-01, -1.114e-02));
	r += mul(s0_1, M4(-8.323e-02, 6.676e-03, -3.506e-02, -1.334e-01, 6.893e-01, 8.816e-02, 1.202e-02, 1.313e-01, -4.933e-01, -7.898e-02, -1.791e-01, 6.812e-01, 2.720e-01, -2.600e-02, 1.116e-01, -7.652e-01));
	r += mul(s0_2, M4(4.169e-02, -7.599e-02, -1.810e-01, -1.004e-01, 3.162e-01, -7.388e-03, -4.115e-02, 1.503e-02, 5.870e-01, -3.382e-02, -1.017e-01, 4.703e-02, -1.020e+00, 1.584e-03, 2.289e-01, 1.802e-01));
	r += mul(s0_3, M4(-8.999e-03, 1.418e-02, 7.642e-02, -6.076e-02, 5.175e-02, 7.168e-01, -1.619e-01, -1.786e-01, 3.038e-02, 1.284e-01, 1.192e-01, -8.754e-02, 1.108e-01, -7.699e-01, -4.422e-01, -6.264e-02));
	r += mul(s0_4, M4(-6.901e-02, 7.549e-02, 3.363e-01, 6.355e-02, -5.266e-02, -8.618e-02, 1.356e-01, -1.288e-01, -1.771e-02, 1.444e-02, 1.695e-01, -3.496e-01, -2.574e-01, -3.641e-01, -2.027e-01, 5.619e-01));
	r += mul(s0_5, M4(-1.041e-02, -5.950e-02, 1.997e-01, 1.424e-01, -1.832e-01, -9.324e-02, 1.078e-02, -4.832e-02, -3.664e-01, -1.077e-01, -2.180e-03, 8.857e-02, 4.102e-01, -4.240e-02, 2.095e-02, -3.872e-02));
	r += mul(s0_6, M4(-5.078e-03, 2.484e-02, -9.600e-02, 3.574e-02, -2.610e-02, -6.756e-03, 5.966e-02, 4.669e-02, 1.866e-03, -1.587e-01, -1.614e-03, 5.825e-02, 1.212e-02, -1.215e-01, -7.854e-02, 3.848e-03));
	r += mul(s0_7, M4(8.012e-03, -3.001e-02, -1.745e-01, 6.064e-02, 3.010e-02, 5.192e-02, 3.048e-02, -1.506e-03, 4.399e-02, 1.046e-01, -2.461e-02, -6.941e-02, 4.074e-02, 1.041e-01, 1.323e-01, -6.184e-02));
	r += mul(s0_8, M4(6.970e-02, -4.656e-03, -1.328e-02, 6.441e-02, 3.710e-02, -5.691e-02, -7.250e-02, 4.967e-02, -5.636e-02, -8.258e-02, 7.059e-02, 7.201e-02, -1.040e-01, 6.187e-03, 6.022e-02, 7.798e-02));
	r += mul(s1_0, M4(-2.849e-01, -3.025e-01, -2.549e-01, -1.265e-03, -4.997e-02, -9.492e-02, -2.954e-02, 9.151e-02, -2.692e-02, -1.175e-02, 2.533e-02, -1.411e-02, 4.148e-03, -1.007e-01, -8.794e-02, 2.134e-02));
	r += mul(s1_1, M4(2.956e-01, -1.760e-01, -1.868e-01, 1.355e+00, -2.183e-02, -1.683e-01, -5.791e-02, 2.670e-01, -4.182e-02, 5.511e-02, -1.728e-02, -2.845e-02, 1.190e-02, -5.389e-02, -1.411e-02, -2.568e-01));
	r += mul(s1_2, M4(-5.992e-01, 9.038e-03, 2.044e-01, 2.527e-01, -9.512e-01, -1.105e-02, 1.103e-01, -6.685e-02, 7.504e-02, 5.037e-02, 4.589e-02, -7.390e-03, -3.718e-02, -1.076e-02, 1.704e-02, -2.539e-01));
	r += mul(s1_3, M4(-1.008e-01, -1.251e+00, -2.275e+00, -3.736e-02, -4.314e-02, -1.235e-01, -3.091e-02, 1.695e-01, 1.863e-02, -8.232e-02, -6.336e-02, -3.695e-02, -1.099e-02, -8.223e-02, -1.968e-02, 6.901e-02));
	r += mul(s1_4, M4(1.029e-01, 1.081e-01, -2.117e-01, -7.988e-01, 1.968e-01, 1.654e-01, -4.453e-02, 1.143e-01, -6.767e-02, 3.765e-02, -3.392e-01, 1.777e-01, 2.193e-01, -2.512e-01, -2.689e-01, -5.340e-02));
	r += mul(s1_5, M4(-5.640e-01, 4.040e-02, -1.762e-01, -4.729e-01, 1.419e-01, -4.072e-03, 3.789e-02, -7.124e-02, 5.203e-01, 1.382e-01, 8.804e-03, 7.306e-02, 8.899e-02, -1.832e-02, -1.043e-01, 1.612e-01));
	r += mul(s1_6, M4(-8.726e-02, -7.100e-02, 3.778e-01, 1.006e-01, 3.057e-02, 8.360e-02, -6.001e-03, -7.047e-02, 1.740e-03, 4.034e-02, 9.710e-02, -1.096e-02, -6.480e-03, -2.344e-02, 2.174e-01, -5.577e-02));
	r += mul(s1_7, M4(-6.128e-02, -4.932e-01, -3.691e-01, 6.350e-01, -2.700e-04, 1.804e-02, -1.155e-01, -8.621e-03, -4.384e-02, -1.502e-01, 1.567e-01, 1.779e-02, -6.318e-02, 7.395e-02, 2.391e-01, -8.325e-02));
	r += mul(s1_8, M4(9.921e-02, -7.488e-02, 1.893e-03, 2.821e-01, -1.473e-02, 3.846e-03, -6.063e-02, 2.998e-02, 1.400e-01, 8.235e-02, -1.684e-02, -9.499e-02, -8.297e-02, -1.051e-03, 7.971e-02, -1.045e-01));
	r += mul(s2_0, M4(4.539e-02, 2.114e-02, -8.712e-03, 2.815e-02, 9.040e-02, -1.366e-03, 1.969e-01, -1.309e-01, -4.495e-02, 3.118e-02, -1.473e-02, 1.692e-01, 4.223e-02, 1.245e-02, 2.649e-01, -3.538e-02));
	r += mul(s2_1, M4(-2.534e-01, 1.260e-02, 2.013e-01, 5.254e-01, 6.292e-01, -2.677e-02, 4.917e-02, -2.152e-01, -7.264e-02, -6.860e-02, -2.362e-02, 3.843e-01, -7.125e-01, -4.221e-02, 2.460e-01, 1.152e-01));
	r += mul(s2_2, M4(7.887e-02, -6.823e-03, 5.186e-02, 2.222e-01, -3.136e-01, 4.664e-02, 1.008e-01, -5.442e-02, 3.823e-02, -9.279e-03, -1.826e-02, -7.581e-03, -3.701e-01, -5.311e-02, -9.813e-03, -5.391e-03));
	r += mul(s2_3, M4(-9.022e-03, 9.759e-02, 2.905e-02, 4.632e-02, -3.214e-02, -8.062e-01, 2.040e-01, 1.104e-01, -1.682e-02, 1.770e-01, -2.407e-02, -6.834e-02, -7.419e-03, -1.376e-02, 6.374e-02, 1.683e-01));
	r += mul(s2_4, M4(1.883e-01, -2.055e-01, -3.349e-01, -3.720e-01, -4.103e-01, -3.135e-01, -1.175e-01, 5.538e-02, 8.215e-02, -2.399e-03, -7.690e-02, -1.744e-01, 1.760e-01, -2.806e-01, -7.127e-01, 2.766e-01));
	r += mul(s2_5, M4(-1.782e-01, 2.442e-02, -8.655e-02, -2.774e-02, -1.872e-01, 1.763e-01, 1.241e-01, -2.027e-01, -6.315e-02, 8.686e-03, 4.156e-02, 2.490e-02, 1.266e-01, 1.470e-01, 1.136e-02, -1.929e-02));
	r += mul(s2_6, M4(2.176e-02, 2.812e-02, -4.504e-02, 1.646e-02, 4.201e-02, 1.983e-01, -3.096e-01, 3.368e-02, -8.588e-03, -1.741e-01, -1.778e-01, 3.224e-02, 5.990e-02, -1.506e-02, -1.460e-01, -3.240e-02));
	r += mul(s2_7, M4(-9.980e-03, -9.115e-02, -7.817e-02, 6.829e-02, -4.392e-02, -5.741e-02, -9.895e-02, 1.179e-01, 4.444e-02, 1.470e-03, -1.156e-01, -3.219e-02, -4.903e-02, -9.359e-02, 3.692e-03, -1.090e-01));
	r += mul(s2_8, M4(-1.268e-02, -1.718e-03, 6.210e-02, -2.327e-02, 1.096e-01, 6.840e-02, 5.625e-02, -1.030e-02, 3.130e-02, 1.046e-02, -3.179e-02, -1.513e-02, -9.148e-02, 9.320e-02, 1.423e-01, -9.106e-02));
	r += mul(s3_0, M4(-1.667e-02, -1.249e-02, 9.263e-03, 2.181e-01, -7.898e-03, 7.600e-02, 1.392e-01, -1.590e-02, -2.613e-02, -5.197e-02, -3.219e-01, -5.082e-02, 4.471e-02, 1.584e-02, 5.041e-02, 1.260e-02));
	r += mul(s3_1, M4(-2.897e-02, -7.878e-02, 1.528e-01, -2.710e-01, -1.509e-01, 3.183e-02, -1.790e-02, 4.063e-01, -2.804e-01, -6.931e-02, -3.863e-01, 2.944e-01, -3.939e-02, 8.497e-02, 2.584e-02, -2.660e-01));
	r += mul(s3_2, M4(-4.775e-01, 6.018e-02, 8.544e-02, -7.448e-02, 2.628e-01, -3.161e-02, -1.047e-01, 3.351e-01, 1.409e-01, -1.285e-02, -3.089e-02, -1.564e-01, 9.697e-02, 1.864e-02, -5.919e-03, 1.045e-02));
	r += mul(s3_3, M4(1.496e-02, -3.014e-02, 7.267e-02, -1.525e-01, -1.171e-03, -2.625e-02, -2.705e-01, 2.206e-02, 1.071e-02, 1.619e-01, -4.979e-01, -6.486e-02, 2.980e-02, -2.007e-01, -1.698e-01, -6.634e-02));
	r += mul(s3_4, M4(-3.462e-01, -1.517e-01, -5.703e-02, 1.347e-01, 2.861e-01, 1.043e-01, 1.482e-01, -2.055e-01, -6.028e-01, 5.181e-01, 2.813e-01, -9.702e-02, -1.959e-01, 1.164e-01, 1.028e-01, 2.876e-01));
	r += mul(s3_5, M4(4.119e-02, 6.864e-02, -8.882e-03, 2.588e-02, -9.579e-02, -2.277e-02, -2.557e-02, -7.067e-02, -1.220e-02, -1.762e-01, -4.856e-02, -1.046e-01, 5.362e-02, -2.999e-02, -3.478e-02, 3.041e-02));
	r += mul(s3_6, M4(-2.852e-02, -5.679e-02, -1.149e-01, 6.416e-02, -5.571e-02, -1.053e-01, 2.219e-02, 6.543e-02, -6.965e-02, -9.431e-05, 2.572e-01, -8.283e-03, -4.899e-02, -6.547e-02, 8.198e-02, 6.253e-03));
	r += mul(s3_7, M4(1.092e-01, 1.460e-01, 8.188e-03, -4.241e-02, 5.913e-02, 1.626e-01, -1.937e-02, -8.529e-02, -1.778e-01, 1.909e-01, 5.133e-02, 1.183e-02, -2.023e-02, 1.457e-01, 2.120e-01, -7.379e-02));
	r += mul(s3_8, M4(-2.371e-02, -1.222e-02, -3.748e-02, 1.655e-02, -2.415e-02, -8.712e-02, -1.722e-01, 3.336e-02, 3.724e-02, -9.631e-02, 1.876e-01, -6.936e-02, 1.267e-03, -3.277e-02, -5.848e-02, -1.471e-02));
	r += V4(-2.060e-03, -1.007e-03, -3.738e-03, 5.391e-03);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-9.558e-02, 7.057e-02, 9.477e-02, 1.430e-02, -4.849e-02, 2.388e-01, -1.105e-02, -2.711e-01, 2.508e-03, 1.115e-02, -4.957e-02, 3.327e-01, 1.198e-01, -1.695e-01, 1.005e-01, 8.900e-01));
	r += mul(s0_1, M4(-3.440e-02, -1.884e-02, -5.861e-02, 6.421e-02, -8.669e-02, 2.009e-02, 1.397e-01, -1.655e-01, 9.532e-02, -1.084e-01, 2.457e-01, -9.282e-02, -2.121e-01, -7.568e-01, -3.633e-01, -1.186e-01));
	r += mul(s0_2, M4(5.792e-02, -1.790e-01, 5.288e-02, 3.472e-02, -2.211e-02, -3.765e-02, 9.602e-02, 9.801e-02, 4.919e-03, -8.201e-02, -1.896e-01, -1.097e-02, -7.371e-02, 3.403e-02, -3.034e-02, -2.184e-01));
	r += mul(s0_3, M4(5.408e-02, -3.272e-03, -9.580e-03, 8.466e-02, -1.888e-01, 7.326e-02, 1.386e-01, 2.183e-01, -8.365e-04, -3.788e-03, -1.336e-01, 1.306e-01, -1.266e-01, -1.270e-02, -4.625e-02, 8.276e-02));
	r += mul(s0_4, M4(1.572e-01, -2.583e-01, -2.386e-03, -2.768e-02, 1.493e-01, -2.999e-01, -1.545e-01, -1.971e-01, -2.093e-01, -9.661e-02, -1.045e-01, 3.307e-01, 8.957e-01, 1.065e-01, -1.673e-01, -1.343e-01));
	r += mul(s0_5, M4(-3.139e-02, 2.026e-01, 1.739e-02, -1.830e-02, -4.406e-03, 2.409e-01, 9.053e-02, 1.490e-02, 3.894e-02, -1.449e-01, 2.973e-02, -1.895e-01, 1.104e-01, -8.727e-02, -1.637e-02, 4.798e-02));
	r += mul(s0_6, M4(-7.207e-02, 3.896e-02, 1.119e-02, -5.180e-02, -7.293e-03, 3.973e-02, 1.106e-01, -6.134e-02, 2.753e-02, 7.170e-02, -1.361e-01, 5.523e-02, -3.770e-02, 4.786e-02, 2.592e-02, 3.820e-02));
	r += mul(s0_7, M4(-2.533e-02, 1.006e-01, 2.639e-02, -8.483e-03, -8.704e-02, 8.912e-02, -1.293e-01, 7.056e-02, 1.143e-01, -9.214e-02, 5.722e-02, 1.996e-02, 5.975e-02, -2.036e-01, 1.274e-02, -9.063e-03));
	r += mul(s0_8, M4(-1.910e-03, 4.833e-02, 4.076e-02, -1.265e-02, -2.838e-02, 3.002e-02, -3.717e-03, 3.429e-03, 2.008e-03, 4.215e-02, -3.317e-02, -3.682e-02, 4.835e-02, 6.288e-02, 1.262e-01, -9.257e-02));
	r += mul(s1_0, M4(1.318e-01, -2.581e-02, 5.527e-01, 9.547e-01, 1.019e-01, -6.106e-02, -1.435e-01, -7.808e-02, -1.655e-02, -4.236e-02, 1.981e-02, -1.383e-02, 4.088e-02, -4.535e-02, -6.080e-02, -1.265e-01));
	r += mul(s1_1, M4(1.040e-01, -8.591e-01, -4.697e-01, 1.668e-01, 1.838e-01, 4.820e-02, -3.232e-01, 4.056e-01, -2.250e-02, 1.066e-01, -8.708e-02, 3.906e-02, 5.344e-02, 1.630e-02, 5.711e-02, 7.806e-02));
	r += mul(s1_2, M4(7.521e-03, 1.227e-01, -2.459e-01, -6.236e-02, -2.507e-02, -8.266e-02, 1.262e-01, -1.202e-01, -4.806e-02, 9.481e-03, 1.889e-01, 3.980e-02, 1.762e-02, 2.230e-02, -9.257e-02, -1.257e-02));
	r += mul(s1_3, M4(2.128e-01, -2.246e-03, 4.445e-01, 3.350e-01, 6.115e-02, -8.728e-02, 5.210e-02, -1.103e-01, 4.454e-02, -7.396e-02, 1.036e-02, -1.941e-01, 1.884e-02, 1.910e-02, 4.136e-02, -8.321e-02));
	r += mul(s1_4, M4(-6.733e-01, -7.477e-01, -4.893e-01, 2.905e-01, 6.876e-03, 1.860e-01, -3.037e-02, 2.123e-01, 1.279e-01, 1.164e-01, -1.718e-01, -2.480e-01, -1.615e-01, -2.499e-02, 7.935e-02, 1.187e-01));
	r += mul(s1_5, M4(-1.750e-02, -5.930e-01, -3.374e-01, 1.262e-01, 4.523e-02, 7.796e-02, -2.326e-03, -5.792e-03, -1.594e-01, 6.241e-02, 2.220e-01, 2.074e-01, -7.086e-02, -2.261e-01, -2.038e-01, -7.200e-02));
	r += mul(s1_6, M4(6.543e-01, -3.060e-02, 3.076e-01, -9.778e-02, 5.480e-02, -3.725e-02, -2.517e-02, 1.720e-02, -1.808e-02, 3.405e-03, 4.430e-02, -5.746e-02, -2.175e-02, -3.730e-02, 2.079e-02, 1.924e-02));
	r += mul(s1_7, M4(5.581e-01, 7.139e-02, -1.871e-01, 2.279e-01, 9.788e-03, -3.700e-02, 1.139e-01, -3.748e-03, -2.780e-01, 3.728e-02, 1.076e-01, -1.243e-01, -4.581e-02, -1.239e-01, -3.286e-02, -5.016e-02));
	r += mul(s1_8, M4(-1.389e-01, -2.645e-01, -2.124e-01, 2.353e-02, 3.480e-02, -3.764e-02, 5.745e-03, -1.527e-02, 1.131e-02, 1.029e-01, 1.707e-02, -1.962e-02, -1.306e-02, -2.058e-02, -5.239e-02, 3.617e-02));
	r += mul(s2_0, M4(3.669e-02, -6.843e-02, -7.759e-02, 1.014e-01, 2.627e-03, -1.219e-01, 1.449e-02, 1.132e-01, 7.186e-03, -2.520e-02, 6.145e-02, -1.665e-01, -5.241e-02, -7.810e-02, -6.817e-02, -2.231e-01));
	r += mul(s2_1, M4(-2.308e-02, -7.487e-02, 2.159e-01, -2.134e-01, 1.807e-02, -1.166e-01, -5.858e-02, 2.555e-01, 3.875e-02, -1.106e-02, -6.388e-02, 2.021e-03, 5.544e-02, 1.105e-01, -5.185e-02, 7.446e-02));
	r += mul(s2_2, M4(1.051e-02, 1.343e-01, -1.759e-01, -2.108e-02, -2.850e-02, 1.607e-01, -7.557e-02, -1.041e-01, 3.461e-03, -1.266e-02, -6.130e-03, 2.219e-03, 4.992e-02, 1.392e-01, -1.219e-01, -7.496e-02));
	r += mul(s2_3, M4(-4.160e-02, -6.243e-02, 2.863e-02, -1.125e-01, -2.983e-02, -1.319e-01, -8.816e-03, 1.626e-01, -9.572e-02, -2.010e-03, 1.275e-01, 7.674e-02, 1.603e-01, -1.046e-01, -3.045e-01, 3.923e-01));
	r += mul(s2_4, M4(-6.319e-02, 1.343e-01, -3.041e-02, 3.824e-01, -1.647e-01, 6.164e-01, -2.407e-01, 8.716e-02, -2.552e-02, 6.136e-02, -1.268e-02, 1.206e-01, 2.404e-01, 5.004e-01, 5.312e-01, 2.332e-01));
	r += mul(s2_5, M4(4.100e-02, -2.823e-01, 1.595e-02, -8.179e-02, -3.147e-03, -1.945e-01, 1.566e-01, -5.974e-02, -1.449e-03, 4.131e-02, 1.102e-02, -1.170e-02, -3.023e-03, -1.060e-01, -2.159e-01, -1.196e-02));
	r += mul(s2_6, M4(-2.570e-02, 1.142e-02, -5.964e-02, 6.323e-02, 1.421e-01, -5.273e-02, -7.051e-02, 4.419e-02, 6.089e-02, -7.384e-02, 7.382e-03, 1.563e-02, -7.688e-02, 1.020e-01, -2.734e-01, 6.864e-02));
	r += mul(s2_7, M4(-9.296e-03, 4.532e-02, 7.886e-02, -1.514e-02, 5.516e-02, 1.626e-01, 1.255e-01, 1.651e-02, 2.064e-02, -3.278e-03, -2.479e-02, -4.765e-03, 1.879e-01, 1.165e-01, 7.315e-02, -5.671e-02));
	r += mul(s2_8, M4(-2.313e-02, -5.926e-02, -7.030e-02, -1.353e-02, -5.002e-03, -6.616e-02, -6.046e-02, 3.343e-02, 3.487e-03, -1.239e-02, 8.788e-03, 2.605e-02, 1.112e-01, -5.204e-02, -1.111e-01, 1.506e-03));
	r += mul(s3_0, M4(1.675e-01, 1.608e-02, 1.861e-02, 5.214e-01, -4.644e-02, 1.471e-01, -2.250e-02, 3.029e-01, 1.668e-04, -4.064e-02, -2.577e-01, -1.952e-01, -4.899e-02, 7.549e-02, 4.195e-03, 2.078e-01));
	r += mul(s3_1, M4(3.425e-02, 9.109e-02, -1.225e-01, 5.569e-02, -4.144e-02, -1.923e-01, -2.513e-03, -3.238e-01, 1.953e-01, 3.802e-01, -4.133e-01, 5.576e-01, -8.325e-02, -8.769e-02, 1.492e-02, -9.282e-02));
	r += mul(s3_2, M4(-3.068e-02, 4.653e-02, 4.967e-02, 2.839e-02, 6.987e-02, 2.369e-02, -1.258e-01, 1.135e-01, -3.207e-02, -2.396e-01, 1.712e-01, -8.721e-02, -5.277e-03, 3.922e-03, 3.140e-02, 7.544e-02));
	r += mul(s3_3, M4(3.561e-01, 7.729e-02, -7.600e-01, 1.672e-01, 2.517e-02, 1.083e-01, 3.190e-02, 2.167e-01, -6.222e-02, 3.477e-03, 4.301e-01, -1.508e-03, 1.214e-01, -5.884e-02, -1.286e-01, 3.359e-01));
	r += mul(s3_4, M4(7.038e-02, 9.177e-02, -2.036e-01, -7.207e-02, 1.406e-01, -3.347e-01, -2.823e-01, -2.607e-01, 4.713e-01, -3.018e-01, -7.191e-01, 1.915e-01, 1.804e-01, -5.146e-01, -1.391e-01, -4.619e-01));
	r += mul(s3_5, M4(7.070e-02, -5.585e-02, 5.819e-02, 3.070e-02, 1.285e-01, 9.203e-02, 2.248e-01, 4.478e-02, -5.694e-02, 8.116e-02, 1.136e-01, -8.926e-02, 6.391e-03, 8.032e-02, 4.870e-02, 4.024e-02));
	r += mul(s3_6, M4(2.892e-02, 8.229e-02, 2.314e-02, -3.516e-02, 6.880e-02, 1.443e-02, -3.954e-02, -6.829e-03, 4.682e-01, -1.177e-01, -4.483e-02, -2.863e-02, 2.734e-02, -5.225e-02, 9.468e-02, -4.622e-02));
	r += mul(s3_7, M4(1.020e-01, -1.460e-01, -7.212e-02, 2.684e-02, 1.213e-01, -5.405e-02, -1.871e-01, 2.081e-02, 1.070e-01, -3.313e-01, -1.493e-01, 3.998e-02, 4.041e-02, -1.896e-01, -7.377e-02, 3.984e-03));
	r += mul(s3_8, M4(5.921e-02, 6.491e-02, 3.184e-02, 3.425e-02, -6.772e-02, 3.093e-02, 3.065e-02, 3.720e-02, -4.774e-02, 3.728e-01, 9.070e-03, -7.661e-02, -2.612e-02, 2.887e-02, 5.878e-02, 3.375e-02));
	r += V4(1.978e-04, 8.893e-04, -2.170e-03, 1.727e-03);
	return r;
}
void Pass3(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = max(-s0_0, 0.0);
	V4 s1_1 = max(-s0_1, 0.0);
	V4 s1_2 = max(-s0_2, 0.0);
	V4 s1_3 = max(-s0_3, 0.0);
	V4 s1_4 = max(-s0_4, 0.0);
	V4 s1_5 = max(-s0_5, 0.0);
	V4 s1_6 = max(-s0_6, 0.0);
	V4 s1_7 = max(-s0_7, 0.0);
	V4 s1_8 = max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = max(-s2_0, 0.0);
	V4 s3_1 = max(-s2_1, 0.0);
	V4 s3_2 = max(-s2_2, 0.0);
	V4 s3_3 = max(-s2_3, 0.0);
	V4 s3_4 = max(-s2_4, 0.0);
	V4 s3_5 = max(-s2_5, 0.0);
	V4 s3_6 = max(-s2_6, 0.0);
	V4 s3_7 = max(-s2_7, 0.0);
	V4 s3_8 = max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 4
//!DESC CuNNy-2x8C-BILINEAR-CHROMA-NVL-SH-out
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(1.596e-02, 1.157e-02, -3.767e-04, 1.185e-03, 1.541e-02, -1.805e-02, 7.509e-03, -1.922e-02, -5.052e-02, 1.593e-02, 4.350e-02, 8.759e-03, 1.308e-02, 5.354e-03, -4.294e-03, -2.831e-03));
	r += mul(s0_1, M4(1.764e-02, 2.026e-02, 3.933e-04, -2.666e-03, -2.236e-01, -2.179e-02, -5.052e-02, -3.162e-02, 1.680e-01, -1.361e-02, -2.483e-02, 4.056e-02, -1.045e-02, -4.539e-03, 8.433e-03, 4.621e-03));
	r += mul(s0_2, M4(9.804e-03, 3.399e-03, -2.654e-03, 4.279e-03, -1.837e-02, -1.359e-01, -1.254e-02, -7.448e-02, -1.296e-02, 1.035e-01, -2.091e-03, -2.698e-02, 1.294e-03, 5.876e-03, 1.708e-03, -2.334e-03));
	r += mul(s0_3, M4(-1.704e-01, -1.033e-01, 2.250e-02, 2.487e-02, -5.116e-04, -1.104e-02, 8.561e-03, -2.153e-02, 5.966e-02, -2.850e-02, 1.085e-01, -2.097e-02, 2.901e-02, 3.581e-02, 1.145e-02, 2.977e-03));
	r += mul(s0_4, M4(-3.897e-02, -8.179e-02, -4.891e-02, -3.858e-02, -1.636e-01, 9.151e-02, -4.552e-01, 7.819e-02, 3.018e-01, 3.158e-01, -6.959e-01, -1.172e-01, -2.070e-02, -5.849e-02, -2.921e-02, -7.850e-03));
	r += mul(s0_5, M4(-2.179e-03, -2.412e-02, 9.052e-03, -2.216e-02, 1.597e-02, 3.487e-01, -4.278e-03, 1.688e-01, -4.946e-02, 4.049e-02, 4.133e-02, -4.174e-01, 3.601e-02, 5.066e-02, 1.474e-02, 8.457e-03));
	r += mul(s0_6, M4(4.189e-01, 8.840e-02, 1.665e-01, -1.665e-01, 4.525e-03, -2.785e-03, -6.572e-04, -1.212e-02, 4.667e-04, -1.353e-02, 4.857e-02, 1.502e-02, 8.210e-03, -3.930e-03, 1.362e-01, 8.844e-02));
	r += mul(s0_7, M4(-3.454e-02, 3.260e-02, -3.764e-03, 4.528e-02, -1.916e-02, -2.236e-02, 3.410e-02, 4.954e-03, -3.520e-02, 2.089e-02, 9.446e-03, 1.719e-02, -9.632e-03, 7.446e-02, -8.618e-02, -1.404e-02));
	r += mul(s0_8, M4(2.769e-03, 9.247e-03, -9.669e-03, 3.040e-03, -1.114e-04, -2.892e-02, 4.845e-02, 9.088e-02, -2.557e-02, -7.055e-02, 6.858e-03, 1.040e-02, 3.028e-03, -4.574e-02, 3.298e-02, 1.205e-02));
	r += mul(s1_0, M4(-1.104e-02, -4.619e-03, -4.370e-03, 3.890e-04, 3.206e-02, 8.582e-03, 6.322e-03, -4.968e-03, -2.141e-02, -8.676e-04, -1.863e-02, 1.163e-03, -1.492e-02, -2.231e-02, 3.965e-03, -7.015e-04));
	r += mul(s1_1, M4(-6.201e-03, -1.255e-02, 4.166e-03, -5.838e-03, 2.140e-01, 1.057e-01, 6.303e-02, 9.487e-03, 1.400e-02, -3.256e-02, 1.145e-02, -3.004e-03, -7.310e-04, 1.752e-02, -4.859e-04, -9.868e-04));
	r += mul(s1_2, M4(-2.739e-03, -2.485e-03, 1.671e-03, -1.499e-03, 2.559e-02, 1.724e-01, -1.635e-02, 4.949e-02, -7.016e-03, 1.134e-02, -2.501e-03, -1.224e-02, -2.445e-03, -1.329e-02, -1.254e-03, 3.050e-03));
	r += mul(s1_3, M4(7.071e-02, 4.209e-02, 1.644e-02, 2.935e-02, -9.777e-03, -1.715e-02, 3.650e-02, -3.002e-03, -1.493e-02, 2.240e-02, -4.138e-02, 1.430e-02, 4.060e-02, -5.798e-03, -5.432e-02, -1.898e-02));
	r += mul(s1_4, M4(3.808e-02, 4.407e-02, 3.359e-02, 2.902e-02, -1.385e-01, 1.608e-02, 5.027e-02, 1.703e-01, 1.460e-01, -2.422e-02, 9.814e-02, -9.700e-02, 4.821e-02, 8.130e-02, -2.738e-02, -5.879e-02));
	r += mul(s1_5, M4(5.699e-03, 3.162e-02, 1.016e-04, 1.402e-02, -7.446e-02, -2.607e-01, 2.989e-02, -4.060e-02, 3.238e-02, 1.569e-01, 5.127e-03, 1.372e-01, -2.302e-02, -2.533e-02, -1.691e-02, -3.024e-02));
	r += mul(s1_6, M4(-9.058e-02, -5.579e-02, -9.347e-02, -1.353e-01, 1.377e-02, -9.779e-05, 1.911e-04, -1.146e-02, -1.190e-02, 7.295e-03, -3.503e-02, -4.009e-03, -2.647e-01, 4.150e-02, 5.196e-02, -9.329e-02));
	r += mul(s1_7, M4(6.135e-03, -3.022e-02, -1.377e-02, -3.411e-03, 2.921e-02, 4.138e-02, -1.397e-02, 1.272e-02, -2.280e-02, -6.345e-02, 3.026e-02, -6.352e-02, -2.339e-01, -6.206e-01, 3.884e-01, 5.498e-01));
	r += mul(s1_8, M4(-6.620e-04, -5.331e-03, 5.846e-03, 1.020e-02, 2.075e-02, 2.542e-02, -5.432e-02, -7.405e-02, -2.915e-03, 3.385e-02, -6.994e-03, 5.322e-02, -2.922e-02, 4.852e-02, -1.240e-02, 9.422e-03));
	r += mul(s2_0, M4(3.612e-02, -2.689e-02, 3.875e-02, -2.083e-02, -6.933e-02, 2.876e-02, 2.192e-02, -1.153e-02, -3.096e-02, 4.814e-02, 3.348e-03, 2.652e-03, -8.124e-03, -6.314e-04, -7.120e-03, 3.685e-03));
	r += mul(s2_1, M4(-1.440e-01, 6.749e-02, -8.529e-02, -1.593e-02, 1.023e-02, 1.042e-01, -1.240e-02, -4.276e-02, 8.179e-02, -3.776e-02, 9.758e-03, -2.359e-02, 9.748e-03, -9.635e-04, -5.207e-03, -9.826e-03));
	r += mul(s2_2, M4(-1.175e-02, -1.379e-01, 3.022e-03, -1.250e-02, 7.997e-03, 2.778e-02, 3.190e-03, 3.717e-03, -1.914e-02, 2.308e-02, -2.325e-03, -7.984e-03, 5.216e-03, -8.188e-05, -6.245e-03, -4.393e-03));
	r += mul(s2_3, M4(-6.185e-03, -2.738e-02, 1.082e-01, 4.668e-03, -9.294e-03, 1.392e-01, -2.564e-01, 2.114e-01, 1.820e-01, -3.965e-02, 3.444e-02, 4.229e-03, -4.463e-03, -6.600e-03, -1.904e-02, 2.950e-03));
	r += mul(s2_4, M4(1.874e-01, 1.556e-01, 1.199e-01, 3.096e-01, 5.067e-01, -5.918e-01, 2.049e-01, 2.363e-02, 3.161e-01, -6.855e-01, 2.549e-01, -4.437e-02, -2.358e-01, -1.110e-01, 6.043e-02, -3.982e-02));
	r += mul(s2_5, M4(-1.023e-02, 6.512e-02, -5.043e-02, -8.896e-02, -3.430e-02, 9.771e-02, 1.071e-02, 3.266e-02, -4.824e-02, 3.115e-02, -3.136e-02, 2.405e-02, 2.441e-03, -3.967e-02, -2.147e-02, 8.866e-03));
	r += mul(s2_6, M4(7.953e-03, 1.717e-02, -2.759e-02, 8.888e-03, -9.800e-03, -5.020e-02, 1.307e-01, -7.251e-02, -1.445e-01, 5.658e-02, 4.047e-02, 1.363e-01, -5.771e-04, -1.610e-03, 2.743e-03, -1.006e-02));
	r += mul(s2_7, M4(-1.184e-02, -2.655e-02, -1.289e-02, -1.876e-02, -9.371e-02, 5.851e-02, 1.158e-01, -4.367e-01, 2.120e-02, 6.632e-03, 2.388e-01, -5.150e-01, -1.893e-02, 1.442e-02, -2.744e-01, -3.159e-02));
	r += mul(s2_8, M4(-2.557e-02, -3.623e-02, 1.372e-02, -5.577e-03, -6.372e-02, 2.807e-02, -5.922e-02, 8.870e-02, -1.419e-02, -4.148e-02, -6.616e-02, -1.355e-02, -1.879e-02, -1.008e-01, 3.589e-02, -1.480e-01));
	r += mul(s3_0, M4(8.776e-02, -6.468e-03, -5.794e-02, -1.962e-03, -3.373e-02, -1.521e-02, 1.973e-02, 1.436e-02, -1.475e-02, -3.421e-03, -1.835e-02, 7.164e-03, 3.640e-04, -3.897e-03, 1.402e-02, -3.066e-04));
	r += mul(s3_1, M4(-1.255e-01, 1.782e-01, 1.362e-01, 8.696e-02, -3.020e-02, -2.338e-02, 3.606e-03, 7.394e-03, 2.264e-02, -1.406e-02, 1.846e-03, -1.017e-02, -2.161e-02, -1.728e-02, 1.053e-02, -6.829e-03));
	r += mul(s3_2, M4(6.433e-03, -7.873e-02, 1.411e-01, 1.411e-01, -9.445e-03, -3.069e-02, -3.220e-03, 5.399e-03, 2.318e-03, -8.123e-03, 2.678e-03, 6.646e-03, -2.432e-02, 1.782e-02, -1.771e-02, 1.202e-02));
	r += mul(s3_3, M4(-2.401e-01, 1.993e-02, 1.452e-02, 6.910e-02, 8.667e-02, 3.463e-02, -1.327e-01, -4.238e-02, 1.197e-04, 8.391e-03, -5.604e-02, -3.063e-02, 2.947e-02, 2.001e-03, 8.349e-03, 8.220e-04));
	r += mul(s3_4, M4(3.129e-01, -2.087e-02, -6.765e-01, -5.566e-01, -8.825e-02, 5.266e-03, -1.188e-02, -3.532e-02, 1.172e-01, 1.520e-02, 1.596e-02, -4.971e-02, 2.109e-01, 6.665e-02, -1.663e-02, -2.313e-02));
	r += mul(s3_5, M4(-4.126e-03, 1.271e-01, 8.032e-02, 9.787e-02, -2.435e-02, -8.185e-02, -1.729e-02, -6.875e-02, -2.684e-02, 5.083e-02, -2.332e-02, -2.126e-02, -2.103e-01, 3.606e-01, -6.459e-02, 6.541e-02));
	r += mul(s3_6, M4(-6.665e-02, 5.966e-03, 6.663e-02, 2.049e-04, -2.627e-03, -1.480e-02, 1.013e-01, 1.802e-02, -1.320e-03, -1.227e-02, 9.431e-03, -1.055e-02, -1.402e-02, 1.799e-03, 1.459e-02, 2.093e-02));
	r += mul(s3_7, M4(-5.048e-02, -5.958e-02, 5.139e-02, 1.047e-01, 2.093e-02, 3.750e-02, 4.090e-02, 9.125e-02, 1.740e-02, 2.839e-02, 1.368e-01, 7.744e-02, 8.500e-02, -1.131e-01, 2.115e-01, -6.867e-04));
	r += mul(s3_8, M4(2.247e-02, 2.279e-02, -1.481e-02, 1.409e-02, 1.799e-02, 3.462e-02, -1.320e-02, 8.877e-03, -1.739e-03, 2.060e-02, 3.418e-03, 5.238e-02, -6.309e-01, 5.684e-01, -6.680e-01, 9.003e-01));
	r += V4(-7.603e-04, -8.992e-04, -8.271e-04, -7.259e-04);
	return tanh(r);
}
void Pass4(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = max(-s0_0, 0.0);
	V4 s1_1 = max(-s0_1, 0.0);
	V4 s1_2 = max(-s0_2, 0.0);
	V4 s1_3 = max(-s0_3, 0.0);
	V4 s1_4 = max(-s0_4, 0.0);
	V4 s1_5 = max(-s0_5, 0.0);
	V4 s1_6 = max(-s0_6, 0.0);
	V4 s1_7 = max(-s0_7, 0.0);
	V4 s1_8 = max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = max(-s2_0, 0.0);
	V4 s3_1 = max(-s2_1, 0.0);
	V4 s3_2 = max(-s2_2, 0.0);
	V4 s3_3 = max(-s2_3, 0.0);
	V4 s3_4 = max(-s2_4, 0.0);
	V4 s3_5 = max(-s2_5, 0.0);
	V4 s3_6 = max(-s2_6, 0.0);
	V4 s3_7 = max(-s2_7, 0.0);
	V4 s3_8 = max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 5
//!DESC CuNNy-2x8C-BILINEAR-CHROMA-NVL-SH-shuffle
//!STYLE PS
//!IN t2, INPUT
float4 Pass5(float2 pos) {
	float2 pt = float2(GetInputPt());
	const static float3x3 rgb2yuv = {0.299, 0.587, 0.114, -0.169, -0.331, 0.5, 0.5, -0.419, -0.081};
	const static float3x3 yuv2rgb = {1, -0.00093, 1.401687, 1, -0.3437, -0.71417, 1, 1.77216, 0.00099};
	float4 r = 0.0;
	float2 size = float2(GetInputSize());
	float2 f = frac(pos * size);
	float3 yuv = mul(rgb2yuv, INPUT.SampleLevel(SL, pos, 0).rgb);
	int2 i = int2(f * 2.0);
	r.r = t2.SampleLevel(SP, (float2(0.5, 0.5) - f) * pt + pos, 0)[2*i.y + i.x];
	r.r += yuv.r;
	r.a = 1.0;
	r.r = clamp(r, 0.0, 1.0);
	float3 px = mul(yuv2rgb, float3(r.r, yuv.yz));
	return float4(px, 1.0);
}
