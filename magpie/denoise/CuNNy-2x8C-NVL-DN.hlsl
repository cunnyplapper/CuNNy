// CuNNy 2x8C BILINEAR CHROMA NVL DN
// Copyright (c) 2024 cunnyplapper

// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public
// License along with this program.  If not, see <https://www.gnu.org/licenses/>.
/* ------------------------------------------------------------------- */

//!MAGPIE EFFECT
//!VERSION 3
//!OUTPUT_WIDTH INPUT_WIDTH * 2
//!OUTPUT_HEIGHT INPUT_HEIGHT * 2

//!TEXTURE
Texture2D INPUT;


//!SAMPLER
//!FILTER POINT
SamplerState SP;

//!SAMPLER
//!FILTER LINEAR
SamplerState SL;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t1;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t2;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t3;

//!PASS 1
//!DESC CuNNy-2x8C-BILINEAR-CHROMA-NVL-DN-in
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN INPUT
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) (dot(float3(0.2516006529331207, 0.4855281710624695, 0.10743149369955063), O(INPUT, float2(x, y)).rgb) + -0.6308929324150085)
float4 f0(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	V4 r = 0.0;
	r += V4(-1.166e-02, -1.576e-03, 2.056e-01, -9.490e-02) * s0_0;
	r += V4(-6.348e-01, 3.995e-02, -6.677e-02, 1.848e-01) * s0_1;
	r += V4(9.924e-02, -3.982e-02, -7.467e-02, 3.214e-01) * s0_2;
	r += V4(-1.214e-02, -4.218e-03, -5.627e-02, -1.341e-01) * s0_3;
	r += V4(5.845e-01, -6.582e-01, -4.865e-01, -4.736e-01) * s0_4;
	r += V4(-1.113e-02, 6.597e-01, 3.332e-02, 1.315e-01) * s0_5;
	r += V4(1.935e-02, 6.486e-03, -1.179e-01, 2.349e-01) * s0_6;
	r += V4(-1.615e-02, 8.173e-03, 1.908e-01, -1.267e-01) * s0_7;
	r += V4(-1.763e-02, -1.182e-02, 3.704e-01, -4.738e-02) * s0_8;
	r += V4(-5.666e-04, 1.711e-04, 7.937e-04, 1.056e-03);
	return r;
}
float4 f1(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	V4 r = 0.0;
	r += V4(-2.815e-03, 2.905e-02, 2.183e-01, -1.531e-03) * s0_0;
	r += V4(-2.350e-02, -3.601e-04, -3.781e-02, -1.498e-01) * s0_1;
	r += V4(4.691e-04, 1.089e-02, -1.773e-01, 1.163e-02) * s0_2;
	r += V4(-1.316e-01, 1.803e-01, 2.920e-01, -5.922e-02) * s0_3;
	r += V4(6.698e-01, -5.293e-01, -1.311e-01, 5.678e-01) * s0_4;
	r += V4(5.069e-02, 2.242e-01, -1.428e-01, -1.716e-01) * s0_5;
	r += V4(1.064e-02, -2.759e-02, -3.604e-02, -2.085e-02) * s0_6;
	r += V4(-5.411e-01, 1.135e-01, -3.327e-02, -1.186e-01) * s0_7;
	r += V4(-2.704e-02, -2.459e-02, 5.120e-02, -1.895e-03) * s0_8;
	r += V4(-9.416e-04, 4.619e-03, -1.247e-03, 3.778e-02);
	return r;
}
void Pass1(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	min16float s0_0 = l0(-1.0, -1.0);
	min16float s0_1 = l0(0.0, -1.0);
	min16float s0_2 = l0(1.0, -1.0);
	min16float s0_3 = l0(-1.0, 0.0);
	min16float s0_4 = l0(0.0, 0.0);
	min16float s0_5 = l0(1.0, 0.0);
	min16float s0_6 = l0(-1.0, 1.0);
	min16float s0_7 = l0(0.0, 1.0);
	min16float s0_8 = l0(1.0, 1.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
}
//!PASS 2
//!DESC CuNNy-2x8C-BILINEAR-CHROMA-NVL-DN-conv1
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2, t3
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-2.271e-02, 1.262e-02, -2.046e-01, 6.043e-02, -1.890e-01, -4.247e-01, -4.440e-01, -2.172e-01, 4.436e-02, -2.028e-03, 1.045e-01, 2.588e-02, -8.900e-02, 8.195e-02, 2.339e-02, 2.914e-01));
	r += mul(s0_1, M4(5.633e-02, -3.081e-02, -7.612e-02, -1.873e-01, -3.314e-02, -4.904e-01, -4.930e-01, -2.608e-01, 1.087e-01, -4.088e-02, -2.503e-01, 2.150e-02, -1.091e-01, 8.183e-02, 1.488e-02, 7.721e-02));
	r += mul(s0_2, M4(1.194e-01, -6.791e-02, -1.078e-01, -9.532e-02, -8.522e-02, 9.114e-02, -5.532e-02, 5.239e-02, -3.723e-02, 1.244e-01, -1.007e-01, -9.814e-03, 7.989e-03, -1.591e-02, 4.178e-02, 4.309e-02));
	r += mul(s0_3, M4(-1.901e-01, -1.002e-01, -2.899e-02, 2.383e-01, 1.537e-02, -3.445e-01, 2.829e-02, 9.827e-01, -7.785e-02, -9.636e-02, 6.380e-02, 1.863e-01, -5.359e-02, 5.158e-03, -4.360e-02, -4.922e-02));
	r += mul(s0_4, M4(2.567e-01, 2.180e-01, -1.229e-01, -1.343e-01, -1.576e-02, 6.019e-01, 4.085e-01, -1.372e-01, 1.091e-01, -9.927e-02, 2.096e-01, -4.166e-02, -1.263e-01, -4.975e-01, 9.982e-02, 1.280e-01));
	r += mul(s0_5, M4(-1.187e-01, -2.209e-01, -3.118e-01, -7.456e-02, -2.333e-01, 6.274e-02, 1.265e-01, 2.870e-02, 2.178e-01, -8.246e-03, -5.148e-02, 1.259e-01, 2.014e-02, -2.096e-01, -1.135e-01, -5.237e-02));
	r += mul(s0_6, M4(-5.172e-02, 1.790e-01, 1.959e-01, 2.247e-01, 2.179e-01, 4.950e-01, 2.282e-01, 3.915e-01, -1.666e-01, -7.626e-02, -2.190e-02, 6.754e-02, -1.410e-01, -6.059e-02, -1.158e-01, 7.270e-02));
	r += mul(s0_7, M4(-4.926e-01, -5.814e-02, 1.239e+00, 1.791e-01, -3.666e-02, 1.792e-01, 1.225e-01, 4.956e-01, 1.010e-01, 6.594e-02, -6.086e-02, 2.705e-03, 4.461e-02, 7.686e-02, -3.373e-03, 1.436e-01));
	r += mul(s0_8, M4(-8.162e-03, 7.732e-03, -5.054e-02, -2.549e-01, -2.243e-02, -6.067e-02, 1.233e-01, -2.840e-02, 3.929e-02, -1.906e-02, -6.754e-02, -2.958e-02, -2.873e-02, 6.620e-02, 3.079e-03, -7.398e-02));
	r += mul(s1_0, M4(-2.878e-03, -1.072e-01, 2.300e-01, -2.295e-01, 3.175e-01, -1.120e-01, -1.495e-02, -3.362e-01, 1.125e-01, 8.836e-02, -1.999e-02, -1.606e-01, -1.774e-01, -1.190e-01, 1.592e-02, -7.238e-02));
	r += mul(s1_1, M4(6.869e-02, -5.674e-02, -2.062e-01, 2.058e-02, -5.098e-02, -3.015e-01, -9.266e-02, -4.493e-01, 2.388e-01, 1.134e-01, 2.366e-01, -1.556e-02, -1.382e-01, 4.538e-02, 2.083e-01, 6.084e-02));
	r += mul(s1_2, M4(-5.153e-03, 4.629e-03, -5.230e-02, -9.419e-02, 5.857e-03, -1.833e-01, -9.320e-03, -1.854e-01, 2.550e-01, -4.615e-02, 9.082e-02, 1.447e-02, -7.933e-02, -2.829e-02, -3.290e-02, -3.496e-02));
	r += mul(s1_3, M4(2.404e-01, 9.718e-02, -1.065e-01, 1.427e-01, 1.004e+00, 5.754e-02, 1.568e-01, 1.605e-01, 8.241e-02, 1.010e-01, 2.204e-02, -1.958e-01, -1.743e-01, 1.534e-02, 1.009e-01, -1.738e-02));
	r += mul(s1_4, M4(-2.173e-01, 3.375e-01, 1.826e-01, -1.538e-01, -5.675e-01, 9.833e-01, -3.176e-01, -9.360e-02, -9.491e-02, 3.258e-01, 4.147e-02, 1.959e-01, -3.480e-01, -1.096e-01, -1.664e-01, -1.552e-01));
	r += mul(s1_5, M4(4.576e-02, -7.422e-02, -6.298e-02, -1.218e-01, -1.129e-01, 1.644e-01, -1.629e-01, -1.426e-01, 5.009e-02, 5.780e-02, 1.243e-01, 3.525e-02, 1.847e-02, 5.399e-03, -9.710e-03, 4.229e-02));
	r += mul(s1_6, M4(1.563e-01, -2.195e-01, 9.679e-03, 1.199e-01, 3.499e-01, 5.556e-02, 2.231e-01, 2.188e-02, 9.360e-02, 8.915e-02, 9.066e-02, -8.572e-02, -2.445e-02, 3.365e-02, 8.262e-02, 6.470e-02));
	r += mul(s1_7, M4(-1.494e-01, 3.013e-01, 2.621e-01, 6.137e-01, -2.627e-01, 3.678e-01, 4.289e-01, 1.169e-01, -1.542e-01, -9.178e-02, -2.933e-02, -1.802e-01, -7.507e-02, -2.694e-02, 2.515e-02, -1.016e-01));
	r += mul(s1_8, M4(8.111e-02, 2.905e-01, -3.048e-01, 1.987e-01, -9.337e-02, 6.018e-02, -4.101e-02, 1.910e-02, -2.592e-02, 3.878e-02, 3.973e-02, 1.081e-02, 5.443e-02, 5.905e-02, 1.529e-01, 1.695e-01));
	r += mul(s2_0, M4(-2.724e-01, -2.159e-01, 5.013e-03, -2.193e-01, 8.188e-02, -1.572e-02, 1.204e-01, -1.013e-01, 8.355e-02, 1.755e-01, -6.295e-02, 4.599e-02, -1.902e-01, 1.138e-01, 1.877e-01, 3.255e-02));
	r += mul(s2_1, M4(3.921e-01, -3.207e-01, 4.032e-01, -4.030e-01, -3.270e-02, 3.715e-01, 1.533e-01, 1.427e-01, -8.769e-02, 8.032e-02, -7.707e-02, 1.103e-01, 1.429e-01, 2.911e-01, 3.395e-01, 4.085e-01));
	r += mul(s2_2, M4(-3.701e-01, 2.824e-01, 9.366e-02, -7.687e-02, 1.084e-01, -8.193e-02, 1.243e-01, -1.782e-01, 1.554e-01, 3.589e-02, 1.191e-01, -5.481e-02, 4.583e-03, 1.221e-01, -2.524e-02, -7.791e-03));
	r += mul(s2_3, M4(5.822e-02, 5.650e-02, -1.244e-02, 5.779e-02, -2.416e-01, 2.163e-02, 2.553e-01, -1.511e-01, -2.673e-02, -8.224e-02, 3.762e-02, -9.349e-03, -6.359e-03, -5.255e-02, 8.026e-02, -4.103e-01));
	r += mul(s2_4, M4(2.083e-02, 2.299e-01, -1.889e-01, 1.391e-01, -1.571e-01, -2.648e-01, -2.917e-01, 2.865e-01, -9.937e-02, 1.243e-02, 5.214e-01, -9.376e-03, -2.193e-01, -1.474e-02, -2.290e-01, 3.194e-01));
	r += mul(s2_5, M4(1.830e-01, -3.482e-01, 7.873e-02, -5.769e-03, -5.901e-03, 2.078e-01, -2.351e-02, 1.919e-01, -3.773e-02, 4.168e-01, 2.440e-01, 5.215e-01, 4.502e-02, -1.832e-01, 1.724e-01, 2.296e-02));
	r += mul(s2_6, M4(4.511e-02, 1.451e-02, 5.364e-02, 1.097e-01, -4.797e-03, 5.867e-03, 2.746e-02, 9.153e-02, -4.844e-03, -1.175e-01, -9.815e-02, -1.150e-01, -2.234e-01, 1.062e-03, -2.617e-01, -3.049e-01));
	r += mul(s2_7, M4(-4.482e-02, -1.740e-02, 7.724e-02, 2.316e-02, 2.681e-01, 6.766e-02, -1.588e-01, -2.292e-01, -1.516e-02, -1.810e-01, -1.960e-01, -1.047e-01, 1.724e-01, -8.972e-02, -1.967e-01, -2.157e-02));
	r += mul(s2_8, M4(1.175e-01, 1.010e-01, -8.485e-03, 9.429e-02, -4.642e-02, 8.033e-02, -9.908e-02, -1.572e-01, -3.357e-02, -2.867e-01, -2.874e-02, -1.758e-01, 2.273e-01, -7.102e-02, -1.260e-01, 4.198e-03));
	r += mul(s3_0, M4(-1.878e-02, 7.493e-02, -1.110e-01, 1.401e-02, -6.452e-02, -5.289e-03, 6.475e-02, 4.370e-01, 2.037e-03, -1.333e-01, -4.919e-02, -7.069e-02, 8.732e-02, 5.296e-02, -2.288e-01, -1.369e-02));
	r += mul(s3_1, M4(-7.834e-02, -2.654e-01, -4.248e-01, 2.050e-01, -1.116e-02, 2.048e-01, 2.401e-01, 5.670e-02, 2.114e-01, -1.016e-01, 6.770e-02, -1.357e-01, -4.383e-02, 7.395e-02, 2.018e-01, -2.888e-01));
	r += mul(s3_2, M4(9.732e-02, -1.760e-02, -2.180e-01, 9.854e-02, -2.773e-01, 2.900e-01, 2.276e-01, 3.146e-01, -1.171e-01, 8.306e-02, -8.694e-02, 5.776e-02, 1.096e-01, -1.001e-01, 8.785e-02, 1.970e-01));
	r += mul(s3_3, M4(-1.440e-01, -4.129e-02, -4.256e-02, 3.148e-02, 4.389e-01, -4.741e-02, -1.129e-01, -9.755e-02, -8.907e-02, 6.068e-02, 8.558e-02, 1.723e-02, 5.443e-02, 9.532e-02, -1.100e-01, 2.429e-01));
	r += mul(s3_4, M4(7.824e-01, 2.243e-01, 2.885e-02, -3.215e-02, -2.446e-01, 5.185e-01, -1.880e-01, -5.161e-02, -1.053e-01, 3.111e-01, 2.331e-01, 3.561e-01, -1.623e-01, 2.633e-02, -1.600e-01, -5.215e-01));
	r += mul(s3_5, M4(-7.754e-01, 6.955e-02, -4.715e-02, -1.135e-01, 1.523e-01, -2.862e-01, 1.956e-01, -2.181e-01, 2.140e-01, -1.341e-01, 3.667e-01, -8.019e-02, 3.575e-01, 8.929e-02, -1.016e-02, 1.171e-02));
	r += mul(s3_6, M4(7.560e-02, 6.977e-02, -1.150e-02, -7.752e-02, 2.132e-02, 2.902e-03, -1.950e-02, 1.646e-01, 1.046e-01, 5.115e-02, 3.560e-02, -3.528e-02, -9.306e-02, -5.007e-02, 3.061e-01, 2.967e-01));
	r += mul(s3_7, M4(9.443e-02, 1.242e-01, -1.250e-01, 1.072e-01, -2.367e-01, -7.273e-02, -3.089e-01, -1.579e-01, -1.601e-01, -5.098e-01, -3.133e-01, -5.175e-01, -2.241e-01, -2.841e-01, 1.121e-01, -3.643e-01));
	r += mul(s3_8, M4(-7.731e-02, -8.852e-02, 2.705e-01, -2.003e-02, -2.416e-02, -1.015e-02, -2.027e-02, 4.904e-02, 1.237e-01, -1.039e-01, 4.591e-02, 4.739e-02, -3.555e-02, 5.432e-02, -2.540e-01, -7.032e-03));
	r += V4(1.135e-03, -2.687e-03, 3.472e-03, -3.758e-03);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(1.466e-02, 9.155e-02, -1.265e-01, -7.591e-02, 2.208e-02, -1.949e-01, -1.363e-01, 2.900e-01, 1.917e-01, 2.421e-01, -8.068e-02, -1.510e-01, -2.781e-01, -2.014e-02, -1.646e-01, -1.308e-01));
	r += mul(s0_1, M4(2.133e-01, -6.863e-03, -1.418e-01, 1.481e-02, 6.909e-02, -6.398e-02, 7.835e-02, 1.894e-01, 3.847e-01, 1.848e-01, 4.312e-02, -2.845e-01, -1.352e-01, -2.031e-01, -6.428e-02, 1.875e-01));
	r += mul(s0_2, M4(2.165e-01, 1.397e-01, 3.247e-02, 4.911e-02, -1.406e-01, 1.726e-02, -7.515e-02, 6.173e-02, 3.862e-02, 1.144e-01, -2.162e-01, -1.325e-01, -1.543e-01, -1.440e-01, 8.456e-03, -5.196e-02));
	r += mul(s0_3, M4(-1.716e-02, 8.882e-02, 6.236e-02, 2.070e-01, 3.213e-01, 1.456e-01, -6.973e-01, 4.709e-01, 3.876e-01, 2.353e-01, -7.889e-02, -1.687e-01, -1.388e-01, -1.994e-01, 1.339e-01, -1.083e-01));
	r += mul(s0_4, M4(3.895e-01, 9.138e-02, 2.316e-01, 1.408e-01, 1.445e-01, -1.323e-01, 1.135e+00, 2.077e-01, 4.262e-01, 1.463e-01, 1.730e-01, 6.825e-02, -4.940e-01, -2.088e-01, 8.173e-02, 1.852e-01));
	r += mul(s0_5, M4(4.706e-01, 3.596e-01, 1.016e-01, -3.853e-01, 1.035e-02, 1.124e-01, 2.607e-01, 8.818e-02, 1.811e-01, 1.191e-01, 1.802e-02, -1.274e-01, -1.382e-01, -1.445e-01, 6.452e-03, -4.800e-02));
	r += mul(s0_6, M4(3.428e-01, 1.467e-01, -1.789e-02, 7.346e-02, -2.040e-01, -1.816e-01, -2.666e-01, -2.456e-01, 2.881e-01, 4.437e-01, -5.431e-02, -4.466e-02, -2.280e-01, -2.183e-01, 3.880e-02, -1.065e-01));
	r += mul(s0_7, M4(1.412e-01, -1.002e-01, 4.149e-01, 4.801e-01, -1.929e-01, 8.547e-02, 7.204e-02, -4.051e-01, 2.608e-01, 5.236e-01, 1.052e-01, 3.070e-02, -3.561e-01, -1.853e-01, -2.280e-02, -3.803e-02));
	r += mul(s0_8, M4(8.623e-02, -8.776e-02, -3.113e-02, 1.498e-01, -7.129e-03, -1.450e-01, 1.312e-01, 1.229e-01, 2.148e-01, 3.414e-01, -8.216e-02, -1.126e-01, -1.465e-01, -2.221e-01, -8.988e-02, -7.689e-02));
	r += mul(s1_0, M4(7.693e-02, 1.168e-03, 1.285e-01, 2.470e-01, -9.812e-02, 1.527e-02, -5.453e-02, -1.276e-02, 6.263e-01, 2.745e-01, 1.043e-01, -6.271e-02, -2.738e-01, -1.747e-01, 1.665e-01, 1.657e-01));
	r += mul(s1_1, M4(1.593e-01, 7.385e-02, 1.041e-01, -1.238e-02, -2.002e-02, -5.662e-02, -1.931e-02, 1.431e-01, 3.344e-01, 2.171e-01, -1.337e-01, -1.419e-02, -3.476e-01, -9.336e-02, 1.510e-01, 1.321e-02));
	r += mul(s1_2, M4(8.045e-02, 9.302e-02, -4.118e-02, -1.431e-01, 2.007e-01, 1.416e-01, 2.428e-01, -2.945e-02, 1.852e-01, 9.911e-02, 1.130e-01, 1.888e-01, -1.591e-01, -9.296e-02, -2.844e-02, 1.130e-01));
	r += mul(s1_3, M4(4.544e-01, 4.994e-02, -1.078e-01, 1.340e-01, -3.278e-01, -6.466e-02, -1.150e-01, 6.397e-01, 4.867e-01, 6.089e-01, 1.676e-01, -1.291e-01, -4.693e-01, -2.884e-01, -1.180e-01, -4.044e-02));
	r += mul(s1_4, M4(2.343e-01, 2.931e-01, -3.289e-02, 1.333e-01, 2.881e-01, 1.988e-01, 1.344e-01, -1.867e-02, 2.988e-01, 4.096e-01, -1.116e-01, -1.937e-01, -4.422e-01, -2.809e-01, -3.702e-02, 1.086e-01));
	r += mul(s1_5, M4(-7.341e-02, 2.113e-01, 7.428e-02, -9.120e-03, 4.192e-02, 1.921e-01, 8.032e-02, -1.931e-01, 2.241e-01, 2.126e-01, -2.573e-01, 6.786e-02, -2.512e-01, -3.547e-01, -9.018e-02, 2.509e-01));
	r += mul(s1_6, M4(4.639e-01, 2.055e-01, -7.378e-02, 2.547e-01, 1.891e-01, -1.512e-01, -8.398e-02, -1.919e-01, 1.294e-01, 2.223e-01, -1.848e-02, 5.938e-02, -3.194e-01, -2.958e-01, 4.234e-03, 5.418e-02));
	r += mul(s1_7, M4(7.060e-02, 5.143e-01, 3.235e-01, -3.048e-01, 5.334e-02, -2.804e-01, 1.787e-01, 2.476e-01, 1.714e-01, 1.997e-01, -7.778e-02, -8.801e-02, -3.600e-01, -5.488e-01, -1.081e-01, 6.061e-02));
	r += mul(s1_8, M4(6.652e-02, 1.702e-01, -2.983e-02, -6.113e-01, -6.515e-02, -2.095e-01, 1.475e-01, -1.362e-01, 6.818e-02, 1.499e-01, 5.827e-02, -3.273e-03, -7.139e-02, -2.397e-01, -5.555e-02, 1.175e-01));
	r += mul(s2_0, M4(-3.656e-01, -4.492e-02, -1.624e-02, 1.322e-01, -3.142e-01, -1.101e-01, 2.795e-02, -4.952e-02, 9.836e-02, 1.211e-01, -1.627e-02, -2.653e-02, 2.488e-01, -1.069e-01, 1.430e-01, -2.214e-01));
	r += mul(s2_1, M4(-3.765e-01, -3.076e-01, 2.834e-01, 1.255e+00, 1.647e-02, -1.685e-01, -6.616e-02, -2.100e-01, 2.752e-01, 1.850e-01, -3.018e-01, -1.207e-01, -2.251e-01, 3.194e-03, 1.743e-01, -7.474e-02));
	r += mul(s2_2, M4(-1.548e-01, -7.837e-02, 1.596e-01, 5.615e-02, 8.124e-02, -4.936e-03, 1.931e-01, 1.448e-02, 6.626e-02, 2.662e-02, 2.058e-01, -9.236e-02, -2.344e-02, -7.135e-02, -3.384e-01, -2.007e-01));
	r += mul(s2_3, M4(-4.362e-01, -3.275e-01, -9.623e-03, 2.414e-01, 1.764e-01, 1.329e-02, 4.486e-03, -1.501e-02, 1.840e-01, 3.762e-02, 1.648e-01, -1.196e-02, -6.518e-02, 6.198e-02, 5.566e-01, -1.441e-01));
	r += mul(s2_4, M4(-2.782e-01, -5.317e-01, -5.140e-01, -1.135e-01, -1.777e-01, -6.700e-02, 2.168e-01, 5.229e-02, -6.180e-02, 9.842e-02, 2.113e-01, -1.123e-01, 1.248e-01, 1.320e-01, -1.858e-01, -1.790e-01));
	r += mul(s2_5, M4(-1.648e-01, -2.549e-01, 4.320e-01, 2.037e-01, 1.132e-01, -6.769e-02, -3.043e-01, 2.407e-01, -2.001e-02, -9.308e-02, -2.427e-01, 7.489e-02, 2.751e-02, -2.222e-01, 5.956e-02, 5.339e-01));
	r += mul(s2_6, M4(4.120e-03, -8.911e-02, 5.644e-02, -5.211e-02, 1.795e-02, 6.484e-02, 7.174e-02, 3.580e-02, -1.139e-01, -7.176e-02, -9.545e-02, 3.100e-02, -1.753e-01, 4.613e-02, 9.007e-02, -3.724e-02));
	r += mul(s2_7, M4(-1.744e-01, -2.569e-01, 8.006e-02, -1.022e-01, -1.238e-01, 3.240e-01, 3.517e-02, 5.186e-02, -5.715e-02, -1.022e-01, -4.216e-02, 1.867e-01, -4.961e-02, -5.724e-02, -2.570e-01, 4.074e-01));
	r += mul(s2_8, M4(-7.442e-02, -2.300e-01, 5.286e-02, 3.608e-02, 3.015e-02, -9.632e-03, -1.626e-01, -1.747e-01, 2.779e-03, 4.597e-02, 1.166e-01, 1.195e-01, 1.020e-01, 2.237e-01, -2.900e-01, -1.075e-01));
	r += mul(s3_0, M4(-1.908e-01, -1.951e-01, 7.280e-03, -7.745e-02, -3.546e-01, -7.762e-02, -4.004e-02, 3.299e-01, -1.368e-01, -1.442e-01, -1.091e-02, 7.788e-02, 2.840e-04, 7.786e-02, -1.706e-01, -2.020e-02));
	r += mul(s3_1, M4(1.241e-01, -9.618e-03, 4.744e-02, 1.958e-01, 5.018e-02, 1.303e-01, -4.509e-02, -5.237e-01, 1.318e-02, 9.437e-02, 2.568e-01, 4.759e-02, 2.548e-01, 3.335e-01, -1.343e-01, -1.607e-01));
	r += mul(s3_2, M4(-1.587e-01, 2.653e-02, -1.109e-01, 6.014e-02, -1.449e-01, -4.857e-02, -2.067e-01, -2.271e-01, 1.014e-01, 1.100e-01, -1.952e-01, 3.719e-02, -2.518e-02, -1.429e-01, 3.110e-01, 2.189e-01));
	r += mul(s3_3, M4(-2.981e-01, -8.315e-02, 6.911e-02, -7.679e-03, 1.461e-01, -2.271e-01, -1.642e-01, -1.869e-01, 1.415e-01, 1.343e-01, -1.334e-01, -1.200e-01, 1.180e-02, 3.837e-02, -1.987e-01, -8.472e-02));
	r += mul(s3_4, M4(-9.674e-02, -4.172e-01, -2.330e-01, 4.043e-01, -3.784e-01, -9.871e-02, -3.521e-02, -3.877e-01, 3.011e-01, 1.931e-01, -2.758e-02, -5.371e-01, -5.750e-01, -5.603e-01, 3.978e-01, -2.322e-01));
	r += mul(s3_5, M4(-2.699e-01, 2.557e-01, 6.513e-02, -1.179e-01, -2.566e-01, -9.735e-02, -1.966e-01, -3.811e-01, 1.490e-01, 2.132e-01, 1.132e-01, -2.060e-01, 2.071e-02, -4.656e-01, -2.234e-01, -4.006e-01));
	r += mul(s3_6, M4(-1.645e-01, -1.802e-01, 5.826e-03, 1.105e-01, 8.945e-02, 1.391e-01, -1.119e-01, -1.603e-02, 1.325e-01, 9.517e-02, 5.892e-02, 2.385e-02, 1.054e-01, 6.838e-02, -1.174e-01, -3.588e-02));
	r += mul(s3_7, M4(-2.272e-01, -4.089e-01, -1.378e-02, -9.058e-02, 3.075e-01, 3.845e-01, -9.880e-02, 1.411e-01, -7.676e-03, -1.141e-01, 3.306e-01, 1.851e-01, 3.564e-01, 1.414e-01, 1.602e-01, 5.316e-02));
	r += mul(s3_8, M4(-2.085e-01, -5.844e-01, -4.531e-02, 1.091e-01, 5.185e-02, 4.167e-01, 3.458e-03, 1.376e-01, 5.101e-02, -9.159e-02, -2.725e-01, 3.135e-01, -1.427e-01, 5.042e-01, 2.589e-01, -4.954e-02));
	r += V4(-4.621e-04, 8.599e-04, 2.334e-03, -6.473e-04);
	return r;
}
void Pass2(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = max(-s0_0, 0.0);
	V4 s1_1 = max(-s0_1, 0.0);
	V4 s1_2 = max(-s0_2, 0.0);
	V4 s1_3 = max(-s0_3, 0.0);
	V4 s1_4 = max(-s0_4, 0.0);
	V4 s1_5 = max(-s0_5, 0.0);
	V4 s1_6 = max(-s0_6, 0.0);
	V4 s1_7 = max(-s0_7, 0.0);
	V4 s1_8 = max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = max(-s2_0, 0.0);
	V4 s3_1 = max(-s2_1, 0.0);
	V4 s3_2 = max(-s2_2, 0.0);
	V4 s3_3 = max(-s2_3, 0.0);
	V4 s3_4 = max(-s2_4, 0.0);
	V4 s3_5 = max(-s2_5, 0.0);
	V4 s3_6 = max(-s2_6, 0.0);
	V4 s3_7 = max(-s2_7, 0.0);
	V4 s3_8 = max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t3[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 3
//!DESC CuNNy-2x8C-BILINEAR-CHROMA-NVL-DN-conv2
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t2, t3
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t2, float2(x, y))
#define l1(x, y) O(t3, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(8.549e-02, 5.527e-02, -3.125e-02, 2.964e-03, 9.258e-02, -1.154e-01, -9.240e-02, 2.531e-02, -1.480e-01, -6.419e-02, 2.899e-02, 1.958e-01, -3.180e-02, 2.740e-02, -4.393e-02, 1.204e-01));
	r += mul(s0_1, M4(-1.948e-01, 3.636e-02, 8.264e-02, -4.321e-02, -3.030e-02, 6.907e-02, 5.652e-03, 1.362e-01, 1.032e-01, -6.083e-02, 1.210e-01, -2.063e-01, 1.775e-01, 2.782e-02, 1.583e-01, -3.483e-01));
	r += mul(s0_2, M4(1.626e-02, 2.705e-03, -1.211e-01, -1.568e-01, 8.763e-02, 5.897e-02, 4.576e-02, -5.013e-02, -9.426e-02, -1.152e-01, -8.070e-02, 1.216e-01, -2.635e-02, -8.325e-02, -8.976e-04, 1.336e-01));
	r += mul(s0_3, M4(9.123e-02, -1.939e-03, -1.262e-01, -2.992e-02, 3.887e-01, 3.154e-01, 7.064e-02, 1.851e-01, 2.671e-02, -9.230e-03, 2.643e-02, 1.400e-02, -1.101e-01, 8.892e-02, -4.391e-02, 1.996e-01));
	r += mul(s0_4, M4(-5.361e-01, -5.337e-02, 1.626e-01, -7.585e-01, -1.803e-01, -8.518e-02, -1.719e-01, 4.040e-02, -4.203e-01, -4.683e-02, -1.841e-01, 8.216e-02, -2.780e-01, -1.947e-01, 4.466e-01, 1.293e-01));
	r += mul(s0_5, M4(1.570e-01, -9.915e-03, -3.503e-01, -1.851e-01, 1.470e-01, -1.237e-02, 1.289e-02, -7.357e-02, -6.542e-02, -6.517e-02, 1.479e-01, 7.732e-03, 9.447e-02, 1.239e-01, -2.219e-01, -2.977e-02));
	r += mul(s0_6, M4(-1.638e-01, -8.235e-02, 1.255e-01, -2.154e-02, 2.084e-01, -7.978e-02, -7.903e-02, -3.019e-02, -2.846e-01, -1.919e-01, 2.841e-01, -1.085e-01, 1.641e-02, 7.088e-03, -7.950e-03, 7.544e-02));
	r += mul(s0_7, M4(-1.681e-01, -6.994e-02, -2.057e-02, -3.358e-02, -9.746e-02, 1.354e-01, 1.543e-01, 9.875e-02, -4.495e-02, -4.695e-02, -5.965e-02, -3.745e-02, -1.053e-01, -2.100e-02, 1.118e-01, -1.145e-01));
	r += mul(s0_8, M4(-4.078e-02, -4.725e-02, -1.746e-01, 6.777e-02, -1.814e-02, -4.693e-02, -4.455e-02, -8.812e-05, 1.166e-01, 5.426e-02, -9.909e-02, -2.417e-02, -4.458e-02, -4.305e-03, -2.436e-03, 1.400e-01));
	r += mul(s1_0, M4(5.445e-02, 7.398e-02, -6.549e-02, -1.655e-01, -1.232e-01, -1.529e-01, 4.593e-03, 2.080e-02, 2.023e-02, -1.751e-02, -3.287e-02, 5.212e-02, 1.201e-01, -1.150e-01, 5.846e-02, -1.553e-01));
	r += mul(s1_1, M4(1.196e-01, -1.462e-01, -1.041e-03, 3.803e-02, -2.779e-01, -3.057e-01, 3.779e-01, 6.420e-02, -2.001e-01, -8.862e-02, 4.749e-02, 2.008e-01, -3.349e-01, -1.825e-01, -7.331e-02, 1.758e-01));
	r += mul(s1_2, M4(-4.661e-02, -6.504e-02, -9.687e-02, 9.704e-02, 5.592e-02, 2.739e-02, -6.282e-02, 1.146e-01, 4.306e-02, 5.984e-02, 8.626e-02, -1.342e-01, 2.504e-02, -1.989e-02, -9.772e-03, 3.145e-02));
	r += mul(s1_3, M4(3.875e-01, -4.355e-01, -1.450e-01, 7.180e-02, -6.308e-01, -2.446e-01, -1.206e-02, 2.260e-01, 5.057e-02, 1.685e-01, -3.525e-01, 3.252e-01, 1.547e-01, -2.119e-01, -1.853e-01, 1.323e-01));
	r += mul(s1_4, M4(-1.606e-01, -2.069e-02, 4.394e-01, -4.335e-01, 9.088e-02, -2.286e-01, 3.119e-01, 4.601e-01, -4.723e-01, -1.468e-01, 3.833e-01, 2.265e-01, 2.718e-01, 9.425e-02, 1.013e-01, 3.309e-01));
	r += mul(s1_5, M4(-1.773e-01, -2.558e-02, 6.727e-03, 3.579e-02, 8.266e-03, -1.756e-01, -4.735e-02, -9.818e-02, 1.921e-02, 1.300e-01, 1.727e-01, -7.993e-02, 2.954e-02, -6.583e-02, 1.587e-01, 1.343e-01));
	r += mul(s1_6, M4(1.785e-01, 1.653e-02, -2.323e-01, 1.363e-02, -3.291e-01, 7.338e-02, 3.076e-01, -1.511e-01, -1.659e-01, -1.772e-02, 1.738e-01, 1.231e-01, 1.714e-01, -2.236e-02, -1.088e-01, -7.437e-02));
	r += mul(s1_7, M4(2.916e-01, -9.934e-02, 1.507e-01, -1.131e-02, -2.082e-01, -1.777e-01, -1.870e-01, 1.094e-01, 3.652e-01, 4.127e-01, 4.571e-01, 2.689e-01, -3.892e-02, -3.470e-01, 2.107e-01, -3.476e-02));
	r += mul(s1_8, M4(8.049e-04, 3.845e-02, 2.654e-02, -2.658e-02, 1.778e-02, 9.556e-02, 6.911e-02, -9.979e-02, -1.868e-02, -9.776e-02, 2.020e-01, -9.832e-02, 6.669e-02, 6.595e-02, 4.956e-02, -1.356e-02));
	r += mul(s2_0, M4(2.892e-02, 8.861e-02, 4.468e-02, -6.861e-02, -1.942e-02, -9.078e-03, -7.006e-02, -2.989e-02, 1.082e-01, 1.792e-01, -2.133e-01, -2.040e-01, -1.274e-01, 1.603e-02, 1.218e-01, 4.050e-02));
	r += mul(s2_1, M4(-7.544e-02, 3.125e-02, 1.597e-01, -6.247e-02, -5.842e-02, -4.477e-02, -2.504e-01, 4.931e-01, -1.099e-01, 8.493e-02, -5.611e-03, -8.458e-02, 2.854e-01, 1.657e-01, -1.040e-01, 5.061e-02));
	r += mul(s2_2, M4(-9.315e-02, 6.505e-02, -1.167e-01, 2.396e-02, -4.826e-02, -6.663e-02, 3.701e-01, -5.557e-02, 3.577e-02, 2.508e-02, 3.069e-03, -6.909e-02, 7.409e-03, 5.239e-02, 6.842e-02, -3.170e-02));
	r += mul(s2_3, M4(-2.604e-02, -1.544e-01, -8.900e-02, 1.849e-01, -9.598e-02, 1.593e-02, 2.573e-01, -2.085e-01, -4.333e-01, 1.244e-01, 6.847e-02, -3.624e-01, -4.102e-01, -1.544e-01, 4.209e-01, 2.052e-01));
	r += mul(s2_4, M4(1.447e-02, -1.832e-02, 2.692e-01, -4.501e-01, 1.267e-01, -1.397e-01, -4.584e-01, 4.807e-01, 1.014e-01, -5.743e-03, 2.401e-02, 2.431e-01, 1.236e-01, 1.387e-01, -1.449e-01, -3.858e-01));
	r += mul(s2_5, M4(-5.754e-02, 7.087e-02, -4.793e-02, 1.763e-01, -1.742e-02, 2.489e-02, 6.922e-02, -1.026e-01, 1.388e-02, 2.763e-03, -3.649e-02, 9.928e-03, -2.428e-02, 1.306e-01, -2.650e-02, 6.792e-02));
	r += mul(s2_6, M4(2.113e-01, 2.607e-01, -2.310e-01, 2.198e-01, 8.720e-03, -9.918e-02, 1.477e-02, -1.335e-01, 1.489e-01, -1.567e-01, -1.929e-01, -7.537e-03, 1.197e-01, 2.672e-01, -9.488e-02, 1.150e-01));
	r += mul(s2_7, M4(-1.752e-01, 3.902e-02, 1.606e-01, 6.063e-02, -1.536e-01, -1.985e-02, 9.282e-02, -4.183e-02, -3.372e-02, -1.190e-02, -5.060e-02, -5.526e-02, -3.032e-01, -4.143e-02, 1.834e-02, 1.676e-01));
	r += mul(s2_8, M4(1.343e-01, 1.626e-02, 3.379e-02, -3.518e-02, 1.859e-02, -1.702e-02, -7.642e-02, -5.112e-02, -2.090e-02, -1.045e-02, 4.310e-02, 4.375e-02, -4.748e-02, 3.502e-03, 7.093e-02, 4.149e-03));
	r += mul(s3_0, M4(7.398e-02, -6.401e-02, -9.574e-02, 1.372e-01, -7.971e-02, -9.077e-02, 9.854e-02, -1.527e-01, 1.411e-01, -9.066e-02, 7.182e-02, -2.448e-02, -3.274e-01, 1.457e-01, 3.037e-01, 5.757e-03));
	r += mul(s3_1, M4(-4.402e-02, 4.347e-03, -5.197e-02, 9.743e-02, -1.869e-03, -1.925e-02, -2.658e-02, 3.345e-01, -2.789e-01, -6.593e-02, 1.626e-01, 2.236e-01, -7.320e-02, 1.182e-01, -5.798e-02, 5.623e-01));
	r += mul(s3_2, M4(-2.414e-02, -1.292e-03, 8.569e-02, -1.482e-01, 2.998e-03, -1.170e-02, -8.335e-02, -6.041e-02, 2.094e-01, 9.132e-02, -1.470e-01, -5.145e-01, -1.444e-01, 8.428e-02, -2.057e-01, 1.571e-01));
	r += mul(s3_3, M4(2.667e-01, -6.828e-02, -2.959e-01, 2.067e-01, 2.811e-02, -7.974e-02, 1.041e-01, -2.588e-01, 1.939e-01, 1.338e-01, 6.742e-02, -3.727e-01, 3.557e-02, -2.105e-01, -3.825e-02, -1.269e-01));
	r += mul(s3_4, M4(-4.957e-01, -4.931e-01, 2.266e-01, -2.568e-01, 1.265e-01, -1.776e-01, -2.055e-01, 1.340e-01, 1.111e+00, -9.758e-02, -9.512e-01, 6.558e-01, -2.130e-01, 7.292e-02, 7.520e-01, -3.298e-02));
	r += mul(s3_5, M4(2.028e-01, -3.497e-02, 9.428e-02, 1.066e-01, 6.842e-03, -1.282e-01, 9.750e-02, 7.122e-02, 1.880e-01, -1.320e-01, -5.294e-01, -5.464e-01, -1.334e-01, -2.191e-01, 2.100e-01, 7.211e-02));
	r += mul(s3_6, M4(-1.265e-01, -2.963e-02, 4.092e-02, -1.636e-02, 1.258e-01, -7.345e-02, -1.261e-01, 5.779e-02, -1.131e-01, -1.567e-01, 1.381e-01, -1.146e-01, -5.502e-02, 1.486e-01, -1.116e-01, 2.010e-01));
	r += mul(s3_7, M4(-2.548e-01, -3.036e-02, 2.624e-01, -4.021e-03, 1.376e-01, 1.082e-01, -1.205e-02, -8.283e-03, -1.412e-01, 1.490e-01, -1.342e-02, 1.251e-01, 1.792e-03, -1.316e-01, 1.741e-01, 2.540e-02));
	r += mul(s3_8, M4(1.676e-01, -1.151e-01, -2.150e-01, -8.882e-02, -6.936e-02, -4.963e-02, 1.616e-01, 3.272e-02, 2.751e-01, -2.481e-02, -1.587e-01, -2.685e-01, -5.738e-02, 5.536e-02, 6.048e-02, -1.041e-02));
	r += V4(-5.640e-03, -2.162e-03, 5.198e-03, 5.813e-03);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(9.703e-03, -1.192e-01, -4.679e-02, -5.417e-02, 4.169e-02, -1.595e-02, -1.987e-01, -3.202e-02, -7.751e-03, -2.763e-02, -6.639e-02, -1.893e-01, -1.552e-02, 1.821e-01, 1.061e-01, 1.552e-01));
	r += mul(s0_1, M4(-5.634e-02, -2.047e-01, 7.897e-02, -1.461e-01, 6.413e-02, 2.114e-01, -2.661e-02, 4.381e-02, -2.284e-02, -3.193e-01, -2.329e-01, -6.061e-02, -9.974e-02, 2.076e-01, 8.268e-02, 2.392e-01));
	r += mul(s0_2, M4(-5.260e-02, -9.484e-02, 7.393e-02, 3.261e-02, 2.201e-02, -9.373e-03, -6.346e-02, 2.041e-02, 1.886e-02, -3.551e-02, 3.604e-02, -7.406e-02, 3.259e-02, 5.391e-02, 1.177e-02, 6.270e-02));
	r += mul(s0_3, M4(7.721e-03, -1.140e-01, -1.371e-01, 8.863e-02, 2.099e-02, 2.266e-02, 3.994e-01, -4.686e-02, -4.942e-02, -9.207e-02, -1.694e-01, 5.985e-02, -9.523e-03, 4.548e-02, 6.372e-02, 6.851e-02));
	r += mul(s0_4, M4(-1.788e-02, 8.719e-02, -4.170e-01, -4.323e-01, -2.564e-01, -9.382e-02, 1.361e-01, 9.469e-02, 3.543e-02, 1.960e-01, 3.900e-01, -6.884e-01, -3.573e-02, -6.396e-01, -2.076e-01, -7.303e-02));
	r += mul(s0_5, M4(9.543e-02, -2.949e-01, -2.592e-01, 3.183e-02, -4.547e-02, -2.078e-02, -1.343e-01, 9.795e-02, 7.113e-02, 2.369e-02, -2.420e-02, -3.296e-02, 3.454e-01, 2.213e-01, 1.439e-01, -2.163e-01));
	r += mul(s0_6, M4(4.209e-02, -7.546e-02, 2.649e-02, -2.671e-02, -6.890e-02, -1.371e-02, -1.760e-01, -3.559e-03, 5.097e-02, -5.603e-02, 6.556e-02, -4.351e-02, -3.492e-04, -2.667e-02, -2.050e-02, -8.604e-03));
	r += mul(s0_7, M4(7.957e-02, -1.209e-01, 1.465e-01, 8.355e-02, 9.600e-02, 8.961e-04, -3.429e-02, -7.593e-02, -7.088e-03, -3.529e-02, 1.450e-01, 9.854e-02, 5.104e-02, 3.021e-02, 1.147e-01, -1.361e-01));
	r += mul(s0_8, M4(2.159e-02, -1.084e-01, -4.613e-02, 3.128e-02, -9.148e-03, -5.961e-02, 8.618e-02, 5.067e-02, 1.725e-01, -5.355e-02, 2.012e-02, 8.850e-02, -6.235e-02, 7.283e-02, -1.410e-01, -1.488e-02));
	r += mul(s1_0, M4(-2.270e-02, 5.696e-02, 6.886e-02, 1.575e-02, 2.876e-04, -8.424e-02, -1.651e-01, -2.167e-01, -7.416e-04, -2.204e-03, -3.877e-03, 1.371e-01, 4.548e-02, -2.011e-01, -2.239e-02, -1.548e-01));
	r += mul(s1_1, M4(1.408e-01, -2.026e-01, -1.923e-01, 1.837e-03, -4.324e-02, -1.833e-01, -2.264e-01, -3.257e-01, -3.627e-02, 7.092e-02, -1.782e-02, -2.789e-02, 6.017e-02, -7.499e-02, -1.786e-02, -6.360e-01));
	r += mul(s1_2, M4(1.763e-02, -1.109e-03, 1.446e-02, -2.568e-02, 5.044e-02, -6.691e-02, -1.141e-01, -1.914e-03, 5.322e-02, 2.082e-02, 4.020e-02, 5.725e-02, 7.682e-02, -1.213e-01, -1.743e-01, -1.763e-01));
	r += mul(s1_3, M4(1.295e-01, -1.272e-01, -8.044e-02, -2.302e-01, -3.037e-02, -7.935e-02, -1.525e-01, 1.642e-01, 5.997e-02, 2.476e-01, 2.543e-01, 2.844e-02, 7.163e-04, 2.454e-01, -1.320e-01, 6.706e-02));
	r += mul(s1_4, M4(8.716e-02, -4.636e-01, 7.236e-02, -1.923e-01, 2.193e-01, -5.293e-01, -3.496e-01, -1.406e-01, -8.864e-02, 3.329e-01, -2.863e-01, 4.875e-01, -1.205e-01, -2.444e-02, -7.328e-01, -1.301e-01));
	r += mul(s1_5, M4(1.025e-02, -1.747e-02, 6.271e-02, -8.732e-02, 4.900e-02, -1.808e-02, 1.729e-02, -2.241e-02, -7.620e-02, 1.812e-02, 4.469e-02, 6.042e-02, -2.432e-02, -1.987e-02, -7.386e-03, 2.212e-01));
	r += mul(s1_6, M4(-1.456e-02, 2.083e-02, -5.297e-02, 9.194e-02, 1.202e-01, 7.844e-02, 2.065e-01, 2.448e-02, -3.273e-02, -5.294e-02, -7.698e-03, -1.752e-01, 4.479e-03, 7.420e-02, 5.362e-02, 5.180e-02));
	r += mul(s1_7, M4(5.297e-02, 2.959e-01, -1.165e-01, 9.502e-02, 2.063e-01, -1.782e-02, -3.376e-01, 3.565e-01, 1.133e-01, -1.290e-01, 5.021e-01, -4.126e-01, 8.752e-02, -2.737e-02, 6.456e-02, 3.475e-02));
	r += mul(s1_8, M4(1.905e-02, 7.617e-02, -1.144e-01, -6.856e-02, -3.681e-02, -3.293e-02, -2.324e-01, -9.881e-02, -2.666e-01, 8.770e-02, 9.692e-02, -1.389e-01, 1.981e-01, -1.423e-02, 2.923e-01, 1.324e-01));
	r += mul(s2_0, M4(1.996e-03, -1.545e-01, -5.293e-02, -7.899e-02, -3.321e-02, 1.789e-01, 1.464e-02, 1.070e-01, 1.425e-02, -6.666e-02, -9.603e-02, 1.521e-01, -3.625e-02, 2.333e-01, 1.086e-01, 2.349e-01));
	r += mul(s2_1, M4(-2.292e-02, -7.139e-02, 2.519e-01, 2.882e-02, 4.953e-02, 1.951e-02, -4.309e-01, -2.049e-01, -8.896e-02, 1.467e-01, 2.063e-01, 6.523e-02, 5.743e-02, 1.333e-01, 3.326e-02, 4.583e-01));
	r += mul(s2_2, M4(-2.897e-02, -3.062e-03, 1.841e-01, -5.799e-02, 2.422e-02, -1.352e-02, -1.269e-01, -5.931e-02, -4.226e-03, 3.884e-02, -1.405e-02, 1.438e-02, -8.608e-02, 2.893e-02, -1.072e-03, 1.087e-01));
	r += mul(s2_3, M4(1.445e-02, -9.362e-03, -7.261e-02, -2.329e-01, 3.162e-02, -9.459e-03, 1.164e-01, 1.436e-01, -5.288e-02, 1.749e-01, 1.826e-01, 5.759e-02, 3.669e-02, 2.462e-01, 3.123e-01, -2.568e-01));
	r += mul(s2_4, M4(6.133e-02, -3.483e-01, -2.329e-01, -2.973e-01, 4.673e-02, 1.744e-01, 2.105e-01, 4.559e-01, 1.398e-01, -6.370e-02, -2.016e-01, -3.072e-02, 1.068e-01, -1.690e-01, 2.388e-02, -2.091e-01));
	r += mul(s2_5, M4(3.428e-02, -4.903e-02, -1.649e-01, -1.527e-01, -7.599e-02, -7.341e-02, -6.553e-02, -1.446e-01, -5.898e-02, -3.392e-02, -4.050e-02, -1.821e-02, -1.033e-01, -3.648e-02, -5.457e-02, -1.576e-01));
	r += mul(s2_6, M4(-7.916e-02, -6.458e-02, -1.232e-01, 9.280e-02, 5.670e-02, 7.542e-02, 1.907e-02, -5.683e-05, -1.645e-02, 3.573e-02, -1.005e-01, 3.370e-02, -6.212e-02, -4.051e-02, -4.136e-02, -2.056e-02));
	r += mul(s2_7, M4(-2.188e-01, 2.610e-02, -1.584e-01, -1.643e-01, 1.509e-01, -1.003e-01, 2.259e-02, 1.501e-02, -3.883e-02, -6.907e-02, 3.842e-04, -5.176e-02, -1.112e-03, -2.407e-01, 4.521e-02, -7.052e-02));
	r += mul(s2_8, M4(-1.700e-02, 3.650e-02, 2.336e-02, 8.138e-02, -2.670e-02, -5.292e-02, 5.055e-02, 7.397e-02, 4.919e-02, 3.312e-03, 4.211e-02, 3.945e-02, -2.228e-01, 1.548e-02, 2.369e-02, 2.485e-02));
	r += mul(s3_0, M4(5.808e-02, 7.068e-02, 1.880e-01, 2.806e-02, 1.970e-03, -1.957e-01, -2.289e-01, -2.530e-01, 7.007e-02, -2.280e-01, -1.056e-01, -2.812e-01, -2.477e-02, 1.263e-02, 2.545e-01, -2.431e-01));
	r += mul(s3_1, M4(7.238e-02, 2.026e-01, 3.736e-01, 8.338e-02, 2.102e-02, -2.098e-01, -2.881e-01, -2.459e-01, -1.209e-02, -6.454e-02, 2.378e-01, -2.888e-01, 1.197e-01, 1.952e-01, 5.699e-01, 2.804e-01));
	r += mul(s3_2, M4(3.948e-03, 1.144e-02, 7.742e-02, -6.328e-02, 3.624e-02, 3.847e-02, 1.320e-01, -9.164e-03, 4.701e-02, -4.743e-01, -4.436e-01, 8.339e-02, -8.468e-02, 2.012e-02, 1.180e-01, -2.074e-01));
	r += mul(s3_3, M4(2.233e-02, 8.506e-02, -2.730e-03, 1.335e-01, -8.185e-03, -1.709e-01, -8.382e-02, -1.815e-02, -8.729e-02, -9.692e-02, -8.905e-02, 1.401e-01, -4.698e-02, -2.164e-01, -5.645e-01, 1.401e-01));
	r += mul(s3_4, M4(1.423e-02, 3.070e-01, -7.787e-02, -3.199e-01, -2.081e-01, -8.841e-03, -2.807e-02, -5.005e-02, 1.078e-01, 4.912e-01, -1.267e-01, -1.973e-01, -2.215e-01, -3.685e-02, -3.057e-01, -4.776e-01));
	r += mul(s3_5, M4(3.135e-01, -8.915e-02, -3.838e-01, 3.881e-02, 2.038e-01, 1.581e-01, 5.422e-02, 1.233e-01, 1.655e+00, -1.921e-01, 2.340e-01, -4.577e-01, 1.849e-02, -5.518e-02, -2.460e-02, 1.546e-01));
	r += mul(s3_6, M4(6.267e-02, 7.908e-02, 9.560e-02, -1.725e-03, -2.620e-02, 3.017e-02, -6.339e-02, -7.603e-03, 4.556e-02, 8.993e-02, 4.600e-02, -6.816e-02, 4.299e-02, 3.983e-02, 1.094e-01, 1.458e-01));
	r += mul(s3_7, M4(2.756e-01, -1.860e-01, -9.813e-04, 2.649e-01, -2.801e-02, 1.860e-01, -7.445e-02, -8.431e-02, -3.678e-02, -2.886e-01, -2.629e-01, 1.353e-01, -6.520e-02, 3.477e-02, -2.497e-02, 6.067e-02));
	r += mul(s3_8, M4(-1.372e-01, -1.312e-01, 1.980e-01, 2.041e-01, 8.902e-02, 3.700e-02, -6.437e-02, -1.018e-01, 2.989e-03, -1.262e-01, -1.485e-02, 8.209e-02, 1.053e-01, -1.140e-01, 2.872e-02, -1.073e-01));
	r += V4(9.961e-04, -4.680e-03, -7.671e-03, -8.088e-03);
	return r;
}
void Pass3(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = max(-s0_0, 0.0);
	V4 s1_1 = max(-s0_1, 0.0);
	V4 s1_2 = max(-s0_2, 0.0);
	V4 s1_3 = max(-s0_3, 0.0);
	V4 s1_4 = max(-s0_4, 0.0);
	V4 s1_5 = max(-s0_5, 0.0);
	V4 s1_6 = max(-s0_6, 0.0);
	V4 s1_7 = max(-s0_7, 0.0);
	V4 s1_8 = max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = max(-s2_0, 0.0);
	V4 s3_1 = max(-s2_1, 0.0);
	V4 s3_2 = max(-s2_2, 0.0);
	V4 s3_3 = max(-s2_3, 0.0);
	V4 s3_4 = max(-s2_4, 0.0);
	V4 s3_5 = max(-s2_5, 0.0);
	V4 s3_6 = max(-s2_6, 0.0);
	V4 s3_7 = max(-s2_7, 0.0);
	V4 s3_8 = max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 4
//!DESC CuNNy-2x8C-BILINEAR-CHROMA-NVL-DN-out
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-7.544e-02, 9.409e-02, 6.118e-02, 3.041e-02, 2.633e-02, -1.814e-02, -2.975e-02, -3.705e-03, 1.003e-01, 4.066e-02, 4.128e-03, -1.715e-02, 2.731e-02, -1.528e-03, 6.925e-03, -2.770e-03));
	r += mul(s0_1, M4(8.081e-02, 2.117e-01, -2.892e-02, 3.509e-02, 3.037e-01, 4.646e-02, -8.032e-02, -8.163e-02, 5.621e-02, 7.592e-02, -3.248e-03, 2.072e-02, 4.841e-02, 5.276e-02, 8.392e-03, 2.230e-02));
	r += mul(s0_2, M4(1.847e-02, 3.333e-02, 5.057e-03, 6.768e-03, -3.420e-01, 5.350e-02, 2.146e-01, 1.383e-01, 3.115e-03, 2.924e-02, 8.242e-03, 6.245e-03, -6.978e-03, 1.758e-02, 1.831e-03, 6.327e-03));
	r += mul(s0_3, M4(-2.729e-02, -3.513e-03, -2.407e-01, 1.037e-01, -7.534e-03, -1.843e-02, 7.558e-02, 3.656e-02, -9.980e-02, -2.932e-02, 2.145e-02, 4.971e-02, -3.770e-02, 8.689e-03, 1.181e-02, 1.646e-03));
	r += mul(s0_4, M4(1.863e-01, -4.659e-01, 3.603e-01, -1.037e-01, -6.142e-02, -2.684e-02, -2.647e-01, 2.588e-01, -4.504e-02, -9.981e-02, 7.572e-02, 1.303e-03, 1.480e-02, -3.956e-02, 8.647e-02, 2.261e-02));
	r += mul(s0_5, M4(-3.672e-02, 9.478e-02, 1.222e-02, 4.571e-02, 6.910e-02, 2.764e-01, 5.427e-02, -6.621e-01, -1.367e-02, -3.194e-02, -9.482e-03, 1.491e-02, 6.454e-03, 4.129e-02, -4.697e-03, 4.797e-02));
	r += mul(s0_6, M4(-2.267e-02, 6.312e-03, 3.969e-02, -1.760e-02, -9.245e-02, 1.239e-03, 7.202e-02, 3.137e-02, 1.597e-02, 1.497e-02, -3.235e-02, -1.489e-02, 8.575e-03, -4.327e-04, -2.240e-02, 6.566e-03));
	r += mul(s0_7, M4(-9.583e-03, 5.367e-02, -5.488e-02, -9.347e-02, -1.830e-02, -9.644e-02, 1.199e-01, 1.763e-02, 1.620e-02, 1.829e-02, -5.139e-02, -3.358e-02, 4.183e-03, 9.842e-03, -2.580e-02, -3.451e-02));
	r += mul(s0_8, M4(5.700e-03, -9.786e-04, -3.957e-02, 5.889e-02, -9.546e-03, -3.894e-02, -3.085e-02, 5.557e-02, 1.855e-03, -5.245e-04, -2.334e-03, -2.890e-02, -7.396e-03, -1.025e-02, 1.020e-03, -1.965e-03));
	r += mul(s1_0, M4(-5.541e-02, -4.719e-02, -2.787e-02, 7.219e-03, -4.578e-02, 1.702e-02, 1.681e-02, 1.239e-02, -1.924e-02, -5.409e-02, -4.638e-02, 1.011e-02, -2.409e-02, -4.453e-03, -6.180e-03, -3.288e-03));
	r += mul(s1_1, M4(-1.208e-01, -5.823e-02, 1.302e-02, -4.920e-02, -6.293e-03, -5.760e-02, -1.156e-02, 2.278e-02, 1.341e-01, -3.660e-01, 2.031e-02, 2.415e-02, -7.447e-02, -1.972e-02, -2.058e-02, -2.505e-02));
	r += mul(s1_2, M4(-1.765e-02, -8.376e-02, -1.462e-02, -5.387e-03, 5.700e-03, 1.010e-02, -5.308e-03, 2.628e-03, -2.738e-02, 4.488e-02, -1.765e-02, 2.058e-02, 2.582e-02, -5.188e-02, 1.325e-02, -6.525e-03));
	r += mul(s1_3, M4(6.715e-02, 2.349e-02, 3.210e-02, -3.134e-02, 8.396e-03, -1.552e-02, -5.676e-02, -3.641e-03, 9.232e-02, -1.479e-02, 1.297e-01, -1.042e-01, 6.909e-02, -4.316e-02, 6.185e-03, -2.711e-02));
	r += mul(s1_4, M4(1.199e-01, 1.274e-01, -1.289e-01, 7.532e-02, 3.049e-02, 5.949e-02, 3.089e-02, -4.460e-02, 3.205e-01, -8.147e-02, 3.525e-01, -5.449e-01, -4.134e-01, 4.062e-01, -2.943e-01, 2.141e-01));
	r += mul(s1_5, M4(1.375e-03, -4.209e-03, -9.581e-03, -1.343e-01, 1.156e-02, 4.769e-02, 1.390e-02, 3.942e-02, -3.215e-02, 2.919e-02, -4.037e-02, 3.997e-02, -6.046e-03, 1.373e-02, 7.718e-05, -4.328e-02));
	r += mul(s1_6, M4(-4.072e-03, -7.276e-03, 2.304e-02, 5.876e-03, -3.881e-03, -5.752e-03, -1.743e-03, -8.337e-03, -1.703e-02, -4.228e-03, -1.066e-02, 1.138e-02, -7.221e-03, -7.741e-03, 3.478e-02, -1.711e-02));
	r += mul(s1_7, M4(-1.862e-02, -6.412e-03, 8.862e-02, 5.144e-02, -9.671e-03, -6.491e-03, 5.972e-03, 6.446e-03, -3.762e-02, -9.968e-04, 3.093e-02, 5.316e-02, 4.836e-02, -2.301e-02, -1.500e-01, 1.561e-01));
	r += mul(s1_8, M4(-5.351e-03, -9.358e-03, -5.193e-04, 4.163e-02, 3.326e-03, 5.606e-04, 8.117e-04, 1.622e-02, 2.547e-03, 2.241e-03, 6.301e-03, 1.425e-02, 2.642e-03, -1.773e-02, 1.463e-02, 1.534e-03));
	r += mul(s2_0, M4(5.514e-02, 7.810e-03, -1.826e-02, -1.532e-02, 4.406e-02, 2.686e-02, 1.985e-02, 3.941e-04, -1.317e-01, -1.837e-02, 2.461e-02, 3.504e-02, -1.425e-02, -2.573e-03, -5.194e-03, 7.069e-03));
	r += mul(s2_1, M4(-6.421e-02, -1.723e-02, -5.898e-03, -6.561e-02, -7.814e-02, 1.441e-02, -3.729e-02, 1.492e-04, 1.452e-01, -5.512e-02, -3.221e-03, -1.177e-02, -3.518e-03, -1.389e-02, 3.831e-03, -6.850e-03));
	r += mul(s2_2, M4(1.001e-03, -1.935e-02, 5.941e-03, -1.695e-03, 6.152e-03, -6.812e-02, 8.473e-04, -8.524e-03, -2.631e-02, 6.812e-02, 4.627e-03, 1.608e-02, -1.109e-02, -5.644e-03, -6.342e-03, -3.953e-03));
	r += mul(s2_3, M4(1.164e-01, 2.121e-02, 1.637e-01, 3.442e-02, 2.439e-02, -3.954e-02, -1.065e-02, 1.033e-01, 1.037e-01, -2.030e-02, -1.489e-01, -8.015e-02, 1.441e-01, -7.009e-02, -6.601e-03, 1.518e-02));
	r += mul(s2_4, M4(-2.606e-02, 4.345e-02, -8.503e-02, 9.953e-02, -4.569e-01, -7.560e-02, 6.467e-02, -2.017e-01, 4.249e-01, 5.410e-01, -3.447e-01, -3.252e-01, 1.486e-01, 3.799e-01, -6.594e-02, -2.901e-02));
	r += mul(s2_5, M4(3.164e-03, -3.523e-02, 5.461e-03, -3.626e-02, -2.086e-02, -2.962e-01, 4.585e-02, 2.009e-01, 3.406e-02, 5.471e-02, 1.799e-03, -7.142e-02, -1.813e-02, -4.549e-02, -4.578e-02, -9.270e-02));
	r += mul(s2_6, M4(-1.805e-02, 1.297e-04, 4.036e-03, 7.876e-03, 1.554e-03, 1.037e-02, -2.314e-02, 1.584e-03, 3.120e-03, -1.275e-02, 3.521e-02, 8.948e-03, -8.974e-02, -3.050e-02, 7.687e-02, 4.482e-02));
	r += mul(s2_7, M4(-7.543e-03, -6.025e-03, 1.345e-03, -8.612e-03, -6.481e-02, -9.053e-02, 1.800e-01, 5.969e-02, -5.239e-02, -3.457e-02, 1.076e-01, 5.459e-02, -3.637e-01, -3.252e-01, 5.774e-01, 4.065e-01));
	r += mul(s2_8, M4(5.877e-03, -5.234e-03, 1.952e-03, -1.674e-02, -8.065e-03, -1.385e-02, -3.096e-02, 5.153e-02, 8.025e-03, 2.631e-03, -6.146e-03, 6.691e-02, -3.954e-02, -1.643e-01, 2.682e-02, 1.949e-01));
	r += mul(s3_0, M4(-4.408e-01, 2.547e-01, 2.273e-01, -7.449e-02, -7.534e-02, -4.356e-02, -4.991e-03, 1.554e-02, 7.487e-02, 1.679e-02, -9.016e-03, -1.173e-02, -7.697e-03, 1.421e-03, 6.934e-03, 2.395e-03));
	r += mul(s3_1, M4(1.684e-01, -6.746e-01, 1.428e-01, 4.033e-01, 1.265e-01, 4.678e-02, 4.819e-03, -9.181e-03, -8.862e-02, 1.986e-02, -4.259e-03, 2.666e-03, 4.252e-02, 2.169e-02, 7.690e-03, 1.082e-02));
	r += mul(s3_2, M4(1.918e-02, -4.211e-02, -6.238e-02, 1.081e-01, -5.141e-03, 4.901e-02, -4.580e-03, 1.821e-03, 3.293e-03, -5.308e-02, 1.284e-03, -1.346e-02, 3.630e-04, 1.714e-02, 3.152e-03, 6.263e-03));
	r += mul(s3_3, M4(6.834e-01, 1.368e-01, -6.160e-01, -3.982e-01, 6.753e-02, 3.581e-03, -2.936e-02, -7.078e-02, -3.301e-02, 2.900e-02, 8.960e-02, 5.139e-02, -8.438e-03, 1.480e-02, -3.423e-02, -1.059e-02));
	r += mul(s3_4, M4(-1.646e-01, -1.478e-02, 7.091e-02, 1.436e-01, 2.866e-02, 1.431e-01, 2.154e-01, 2.297e-01, 1.448e-02, -5.725e-02, -1.243e-01, -6.805e-03, -1.614e-01, -1.773e-01, -6.018e-02, -1.116e-01));
	r += mul(s3_5, M4(-1.872e-02, 3.259e-02, 1.208e-02, 4.735e-02, -3.375e-03, -2.523e-02, -2.558e-03, 4.804e-02, -1.715e-02, -1.146e-02, -1.949e-03, -6.764e-02, 3.626e-02, 3.308e-02, 9.588e-03, 3.578e-02));
	r += mul(s3_6, M4(-3.450e-02, -1.052e-02, -4.299e-02, 7.077e-02, -1.976e-02, -1.290e-02, 1.936e-02, -1.674e-03, -1.261e-02, 1.029e-05, -5.530e-02, 9.546e-03, -1.071e-02, -2.122e-03, -4.899e-03, 1.560e-02));
	r += mul(s3_7, M4(1.577e-02, 1.676e-02, 6.537e-03, -9.154e-02, 2.600e-03, -1.134e-02, -3.716e-02, -1.482e-03, -5.919e-04, -1.046e-02, 9.780e-03, -7.963e-02, 8.391e-03, -4.211e-03, -4.748e-02, -5.626e-02));
	r += mul(s3_8, M4(-9.793e-03, -1.424e-02, -9.633e-03, 5.646e-03, 8.041e-04, 1.040e-02, 2.172e-03, -1.630e-02, -1.109e-02, -1.248e-02, -2.020e-02, 1.113e-02, 1.261e-03, 6.855e-03, 1.255e-02, 1.862e-03));
	r += V4(7.445e-05, -4.264e-05, 3.333e-04, 1.959e-04);
	return tanh(r);
}
void Pass4(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = max(-s0_0, 0.0);
	V4 s1_1 = max(-s0_1, 0.0);
	V4 s1_2 = max(-s0_2, 0.0);
	V4 s1_3 = max(-s0_3, 0.0);
	V4 s1_4 = max(-s0_4, 0.0);
	V4 s1_5 = max(-s0_5, 0.0);
	V4 s1_6 = max(-s0_6, 0.0);
	V4 s1_7 = max(-s0_7, 0.0);
	V4 s1_8 = max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = max(-s2_0, 0.0);
	V4 s3_1 = max(-s2_1, 0.0);
	V4 s3_2 = max(-s2_2, 0.0);
	V4 s3_3 = max(-s2_3, 0.0);
	V4 s3_4 = max(-s2_4, 0.0);
	V4 s3_5 = max(-s2_5, 0.0);
	V4 s3_6 = max(-s2_6, 0.0);
	V4 s3_7 = max(-s2_7, 0.0);
	V4 s3_8 = max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 5
//!DESC CuNNy-2x8C-BILINEAR-CHROMA-NVL-DN-shuffle
//!STYLE PS
//!IN t2, INPUT
float4 Pass5(float2 pos) {
	float2 pt = float2(GetInputPt());
	const static float3x3 rgb2yuv = {0.299, 0.587, 0.114, -0.169, -0.331, 0.5, 0.5, -0.419, -0.081};
	const static float3x3 yuv2rgb = {1, -0.00093, 1.401687, 1, -0.3437, -0.71417, 1, 1.77216, 0.00099};
	float4 r = 0.0;
	float2 size = float2(GetInputSize());
	float2 f = frac(pos * size);
	float3 yuv = mul(rgb2yuv, INPUT.SampleLevel(SL, pos, 0).rgb);
	int2 i = int2(f * 2.0);
	r.r = t2.SampleLevel(SP, (float2(0.5, 0.5) - f) * pt + pos, 0)[2*i.y + i.x];
	r.r += yuv.r;
	r.a = 1.0;
	r.r = clamp(r, 0.0, 1.0);
	float3 px = mul(yuv2rgb, float3(r.r, yuv.yz));
	return float4(px, 1.0);
}
