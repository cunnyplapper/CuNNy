// CuNNy 2x8C BILINEAR CHROMA NVL
// Copyright (c) 2024 cunnyplapper

// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public
// License along with this program.  If not, see <https://www.gnu.org/licenses/>.
/* ------------------------------------------------------------------- */

//!MAGPIE EFFECT
//!VERSION 3
//!OUTPUT_WIDTH INPUT_WIDTH * 2
//!OUTPUT_HEIGHT INPUT_HEIGHT * 2

//!TEXTURE
Texture2D INPUT;


//!SAMPLER
//!FILTER POINT
SamplerState SP;

//!SAMPLER
//!FILTER LINEAR
SamplerState SL;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t0;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t1;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t2;

//!TEXTURE
//!WIDTH INPUT_WIDTH
//!HEIGHT INPUT_HEIGHT
//!FORMAT R8G8B8A8_SNORM
Texture2D t3;

//!PASS 1
//!DESC CuNNy-2x8C-BILINEAR-CHROMA-NVL-in
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN INPUT
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) (dot(float3(-0.2646695077419281, -0.5037145018577576, -0.10815466940402985), O(INPUT, float2(x, y)).rgb) + 0.624510645866394)
float4 f0(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	V4 r = 0.0;
	r += V4(5.294e-03, -3.326e-02, 2.839e-02, -8.008e-02) * s0_0;
	r += V4(4.448e-03, 3.035e-01, -3.301e-01, 1.025e-01) * s0_1;
	r += V4(-8.753e-03, 2.466e-01, 2.234e-02, 3.529e-02) * s0_2;
	r += V4(-6.004e-02, -3.124e-02, -1.042e-01, 4.326e-01) * s0_3;
	r += V4(-1.013e-01, -2.365e-01, 4.248e-01, -8.032e-02) * s0_4;
	r += V4(-1.783e-02, -1.792e-01, 2.205e-01, -9.504e-02) * s0_5;
	r += V4(-1.047e-02, 5.206e-02, 5.042e-02, 1.097e-01) * s0_6;
	r += V4(3.222e-01, -5.558e-02, -1.213e-01, -4.415e-01) * s0_7;
	r += V4(-8.227e-02, -6.470e-02, -1.910e-01, 1.816e-02) * s0_8;
	r += V4(-3.284e-02, -4.345e-04, -7.039e-04, -2.128e-04);
	return r;
}
float4 f1(float2 pt, float2 pos, min16float s0_0, min16float s0_1, min16float s0_2, min16float s0_3, min16float s0_4, min16float s0_5, min16float s0_6, min16float s0_7, min16float s0_8) {
	V4 r = 0.0;
	r += V4(-4.105e-03, -2.244e-02, -3.317e-03, -1.182e-01) * s0_0;
	r += V4(-2.567e-03, -1.870e-01, 5.122e-03, -1.674e-02) * s0_1;
	r += V4(4.964e-03, 2.212e-01, -3.841e-03, 1.782e-01) * s0_2;
	r += V4(6.364e-03, 1.293e-01, 6.422e-03, 3.614e-01) * s0_3;
	r += V4(-5.878e-01, -3.953e-01, -6.015e-01, -2.842e-01) * s0_4;
	r += V4(-1.270e-02, 3.407e-02, 5.996e-01, -2.044e-01) * s0_5;
	r += V4(-1.346e-03, 3.076e-01, -3.580e-03, 1.880e-01) * s0_6;
	r += V4(5.917e-01, 6.769e-02, -4.012e-03, 2.516e-02) * s0_7;
	r += V4(5.224e-03, -1.558e-01, 4.376e-03, -1.306e-01) * s0_8;
	r += V4(7.624e-05, -1.666e-04, 4.097e-04, 6.984e-05);
	return r;
}
void Pass1(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	min16float s0_0 = l0(-1.0, -1.0);
	min16float s0_1 = l0(0.0, -1.0);
	min16float s0_2 = l0(1.0, -1.0);
	min16float s0_3 = l0(-1.0, 0.0);
	min16float s0_4 = l0(0.0, 0.0);
	min16float s0_5 = l0(1.0, 0.0);
	min16float s0_6 = l0(-1.0, 1.0);
	min16float s0_7 = l0(0.0, 1.0);
	min16float s0_8 = l0(1.0, 1.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8);
}
//!PASS 2
//!DESC CuNNy-2x8C-BILINEAR-CHROMA-NVL-conv1
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2, t3
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(1.499e-01, 3.501e-01, 1.326e-01, 1.032e-01, -1.057e-01, 9.638e-02, 5.495e-02, -9.772e-03, 5.262e-02, 4.118e-03, -1.745e-02, -4.411e-02, 1.116e-01, 9.877e-02, 1.287e-01, -9.589e-02));
	r += mul(s0_1, M4(-9.220e-01, 9.051e-03, 2.026e-01, -5.184e-01, 1.228e-01, 4.549e-02, 7.911e-02, -4.895e-02, 5.671e-02, -1.857e-02, 1.024e-01, -1.938e-01, 1.899e-01, -3.820e-04, -3.753e-01, 1.052e-01));
	r += mul(s0_2, M4(3.283e-01, -3.055e-01, 6.134e-02, -3.458e-01, -1.018e-01, -2.558e-02, 7.319e-02, -1.301e-02, -1.935e-02, -2.264e-02, -1.543e-02, -1.024e-02, 2.157e-01, -5.608e-02, 7.792e-02, 7.359e-02));
	r += mul(s0_3, M4(2.350e-01, -3.429e-01, 1.433e-02, 2.739e-01, -3.054e-01, 1.282e-01, 6.597e-01, 6.828e-04, 1.639e-01, -1.736e-01, -8.308e-02, 1.675e-01, 7.800e-02, 1.883e-02, -7.643e-02, -4.459e-02));
	r += mul(s0_4, M4(-3.075e-01, -1.548e-02, 2.041e-01, 1.399e-02, 5.237e-02, -1.948e-01, -4.124e-01, -8.230e-02, 1.695e-01, 4.386e-01, -4.829e-02, 2.972e-01, 6.652e-02, -7.632e-02, 5.896e-02, 1.274e-01));
	r += mul(s0_5, M4(1.336e-01, -8.519e-02, -2.619e-01, 2.798e-01, 1.630e-01, -4.565e-02, 6.373e-02, 5.522e-02, 1.562e-01, -2.397e-01, -2.404e-01, -5.965e-02, 6.271e-02, 1.188e-01, 9.835e-02, -3.074e-01));
	r += mul(s0_6, M4(1.664e-01, 3.386e-02, -1.128e-01, 1.149e-01, -1.736e-01, -1.129e-01, 2.930e-01, 2.514e-01, -1.497e-01, -2.064e-01, 3.369e-02, -5.287e-02, 2.019e-01, 3.601e-02, -1.753e-01, -2.751e-02));
	r += mul(s0_7, M4(-2.188e-01, -2.608e-01, -6.288e-03, -2.998e-01, -2.644e-01, 6.154e-02, -1.911e-01, -1.724e-01, -4.941e-02, 6.932e-02, 1.384e-01, 4.739e-02, -4.684e-02, 1.327e-01, 1.388e-02, 6.163e-02));
	r += mul(s0_8, M4(6.085e-02, -9.784e-02, 1.267e-01, -1.183e-01, -2.708e-03, 1.137e-01, -5.522e-02, -4.505e-02, -6.471e-02, -4.209e-02, -2.625e-01, -6.105e-02, 1.597e-01, -7.967e-03, -1.626e-01, 4.027e-03));
	r += mul(s1_0, M4(-1.010e-01, -1.355e-01, -1.082e-01, 1.843e-01, 1.471e-02, 8.261e-03, 5.657e-02, 5.701e-02, 7.580e-02, -1.590e-01, -5.180e-02, 1.684e-02, -2.579e-02, -7.495e-02, -1.485e-01, 5.499e-02));
	r += mul(s1_1, M4(6.512e-02, -2.245e-01, 1.889e-01, -2.509e-01, -1.763e-01, -4.507e-02, -3.213e-02, 5.415e-02, -6.546e-02, -4.317e-02, -1.116e-01, 8.359e-02, 2.500e-01, 5.616e-02, -3.116e-01, -7.590e-02));
	r += mul(s1_2, M4(4.870e-02, -2.085e-01, -1.116e-01, 1.186e-01, 1.291e-01, 4.221e-02, -4.934e-02, -2.111e-02, 1.738e-01, -1.514e-02, -2.155e-01, 1.279e-02, -1.996e-01, 1.411e-01, -1.517e-02, -1.210e-01));
	r += mul(s1_3, M4(-1.981e-01, 1.695e-01, 2.643e-01, -1.187e-01, -1.683e-01, 4.358e-02, 3.375e-01, -1.077e-01, -6.249e-04, 2.429e-02, -9.744e-02, 1.223e-01, 1.353e-01, 2.791e-02, -1.134e-01, -8.387e-03));
	r += mul(s1_4, M4(1.394e-01, 2.339e-01, 8.154e-02, 5.276e-02, 6.603e-02, -2.038e-01, -1.417e-01, -1.548e-01, 3.286e-01, -1.501e-01, -5.548e-01, -4.704e-02, 7.306e-02, -1.035e-01, 1.202e-01, 6.651e-02));
	r += mul(s1_5, M4(7.032e-02, 2.521e-02, -1.438e-01, -2.143e-02, -6.215e-02, 1.400e-01, 1.504e-02, 2.416e-02, 1.282e-02, -9.894e-03, 2.724e-02, -3.276e-02, 4.034e-03, 2.646e-02, -1.319e-02, -9.091e-02));
	r += mul(s1_6, M4(-1.519e-01, -6.635e-02, 2.222e-01, -1.040e-01, -4.252e-01, -5.917e-02, 5.729e-01, -2.717e-01, 7.576e-02, 1.611e-01, 9.213e-02, 2.694e-01, -1.811e-01, 4.920e-02, 1.405e-02, 4.513e-02));
	r += mul(s1_7, M4(2.514e-01, 1.054e-01, -2.132e-01, 4.120e-02, 4.126e-02, -4.435e-02, -3.807e-01, -2.143e-01, -1.793e-01, 3.395e-01, 8.595e-02, 5.428e-02, 3.652e-01, -3.961e-02, -1.511e-01, -8.051e-02));
	r += mul(s1_8, M4(-7.358e-02, 1.803e-03, -1.914e-01, 2.301e-02, 4.360e-02, -7.603e-02, 1.050e-02, 1.585e-01, 1.314e-01, -3.162e-03, 1.666e-01, -4.520e-02, 4.767e-02, 1.004e-01, 4.135e-02, -1.251e-01));
	r += mul(s2_0, M4(-1.470e-01, -1.935e-01, 2.590e-01, -1.158e-01, 1.383e-01, 1.944e-02, -2.403e-02, -2.433e-02, -5.602e-02, 1.548e-01, -6.471e-02, -1.054e-02, -2.085e-01, -7.176e-02, -5.922e-02, 4.697e-02));
	r += mul(s2_1, M4(-2.294e-02, 1.011e+00, -1.917e-01, 7.207e-01, 3.275e-02, 4.930e-02, -2.351e-01, 4.156e-02, 1.009e-01, -1.142e-01, -7.253e-03, 9.970e-02, -2.905e-01, -5.015e-02, 4.657e-01, -1.084e-01));
	r += mul(s2_2, M4(-9.930e-02, 1.603e-01, 1.834e-01, 1.934e-01, -1.922e-02, 1.018e-01, 2.517e-01, 1.414e-02, 1.644e-02, 8.042e-03, -1.402e-01, -5.496e-02, -6.449e-02, -4.011e-02, -1.680e-01, -5.135e-02));
	r += mul(s2_3, M4(1.533e-01, 2.627e-01, -2.615e-01, -1.607e-01, 2.683e-02, -6.220e-02, -9.990e-02, 1.822e-01, -2.505e-02, 7.911e-01, -3.725e-02, 6.037e-01, -1.470e-01, -5.227e-02, 2.661e-01, -2.659e-02));
	r += mul(s2_4, M4(2.701e-01, -1.793e-01, 6.898e-02, 8.536e-01, -2.300e-01, 7.171e-02, -1.352e-01, -8.435e-02, 7.102e-02, 2.060e-01, -2.736e-01, 2.089e-01, 9.921e-02, 9.999e-02, 1.343e-01, -1.724e-01));
	r += mul(s2_5, M4(-1.706e-01, 1.395e-01, 4.768e-01, -1.077e-01, -4.901e-02, -7.477e-02, 4.344e-02, -1.799e-01, -6.907e-02, 8.295e-02, 2.014e-01, 3.384e-02, -2.119e-01, -1.473e-03, 7.474e-03, 1.832e-01));
	r += mul(s2_6, M4(-9.959e-03, -1.170e-02, -4.995e-02, -4.232e-02, -8.263e-02, 6.066e-02, 1.313e-01, -6.101e-03, -1.450e-01, 3.526e-02, -8.146e-03, 8.316e-02, -6.826e-02, -5.170e-02, -4.750e-02, -1.010e-01));
	r += mul(s2_7, M4(-6.464e-02, 1.117e-01, 1.863e-02, 8.367e-02, 8.294e-02, -1.743e-01, -3.384e-02, -4.179e-01, -1.544e-01, -1.027e-01, 1.813e-01, -1.357e-01, -9.703e-02, -2.217e-02, 1.237e-01, 3.086e-01));
	r += mul(s2_8, M4(-2.480e-02, -1.968e-01, -1.744e-01, -5.541e-02, -4.137e-03, -4.250e-02, 4.306e-02, 6.203e-02, 7.398e-02, -4.471e-02, 1.987e-01, -8.973e-02, 8.577e-02, 8.380e-02, 1.432e-01, 3.186e-03));
	r += mul(s3_0, M4(-4.678e-02, -3.553e-02, -1.637e-01, -2.366e-02, -3.847e-02, -7.158e-02, -7.469e-02, -5.791e-02, 1.571e-01, -4.560e-03, -1.762e-01, -1.334e-01, 6.442e-02, 6.525e-02, 1.525e-01, -6.087e-02));
	r += mul(s3_1, M4(4.792e-01, 2.426e-01, 1.076e-01, 6.619e-02, 1.334e-01, -1.233e-01, -1.502e-01, -1.597e-01, 3.973e-02, 3.228e-03, 1.798e-01, -1.323e-01, -8.864e-02, 5.675e-03, 2.534e-01, 1.902e-01));
	r += mul(s3_2, M4(-1.888e-01, 2.033e-01, 2.236e-01, -2.291e-01, -1.378e-01, -1.058e-01, -8.197e-02, -7.712e-03, -2.154e-02, 3.710e-02, 1.894e-01, -1.557e-02, -5.171e-04, -2.461e-02, 2.075e-01, 7.745e-02));
	r += mul(s3_3, M4(9.106e-02, -1.752e-01, -3.246e-01, -4.643e-02, 1.267e-01, 6.763e-02, -4.325e-02, 5.747e-02, 9.265e-01, -1.608e-01, -8.736e-01, 1.495e-01, -2.133e-01, 3.420e-03, 1.932e-01, -1.701e-01));
	r += mul(s3_4, M4(5.215e-01, 2.725e-01, 2.482e-01, 1.245e+00, -1.454e-01, -2.054e-03, 6.022e-03, -2.051e-01, 2.611e-01, 1.184e+00, 4.829e-01, 9.399e-01, -3.252e-01, 2.642e-02, 1.523e-01, 9.149e-02));
	r += mul(s3_5, M4(-4.064e-01, -3.197e-02, -2.863e-03, -7.116e-02, -1.008e-01, -7.239e-02, 1.546e-01, 9.634e-02, 5.331e-02, 2.489e-02, -1.997e-01, -5.029e-02, 8.713e-02, -7.621e-02, -1.181e-01, -1.162e-01));
	r += mul(s3_6, M4(-4.696e-02, 2.239e-02, 2.544e-03, 4.530e-02, 1.499e-02, -8.521e-02, -3.166e-03, -4.370e-02, 1.909e-01, -5.480e-02, -1.455e-01, 2.195e-02, 7.770e-02, 4.029e-03, 1.152e-02, 2.842e-02));
	r += mul(s3_7, M4(1.989e-02, -1.314e-01, 9.027e-02, 2.002e-03, -1.071e-01, 9.259e-02, -5.261e-02, 8.879e-02, -8.315e-02, 3.682e-02, 1.105e-01, 1.439e-01, -1.450e-02, 5.257e-02, 2.317e-02, -2.133e-03));
	r += mul(s3_8, M4(-4.975e-02, 5.639e-02, 2.573e-01, -5.995e-02, -8.872e-02, -5.150e-02, 8.617e-03, -1.067e-01, -9.351e-02, 3.164e-02, 1.502e-02, 3.011e-03, -1.199e-01, 9.595e-02, -2.075e-01, 1.223e-01));
	r += V4(-5.050e-03, 3.772e-03, 1.329e-03, -1.783e-03);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-8.658e-02, 1.238e-01, 8.824e-02, -4.357e-01, 9.076e-04, 6.513e-02, 4.122e-02, 1.177e-01, 1.977e-01, 4.545e-03, 2.256e-01, 1.943e-01, 8.935e-02, -3.227e-01, 1.460e-01, 2.334e-01));
	r += mul(s0_1, M4(-5.950e-01, -2.703e-01, -1.057e-02, 1.742e-01, -2.191e-03, -6.392e-02, 4.501e-02, -1.363e-01, 4.635e-01, -3.077e-01, 2.542e-02, 2.253e-01, 3.426e-01, -9.683e-02, -1.765e-01, 4.529e-01));
	r += mul(s0_2, M4(5.207e-01, -7.906e-02, 3.174e-01, 6.236e-02, -3.009e-03, -4.734e-02, -1.208e-01, 3.894e-02, 6.421e-02, -1.231e-01, -2.815e-03, 5.457e-02, 1.049e-01, -4.688e-02, -1.808e-01, 2.836e-01));
	r += mul(s0_3, M4(-2.858e-01, 1.669e-01, -5.422e-02, -1.626e-01, -2.348e-01, 7.172e-02, -2.407e-01, 9.626e-02, -1.633e-01, 2.847e-01, 6.361e-02, 1.491e-02, 1.011e-01, -1.312e-01, 3.335e-02, 1.014e-01));
	r += mul(s0_4, M4(-2.820e-01, -1.322e-01, -1.991e-01, -1.229e-02, -2.711e-01, 1.454e-01, 3.328e-01, -4.715e-01, 2.802e-01, 1.045e-01, 1.431e-01, 2.951e-01, 4.174e-01, 1.428e-01, -1.116e-01, 2.882e-01));
	r += mul(s0_5, M4(-1.379e-01, 1.334e-01, -9.386e-03, 3.340e-01, 1.819e-01, 2.150e-01, 3.915e-04, -1.468e-02, 6.077e-02, -1.385e-01, 1.825e-02, -1.977e-02, 2.205e-01, 1.043e-01, 4.653e-02, 5.956e-01));
	r += mul(s0_6, M4(-1.000e-01, 1.783e-01, 1.714e-02, -9.287e-02, 1.492e-01, -2.510e-01, -5.251e-01, 5.410e-02, 1.505e-01, -1.625e-02, -1.159e-01, 8.848e-02, 4.643e-02, -6.114e-02, 3.273e-02, -7.823e-03));
	r += mul(s0_7, M4(1.727e-01, 3.097e-01, 9.552e-03, -2.474e-02, -1.116e-01, -3.874e-02, 4.987e-01, -1.520e-01, 9.886e-02, -7.883e-02, -1.265e-01, -3.697e-02, 1.965e-01, -6.303e-02, 1.092e-02, 2.098e-01));
	r += mul(s0_8, M4(5.396e-02, 1.936e-01, 8.142e-02, -3.899e-02, 6.462e-02, 2.346e-01, -7.224e-02, -6.075e-02, 1.125e-01, -1.544e-01, -2.184e-02, -2.661e-02, 1.334e-01, -8.684e-02, 3.200e-02, -3.901e-02));
	r += mul(s1_0, M4(-1.446e-01, 8.221e-02, -2.743e-01, 4.391e-02, -2.003e-02, -6.752e-02, -1.985e-01, -1.329e-01, 7.797e-02, 3.366e-02, -6.850e-02, -1.125e-01, 1.919e-01, 1.243e-01, -1.401e-01, 5.422e-02));
	r += mul(s1_1, M4(-2.154e-01, 9.781e-02, -6.045e-02, 9.781e-02, -2.642e-01, 2.393e-01, -5.111e-03, -9.055e-02, -1.253e-01, -2.215e-02, 1.079e-01, -6.891e-02, 9.308e-02, -9.215e-02, 1.853e-01, 1.854e-01));
	r += mul(s1_2, M4(-1.832e-01, 4.227e-01, 1.546e-01, -9.354e-02, -3.519e-02, 2.130e-02, 9.202e-02, -1.010e-02, 2.959e-01, 3.920e-03, 8.130e-02, 2.290e-01, 7.557e-02, -3.603e-01, -1.164e-01, 1.884e-01));
	r += mul(s1_3, M4(1.184e-01, -7.084e-02, -1.951e-02, 1.740e-01, 2.329e-01, -3.819e-01, -3.470e-01, 1.793e-02, 9.847e-03, -3.136e-02, -1.451e-01, -2.954e-02, 1.170e-02, 3.353e-02, -3.382e-02, 1.597e-01));
	r += mul(s1_4, M4(1.821e-01, -4.705e-02, 2.727e-01, -3.097e-02, -2.253e-01, 3.032e-01, 3.037e-01, -3.857e-02, 3.226e-01, -7.420e-01, -1.502e-01, 4.374e-01, 2.150e-01, -1.337e-01, 4.762e-03, 4.678e-01));
	r += mul(s1_5, M4(2.166e-01, -1.509e-01, -1.561e-01, -3.048e-01, -1.525e-01, -1.035e-01, 4.970e-02, -1.158e-01, 7.608e-02, 4.608e-02, 1.481e-01, 2.841e-01, 4.569e-01, -5.053e-02, -4.552e-01, 1.760e-01));
	r += mul(s1_6, M4(1.655e-01, -7.886e-02, 1.894e-02, 6.671e-02, -3.561e-02, 1.674e-01, -3.951e-03, -2.498e-02, 1.425e-01, -2.928e-02, 2.646e-01, 2.041e-02, -1.311e-02, 1.699e-02, 8.416e-02, 9.876e-02));
	r += mul(s1_7, M4(-1.155e-01, -1.972e-01, 3.110e-02, -5.037e-02, 1.406e-02, -2.221e-01, 7.571e-02, -1.404e-02, 1.179e-01, 1.158e-02, 1.561e-01, 1.414e-01, 6.817e-02, 2.874e-02, -2.016e-02, 9.150e-03));
	r += mul(s1_8, M4(-2.100e-02, -7.928e-02, -2.391e-02, 5.630e-02, 6.765e-02, -1.450e-01, -2.160e-02, -6.183e-02, -8.241e-03, 2.506e-01, 1.409e-01, 9.449e-02, 9.337e-03, 1.450e-01, -1.003e-01, 3.053e-01));
	r += mul(s2_0, M4(-1.472e-01, -4.805e-02, 1.700e-01, 2.094e-01, -5.139e-02, 1.856e-02, 6.966e-02, -2.667e-02, 7.388e-02, -9.764e-02, 5.628e-03, -1.429e-01, -8.745e-02, 3.095e-01, -1.294e-01, -2.196e-01));
	r += mul(s2_1, M4(-1.115e-01, -2.402e-02, 9.470e-01, -2.483e-02, -2.404e-01, 1.017e-01, 6.498e-03, -2.059e-01, 1.840e-01, 1.243e-01, 8.561e-02, 3.273e-01, -2.993e-01, 7.214e-02, 1.042e-01, -1.886e-01));
	r += mul(s2_2, M4(-3.596e-01, 5.250e-02, -1.255e-01, 1.321e-01, -1.475e-01, 1.937e-01, -8.442e-02, -1.654e-01, 1.401e-01, -7.155e-02, -6.098e-02, 4.803e-02, -1.763e-01, 1.454e-02, 2.550e-01, -1.883e-01));
	r += mul(s2_3, M4(-7.109e-02, -1.726e-01, 3.184e-01, -6.527e-02, -1.061e-01, 2.566e-03, -6.332e-02, -8.862e-02, 1.042e-01, 2.174e-01, 1.142e+00, 5.379e-02, -2.620e-02, 1.489e-01, -3.419e-02, -5.853e-02));
	r += mul(s2_4, M4(4.528e-03, 3.875e-01, -1.266e-01, -3.314e-01, -3.681e-01, 2.668e-01, -9.973e-03, -3.846e-01, -1.097e-01, -5.582e-01, -1.551e-01, -2.861e-01, -9.249e-03, -3.193e-01, 2.411e-02, 8.552e-02));
	r += mul(s2_5, M4(-2.568e-01, 1.086e-01, 2.300e-01, -4.402e-02, -2.691e-01, -1.496e-01, 7.937e-02, -1.684e-01, -1.644e-01, -3.322e-02, 9.646e-02, 1.419e-01, -3.291e-01, -3.160e-02, 1.620e-01, -5.148e-02));
	r += mul(s2_6, M4(1.805e-01, -1.160e-02, -8.997e-02, 7.362e-02, -7.717e-02, 1.505e-01, 1.733e-01, -1.420e-02, -4.828e-02, 1.136e-01, -4.308e-02, -1.849e-02, -1.774e-02, -1.013e-01, -1.326e-01, -2.781e-02));
	r += mul(s2_7, M4(-7.420e-02, 1.299e-01, -1.291e-01, 6.095e-02, -1.440e-01, 4.274e-02, -1.195e-01, -2.525e-01, 3.694e-02, 3.766e-01, 6.821e-02, -1.788e-01, -9.143e-02, -2.529e-01, 2.558e-01, -1.943e-02));
	r += mul(s2_8, M4(-8.331e-02, -1.897e-01, -3.021e-02, -2.627e-01, -2.017e-01, 3.769e-02, 1.616e-01, -1.423e-01, 3.723e-02, 4.423e-02, 7.223e-03, -2.496e-02, 2.011e-01, -1.405e-01, -4.693e-02, 4.917e-02));
	r += mul(s3_0, M4(1.321e-01, 1.912e-01, 2.456e-01, -4.790e-01, 9.696e-02, -1.074e-02, 6.106e-03, -4.608e-02, 1.066e-01, -1.234e-01, -2.545e-02, 2.420e-01, -2.666e-01, -1.494e-01, 1.294e-01, 5.494e-04));
	r += mul(s3_1, M4(5.539e-01, -7.681e-01, 1.768e-01, -9.182e-02, 1.629e-01, 2.997e-02, 9.059e-04, 3.460e-02, 2.476e-01, -1.750e-01, -6.470e-02, -2.549e-01, -2.789e-01, 1.741e-01, -1.574e-01, -2.126e-01));
	r += mul(s3_2, M4(1.052e-01, -6.515e-01, -2.436e-01, -1.211e-01, -1.723e-01, -1.144e-01, -9.098e-02, -2.235e-01, 1.805e-02, 1.091e-02, 9.282e-02, 1.623e-01, -2.205e-02, 2.811e-01, -1.062e-01, -4.859e-02));
	r += mul(s3_3, M4(-9.015e-02, 1.548e-01, 1.610e-01, -3.910e-02, -5.142e-02, 2.633e-01, 2.238e-02, -1.935e-01, 4.609e-01, 3.210e-03, 1.232e-01, -2.519e-01, 8.849e-03, -2.666e-01, 1.314e-02, 1.231e-02));
	r += mul(s3_4, M4(-2.819e-01, 6.671e-01, 1.927e-01, 3.052e-03, -3.183e-01, -1.215e-01, -7.978e-02, -1.905e-01, -2.291e-01, 2.426e-01, 1.288e-01, 9.826e-02, -4.166e-02, -7.247e-03, 1.091e-03, -1.960e-01));
	r += mul(s3_5, M4(-2.427e-01, -7.268e-02, -4.112e-01, -1.815e-01, -2.705e-01, 2.016e-01, -1.369e-01, -5.098e-01, 2.739e-02, -8.233e-03, -2.218e-01, -1.507e-01, 1.949e-01, -6.266e-02, -5.331e-02, -2.134e-01));
	r += mul(s3_6, M4(-2.585e-01, 4.413e-02, 1.042e-01, -6.314e-03, -1.439e-01, 9.978e-03, -2.548e-01, -1.985e-01, -1.455e-01, -1.886e-02, -8.421e-02, -7.734e-02, 1.310e-01, -6.220e-02, 2.036e-01, 3.793e-02));
	r += mul(s3_7, M4(5.586e-02, 2.610e-02, 2.591e-02, -2.786e-02, -1.822e-01, 1.745e-01, 1.835e-01, -1.548e-01, -1.558e-01, 6.620e-02, -1.443e-01, 4.345e-02, 1.529e-01, -7.200e-02, -5.067e-02, -3.828e-02));
	r += mul(s3_8, M4(-1.002e-01, 2.916e-01, 2.632e-02, 1.387e-01, -9.945e-03, -1.003e-01, -1.265e-01, -2.609e-01, -2.681e-02, -8.304e-03, 4.079e-03, 3.061e-02, -1.765e-01, -2.983e-02, 1.043e-01, 5.419e-02));
	r += V4(-3.715e-03, 1.369e-03, 3.014e-03, 2.464e-03);
	return r;
}
void Pass2(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = max(-s0_0, 0.0);
	V4 s1_1 = max(-s0_1, 0.0);
	V4 s1_2 = max(-s0_2, 0.0);
	V4 s1_3 = max(-s0_3, 0.0);
	V4 s1_4 = max(-s0_4, 0.0);
	V4 s1_5 = max(-s0_5, 0.0);
	V4 s1_6 = max(-s0_6, 0.0);
	V4 s1_7 = max(-s0_7, 0.0);
	V4 s1_8 = max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = max(-s2_0, 0.0);
	V4 s3_1 = max(-s2_1, 0.0);
	V4 s3_2 = max(-s2_2, 0.0);
	V4 s3_3 = max(-s2_3, 0.0);
	V4 s3_4 = max(-s2_4, 0.0);
	V4 s3_5 = max(-s2_5, 0.0);
	V4 s3_6 = max(-s2_6, 0.0);
	V4 s3_7 = max(-s2_7, 0.0);
	V4 s3_8 = max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t3[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 3
//!DESC CuNNy-2x8C-BILINEAR-CHROMA-NVL-conv2
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t2, t3
//!OUT t0, t1
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t2, float2(x, y))
#define l1(x, y) O(t3, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(-2.606e-02, 2.510e-01, 2.117e-02, -2.402e-02, -7.105e-02, -6.649e-02, 1.418e-02, 1.736e-01, 9.060e-02, -1.368e-02, 2.286e-02, -3.648e-02, 1.055e-01, -2.812e-02, -2.311e-02, -3.450e-02));
	r += mul(s0_1, M4(-9.253e-02, -4.048e-02, 1.343e-01, 1.228e-01, -6.151e-02, -9.734e-02, -6.763e-02, 1.119e-01, 1.053e-01, -6.763e-02, 8.401e-02, -1.547e-02, 1.949e-01, 1.877e-01, -3.669e-03, -1.616e-01));
	r += mul(s0_2, M4(-2.078e-02, 2.855e-02, 5.122e-03, 8.129e-02, -1.097e-02, 5.730e-02, 5.384e-02, 3.836e-02, 3.042e-02, 2.842e-02, 1.083e-02, -2.632e-02, 8.472e-02, -7.313e-02, -3.917e-02, -8.276e-02));
	r += mul(s0_3, M4(1.654e-01, -3.256e-01, -1.303e-02, 7.295e-02, 1.303e-01, 1.473e-01, 2.794e-02, 1.432e-02, -9.946e-02, 3.483e-01, 5.345e-02, 1.566e-01, -2.142e-01, 2.922e-02, -2.573e-03, -8.221e-02));
	r += mul(s0_4, M4(1.532e-01, 3.135e-01, -2.042e-02, 4.041e-02, 2.398e-02, -1.179e-01, -1.073e-01, -4.870e-02, -1.411e-01, -1.726e-01, -1.519e-01, 1.020e-01, -3.731e-01, 2.703e-02, 5.841e-02, -1.764e-02));
	r += mul(s0_5, M4(5.524e-02, -7.739e-02, -4.565e-01, -7.237e-02, -6.717e-02, 4.889e-02, -7.642e-02, -9.948e-03, 3.273e-02, -2.223e-02, -1.367e-01, 5.432e-02, -2.196e-01, -2.479e-02, 1.720e-01, 1.476e-02));
	r += mul(s0_6, M4(-1.148e-01, 1.122e-01, 1.853e-03, 3.137e-02, -1.229e-01, 1.792e-01, 1.213e-02, 9.839e-02, -6.278e-02, -1.575e-01, -5.737e-02, -6.309e-02, 1.062e-01, -7.495e-02, 3.656e-04, -5.444e-02));
	r += mul(s0_7, M4(-4.157e-01, -9.441e-02, 3.479e-02, 3.661e-02, -2.865e-01, -4.034e-02, 3.082e-02, 7.301e-02, 3.564e-01, 1.721e-01, 1.495e-03, -4.038e-02, 2.520e-01, -2.716e-02, -2.462e-02, -7.446e-02));
	r += mul(s0_8, M4(-1.571e-01, -3.235e-02, -9.316e-02, -2.704e-02, 9.917e-02, 3.970e-02, -1.282e-01, 1.641e-02, 3.291e-02, -5.430e-02, 9.288e-02, -7.291e-03, 9.936e-02, -8.601e-03, 8.254e-02, -1.953e-02));
	r += mul(s1_0, M4(-6.624e-02, 1.695e-01, -6.083e-02, 2.021e-01, -8.350e-03, 2.079e-01, -1.278e-01, -1.524e-01, -3.926e-02, -1.188e-01, -4.504e-02, 2.942e-02, -1.373e-01, 6.170e-01, -3.396e-03, 3.559e-01));
	r += mul(s1_1, M4(6.655e-03, 6.339e-02, -1.880e-01, 6.795e-03, 1.023e-01, -6.652e-02, -1.007e-03, -5.657e-01, -3.129e-02, -1.683e-01, -6.235e-02, -5.218e-02, -2.705e-01, -1.856e-01, -5.018e-01, 3.235e-01));
	r += mul(s1_2, M4(1.013e-02, -5.153e-02, -7.521e-03, -6.018e-02, 1.323e-01, -3.332e-02, 1.920e-01, 8.215e-03, -1.575e-03, -1.121e-01, -9.980e-02, -4.180e-02, -1.159e-02, 3.698e-02, -4.330e-02, 9.887e-02));
	r += mul(s1_3, M4(-1.082e-03, -5.143e-02, -5.344e-03, -1.214e-01, 1.639e-01, 1.296e+00, 4.432e-02, 2.272e-02, -7.484e-02, 1.501e-01, 4.093e-02, 2.300e-02, 3.232e-01, 1.102e+00, 3.826e-02, 3.772e-01));
	r += mul(s1_4, M4(-2.270e-02, -6.696e-02, 1.334e-01, -4.446e-02, 8.160e-01, -1.204e+00, 2.368e-02, 4.484e-01, 6.098e-02, -1.420e-01, -1.856e-01, -7.232e-02, -2.523e-01, 2.088e-02, -8.284e-02, 3.034e-01));
	r += mul(s1_5, M4(-1.079e-01, 8.032e-02, 1.113e-01, 1.254e-01, 2.386e-01, 3.747e-02, -4.250e-01, -1.103e-01, -6.867e-02, 3.248e-02, -4.163e-01, 1.740e-02, 1.498e-01, 1.106e-02, -1.925e-01, 6.092e-02));
	r += mul(s1_6, M4(1.656e-02, 5.732e-02, 1.885e-02, 5.527e-03, -1.898e-02, -1.831e-01, -2.913e-02, -1.112e-01, 7.689e-02, -8.865e-02, -1.293e-02, -6.860e-02, -2.610e-01, -1.549e-01, -2.308e-02, -1.082e-01));
	r += mul(s1_7, M4(-1.168e-01, -3.142e-02, -2.047e-02, 1.248e-02, -6.609e-01, 2.627e-01, 1.257e-01, 6.841e-02, 2.692e-01, -1.750e-03, 5.585e-02, -6.985e-02, -5.841e-01, 8.279e-02, -9.982e-02, -9.593e-02));
	r += mul(s1_8, M4(9.657e-02, 2.489e-02, 5.928e-03, 2.361e-03, 7.658e-02, -1.229e-01, 4.980e-02, 4.947e-02, -1.010e-01, 3.848e-03, -8.763e-02, 4.077e-02, -3.774e-01, -2.509e-02, 9.075e-02, -2.700e-02));
	r += mul(s2_0, M4(4.012e-02, -1.815e-01, 2.264e-02, 9.008e-02, 7.947e-02, -1.958e-01, 7.834e-02, -1.125e-01, 3.259e-02, 1.238e-01, 8.055e-03, -1.213e-01, 1.992e-02, -6.733e-02, -2.690e-02, -1.716e-03));
	r += mul(s2_1, M4(4.458e-02, -1.015e-01, -1.010e-01, 5.973e-02, 3.307e-02, -4.623e-02, 6.743e-02, 3.902e-02, -2.406e-02, -1.348e-01, 1.313e-01, 1.886e-02, -2.580e-03, 1.363e-01, -1.611e-01, 1.196e-01));
	r += mul(s2_2, M4(3.698e-02, -8.624e-03, -6.846e-02, -6.031e-02, 4.430e-02, 4.607e-03, 1.257e-01, 3.147e-02, -6.008e-02, 6.363e-03, 1.188e-02, -1.291e-02, -2.454e-02, -7.070e-03, -9.438e-02, 2.043e-02));
	r += mul(s2_3, M4(-7.154e-02, 2.495e-02, -2.677e-03, -4.794e-03, 3.270e-01, 1.375e-01, 4.445e-02, 8.360e-02, -1.244e-01, -2.607e-01, -2.445e-02, -2.594e-02, 1.684e-01, -1.474e-01, -3.211e-02, -3.181e-02));
	r += mul(s2_4, M4(-2.319e-01, -7.128e-01, -1.304e-01, -2.305e-01, -5.879e-01, -1.077e-01, 9.596e-02, 4.427e-02, -6.295e-02, 4.830e-02, -1.048e-02, -1.272e-02, 4.162e-01, 3.488e-01, -1.474e-01, 9.171e-03));
	r += mul(s2_5, M4(-1.031e-01, 6.331e-02, -1.814e-02, 2.902e-02, -7.925e-02, 3.715e-02, -2.124e-01, 1.556e-02, -2.754e-02, 9.600e-03, 5.148e-02, 5.304e-02, 5.787e-03, -8.139e-03, -5.951e-02, 5.971e-04));
	r += mul(s2_6, M4(-1.037e-01, -2.690e-02, 4.429e-03, 4.955e-02, -7.597e-02, -5.634e-03, 1.492e-02, 4.461e-02, 1.107e-01, -6.581e-02, -1.499e-02, -6.037e-03, -2.105e-01, 2.568e-01, -9.012e-02, 1.218e-01));
	r += mul(s2_7, M4(-1.172e-01, 4.346e-02, -9.312e-02, 4.282e-02, -2.820e-03, 2.285e-03, 9.127e-03, 3.553e-02, 3.916e-01, 6.162e-02, -1.184e-01, -9.874e-03, -3.651e-01, -3.883e-02, -1.233e-01, -1.377e-02));
	r += mul(s2_8, M4(4.081e-01, 7.739e-03, -1.009e-02, 7.302e-02, 1.252e-02, 4.043e-02, -6.714e-02, 1.649e-03, 1.746e-01, 3.188e-02, 2.148e-02, 3.626e-02, -1.072e-01, -3.375e-02, -7.313e-02, -6.425e-02));
	r += mul(s3_0, M4(-2.673e-02, -5.029e-02, -3.303e-02, -7.118e-02, -5.080e-04, 3.608e-02, -1.900e-02, -7.578e-02, 1.937e-02, 3.447e-01, 2.173e-02, -3.604e-02, -5.188e-02, 1.655e-01, 9.405e-03, 7.932e-02));
	r += mul(s3_1, M4(-7.270e-03, 7.984e-02, 4.688e-02, -8.599e-02, 6.304e-02, 7.777e-02, 1.063e-02, -1.421e-01, -4.813e-02, -1.047e-02, -2.020e-01, 1.742e-01, -5.353e-02, 1.617e-02, -9.156e-02, 5.577e-02));
	r += mul(s3_2, M4(-2.262e-02, -2.196e-02, -5.552e-02, 2.588e-02, -5.035e-03, -3.261e-02, 4.408e-02, -3.820e-02, 3.898e-02, 1.965e-02, -9.698e-02, 3.380e-02, -2.460e-02, 1.290e-02, 5.727e-02, -1.898e-02));
	r += mul(s3_3, M4(-3.707e-02, 2.283e-01, 8.930e-03, 7.513e-02, -2.461e-01, 3.578e-01, -5.480e-02, 5.536e-02, -6.070e-02, -6.823e-02, -2.605e-01, 1.223e-01, 1.502e-01, -5.105e-02, 2.032e-02, -7.327e-02));
	r += mul(s3_4, M4(2.666e-01, 4.283e-01, -1.023e-02, 6.232e-02, -1.177e-01, -6.748e-03, 1.960e-01, 7.395e-02, 3.927e-01, 2.178e-01, 1.174e-01, 2.475e+00, 8.217e-02, -2.588e-01, 8.258e-02, -9.404e-02));
	r += mul(s3_5, M4(2.089e-01, -6.787e-02, 6.520e-02, -4.034e-02, 5.347e-02, 3.330e-03, 5.706e-02, -2.650e-03, 8.691e-02, -4.209e-02, -2.681e-01, -4.275e-02, -6.029e-02, 1.576e-02, -1.932e-02, 1.113e-02));
	r += mul(s3_6, M4(1.435e-01, 1.743e-02, -2.582e-02, -3.815e-02, 6.170e-02, -1.882e-01, 2.203e-02, -1.662e-02, -4.597e-02, 1.604e-02, 5.667e-02, -7.630e-02, -2.048e-01, 3.421e-02, 9.243e-03, 5.518e-02));
	r += mul(s3_7, M4(-1.696e-01, 2.446e-01, 8.678e-02, 6.426e-02, 1.856e-01, 1.816e-01, -1.322e-01, -7.611e-02, -7.168e-01, -4.902e-02, -5.347e-02, -1.459e-01, -2.376e-01, -1.114e-01, -8.960e-02, -6.522e-03));
	r += mul(s3_8, M4(-3.735e-01, -1.581e-02, -2.329e-02, -2.077e-02, 2.544e-02, -4.700e-02, 1.851e-01, -7.533e-02, -2.591e-01, -4.294e-02, 1.300e-01, -4.459e-02, 1.303e-01, 3.436e-02, -4.501e-02, 2.133e-04));
	r += V4(-2.131e-03, -1.880e-03, -4.379e-04, -3.720e-04);
	return r;
}
float4 f1(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(6.802e-03, -1.092e-01, 6.585e-02, -6.484e-02, -1.648e-01, -5.978e-02, -1.164e-01, 4.117e-02, -8.582e-02, -4.613e-02, -1.138e-02, -2.159e-01, 8.151e-02, 9.964e-02, 6.293e-02, -1.221e-02));
	r += mul(s0_1, M4(-1.357e-01, 8.843e-03, -4.177e-01, 4.302e-02, 1.521e-02, 1.450e-01, -1.164e-01, 1.255e-01, -2.198e-02, 1.040e-01, -1.365e-01, -7.509e-02, 3.118e-02, -1.130e-01, 1.586e-01, -1.909e-01));
	r += mul(s0_2, M4(2.277e-02, -5.318e-02, 1.622e-01, 3.039e-02, -4.308e-02, -9.010e-02, 1.685e-01, 2.456e-02, 3.519e-02, 8.389e-03, 2.186e-03, 1.018e-02, 4.736e-02, 1.479e-01, -2.173e-01, -2.515e-02));
	r += mul(s0_3, M4(-3.764e-02, -3.040e-02, 8.587e-03, -1.749e-02, 4.456e-02, -2.457e-01, -1.410e-02, 7.318e-02, -1.394e-01, 1.538e-01, -2.026e-01, -1.445e-01, 8.387e-02, -1.006e-02, -2.843e-02, 2.699e-03));
	r += mul(s0_4, M4(2.889e-01, 3.181e-01, 1.104e-01, 5.803e-02, 8.192e-02, 3.639e-01, -8.932e-02, 8.234e-02, 4.676e-02, -2.746e-01, 4.877e-02, 1.731e-01, -1.023e-01, -1.846e-01, -1.346e-01, -1.148e-01));
	r += mul(s0_5, M4(-6.248e-03, -6.579e-02, 1.743e-01, 1.027e-01, -7.708e-02, 4.422e-02, 1.501e-01, -2.944e-02, 3.338e-02, 6.194e-04, -9.187e-02, -6.870e-02, 2.160e-02, -9.631e-02, -4.181e-02, -8.472e-02));
	r += mul(s0_6, M4(1.208e-01, -2.727e-02, 2.380e-02, -3.254e-02, 1.970e-02, 9.105e-02, -1.372e-01, 3.955e-03, 4.182e-02, 2.222e-01, -1.567e-01, 1.881e-02, -6.206e-02, -9.548e-02, 4.301e-02, 9.204e-03));
	r += mul(s0_7, M4(-3.517e-02, 1.629e-01, -9.288e-02, -1.392e-01, -8.276e-02, -1.528e-01, 2.560e-01, -3.760e-02, -1.185e-02, -7.088e-02, 7.246e-02, -2.506e-02, 7.741e-02, -2.949e-02, -1.650e-02, 2.505e-02));
	r += mul(s0_8, M4(1.140e-03, -8.671e-03, -8.889e-02, 8.794e-02, -1.512e-02, -3.672e-02, -4.201e-02, 4.237e-02, 3.555e-02, -6.400e-02, 5.661e-02, 5.301e-02, 7.165e-04, 8.732e-02, -9.409e-02, -5.446e-02));
	r += mul(s1_0, M4(-5.694e-02, 2.097e-01, 2.766e-02, 1.435e-01, 4.243e-02, 2.365e-01, 1.473e-01, -4.151e-02, 5.364e-02, 1.078e-01, -2.545e-02, 4.870e-02, -3.616e-01, 5.363e-02, 8.468e-04, 8.798e-02));
	r += mul(s1_1, M4(1.225e-01, -9.588e-02, 2.936e-01, -2.562e-01, 2.280e-02, -6.973e-01, 5.346e-02, -2.641e-01, 1.831e-02, 6.735e-02, 2.275e-01, 1.509e-02, -3.087e-02, -2.711e-01, -2.096e-01, -3.739e-01));
	r += mul(s1_2, M4(2.666e-02, -6.030e-02, -1.395e-01, 8.541e-02, 1.460e-02, 2.748e-01, 4.708e-02, 2.842e-01, -5.050e-02, 1.419e-01, -7.486e-02, 1.993e-02, -2.297e-02, 3.536e-02, 1.461e-01, -9.574e-02));
	r += mul(s1_3, M4(4.455e-02, -3.814e-02, 3.532e-01, 1.027e-01, -4.483e-01, -5.997e-01, -3.997e-02, 1.370e-02, -1.164e-01, 3.865e-02, 5.587e-02, 2.562e-03, -6.381e-01, -2.672e-01, 2.853e-01, -2.864e-02));
	r += mul(s1_4, M4(-4.680e-01, 2.058e-01, -4.147e-01, -1.636e-01, 2.856e-01, -2.416e-01, -1.184e+00, 3.135e-02, -3.933e-03, -1.359e-01, 1.450e-01, 4.235e-02, -8.420e-02, -6.089e-01, -4.563e-01, -3.593e-01));
	r += mul(s1_5, M4(1.012e-01, -1.808e-01, 6.354e-02, -1.146e-01, 1.885e-02, 5.850e-01, -1.005e-01, -3.339e-01, 8.808e-02, 1.494e-01, 5.085e-02, 1.577e-02, -2.225e-02, 1.343e-01, -1.307e-01, -2.148e-01));
	r += mul(s1_6, M4(-1.155e-01, -1.559e-01, 9.835e-02, -9.003e-04, -1.948e-01, -4.573e-02, -6.866e-02, 5.682e-02, -4.252e-02, 6.626e-02, -4.308e-02, 2.934e-02, -4.857e-01, -4.365e-01, -1.412e-01, -7.141e-02));
	r += mul(s1_7, M4(-3.696e-03, -3.113e-02, -1.725e-01, 4.477e-02, 2.420e-01, -4.344e-01, -4.185e-02, -9.587e-02, 5.274e-02, -4.236e-02, 3.930e-01, 7.732e-02, 9.381e-02, 1.132e-02, -9.530e-01, 1.045e-01));
	r += mul(s1_8, M4(3.173e-02, 7.192e-03, 9.908e-02, -5.693e-02, 7.785e-02, 5.509e-02, 4.729e-01, -1.267e-01, -5.303e-02, -1.336e-01, 2.512e-01, -8.591e-02, -8.292e-03, -7.083e-02, -1.117e-02, -2.680e-01));
	r += mul(s2_0, M4(-9.980e-02, -1.195e-02, -1.522e-01, 6.551e-03, 9.805e-02, -1.065e-01, 4.850e-02, 4.077e-02, 9.867e-02, -4.794e-02, 5.210e-02, -2.501e-02, -4.140e-02, 2.670e-02, 6.519e-02, -6.618e-02));
	r += mul(s2_1, M4(9.204e-02, 1.076e-01, 1.694e-01, 1.519e-01, -7.097e-02, -9.204e-02, -2.245e-01, 1.214e-01, 2.773e-02, -3.262e-03, -6.559e-02, 3.963e-02, -1.655e-01, -5.818e-02, -5.086e-02, -1.892e-01));
	r += mul(s2_2, M4(-2.449e-02, 6.392e-02, -5.715e-02, -8.505e-02, -5.328e-02, -3.090e-02, -2.148e-02, -6.702e-02, -3.177e-03, -1.356e-02, 3.855e-02, -8.077e-03, 2.589e-03, 8.418e-03, -4.600e-02, -2.408e-02));
	r += mul(s2_3, M4(1.201e-01, 1.400e-02, -7.898e-02, 5.872e-02, 1.131e-01, -2.368e-02, 5.415e-02, 1.077e-01, -6.078e-03, 1.743e-01, -4.336e-02, -9.249e-02, -4.980e-01, -9.163e-02, 5.071e-02, -2.372e-01));
	r += mul(s2_4, M4(-1.452e-01, -1.946e-01, 1.938e-01, -5.279e-02, -2.512e-01, 3.627e-02, -1.316e-01, -2.901e-01, -4.601e-01, -7.825e-02, -7.556e-02, -2.831e-02, -5.206e-01, 3.063e-02, -1.636e-01, -1.408e+00));
	r += mul(s2_5, M4(-8.379e-02, -4.450e-02, 2.814e-02, -3.389e-01, 2.636e-02, -5.159e-02, 7.911e-02, 3.042e-01, 6.188e-02, -1.294e-01, 2.557e-01, 1.093e-01, 2.596e-02, 4.634e-02, -2.255e-01, -3.810e-02));
	r += mul(s2_6, M4(1.301e-02, 1.743e-01, 2.294e-02, -5.255e-02, 1.920e-02, 5.247e-02, -1.213e-02, -1.694e-02, 2.956e-02, 8.350e-03, 2.722e-02, -3.418e-02, -1.191e-01, 9.875e-02, -2.326e-01, -2.923e-02));
	r += mul(s2_7, M4(-5.997e-02, -1.470e-01, -1.753e-01, 4.070e-02, -4.239e-02, 2.747e-02, -5.172e-02, -2.943e-02, 4.726e-02, 2.104e-01, -7.349e-02, -7.971e-02, 1.954e-02, -1.940e-01, 1.908e-01, 1.626e-01));
	r += mul(s2_8, M4(-1.303e-03, -5.923e-03, -3.185e-02, 3.502e-02, 1.557e-02, -9.986e-02, 1.282e-01, 8.666e-02, 2.004e-03, -4.822e-02, 1.743e-01, 6.896e-02, -2.075e-03, 1.475e-01, -1.066e-01, -1.559e-01));
	r += mul(s3_0, M4(3.908e-02, 2.902e-03, 8.873e-02, -5.963e-02, 6.908e-02, 1.956e-02, 5.840e-02, 1.657e-02, -3.958e-02, 1.697e-02, 1.509e-01, 1.158e-02, -4.870e-02, -1.035e-01, -7.004e-02, 8.593e-02));
	r += mul(s3_1, M4(-5.890e-02, -3.502e-02, -9.860e-02, -3.686e-02, 4.699e-02, -7.043e-02, 1.738e-01, -1.687e-01, 7.125e-02, 6.596e-02, -3.978e-02, -1.781e-01, 8.084e-02, -4.490e-02, 3.503e-02, 1.024e-01));
	r += mul(s3_2, M4(-7.284e-03, 3.177e-02, 4.832e-03, -4.305e-02, -2.407e-02, 2.581e-02, -1.274e-01, 3.294e-02, 4.626e-02, 1.168e-04, 7.024e-02, 7.628e-02, -2.877e-03, -2.543e-02, 1.853e-02, 3.013e-02));
	r += mul(s3_3, M4(-1.923e-01, -1.733e-01, -1.111e-01, 4.355e-02, 2.126e-03, 4.601e-02, 2.479e-02, 1.754e-02, -4.161e-01, 6.305e-01, -1.118e-01, 3.113e-02, -2.362e-02, -1.281e-01, 1.054e-01, 3.618e-02));
	r += mul(s3_4, M4(8.608e-03, -2.605e-01, 1.578e-01, -7.828e-02, -3.369e-02, -5.447e-01, 9.375e-02, 1.575e-01, -1.279e-02, 7.029e-01, -1.040e-01, -1.014e-01, 1.167e-02, -4.806e-01, -2.627e-01, -2.032e-02));
	r += mul(s3_5, M4(-5.549e-04, 1.847e-01, -2.640e-01, 7.333e-02, 3.678e-03, 1.088e-01, -1.762e-01, -5.369e-02, 2.208e-02, -2.742e-02, 5.547e-02, 1.694e-01, -6.707e-02, -8.179e-02, -9.071e-03, -9.243e-02));
	r += mul(s3_6, M4(6.713e-02, -1.454e-02, 1.673e-02, 3.926e-02, -2.319e-01, -1.637e-01, 1.680e-02, -2.000e-02, 7.795e-02, -1.346e-01, 5.758e-01, 8.872e-02, -3.722e-03, 7.285e-02, -1.400e-01, -3.064e-02));
	r += mul(s3_7, M4(3.235e-05, -1.604e-02, -2.049e-01, -1.131e-01, 2.014e-01, 1.455e-01, -7.912e-01, 7.697e-02, -8.765e-04, 5.978e-02, -3.247e-01, 1.421e-01, 7.469e-03, 4.415e-02, 1.602e-01, 1.008e-01));
	r += mul(s3_8, M4(3.534e-02, -1.160e-01, -5.296e-03, 1.976e-02, -2.572e-03, 1.492e-02, 4.478e-02, -1.274e-01, -1.076e-02, 2.994e-02, 5.066e-02, -8.970e-02, -3.199e-02, 3.446e-02, -8.322e-02, 3.514e-02));
	r += V4(2.609e-04, -1.168e-03, -3.232e-03, -1.577e-03);
	return r;
}
void Pass3(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = max(-s0_0, 0.0);
	V4 s1_1 = max(-s0_1, 0.0);
	V4 s1_2 = max(-s0_2, 0.0);
	V4 s1_3 = max(-s0_3, 0.0);
	V4 s1_4 = max(-s0_4, 0.0);
	V4 s1_5 = max(-s0_5, 0.0);
	V4 s1_6 = max(-s0_6, 0.0);
	V4 s1_7 = max(-s0_7, 0.0);
	V4 s1_8 = max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = max(-s2_0, 0.0);
	V4 s3_1 = max(-s2_1, 0.0);
	V4 s3_2 = max(-s2_2, 0.0);
	V4 s3_3 = max(-s2_3, 0.0);
	V4 s3_4 = max(-s2_4, 0.0);
	V4 s3_5 = max(-s2_5, 0.0);
	V4 s3_6 = max(-s2_6, 0.0);
	V4 s3_7 = max(-s2_7, 0.0);
	V4 s3_8 = max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t0[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
	t1[gxy] = f1(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 4
//!DESC CuNNy-2x8C-BILINEAR-CHROMA-NVL-out
//!BLOCK_SIZE 8
//!NUM_THREADS 64
//!IN t0, t1
//!OUT t2
#define O(t, p) t.SampleLevel(SP, pos + p * pt, 0)
#define V4 min16float4
#define M4 min16float4x4
#define l0(x, y) O(t0, float2(x, y))
#define l1(x, y) O(t1, float2(x, y))
float4 f0(float2 pt, float2 pos, V4 s0_0, V4 s0_1, V4 s0_2, V4 s0_3, V4 s0_4, V4 s0_5, V4 s0_6, V4 s0_7, V4 s0_8, V4 s1_0, V4 s1_1, V4 s1_2, V4 s1_3, V4 s1_4, V4 s1_5, V4 s1_6, V4 s1_7, V4 s1_8, V4 s2_0, V4 s2_1, V4 s2_2, V4 s2_3, V4 s2_4, V4 s2_5, V4 s2_6, V4 s2_7, V4 s2_8, V4 s3_0, V4 s3_1, V4 s3_2, V4 s3_3, V4 s3_4, V4 s3_5, V4 s3_6, V4 s3_7, V4 s3_8) {
	V4 r = 0.0;
	r += mul(s0_0, M4(1.366e-01, 9.233e-03, -7.020e-02, 1.023e-01, 9.635e-03, 1.376e-02, 8.552e-03, 2.845e-03, -2.092e-02, 1.752e-01, -1.123e-01, -1.696e-01, -5.921e-03, -3.869e-02, -2.789e-02, -8.776e-03));
	r += mul(s0_1, M4(6.704e-01, 6.934e-01, -7.181e-01, -7.676e-01, -1.074e-03, 4.604e-02, 4.562e-02, -6.241e-03, 2.108e-02, -9.117e-02, 6.909e-02, 4.877e-02, 1.478e-02, 7.909e-02, -3.137e-02, -2.287e-02));
	r += mul(s0_2, M4(-3.648e-02, 1.013e-01, 2.454e-02, -9.252e-02, -2.743e-02, -9.742e-02, -1.718e-02, 2.830e-02, -2.070e-03, 5.598e-03, -1.677e-02, -2.006e-02, 2.707e-03, -2.049e-03, -5.916e-04, -9.562e-03));
	r += mul(s0_3, M4(-9.291e-03, 2.793e-02, 1.080e-01, 5.144e-02, 1.478e-03, -1.064e-02, -1.643e-02, 1.195e-03, -1.001e+00, -6.601e-01, 7.247e-01, 3.564e-01, 1.426e-01, 6.092e-02, 2.353e-01, -1.519e-02));
	r += mul(s0_4, M4(-8.626e-02, -9.937e-02, 1.343e-01, 1.096e-01, -4.560e-03, 2.412e-02, -1.323e-01, 1.631e-02, 1.909e-01, 3.309e-01, -1.523e-01, 1.038e-01, -8.666e-02, 1.050e-01, -2.087e-03, 2.666e-01));
	r += mul(s0_5, M4(-2.390e-02, 3.726e-03, -3.010e-02, 4.719e-02, -1.411e-01, -1.620e-01, -3.368e-02, -1.831e-01, -1.490e-02, -8.712e-03, -1.310e-02, 1.565e-02, 1.859e-03, 1.431e-02, 4.225e-03, 2.824e-02));
	r += mul(s0_6, M4(6.972e-03, 9.156e-03, 1.536e-02, 1.124e-02, 1.916e-02, 1.111e-02, 6.069e-02, 1.535e-02, 4.212e-01, 1.617e-01, -5.254e-01, 2.034e-01, -5.237e-02, -5.701e-02, -6.623e-02, -4.407e-02));
	r += mul(s0_7, M4(-1.334e-02, -2.729e-02, -1.801e-02, -2.338e-02, 9.546e-02, 8.374e-02, 1.160e-01, 1.194e-01, 2.959e-01, 4.205e-01, 1.279e-01, -7.204e-01, 1.182e-02, 1.468e-03, -2.774e-03, -1.946e-02));
	r += mul(s0_8, M4(2.154e-03, 6.035e-03, -1.381e-02, -8.087e-03, 9.260e-03, 1.382e-02, 1.162e-02, 2.012e-02, 2.180e-02, 3.374e-03, -1.409e-02, 2.699e-02, -8.041e-03, -3.428e-03, -4.431e-03, -1.935e-03));
	r += mul(s1_0, M4(-5.652e-02, -4.994e-02, -7.106e-02, -1.379e-02, -1.071e-02, -5.270e-03, -1.382e-02, -3.576e-03, 6.661e-02, 3.787e-02, 7.983e-02, 3.612e-02, 1.126e-02, 3.551e-02, 2.100e-03, 1.241e-02));
	r += mul(s1_1, M4(7.480e-02, 5.928e-02, 1.413e-02, -4.564e-03, -1.971e-02, -4.331e-02, -8.758e-03, -8.568e-03, -5.397e-02, -2.341e-02, -2.423e-02, -3.430e-03, 1.194e-01, -2.500e-03, -7.448e-02, -3.699e-02));
	r += mul(s1_2, M4(1.577e-02, 2.226e-02, -2.757e-03, -1.443e-02, 1.184e-01, 1.121e-02, 2.720e-03, -1.311e-03, -5.068e-03, -7.193e-03, 3.161e-03, -3.778e-04, 4.310e-03, 2.089e-01, -4.993e-02, -7.202e-02));
	r += mul(s1_3, M4(-2.030e-02, -2.440e-02, -4.604e-02, -4.287e-02, -4.611e-03, 9.911e-04, 1.569e-02, 7.707e-03, 2.833e-01, 6.762e-02, 2.529e-01, 6.051e-02, -1.246e-01, -8.728e-02, -1.274e-01, -3.098e-02));
	r += mul(s1_4, M4(-5.201e-02, 2.360e-02, -2.374e-02, 3.210e-02, 1.499e-01, -6.080e-02, 3.020e-02, -2.964e-02, -7.463e-02, -9.998e-02, -9.539e-02, -1.441e-01, -1.252e+00, -2.444e-01, 9.659e-01, 1.570e-01));
	r += mul(s1_5, M4(2.016e-02, -1.590e-02, 2.497e-02, -8.719e-03, -4.717e-01, 1.656e-01, 2.543e-01, 5.829e-01, 2.069e-02, 3.015e-03, -2.796e-03, -1.137e-02, 1.237e-01, -1.436e+00, 2.951e-01, 8.650e-01));
	r += mul(s1_6, M4(-1.283e-02, -9.373e-03, -3.000e-03, -1.598e-02, -2.068e-02, -1.664e-02, -7.014e-02, -6.705e-03, -9.320e-02, -8.667e-02, -3.455e-02, -5.494e-02, 9.180e-02, 5.259e-02, -7.751e-02, 3.382e-02));
	r += mul(s1_7, M4(3.381e-02, 2.590e-02, 1.211e-03, 3.162e-02, -5.067e-02, -4.861e-02, -2.150e-01, -9.622e-02, -3.549e-02, -4.600e-02, -3.616e-02, -1.967e-02, -1.894e-01, -3.269e-02, 5.226e-01, -1.157e-01));
	r += mul(s1_8, M4(4.442e-03, 2.785e-03, 3.496e-03, -1.383e-02, 1.214e-01, 1.108e-01, -3.797e-02, -2.723e-01, -1.606e-02, -6.550e-03, -6.455e-03, -1.113e-02, -9.503e-03, -1.228e-01, -2.124e-01, 3.905e-01));
	r += mul(s2_0, M4(7.009e-03, 3.844e-02, -1.837e-02, 2.187e-03, -4.880e-03, 2.345e-02, 1.988e-02, 9.122e-03, -8.011e-02, -7.234e-02, 4.941e-02, -5.489e-03, -2.537e-01, 3.745e-02, 1.782e-01, 1.106e-01));
	r += mul(s2_1, M4(3.292e-01, 4.454e-02, -7.157e-02, 1.182e-02, -3.643e-01, 2.920e-01, 2.070e-02, 7.621e-02, 5.879e-01, -6.671e-01, 1.888e-01, -2.309e-01, -3.726e-02, 1.076e-01, -6.466e-02, -8.436e-02));
	r += mul(s2_2, M4(-9.465e-02, -6.249e-02, 1.492e-01, -8.419e-02, 7.623e-02, -5.945e-02, 5.970e-02, -1.101e-01, -1.392e-02, 1.323e-02, -8.189e-04, 5.044e-02, -7.433e-03, -2.713e-02, -1.142e-02, -5.917e-03));
	r += mul(s2_3, M4(3.120e-02, 3.751e-02, 1.015e-01, 4.371e-02, -1.938e-02, -3.732e-02, -9.109e-02, -5.701e-02, 3.892e-02, 1.483e-01, -8.840e-02, 1.626e-03, -2.892e-01, 4.136e-01, -9.962e-01, 5.407e-01));
	r += mul(s2_4, M4(2.724e-01, 1.785e-02, 7.515e-01, 7.261e-02, -2.911e-01, 2.177e-01, -8.691e-01, 4.014e-01, 1.248e-01, 6.417e-02, 3.529e-01, -3.487e-01, 7.316e-01, -1.084e+00, 2.793e-01, -6.273e-02));
	r += mul(s2_5, M4(-1.062e+00, 1.317e+00, -1.022e+00, 7.302e-01, -3.976e-02, 3.251e-03, -5.007e-02, 3.420e-02, 2.141e-02, 2.923e-02, -6.101e-03, 3.596e-02, -4.043e-02, 2.089e-02, 1.891e-02, -2.289e-02));
	r += mul(s2_6, M4(-3.022e-02, -1.917e-02, -4.528e-02, -8.258e-03, -4.385e-03, -1.799e-02, 1.086e-01, -3.593e-03, -2.197e-02, -8.143e-03, 5.015e-03, 1.062e-02, -2.864e-02, -1.151e-01, 1.782e-01, -1.323e-01));
	r += mul(s2_7, M4(-5.142e-02, -4.465e-02, -1.640e-01, -9.035e-02, 6.292e-03, 4.867e-02, 1.575e-02, 1.747e-01, 3.877e-02, 1.892e-02, 7.105e-02, 4.557e-02, 1.919e-01, -1.708e-02, 6.276e-01, -7.832e-01));
	r += mul(s2_8, M4(-2.288e-02, -6.682e-02, -3.053e-01, 3.272e-01, -3.434e-03, -1.639e-02, -1.421e-02, -2.295e-02, -5.005e-03, -5.372e-03, -1.277e-03, 1.793e-03, -7.886e-02, 6.859e-02, -7.790e-02, 1.150e-01));
	r += mul(s3_0, M4(-3.974e-02, -1.873e-02, 3.241e-02, -2.099e-03, -1.990e-02, -1.164e-02, -3.175e-02, -3.354e-03, 1.037e-01, 2.661e-02, 8.052e-03, -1.223e-02, -1.019e-02, 8.800e-03, -7.789e-02, -1.041e-02));
	r += mul(s3_1, M4(-6.372e-02, -1.906e-01, 5.014e-03, 1.977e-02, -2.020e-02, 1.436e-02, 1.067e-02, 6.699e-03, 4.293e-02, 1.573e-01, -3.328e-02, -3.870e-02, 1.491e-02, 8.068e-02, 1.084e-02, -1.238e-02));
	r += mul(s3_2, M4(1.721e-02, 3.559e-02, 1.874e-02, 1.296e-02, 2.923e-03, -1.642e-02, 1.801e-02, 1.605e-02, -1.035e-02, -2.599e-02, -1.435e-02, -1.361e-03, 8.810e-03, -1.556e-02, 1.298e-02, 6.195e-03));
	r += mul(s3_3, M4(-4.260e-02, 9.720e-03, -1.743e-01, 2.077e-03, 4.286e-02, 8.817e-03, 1.119e-01, 1.177e-02, -1.115e-01, -6.149e-02, 3.954e-02, 2.683e-03, 1.518e-02, 6.919e-02, 1.506e-01, 4.764e-02));
	r += mul(s3_4, M4(-2.803e-01, -1.295e-01, -3.447e-01, -3.643e-01, 1.915e-01, 1.033e-01, 8.130e-02, 1.516e-01, -1.917e-02, -1.258e-01, -1.465e-02, 3.811e-02, 4.556e-02, -7.250e-02, 5.760e-02, 1.291e-01));
	r += mul(s3_5, M4(7.332e-02, 5.149e-02, 3.387e-02, -3.460e-02, -7.560e-03, 4.070e-02, -1.078e-04, -7.508e-03, -1.247e-02, 5.722e-03, -1.736e-02, -4.779e-02, 2.670e-04, 1.010e-02, 6.725e-04, 1.321e-02));
	r += mul(s3_6, M4(8.852e-03, 8.797e-03, 3.186e-02, 1.367e-02, -7.960e-03, -1.788e-03, -5.483e-02, -2.642e-02, 2.302e-02, 1.654e-02, -3.203e-02, 2.743e-03, 3.874e-02, 2.705e-02, -4.104e-03, 2.260e-02));
	r += mul(s3_7, M4(8.989e-02, 8.130e-02, 1.161e-01, 1.289e-01, -8.862e-02, -5.881e-02, -2.821e-02, -7.860e-02, -3.748e-02, -3.504e-02, -2.387e-02, -6.963e-02, 4.964e-03, 2.560e-02, 6.731e-05, -2.374e-02));
	r += mul(s3_8, M4(3.403e-02, 4.016e-02, 4.355e-02, 8.215e-02, 3.650e-03, 9.405e-03, -8.322e-03, 3.634e-02, 2.644e-03, -2.978e-03, -7.828e-04, 2.685e-03, -7.542e-03, 1.244e-03, -3.933e-03, 5.476e-03));
	r += V4(-9.126e-05, -3.732e-04, 1.030e-04, -6.799e-05);
	return tanh(r);
}
void Pass4(uint2 blockStart, uint3 tid) {
	float2 pt = float2(GetInputPt());
	uint2 gxy = Rmp8x8(tid.x) + blockStart;
	uint2 size = GetInputSize();
	if (gxy.x >= size.x || gxy.y >= size.y) {
		return;
	}
	float2 pos = (gxy + 0.5) * pt;
	V4 s0_0 = l0(-1.0, -1.0);
	V4 s0_1 = l0(0.0, -1.0);
	V4 s0_2 = l0(1.0, -1.0);
	V4 s0_3 = l0(-1.0, 0.0);
	V4 s0_4 = l0(0.0, 0.0);
	V4 s0_5 = l0(1.0, 0.0);
	V4 s0_6 = l0(-1.0, 1.0);
	V4 s0_7 = l0(0.0, 1.0);
	V4 s0_8 = l0(1.0, 1.0);
	V4 s1_0 = max(-s0_0, 0.0);
	V4 s1_1 = max(-s0_1, 0.0);
	V4 s1_2 = max(-s0_2, 0.0);
	V4 s1_3 = max(-s0_3, 0.0);
	V4 s1_4 = max(-s0_4, 0.0);
	V4 s1_5 = max(-s0_5, 0.0);
	V4 s1_6 = max(-s0_6, 0.0);
	V4 s1_7 = max(-s0_7, 0.0);
	V4 s1_8 = max(-s0_8, 0.0);
	s0_0 = max(s0_0, 0.0);
	s0_1 = max(s0_1, 0.0);
	s0_2 = max(s0_2, 0.0);
	s0_3 = max(s0_3, 0.0);
	s0_4 = max(s0_4, 0.0);
	s0_5 = max(s0_5, 0.0);
	s0_6 = max(s0_6, 0.0);
	s0_7 = max(s0_7, 0.0);
	s0_8 = max(s0_8, 0.0);
	V4 s2_0 = l1(-1.0, -1.0);
	V4 s2_1 = l1(0.0, -1.0);
	V4 s2_2 = l1(1.0, -1.0);
	V4 s2_3 = l1(-1.0, 0.0);
	V4 s2_4 = l1(0.0, 0.0);
	V4 s2_5 = l1(1.0, 0.0);
	V4 s2_6 = l1(-1.0, 1.0);
	V4 s2_7 = l1(0.0, 1.0);
	V4 s2_8 = l1(1.0, 1.0);
	V4 s3_0 = max(-s2_0, 0.0);
	V4 s3_1 = max(-s2_1, 0.0);
	V4 s3_2 = max(-s2_2, 0.0);
	V4 s3_3 = max(-s2_3, 0.0);
	V4 s3_4 = max(-s2_4, 0.0);
	V4 s3_5 = max(-s2_5, 0.0);
	V4 s3_6 = max(-s2_6, 0.0);
	V4 s3_7 = max(-s2_7, 0.0);
	V4 s3_8 = max(-s2_8, 0.0);
	s2_0 = max(s2_0, 0.0);
	s2_1 = max(s2_1, 0.0);
	s2_2 = max(s2_2, 0.0);
	s2_3 = max(s2_3, 0.0);
	s2_4 = max(s2_4, 0.0);
	s2_5 = max(s2_5, 0.0);
	s2_6 = max(s2_6, 0.0);
	s2_7 = max(s2_7, 0.0);
	s2_8 = max(s2_8, 0.0);
	t2[gxy] = f0(pt, pos, s0_0, s0_1, s0_2, s0_3, s0_4, s0_5, s0_6, s0_7, s0_8, s1_0, s1_1, s1_2, s1_3, s1_4, s1_5, s1_6, s1_7, s1_8, s2_0, s2_1, s2_2, s2_3, s2_4, s2_5, s2_6, s2_7, s2_8, s3_0, s3_1, s3_2, s3_3, s3_4, s3_5, s3_6, s3_7, s3_8);
}
//!PASS 5
//!DESC CuNNy-2x8C-BILINEAR-CHROMA-NVL-shuffle
//!STYLE PS
//!IN t2, INPUT
float4 Pass5(float2 pos) {
	float2 pt = float2(GetInputPt());
	const static float3x3 rgb2yuv = {0.299, 0.587, 0.114, -0.169, -0.331, 0.5, 0.5, -0.419, -0.081};
	const static float3x3 yuv2rgb = {1, -0.00093, 1.401687, 1, -0.3437, -0.71417, 1, 1.77216, 0.00099};
	float4 r = 0.0;
	float2 size = float2(GetInputSize());
	float2 f = frac(pos * size);
	float3 yuv = mul(rgb2yuv, INPUT.SampleLevel(SL, pos, 0).rgb);
	int2 i = int2(f * 2.0);
	r.r = t2.SampleLevel(SP, (float2(0.5, 0.5) - f) * pt + pos, 0)[2*i.y + i.x];
	r.r += yuv.r;
	r.a = 1.0;
	r.r = clamp(r, 0.0, 1.0);
	float3 px = mul(yuv2rgb, float3(r.r, yuv.yz));
	return float4(px, 1.0);
}
