// CuNNy 1x16 RCAS DS
// Copyright (c) 2024 cunnyplapper

// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public
// License along with this program.  If not, see <https://www.gnu.org/licenses/>.
/* ------------------------------------------------------------------- */

// FSR mpv | modified
// Copyright (c) 2021 Advanced Micro Devices, Inc. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// FidelityFX FSR v1.0.2 by AMD
// ported to mpv by agyild

//!DESC CuNNy-EASU
//!HOOK LUMA
//!BIND LUMA
//!SAVE easu
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
//!COMPONENTS 1

float APrxLoRcpF1(float a) {
	return uintBitsToFloat(uint(0x7ef07ebb) - floatBitsToUint(a));
}

float APrxLoRsqF1(float a) {
	return uintBitsToFloat(uint(0x5f347d74) - (floatBitsToUint(a) >> uint(1)));
}

float AMin3F1(float x, float y, float z) {
	return min(x, min(y, z));
}

float AMax3F1(float x, float y, float z) {
	return max(x, max(y, z));
}

void tap(inout float aC, inout float aW, vec2 off, vec2 dir, vec2 len,
         float lob, float clp, float c){
	vec2 v;
	v.x = (off.x * ( dir.x)) + (off.y * dir.y);
	v.y = (off.x * (-dir.y)) + (off.y * dir.x);
	v *= len;
	float d2 = v.x * v.x + v.y * v.y;
	d2 = min(d2, clp);
	float wB = float(2.0 / 5.0) * d2 + -1.0;
	float wA = lob * d2 + -1.0;
	wB *= wB;
	wA *= wA;
	wB = float(25.0 / 16.0) * wB + float(-(25.0 / 16.0 - 1.0));
	float w = wB * wA;
	aC += c * w;
	aW += w;
}

void set(inout vec2 dir, inout float len, vec2 pp, bool biS, bool biT,
         bool biU, bool biV, float lA, float lB, float lC, float lD, float lE){
	float w = 0.0;
	if (biS)
		w = (1.0 - pp.x) * (1.0 - pp.y);
	if (biT)
		w =        pp.x  * (1.0 - pp.y);
	if (biU)
		w = (1.0 - pp.x) *        pp.y;
	if (biV)
		w =        pp.x  *        pp.y;
	float dc = lD - lC;
	float cb = lC - lB;
	float lenX = max(abs(dc), abs(cb));
	lenX = APrxLoRcpF1(lenX);
	float dirX = lD - lB;
	lenX = clamp(abs(dirX) * lenX, 0.0, 1.0);
	lenX *= lenX;
	float ec = lE - lC;
	float ca = lC - lA;
	float lenY = max(abs(ec), abs(ca));
	lenY = APrxLoRcpF1(lenY);
	float dirY = lE - lA;
	lenY = clamp(abs(dirY) * lenY, 0.0, 1.0);
	lenY *= lenY;
	dir += vec2(dirX, dirY) * w;
	len += dot(vec2(w), vec2(lenX, lenY));
}

vec4 hook() {
	vec4 pix = vec4(0.0, 0.0, 0.0, 1.0);
	vec2 pp = LUMA_pos * LUMA_size - vec2(0.5);
	vec2 fp = floor(pp);
	pp -= fp;
#if (defined(LUMA_gather) && (__VERSION__ >= 400 || (GL_ES && __VERSION__ >= 310)))
	vec4 bczzL = LUMA_gather(vec2((fp + vec2(1.0, -1.0)) * LUMA_pt), 0);
	vec4 ijfeL = LUMA_gather(vec2((fp + vec2(0.0,  1.0)) * LUMA_pt), 0);
	vec4 klhgL = LUMA_gather(vec2((fp + vec2(2.0,  1.0)) * LUMA_pt), 0);
	vec4 zzonL = LUMA_gather(vec2((fp + vec2(1.0,  3.0)) * LUMA_pt), 0);
#else
	float b = LUMA_tex(vec2((fp + vec2(0.5, -0.5)) * LUMA_pt)).r;
	float c = LUMA_tex(vec2((fp + vec2(1.5, -0.5)) * LUMA_pt)).r;
	float e = LUMA_tex(vec2((fp + vec2(-0.5, 0.5)) * LUMA_pt)).r;
	float f = LUMA_tex(vec2((fp + vec2( 0.5, 0.5)) * LUMA_pt)).r;
	float g = LUMA_tex(vec2((fp + vec2( 1.5, 0.5)) * LUMA_pt)).r;
	float h = LUMA_tex(vec2((fp + vec2( 2.5, 0.5)) * LUMA_pt)).r;
	float i = LUMA_tex(vec2((fp + vec2(-0.5, 1.5)) * LUMA_pt)).r;
	float j = LUMA_tex(vec2((fp + vec2( 0.5, 1.5)) * LUMA_pt)).r;
	float k = LUMA_tex(vec2((fp + vec2( 1.5, 1.5)) * LUMA_pt)).r;
	float l = LUMA_tex(vec2((fp + vec2( 2.5, 1.5)) * LUMA_pt)).r;
	float n = LUMA_tex(vec2((fp + vec2(0.5, 2.5) ) * LUMA_pt)).r;
	float o = LUMA_tex(vec2((fp + vec2(1.5, 2.5) ) * LUMA_pt)).r;
	vec4 bczzL = vec4(b, c, 0.0, 0.0);
	vec4 ijfeL = vec4(i, j, f, e);
	vec4 klhgL = vec4(k, l, h, g);
	vec4 zzonL = vec4(0.0, 0.0, o, n);
#endif
	float bL = bczzL.x;
	float cL = bczzL.y;
	float iL = ijfeL.x;
	float jL = ijfeL.y;
	float fL = ijfeL.z;
	float eL = ijfeL.w;
	float kL = klhgL.x;
	float lL = klhgL.y;
	float hL = klhgL.z;
	float gL = klhgL.w;
	float oL = zzonL.z;
	float nL = zzonL.w;
	vec2 dir = vec2(0.0);
	float len = 0.0;
	set(dir, len, pp, true, false, false, false, bL, eL, fL, gL, jL);
	set(dir, len, pp, false, true, false, false, cL, fL, gL, hL, kL);
	set(dir, len, pp, false, false, true, false, fL, iL, jL, kL, nL);
	set(dir, len, pp, false, false, false, true, gL, jL, kL, lL, oL);
	vec2 dir2 = dir * dir;
	float dirR = dir2.x + dir2.y;
	bool zro = dirR < float(1.0 / 32768.0);
	dirR = APrxLoRsqF1(dirR);
	dirR = zro ? 1.0 : dirR;
	dir.x = zro ? 1.0 : dir.x;
	dir *= vec2(dirR);
	len = len * 0.5;
	len *= len;
	float stretch = (dir.x * dir.x + dir.y * dir.y) * APrxLoRcpF1(max(abs(dir.x), abs(dir.y)));
	vec2 len2 = vec2(1.0 + (stretch - 1.0) * len, 1.0 + -0.5 * len);
	float lob = 0.5 + float((1.0 / 4.0 - 0.04) - 0.5) * len;
	float clp = APrxLoRcpF1(lob);
	float aC = 0.0;
	float aW = 0.0;
	tap(aC, aW, vec2( 0.0,-1.0) - pp, dir, len2, lob, clp, bL);
	tap(aC, aW, vec2( 1.0,-1.0) - pp, dir, len2, lob, clp, cL);
	tap(aC, aW, vec2(-1.0, 1.0) - pp, dir, len2, lob, clp, iL);
	tap(aC, aW, vec2( 0.0, 1.0) - pp, dir, len2, lob, clp, jL);
	tap(aC, aW, vec2( 0.0, 0.0) - pp, dir, len2, lob, clp, fL);
	tap(aC, aW, vec2(-1.0, 0.0) - pp, dir, len2, lob, clp, eL);
	tap(aC, aW, vec2( 1.0, 1.0) - pp, dir, len2, lob, clp, kL);
	tap(aC, aW, vec2( 2.0, 1.0) - pp, dir, len2, lob, clp, lL);
	tap(aC, aW, vec2( 2.0, 0.0) - pp, dir, len2, lob, clp, hL);
	tap(aC, aW, vec2( 1.0, 0.0) - pp, dir, len2, lob, clp, gL);
	tap(aC, aW, vec2( 1.0, 2.0) - pp, dir, len2, lob, clp, oL);
	tap(aC, aW, vec2( 0.0, 2.0) - pp, dir, len2, lob, clp, nL);
	pix.r = aC / aW;
	float min1 = min(AMin3F1(fL, gL, jL), kL);
	float max1 = max(AMax3F1(fL, gL, jL), kL);
	pix.r = clamp(pix.r, min1, max1);
	pix.r = clamp(pix.r, 0.0, 1.0);
	return pix;
}

//!DESC CuNNy-RCAS
//!HOOK LUMA
//!BIND easu
//!SAVE rcas
//!WIDTH easu.w
//!HEIGHT easu.h
//!COMPONENTS 1

// CuNNy: do not change unless changed during training as well
#define SHARPNESS 0.5
#define FSR_RCAS_LIMIT (0.25 - (1.0 / 16.0))

float APrxMedRcpF1(float a) {
	float b = uintBitsToFloat(uint(0x7ef19fff) - floatBitsToUint(a));
	return b * (-b * a + 2.0);
}

float AMax3F1(float x, float y, float z) {
	return max(x, max(y, z)); 
}


float AMin3F1(float x, float y, float z) {
	return min(x, min(y, z));
}

vec4 hook() {
#if (defined(easu_gather) && (__VERSION__ >= 400 || (GL_ES && __VERSION__ >= 310)))
	vec3 bde = easu_gather(easu_pos + easu_pt * vec2(-0.5), 0).xyz;
	float b = bde.z;
	float d = bde.x;
	float e = bde.y;
	vec2 fh = easu_gather(easu_pos + easu_pt * vec2(0.5), 0).zx;
	float f = fh.x;
	float h = fh.y;
#else
	float b = easu_texOff(vec2( 0.0, -1.0)).r;
	float d = easu_texOff(vec2(-1.0,  0.0)).r;
	float e = easu_tex(easu_pos).r;
	float f = easu_texOff(vec2(1.0, 0.0)).r;
	float h = easu_texOff(vec2(0.0, 1.0)).r;
#endif
	float mn1L = min(AMin3F1(b, d, f), h);
	float mx1L = max(AMax3F1(b, d, f), h);
	vec2 peakC = vec2(1.0, -1.0 * 4.0);
	float hitMinL = min(mn1L, e) / (4.0 * mx1L);
	float hitMaxL = (peakC.x - max(mx1L, e)) / (4.0 * mn1L + peakC.y);
	float lobeL = max(-hitMinL, hitMaxL);
	float lobe = max(float(-FSR_RCAS_LIMIT), min(lobeL, 0.0)) * exp2(-clamp(float(SHARPNESS), 0.0, 2.0));
	float nz = 0.25 * b + 0.25 * d + 0.25 * f + 0.25 * h - e;
	nz = clamp(abs(nz) * APrxMedRcpF1(AMax3F1(AMax3F1(b, d, e), f, h) - AMin3F1(AMin3F1(b, d, e), f, h)), 0.0, 1.0);
	nz = -0.5 * nz + 1.0;
	lobe *= nz;
	float rcpL = APrxMedRcpF1(4.0 * lobe + 1.0);
	vec4 pix = vec4(0.0, 0.0, 0.0, 1.0);
	pix.r = float((lobe * b + lobe * d + lobe * h + lobe * f + e) * rcpL);
	return pix;
}

//!DESC CuNNy-1x16-RCAS-DS-up:0
//!HOOK LUMA
//!BIND LUMA
//!SAVE up_0
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define l0(x, y) LUMA_texOff(vec2(x, y)).r
vec4 hook() {
	vec4 r = vec4(0.0);
	r += vec4(-0.014807214960455894, -0.022718509659171104, 0.043096255511045456, 0.02378987707197666) * l0(-1.0, -1.0);
	r += vec4(-0.4163953959941864, 0.016079265624284744, 0.4209055006504059, -0.051137544214725494) * l0(0.0, -1.0);
	r += vec4(0.020985480397939682, -0.0075691803358495235, -0.024878740310668945, 0.02543959952890873) * l0(1.0, -1.0);
	r += vec4(0.2597750127315521, -0.01962406188249588, -0.11422426253557205, -0.14379580318927765) * l0(-1.0, 0.0);
	r += vec4(0.12744489312171936, 0.3876953721046448, -0.12084925174713135, -0.27950137853622437) * l0(0.0, 0.0);
	r += vec4(0.02118886262178421, -0.3679374158382416, -0.10025803744792938, -0.013529443182051182) * l0(1.0, 0.0);
	r += vec4(-0.03357129171490669, -0.026368917897343636, -0.001123187132179737, 0.10181256383657455) * l0(-1.0, 1.0);
	r += vec4(0.045766573399305344, 0.04739071801304817, -0.09563188999891281, 0.37394943833351135) * l0(0.0, 1.0);
	r += vec4(-0.01882505789399147, -0.025593919679522514, 0.0018867227481678128, -0.03389976918697357) * l0(1.0, 1.0);
	r += vec4(3.037983515241649e-05, 0.0005409030127339065, 0.02343771606683731, -0.006152400281280279);
	return max(r, 0.0);
}

//!DESC CuNNy-1x16-RCAS-DS-up:1
//!HOOK LUMA
//!BIND LUMA
//!SAVE up_1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define l0(x, y) LUMA_texOff(vec2(x, y)).r
vec4 hook() {
	vec4 r = vec4(0.0);
	r += vec4(-0.05794703960418701, -0.039103202521800995, -0.15521109104156494, 0.08622314780950546) * l0(-1.0, -1.0);
	r += vec4(-0.13668715953826904, -0.00702092656865716, -0.23244675993919373, 0.19638361036777496) * l0(0.0, -1.0);
	r += vec4(-0.0933041051030159, 0.022043202072381973, 0.07953693717718124, 0.07932427525520325) * l0(1.0, -1.0);
	r += vec4(-0.021209999918937683, 0.14032579958438873, -0.08678954094648361, 0.05542049556970596) * l0(-1.0, 0.0);
	r += vec4(0.45369258522987366, -0.0010776855051517487, -0.02259713225066662, -0.6189635992050171) * l0(0.0, 0.0);
	r += vec4(-0.12676288187503815, -0.02482590079307556, -0.04186432436108589, -0.014013114385306835) * l0(1.0, 0.0);
	r += vec4(0.006860027089715004, 0.29661330580711365, 0.249723881483078, 0.049898337572813034) * l0(-1.0, 1.0);
	r += vec4(0.0829593688249588, -0.00016115994367282838, 0.25683581829071045, -0.1713990718126297) * l0(0.0, 1.0);
	r += vec4(-0.0847168043255806, -0.0036169940140098333, -0.046261150389909744, 0.04739798232913017) * l0(1.0, 1.0);
	r += vec4(0.008079982362687588, -0.3564453721046448, 0.010103331878781319, 0.0474853441119194);
	return max(r, 0.0);
}

//!DESC CuNNy-1x16-RCAS-DS-up:2
//!HOOK LUMA
//!BIND LUMA
//!SAVE up_2
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define l0(x, y) LUMA_texOff(vec2(x, y)).r
vec4 hook() {
	vec4 r = vec4(0.0);
	r += vec4(-0.00269854674115777, 0.1470959633588791, 0.3457713723182678, 0.025887226685881615) * l0(-1.0, -1.0);
	r += vec4(-0.05315964296460152, -0.09813175350427628, -0.0679602399468422, -0.040885861963033676) * l0(0.0, -1.0);
	r += vec4(0.0855124369263649, -0.055640362203121185, -0.009591396898031235, 0.013857124373316765) * l0(1.0, -1.0);
	r += vec4(-0.251296728849411, 0.32776403427124023, 0.11446268856525421, -0.03463081270456314) * l0(-1.0, 0.0);
	r += vec4(-0.3583911061286926, -0.020845916122198105, -0.32355570793151855, -0.35429835319519043) * l0(0.0, 0.0);
	r += vec4(0.11232174932956696, -0.29425346851348877, -0.0521065890789032, 0.4000760018825531) * l0(1.0, 0.0);
	r += vec4(0.14115753769874573, -0.021227197721600533, -0.02419080026447773, 0.008784821256995201) * l0(-1.0, 1.0);
	r += vec4(0.1675783395767212, -0.00634363666176796, -0.03722500801086426, -0.05774208530783653) * l0(0.0, 1.0);
	r += vec4(0.020755529403686523, 0.021276384592056274, 0.05767780542373657, 0.0382106751203537) * l0(1.0, 1.0);
	r += vec4(0.03747401013970375, 0.010894105769693851, -0.01133737526834011, -0.014229684136807919);
	return max(r, 0.0);
}

//!DESC CuNNy-1x16-RCAS-DS-up:3
//!HOOK LUMA
//!BIND LUMA
//!SAVE up_3
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define l0(x, y) LUMA_texOff(vec2(x, y)).r
vec4 hook() {
	vec4 r = vec4(0.0);
	r += vec4(0.0015522883040830493, 0.09396271407604218, -0.07200556993484497, -0.02021651528775692) * l0(-1.0, -1.0);
	r += vec4(0.04545164108276367, -0.06038657948374748, -0.05643158778548241, 0.42148491740226746) * l0(0.0, -1.0);
	r += vec4(-0.04668077826499939, 0.019379867240786552, 0.0029692533425986767, 0.015622382052242756) * l0(1.0, -1.0);
	r += vec4(-0.03979002311825752, -0.0033017348032444715, -0.13833053410053253, -0.006073503755033016) * l0(-1.0, 0.0);
	r += vec4(-0.11906138807535172, -0.3358694016933441, 0.1066991463303566, -0.32531195878982544) * l0(0.0, 0.0);
	r += vec4(0.0034076389856636524, -0.004859243519604206, 0.3054267466068268, -0.028617171570658684) * l0(1.0, 0.0);
	r += vec4(-0.043702732771635056, 0.19077621400356293, -0.008680004626512527, 0.031432151794433594) * l0(-1.0, 1.0);
	r += vec4(-0.06468305736780167, 0.004825355019420385, -0.11254804581403732, -0.09883631765842438) * l0(0.0, 1.0);
	r += vec4(-0.026476286351680756, 0.06837113946676254, -0.00358100445009768, 0.010264229960739613) * l0(1.0, 1.0);
	r += vec4(-0.11449578404426575, 0.05461835861206055, -0.011922519654035568, -0.00967896543443203);
	return max(r, 0.0);
}

//!DESC CuNNy-1x16-RCAS-DS-conv1:0
//!HOOK LUMA
//!BIND up_0
//!BIND up_1
//!BIND up_2
//!BIND up_3
//!SAVE conv1_0
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define l0(x, y) up_0_texOff(vec2(x, y))
#define l1(x, y) up_1_texOff(vec2(x, y))
#define l2(x, y) up_2_texOff(vec2(x, y))
#define l3(x, y) up_3_texOff(vec2(x, y))
vec4 hook() {
	vec4 r = vec4(0.0);
	r += mat4(-0.07134399563074112, -0.14628256857395172, 0.252930223941803, 0.01497254054993391, -0.5570089817047119, -0.25638246536254883, 0.6237674355506897, 0.21876160800457, -0.008328484371304512, 0.0019274539081379771, -0.11048714071512222, -0.1799817532300949, -0.4683535695075989, -0.022563574835658073, -0.5605472922325134, 0.282626748085022) * l0(-1.0, -1.0);
	r += mat4(-0.12609517574310303, 0.3720438778400421, 0.3038765490055084, -0.041826747357845306, -0.1342834085226059, 0.06546180695295334, -0.2509303689002991, 0.3167555332183838, 0.24977613985538483, -0.12655414640903473, 0.1437608301639557, -0.23704242706298828, 0.040896061807870865, 0.17797215282917023, 0.26463887095451355, 0.191690593957901) * l0(0.0, -1.0);
	r += mat4(-0.18333417177200317, 0.14942176640033722, -0.21080689132213593, 0.11720874905586243, 0.021045206114649773, 0.2743934690952301, -0.19655723869800568, 0.01412441860884428, 0.1669483780860901, 0.04320719465613365, -0.07827407866716385, -0.25546690821647644, -0.4157785177230835, -0.0454641692340374, 0.04295870289206505, 0.15517041087150574) * l0(1.0, -1.0);
	r += mat4(-0.021448634564876556, -0.13045604526996613, -0.1025659441947937, 0.17843791842460632, 0.31493574380874634, -0.9214804172515869, -0.09908530116081238, 0.3560873866081238, -0.1799938678741455, 0.4430059492588043, -0.22161006927490234, -0.20863670110702515, 0.23786991834640503, -0.018242690712213516, 0.06962869316339493, 0.4420570433139801) * l0(-1.0, 0.0);
	r += mat4(0.13918879628181458, 0.18746443092823029, 0.6050524711608887, 0.40331488847732544, 0.2618354558944702, -0.07631067931652069, 0.052414242178201675, 0.649850070476532, -0.054913509637117386, -0.3837830126285553, -0.1427290439605713, -0.10712310671806335, -0.6587613821029663, 0.545449435710907, -0.11104261875152588, 0.9488532543182373) * l0(0.0, 0.0);
	r += mat4(0.008397894911468029, 0.09657120704650879, -0.0891890674829483, 0.20621806383132935, 0.19426928460597992, -0.009675689972937107, 0.040014758706092834, 0.05327661707997322, 0.24339859187602997, -0.09237533807754517, 0.15479597449302673, 0.10031500458717346, 1.1212642192840576, 0.11556197702884674, -0.19667652249336243, 0.425243616104126) * l0(1.0, 0.0);
	r += mat4(-0.38682419061660767, -0.17903059720993042, 0.7877104878425598, 0.411808043718338, 0.4841759502887726, -0.20559298992156982, 0.14108075201511383, 0.2646392583847046, 0.013606124557554722, 0.3225425183773041, -0.21614263951778412, 0.02129579894244671, 0.2317686378955841, 0.08977523446083069, -0.021018151193857193, -0.17524267733097076) * l0(-1.0, 1.0);
	r += mat4(0.021819738671183586, -1.3070409297943115, 0.0897776409983635, -0.1485532522201538, 0.011993013322353363, 0.12765657901763916, 0.23066109418869019, -0.03344887122511864, 0.3837890923023224, -0.2027159035205841, -0.35226237773895264, 0.12453616410493851, 0.35985904932022095, -0.07137290388345718, 0.11365427821874619, 0.1704738885164261) * l0(0.0, 1.0);
	r += mat4(-0.5177568197250366, 0.14767707884311676, 0.15447865426540375, 0.022497806698083878, -0.028147084638476372, 0.37781214714050293, -0.11349326372146606, -0.11043991148471832, -0.00034659431548789144, -0.19805853068828583, 0.23479701578617096, 0.0777406394481659, 0.35981690883636475, 0.38270607590675354, 0.09797206521034241, -0.13488319516181946) * l0(1.0, 1.0);
	r += mat4(0.4750761389732361, 0.05303813889622688, -0.6357588768005371, 0.023924585431814194, -0.18560123443603516, -0.2811444103717804, -0.907566487789154, -0.0063704680651426315, -0.04479479789733887, 0.11611223965883255, 0.061517383903265, -0.1352566033601761, 0.05252371355891228, 0.19186963140964508, -0.31737932562828064, 0.04684849828481674) * l1(-1.0, -1.0);
	r += mat4(0.36818116903305054, -0.03326674923300743, 0.12308929860591888, -0.19523566961288452, 0.8386180996894836, 0.7126034498214722, -1.4973323345184326, -0.6297119855880737, -0.16030187904834747, -0.14357681572437286, -0.22159548103809357, 0.19872936606407166, -0.41253307461738586, -0.49547019600868225, -0.42366117238998413, -0.5883390307426453) * l1(0.0, -1.0);
	r += mat4(-0.02120741456747055, -0.28026989102363586, 0.006099754013121128, -0.01203580666333437, 0.22920595109462738, -0.6692893505096436, 0.8027100563049316, -1.3594871759414673, 0.14305739104747772, -0.09151671081781387, 0.08274772763252258, -0.18380117416381836, 0.0020703626796603203, -0.03787308558821678, 0.17821821570396423, -0.018378544598817825) * l1(1.0, -1.0);
	r += mat4(0.07941015064716339, 0.37208256125450134, -0.3917013108730316, -0.2387707531452179, -0.0720902532339096, -0.25886136293411255, 0.1301567256450653, 0.6650909185409546, 0.11217276006937027, 0.22424522042274475, -0.004872546065598726, -0.2174355685710907, 0.2177056074142456, 0.4527897834777832, -0.4881595969200134, -0.0022115414030849934) * l1(-1.0, 0.0);
	r += mat4(-0.13751846551895142, -0.16579896211624146, 0.03888382762670517, -0.3514847457408905, -0.03820303454995155, 0.24960945546627045, -0.2060246467590332, -0.1120295524597168, 0.29603251814842224, -0.11484620720148087, -0.4619022011756897, -0.23220495879650116, -0.3034406304359436, -0.29321134090423584, 0.04092344641685486, -0.14111551642417908) * l1(0.0, 0.0);
	r += mat4(-0.3436087667942047, -0.3966919779777527, 0.04501393064856529, 0.11667194962501526, -0.14348159730434418, -0.09657897800207138, 0.0588856004178524, 0.4160566031932831, -0.5225898027420044, -0.022261150181293488, 0.1500200778245926, -0.3473691940307617, 0.23403878509998322, -0.06677517294883728, 0.15083926916122437, -0.01267023291438818) * l1(1.0, 0.0);
	r += mat4(-0.2741338014602661, 0.21734267473220825, -0.1465131789445877, -0.14164987206459045, 0.14087867736816406, -0.35727864503860474, 0.2567206025123596, -0.22992360591888428, -0.09236432611942291, -0.020465603098273277, -0.050307583063840866, 0.015738023445010185, -0.14893241226673126, 0.14325982332229614, 0.1977604776620865, 0.1479378640651703) * l1(-1.0, 1.0);
	r += mat4(-0.1874893307685852, -0.07958909869194031, 0.050085194408893585, -0.2485494464635849, 0.2628968060016632, -0.3045608103275299, -0.5913044214248657, -0.48153114318847656, -0.5743165016174316, 0.04647301137447357, -0.04105561971664429, -0.054308924823999405, -0.15567539632320404, -0.02721187099814415, -0.05745566636323929, 0.1840820461511612) * l1(0.0, 1.0);
	r += mat4(-0.2194981724023819, -0.024136383086442947, -0.06834838539361954, -0.03823911398649216, -0.9230395555496216, 0.28542396426200867, 0.48898789286613464, -0.31883588433265686, -0.0009311845642514527, -0.3163979649543762, -0.07824400067329407, 0.036245185881853104, 0.13813170790672302, 0.3232608437538147, 0.08937270939350128, 0.15569625794887543) * l1(1.0, 1.0);
	r += mat4(0.007368200458586216, -0.09786470979452133, 0.13250979781150818, 0.06350468099117279, -0.17735061049461365, 0.0960400253534317, -0.4242274761199951, 0.021097835153341293, -0.020453432574868202, -0.255815714597702, 0.27928853034973145, 0.023050175979733467, -0.22385641932487488, 0.14396890997886658, 0.1219680905342102, -0.07942590862512589) * l2(-1.0, -1.0);
	r += mat4(0.1780797392129898, -0.0309623833745718, 0.11831875145435333, -0.07933636009693146, 0.3405929505825043, 0.1057417243719101, -0.08414074778556824, -0.01961625926196575, 0.2717030644416809, -0.071949303150177, -0.21602703630924225, 0.030611611902713776, 0.20420998334884644, 0.08699093014001846, -0.5122785568237305, -0.07607407867908478) * l2(0.0, -1.0);
	r += mat4(0.1236901506781578, 0.06957055628299713, -0.1655200719833374, -0.07806224375963211, 0.04852324351668358, -0.004688671790063381, 0.18929508328437805, 0.0393916480243206, 0.22952207922935486, 0.25485947728157043, -0.02129334583878517, -0.11114998906850815, 0.18739360570907593, 0.08998588472604752, 0.03918372467160225, 0.0027055467944592237) * l2(1.0, -1.0);
	r += mat4(0.0023759130854159594, -0.2181600034236908, -0.2670605480670929, 0.04061342030763626, 0.06806737184524536, 0.12355434149503708, -0.8566113114356995, -0.04678896442055702, -0.005657880567014217, -0.18918460607528687, 0.3994140625, 0.12446658313274384, 0.6124754548072815, 0.806642472743988, 0.07705532759428024, 0.19662779569625854) * l2(-1.0, 0.0);
	r += mat4(-0.30837661027908325, -0.0876312106847763, -0.45214882493019104, -0.9021041393280029, -0.45568960905075073, 0.10803636163473129, 0.27636924386024475, -0.45840418338775635, -0.1888078898191452, -0.23091423511505127, 0.0850004255771637, 0.21943581104278564, -0.4988189935684204, 0.635770857334137, -0.3978499174118042, -0.11205458641052246) * l2(0.0, 0.0);
	r += mat4(-0.2730506956577301, -0.19395947456359863, 0.10515613108873367, -0.3565148711204529, -0.15629900991916656, -0.0011225362541154027, -0.13443367183208466, -0.10988077521324158, 0.43817266821861267, 0.25868773460388184, -0.1538596898317337, -0.12345173209905624, 0.25691500306129456, 0.1961452215909958, -0.11580202728509903, -0.05059408023953438) * l2(1.0, 0.0);
	r += mat4(-0.02436915412545204, -0.06787306815385818, 0.033286552876234055, 0.05899684503674507, -0.05143781751394272, -0.08066997677087784, 0.12606483697891235, -0.07117928564548492, 0.07798739522695541, -0.30424070358276367, 0.41744011640548706, -0.08063896745443344, -0.552996039390564, -0.049955569207668304, -0.015868935734033585, -0.13252155482769012) * l2(-1.0, 1.0);
	r += mat4(-0.3263421058654785, 0.2427338808774948, -0.1958526372909546, -0.12036587297916412, -0.37007635831832886, -0.007261979393661022, -0.15584634244441986, -0.02394464984536171, 0.04805632680654526, 0.12231038510799408, -0.4449654221534729, -0.022698480635881424, 0.3018738031387329, 0.020190026611089706, -0.045567672699689865, 0.22311602532863617) * l2(0.0, 1.0);
	r += mat4(-0.16863825917243958, -0.20263764262199402, -0.03832412138581276, -0.10064704716205597, 0.16168326139450073, -0.042366836220026016, 0.08756962418556213, 0.1596863567829132, -0.3056674301624298, -0.09917310625314713, -0.1552840769290924, -0.20908592641353607, -0.029420647770166397, -0.07287755608558655, -0.019455431029200554, 0.09519732743501663) * l2(1.0, 1.0);
	r += mat4(0.08149600028991699, -0.020459823310375214, -0.047031402587890625, -0.17002086341381073, 0.32879114151000977, 0.11149683594703674, -0.11074314266443253, -0.12306444346904755, -0.05387080833315849, -0.16986924409866333, 0.22245976328849792, -0.03182084113359451, -0.3979889452457428, 0.05416750907897949, 0.20281554758548737, 0.20132878422737122) * l3(-1.0, -1.0);
	r += mat4(0.04885557293891907, -0.12371596693992615, 0.0001445281959604472, -0.06433037668466568, 0.04453200846910477, -0.15580500662326813, 0.12378793954849243, -0.22469744086265564, -0.23292243480682373, -0.21765044331550598, 0.07015738636255264, 0.06252246350049973, -0.7557169795036316, -0.2565758526325226, -0.4788903295993805, 0.2297654151916504) * l3(0.0, -1.0);
	r += mat4(-0.03440025448799133, 0.030769357457756996, -0.029887739568948746, -0.01469947025179863, -0.288795530796051, 0.012521220371127129, 0.11861220747232437, 0.16194681823253632, -0.2794465720653534, -0.07249626517295837, -0.04795064404606819, 0.16033877432346344, -0.06616172194480896, 0.1344451755285263, 0.005941073875874281, 0.22114722430706024) * l3(1.0, -1.0);
	r += mat4(-0.036501988768577576, -0.00311975902877748, 0.14044484496116638, -0.03532509133219719, 0.03279060125350952, 0.24882324039936066, -0.448151171207428, -0.4330922067165375, -0.015965260565280914, 0.10059823840856552, 0.12373610585927963, 0.016541991382837296, -0.7090276479721069, -0.7326250672340393, 0.5630589723587036, 0.2285694032907486) * l3(-1.0, 0.0);
	r += mat4(-0.10814212262630463, 0.06358420103788376, 0.013116603717207909, 0.06866951286792755, 0.10895006358623505, 0.024343855679035187, 0.010409372858703136, -0.4872708320617676, 0.37333300709724426, -0.2940075695514679, -0.18603011965751648, -0.16183505952358246, -0.5033591389656067, 0.3667778968811035, -0.14370545744895935, 0.032751210033893585) * l3(0.0, 0.0);
	r += mat4(-0.06963613629341125, 0.18382923305034637, -0.030315902084112167, 0.08498730510473251, 0.016322143375873566, 0.05846176669001579, 0.3131003975868225, 0.18022629618644714, -0.07107643038034439, -0.195882186293602, 0.11499153077602386, 0.06785493344068527, -0.23231251537799835, 0.3740660548210144, -0.1860760897397995, -0.02918114885687828) * l3(1.0, 0.0);
	r += mat4(-0.09061513841152191, -0.0794607475399971, -0.18651428818702698, 0.015577766112983227, -0.09234818816184998, -0.09401137381792068, 0.032402317970991135, 0.16116127371788025, -0.025170326232910156, -0.1136321872472763, 0.07254727184772491, -0.10692950338125229, 0.238473579287529, -0.3126090168952942, -0.1767486333847046, -0.12124457955360413) * l3(-1.0, 1.0);
	r += mat4(0.15926493704319, 0.006638034246861935, -0.0032652998343110085, -0.08977896720170975, 0.08931180834770203, -0.0850604847073555, 0.15078291296958923, 0.30304303765296936, -0.33682337403297424, -0.2908485233783722, 0.0176711268723011, 0.07730749994516373, -0.008932329714298248, 0.18687374889850616, 0.6040664911270142, -0.07766947895288467) * l3(0.0, 1.0);
	r += mat4(0.02111322060227394, -0.061471033841371536, 0.057113248854875565, -0.0026590791530907154, 0.05818047374486923, 0.09682399779558182, -0.033032871782779694, 0.3209913671016693, -0.06763666868209839, 0.13135360181331635, 0.07323309034109116, -0.14706964790821075, 0.04184252768754959, -0.035060565918684006, -0.1167706847190857, -0.11922605335712433) * l3(1.0, 1.0);
	r += vec4(-0.034545496106147766, -0.019260141998529434, 0.002769267652183771, 0.019732896238565445);
	return max(r, 0.0);
}

//!DESC CuNNy-1x16-RCAS-DS-conv1:1
//!HOOK LUMA
//!BIND up_0
//!BIND up_1
//!BIND up_2
//!BIND up_3
//!SAVE conv1_1
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define l0(x, y) up_0_texOff(vec2(x, y))
#define l1(x, y) up_1_texOff(vec2(x, y))
#define l2(x, y) up_2_texOff(vec2(x, y))
#define l3(x, y) up_3_texOff(vec2(x, y))
vec4 hook() {
	vec4 r = vec4(0.0);
	r += mat4(-0.16807591915130615, 0.12465552240610123, -0.012814306654036045, -0.0033400263637304306, 0.538905680179596, 0.0744822695851326, -0.005872312001883984, 0.07100998610258102, -0.0024588361848145723, -0.034137848764657974, -0.11458278447389603, -8.062339475145563e-05, -0.10375984758138657, 0.06186400353908539, -0.30841684341430664, 0.2651718854904175) * l0(-1.0, -1.0);
	r += mat4(-0.05238247290253639, 0.12099509686231613, -0.0924777016043663, 0.02336985431611538, -0.23197829723358154, -0.22434337437152863, 0.1391267329454422, 0.5996764898300171, -0.28031522035598755, 0.24554702639579773, -0.14309728145599365, 0.12622395157814026, 0.26852986216545105, 0.049139354377985, -0.3647342622280121, -0.2073139101266861) * l0(0.0, -1.0);
	r += mat4(-0.344727486371994, 0.4939275085926056, -0.12401243299245834, 0.3486330211162567, -0.3193492293357849, 0.34951141476631165, -0.036963675171136856, 0.31933820247650146, -0.15870927274227142, -0.30136069655418396, -0.03714291751384735, 0.07111456990242004, 0.34547850489616394, 0.5542424917221069, 0.2236117571592331, -0.04456794261932373) * l0(1.0, -1.0);
	r += mat4(0.13996626436710358, 0.18102112412452698, -0.1492166370153427, 0.01544503029435873, -0.13182289898395538, -0.04460082948207855, 0.6306746006011963, -0.03544893115758896, -0.039547208696603775, -0.12745599448680878, -0.18466095626354218, -0.12188522517681122, 0.2206491231918335, 0.14995813369750977, -0.5903646349906921, -0.005249962210655212) * l0(-1.0, 0.0);
	r += mat4(0.09870286285877228, -0.10261905938386917, 0.18017329275608063, 0.17622464895248413, 0.7581725716590881, 0.38354039192199707, 0.19288869202136993, -0.2698373794555664, -0.12953908741474152, -1.075143814086914, -0.08789220452308655, -0.2859762907028198, 0.2710764706134796, 0.04987071827054024, 0.2609858214855194, 0.39289137721061707) * l0(0.0, 0.0);
	r += mat4(0.609703779220581, -0.13380521535873413, 0.019189253449440002, 0.1656339019536972, 0.3153185546398163, -0.032520584762096405, 0.054289184510707855, 0.520433247089386, -0.11521266400814056, 0.027166033163666725, -0.09855480492115021, -0.1614154577255249, 0.9511749744415283, -0.16030940413475037, -0.2576068937778473, 0.2476673275232315) * l0(1.0, 0.0);
	r += mat4(0.29679176211357117, -0.1329590231180191, 0.5117428302764893, -0.08088374137878418, 0.3467508852481842, 0.06506261974573135, 0.10295941680669785, 0.00843258947134018, -0.21739032864570618, -0.04314139857888222, -0.3186790645122528, 0.1038452610373497, 0.15891200304031372, -0.17336149513721466, 0.17920510470867157, -0.13160960376262665) * l0(-1.0, 1.0);
	r += mat4(0.19281606376171112, -0.27529534697532654, 0.3973001539707184, -0.34810447692871094, 0.02833399921655655, -0.07337182760238647, 0.16934716701507568, 0.21758215129375458, 0.30942708253860474, -0.3039689064025879, -0.5427687168121338, 0.03774483501911163, 0.4568626880645752, -0.45619016885757446, 0.09561312198638916, 0.28242620825767517) * l0(0.0, 1.0);
	r += mat4(-0.7744893431663513, -0.2993282973766327, 0.07178866118192673, -0.5139933824539185, 0.2495000958442688, -0.27619728446006775, 0.03949437662959099, 0.003482563653960824, 0.004493990447372198, -0.0027416932862251997, 0.047698259353637695, -0.23813758790493011, 0.3626718521118164, -0.362053245306015, 0.06984081864356995, 0.013055910356342793) * l0(1.0, 1.0);
	r += mat4(-0.13140034675598145, 0.060584355145692825, -0.13414165377616882, 0.0056960806250572205, 0.17483320832252502, 0.06732994318008423, 0.19519475102424622, -0.0997036024928093, -0.05950712785124779, -0.12736935913562775, -0.1570836901664734, -0.03957604989409447, 0.001100909779779613, 0.058720335364341736, 0.07401116192340851, 0.1565837264060974) * l1(-1.0, -1.0);
	r += mat4(-0.03888021409511566, -0.43773728609085083, -0.20667453110218048, -0.13870877027511597, 0.5759245157241821, -0.02974439598619938, -4.585524559020996, 0.268685907125473, 0.010669838637113571, 0.22807428240776062, 0.22608520090579987, -0.009115731343626976, 0.043241504579782486, -0.33216118812561035, 0.15274418890476227, -0.01672942563891411) * l1(0.0, -1.0);
	r += mat4(0.09055598825216293, -0.09987065196037292, 0.22592861950397491, -0.1763128936290741, -0.13731390237808228, -0.480669766664505, -6.7335591316223145, -3.902383327484131, 0.07645121961832047, -0.4912382960319519, -0.077287457883358, -0.11536377668380737, -0.14967824518680573, -0.044990330934524536, 0.30741894245147705, -0.17832648754119873) * l1(1.0, -1.0);
	r += mat4(-0.2432752549648285, -0.04772970825433731, 0.14728739857673645, 0.04152396321296692, -0.3912704885005951, 0.0740671381354332, 0.3141011893749237, -0.017655005678534508, -0.11924700438976288, -0.0610218271613121, -0.12047765403985977, 0.03242688998579979, 0.049676522612571716, -0.12754946947097778, 0.06126401573419571, 0.198769673705101) * l1(-1.0, 0.0);
	r += mat4(-0.599610447883606, -0.11463193595409393, -0.4362697899341583, -0.6190954446792603, -0.15514202415943146, 0.16896450519561768, 0.13828963041305542, 0.19269943237304688, -0.17175652086734772, -0.06283410638570786, 0.4248793125152588, 0.21941576898097992, -0.23461948335170746, -0.3606627285480499, 0.384164959192276, -0.37111443281173706) * l1(0.0, 0.0);
	r += mat4(-0.11167459189891815, -0.00953967496752739, -0.2924548387527466, -0.1816335916519165, -6.589240074157715, 0.32640111446380615, -0.8043004274368286, -2.0422091484069824, -0.5602567195892334, 0.259865939617157, 0.20393171906471252, -0.13255956768989563, -0.29981499910354614, -0.13584722578525543, 0.4318578839302063, -0.19280990958213806) * l1(1.0, 0.0);
	r += mat4(-0.13577254116535187, 0.1987835317850113, 0.16422238945960999, 0.14581245183944702, -0.04499714821577072, -0.17911477386951447, 0.2966160774230957, -0.017696762457489967, -0.12493357062339783, -0.03287992998957634, -0.08565399050712585, 0.018437502905726433, 0.15324106812477112, 0.11911514401435852, 0.288405179977417, -0.05470613017678261) * l1(-1.0, 1.0);
	r += mat4(-0.4176969528198242, 0.17876087129116058, -0.03058263286948204, 0.04625916853547096, 0.21965070068836212, -0.10612508654594421, 0.12044628709554672, 0.28198984265327454, -0.013321193866431713, 0.07922787219285965, -0.03668943792581558, -0.059373583644628525, 0.24497276544570923, -0.07608199119567871, 0.08698002249002457, 0.23196004331111908) * l1(0.0, 1.0);
	r += mat4(-0.25678980350494385, 0.14106003940105438, 0.095177061855793, 0.2704404890537262, -3.708500385284424, 0.02331702597439289, -0.1896274834871292, 0.2566915452480316, -0.3642147481441498, 0.12494499981403351, -0.16570359468460083, -0.1577376425266266, -0.029102692380547523, 0.01875329576432705, -0.021090980619192123, -0.22199195623397827) * l1(1.0, 1.0);
	r += mat4(0.1101347878575325, 0.16292494535446167, 0.10166144371032715, -0.0880008339881897, 0.03251146152615547, -0.05408177152276039, -0.1984347552061081, 0.16645453870296478, -0.05577504634857178, -0.0702296569943428, 0.16781195998191833, -0.19674941897392273, -0.15802128612995148, -0.03339922055602074, -0.6039823889732361, -0.18310225009918213) * l2(-1.0, -1.0);
	r += mat4(0.32381537556648254, 0.1413916051387787, -0.02645455114543438, -0.0429144911468029, -0.1546589434146881, 0.08393583446741104, -0.15847429633140564, 0.014536638744175434, -0.025853440165519714, 0.309569388628006, -0.05813400447368622, 0.06240004673600197, -0.12663359940052032, 0.1770738810300827, 0.06843825429677963, 0.23177199065685272) * l2(0.0, -1.0);
	r += mat4(-0.12776735424995422, -0.11986222863197327, 0.18279312551021576, 0.10468333214521408, 0.2158091515302658, -0.21120324730873108, -0.013117578811943531, -0.18015450239181519, 0.016740048304200172, 0.11802961677312851, -0.05954967439174652, 0.11788398027420044, 0.13783329725265503, -0.009475965052843094, -0.2948242723941803, -0.08455641567707062) * l2(1.0, -1.0);
	r += mat4(0.0026116741355508566, 0.14339303970336914, 0.0977591797709465, -0.021711384877562523, 0.015125662088394165, 0.015534336678683758, 0.021900096908211708, -0.0026160385459661484, -0.0632120817899704, 0.1549864262342453, 0.2547968327999115, -0.15144293010234833, 0.22850634157657623, 0.1337403655052185, -0.1330702006816864, 0.039094917476177216) * l2(-1.0, 0.0);
	r += mat4(-0.2043803185224533, -0.48031431436538696, -0.27138635516166687, 0.00042933441000059247, 0.22761476039886475, 0.11499234288930893, 0.4610995650291443, -0.1896788626909256, -0.2909902334213257, -0.566292405128479, 0.1474582850933075, 0.4125615358352661, -0.0590665340423584, 0.35454055666923523, 0.14403744041919708, 0.30095064640045166) * l2(0.0, 0.0);
	r += mat4(-0.07065299898386002, -0.08189398050308228, 0.20036974549293518, -0.15695926547050476, -0.1236647367477417, 0.10767840594053268, 0.05512348189949989, -0.28450313210487366, -0.03973968327045441, -0.09053000807762146, -0.6748030185699463, -1.0038979053497314, -0.4397810399532318, -0.4890536367893219, 0.012321056798100471, -0.5019316673278809) * l2(1.0, 0.0);
	r += mat4(0.16500446200370789, -0.014197838492691517, -0.1466394066810608, 0.0005636427667923272, -0.04468525946140289, -0.08219119906425476, -0.050688594579696655, -0.02834327146410942, -0.05446920171380043, -0.0878407433629036, -0.10748366266489029, -0.04938381910324097, -0.2686498463153839, -0.1215239092707634, -0.28575822710990906, -0.023913990706205368) * l2(-1.0, 1.0);
	r += mat4(-0.2733738124370575, 0.20854756236076355, 0.1244136244058609, 0.11593129485845566, 0.10157842189073563, -0.23061737418174744, -0.28160491585731506, 0.11239916831254959, -0.22682157158851624, 0.03469778969883919, -0.535637617111206, 0.14726844429969788, 0.22217705845832825, -0.4427611529827118, -0.04952038824558258, 0.3165338635444641) * l2(0.0, 1.0);
	r += mat4(-0.24064604938030243, 0.32743898034095764, 0.18891824781894684, -0.1310577094554901, -0.0637274906039238, 0.10242505371570587, -0.13910961151123047, -0.22054876387119293, 0.07364626973867416, 0.0016198428347706795, -0.5411917567253113, -0.545403778553009, 0.049661293625831604, 0.12626931071281433, -0.0009082184988074005, -0.010142793878912926) * l2(1.0, 1.0);
	r += mat4(0.0654088482260704, 0.03285088390111923, -0.07720161229372025, -0.09573777765035629, 0.05890004336833954, -0.008900783024728298, -0.3078109622001648, 0.00035198949626646936, -0.009854833595454693, -0.17231795191764832, 0.05859777331352234, -0.07234086841344833, 0.03904060274362564, -0.11645518988370895, 0.05833897739648819, -0.15407080948352814) * l3(-1.0, -1.0);
	r += mat4(-0.03437991440296173, 0.061884764581918716, 0.12036076188087463, 0.059727173298597336, -0.12946820259094238, -0.11580310761928558, -0.14247587323188782, -0.1020001694560051, 0.18848803639411926, -0.3284829556941986, 0.3330077528953552, -0.10044557601213455, 0.24583739042282104, 0.04717479273676872, 0.024397309869527817, 0.0068775382824242115) * l3(0.0, -1.0);
	r += mat4(-0.04364755377173424, 0.008482971228659153, 0.020027706399559975, 0.08994124084711075, 0.1613183617591858, 0.18003183603286743, -0.09917964041233063, 0.0057492731139063835, -0.06717198342084885, 0.15582267940044403, -0.004504641517996788, 0.04283769801259041, 0.1535070538520813, 0.21101988852024078, -0.1870008111000061, -0.3121299743652344) * l3(1.0, -1.0);
	r += mat4(-0.14940428733825684, -0.028645697981119156, -0.11566267907619476, -0.025305775925517082, -0.03686171770095825, 0.049286600202322006, -0.0893712192773819, 0.140856072306633, -0.046130869537591934, -0.056236930191516876, -0.08971459418535233, 0.03706588223576546, 0.08893796801567078, 0.3717503249645233, 0.1978466659784317, -0.11255031824111938) * l3(-1.0, 0.0);
	r += mat4(0.06378944963216782, -0.07683279365301132, -0.11985205858945847, 0.17982278764247894, -0.2791343927383423, -0.09743402153253555, -0.08225098997354507, -0.3648887276649475, -0.23249447345733643, -0.15974687039852142, 0.09395316243171692, -0.40270957350730896, 0.47308939695358276, -0.5625751614570618, 0.5676508545875549, 0.6574775576591492) * l3(0.0, 0.0);
	r += mat4(0.0859643742442131, -0.08186350017786026, -0.003660288406535983, -0.01854807510972023, -0.01855545863509178, -0.167130246758461, -0.19390225410461426, -0.08036141842603683, 0.3058964014053345, 0.17021498084068298, -0.018828319385647774, 0.47885560989379883, -0.13490144908428192, -0.03932398930191994, -0.38196811079978943, 0.22205844521522522) * l3(1.0, 0.0);
	r += mat4(0.009386573918163776, -0.0043886322528123856, -0.12509280443191528, -0.02494819089770317, -0.02721773274242878, 0.06910309195518494, 0.019938858225941658, -0.0011952740605920553, -0.06322714686393738, 0.07355763763189316, -0.3076350688934326, -0.03434227034449577, 0.2348712980747223, 0.0339076928794384, 0.340908944606781, -0.11432263255119324) * l3(-1.0, 1.0);
	r += mat4(-0.0010535645997151732, 0.000701522862073034, -0.10087456554174423, 0.030953973531723022, -0.015356844291090965, 0.19494667649269104, -0.08790222555398941, -0.1615772694349289, -0.16891904175281525, 0.2744249105453491, 0.17401501536369324, -0.24123533070087433, -0.3754259943962097, 0.8769561648368835, 0.8215085864067078, -0.1848781704902649) * l3(0.0, 1.0);
	r += mat4(0.07347547262907028, 0.020690906792879105, -0.013956132344901562, -0.10736645758152008, 0.029048344120383263, 0.30750593543052673, -0.14948907494544983, 0.20547625422477722, 0.07920297980308533, -0.2159150242805481, -0.12286507338285446, 0.15637223422527313, 0.29196465015411377, 0.04479847475886345, -0.3206383287906647, 0.33863604068756104) * l3(1.0, 1.0);
	r += vec4(0.022423136979341507, -0.017416387796401978, 0.005274851806461811, 0.0146598806604743);
	return max(r, 0.0);
}

//!DESC CuNNy-1x16-RCAS-DS-conv1:2
//!HOOK LUMA
//!BIND up_0
//!BIND up_1
//!BIND up_2
//!BIND up_3
//!SAVE conv1_2
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define l0(x, y) up_0_texOff(vec2(x, y))
#define l1(x, y) up_1_texOff(vec2(x, y))
#define l2(x, y) up_2_texOff(vec2(x, y))
#define l3(x, y) up_3_texOff(vec2(x, y))
vec4 hook() {
	vec4 r = vec4(0.0);
	r += mat4(-0.08759371936321259, 0.028741616755723953, -0.08800414949655533, 0.012811349704861641, -0.386816143989563, -0.014268845319747925, -0.3788711130619049, -0.4909191429615021, -0.03365181013941765, 0.09007499366998672, 0.016935601830482483, -0.021946875378489494, -0.024333661422133446, 0.2117214947938919, -0.32550495862960815, 0.19403374195098877) * l0(-1.0, -1.0);
	r += mat4(-0.11401694267988205, 0.3101002275943756, -0.1312319040298462, -0.030372316017746925, 0.048453692346811295, 0.1782483607530594, -0.16562238335609436, -0.06905855983495712, 0.056618787348270416, -0.05690113455057144, -0.05853677913546562, -0.03378373011946678, 0.34741055965423584, -0.025836696848273277, 0.24318429827690125, 0.3681641221046448) * l0(0.0, -1.0);
	r += mat4(-0.09793651103973389, 0.2471240907907486, -0.08444550633430481, -0.01962006650865078, -0.2068472057580948, 0.4687730073928833, -0.19479630887508392, 0.017472567036747932, -0.05598926544189453, -0.031823206692934036, -0.022466372698545456, 0.03414011746644974, 0.11768750846385956, -0.21071718633174896, -0.0901213064789772, 0.1468033790588379) * l0(1.0, -1.0);
	r += mat4(-0.03908383846282959, -0.11952230334281921, 0.05432042106986046, 0.09448451548814774, -0.067868173122406, -0.37826302647590637, -0.5754581689834595, 0.30661165714263916, 0.3192737102508545, 0.37012141942977905, 0.14727149903774261, 0.09364306926727295, -0.20052529871463776, 0.03150734677910805, -0.08861137181520462, -0.2675446569919586) * l0(-1.0, 0.0);
	r += mat4(-0.11348705738782883, 0.3108924925327301, -0.13633732497692108, -0.16997534036636353, 0.2046332210302353, 0.0018920076545327902, 0.14836670458316803, 0.1402430236339569, 0.16732053458690643, -0.2793062925338745, 0.0527225062251091, -0.14646585285663605, 0.09296530485153198, 0.6137621998786926, -0.17869830131530762, 0.2326672375202179) * l0(0.0, 0.0);
	r += mat4(0.26464754343032837, 0.21505206823349, 0.0671994537115097, 0.0907200425863266, 0.12313415855169296, -0.03163248300552368, -0.04717625677585602, -0.061867471784353256, 0.19869451224803925, -0.2941451668739319, -0.08724415302276611, -0.04963984340429306, -0.27079030871391296, 0.29012033343315125, -0.2510361075401306, -0.3639552593231201) * l0(1.0, 0.0);
	r += mat4(0.07513757795095444, -0.6069573760032654, 0.11476355046033859, -0.04762743040919304, -0.19903554022312164, -0.11792175471782684, -0.051546283066272736, -0.08413881808519363, 0.17719492316246033, 0.32254400849342346, 0.18197153508663177, 0.09469247609376907, -0.044661279767751694, 0.051705680787563324, -0.0511140339076519, 0.11318536102771759) * l0(-1.0, 1.0);
	r += mat4(0.45426714420318604, -0.5138222575187683, 0.2866736054420471, 0.8327152132987976, -0.08487758040428162, 0.15660260617733002, -0.32448631525039673, -0.1243598684668541, -0.19630350172519684, -0.22608239948749542, 0.12282362580299377, 0.11022137850522995, -0.07367848604917526, -0.17090396583080292, 0.17182137072086334, 0.1676093488931656) * l0(0.0, 1.0);
	r += mat4(-0.07881694287061691, 0.022420411929488182, -0.188889741897583, 0.09815265983343124, -0.13322313129901886, 0.4414585530757904, -0.07778734713792801, 0.025372717529535294, 0.07042168080806732, -0.2016599178314209, 0.10867784917354584, 0.017623983323574066, -0.0051347059197723866, 0.401411771774292, 0.14951565861701965, 0.09622328728437424) * l0(1.0, 1.0);
	r += mat4(0.13599295914173126, 0.0817975178360939, -0.009642625227570534, -0.02834191545844078, -0.016464607790112495, -0.01522807776927948, -0.36668962240219116, 0.3267477750778198, 0.02268579602241516, 0.07932678610086441, 0.11535801738500595, -0.13329558074474335, -0.14400805532932281, -0.06214188411831856, -0.17330273985862732, 0.11024607717990875) * l1(-1.0, -1.0);
	r += mat4(0.18367891013622284, -0.04014112055301666, -0.03467253968119621, 0.1128256767988205, 0.4186136722564697, 0.5694053173065186, 0.6821823120117188, 0.5355643630027771, -0.11681574583053589, -0.2828763425350189, 0.09335587173700333, -0.025350438430905342, 0.08995923399925232, -0.27246731519699097, 0.12482094764709473, -0.17300917208194733) * l1(0.0, -1.0);
	r += mat4(0.13232403993606567, -0.33571329712867737, 0.13417236506938934, 0.020063716918230057, 0.08266382664442062, -0.7745478749275208, 0.23435640335083008, 1.468754529953003, -0.09128105640411377, -0.13501375913619995, 0.06426846981048584, -0.05025865510106087, -0.08681094646453857, 0.12363876402378082, -0.16169361770153046, -0.03938283026218414) * l1(1.0, -1.0);
	r += mat4(0.2133069634437561, 0.27240097522735596, -0.04889973625540733, -0.15303631126880646, -0.17847730219364166, -0.10460080206394196, -0.3480803072452545, -0.2541492283344269, 0.045795317739248276, 0.2064780741930008, 0.14352256059646606, 0.10907988250255585, -0.018915971741080284, -0.15403403341770172, -0.0007867050589993596, -0.16342011094093323) * l1(-1.0, 0.0);
	r += mat4(-0.4670029878616333, -0.13822640478610992, 0.541042685508728, 0.10531360656023026, 0.1780693382024765, 0.3868193030357361, 0.20813420414924622, 0.15681986510753632, -0.3265158534049988, -0.22518469393253326, -0.38291600346565247, -0.038827504962682724, 0.4188128709793091, -0.20632638037204742, 0.40631207823753357, 0.04275226593017578) * l1(0.0, 0.0);
	r += mat4(0.5028063654899597, -0.31151673197746277, -0.011751002632081509, -0.03125481307506561, 0.1857275664806366, -0.3308643102645874, 0.46168678998947144, 0.5176435708999634, -0.0254417322576046, -0.3090353310108185, -0.2100566327571869, 0.010525989346206188, -0.12120687961578369, -0.07586882263422012, -0.16899055242538452, -0.04280081391334534) * l1(1.0, 0.0);
	r += mat4(-0.025212261825799942, 0.5159710645675659, -0.27171701192855835, -0.11511733382940292, -0.1662859469652176, -0.5195911526679993, -0.29857608675956726, -0.043482255190610886, 0.06063346564769745, 0.04382556676864624, 0.12527252733707428, 0.03779494762420654, 0.11886900663375854, 0.2559981644153595, 0.1766512244939804, 0.05606507509946823) * l1(-1.0, 1.0);
	r += mat4(0.16721631586551666, 0.15057268738746643, -0.03875714913010597, -0.05251186713576317, -0.06346278637647629, -0.26793569326400757, -0.2972981333732605, -0.00924596842378378, -0.1365450769662857, 0.12650686502456665, -0.30322015285491943, -0.05594009906053543, -0.11476980149745941, -0.07952507585287094, -0.053254444152116776, -0.09541863948106766) * l1(0.0, 1.0);
	r += mat4(0.09628876298666, -0.026436051353812218, 0.02853788249194622, -0.019848201423883438, -0.04850539565086365, 0.4565720856189728, -0.23179991543293, 0.3430310785770416, -0.05076032131910324, -0.3212839365005493, -0.21733517944812775, -0.05358722060918808, -0.037630047649145126, 0.2998037040233612, 0.008640525862574577, 0.0008114462252706289) * l1(1.0, 1.0);
	r += mat4(-0.023405930027365685, -0.15076220035552979, 0.009526989422738552, -0.057183001190423965, -0.06505884230136871, 0.039073485881090164, -0.042946379631757736, 0.11950986832380295, 0.17991484701633453, -0.10496741533279419, 0.15448088943958282, -0.07474201917648315, 0.18898291885852814, 0.4051986038684845, -0.06211430951952934, 0.018715353682637215) * l2(-1.0, -1.0);
	r += mat4(-0.004047836177051067, 0.1919882893562317, 0.04810362309217453, -0.3306444585323334, -0.01401936449110508, -0.10107421875, -0.033816780894994736, -0.26269498467445374, -0.05710798501968384, 0.17543363571166992, 0.018277404829859734, 0.03554324433207512, -0.2199942171573639, 0.18029269576072693, -0.1821824610233307, 0.13594406843185425) * l2(0.0, -1.0);
	r += mat4(-0.05754043161869049, 0.23942957818508148, -0.03456815332174301, -0.0025291491765528917, 0.12248104810714722, -0.1722252070903778, 0.15835264325141907, -0.039174601435661316, -0.16077372431755066, 0.1368025243282318, -0.21129943430423737, -0.00043923925841227174, 0.039577655494213104, -0.14535686373710632, 0.15575891733169556, 0.011456305161118507) * l2(1.0, -1.0);
	r += mat4(-0.03036648780107498, -0.029435424134135246, 0.005527110770344734, -0.022323837503790855, 0.057990532368421555, 0.370188444852829, -0.4217153489589691, -0.22209195792675018, 0.06285397708415985, -0.5096761584281921, 0.3559640944004059, 0.005242078099399805, 0.09005953371524811, 0.3561602234840393, -0.15380506217479706, 0.1948481798171997) * l2(-1.0, 0.0);
	r += mat4(0.09272272139787674, -0.29205426573753357, -0.17088930308818817, -0.2375568151473999, 0.008971848525106907, -0.07462088018655777, 0.054612353444099426, 0.301736444234848, -0.20811469852924347, -0.2518366575241089, -0.4268854856491089, 0.30161333084106445, -0.8152287006378174, 0.4655681550502777, -0.785451352596283, 0.3056256175041199) * l2(0.0, 0.0);
	r += mat4(0.2357795238494873, -0.19971393048763275, 0.15193675458431244, 0.08976466208696365, -0.4975460469722748, 0.08967777341604233, 0.0645032525062561, 0.1412331759929657, -0.08955194801092148, 0.2921731472015381, -0.4017520844936371, -0.13257935643196106, -0.36263367533683777, 0.11476003378629684, -0.07565122842788696, -0.08869865536689758) * l2(1.0, 0.0);
	r += mat4(-0.0002555198734626174, -0.1321515440940857, 0.01866932027041912, -0.19164212048053741, 0.0471007265150547, 0.060156065970659256, -0.06950772553682327, 0.044123630970716476, -0.05371365323662758, -0.5418363213539124, 0.10120973736047745, 0.030911849811673164, -0.21017906069755554, 0.21480219066143036, -0.3220501244068146, 0.17003528773784637) * l2(-1.0, 1.0);
	r += mat4(0.15449927747249603, 0.1647024303674698, 0.04006043076515198, -0.06865999102592468, -0.03522433713078499, -0.13687282800674438, -0.08147305995225906, -0.004767281468957663, -0.5533475279808044, 0.05758075416088104, -0.5510954260826111, -0.16013652086257935, -0.33172082901000977, 0.11643870174884796, 0.2539801597595215, -0.13481272757053375) * l2(0.0, 1.0);
	r += mat4(0.2090887725353241, -0.1711406260728836, 0.137881338596344, -0.10091826319694519, -0.1050906702876091, -0.1470969170331955, 0.056144434958696365, -0.07467583566904068, 0.500287652015686, -0.08227099478244781, -0.02403242141008377, 0.22610606253147125, 0.07641612738370895, -0.1518470048904419, 0.19499729573726654, 0.06375136226415634) * l2(1.0, 1.0);
	r += mat4(-0.07809491455554962, -0.05628693476319313, 0.05234992504119873, -0.022754935547709465, -0.07450373470783234, -0.12546506524085999, 0.038578733801841736, 0.06013946607708931, 0.01936117373406887, -0.2763670086860657, 0.06509843468666077, 0.019940394908189774, 0.09666437655687332, -0.21039855480194092, 2.0292911358410493e-05, -0.08024664223194122) * l3(-1.0, -1.0);
	r += mat4(-0.05416632071137428, 0.05773903802037239, -0.0061044287867844105, -0.024402756243944168, -0.09935393184423447, 0.028381982818245888, -0.03790279105305672, -0.02120416797697544, 0.17634114623069763, -0.3576948940753937, 0.004077110439538956, 0.008728296495974064, -0.00919609796255827, 0.06711586564779282, 0.10233115404844284, -0.16164454817771912) * l3(0.0, -1.0);
	r += mat4(-0.03568703681230545, 0.019783277064561844, 0.01067238487303257, -0.022042876109480858, -0.10069119185209274, 0.11351097375154495, 0.08444631099700928, 0.2785849869251251, 0.12102490663528442, 0.06536367535591125, 0.0325300432741642, 0.03396213799715042, 0.1347334384918213, -0.024971581995487213, 0.1527569442987442, 0.053793150931596756) * l3(1.0, -1.0);
	r += mat4(-0.057490959763526917, 0.0012252992019057274, 0.03271803259849548, -0.0598909892141819, -0.060198165476322174, -0.014758340083062649, 0.008113809861242771, -0.07040687650442123, -0.14991502463817596, 0.028339849784970284, 0.08391812443733215, 0.18364602327346802, -0.2462228387594223, -0.17668692767620087, -0.038858067244291306, -0.1420571506023407) * l3(-1.0, 0.0);
	r += mat4(0.0960230827331543, 0.0607924647629261, 0.02709374390542507, -0.0881509855389595, 0.24932801723480225, -0.19832541048526764, 0.04420384019613266, -0.25834351778030396, -0.09449252486228943, -0.33194926381111145, 0.05849556252360344, 0.13349907100200653, -0.4619218707084656, 0.01387377455830574, -0.2263074368238449, 0.2395268827676773) * l3(0.0, 0.0);
	r += mat4(-0.04666644334793091, 0.0699956938624382, -0.033766672015190125, 0.058829277753829956, 0.10990621894598007, 0.12137821316719055, 0.04571622610092163, -0.09109041094779968, 0.26730015873908997, -0.006440191064029932, -0.07645417749881744, -0.08026360720396042, -0.533203125, 0.6688629984855652, -0.1502288281917572, -0.19580833613872528) * l3(1.0, 0.0);
	r += mat4(-0.006670320872217417, -0.1129070371389389, -0.06342945247888565, -0.0071946484968066216, -0.007058578077703714, -0.16539235413074493, -0.0076841372065246105, 0.08532767742872238, 0.038750890642404556, -0.2090332806110382, 0.1081492155790329, -0.05445113033056259, -0.04049494117498398, -0.12387985736131668, -0.2009354829788208, -0.1228107437491417) * l3(-1.0, 1.0);
	r += mat4(-0.14125053584575653, -0.10575631260871887, 0.040517088025808334, 0.0706673189997673, 0.10786913335323334, -0.11294829100370407, 0.2852852940559387, 0.04778044670820236, -0.022833500057458878, -0.31098249554634094, -0.1162213459610939, -0.107045479118824, 0.07362186908721924, 0.11862510442733765, -0.1634637415409088, 0.1959238350391388) * l3(0.0, 1.0);
	r += mat4(-0.06929890811443329, 0.0818021222949028, 0.007715620566159487, 0.07174531370401382, -0.06820305436849594, 0.14053918421268463, -0.028809132054448128, -0.04993017762899399, -0.03813411667943001, 0.12936097383499146, -0.20556333661079407, 0.028239814564585686, -0.0015135108260437846, -0.053108230233192444, 0.12200164794921875, 0.02972651645541191) * l3(1.0, 1.0);
	r += vec4(-0.002754033776000142, 0.0012215295573696494, 8.293018618132919e-05, -0.06807257235050201);
	return max(r, 0.0);
}

//!DESC CuNNy-1x16-RCAS-DS-conv1:3
//!HOOK LUMA
//!BIND up_0
//!BIND up_1
//!BIND up_2
//!BIND up_3
//!SAVE conv1_3
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define l0(x, y) up_0_texOff(vec2(x, y))
#define l1(x, y) up_1_texOff(vec2(x, y))
#define l2(x, y) up_2_texOff(vec2(x, y))
#define l3(x, y) up_3_texOff(vec2(x, y))
vec4 hook() {
	vec4 r = vec4(0.0);
	r += mat4(-0.24951188266277313, -0.1713796854019165, 0.13569067418575287, 0.1174992099404335, -0.5673043727874756, -0.4289186894893646, 0.09399359673261642, 0.3575078248977661, 0.12448152154684067, 0.17041465640068054, 0.05951429158449173, 0.057226262986660004, 0.1676023006439209, -0.006667529698461294, 0.28212931752204895, 0.20688703656196594) * l0(-1.0, -1.0);
	r += mat4(-0.07209861278533936, -0.026256758719682693, -0.03928075730800629, 0.0333343967795372, 0.030962174758315086, 0.11602550745010376, -0.03238629177212715, 0.39788898825645447, 0.24613314867019653, 0.20481973886489868, 0.20144183933734894, 0.06791941821575165, 0.41695696115493774, -0.07018168270587921, -0.0412324033677578, -0.2798052132129669) * l0(0.0, -1.0);
	r += mat4(-0.09891830384731293, -0.1066579595208168, 0.11909169703722, 0.2644520401954651, 0.01857435703277588, 0.008016839623451233, 0.3187963366508484, 0.07442866265773773, 0.039994530379772186, 0.13150577247142792, 0.1174507886171341, -0.013433811254799366, -0.37375691533088684, 0.11457714438438416, 0.23459966480731964, -0.13310042023658752) * l0(1.0, -1.0);
	r += mat4(-0.05269593000411987, 0.010758556425571442, -0.04402538761496544, 0.06889216601848602, 0.4045136868953705, 0.2952367663383484, 0.3877405822277069, -0.046610817313194275, 0.15303370356559753, 0.03926786407828331, -0.1971065104007721, -0.20560242235660553, 0.5701351761817932, 0.45411545038223267, 0.1398766040802002, 0.1267443299293518) * l0(-1.0, 0.0);
	r += mat4(0.533101499080658, 0.45404019951820374, 0.009901929646730423, 0.39806848764419556, 0.09617647528648376, -0.3525650203227997, -0.10970155894756317, 0.6189870834350586, 0.26483285427093506, 0.09767153859138489, 0.33050185441970825, -0.18755020201206207, -0.0749947726726532, 0.04236399009823799, 0.32513484358787537, 0.5769782662391663) * l0(0.0, 0.0);
	r += mat4(0.40280258655548096, 0.06899682432413101, 0.5082443952560425, 0.27832096815109253, 0.0758930891752243, 0.14964722096920013, -0.12280521541833878, 0.1343679130077362, 0.11546541005373001, 0.09002795070409775, -0.08866771310567856, 0.037335075438022614, 0.9043091535568237, 0.012398259714245796, 0.027236348018050194, 0.2158079892396927) * l0(1.0, 0.0);
	r += mat4(-0.736325740814209, 0.23030443489551544, -0.07678456604480743, -0.46852967143058777, 0.31589406728744507, 0.3524723947048187, -0.47415512800216675, 0.4362907409667969, 0.07124875485897064, -0.5060511827468872, -0.14642691612243652, 0.0678286924958229, 0.43289944529533386, -0.053869448602199554, -0.7997076511383057, 0.2701858580112457) * l0(-1.0, 1.0);
	r += mat4(-0.10136473178863525, -0.1790897399187088, -0.021350037306547165, -0.21896910667419434, 0.020467527210712433, 0.21172620356082916, 0.3857448995113373, 0.32714712619781494, -0.036811091005802155, -0.56155925989151, -0.4089941382408142, -0.23779623210430145, 0.4297545254230499, -0.08634422719478607, -0.7755725383758545, 0.1341671645641327) * l0(0.0, 1.0);
	r += mat4(-0.23460333049297333, 0.26855531334877014, 0.16363318264484406, -0.27439725399017334, 0.14112718403339386, 0.3055696487426758, 0.24021781980991364, -0.2819136083126068, -0.10494642704725266, -0.4130321741104126, -0.3976271450519562, -0.056385114789009094, 0.018636565655469894, 0.04679490998387337, -0.5948741436004639, -0.3725883662700653) * l0(1.0, 1.0);
	r += mat4(0.3601152002811432, 0.11188079416751862, -0.00911709014326334, 0.0409737154841423, 0.3663623332977295, 0.08838046342134476, 0.20428511500358582, 0.04069141298532486, -0.09817185252904892, -0.047071103006601334, -0.22924283146858215, -0.08568113297224045, 0.06576687842607498, 0.25669363141059875, 0.10955620557069778, 0.11041080951690674) * l1(-1.0, -1.0);
	r += mat4(0.2067045122385025, 0.16170690953731537, -0.32468563318252563, -0.21768750250339508, 0.6560501456260681, -0.21949444711208344, -0.10594166070222855, -3.5654921531677246, 0.04857024550437927, -0.020368089899420738, -0.02012806199491024, 0.029204431921243668, 0.20760881900787354, 0.4677157700061798, 0.03330342471599579, -0.3008681535720825) * l1(0.0, -1.0);
	r += mat4(-0.04093930497765541, 0.08014550060033798, 0.0444197878241539, -0.03901116922497749, -0.4397071897983551, -1.3923594951629639, -3.759772777557373, -0.9131293296813965, 0.11309277266263962, 0.01402984093874693, -0.06948986649513245, -0.10818949341773987, -0.004662283230572939, 0.11782107502222061, 0.12228208035230637, -0.22615982592105865) * l1(1.0, -1.0);
	r += mat4(-0.01791054755449295, -0.38693833351135254, 0.11549358069896698, -0.2841796875, -0.09956502169370651, 0.5529146790504456, 0.17944401502609253, 0.02677254006266594, 0.02755468338727951, 0.005525017622858286, -0.1284187138080597, 0.12367114424705505, 0.017117641866207123, -0.307466596364975, -0.01586790569126606, -0.060016050934791565) * l1(-1.0, 0.0);
	r += mat4(-0.4245659112930298, -0.23181861639022827, -0.19099199771881104, -0.4681198000907898, -0.1487770676612854, -1.5857913494110107, 0.2403983175754547, -0.5968144536018372, 0.013166779652237892, -0.09079895168542862, 0.40187227725982666, -0.2622602880001068, -0.4047528803348541, -0.39943641424179077, -0.3434002101421356, -0.21583232283592224) * l1(0.0, 0.0);
	r += mat4(-0.28508809208869934, -0.23047740757465363, -0.2448434978723526, 0.20832574367523193, -0.3677121698856354, -0.8608436584472656, -0.11204572021961212, -1.014417290687561, -0.6434038877487183, -0.000529872311744839, -0.16381072998046875, -0.26729753613471985, 0.055763546377420425, 0.03968575596809387, -0.04365069419145584, -0.602056622505188) * l1(1.0, 0.0);
	r += mat4(-0.13501276075839996, 0.17850862443447113, 0.18464277684688568, 0.25679782032966614, 0.22902709245681763, 0.03762197867035866, -0.46047040820121765, 0.030942466109991074, -0.21076351404190063, -0.2522973120212555, -0.04155615344643593, -0.14501522481441498, 0.025141838937997818, 0.01235712319612503, -0.3057168424129486, -0.010433075949549675) * l1(-1.0, 1.0);
	r += mat4(-0.15170395374298096, 0.17175088822841644, 0.1128498986363411, -0.007707709912210703, 0.02686154842376709, 0.5235286951065063, 0.13326188921928406, 0.2530137002468109, -0.23538941144943237, 0.13461482524871826, 0.05776718631386757, -0.2068631798028946, 0.16690918803215027, 0.06585822999477386, -0.15832102298736572, -0.056710537523031235) * l1(0.0, 1.0);
	r += mat4(0.00796195026487112, 0.010132620111107826, 0.03973254933953285, 0.1859291046857834, -0.7125654220581055, 0.27552667260169983, 0.5424410104751587, 0.8610135316848755, 0.0792168453335762, -0.15478546917438507, 0.17724654078483582, 0.18682946264743805, 0.025003336369991302, -0.060461219400167465, -0.11158591508865356, 0.035269271582365036) * l1(1.0, 1.0);
	r += mat4(-0.05046882852911949, 0.009759373031556606, 0.17929017543792725, -0.03877410292625427, -0.019324714317917824, 0.09261862188577652, -0.06191396340727806, 0.0066797914914786816, 0.04348974674940109, -0.1827164888381958, -0.06031893193721771, -0.13330666720867157, -0.04870720952749252, -0.0958092212677002, -0.19384677708148956, -0.0800907164812088) * l2(-1.0, -1.0);
	r += mat4(0.05233197659254074, -0.002716527320444584, -0.06140432134270668, 0.15185506641864777, 0.023189133033156395, -0.0033224928192794323, 0.368026465177536, -0.149813711643219, -0.047960687428712845, -0.1733812689781189, -0.20531277358531952, 0.2624455988407135, -0.06654894351959229, -0.42421653866767883, -0.036209169775247574, 0.23095446825027466) * l2(0.0, -1.0);
	r += mat4(-0.13858437538146973, -0.27050796151161194, 0.15029309689998627, 0.11401408165693283, 0.05578634515404701, -0.025660987943410873, -0.16454094648361206, -0.23977316915988922, 0.050644706934690475, 0.05569855868816376, -0.0682305097579956, 0.21435469388961792, 0.00737451808527112, 0.12164746969938278, -0.31738391518592834, 0.02340403012931347) * l2(1.0, -1.0);
	r += mat4(0.11571460962295532, -0.24165545403957367, -0.035416129976511, 0.16948702931404114, 0.19056731462478638, -0.10656377673149109, -0.06028149649500847, 0.11347859352827072, -0.09816718101501465, 0.24266362190246582, 0.1764509230852127, -0.15038830041885376, 0.24999040365219116, 0.21715548634529114, -0.05143936723470688, 0.5032703280448914) * l2(-1.0, 0.0);
	r += mat4(-0.2980366051197052, 0.03637494146823883, -0.5957288146018982, -0.06117325648665428, -0.18245916068553925, -0.11303393542766571, -0.6158332228660583, -0.34035053849220276, 0.27935224771499634, 0.3769569993019104, 0.31589120626449585, 0.1673971563577652, 0.11515181511640549, 0.42452341318130493, 0.6361844539642334, 0.3031630516052246) * l2(0.0, 0.0);
	r += mat4(-0.29109635949134827, 0.15710139274597168, -0.19787359237670898, -0.15288905799388885, 0.1257665902376175, -0.11255677789449692, 0.11794386804103851, 0.02652919478714466, -0.2688654363155365, 0.11527718603610992, 0.058134909719228745, -0.30121442675590515, 0.33177849650382996, -0.08111967891454697, 0.26590847969055176, -0.5467022657394409) * l2(1.0, 0.0);
	r += mat4(0.020637962967157364, 0.3756873309612274, 0.3109527826309204, 0.02400033548474312, 0.13334208726882935, -0.05696546658873558, 0.03192497417330742, 0.07495009154081345, 0.02880147472023964, -0.0618211068212986, -0.056387707591056824, -0.06515096127986908, -0.1254766285419464, -0.1979069858789444, 0.014318173751235008, -0.08654345571994781) * l2(-1.0, 1.0);
	r += mat4(-0.3935058116912842, -0.2821185290813446, 0.5030354857444763, -0.08984141796827316, -0.18112581968307495, -0.05676005780696869, -0.09404519945383072, -0.2837231159210205, -0.3640340566635132, -0.274700403213501, 0.12102728337049484, 0.0943751186132431, 0.2151258885860443, -0.36483919620513916, -0.6817151308059692, -0.08134563267230988) * l2(0.0, 1.0);
	r += mat4(-0.10885781049728394, 0.10697022825479507, 0.20159156620502472, 0.189021036028862, -0.17246288061141968, -0.19512790441513062, -0.12175451219081879, 0.0722690150141716, 0.038654059171676636, 0.22528518736362457, -0.04459092393517494, 0.26679152250289917, -0.3040076792240143, -0.38483527302742004, -0.2734285295009613, -0.2557700276374817) * l2(1.0, 1.0);
	r += mat4(-0.03154139965772629, -0.019236383959650993, -0.01425247360020876, -0.03982717543840408, 0.01918203756213188, 0.02434648759663105, -0.0073083811439573765, 0.2646486461162567, 0.027039451524615288, 0.1822522133588791, 0.15569660067558289, -0.06850259751081467, -0.3262958526611328, -0.28711822628974915, 0.005175686441361904, -0.29575610160827637) * l3(-1.0, -1.0);
	r += mat4(0.015467769466340542, -0.01452032569795847, -0.04717395082116127, 0.05005801469087601, -0.23489488661289215, -0.04014097899198532, -0.26690438389778137, 0.05735565349459648, 0.08863243460655212, 0.14978936314582825, 0.16654366254806519, -0.23372167348861694, -0.6311065554618835, -0.5292723178863525, -0.17972667515277863, 0.09978113323450089) * l3(0.0, -1.0);
	r += mat4(0.056515030562877655, -0.0006029351498000324, 0.007680558133870363, -0.008922241628170013, -0.207490012049675, -0.14820146560668945, -0.10639185458421707, -0.16728368401527405, -0.1109166368842125, 0.034644827246665955, 0.41873738169670105, -0.027352958917617798, 0.013321250677108765, -0.3170660436153412, -0.19415536522865295, -0.08193521201610565) * l3(1.0, -1.0);
	r += mat4(0.05708317086100578, 0.05128471180796623, -0.06663957238197327, 0.1515505462884903, 0.22815744578838348, -0.1350059062242508, 0.014201769605278969, 0.29948633909225464, -0.16930748522281647, -0.3797890245914459, -0.3366893231868744, -0.14099356532096863, -0.5055601596832275, 0.1655234694480896, -0.039856236428022385, 0.36196961998939514) * l3(-1.0, 0.0);
	r += mat4(-0.012126334942877293, 0.04209182783961296, 0.040165819227695465, 0.27097880840301514, -0.42804092168807983, -0.005362716969102621, -0.1465235948562622, -0.4563854932785034, -0.03185568004846573, -0.16626973450183868, -0.43659695982933044, -0.3256497383117676, -0.3213338851928711, -0.003016849746927619, 0.034021809697151184, 0.2642359435558319) * l3(0.0, 0.0);
	r += mat4(0.08272705972194672, -0.0017217878485098481, 0.07332416623830795, 0.001836473005823791, 0.23145408928394318, -0.30615633726119995, 0.143606036901474, 0.09852180629968643, -0.08570545166730881, 0.024500945582985878, -0.3494124412536621, 0.19916002452373505, 0.05887493118643761, -0.0861871987581253, -0.05790160968899727, -0.01084936037659645) * l3(1.0, 0.0);
	r += mat4(0.02061810903251171, 0.07364583760499954, 0.035193100571632385, 0.0686730220913887, -0.10216909646987915, 0.07582978159189224, 0.012636850588023663, 0.04407337307929993, -0.24672384560108185, 0.06255143135786057, -0.04333138465881348, -0.06261254101991653, 0.23244914412498474, 0.6660176515579224, 0.21453024446964264, 0.12283097952604294) * l3(-1.0, 1.0);
	r += mat4(0.043953049927949905, 0.13754604756832123, -0.03050345927476883, -0.2103533297777176, -0.0681292712688446, -0.02954789623618126, 0.45282241702079773, -0.09698127955198288, -0.20360596477985382, 0.08690525591373444, 0.352796733379364, 0.10003646463155746, 0.08697371929883957, 0.5840483903884888, 0.22328360378742218, -0.08026327937841415) * l3(0.0, 1.0);
	r += mat4(0.10026396811008453, -0.010618475265800953, -0.03516395762562752, -0.18211795389652252, 0.30761513113975525, 0.24551628530025482, -0.002061600564047694, -0.03964293748140335, 0.23424623906612396, 0.42555567622184753, 0.1771530658006668, 0.031620949506759644, 0.05945414677262306, 0.328326016664505, 0.48239651322364807, -0.09229803085327148) * l3(1.0, 1.0);
	r += vec4(-0.03163973614573479, 0.00541803240776062, -0.011834992095828056, 0.0038072664756327868);
	return max(r, 0.0);
}

//!DESC CuNNy-1x16-RCAS-DS-down
//!HOOK LUMA
//!BIND conv1_0
//!BIND conv1_1
//!BIND conv1_2
//!BIND conv1_3
//!SAVE down
//!WIDTH LUMA.w
//!HEIGHT LUMA.h
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
#define l0(x, y) conv1_0_texOff(vec2(x, y))
#define l1(x, y) conv1_1_texOff(vec2(x, y))
#define l2(x, y) conv1_2_texOff(vec2(x, y))
#define l3(x, y) conv1_3_texOff(vec2(x, y))
vec4 hook() {
	vec4 r = vec4(0.0);
	r += mat4(-0.11998235434293747, 0.04847557842731476, -0.057910237461328506, 0.0007909024134278297, -0.11145561933517456, 0.04055196791887283, -0.040731336921453476, 0.044303424656391144, 0.011323628947138786, -0.004348483867943287, 0.0408928319811821, -0.029361940920352936, -0.09373778104782104, 0.03704395890235901, 0.02760598622262478, 0.045293278992176056) * l0(-1.0, -1.0);
	r += mat4(0.6926713585853577, 0.06481169164180756, -0.20699945092201233, -0.29107892513275146, -0.1452593058347702, 0.03718206658959389, 0.027772868052124977, 0.03768249973654747, 0.1022961363196373, 0.0787755697965622, -0.020648334175348282, 0.02179035171866417, -0.29417213797569275, -0.3272305727005005, 0.011686534620821476, -0.08520267903804779) * l0(0.0, -1.0);
	r += mat4(-0.038620442152023315, 0.34668004512786865, -0.11694280803203583, -0.029730327427387238, 0.033592481166124344, -0.02619161643087864, -0.021058978512883186, -0.042099788784980774, -0.10405568033456802, -0.10923724621534348, 0.08854150772094727, 0.16348636150360107, -0.03040405921638012, -0.13339824974536896, 0.033857956528663635, 0.09300382435321808) * l0(1.0, -1.0);
	r += mat4(-0.00434812530875206, -0.034671470522880554, -0.09398330003023148, 0.026079392060637474, 0.045852240175008774, -0.233900249004364, -0.08833034336566925, -0.07845477759838104, -0.058953993022441864, 0.006792296189814806, -0.03382222354412079, 0.02349400706589222, -0.11388839036226273, 0.03374680504202843, -0.2783389091491699, -0.04282109811902046) * l0(-1.0, 0.0);
	r += mat4(-0.15594281256198883, 0.10981158167123795, 0.39128410816192627, 0.3980026841163635, -0.5471943616867065, 0.7837586402893066, -0.5449231266975403, 0.38113370537757874, 0.15010137856006622, -0.13629229366779327, 0.2664540410041809, -0.03784565627574921, 0.8106495141983032, 0.3878377079963684, 0.015267957001924515, -0.15478762984275818) * l0(0.0, 0.0);
	r += mat4(-0.02422628551721573, -0.1999020129442215, -0.113665372133255, -0.13430649042129517, 0.10503258556127548, -0.17750713229179382, 0.09985484182834625, -0.07202431559562683, -0.40355461835861206, 0.7566527724266052, -0.6514681577682495, -0.010554179549217224, 0.006450137123465538, 0.28385213017463684, -0.14215347170829773, -0.205378919839859) * l0(1.0, 0.0);
	r += mat4(0.02105061523616314, -0.012058857828378677, 0.028750522062182426, -0.04603336751461029, -0.11652404814958572, -0.03099849447607994, -0.014008442871272564, -0.16963811218738556, -0.0011854080948978662, -0.02315295860171318, -0.03842824697494507, -0.006907178554683924, -0.09104257822036743, 0.01569608971476555, -0.06008737161755562, 0.033369001001119614) * l0(-1.0, 1.0);
	r += mat4(-0.03405173122882843, -0.017595335841178894, -0.06998520344495773, 0.02060031145811081, -0.11577863991260529, 0.13151223957538605, -0.27528613805770874, 0.5580622553825378, -0.03208787366747856, -0.01007278822362423, -0.03546062856912613, -0.10938695818185806, -0.015839383006095886, -0.0953259989619255, 0.42483481764793396, 0.17116980254650116) * l0(0.0, 1.0);
	r += mat4(-0.010190771892666817, -0.013051068410277367, 0.009731777012348175, -0.0050983913242816925, 0.004777022637426853, -0.06196441128849983, 0.03925042599439621, -0.17622853815555573, -0.05368039011955261, -0.009104970842599869, -0.11506030708551407, 0.38708165287971497, -0.056565508246421814, -0.10628489404916763, -0.05703016743063927, 0.0633149966597557) * l0(1.0, 1.0);
	r += mat4(0.18577361106872559, 0.07159402221441269, -0.18999198079109192, -0.015168420970439911, -0.0926203727722168, -0.007042149547487497, -0.02852240391075611, -0.027198391035199165, -0.00482237059623003, -0.006215978413820267, 0.019640933722257614, 0.0201566144824028, -0.011082028970122337, 0.05187755823135376, -0.04469430446624756, 0.019722573459148407) * l1(-1.0, -1.0);
	r += mat4(-0.20377174019813538, -0.006072850897908211, -0.10914871096611023, -0.22614243626594543, 0.06140580028295517, -0.06274567544460297, 0.015874775126576424, -0.013077915646135807, -0.13233034312725067, -0.1042591854929924, -0.01701163686811924, -0.005855690687894821, 0.1554136574268341, -0.13415062427520752, 0.08028996735811234, 0.015714436769485474) * l1(0.0, -1.0);
	r += mat4(0.05757385864853859, 0.015323283150792122, 0.021237170323729515, -0.026775365695357323, -0.007746860850602388, 0.0293674785643816, -0.03664974123239517, 0.018445689231157303, -0.008154415525496006, -0.0684611052274704, 0.04345323517918587, 0.027601879090070724, -0.030253615230321884, 0.0827646255493164, -0.03484947606921196, -0.01290405634790659) * l1(1.0, -1.0);
	r += mat4(-0.2007126808166504, -0.2829250991344452, 0.4779518246650696, -0.018820127472281456, 0.44279032945632935, 0.019233698025345802, -0.21729260683059692, -0.12958848476409912, -0.00639477139338851, -0.07409197837114334, -0.037410669028759, -0.07027357816696167, 0.37221479415893555, 0.020525360479950905, 0.307631254196167, 0.01572008617222309) * l1(-1.0, 0.0);
	r += mat4(-0.06840285658836365, 0.06810617446899414, 0.15709850192070007, 0.7916797995567322, 0.2372707724571228, 0.7096554636955261, 0.02815716527402401, -0.13696497678756714, -0.3174421489238739, -0.07474539428949356, -0.31306323409080505, -0.14912796020507812, 0.06119642034173012, -0.6076206564903259, 0.05942191556096077, -0.7245585918426514) * l1(0.0, 0.0);
	r += mat4(-0.12121263891458511, -0.1792876124382019, 0.001646082615479827, -0.07982416450977325, -0.054815709590911865, -0.07563681155443192, -0.14591267704963684, -0.058883242309093475, -0.034179992973804474, -0.2688009738922119, -0.03157994523644447, -0.1811586320400238, 0.011406851932406425, 0.11389927566051483, 0.03770545497536659, 0.1279587745666504) * l1(1.0, 0.0);
	r += mat4(-0.006724302191287279, 0.006976791191846132, -0.24169906973838806, -0.12384674698114395, -0.27392640709877014, -0.030388042330741882, 0.31189829111099243, 0.11693096905946732, 0.025199485942721367, 0.0306988675147295, 0.04043413698673248, -0.012385992333292961, -0.012478879652917385, 0.011975400149822235, 0.07837537676095963, 0.033179499208927155) * l1(-1.0, 1.0);
	r += mat4(-0.03222522512078285, -0.026742378249764442, -0.07367194443941116, -0.1801648736000061, -0.15967819094657898, -0.4446745216846466, -0.41207143664360046, -0.10027581453323364, -0.03617345541715622, 0.0062901051715016365, -0.1534152626991272, 0.025013310834765434, 0.042814165353775024, 0.006396440789103508, 0.12023422867059708, -0.08410577476024628) * l1(0.0, 1.0);
	r += mat4(0.011623565107584, 0.019863560795783997, 0.023162422701716423, 0.015727737918496132, 0.0984162837266922, 0.12960432469844818, 0.07788768410682678, 0.00985669158399105, 0.03512122109532356, -0.04680447652935982, 0.026015421375632286, -0.14409177005290985, 0.01044154167175293, 0.0078849783167243, -0.02714620903134346, 0.03885085880756378) * l1(1.0, 1.0);
	r += mat4(-0.057119470089673996, -0.05242122337222099, -0.014417859725654125, 0.04115959256887436, 0.008692435920238495, 0.07160840928554535, 0.09834316372871399, 0.04509707912802696, 0.037182096391916275, 0.02591690793633461, 0.036705899983644485, -0.02307531051337719, 0.07482133060693741, 0.010294411331415176, 0.039385836571455, -0.025907915085554123) * l2(-1.0, -1.0);
	r += mat4(0.043917182832956314, 0.047896888107061386, -0.10082250833511353, -0.07975716888904572, 0.23972585797309875, -0.09305974096059799, 0.015220662578940392, -0.14467640221118927, 0.019778573885560036, 0.0027974240947514772, 0.12526996433734894, 0.11851430684328079, 0.14649976789951324, 0.1997126042842865, 0.05458156764507294, 0.10441780835390091) * l2(0.0, -1.0);
	r += mat4(-0.045624785125255585, -0.0393555611371994, 0.0023553490173071623, -0.06084804609417915, -0.05432654917240143, 0.022890888154506683, -0.01346710417419672, 0.0351114347577095, 0.022112654522061348, 0.04062805697321892, -0.034803666174411774, 0.032085344195365906, 0.030759921297430992, 0.045137856155633926, 0.005838755983859301, -0.00028473950806073844) * l2(1.0, -1.0);
	r += mat4(-0.04483973979949951, -0.17049729824066162, -0.06656656414270401, -0.19026000797748566, -0.3701406419277191, 0.13720570504665375, -0.37805894017219543, 0.051111429929733276, -0.02196822129189968, 0.1062190979719162, -0.032105691730976105, 0.09008572995662689, 0.14799931645393372, 0.03267958387732506, 0.11768505722284317, 0.024592747911810875) * l2(-1.0, 0.0);
	r += mat4(0.3787703216075897, 0.36638692021369934, 0.4267578721046448, 0.39251577854156494, 0.5410157442092896, -0.520005464553833, 0.5411589741706848, -0.19100438058376312, -0.3919702172279358, -0.35407665371894836, -0.32402148842811584, -0.3159933388233185, 0.3286939263343811, 0.3473988175392151, 0.3065856397151947, 0.2826278507709503) * l2(0.0, 0.0);
	r += mat4(-0.10619966685771942, 0.021994665265083313, -0.09152895212173462, 0.049698375165462494, -0.09125809371471405, 0.2183999866247177, -0.10481179505586624, 0.10804099589586258, 0.09620760381221771, -0.059743646532297134, 0.08404367417097092, -0.05260789394378662, 0.09146237373352051, 0.14273126423358917, 0.08907771855592728, 0.1982542872428894) * l2(1.0, 0.0);
	r += mat4(0.004712878260761499, 0.04069731384515762, -0.028524640947580338, -0.03589833527803421, 0.05833985656499863, 0.021244734525680542, -0.03306904435157776, 0.1208680272102356, 0.05035753548145294, -0.00832600798457861, 0.06392094492912292, 0.062113117426633835, 0.018888479098677635, -0.021949898451566696, 0.09514809399843216, 0.013526635244488716) * l2(-1.0, 1.0);
	r += mat4(-0.12119042873382568, -0.09260234236717224, -0.019617969170212746, 0.010708725079894066, 0.038686808198690414, -0.09604763984680176, 0.24667569994926453, -0.4075629711151123, 0.10770192742347717, 0.11111918836832047, -0.05896783247590065, -0.038004521280527115, 0.165521502494812, 0.16830198466777802, 0.21786753833293915, 0.29004549980163574) * l2(0.0, 1.0);
	r += mat4(0.01770101487636566, -0.04755866527557373, -0.040030285716056824, -0.054483551532030106, -0.030734090134501457, 0.020765291526913643, -0.03893435001373291, 0.14046111702919006, -0.018154170364141464, 0.04046790674328804, 0.051362063735723495, 0.03970106318593025, -0.016848498955368996, 0.02770138345658779, 0.06549631804227829, 0.04711221903562546) * l2(1.0, 1.0);
	r += mat4(0.11478344351053238, 0.10960067808628082, 0.17238664627075195, 0.07329345494508743, 0.0012454654788598418, 0.024913407862186432, 0.018167005851864815, 0.012463746592402458, 0.10351434350013733, -0.008390633389353752, 0.023673517629504204, 0.01745329611003399, -0.049455754458904266, -0.08628396689891815, -0.011023879051208496, 0.012554079294204712) * l3(-1.0, -1.0);
	r += mat4(-0.5969999432563782, -0.4144059419631958, 0.107508085668087, 0.2124231606721878, -0.28767895698547363, -0.13149234652519226, 0.13548168540000916, 0.05031886324286461, 0.2045006901025772, 0.24774952232837677, -0.07503125071525574, -0.03723294287919998, -0.09268243610858917, 0.2822278141975403, -0.03247326239943504, -0.027885794639587402) * l3(0.0, -1.0);
	r += mat4(-0.021372366696596146, -0.31785938143730164, -0.004116016440093517, -0.07933767884969711, 0.08418264985084534, -0.07495947927236557, 0.0472600944340229, 0.16541661322116852, -0.018448900431394577, 0.05241437256336212, 0.005949333310127258, -0.04131818935275078, 0.07461300492286682, -0.16850952804088593, 0.06734228134155273, 0.03918491676449776) * l3(1.0, -1.0);
	r += mat4(-0.09280651062726974, -0.10037609189748764, -0.22542335093021393, 0.10914245992898941, 0.06793820858001709, 0.028657082468271255, 0.02329537458717823, -0.006693203467875719, -0.31265050172805786, -0.027181662619113922, 0.13542991876602173, 0.05079289525747299, 0.2456316351890564, -0.168916255235672, 0.10961198061704636, -0.169784277677536) * l3(-1.0, 0.0);
	r += mat4(0.3762979805469513, 0.27776119112968445, 0.3278134763240814, -0.4292115569114685, 0.29558274149894714, 0.23194006085395813, -0.7406333684921265, -0.1549588292837143, -0.5275210738182068, -0.6563847661018372, 0.6276594400405884, 0.4033251702785492, -0.8112803101539612, 0.2772931158542633, -0.38336965441703796, 0.7297281622886658) * l3(0.0, 0.0);
	r += mat4(-0.08395951241254807, -0.034389469772577286, 0.08395175635814667, 0.3145383894443512, -0.0008154412498697639, 0.1579834669828415, -0.10260125994682312, -0.6620489954948425, 0.02654239721596241, -0.12940315902233124, 0.003242068225517869, 0.318815678358078, 0.16357389092445374, -0.141075998544693, 0.12945981323719025, -0.30371013283729553) * l3(1.0, 0.0);
	r += mat4(0.011881208047270775, -0.057650309056043625, 0.050440315157175064, -0.033650487661361694, 0.020388716831803322, 0.01450498029589653, 0.013452611863613129, 0.0019914829172194004, 0.07347437739372253, 0.015375865623354912, 0.026813602074980736, 0.04650033265352249, 0.020048458129167557, -0.043185628950595856, 0.13852612674236298, -0.06903286278247833) * l3(-1.0, 1.0);
	r += mat4(-0.02707628533244133, 0.018215563148260117, 0.054333873093128204, 0.19610470533370972, -0.03047190234065056, -0.006716776639223099, 0.1153765544295311, 0.0011448245495557785, 0.05847455933690071, 0.10429023951292038, -0.25310274958610535, -0.14125703275203705, 0.07623948901891708, 0.08886890858411789, -0.3147239089012146, 0.0797918438911438) * l3(0.0, 1.0);
	r += mat4(0.007786084432154894, -0.01278524287045002, -0.037541043013334274, -0.09316939115524292, 1.4132880096440203e-05, -7.153773913159966e-05, -0.006301994435489178, 0.13437624275684357, 0.03870582580566406, 0.0512363538146019, 0.052866511046886444, -0.08172083646059036, 0.012827091850340366, 0.03965887427330017, 0.0809011235833168, 0.06276751309633255) * l3(1.0, 1.0);
	r += vec4(0.0012638079933822155, 0.0010046191746369004, 0.001050912425853312, 0.0008503861608915031);
	return tanh(r);
}

//!DESC CuNNy-1x16-RCAS-DS-shuffle
//!HOOK LUMA
//!BIND down
//!BIND rcas
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 1
//!WHEN OUTPUT.w LUMA.w / 1.3 > OUTPUT.h LUMA.h / 1.3 > *
vec4 hook() {
	vec4 r = vec4(0.0);
	vec2 f = fract(down_pos * down_size);
	ivec2 i = ivec2(f * vec2(2.0));
	r.r = down_tex((vec2(0.5) - f) * down_pt + down_pos)[2*i.y + i.x];
	r.r += rcas_tex(rcas_pos).r;
	r.a = 1.0;
	return clamp(r, 0.0, 1.0);
}
